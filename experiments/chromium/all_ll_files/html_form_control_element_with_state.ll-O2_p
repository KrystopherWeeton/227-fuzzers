; ModuleID = '../../third_party/blink/renderer/core/html/forms/html_form_control_element_with_state.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/html_form_control_element_with_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<WTF::AtomicString, blink::(anonymous namespace)::AutoCompleteCategory, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::(anonymous namespace)::AutoCompleteCategory>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<WTF::AtomicString, blink::(anonymous namespace)::AutoCompleteCategory, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::(anonymous namespace)::AutoCompleteCategory>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.135", i32, [4 x i8], %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.271", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.305", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.312", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.251", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.171" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i64 }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::Worklist.182"* }
%"class.blink::Worklist.182" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.171" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::Worklist.189"* }
%"class.blink::Worklist.189" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.171" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::Worklist.196"* }
%"class.blink::Worklist.196" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.171" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::Worklist.203"* }
%"class.blink::Worklist.203" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.171" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::Worklist.210"* }
%"class.blink::Worklist.210" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.171" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::Worklist.217"* }
%"class.blink::Worklist.217" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.171" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::Worklist.224"* }
%"class.blink::Worklist.224" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.171" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { i64 }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { float }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.254", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.263" }
%"class.WTF::Vector.263" = type { %"class.WTF::VectorBuffer.264" }
%"class.WTF::VectorBuffer.264" = type { %"class.WTF::VectorBufferBase.265" }
%"class.WTF::VectorBufferBase.265" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.293" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.182"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.189"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.196"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.203"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.210"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.542" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.312" = type { %"struct.std::__1::__atomic_base.313" }
%"struct.std::__1::__atomic_base.313" = type { %"struct.std::__1::__cxx_atomic_impl.314" }
%"struct.std::__1::__cxx_atomic_impl.314" = type { %"struct.std::__1::__cxx_atomic_base_impl.315" }
%"struct.std::__1::__cxx_atomic_base_impl.315" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.133", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.133" = type { %"class.base::RefCounted.134" }
%"class.base::RefCounted.134" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HTMLFormControlElementWithState" = type { %"class.blink::HTMLFormControlElement.base", i8, [2 x i8] }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.45", %"class.blink::Member.47", %"class.blink::Member.0", %"class.blink::Member.49", %"class.blink::Member.49", %"class.blink::Member.70", %"class.blink::Member.72", %"class.blink::Member.74", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.76", %"class.blink::HeapVector.78" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.94", %"class.WTF::Vector.94", i8, i32, %"class.blink::Member.105", %"class.blink::Member.107", %"class.blink::Member.109", %"class.blink::Member.111", %"class.blink::Member.113", %"class.blink::Member.115", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.118", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.124", %"class.blink::Member.126", %"class.blink::Member.84", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.129", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.63", %"class.blink::Member.61", %"class.blink::Member.327", %"class.blink::Member.61", %"class.blink::Member.61", %"class.blink::Member.61", %"class.blink::UserActionElementSet", %"class.blink::Member.336", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.343", i16, i8, %"class.blink::Member.350", %"class.blink::Member.352", %"class.blink::Member.354", %"class.blink::Member.356", %"class.blink::TextLinkColors", %"class.blink::Member.358", i8, [7 x i8], %"class.blink::HeapHashMap.360", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.61", %"class.WTF::Vector.367", %"class.blink::Member.372", %"class.blink::Member.374", i8, %"class.blink::Member.61", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.376", %"class.blink::HeapVector.378", %"class.std::__1::unique_ptr.386", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.392", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.405", %"class.WTF::Vector.407", i8, i8, %"class.std::__1::unique_ptr.412", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.63", %"class.blink::HeapVector.418", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.426", i8, i32, %"class.blink::Member.428", %"class.blink::Member.430", %"class.blink::Member.432", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.434", %"class.WTF::HashMap.436", %"class.blink::Member.441", %"class.blink::Member.443", %"class.blink::Member.445", %"class.blink::Member.447", %"class.blink::Member.47", %"class.blink::Member.47", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.449", i8, i32, %"class.blink::Member.456", %"class.blink::Member.458", i32, %"class.blink::Member.460", %"class.blink::Member.462", %"class.blink::Member.464", %"class.std::__1::unique_ptr.466", i64, %"class.std::__1::unique_ptr.472", i32, i32, %"class.blink::Member.478", %"class.blink::Member.480", %"class.blink::Member.482", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.484", %"class.WTF::Vector.486", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.491", %"class.blink::Member.498", %"class.std::__1::unique_ptr.500", %"class.blink::Member.506", i8, i8, %"class.WTF::String", %"class.blink::Member.508", i8, [7 x i8], %"class.blink::HeapHashMap.510", %"class.blink::HeapObserverSet", %"class.blink::Member.524", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.526", i32, i8, i8, %"class.blink::WeakMember.528", %"class.blink::Member.529" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.87" }
%"class.blink::HeapHashMap.87" = type { %"class.WTF::HashMap.90" }
%"class.WTF::HashMap.90" = type { %"class.WTF::HashTable.91" }
%"class.WTF::HashTable.91" = type <{ %"struct.WTF::KeyValuePair.93"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.93" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.94" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.97 }
%class.scoped_refptr.97 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.98" }
%"struct.std::__1::atomic.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__cxx_atomic_impl.101" }
%"struct.std::__1::__cxx_atomic_impl.101" = type { %"struct.std::__1::__cxx_atomic_base_impl.102" }
%"struct.std::__1::__cxx_atomic_base_impl.102" = type { i32 }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.128 }
%class.scoped_refptr.128 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.129" = type { %"class.WTF::VectorBuffer.130" }
%"class.WTF::VectorBuffer.130" = type { %"class.WTF::VectorBufferBase.131" }
%"class.WTF::VectorBufferBase.131" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.132 }
%class.scoped_refptr.132 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.329" }
%"class.blink::HeapHashMap.329" = type { %"class.WTF::HashMap.332" }
%"class.WTF::HashMap.332" = type { %"class.WTF::HashTable.333" }
%"class.WTF::HashTable.333" = type <{ %"struct.WTF::KeyValuePair.335"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.335" = type opaque
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"class.blink::WeakMember.342"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.342" = type opaque
%"class.blink::HeapHashSet.343" = type { %"class.WTF::HashSet.346" }
%"class.WTF::HashSet.346" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"class.blink::WeakMember.349"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.349" = type opaque
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.360" = type { %"class.WTF::HashMap.363" }
%"class.WTF::HashMap.363" = type { %"class.WTF::HashTable.364" }
%"class.WTF::HashTable.364" = type <{ %"struct.WTF::KeyValuePair.366"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.366" = type opaque
%"class.WTF::Vector.367" = type { %"class.WTF::VectorBuffer.368" }
%"class.WTF::VectorBuffer.368" = type { %"class.WTF::VectorBufferBase.369" }
%"class.WTF::VectorBufferBase.369" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.378" = type { %"class.WTF::Vector.381" }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"class.blink::Member.384"*, i32, i32 }
%"class.blink::Member.384" = type opaque
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.392" = type { %"class.WTF::HashSet.395" }
%"class.WTF::HashSet.395" = type { %"class.WTF::HashTable.396" }
%"class.WTF::HashTable.396" = type <{ %"class.blink::WeakMember.398"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.398" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.399", i32, [4 x i8] }>
%"class.WTF::Vector.399" = type { %"class.WTF::VectorBuffer.400" }
%"class.WTF::VectorBuffer.400" = type { %"class.WTF::VectorBufferBase.401" }
%"class.WTF::VectorBufferBase.401" = type { %"struct.std::__1::pair.402"*, i32, i32 }
%"struct.std::__1::pair.402" = type opaque
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.407" = type { %"class.WTF::VectorBuffer.408" }
%"class.WTF::VectorBuffer.408" = type { %"class.WTF::VectorBufferBase.409" }
%"class.WTF::VectorBufferBase.409" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.63" = type { %"class.WTF::Vector.66" }
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::HeapVector.418" = type { %"class.WTF::Vector.421" }
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"class.blink::Member.424"*, i32, i32 }
%"class.blink::Member.424" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.47" }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.436" = type { %"class.WTF::HashTable.437" }
%"class.WTF::HashTable.437" = type <{ %"struct.WTF::KeyValuePair.440"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.440" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.318, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.318 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.319" }>
%"class.base::RefCountedThreadSafe.319" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.320 }
%class.scoped_refptr.320 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.321", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.321" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.322" }
%"struct.std::__1::atomic.322" = type { %"struct.std::__1::__atomic_base.323" }
%"struct.std::__1::__atomic_base.323" = type { %"struct.std::__1::__atomic_base.324" }
%"struct.std::__1::__atomic_base.324" = type { %"struct.std::__1::__cxx_atomic_impl.325" }
%"struct.std::__1::__cxx_atomic_impl.325" = type { %"struct.std::__1::__cxx_atomic_base_impl.326" }
%"struct.std::__1::__cxx_atomic_base_impl.326" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.48" }
%"class.blink::HeapHashSet.449" = type { %"class.WTF::HashSet.452" }
%"class.WTF::HashSet.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ %"class.blink::Member.455"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.455" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.486" = type { %"class.WTF::VectorBuffer.487" }
%"class.WTF::VectorBuffer.487" = type { %"class.WTF::VectorBufferBase.488" }
%"class.WTF::VectorBufferBase.488" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.491" = type { %"class.WTF::HashMap.494" }
%"class.WTF::HashMap.494" = type { %"class.WTF::HashTable.495" }
%"class.WTF::HashTable.495" = type <{ %"struct.WTF::KeyValuePair.497"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.497" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.510" = type { %"class.WTF::HashMap.513" }
%"class.WTF::HashMap.513" = type { %"class.WTF::HashTable.514" }
%"class.WTF::HashTable.514" = type <{ %"struct.WTF::KeyValuePair.516"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.516" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.517" }
%"class.blink::HeapHashSet.517" = type { %"class.WTF::HashSet.520" }
%"class.WTF::HashSet.520" = type { %"class.WTF::HashTable.521" }
%"class.WTF::HashTable.521" = type <{ %"class.blink::WeakMember.523"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.523" = type opaque
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.47", %"class.blink::HeapHashSet.533", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.540", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.533" = type { %"class.WTF::HashSet.536" }
%"class.WTF::HashSet.536" = type { %"class.WTF::HashTable.537" }
%"class.WTF::HashTable.537" = type <{ %"class.blink::Member.539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.539" = type opaque
%"class.blink::HeapTaskRunnerTimer.540" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.541", { i64, i64 } }
%"class.blink::WeakMember.541" = type { %"class.blink::MemberBase.527" }
%"class.blink::WeakMember.528" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.53" }
%"class.blink::HeapHashMap.53" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.57" }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.61", i32, %"class.blink::HeapVector.63" }
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.25" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapHashMap.27"* }
%"class.blink::HeapHashMap.27" = type opaque
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.78" = type { %"class.WTF::Vector.81" }
%"class.WTF::Vector.81" = type { %"class.WTF::VectorBuffer.82" }
%"class.WTF::VectorBuffer.82" = type { %"class.WTF::VectorBufferBase.83" }
%"class.WTF::VectorBufferBase.83" = type { %"class.blink::Member.84"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.19", %"class.blink::Member.21", %"class.blink::Member.43", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.23", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.35", i32, i8, i8, i8, i8 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.30" }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.WTF::VectorBufferBase.32" = type { %"class.blink::Member.33"*, i32, i32 }
%"class.blink::Member.33" = type opaque
%"class.blink::HeapVector.35" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.41"*, i32, i32 }
%"class.blink::Member.41" = type opaque
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.615" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.547", %"class.WTF::String" }
%"class.WTF::StringAppend.547" = type { %"class.WTF::AtomicString", i8* }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.597" }
%"class.WTF::Vector.597" = type { %"class.WTF::VectorBuffer.598" }
%"class.WTF::VectorBuffer.598" = type { %"class.WTF::VectorBufferBase.599", [64 x i8] }
%"class.WTF::VectorBufferBase.599" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.WTF::StringTypeAdapter.642" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.548", %"class.blink::Member.548", %"class.blink::Member.550", %"class.blink::Member.552", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::Event"* }
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.19", %"class.blink::Member.21", %"class.blink::Member.43", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.579" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.567" }
%"class.blink::HeapVector.567" = type { %"class.WTF::Vector.570" }
%"class.WTF::Vector.570" = type { %"class.WTF::VectorBuffer.571" }
%"class.WTF::VectorBuffer.571" = type { %"class.WTF::VectorBufferBase.572", [32 x i8] }
%"class.WTF::VectorBufferBase.572" = type { %"struct.std::__1::pair.573"*, i32, i32 }
%"struct.std::__1::pair.573" = type { %"class.WTF::AtomicString", %"class.blink::Member.574" }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::HeapVector.576"* }
%"class.blink::HeapVector.576" = type opaque
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.WTF::Vector.582"* }
%"class.WTF::Vector.582" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.558, %"class.blink::Member.559", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.558 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.561" }
%"class.blink::Persistent.561" = type { %"class.blink::PersistentBase.562" }
%"class.blink::PersistentBase.562" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.563", i8, [7 x i8] }>
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.586" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.586" = type { %"class.v8::TracedReference.587" }
%"class.v8::TracedReference.587" = type { %"class.v8::BasicTracedReference.588" }
%"class.v8::BasicTracedReference.588" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.589", %"class.WTF::String"* }
%"class.blink::HeapVector.589" = type { %"class.WTF::Vector.592" }
%"class.WTF::Vector.592" = type { %"class.WTF::VectorBuffer.593" }
%"class.WTF::VectorBuffer.593" = type { %"class.WTF::VectorBufferBase.594" }
%"class.WTF::VectorBufferBase.594" = type { %"class.blink::Member"*, i32, i32 }
%"class.WTF::HashMap.596" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::ShadowRoot" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.blink::FormData" = type opaque
%"class.blink::FormControlState" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.605 }
%union.anon.605 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.641" = type { %"class.WTF::StringTypeAdapter.640" }
%"class.WTF::StringTypeAdapter.640" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.639" = type { %"class.WTF::StringTypeAdapter.640" }

$_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv = comdat any

$_ZNK5blink22HTMLFormControlElement14IsEnumeratableEv = comdat any

$_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv = comdat any

$_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv = comdat any

$_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv = comdat any

$_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv = comdat any

$_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb = comdat any

$_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv = comdat any

$_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE = comdat any

$_ZN5blink22HTMLFormControlElement9ResetImplEv = comdat any

$_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv = comdat any

$_ZThn104_NK5blink22HTMLFormControlElement14IsEnumeratableEv = comdat any

$_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE = comdat any

$_ZN5blink13ListedElement27DisabledStateMightBeChangedEv = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink31HTMLFormControlElementWithStateE = hidden unnamed_addr constant { [192 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] } { [192 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElementWithState"*)* @_ZN5blink31HTMLFormControlElementWithStateD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElementWithState"*)* @_ZN5blink31HTMLFormControlElementWithStateD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::Visitor"*)* @_ZNK5blink22HTMLFormControlElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast (void ()* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink22HTMLFormControlElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink22HTMLFormControlElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Event"*)* @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::Document"*)* @_ZN5blink22HTMLFormControlElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.596"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink22HTMLFormControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::Element"*, i32)* @_ZN5blink22HTMLFormControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElementWithState"*)* @_ZN5blink31HTMLFormControlElementWithState21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement14IsEnumeratableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement21ResultForDialogSubmitEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, i1)* @_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, i32)* @_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*)* @_ZN5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement24RequiredAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement13DidChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement9ResetImplEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState18ShouldAutocompleteEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [34 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink22HTMLFormControlElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_N5blink31HTMLFormControlElementWithStateD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_N5blink31HTMLFormControlElementWithStateD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18IsElementInternalsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_NK5blink22HTMLFormControlElement14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7GetNameEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)* @_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11CustomErrorEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11HasBadInputEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement15PatternMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement13RangeOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement14RangeUnderflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12StepMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement8TooShortEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12ValueMissingEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement17validationMessageEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement20ValidationSubMessageEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.WTF::String"*)* @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement16ValidationAnchorEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (void ()* @_ZNK5blink13ListedElement20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)* @_ZN5blink13ListedElement23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement13DidChangeFormEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18RecalcWillValidateEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*)* @_ZThn168_N5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE to i8*)] }, align 8
@_ZN5blink16input_type_names7kHiddenE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kAutocompleteAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"home\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"work\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"mobile\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"fax\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"pager\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"shipping\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"billing\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"section-\00", align 1
@_ZN5blink16event_type_names6kInputE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names7kChangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map = internal global i64 0, align 8
@.str.13 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"honorific-prefix\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"given-name\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"additional-name\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"family-name\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"honorific-suffix\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"nickname\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"organization-title\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"username\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"new-password\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"current-password\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"organization\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"street-address\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"address-line1\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"address-line2\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"address-line3\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"address-level4\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"address-level3\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"address-level2\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"address-level1\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"country\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"country-name\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"postal-code\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"cc-name\00", align 1
@.str.37 = private unnamed_addr constant [14 x i8] c"cc-given-name\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"cc-additional-name\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"cc-family-name\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"cc-number\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"cc-exp\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"cc-exp-month\00", align 1
@.str.43 = private unnamed_addr constant [12 x i8] c"cc-exp-year\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"cc-csc\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"cc-type\00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"transaction-currency\00", align 1
@.str.47 = private unnamed_addr constant [19 x i8] c"transaction-amount\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"bday\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"bday-day\00", align 1
@.str.51 = private unnamed_addr constant [11 x i8] c"bday-month\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"bday-year\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"sex\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"photo\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"tel\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"tel-country-code\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"tel-national\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"tel-area-code\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"tel-local\00", align 1
@.str.61 = private unnamed_addr constant [17 x i8] c"tel-local-prefix\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"tel-local-suffix\00", align 1
@.str.63 = private unnamed_addr constant [14 x i8] c"tel-extension\00", align 1
@.str.64 = private unnamed_addr constant [6 x i8] c"email\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"impp\00", align 1
@.str.66 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink12_GLOBAL__N_120AutoCompleteCategoryEEEEEPKcv = private unnamed_addr constant [136 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, blink::(anonymous namespace)::AutoCompleteCategory>]\00", align 1
@.str.68 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.69 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.70 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11HTMLElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.71 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.72 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.73 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@switch.table._ZNK5blink31HTMLFormControlElementWithState23IDLExposedAutofillValueEv = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 1, i32 3, i32 4], align 4

@_ZN5blink31HTMLFormControlElementWithStateD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLFormControlElementWithState"*), void (%"class.blink::HTMLFormControlElementWithState"*)* @_ZN5blink31HTMLFormControlElementWithStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31HTMLFormControlElementWithStateC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFormControlElementWithState"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::HTMLFormControlElementWithState"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFormControlElement"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::Document"* dereferenceable(2848) %2) #10
  %5 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [192 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [192 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink31HTMLFormControlElementWithStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [192 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [192 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink31HTMLFormControlElementWithStateE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [192 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [192 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink31HTMLFormControlElementWithStateE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [192 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [192 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink31HTMLFormControlElementWithStateE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 1
  store i8 0, i8* %9, align 1
  ret void
}

declare void @_ZN5blink22HTMLFormControlElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFormControlElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22HTMLFormControlElementD2Ev(%"class.blink::HTMLFormControlElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31HTMLFormControlElementWithStateD2Ev(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLFormControlElementWithState"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElementD2Ev(%"class.blink::HTMLFormControlElement"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink31HTMLFormControlElementWithStateD1Ev(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 -1, i32 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.8"* %2 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElementD2Ev(%"class.blink::HTMLFormControlElement"* %3) #10
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink31HTMLFormControlElementWithStateD0Ev(%"class.blink::HTMLFormControlElementWithState"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn104_N5blink31HTMLFormControlElementWithStateD0Ev(%"class.blink::HTMLFormControlElementWithState"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState18ShouldAutocompleteEv(%"class.blink::HTMLFormControlElementWithState"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %3 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLFormElement"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink15HTMLFormElement18ShouldAutocompleteEv(%"class.blink::HTMLFormElement"* nonnull %3) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ %6, %5 ], [ true, %1 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK5blink15HTMLFormElement18ShouldAutocompleteEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState29IsWearingAutofillAnchorMantleEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLFormControlElementWithState"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = bitcast %"class.blink::HTMLFormControlElementWithState"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %4 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %4, i64 171
  %6 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %5, align 8
  %7 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %6(%"class.blink::HTMLFormControlElement"* %2) #10
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kHiddenE, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink31HTMLFormControlElementWithState23IDLExposedAutofillValueEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca [55 x %"struct.WTF::KeyValuePair.615"], align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.blink::SpaceSplitString", align 8
  %19 = alloca %"class.WTF::AtomicString", align 8
  %20 = alloca %"class.WTF::StringAppend", align 8
  %21 = alloca %"class.WTF::StringAppend.547", align 8
  %22 = alloca %"class.WTF::StringAppend", align 8
  %23 = alloca %"class.WTF::StringAppend.547", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringAppend", align 8
  %26 = alloca %"class.WTF::StringAppend.547", align 8
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAutocompleteAttrE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %28, align 8
  %30 = icmp eq %"class.blink::ElementData"* %29, null
  br i1 %30, label %81, label %31

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::ElementData"* %29 to %"class.blink::UniqueElementData"*
  %38 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 1, i32 1
  %39 = bitcast %"class.blink::Member.14"* %38 to %"class.blink::Attribute"**
  %40 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %37, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  br label %48

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 1
  %45 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::Attribute"*
  %46 = lshr i32 %33, 1
  %47 = and i32 %46, 268435455
  br label %48

48:                                               ; preds = %43, %36
  %49 = phi %"class.blink::Attribute"* [ %45, %43 ], [ %40, %36 ]
  %50 = phi i32 [ %47, %43 ], [ %42, %36 ]
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %49, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %81, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %59

59:                                               ; preds = %74, %54
  %60 = phi %"class.blink::Attribute"* [ %49, %54 ], [ %75, %74 ]
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %56
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %66, %67
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 4, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %71, %72
  br i1 %73, label %77, label %74

74:                                               ; preds = %69, %64
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 1
  %76 = icmp eq %"class.blink::Attribute"* %75, %52
  br i1 %76, label %81, label %59

77:                                               ; preds = %69, %59
  %78 = icmp eq %"class.blink::Attribute"* %60, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 1
  br label %83

81:                                               ; preds = %74, %77, %48, %1
  %82 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %83

83:                                               ; preds = %79, %81
  %84 = phi %"class.WTF::AtomicString"* [ %82, %81 ], [ %80, %79 ]
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %88, label %111

88:                                               ; preds = %83
  %89 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %92, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %93, label %1485, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %1485

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i33
  %103 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #10
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !2

108:                                              ; preds = %99
  tail call void @llvm.trap() #10
  unreachable

109:                                              ; preds = %99
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %100, align 4
  br label %1485

111:                                              ; preds = %83
  %112 = bitcast %"class.blink::SpaceSplitString"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #10
  %113 = getelementptr inbounds %"class.blink::SpaceSplitString", %"class.blink::SpaceSplitString"* %18, i64 0, i32 0, i32 0
  %114 = bitcast %"class.WTF::AtomicString"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #10
  %115 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %84) #10
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %116, align 8
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %113, align 8
  call void @_ZN5blink16SpaceSplitString3SetERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"* nonnull %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %19) #10
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #10
  br label %132

132:                                              ; preds = %111, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #10
  %133 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %113, align 8
  %134 = icmp eq %"class.blink::SpaceSplitString::Data"* %133, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %133, i64 0, i32 2, i32 0, i32 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %162

139:                                              ; preds = %132, %135
  %140 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %143, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %144, label %1474, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %1474

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i33
  %154 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %153, i33 1) #10
  %155 = extractvalue { i33, i1 } %154, 1
  %156 = extractvalue { i33, i1 } %154, 0
  %157 = icmp slt i33 %156, 0
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %160, !prof !2

159:                                              ; preds = %150
  call void @llvm.trap() #10
  unreachable

160:                                              ; preds = %150
  %161 = trunc i33 %156 to i32
  store i32 %161, i32* %151, align 4
  br label %1474

162:                                              ; preds = %135
  %163 = add i32 %137, -1
  %164 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %133, i64 0, i32 2
  %165 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %164, i32 %163) #10
  %166 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %186, label %169

169:                                              ; preds = %162
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %186

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i33
  %178 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %177, i33 1) #10
  %179 = extractvalue { i33, i1 } %178, 1
  %180 = extractvalue { i33, i1 } %178, 0
  %181 = icmp slt i33 %180, 0
  %182 = or i1 %179, %181
  br i1 %182, label %183, label %184, !prof !2

183:                                              ; preds = %174
  call void @llvm.trap() #10
  unreachable

184:                                              ; preds = %174
  %185 = trunc i33 %180 to i32
  store i32 %185, i32* %175, align 4
  br label %186

186:                                              ; preds = %162, %169, %184
  %187 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map to i8*) acquire, align 8
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %478, !prof !3

189:                                              ; preds = %186
  %190 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map) #10
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %478, label %192

192:                                              ; preds = %189
  %193 = bitcast [55 x %"struct.WTF::KeyValuePair.615"]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 880, i8* nonnull %193) #10
  %194 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 0
  %195 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 0, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %195, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #10
  %196 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 0, i32 1
  store i32 1, i32* %196, align 8
  %197 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 1, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %197, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2) #10
  %198 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 1, i32 1
  store i32 2, i32* %198, align 8
  %199 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 2, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %199, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i64 4) #10
  %200 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 2, i32 1
  store i32 3, i32* %200, align 8
  %201 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 3, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %201, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i64 16) #10
  %202 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 3, i32 1
  store i32 3, i32* %202, align 8
  %203 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 4, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %203, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i64 10) #10
  %204 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 4, i32 1
  store i32 3, i32* %204, align 8
  %205 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 5, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %205, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i64 15) #10
  %206 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 5, i32 1
  store i32 3, i32* %206, align 8
  %207 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 6, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %207, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i64 11) #10
  %208 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 6, i32 1
  store i32 3, i32* %208, align 8
  %209 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 7, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %209, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0), i64 16) #10
  %210 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 7, i32 1
  store i32 3, i32* %210, align 8
  %211 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 8, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %211, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), i64 8) #10
  %212 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 8, i32 1
  store i32 3, i32* %212, align 8
  %213 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 9, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %213, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0), i64 18) #10
  %214 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 9, i32 1
  store i32 3, i32* %214, align 8
  %215 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 10, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %215, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i64 8) #10
  %216 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 10, i32 1
  store i32 3, i32* %216, align 8
  %217 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 11, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %217, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i64 12) #10
  %218 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 11, i32 1
  store i32 3, i32* %218, align 8
  %219 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 12, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %219, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i64 16) #10
  %220 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 12, i32 1
  store i32 3, i32* %220, align 8
  %221 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 13, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %221, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i64 12) #10
  %222 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 13, i32 1
  store i32 3, i32* %222, align 8
  %223 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 14, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %223, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), i64 14) #10
  %224 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 14, i32 1
  store i32 3, i32* %224, align 8
  %225 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 15, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %225, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0), i64 13) #10
  %226 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 15, i32 1
  store i32 3, i32* %226, align 8
  %227 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 16, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %227, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0), i64 13) #10
  %228 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 16, i32 1
  store i32 3, i32* %228, align 8
  %229 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 17, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %229, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i64 13) #10
  %230 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 17, i32 1
  store i32 3, i32* %230, align 8
  %231 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 18, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %231, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0), i64 14) #10
  %232 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 18, i32 1
  store i32 3, i32* %232, align 8
  %233 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 19, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %233, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i64 0, i64 0), i64 14) #10
  %234 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 19, i32 1
  store i32 3, i32* %234, align 8
  %235 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 20, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %235, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0), i64 14) #10
  %236 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 20, i32 1
  store i32 3, i32* %236, align 8
  %237 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 21, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %237, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0), i64 14) #10
  %238 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 21, i32 1
  store i32 3, i32* %238, align 8
  %239 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 22, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %239, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), i64 7) #10
  %240 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 22, i32 1
  store i32 3, i32* %240, align 8
  %241 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 23, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %241, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i64 12) #10
  %242 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 23, i32 1
  store i32 3, i32* %242, align 8
  %243 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 24, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %243, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i64 11) #10
  %244 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 24, i32 1
  store i32 3, i32* %244, align 8
  %245 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 25, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %245, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), i64 7) #10
  %246 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 25, i32 1
  store i32 3, i32* %246, align 8
  %247 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 26, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %247, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i64 13) #10
  %248 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 26, i32 1
  store i32 3, i32* %248, align 8
  %249 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 27, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %249, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0), i64 18) #10
  %250 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 27, i32 1
  store i32 3, i32* %250, align 8
  %251 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 28, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0), i64 14) #10
  %252 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 28, i32 1
  store i32 3, i32* %252, align 8
  %253 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 29, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %253, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), i64 9) #10
  %254 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 29, i32 1
  store i32 3, i32* %254, align 8
  %255 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 30, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %255, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i64 6) #10
  %256 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 30, i32 1
  store i32 3, i32* %256, align 8
  %257 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 31, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %257, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0), i64 12) #10
  %258 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 31, i32 1
  store i32 3, i32* %258, align 8
  %259 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 32, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %259, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i64 0, i64 0), i64 11) #10
  %260 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 32, i32 1
  store i32 3, i32* %260, align 8
  %261 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 33, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %261, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), i64 6) #10
  %262 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 33, i32 1
  store i32 3, i32* %262, align 8
  %263 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 34, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %263, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), i64 7) #10
  %264 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 34, i32 1
  store i32 3, i32* %264, align 8
  %265 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 35, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %265, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0), i64 20) #10
  %266 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 35, i32 1
  store i32 3, i32* %266, align 8
  %267 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 36, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %267, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.47, i64 0, i64 0), i64 18) #10
  %268 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 36, i32 1
  store i32 3, i32* %268, align 8
  %269 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 37, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %269, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i64 0, i64 0), i64 8) #10
  %270 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 37, i32 1
  store i32 3, i32* %270, align 8
  %271 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 38, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %271, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i64 4) #10
  %272 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 38, i32 1
  store i32 3, i32* %272, align 8
  %273 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 39, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %273, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i64 8) #10
  %274 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 39, i32 1
  store i32 3, i32* %274, align 8
  %275 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 40, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %275, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.51, i64 0, i64 0), i64 10) #10
  %276 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 40, i32 1
  store i32 3, i32* %276, align 8
  %277 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 41, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %277, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i64 0, i64 0), i64 9) #10
  %278 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 41, i32 1
  store i32 3, i32* %278, align 8
  %279 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 42, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %279, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), i64 3) #10
  %280 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 42, i32 1
  store i32 3, i32* %280, align 8
  %281 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 43, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %281, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i64 3) #10
  %282 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 43, i32 1
  store i32 3, i32* %282, align 8
  %283 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 44, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %283, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0), i64 5) #10
  %284 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 44, i32 1
  store i32 3, i32* %284, align 8
  %285 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 45, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %285, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0), i64 3) #10
  %286 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 45, i32 1
  store i32 4, i32* %286, align 8
  %287 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 46, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %287, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i64 16) #10
  %288 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 46, i32 1
  store i32 4, i32* %288, align 8
  %289 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 47, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %289, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.58, i64 0, i64 0), i64 12) #10
  %290 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 47, i32 1
  store i32 4, i32* %290, align 8
  %291 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 48, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %291, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0), i64 13) #10
  %292 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 48, i32 1
  store i32 4, i32* %292, align 8
  %293 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 49, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %293, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i64 0, i64 0), i64 9) #10
  %294 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 49, i32 1
  store i32 4, i32* %294, align 8
  %295 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 50, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %295, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i64 0, i64 0), i64 16) #10
  %296 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 50, i32 1
  store i32 4, i32* %296, align 8
  %297 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 51, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %297, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i64 0, i64 0), i64 16) #10
  %298 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 51, i32 1
  store i32 4, i32* %298, align 8
  %299 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 52, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %299, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0), i64 13) #10
  %300 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 52, i32 1
  store i32 4, i32* %300, align 8
  %301 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 53, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %301, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0), i64 5) #10
  %302 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 53, i32 1
  store i32 4, i32* %302, align 8
  %303 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 54, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %303, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0), i64 4) #10
  %304 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 54, i32 1
  store i32 4, i32* %304, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  %305 = call fastcc %"struct.WTF::KeyValuePair.615"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink12_GLOBAL__N_120AutoCompleteCategoryEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6RehashEjPS6_(i32 128, %"struct.WTF::KeyValuePair.615"* null) #10
  %306 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %307 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %306, i64 0, i32 0, i32 0, i32 0
  br label %308

308:                                              ; preds = %451, %192
  %309 = phi i64 [ 0, %192 ], [ %452, %451 ]
  %310 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 %309, i32 1
  %311 = load %"struct.WTF::KeyValuePair.615"*, %"struct.WTF::KeyValuePair.615"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map to %"struct.WTF::KeyValuePair.615"**), align 8
  %312 = icmp eq %"struct.WTF::KeyValuePair.615"* %311, null
  br i1 %312, label %313, label %316

313:                                              ; preds = %308
  %314 = call fastcc %"struct.WTF::KeyValuePair.615"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink12_GLOBAL__N_120AutoCompleteCategoryEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"struct.WTF::KeyValuePair.615"* null) #10
  %315 = load %"struct.WTF::KeyValuePair.615"*, %"struct.WTF::KeyValuePair.615"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map to %"struct.WTF::KeyValuePair.615"**), align 8
  br label %316

316:                                              ; preds = %313, %308
  %317 = phi %"struct.WTF::KeyValuePair.615"* [ %311, %308 ], [ %315, %313 ]
  %318 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %319 = add i32 %318, -1
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 %309, i32 0, i32 0, i32 0, i32 0
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = lshr i32 %324, 8
  %326 = and i32 %325, %319
  %327 = zext i32 %326 to i64
  %328 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %317, i64 %327
  %329 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %328, i64 0, i32 0, i32 0, i32 0, i32 0
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %399, label %332

332:                                              ; preds = %316
  %333 = xor i32 %325, -1
  %334 = lshr i32 %324, 31
  %335 = add nsw i32 %334, %333
  %336 = shl i32 %335, 12
  %337 = xor i32 %336, %335
  %338 = lshr i32 %337, 7
  %339 = xor i32 %338, %337
  %340 = shl i32 %339, 2
  %341 = xor i32 %340, %339
  %342 = lshr i32 %341, 20
  %343 = xor i32 %342, %341
  %344 = or i32 %343, 1
  %345 = zext i32 %344 to i64
  br label %346

346:                                              ; preds = %357, %332
  %347 = phi %"struct.WTF::KeyValuePair.615"* [ %328, %332 ], [ %363, %357 ]
  %348 = phi %"struct.WTF::KeyValuePair.615"* [ null, %332 ], [ %358, %357 ]
  %349 = phi i64 [ %327, %332 ], [ %362, %357 ]
  %350 = phi i64 [ 0, %332 ], [ %360, %357 ]
  %351 = bitcast %"struct.WTF::KeyValuePair.615"* %347 to i8**
  %352 = load i8*, i8** %351, align 8
  %353 = icmp eq i8* %352, inttoptr (i64 -1 to i8*)
  br i1 %353, label %357, label %354

354:                                              ; preds = %346
  %355 = bitcast i8* %352 to %"class.WTF::StringImpl"*
  %356 = icmp eq %"class.WTF::StringImpl"* %322, %355
  br i1 %356, label %451, label %357

357:                                              ; preds = %354, %346
  %358 = phi %"struct.WTF::KeyValuePair.615"* [ %348, %354 ], [ %347, %346 ]
  %359 = icmp eq i64 %350, 0
  %360 = select i1 %359, i64 %345, i64 %350
  %361 = add i64 %360, %349
  %362 = and i64 %361, %320
  %363 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %317, i64 %362
  %364 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %363, i64 0, i32 0, i32 0, i32 0, i32 0
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %364, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %365, null
  br i1 %366, label %367, label %346

367:                                              ; preds = %357
  %368 = icmp eq %"struct.WTF::KeyValuePair.615"* %358, null
  br i1 %368, label %399, label %369

369:                                              ; preds = %367
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %389, label %372

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = and i32 %374, 2
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %389

377:                                              ; preds = %372
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  %380 = zext i32 %379 to i33
  %381 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %380, i33 1) #10
  %382 = extractvalue { i33, i1 } %381, 1
  %383 = extractvalue { i33, i1 } %381, 0
  %384 = icmp slt i33 %383, 0
  %385 = or i1 %382, %384
  br i1 %385, label %386, label %387, !prof !2

386:                                              ; preds = %377
  call void @llvm.trap() #10
  unreachable

387:                                              ; preds = %377
  %388 = trunc i33 %383 to i32
  store i32 %388, i32* %378, align 4
  br label %389

389:                                              ; preds = %387, %372, %369
  %390 = ptrtoint %"class.WTF::StringImpl"* %370 to i64
  %391 = bitcast %"struct.WTF::KeyValuePair.615"* %358 to i64*
  store i64 %390, i64* %391, align 8
  %392 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %358, i64 0, i32 1
  store i32 -128, i32* %392, align 8
  %393 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %394 = add i32 %393, 2147483647
  %395 = and i32 %394, 2147483647
  %396 = and i32 %393, -2147483648
  %397 = or i32 %395, %396
  store i32 %397, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  br label %399

399:                                              ; preds = %389, %367, %316
  %400 = phi %"class.WTF::StringImpl"* [ %398, %389 ], [ %322, %367 ], [ %322, %316 ]
  %401 = phi %"struct.WTF::KeyValuePair.615"* [ %358, %389 ], [ %363, %367 ], [ %328, %316 ]
  %402 = icmp eq %"class.WTF::StringImpl"* %400, null
  br i1 %402, label %420, label %403

403:                                              ; preds = %399
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = load atomic i32, i32* %404 monotonic, align 4
  %406 = and i32 %405, 2
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %420

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 0
  %410 = load i32, i32* %409, align 4
  %411 = zext i32 %410 to i33
  %412 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %411, i33 1) #10
  %413 = extractvalue { i33, i1 } %412, 1
  %414 = extractvalue { i33, i1 } %412, 0
  %415 = icmp slt i33 %414, 0
  %416 = or i1 %413, %415
  br i1 %416, label %417, label %418, !prof !2

417:                                              ; preds = %408
  call void @llvm.trap() #10
  unreachable

418:                                              ; preds = %408
  %419 = trunc i33 %414 to i32
  store i32 %419, i32* %409, align 4
  br label %420

420:                                              ; preds = %418, %403, %399
  %421 = ptrtoint %"class.WTF::StringImpl"* %400 to i64
  %422 = bitcast %"struct.WTF::KeyValuePair.615"* %401 to i64*
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %401, i64 0, i32 0, i32 0, i32 0, i32 0
  %424 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %423, align 8
  store i64 %421, i64* %422, align 8
  %425 = icmp eq %"class.WTF::StringImpl"* %424, null
  br i1 %425, label %439, label %426

426:                                              ; preds = %420
  %427 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %424, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %428 = load atomic i32, i32* %427 monotonic, align 4
  %429 = and i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %424, i64 0, i32 0
  %432 = load i32, i32* %431, align 4
  br i1 %430, label %433, label %435

433:                                              ; preds = %426
  %434 = add i32 %432, -1
  store i32 %434, i32* %431, align 4
  br label %435

435:                                              ; preds = %433, %426
  %436 = phi i32 [ %434, %433 ], [ %432, %426 ]
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %439

438:                                              ; preds = %435
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %424) #10
  br label %439

439:                                              ; preds = %438, %435, %420
  %440 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %401, i64 0, i32 1
  %441 = load i32, i32* %310, align 8
  store i32 %441, i32* %440, align 4
  %442 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %443 = add i32 %442, 1
  store i32 %443, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %444 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %445 = add i32 %444, %443
  %446 = shl i32 %445, 1
  %447 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %448 = icmp ult i32 %446, %447
  br i1 %448, label %451, label %449

449:                                              ; preds = %439
  %450 = call fastcc %"struct.WTF::KeyValuePair.615"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink12_GLOBAL__N_120AutoCompleteCategoryEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"struct.WTF::KeyValuePair.615"* %401) #10
  br label %451

451:                                              ; preds = %354, %449, %439
  %452 = add nuw nsw i64 %309, 1
  %453 = icmp eq i64 %452, 55
  br i1 %453, label %454, label %308

454:                                              ; preds = %451
  %455 = getelementptr inbounds [55 x %"struct.WTF::KeyValuePair.615"], [55 x %"struct.WTF::KeyValuePair.615"]* %16, i64 0, i64 55
  br label %456

456:                                              ; preds = %475, %454
  %457 = phi %"struct.WTF::KeyValuePair.615"* [ %455, %454 ], [ %458, %475 ]
  %458 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %457, i64 -1
  %459 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %458, i64 0, i32 0, i32 0, i32 0, i32 0
  %460 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %459, align 8
  %461 = icmp eq %"class.WTF::StringImpl"* %460, null
  br i1 %461, label %475, label %462

462:                                              ; preds = %456
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %460, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %464 = load atomic i32, i32* %463 monotonic, align 4
  %465 = and i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %460, i64 0, i32 0
  %468 = load i32, i32* %467, align 4
  br i1 %466, label %469, label %471

469:                                              ; preds = %462
  %470 = add i32 %468, -1
  store i32 %470, i32* %467, align 4
  br label %471

471:                                              ; preds = %469, %462
  %472 = phi i32 [ %470, %469 ], [ %468, %462 ]
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %475

474:                                              ; preds = %471
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %460) #10
  br label %475

475:                                              ; preds = %474, %471, %456
  %476 = icmp eq %"struct.WTF::KeyValuePair.615"* %458, %194
  br i1 %476, label %477, label %456

477:                                              ; preds = %475
  call void @llvm.lifetime.end.p0i8(i64 880, i8* nonnull %193) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map) #10
  br label %478

478:                                              ; preds = %477, %189, %186
  %479 = load %"struct.WTF::KeyValuePair.615"*, %"struct.WTF::KeyValuePair.615"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map to %"struct.WTF::KeyValuePair.615"**), align 8
  %480 = icmp eq %"struct.WTF::KeyValuePair.615"* %479, null
  %481 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br i1 %480, label %531, label %482

482:                                              ; preds = %478
  %483 = add i32 %481, -1
  %484 = zext i32 %483 to i64
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = load atomic i32, i32* %485 monotonic, align 4
  %487 = lshr i32 %486, 8
  %488 = and i32 %487, %483
  %489 = zext i32 %488 to i64
  %490 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %479, i64 %489
  %491 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %490, i64 0, i32 0, i32 0, i32 0, i32 0
  %492 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %491, align 8
  %493 = icmp eq %"class.WTF::StringImpl"* %492, null
  br i1 %493, label %531, label %494

494:                                              ; preds = %482
  %495 = xor i32 %487, -1
  %496 = lshr i32 %486, 31
  %497 = add nsw i32 %496, %495
  %498 = shl i32 %497, 12
  %499 = xor i32 %498, %497
  %500 = lshr i32 %499, 7
  %501 = xor i32 %500, %499
  %502 = shl i32 %501, 2
  %503 = xor i32 %502, %501
  %504 = lshr i32 %503, 20
  %505 = xor i32 %504, %503
  %506 = or i32 %505, 1
  %507 = zext i32 %506 to i64
  br label %508

508:                                              ; preds = %518, %494
  %509 = phi %"struct.WTF::KeyValuePair.615"* [ %490, %494 ], [ %523, %518 ]
  %510 = phi i64 [ %489, %494 ], [ %522, %518 ]
  %511 = phi i64 [ 0, %494 ], [ %520, %518 ]
  %512 = bitcast %"struct.WTF::KeyValuePair.615"* %509 to i8**
  %513 = load i8*, i8** %512, align 8
  %514 = icmp ne i8* %513, inttoptr (i64 -1 to i8*)
  %515 = bitcast i8* %513 to %"class.WTF::StringImpl"*
  %516 = icmp eq %"class.WTF::StringImpl"* %167, %515
  %517 = and i1 %514, %516
  br i1 %517, label %527, label %518

518:                                              ; preds = %508
  %519 = icmp eq i64 %511, 0
  %520 = select i1 %519, i64 %507, i64 %511
  %521 = add i64 %520, %510
  %522 = and i64 %521, %484
  %523 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %479, i64 %522
  %524 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %523, i64 0, i32 0, i32 0, i32 0, i32 0
  %525 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %524, align 8
  %526 = icmp eq %"class.WTF::StringImpl"* %525, null
  br i1 %526, label %531, label %508

527:                                              ; preds = %508
  %528 = icmp eq %"struct.WTF::KeyValuePair.615"* %509, null
  br i1 %528, label %531, label %529

529:                                              ; preds = %527
  %530 = zext i32 %481 to i64
  br label %534

531:                                              ; preds = %518, %527, %482, %478
  %532 = zext i32 %481 to i64
  %533 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %479, i64 %532
  br label %534

534:                                              ; preds = %531, %529
  %535 = phi i64 [ %530, %529 ], [ %532, %531 ]
  %536 = phi %"struct.WTF::KeyValuePair.615"* [ %509, %529 ], [ %533, %531 ]
  %537 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %479, i64 %535
  %538 = icmp eq %"struct.WTF::KeyValuePair.615"* %536, %537
  br i1 %538, label %547, label %539

539:                                              ; preds = %534
  %540 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %536, i64 0, i32 1
  %541 = load i32, i32* %540, align 8
  %542 = icmp ult i32 %541, 5
  br i1 %542, label %543, label %547

543:                                              ; preds = %539
  %544 = sext i32 %541 to i64
  %545 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZNK5blink31HTMLFormControlElementWithState23IDLExposedAutofillValueEv, i64 0, i64 %544
  %546 = load i32, i32* %545, align 4
  br label %547

547:                                              ; preds = %534, %543, %539
  %548 = phi i32 [ %541, %539 ], [ %541, %543 ], [ 0, %534 ]
  %549 = phi i32 [ -1431655766, %539 ], [ %546, %543 ], [ 0, %534 ]
  %550 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %113, align 8
  %551 = icmp eq %"class.blink::SpaceSplitString::Data"* %550, null
  br i1 %551, label %579, label %552

552:                                              ; preds = %547
  %553 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %550, i64 0, i32 2, i32 0, i32 0, i32 2
  %554 = load i32, i32* %553, align 4
  %555 = icmp ugt i32 %554, %549
  br i1 %555, label %556, label %579

556:                                              ; preds = %552
  %557 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %558 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %557, i64 0, i32 0, i32 0
  %559 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %558, align 8
  %560 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %559, %"class.WTF::StringImpl"** %560, align 8
  %561 = icmp eq %"class.WTF::StringImpl"* %559, null
  br i1 %561, label %1460, label %562

562:                                              ; preds = %556
  %563 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %559, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %564 = load atomic i32, i32* %563 monotonic, align 4
  %565 = and i32 %564, 2
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %567, label %1460

567:                                              ; preds = %562
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %559, i64 0, i32 0
  %569 = load i32, i32* %568, align 4
  %570 = zext i32 %569 to i33
  %571 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %570, i33 1) #10
  %572 = extractvalue { i33, i1 } %571, 1
  %573 = extractvalue { i33, i1 } %571, 0
  %574 = icmp slt i33 %573, 0
  %575 = or i1 %572, %574
  br i1 %575, label %576, label %577, !prof !2

576:                                              ; preds = %567
  call void @llvm.trap() #10
  unreachable

577:                                              ; preds = %567
  %578 = trunc i33 %573 to i32
  store i32 %578, i32* %568, align 4
  br label %1460

579:                                              ; preds = %547, %552
  br i1 %168, label %597, label %580

580:                                              ; preds = %579
  %581 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %582 = load atomic i32, i32* %581 monotonic, align 4
  %583 = and i32 %582, 2
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %585, label %597

585:                                              ; preds = %580
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %587 = load i32, i32* %586, align 4
  %588 = zext i32 %587 to i33
  %589 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %588, i33 1) #10
  %590 = extractvalue { i33, i1 } %589, 1
  %591 = extractvalue { i33, i1 } %589, 0
  %592 = icmp slt i33 %591, 0
  %593 = or i1 %590, %592
  br i1 %593, label %594, label %595, !prof !2

594:                                              ; preds = %585
  call void @llvm.trap() #10
  unreachable

595:                                              ; preds = %585
  %596 = trunc i33 %591 to i32
  store i32 %596, i32* %586, align 4
  br label %597

597:                                              ; preds = %579, %580, %595
  %598 = add i32 %548, -1
  %599 = icmp ult i32 %598, 2
  br i1 %599, label %600, label %636

600:                                              ; preds = %597
  %601 = bitcast %"class.blink::HTMLFormControlElementWithState"* %0 to %"class.blink::HTMLFormControlElement"*
  %602 = bitcast %"class.blink::HTMLFormControlElementWithState"* %0 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %603 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %602, align 8
  %604 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %603, i64 171
  %605 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %604, align 8
  %606 = call dereferenceable(8) %"class.WTF::AtomicString"* %605(%"class.blink::HTMLFormControlElement"* %601) #10
  %607 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kHiddenE, align 8
  %608 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %606, i64 0, i32 0, i32 0, i32 0
  %609 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %608, align 8
  %610 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %607, i64 0, i32 0, i32 0, i32 0
  %611 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %610, align 8
  %612 = icmp eq %"class.WTF::StringImpl"* %609, %611
  br i1 %612, label %613, label %636

613:                                              ; preds = %600
  %614 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %615 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %614, i64 0, i32 0, i32 0
  %616 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %615, align 8
  %617 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %616, %"class.WTF::StringImpl"** %617, align 8
  %618 = icmp eq %"class.WTF::StringImpl"* %616, null
  br i1 %618, label %1446, label %619

619:                                              ; preds = %613
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %616, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %621 = load atomic i32, i32* %620 monotonic, align 4
  %622 = and i32 %621, 2
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %1446

624:                                              ; preds = %619
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %616, i64 0, i32 0
  %626 = load i32, i32* %625, align 4
  %627 = zext i32 %626 to i33
  %628 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %627, i33 1) #10
  %629 = extractvalue { i33, i1 } %628, 1
  %630 = extractvalue { i33, i1 } %628, 0
  %631 = icmp slt i33 %630, 0
  %632 = or i1 %629, %631
  br i1 %632, label %633, label %634, !prof !2

633:                                              ; preds = %624
  call void @llvm.trap() #10
  unreachable

634:                                              ; preds = %624
  %635 = trunc i33 %630 to i32
  store i32 %635, i32* %625, align 4
  br label %1446

636:                                              ; preds = %597, %600
  switch i32 %548, label %639 [
    i32 1, label %637
    i32 2, label %638
  ]

637:                                              ; preds = %636
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #10
  br label %1446

638:                                              ; preds = %636
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2) #10
  br label %1446

639:                                              ; preds = %636
  %640 = ptrtoint %"class.WTF::StringImpl"* %167 to i64
  br i1 %168, label %658, label %641

641:                                              ; preds = %639
  %642 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %643 = load atomic i32, i32* %642 monotonic, align 4
  %644 = and i32 %643, 2
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %646, label %658

646:                                              ; preds = %641
  %647 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %648 = load i32, i32* %647, align 4
  %649 = zext i32 %648 to i33
  %650 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %649, i33 1) #10
  %651 = extractvalue { i33, i1 } %650, 1
  %652 = extractvalue { i33, i1 } %650, 0
  %653 = icmp slt i33 %652, 0
  %654 = or i1 %651, %653
  br i1 %654, label %655, label %656, !prof !2

655:                                              ; preds = %646
  call void @llvm.trap() #10
  unreachable

656:                                              ; preds = %646
  %657 = trunc i33 %652 to i32
  store i32 %657, i32* %647, align 4
  br label %658

658:                                              ; preds = %639, %641, %656
  %659 = icmp eq i32 %163, 0
  br i1 %659, label %1426, label %660

660:                                              ; preds = %658
  %661 = add i32 %137, -2
  %662 = icmp eq i32 %548, 4
  br i1 %662, label %663, label %960

663:                                              ; preds = %660
  %664 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %113, align 8
  %665 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %664, i64 0, i32 2
  %666 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %665, i32 %661) #10
  %667 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %666, i64 0, i32 0, i32 0, i32 0
  %668 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %667, align 8
  %669 = icmp eq %"class.WTF::StringImpl"* %668, null
  br i1 %669, label %687, label %670

670:                                              ; preds = %663
  %671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %672 = load atomic i32, i32* %671 monotonic, align 4
  %673 = and i32 %672, 2
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %675, label %692

675:                                              ; preds = %670
  %676 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 0
  %677 = load i32, i32* %676, align 4
  %678 = zext i32 %677 to i33
  %679 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %678, i33 1) #10
  %680 = extractvalue { i33, i1 } %679, 1
  %681 = extractvalue { i33, i1 } %679, 0
  %682 = icmp slt i33 %681, 0
  %683 = or i1 %680, %682
  br i1 %683, label %684, label %685, !prof !2

684:                                              ; preds = %675
  call void @llvm.trap() #10
  unreachable

685:                                              ; preds = %675
  %686 = trunc i33 %681 to i32
  store i32 %686, i32* %676, align 4
  br label %692

687:                                              ; preds = %663
  %688 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %688) #10
  %689 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %689, align 8
  %690 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %691 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %690, i64* %691, align 8
  br label %701

692:                                              ; preds = %670, %685
  %693 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %693) #10
  %694 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %668, %"class.WTF::StringImpl"** %694, align 8
  %695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 1
  %696 = load i32, i32* %695, align 4
  %697 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 1
  %698 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %699 = bitcast i8** %698 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %697, %"class.WTF::StringImpl"** %699, align 8
  %700 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %701

701:                                              ; preds = %692, %687
  %702 = phi i64 [ %700, %692 ], [ %690, %687 ]
  %703 = phi i8* [ %693, %692 ], [ %688, %687 ]
  %704 = phi i32 [ %696, %692 ], [ 0, %687 ]
  %705 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %704, i32* %705, align 8
  %706 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %706) #10
  %707 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %702, i64* %707, align 8
  %708 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %708, align 8
  %709 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 4, i32* %709, align 8
  %710 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %706) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %703) #10
  br i1 %710, label %803, label %711

711:                                              ; preds = %701
  %712 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %712) #10
  br i1 %669, label %713, label %717

713:                                              ; preds = %711
  %714 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %714, align 8
  %715 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %716 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %715, i64* %716, align 8
  br label %725

717:                                              ; preds = %711
  %718 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %668, %"class.WTF::StringImpl"** %718, align 8
  %719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 1
  %720 = load i32, i32* %719, align 4
  %721 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 1
  %722 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %723 = bitcast i8** %722 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %721, %"class.WTF::StringImpl"** %723, align 8
  %724 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %725

725:                                              ; preds = %717, %713
  %726 = phi i64 [ %724, %717 ], [ %715, %713 ]
  %727 = phi i32 [ %720, %717 ], [ 0, %713 ]
  %728 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %727, i32* %728, align 8
  %729 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %729) #10
  %730 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %726, i64* %730, align 8
  %731 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %731, align 8
  %732 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 4, i32* %732, align 8
  %733 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %729) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %712) #10
  br i1 %733, label %803, label %734

734:                                              ; preds = %725
  %735 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %735) #10
  br i1 %669, label %736, label %740

736:                                              ; preds = %734
  %737 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %737, align 8
  %738 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %739 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %738, i64* %739, align 8
  br label %748

740:                                              ; preds = %734
  %741 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %668, %"class.WTF::StringImpl"** %741, align 8
  %742 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 1
  %743 = load i32, i32* %742, align 4
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 1
  %745 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %746 = bitcast i8** %745 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %744, %"class.WTF::StringImpl"** %746, align 8
  %747 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %748

748:                                              ; preds = %740, %736
  %749 = phi i64 [ %747, %740 ], [ %738, %736 ]
  %750 = phi i32 [ %743, %740 ], [ 0, %736 ]
  %751 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %750, i32* %751, align 8
  %752 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %752) #10
  %753 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %749, i64* %753, align 8
  %754 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8** %754, align 8
  %755 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 6, i32* %755, align 8
  %756 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %752) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %735) #10
  br i1 %756, label %803, label %757

757:                                              ; preds = %748
  %758 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %758) #10
  br i1 %669, label %759, label %763

759:                                              ; preds = %757
  %760 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %760, align 8
  %761 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %762 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %761, i64* %762, align 8
  br label %771

763:                                              ; preds = %757
  %764 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %668, %"class.WTF::StringImpl"** %764, align 8
  %765 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 1
  %766 = load i32, i32* %765, align 4
  %767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 1
  %768 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %769 = bitcast i8** %768 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %767, %"class.WTF::StringImpl"** %769, align 8
  %770 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %771

771:                                              ; preds = %763, %759
  %772 = phi i64 [ %770, %763 ], [ %761, %759 ]
  %773 = phi i32 [ %766, %763 ], [ 0, %759 ]
  %774 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %773, i32* %774, align 8
  %775 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %775) #10
  %776 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %772, i64* %776, align 8
  %777 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %777, align 8
  %778 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 3, i32* %778, align 8
  %779 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %775) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %758) #10
  br i1 %779, label %803, label %780

780:                                              ; preds = %771
  %781 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %781) #10
  br i1 %669, label %782, label %786

782:                                              ; preds = %780
  %783 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %783, align 8
  %784 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %785 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %784, i64* %785, align 8
  br label %794

786:                                              ; preds = %780
  %787 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %668, %"class.WTF::StringImpl"** %787, align 8
  %788 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 1
  %789 = load i32, i32* %788, align 4
  %790 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 1
  %791 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %792 = bitcast i8** %791 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %790, %"class.WTF::StringImpl"** %792, align 8
  %793 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %794

794:                                              ; preds = %786, %782
  %795 = phi i64 [ %793, %786 ], [ %784, %782 ]
  %796 = phi i32 [ %789, %786 ], [ 0, %782 ]
  %797 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %796, i32* %797, align 8
  %798 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %798) #10
  %799 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %795, i64* %799, align 8
  %800 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8** %800, align 8
  %801 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 5, i32* %801, align 8
  %802 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %798) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %781) #10
  br i1 %802, label %803, label %942

803:                                              ; preds = %794, %771, %748, %725, %701
  %804 = bitcast %"class.WTF::StringAppend"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %804) #10
  %805 = bitcast %"class.WTF::StringAppend.547"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %805) #10
  br i1 %669, label %850, label %806

806:                                              ; preds = %803
  %807 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %808 = load atomic i32, i32* %807 monotonic, align 4
  %809 = and i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 0
  %812 = load i32, i32* %811, align 4
  br i1 %810, label %813, label %823

813:                                              ; preds = %806
  %814 = zext i32 %812 to i33
  %815 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %814, i33 1) #10
  %816 = extractvalue { i33, i1 } %815, 1
  %817 = extractvalue { i33, i1 } %815, 0
  %818 = icmp slt i33 %817, 0
  %819 = or i1 %816, %818
  br i1 %819, label %820, label %821, !prof !2

820:                                              ; preds = %813
  call void @llvm.trap() #10
  unreachable

821:                                              ; preds = %813
  %822 = trunc i33 %817 to i32
  store i32 %822, i32* %811, align 4
  br label %823

823:                                              ; preds = %806, %821
  %824 = phi i32 [ %822, %821 ], [ %812, %806 ]
  %825 = load atomic i32, i32* %807 monotonic, align 4
  %826 = and i32 %825, 2
  %827 = icmp eq i32 %826, 0
  %828 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 0
  br i1 %827, label %829, label %839

829:                                              ; preds = %823
  %830 = zext i32 %824 to i33
  %831 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %830, i33 1) #10
  %832 = extractvalue { i33, i1 } %831, 1
  %833 = extractvalue { i33, i1 } %831, 0
  %834 = icmp slt i33 %833, 0
  %835 = or i1 %832, %834
  br i1 %835, label %836, label %837, !prof !2

836:                                              ; preds = %829
  call void @llvm.trap() #10
  unreachable

837:                                              ; preds = %829
  %838 = trunc i33 %833 to i32
  store i32 %838, i32* %828, align 4
  br label %839

839:                                              ; preds = %837, %823
  %840 = phi i32 [ %838, %837 ], [ %824, %823 ]
  %841 = load atomic i32, i32* %807 monotonic, align 4
  %842 = and i32 %841, 2
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %844, label %846

844:                                              ; preds = %839
  %845 = add i32 %840, -1
  store i32 %845, i32* %828, align 4
  br label %846

846:                                              ; preds = %844, %839
  %847 = phi i32 [ %845, %844 ], [ %840, %839 ]
  %848 = icmp eq i32 %847, 0
  br i1 %848, label %849, label %850

849:                                              ; preds = %846
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %668) #10
  br label %850

850:                                              ; preds = %803, %846, %849
  %851 = getelementptr inbounds %"class.WTF::StringAppend.547", %"class.WTF::StringAppend.547"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %668, %"class.WTF::StringImpl"** %851, align 8
  %852 = getelementptr inbounds %"class.WTF::StringAppend.547", %"class.WTF::StringAppend.547"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8** %852, align 8
  br i1 %168, label %870, label %853

853:                                              ; preds = %850
  %854 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %855 = load atomic i32, i32* %854 monotonic, align 4
  %856 = and i32 %855, 2
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %858, label %870

858:                                              ; preds = %853
  %859 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %860 = load i32, i32* %859, align 4
  %861 = zext i32 %860 to i33
  %862 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %861, i33 1) #10
  %863 = extractvalue { i33, i1 } %862, 1
  %864 = extractvalue { i33, i1 } %862, 0
  %865 = icmp slt i33 %864, 0
  %866 = or i1 %863, %865
  br i1 %866, label %867, label %868, !prof !2

867:                                              ; preds = %858
  call void @llvm.trap() #10
  unreachable

868:                                              ; preds = %858
  %869 = trunc i33 %864 to i32
  store i32 %869, i32* %859, align 4
  br label %870

870:                                              ; preds = %850, %853, %868
  call void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %20, %"class.WTF::StringAppend.547"* nonnull dereferenceable(16) %21, %"class.WTF::StringImpl"* %167)
  %871 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend"* nonnull %20)
  %872 = ptrtoint %"class.WTF::StringImpl"* %871 to i64
  br i1 %168, label %886, label %873

873:                                              ; preds = %870
  %874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %875 = load atomic i32, i32* %874 monotonic, align 4
  %876 = and i32 %875, 2
  %877 = icmp eq i32 %876, 0
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %879 = load i32, i32* %878, align 4
  br i1 %877, label %880, label %882

880:                                              ; preds = %873
  %881 = add i32 %879, -1
  store i32 %881, i32* %878, align 4
  br label %882

882:                                              ; preds = %880, %873
  %883 = phi i32 [ %881, %880 ], [ %879, %873 ]
  %884 = icmp eq i32 %883, 0
  br i1 %884, label %885, label %886

885:                                              ; preds = %882
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #10
  br label %886

886:                                              ; preds = %885, %882, %870
  %887 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 1, i32 0, i32 0
  %888 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %887, align 8
  %889 = icmp eq %"class.WTF::StringImpl"* %888, null
  br i1 %889, label %903, label %890

890:                                              ; preds = %886
  %891 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %892 = load atomic i32, i32* %891 monotonic, align 4
  %893 = and i32 %892, 2
  %894 = icmp eq i32 %893, 0
  %895 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 0
  %896 = load i32, i32* %895, align 4
  br i1 %894, label %897, label %899

897:                                              ; preds = %890
  %898 = add i32 %896, -1
  store i32 %898, i32* %895, align 4
  br label %899

899:                                              ; preds = %897, %890
  %900 = phi i32 [ %898, %897 ], [ %896, %890 ]
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %902, label %903

902:                                              ; preds = %899
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %888) #10
  br label %903

903:                                              ; preds = %902, %899, %886
  %904 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %905 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %904, align 8
  %906 = icmp eq %"class.WTF::StringImpl"* %905, null
  br i1 %906, label %920, label %907

907:                                              ; preds = %903
  %908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %905, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %909 = load atomic i32, i32* %908 monotonic, align 4
  %910 = and i32 %909, 2
  %911 = icmp eq i32 %910, 0
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %905, i64 0, i32 0
  %913 = load i32, i32* %912, align 4
  br i1 %911, label %914, label %916

914:                                              ; preds = %907
  %915 = add i32 %913, -1
  store i32 %915, i32* %912, align 4
  br label %916

916:                                              ; preds = %914, %907
  %917 = phi i32 [ %915, %914 ], [ %913, %907 ]
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %919, label %920

919:                                              ; preds = %916
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %905) #10
  br label %920

920:                                              ; preds = %903, %916, %919
  %921 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %851, align 8
  %922 = icmp eq %"class.WTF::StringImpl"* %921, null
  br i1 %922, label %936, label %923

923:                                              ; preds = %920
  %924 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %925 = load atomic i32, i32* %924 monotonic, align 4
  %926 = and i32 %925, 2
  %927 = icmp eq i32 %926, 0
  %928 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 0
  %929 = load i32, i32* %928, align 4
  br i1 %927, label %930, label %932

930:                                              ; preds = %923
  %931 = add i32 %929, -1
  store i32 %931, i32* %928, align 4
  br label %932

932:                                              ; preds = %930, %923
  %933 = phi i32 [ %931, %930 ], [ %929, %923 ]
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %935, label %936

935:                                              ; preds = %932
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %921) #10
  br label %936

936:                                              ; preds = %920, %932, %935
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %805) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %804) #10
  %937 = icmp eq i32 %661, 0
  br i1 %937, label %938, label %940

938:                                              ; preds = %936
  %939 = bitcast %"class.WTF::String"* %17 to i64*
  store i64 %872, i64* %939, align 8
  br label %942

940:                                              ; preds = %936
  %941 = add i32 %137, -3
  br label %942

942:                                              ; preds = %794, %940, %938
  %943 = phi i64 [ 0, %938 ], [ %872, %940 ], [ %640, %794 ]
  %944 = phi i1 [ false, %938 ], [ true, %940 ], [ true, %794 ]
  %945 = phi i32 [ 0, %938 ], [ %941, %940 ], [ %661, %794 ]
  br i1 %669, label %959, label %946

946:                                              ; preds = %942
  %947 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %948 = load atomic i32, i32* %947 monotonic, align 4
  %949 = and i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 0
  %952 = load i32, i32* %951, align 4
  br i1 %950, label %953, label %955

953:                                              ; preds = %946
  %954 = add i32 %952, -1
  store i32 %954, i32* %951, align 4
  br label %955

955:                                              ; preds = %953, %946
  %956 = phi i32 [ %954, %953 ], [ %952, %946 ]
  %957 = icmp eq i32 %956, 0
  br i1 %957, label %958, label %959

958:                                              ; preds = %955
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %668) #10
  br label %959

959:                                              ; preds = %942, %955, %958
  br i1 %944, label %960, label %1429

960:                                              ; preds = %959, %660
  %961 = phi i64 [ %943, %959 ], [ %640, %660 ]
  %962 = phi i32 [ %945, %959 ], [ %661, %660 ]
  %963 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %113, align 8
  %964 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %963, i64 0, i32 2
  %965 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %964, i32 %962) #10
  %966 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %965, i64 0, i32 0, i32 0, i32 0
  %967 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %966, align 8
  %968 = icmp eq %"class.WTF::StringImpl"* %967, null
  br i1 %968, label %986, label %969

969:                                              ; preds = %960
  %970 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %971 = load atomic i32, i32* %970 monotonic, align 4
  %972 = and i32 %971, 2
  %973 = icmp eq i32 %972, 0
  br i1 %973, label %974, label %991

974:                                              ; preds = %969
  %975 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 0
  %976 = load i32, i32* %975, align 4
  %977 = zext i32 %976 to i33
  %978 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %977, i33 1) #10
  %979 = extractvalue { i33, i1 } %978, 1
  %980 = extractvalue { i33, i1 } %978, 0
  %981 = icmp slt i33 %980, 0
  %982 = or i1 %979, %981
  br i1 %982, label %983, label %984, !prof !2

983:                                              ; preds = %974
  call void @llvm.trap() #10
  unreachable

984:                                              ; preds = %974
  %985 = trunc i33 %980 to i32
  store i32 %985, i32* %975, align 4
  br label %991

986:                                              ; preds = %960
  %987 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %987) #10
  %988 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %988, align 8
  %989 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %990 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %989, i64* %990, align 8
  br label %1000

991:                                              ; preds = %969, %984
  %992 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %992) #10
  %993 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %967, %"class.WTF::StringImpl"** %993, align 8
  %994 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 1
  %995 = load i32, i32* %994, align 4
  %996 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 1
  %997 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %998 = bitcast i8** %997 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %996, %"class.WTF::StringImpl"** %998, align 8
  %999 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1000

1000:                                             ; preds = %991, %986
  %1001 = phi i64 [ %999, %991 ], [ %989, %986 ]
  %1002 = phi i8* [ %992, %991 ], [ %987, %986 ]
  %1003 = phi i32 [ %995, %991 ], [ 0, %986 ]
  %1004 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %1003, i32* %1004, align 8
  %1005 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1005) #10
  %1006 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %1001, i64* %1006, align 8
  %1007 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8** %1007, align 8
  %1008 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 8, i32* %1008, align 8
  %1009 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1005) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1002) #10
  br i1 %1009, label %1033, label %1010

1010:                                             ; preds = %1000
  %1011 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1011) #10
  br i1 %968, label %1012, label %1016

1012:                                             ; preds = %1010
  %1013 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %1013, align 8
  %1014 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1015 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %1014, i64* %1015, align 8
  br label %1024

1016:                                             ; preds = %1010
  %1017 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %967, %"class.WTF::StringImpl"** %1017, align 8
  %1018 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 1
  %1019 = load i32, i32* %1018, align 4
  %1020 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 1
  %1021 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %1022 = bitcast i8** %1021 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1020, %"class.WTF::StringImpl"** %1022, align 8
  %1023 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1024

1024:                                             ; preds = %1016, %1012
  %1025 = phi i64 [ %1023, %1016 ], [ %1014, %1012 ]
  %1026 = phi i32 [ %1019, %1016 ], [ 0, %1012 ]
  %1027 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %1026, i32* %1027, align 8
  %1028 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1028) #10
  %1029 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %1025, i64* %1029, align 8
  %1030 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %1030, align 8
  %1031 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 7, i32* %1031, align 8
  %1032 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1028) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1011) #10
  br i1 %1032, label %1033, label %1174

1033:                                             ; preds = %1024, %1000
  %1034 = bitcast %"class.WTF::StringAppend"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1034) #10
  %1035 = bitcast %"class.WTF::StringAppend.547"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1035) #10
  br i1 %968, label %1080, label %1036

1036:                                             ; preds = %1033
  %1037 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1038 = load atomic i32, i32* %1037 monotonic, align 4
  %1039 = and i32 %1038, 2
  %1040 = icmp eq i32 %1039, 0
  %1041 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 0
  %1042 = load i32, i32* %1041, align 4
  br i1 %1040, label %1043, label %1053

1043:                                             ; preds = %1036
  %1044 = zext i32 %1042 to i33
  %1045 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1044, i33 1) #10
  %1046 = extractvalue { i33, i1 } %1045, 1
  %1047 = extractvalue { i33, i1 } %1045, 0
  %1048 = icmp slt i33 %1047, 0
  %1049 = or i1 %1046, %1048
  br i1 %1049, label %1050, label %1051, !prof !2

1050:                                             ; preds = %1043
  call void @llvm.trap() #10
  unreachable

1051:                                             ; preds = %1043
  %1052 = trunc i33 %1047 to i32
  store i32 %1052, i32* %1041, align 4
  br label %1053

1053:                                             ; preds = %1036, %1051
  %1054 = phi i32 [ %1052, %1051 ], [ %1042, %1036 ]
  %1055 = load atomic i32, i32* %1037 monotonic, align 4
  %1056 = and i32 %1055, 2
  %1057 = icmp eq i32 %1056, 0
  %1058 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 0
  br i1 %1057, label %1059, label %1069

1059:                                             ; preds = %1053
  %1060 = zext i32 %1054 to i33
  %1061 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1060, i33 1) #10
  %1062 = extractvalue { i33, i1 } %1061, 1
  %1063 = extractvalue { i33, i1 } %1061, 0
  %1064 = icmp slt i33 %1063, 0
  %1065 = or i1 %1062, %1064
  br i1 %1065, label %1066, label %1067, !prof !2

1066:                                             ; preds = %1059
  call void @llvm.trap() #10
  unreachable

1067:                                             ; preds = %1059
  %1068 = trunc i33 %1063 to i32
  store i32 %1068, i32* %1058, align 4
  br label %1069

1069:                                             ; preds = %1067, %1053
  %1070 = phi i32 [ %1068, %1067 ], [ %1054, %1053 ]
  %1071 = load atomic i32, i32* %1037 monotonic, align 4
  %1072 = and i32 %1071, 2
  %1073 = icmp eq i32 %1072, 0
  br i1 %1073, label %1074, label %1076

1074:                                             ; preds = %1069
  %1075 = add i32 %1070, -1
  store i32 %1075, i32* %1058, align 4
  br label %1076

1076:                                             ; preds = %1074, %1069
  %1077 = phi i32 [ %1075, %1074 ], [ %1070, %1069 ]
  %1078 = icmp eq i32 %1077, 0
  br i1 %1078, label %1079, label %1080

1079:                                             ; preds = %1076
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %967) #10
  br label %1080

1080:                                             ; preds = %1033, %1076, %1079
  %1081 = getelementptr inbounds %"class.WTF::StringAppend.547", %"class.WTF::StringAppend.547"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %967, %"class.WTF::StringImpl"** %1081, align 8
  %1082 = getelementptr inbounds %"class.WTF::StringAppend.547", %"class.WTF::StringAppend.547"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8** %1082, align 8
  %1083 = inttoptr i64 %961 to %"class.WTF::StringImpl"*
  %1084 = icmp eq i64 %961, 0
  br i1 %1084, label %1102, label %1085

1085:                                             ; preds = %1080
  %1086 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1083, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1087 = load atomic i32, i32* %1086 monotonic, align 4
  %1088 = and i32 %1087, 2
  %1089 = icmp eq i32 %1088, 0
  br i1 %1089, label %1090, label %1102

1090:                                             ; preds = %1085
  %1091 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1083, i64 0, i32 0
  %1092 = load i32, i32* %1091, align 4
  %1093 = zext i32 %1092 to i33
  %1094 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1093, i33 1) #10
  %1095 = extractvalue { i33, i1 } %1094, 1
  %1096 = extractvalue { i33, i1 } %1094, 0
  %1097 = icmp slt i33 %1096, 0
  %1098 = or i1 %1095, %1097
  br i1 %1098, label %1099, label %1100, !prof !2

1099:                                             ; preds = %1090
  call void @llvm.trap() #10
  unreachable

1100:                                             ; preds = %1090
  %1101 = trunc i33 %1096 to i32
  store i32 %1101, i32* %1091, align 4
  br label %1102

1102:                                             ; preds = %1080, %1085, %1100
  call void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %22, %"class.WTF::StringAppend.547"* nonnull dereferenceable(16) %23, %"class.WTF::StringImpl"* %1083)
  %1103 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend"* nonnull %22)
  %1104 = ptrtoint %"class.WTF::StringImpl"* %1103 to i64
  br i1 %1084, label %1118, label %1105

1105:                                             ; preds = %1102
  %1106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1083, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1107 = load atomic i32, i32* %1106 monotonic, align 4
  %1108 = and i32 %1107, 2
  %1109 = icmp eq i32 %1108, 0
  %1110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1083, i64 0, i32 0
  %1111 = load i32, i32* %1110, align 4
  br i1 %1109, label %1112, label %1114

1112:                                             ; preds = %1105
  %1113 = add i32 %1111, -1
  store i32 %1113, i32* %1110, align 4
  br label %1114

1114:                                             ; preds = %1112, %1105
  %1115 = phi i32 [ %1113, %1112 ], [ %1111, %1105 ]
  %1116 = icmp eq i32 %1115, 0
  br i1 %1116, label %1117, label %1118

1117:                                             ; preds = %1114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1083) #10
  br label %1118

1118:                                             ; preds = %1117, %1114, %1102
  %1119 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %22, i64 0, i32 1, i32 0, i32 0
  %1120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1119, align 8
  %1121 = icmp eq %"class.WTF::StringImpl"* %1120, null
  br i1 %1121, label %1135, label %1122

1122:                                             ; preds = %1118
  %1123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1124 = load atomic i32, i32* %1123 monotonic, align 4
  %1125 = and i32 %1124, 2
  %1126 = icmp eq i32 %1125, 0
  %1127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1120, i64 0, i32 0
  %1128 = load i32, i32* %1127, align 4
  br i1 %1126, label %1129, label %1131

1129:                                             ; preds = %1122
  %1130 = add i32 %1128, -1
  store i32 %1130, i32* %1127, align 4
  br label %1131

1131:                                             ; preds = %1129, %1122
  %1132 = phi i32 [ %1130, %1129 ], [ %1128, %1122 ]
  %1133 = icmp eq i32 %1132, 0
  br i1 %1133, label %1134, label %1135

1134:                                             ; preds = %1131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1120) #10
  br label %1135

1135:                                             ; preds = %1134, %1131, %1118
  %1136 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1136, align 8
  %1138 = icmp eq %"class.WTF::StringImpl"* %1137, null
  br i1 %1138, label %1152, label %1139

1139:                                             ; preds = %1135
  %1140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1141 = load atomic i32, i32* %1140 monotonic, align 4
  %1142 = and i32 %1141, 2
  %1143 = icmp eq i32 %1142, 0
  %1144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1137, i64 0, i32 0
  %1145 = load i32, i32* %1144, align 4
  br i1 %1143, label %1146, label %1148

1146:                                             ; preds = %1139
  %1147 = add i32 %1145, -1
  store i32 %1147, i32* %1144, align 4
  br label %1148

1148:                                             ; preds = %1146, %1139
  %1149 = phi i32 [ %1147, %1146 ], [ %1145, %1139 ]
  %1150 = icmp eq i32 %1149, 0
  br i1 %1150, label %1151, label %1152

1151:                                             ; preds = %1148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1137) #10
  br label %1152

1152:                                             ; preds = %1135, %1148, %1151
  %1153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1081, align 8
  %1154 = icmp eq %"class.WTF::StringImpl"* %1153, null
  br i1 %1154, label %1168, label %1155

1155:                                             ; preds = %1152
  %1156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1157 = load atomic i32, i32* %1156 monotonic, align 4
  %1158 = and i32 %1157, 2
  %1159 = icmp eq i32 %1158, 0
  %1160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1153, i64 0, i32 0
  %1161 = load i32, i32* %1160, align 4
  br i1 %1159, label %1162, label %1164

1162:                                             ; preds = %1155
  %1163 = add i32 %1161, -1
  store i32 %1163, i32* %1160, align 4
  br label %1164

1164:                                             ; preds = %1162, %1155
  %1165 = phi i32 [ %1163, %1162 ], [ %1161, %1155 ]
  %1166 = icmp eq i32 %1165, 0
  br i1 %1166, label %1167, label %1168

1167:                                             ; preds = %1164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1153) #10
  br label %1168

1168:                                             ; preds = %1152, %1164, %1167
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1035) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1034) #10
  %1169 = icmp eq i32 %962, 0
  br i1 %1169, label %1170, label %1172

1170:                                             ; preds = %1168
  %1171 = bitcast %"class.WTF::String"* %17 to i64*
  store i64 %1104, i64* %1171, align 8
  br label %1408

1172:                                             ; preds = %1168
  %1173 = add i32 %962, -1
  br label %1174

1174:                                             ; preds = %1172, %1024
  %1175 = phi i64 [ %1104, %1172 ], [ %961, %1024 ]
  %1176 = phi i32 [ %1173, %1172 ], [ %962, %1024 ]
  %1177 = icmp eq i32 %1176, 0
  br i1 %1177, label %1201, label %1178

1178:                                             ; preds = %1174
  %1179 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %1180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1179, i64 0, i32 0, i32 0
  %1181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1180, align 8
  %1182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1181, %"class.WTF::StringImpl"** %1182, align 8
  %1183 = icmp eq %"class.WTF::StringImpl"* %1181, null
  br i1 %1183, label %1408, label %1184

1184:                                             ; preds = %1178
  %1185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1186 = load atomic i32, i32* %1185 monotonic, align 4
  %1187 = and i32 %1186, 2
  %1188 = icmp eq i32 %1187, 0
  br i1 %1188, label %1189, label %1408

1189:                                             ; preds = %1184
  %1190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1181, i64 0, i32 0
  %1191 = load i32, i32* %1190, align 4
  %1192 = zext i32 %1191 to i33
  %1193 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1192, i33 1) #10
  %1194 = extractvalue { i33, i1 } %1193, 1
  %1195 = extractvalue { i33, i1 } %1193, 0
  %1196 = icmp slt i33 %1195, 0
  %1197 = or i1 %1194, %1196
  br i1 %1197, label %1198, label %1199, !prof !2

1198:                                             ; preds = %1189
  call void @llvm.trap() #10
  unreachable

1199:                                             ; preds = %1189
  %1200 = trunc i33 %1195 to i32
  store i32 %1200, i32* %1190, align 4
  br label %1408

1201:                                             ; preds = %1174
  %1202 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %113, align 8
  %1203 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %1202, i64 0, i32 2
  %1204 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1203, i32 0) #10
  %1205 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1204, i64 0, i32 0, i32 0, i32 0
  %1206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1205, align 8
  %1207 = icmp eq %"class.WTF::StringImpl"* %1206, null
  br i1 %1207, label %1225, label %1208

1208:                                             ; preds = %1201
  %1209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1210 = load atomic i32, i32* %1209 monotonic, align 4
  %1211 = and i32 %1210, 2
  %1212 = icmp eq i32 %1211, 0
  br i1 %1212, label %1213, label %1225

1213:                                             ; preds = %1208
  %1214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1206, i64 0, i32 0
  %1215 = load i32, i32* %1214, align 4
  %1216 = zext i32 %1215 to i33
  %1217 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1216, i33 1) #10
  %1218 = extractvalue { i33, i1 } %1217, 1
  %1219 = extractvalue { i33, i1 } %1217, 0
  %1220 = icmp slt i33 %1219, 0
  %1221 = or i1 %1218, %1220
  br i1 %1221, label %1222, label %1223, !prof !2

1222:                                             ; preds = %1213
  call void @llvm.trap() #10
  unreachable

1223:                                             ; preds = %1213
  %1224 = trunc i33 %1219 to i32
  store i32 %1224, i32* %1214, align 4
  br label %1225

1225:                                             ; preds = %1201, %1208, %1223
  %1226 = bitcast %"class.WTF::StringView"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1226) #10
  %1227 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1228 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %1227, i64* %1228, align 8
  %1229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8** %1229, align 8
  %1230 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 8, i32* %1230, align 8
  br i1 %1207, label %1231, label %1232

1231:                                             ; preds = %1225
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1226) #10
  br label %1234

1232:                                             ; preds = %1225
  %1233 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %1206, %"class.WTF::StringView"* nonnull dereferenceable(24) %24) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1226) #10
  br i1 %1233, label %1257, label %1234

1234:                                             ; preds = %1231, %1232
  %1235 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %1236 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1235, i64 0, i32 0, i32 0
  %1237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1236, align 8
  %1238 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1237, %"class.WTF::StringImpl"** %1238, align 8
  %1239 = icmp eq %"class.WTF::StringImpl"* %1237, null
  br i1 %1239, label %1392, label %1240

1240:                                             ; preds = %1234
  %1241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1242 = load atomic i32, i32* %1241 monotonic, align 4
  %1243 = and i32 %1242, 2
  %1244 = icmp eq i32 %1243, 0
  br i1 %1244, label %1245, label %1392

1245:                                             ; preds = %1240
  %1246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1237, i64 0, i32 0
  %1247 = load i32, i32* %1246, align 4
  %1248 = zext i32 %1247 to i33
  %1249 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1248, i33 1) #10
  %1250 = extractvalue { i33, i1 } %1249, 1
  %1251 = extractvalue { i33, i1 } %1249, 0
  %1252 = icmp slt i33 %1251, 0
  %1253 = or i1 %1250, %1252
  br i1 %1253, label %1254, label %1255, !prof !2

1254:                                             ; preds = %1245
  call void @llvm.trap() #10
  unreachable

1255:                                             ; preds = %1245
  %1256 = trunc i33 %1251 to i32
  store i32 %1256, i32* %1246, align 4
  br label %1392

1257:                                             ; preds = %1232
  %1258 = bitcast %"class.WTF::StringAppend"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1258) #10
  %1259 = bitcast %"class.WTF::StringAppend.547"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1259) #10
  %1260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1261 = load atomic i32, i32* %1260 monotonic, align 4
  %1262 = and i32 %1261, 2
  %1263 = icmp eq i32 %1262, 0
  %1264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1206, i64 0, i32 0
  %1265 = load i32, i32* %1264, align 4
  br i1 %1263, label %1266, label %1276

1266:                                             ; preds = %1257
  %1267 = zext i32 %1265 to i33
  %1268 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1267, i33 1) #10
  %1269 = extractvalue { i33, i1 } %1268, 1
  %1270 = extractvalue { i33, i1 } %1268, 0
  %1271 = icmp slt i33 %1270, 0
  %1272 = or i1 %1269, %1271
  br i1 %1272, label %1273, label %1274, !prof !2

1273:                                             ; preds = %1266
  call void @llvm.trap() #10
  unreachable

1274:                                             ; preds = %1266
  %1275 = trunc i33 %1270 to i32
  store i32 %1275, i32* %1264, align 4
  br label %1276

1276:                                             ; preds = %1257, %1274
  %1277 = phi i32 [ %1275, %1274 ], [ %1265, %1257 ]
  %1278 = load atomic i32, i32* %1260 monotonic, align 4
  %1279 = and i32 %1278, 2
  %1280 = icmp eq i32 %1279, 0
  %1281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1206, i64 0, i32 0
  br i1 %1280, label %1282, label %1292

1282:                                             ; preds = %1276
  %1283 = zext i32 %1277 to i33
  %1284 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1283, i33 1) #10
  %1285 = extractvalue { i33, i1 } %1284, 1
  %1286 = extractvalue { i33, i1 } %1284, 0
  %1287 = icmp slt i33 %1286, 0
  %1288 = or i1 %1285, %1287
  br i1 %1288, label %1289, label %1290, !prof !2

1289:                                             ; preds = %1282
  call void @llvm.trap() #10
  unreachable

1290:                                             ; preds = %1282
  %1291 = trunc i33 %1286 to i32
  store i32 %1291, i32* %1281, align 4
  br label %1292

1292:                                             ; preds = %1290, %1276
  %1293 = phi i32 [ %1291, %1290 ], [ %1277, %1276 ]
  %1294 = load atomic i32, i32* %1260 monotonic, align 4
  %1295 = and i32 %1294, 2
  %1296 = icmp eq i32 %1295, 0
  br i1 %1296, label %1297, label %1299

1297:                                             ; preds = %1292
  %1298 = add i32 %1293, -1
  store i32 %1298, i32* %1281, align 4
  br label %1299

1299:                                             ; preds = %1297, %1292
  %1300 = phi i32 [ %1298, %1297 ], [ %1293, %1292 ]
  %1301 = icmp eq i32 %1300, 0
  br i1 %1301, label %1302, label %1303

1302:                                             ; preds = %1299
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1206) #10
  br label %1303

1303:                                             ; preds = %1299, %1302
  %1304 = getelementptr inbounds %"class.WTF::StringAppend.547", %"class.WTF::StringAppend.547"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1206, %"class.WTF::StringImpl"** %1304, align 8
  %1305 = getelementptr inbounds %"class.WTF::StringAppend.547", %"class.WTF::StringAppend.547"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8** %1305, align 8
  %1306 = inttoptr i64 %1175 to %"class.WTF::StringImpl"*
  %1307 = icmp eq i64 %1175, 0
  br i1 %1307, label %1325, label %1308

1308:                                             ; preds = %1303
  %1309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1306, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1310 = load atomic i32, i32* %1309 monotonic, align 4
  %1311 = and i32 %1310, 2
  %1312 = icmp eq i32 %1311, 0
  br i1 %1312, label %1313, label %1325

1313:                                             ; preds = %1308
  %1314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1306, i64 0, i32 0
  %1315 = load i32, i32* %1314, align 4
  %1316 = zext i32 %1315 to i33
  %1317 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1316, i33 1) #10
  %1318 = extractvalue { i33, i1 } %1317, 1
  %1319 = extractvalue { i33, i1 } %1317, 0
  %1320 = icmp slt i33 %1319, 0
  %1321 = or i1 %1318, %1320
  br i1 %1321, label %1322, label %1323, !prof !2

1322:                                             ; preds = %1313
  call void @llvm.trap() #10
  unreachable

1323:                                             ; preds = %1313
  %1324 = trunc i33 %1319 to i32
  store i32 %1324, i32* %1314, align 4
  br label %1325

1325:                                             ; preds = %1303, %1308, %1323
  call void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %25, %"class.WTF::StringAppend.547"* nonnull dereferenceable(16) %26, %"class.WTF::StringImpl"* %1306)
  %1326 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend"* nonnull %25)
  %1327 = ptrtoint %"class.WTF::StringImpl"* %1326 to i64
  br i1 %1307, label %1341, label %1328

1328:                                             ; preds = %1325
  %1329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1306, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1330 = load atomic i32, i32* %1329 monotonic, align 4
  %1331 = and i32 %1330, 2
  %1332 = icmp eq i32 %1331, 0
  %1333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1306, i64 0, i32 0
  %1334 = load i32, i32* %1333, align 4
  br i1 %1332, label %1335, label %1337

1335:                                             ; preds = %1328
  %1336 = add i32 %1334, -1
  store i32 %1336, i32* %1333, align 4
  br label %1337

1337:                                             ; preds = %1335, %1328
  %1338 = phi i32 [ %1336, %1335 ], [ %1334, %1328 ]
  %1339 = icmp eq i32 %1338, 0
  br i1 %1339, label %1340, label %1341

1340:                                             ; preds = %1337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1306) #10
  br label %1341

1341:                                             ; preds = %1340, %1337, %1325
  %1342 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %25, i64 0, i32 1, i32 0, i32 0
  %1343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1342, align 8
  %1344 = icmp eq %"class.WTF::StringImpl"* %1343, null
  br i1 %1344, label %1358, label %1345

1345:                                             ; preds = %1341
  %1346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1343, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1347 = load atomic i32, i32* %1346 monotonic, align 4
  %1348 = and i32 %1347, 2
  %1349 = icmp eq i32 %1348, 0
  %1350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1343, i64 0, i32 0
  %1351 = load i32, i32* %1350, align 4
  br i1 %1349, label %1352, label %1354

1352:                                             ; preds = %1345
  %1353 = add i32 %1351, -1
  store i32 %1353, i32* %1350, align 4
  br label %1354

1354:                                             ; preds = %1352, %1345
  %1355 = phi i32 [ %1353, %1352 ], [ %1351, %1345 ]
  %1356 = icmp eq i32 %1355, 0
  br i1 %1356, label %1357, label %1358

1357:                                             ; preds = %1354
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1343) #10
  br label %1358

1358:                                             ; preds = %1357, %1354, %1341
  %1359 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1359, align 8
  %1361 = icmp eq %"class.WTF::StringImpl"* %1360, null
  br i1 %1361, label %1375, label %1362

1362:                                             ; preds = %1358
  %1363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1364 = load atomic i32, i32* %1363 monotonic, align 4
  %1365 = and i32 %1364, 2
  %1366 = icmp eq i32 %1365, 0
  %1367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1360, i64 0, i32 0
  %1368 = load i32, i32* %1367, align 4
  br i1 %1366, label %1369, label %1371

1369:                                             ; preds = %1362
  %1370 = add i32 %1368, -1
  store i32 %1370, i32* %1367, align 4
  br label %1371

1371:                                             ; preds = %1369, %1362
  %1372 = phi i32 [ %1370, %1369 ], [ %1368, %1362 ]
  %1373 = icmp eq i32 %1372, 0
  br i1 %1373, label %1374, label %1375

1374:                                             ; preds = %1371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1360) #10
  br label %1375

1375:                                             ; preds = %1358, %1371, %1374
  %1376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1304, align 8
  %1377 = icmp eq %"class.WTF::StringImpl"* %1376, null
  br i1 %1377, label %1391, label %1378

1378:                                             ; preds = %1375
  %1379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1376, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1380 = load atomic i32, i32* %1379 monotonic, align 4
  %1381 = and i32 %1380, 2
  %1382 = icmp eq i32 %1381, 0
  %1383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1376, i64 0, i32 0
  %1384 = load i32, i32* %1383, align 4
  br i1 %1382, label %1385, label %1387

1385:                                             ; preds = %1378
  %1386 = add i32 %1384, -1
  store i32 %1386, i32* %1383, align 4
  br label %1387

1387:                                             ; preds = %1385, %1378
  %1388 = phi i32 [ %1386, %1385 ], [ %1384, %1378 ]
  %1389 = icmp eq i32 %1388, 0
  br i1 %1389, label %1390, label %1391

1390:                                             ; preds = %1387
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1376) #10
  br label %1391

1391:                                             ; preds = %1390, %1387, %1375
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1259) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1258) #10
  br label %1393

1392:                                             ; preds = %1255, %1240, %1234
  br i1 %1207, label %1408, label %1393

1393:                                             ; preds = %1391, %1392
  %1394 = phi i32 [ 0, %1391 ], [ 1, %1392 ]
  %1395 = phi i64 [ %1327, %1391 ], [ %1175, %1392 ]
  %1396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1397 = load atomic i32, i32* %1396 monotonic, align 4
  %1398 = and i32 %1397, 2
  %1399 = icmp eq i32 %1398, 0
  %1400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1206, i64 0, i32 0
  %1401 = load i32, i32* %1400, align 4
  br i1 %1399, label %1402, label %1404

1402:                                             ; preds = %1393
  %1403 = add i32 %1401, -1
  store i32 %1403, i32* %1400, align 4
  br label %1404

1404:                                             ; preds = %1402, %1393
  %1405 = phi i32 [ %1403, %1402 ], [ %1401, %1393 ]
  %1406 = icmp eq i32 %1405, 0
  br i1 %1406, label %1407, label %1408

1407:                                             ; preds = %1404
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1206) #10
  br label %1408

1408:                                             ; preds = %1407, %1404, %1392, %1199, %1184, %1178, %1170
  %1409 = phi i64 [ 0, %1170 ], [ %1175, %1178 ], [ %1175, %1184 ], [ %1175, %1199 ], [ %1175, %1392 ], [ %1395, %1404 ], [ %1395, %1407 ]
  %1410 = phi i32 [ 1, %1170 ], [ 1, %1178 ], [ 1, %1184 ], [ 1, %1199 ], [ 1, %1392 ], [ %1394, %1404 ], [ %1394, %1407 ]
  br i1 %968, label %1424, label %1411

1411:                                             ; preds = %1408
  %1412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1413 = load atomic i32, i32* %1412 monotonic, align 4
  %1414 = and i32 %1413, 2
  %1415 = icmp eq i32 %1414, 0
  %1416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 0
  %1417 = load i32, i32* %1416, align 4
  br i1 %1415, label %1418, label %1420

1418:                                             ; preds = %1411
  %1419 = add i32 %1417, -1
  store i32 %1419, i32* %1416, align 4
  br label %1420

1420:                                             ; preds = %1418, %1411
  %1421 = phi i32 [ %1419, %1418 ], [ %1417, %1411 ]
  %1422 = icmp eq i32 %1421, 0
  br i1 %1422, label %1423, label %1424

1423:                                             ; preds = %1420
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %967) #10
  br label %1424

1424:                                             ; preds = %1408, %1420, %1423
  %1425 = icmp eq i32 %1410, 0
  br i1 %1425, label %1426, label %1429

1426:                                             ; preds = %1424, %658
  %1427 = phi i64 [ %640, %658 ], [ %1409, %1424 ]
  %1428 = bitcast %"class.WTF::String"* %17 to i64*
  store i64 %1427, i64* %1428, align 8
  br label %1446

1429:                                             ; preds = %959, %1424
  %1430 = phi i64 [ %1409, %1424 ], [ %943, %959 ]
  %1431 = inttoptr i64 %1430 to %"class.WTF::StringImpl"*
  %1432 = icmp eq i64 %1430, 0
  br i1 %1432, label %1446, label %1433

1433:                                             ; preds = %1429
  %1434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1435 = load atomic i32, i32* %1434 monotonic, align 4
  %1436 = and i32 %1435, 2
  %1437 = icmp eq i32 %1436, 0
  %1438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1431, i64 0, i32 0
  %1439 = load i32, i32* %1438, align 4
  br i1 %1437, label %1440, label %1442

1440:                                             ; preds = %1433
  %1441 = add i32 %1439, -1
  store i32 %1441, i32* %1438, align 4
  br label %1442

1442:                                             ; preds = %1440, %1433
  %1443 = phi i32 [ %1441, %1440 ], [ %1439, %1433 ]
  %1444 = icmp eq i32 %1443, 0
  br i1 %1444, label %1445, label %1446

1445:                                             ; preds = %1442
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1431) #10
  br label %1446

1446:                                             ; preds = %1445, %1442, %1429, %1426, %634, %619, %613, %638, %637
  br i1 %168, label %1474, label %1447

1447:                                             ; preds = %1446
  %1448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1449 = load atomic i32, i32* %1448 monotonic, align 4
  %1450 = and i32 %1449, 2
  %1451 = icmp eq i32 %1450, 0
  %1452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %1453 = load i32, i32* %1452, align 4
  br i1 %1451, label %1454, label %1456

1454:                                             ; preds = %1447
  %1455 = add i32 %1453, -1
  store i32 %1455, i32* %1452, align 4
  br label %1456

1456:                                             ; preds = %1454, %1447
  %1457 = phi i32 [ %1455, %1454 ], [ %1453, %1447 ]
  %1458 = icmp eq i32 %1457, 0
  br i1 %1458, label %1459, label %1461

1459:                                             ; preds = %1456
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #10
  br label %1461

1460:                                             ; preds = %577, %562, %556
  br i1 %168, label %1474, label %1461

1461:                                             ; preds = %1456, %1459, %1460
  %1462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1463 = load atomic i32, i32* %1462 monotonic, align 4
  %1464 = and i32 %1463, 2
  %1465 = icmp eq i32 %1464, 0
  %1466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %1467 = load i32, i32* %1466, align 4
  br i1 %1465, label %1468, label %1470

1468:                                             ; preds = %1461
  %1469 = add i32 %1467, -1
  store i32 %1469, i32* %1466, align 4
  br label %1470

1470:                                             ; preds = %1468, %1461
  %1471 = phi i32 [ %1469, %1468 ], [ %1467, %1461 ]
  %1472 = icmp eq i32 %1471, 0
  br i1 %1472, label %1473, label %1474

1473:                                             ; preds = %1470
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #10
  br label %1474

1474:                                             ; preds = %1446, %1473, %1470, %1460, %160, %145, %139
  %1475 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %113, align 8
  %1476 = icmp eq %"class.blink::SpaceSplitString::Data"* %1475, null
  br i1 %1476, label %1484, label %1477

1477:                                             ; preds = %1474
  %1478 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %1475, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1478) #10
  %1479 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %1475, i64 0, i32 0, i32 0, i32 0, i32 0
  %1480 = load i32, i32* %1479, align 4
  %1481 = icmp eq i32 %1480, 0
  br i1 %1481, label %1482, label %1484

1482:                                             ; preds = %1477
  call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %1475) #10
  %1483 = bitcast %"class.blink::SpaceSplitString::Data"* %1475 to i8*
  call void @free(i8* %1483) #10
  br label %1484

1484:                                             ; preds = %1474, %1477, %1482
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #10
  br label %1485

1485:                                             ; preds = %109, %94, %88, %1484
  %1486 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %1487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1486, align 8
  ret %"class.WTF::StringImpl"* %1487
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.547"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.547", %"class.WTF::StringAppend.547"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.547", %"class.WTF::StringAppend.547"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #10
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #10
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.642", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.642"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.642"* nonnull %2, i8* %14) #10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #10
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #10
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #10
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #10
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #10
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #10
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #10
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #10
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #10
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31HTMLFormControlElementWithState26setIDLExposedAutofillValueERKN3WTF6StringE(%"class.blink::HTMLFormControlElementWithState"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAutocompleteAttrE, align 8
  %6 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %33, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 acquire, align 4
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %10
  %16 = load atomic i32, i32* %11 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #10
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #10
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %33

31:                                               ; preds = %10
  %32 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %8) #10
  br label %33

33:                                               ; preds = %2, %15, %29, %31
  %34 = phi %"class.WTF::StringImpl"* [ %32, %31 ], [ %8, %15 ], [ %8, %29 ], [ null, %2 ]
  %35 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %36 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %35, i64* %36, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #10
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #10
  br label %53

53:                                               ; preds = %33, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv(%"class.blink::HTMLFormControlElementWithState"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv(%"class.blink::HTMLFormControlElementWithState"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 256
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::HTMLFormControlElementWithState"* %0 to i1 (%"class.blink::HTMLFormControlElementWithState"*)***
  %8 = load i1 (%"class.blink::HTMLFormControlElementWithState"*)**, i1 (%"class.blink::HTMLFormControlElementWithState"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElementWithState"*)*, i1 (%"class.blink::HTMLFormControlElementWithState"*)** %8, i64 186
  %10 = load i1 (%"class.blink::HTMLFormControlElementWithState"*)*, i1 (%"class.blink::HTMLFormControlElementWithState"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::HTMLFormControlElementWithState"* %0) #10
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i1 [ false, %1 ], [ %11, %6 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 -1, i32 0, i32 0, i32 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %2, i64 2
  %4 = bitcast %"class.blink::Member.8"* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::Member.8"* %2 to %"class.blink::HTMLFormControlElementWithState"*
  %10 = bitcast %"class.blink::Member.8"* %2 to i1 (%"class.blink::HTMLFormControlElementWithState"*)***
  %11 = load i1 (%"class.blink::HTMLFormControlElementWithState"*)**, i1 (%"class.blink::HTMLFormControlElementWithState"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElementWithState"*)*, i1 (%"class.blink::HTMLFormControlElementWithState"*)** %11, i64 186
  %13 = load i1 (%"class.blink::HTMLFormControlElementWithState"*)*, i1 (%"class.blink::HTMLFormControlElementWithState"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::HTMLFormControlElementWithState"* %9) #10
  br label %15

15:                                               ; preds = %1, %8
  %16 = phi i1 [ false, %1 ], [ %14, %8 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #0 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kInputE, align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #10
  %4 = bitcast i8* %3 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %2, i32 0, i32 1, i32 1) #10
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = bitcast i8* %9 to i16*
  %11 = load i16, i16* %10, align 8
  %12 = or i16 %11, 4
  store i16 %12, i16* %10, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"* %13, %"class.blink::Event"* dereferenceable(104) %4) #10
  ret void
}

declare void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31HTMLFormControlElementWithState19DispatchChangeEventEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kChangeE, align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #10
  %5 = bitcast i8* %4 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %3, i32 0, i32 1, i32 1) #10
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"* %2, %"class.blink::Event"* dereferenceable(104) %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31HTMLFormControlElementWithState21FinishParsingChildrenEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"* %2) #10
  %3 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.blink::ListedElement.base"* %3 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement19TakeStateAndRestoreEv(%"class.blink::ListedElement"* %4) #10
  ret void
}

declare void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement19TakeStateAndRestoreEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv(%"class.blink::HTMLFormControlElementWithState"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv(%"class.blink::HTMLFormControlElementWithState"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink31HTMLFormControlElementWithState15DefaultTabIndexEv(%"class.blink::HTMLFormControlElementWithState"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 0
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #10
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

declare void @_ZNK5blink22HTMLFormControlElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11HTMLElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25ShouldHaveFocusAppearanceEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZNK5blink13ContainerNode11BoundingBoxEv() unnamed_addr

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZN5blink22HTMLFormControlElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #10
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.596"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement13SupportsFocusEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement19IsKeyboardFocusableEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25MayTriggerVirtualKeyboardEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink22HTMLFormControlElement14IsValidElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink22HTMLFormControlElement14autocapitalizeEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement20IsInteractiveContentEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElement", %"class.blink::HTMLFormControlElement"* %0, i64 0, i32 3
  ret %"class.blink::FormAssociated"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement14IsEnumeratableEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZN5blink22HTMLFormControlElement21ResultForDialogSubmitEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb(%"class.blink::HTMLFormControlElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE(%"class.blink::HTMLFormControlElement"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement24RequiredAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLFormControlElement9ResetImplEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_NK5blink22HTMLFormControlElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink13ListedElement18IsElementInternalsEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink22HTMLFormControlElement14IsEnumeratableEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ListedElement7GetNameEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE(%"class.blink::ListedElement"*, %"class.blink::FormData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement11HasBadInputEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement15PatternMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement13RangeOverflowEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement14RangeUnderflowEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12StepMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement7TooLongEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement8TooShortEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12TypeMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12ValueMissingEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement17validationMessageEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement20ValidationSubMessageEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE(%"class.blink::ListedElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink13ListedElement16ValidationAnchorEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv(%"class.blink::ListedElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK5blink13ListedElement20SaveFormControlStateEv() unnamed_addr

declare void @_ZN5blink13ListedElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::ListedElement"*, %"class.blink::FormControlState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink13ListedElement18RecalcWillValidateEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn168_N5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare void @_ZN5blink16SpaceSplitString3SetERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.615"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink12_GLOBAL__N_120AutoCompleteCategoryEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6RehashEjPS6_(i32, %"struct.WTF::KeyValuePair.615"* readnone) unnamed_addr #0 align 2 {
  %3 = zext i32 %0 to i64
  %4 = shl nuw nsw i64 %3, 4
  %5 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %4, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink12_GLOBAL__N_120AutoCompleteCategoryEEEEEPKcv, i64 0, i64 0)) #10
  %6 = bitcast i8* %5 to %"struct.WTF::KeyValuePair.615"*
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %39, label %8

8:                                                ; preds = %2
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %33, %8
  %12 = phi i64 [ 0, %8 ], [ %37, %33 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %6, i64 %12
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #10
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %21
  tail call void @llvm.trap() #10
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %31, %16, %11
  %34 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %35 = bitcast %"struct.WTF::KeyValuePair.615"* %13 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %6, i64 %12, i32 1
  store i32 -128, i32* %36, align 8
  %37 = add nuw nsw i64 %12, 1
  %38 = icmp eq i64 %37, %3
  br i1 %38, label %39, label %11

39:                                               ; preds = %33, %2
  %40 = ptrtoint i8* %5 to i64
  %41 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = load i64, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map to i64*), align 8
  br label %50

45:                                               ; preds = %39
  %46 = add i32 %0, -1
  %47 = zext i32 %46 to i64
  %48 = load %"struct.WTF::KeyValuePair.615"*, %"struct.WTF::KeyValuePair.615"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map to %"struct.WTF::KeyValuePair.615"**), align 8
  %49 = ptrtoint %"struct.WTF::KeyValuePair.615"* %48 to i64
  br label %86

50:                                               ; preds = %185, %43
  %51 = phi i64 [ %44, %43 ], [ %186, %185 ]
  %52 = phi %"struct.WTF::KeyValuePair.615"* [ null, %43 ], [ %189, %185 ]
  %53 = phi i32 [ 0, %43 ], [ %187, %185 ]
  store atomic i64 %40, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map to i64*) monotonic, align 8
  store i32 %0, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %54 = inttoptr i64 %51 to %"struct.WTF::KeyValuePair.615"*
  %55 = icmp eq i64 %51, 0
  br i1 %55, label %192, label %56

56:                                               ; preds = %50
  %57 = icmp eq i32 %53, 0
  br i1 %57, label %84, label %58

58:                                               ; preds = %56
  %59 = zext i32 %53 to i64
  br label %60

60:                                               ; preds = %81, %58
  %61 = phi i64 [ 0, %58 ], [ %82, %81 ]
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %54, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair.615"* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast i8* %64 to %"class.WTF::StringImpl"*
  %66 = ptrtoint i8* %64 to i64
  switch i64 %66, label %67 [
    i64 -1, label %81
    i64 0, label %81
  ]

67:                                               ; preds = %60
  %68 = getelementptr inbounds i8, i8* %64, i64 8
  %69 = bitcast i8* %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = bitcast i8* %64 to i32*
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %67
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %67
  %78 = phi i32 [ %76, %75 ], [ %74, %67 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #10
  br label %81

81:                                               ; preds = %80, %77, %60, %60
  %82 = add nuw nsw i64 %61, 1
  %83 = icmp eq i64 %82, %59
  br i1 %83, label %84, label %60

84:                                               ; preds = %81, %56
  %85 = inttoptr i64 %51 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %85) #10
  br label %192

86:                                               ; preds = %185, %45
  %87 = phi i64 [ %49, %45 ], [ %186, %185 ]
  %88 = phi i32 [ %41, %45 ], [ %187, %185 ]
  %89 = phi %"struct.WTF::KeyValuePair.615"* [ %48, %45 ], [ %188, %185 ]
  %90 = phi %"struct.WTF::KeyValuePair.615"* [ null, %45 ], [ %189, %185 ]
  %91 = phi i32 [ 0, %45 ], [ %190, %185 ]
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %89, i64 %92
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  switch i64 %96, label %97 [
    i64 -1, label %185
    i64 0, label %185
  ]

97:                                               ; preds = %86
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = lshr i32 %99, 8
  %101 = and i32 %100, %46
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %6, i64 %102
  %104 = ptrtoint %"struct.WTF::KeyValuePair.615"* %103 to i64
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %124, label %108

108:                                              ; preds = %97
  %109 = xor i32 %100, -1
  %110 = lshr i32 %99, 31
  %111 = add nsw i32 %110, %109
  %112 = shl i32 %111, 12
  %113 = xor i32 %112, %111
  %114 = lshr i32 %113, 7
  %115 = xor i32 %114, %113
  %116 = shl i32 %115, 2
  %117 = xor i32 %116, %115
  %118 = lshr i32 %117, 20
  %119 = xor i32 %118, %117
  %120 = or i32 %119, 1
  %121 = zext i32 %120 to i64
  br label %130

122:                                              ; preds = %142
  %123 = ptrtoint %"struct.WTF::KeyValuePair.615"* %148 to i64
  br label %124

124:                                              ; preds = %122, %97
  %125 = phi i64 [ %104, %97 ], [ %123, %122 ]
  %126 = phi %"struct.WTF::KeyValuePair.615"* [ null, %97 ], [ %143, %122 ]
  %127 = icmp eq %"struct.WTF::KeyValuePair.615"* %126, null
  %128 = ptrtoint %"struct.WTF::KeyValuePair.615"* %126 to i64
  %129 = select i1 %127, i64 %125, i64 %128
  br label %153

130:                                              ; preds = %142, %108
  %131 = phi %"struct.WTF::KeyValuePair.615"* [ null, %108 ], [ %143, %142 ]
  %132 = phi i64 [ %104, %108 ], [ %149, %142 ]
  %133 = phi %"struct.WTF::KeyValuePair.615"* [ %103, %108 ], [ %148, %142 ]
  %134 = phi i64 [ %102, %108 ], [ %147, %142 ]
  %135 = phi i64 [ 0, %108 ], [ %145, %142 ]
  %136 = bitcast %"struct.WTF::KeyValuePair.615"* %133 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = icmp eq i8* %137, inttoptr (i64 -1 to i8*)
  br i1 %138, label %142, label %139

139:                                              ; preds = %130
  %140 = bitcast i8* %137 to %"class.WTF::StringImpl"*
  %141 = icmp eq %"class.WTF::StringImpl"* %95, %140
  br i1 %141, label %153, label %142

142:                                              ; preds = %139, %130
  %143 = phi %"struct.WTF::KeyValuePair.615"* [ %131, %139 ], [ %133, %130 ]
  %144 = icmp eq i64 %135, 0
  %145 = select i1 %144, i64 %121, i64 %135
  %146 = add i64 %145, %134
  %147 = and i64 %146, %47
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %6, i64 %147
  %149 = ptrtoint %"struct.WTF::KeyValuePair.615"* %148 to i64
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %148, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %122, label %130

153:                                              ; preds = %139, %124
  %154 = phi i64 [ %129, %124 ], [ %132, %139 ]
  %155 = inttoptr i64 %154 to %"struct.WTF::KeyValuePair.615"*
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #10
  br label %172

172:                                              ; preds = %171, %168, %153
  %173 = bitcast %"struct.WTF::KeyValuePair.615"* %93 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = inttoptr i64 %154 to i64*
  store i64 %174, i64* %175, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %94, align 8
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %155, i64 0, i32 1
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %89, i64 %92, i32 1
  %178 = load i32, i32* %177, align 8
  store i32 %178, i32* %176, align 8
  %179 = load %"struct.WTF::KeyValuePair.615"*, %"struct.WTF::KeyValuePair.615"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map to %"struct.WTF::KeyValuePair.615"**), align 8
  %180 = getelementptr inbounds %"struct.WTF::KeyValuePair.615", %"struct.WTF::KeyValuePair.615"* %179, i64 %92
  %181 = icmp eq %"struct.WTF::KeyValuePair.615"* %180, %1
  %182 = select i1 %181, %"struct.WTF::KeyValuePair.615"* %155, %"struct.WTF::KeyValuePair.615"* %90
  %183 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %184 = ptrtoint %"struct.WTF::KeyValuePair.615"* %179 to i64
  br label %185

185:                                              ; preds = %172, %86, %86
  %186 = phi i64 [ %87, %86 ], [ %184, %172 ], [ %87, %86 ]
  %187 = phi i32 [ %88, %86 ], [ %183, %172 ], [ %88, %86 ]
  %188 = phi %"struct.WTF::KeyValuePair.615"* [ %89, %86 ], [ %179, %172 ], [ %89, %86 ]
  %189 = phi %"struct.WTF::KeyValuePair.615"* [ %90, %86 ], [ %182, %172 ], [ %90, %86 ]
  %190 = add i32 %91, 1
  %191 = icmp eq i32 %190, %187
  br i1 %191, label %50, label %86

192:                                              ; preds = %50, %84
  %193 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %194 = and i32 %193, -2147483648
  store i32 %194, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  ret %"struct.WTF::KeyValuePair.615"* %52
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.615"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink12_GLOBAL__N_120AutoCompleteCategoryEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"struct.WTF::KeyValuePair.615"* readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_123GetAutoCompleteCategoryERKN3WTF12AtomicStringEE14s_category_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %9 = mul i32 %8, 6
  %10 = shl i32 %5, 1
  %11 = icmp ult i32 %9, %10
  br i1 %11, label %28, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp ugt i32 %10, %5
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %12
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #10
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %5) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i64 0, i64 0), i8* %19, i8* %20) #10
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.66, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %3) #10
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %28

28:                                               ; preds = %7, %1, %27
  %29 = phi i32 [ %10, %27 ], [ 8, %1 ], [ %5, %7 ]
  %30 = call fastcc %"struct.WTF::KeyValuePair.615"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink12_GLOBAL__N_120AutoCompleteCategoryEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6RehashEjPS6_(i32 %29, %"struct.WTF::KeyValuePair.615"* %0)
  ret %"struct.WTF::KeyValuePair.615"* %30
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.69, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.70, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #10
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #10
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #10
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.547"* %8) #10
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.547"* %8) #10
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.72, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.72, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.641", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.642", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.639", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.639"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.639", %"class.WTF::StringTypeAdapter.639"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.639", %"class.WTF::StringTypeAdapter.639"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.639"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.639"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.641"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.641", %"class.WTF::StringTypeAdapter.641"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.641", %"class.WTF::StringTypeAdapter.641"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.641"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.642"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #10
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.642"* nonnull %4, i8* %48) #10
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.641", %"class.WTF::StringTypeAdapter.641"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.640"* nonnull %49, i8* %1) #10
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.642"* nonnull %4, i8* %52) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.639", %"class.WTF::StringTypeAdapter.639"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.547"* %6) #10
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.640"* nonnull %53, i8* %56) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.641", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.642", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.639", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.639"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.639", %"class.WTF::StringTypeAdapter.639"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.639", %"class.WTF::StringTypeAdapter.639"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.639"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.639"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.641"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.641", %"class.WTF::StringTypeAdapter.641"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.641", %"class.WTF::StringTypeAdapter.641"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.641"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.642"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #10
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.642"* nonnull %4, i8* %48) #10
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.641", %"class.WTF::StringTypeAdapter.641"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.640"* nonnull %49, i16* %1) #10
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.642"* nonnull %4, i16* %52) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.639", %"class.WTF::StringTypeAdapter.639"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.547"* %6) #10
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.640"* nonnull %53, i16* %56) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.642"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.547"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.642", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.547", %"class.WTF::StringAppend.547"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.642"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.642", %"class.WTF::StringTypeAdapter.642"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.547", %"class.WTF::StringAppend.547"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.642"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.642"* nonnull %4, i8* %21) #10
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.72, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0), i8* %46, i8* %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.72, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.640"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.642"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.640"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.642"*, i16*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 1048575}
