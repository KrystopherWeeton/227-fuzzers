; ModuleID = '../../components/spellcheck/browser/spelling_service_client.cc'
source_filename = "../../components/spellcheck/browser/spelling_service_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SpellingServiceClient = type { %"class.std::__1::list", %class.scoped_refptr }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%class.scoped_refptr = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.SpellingServiceClient::TextCheckCallbackData" = type { %"class.std::__1::unique_ptr.248", %"class.base::OnceCallback", %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.network::SimpleURLLoader"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.network::SimpleURLLoader" = type { i32 (...)** }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.SpellCheckResult*, %struct.SpellCheckResult*, %"class.std::__1::__compressed_pair.25" }
%struct.SpellCheckResult = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector.18", i8, [7 x i8] }>
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %struct.SpellCheckResult* }
%"class.std::__1::basic_string.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.85 }
%union.anon.85 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%class.GURL = type { %"class.std::__1::basic_string.82", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.123" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %class.GURL* }
%"class.base::OnceCallback.260" = type { %"class.base::internal::CallbackBase" }
%"class.base::SupportsUserData" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %class.scoped_refptr.61, %"class.base::RepeatingCallback.62", %class.scoped_refptr.63, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map.41", i8, %"class.std::__1::unique_ptr.52" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.39, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.39 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted.40", [4 x i8] }>
%"class.base::RefCounted.40" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.41" = type { %"class.std::__1::__tree.42" }
%"class.std::__1::__tree.42" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.61 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted.40" }>
%"class.base::RepeatingCallback.62" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.63 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.64", %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.79", [4 x i8] }>
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { float }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.86 }
%struct.anon.86 = type { i8 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.91" }
%"union.absl::variant_internal::DestructibleUnionImpl.91" = type { %"union.absl::variant_internal::DestructibleUnionImpl.92" }
%"union.absl::variant_internal::DestructibleUnionImpl.92" = type { %"union.absl::variant_internal::DestructibleUnionImpl.93" }
%"union.absl::variant_internal::DestructibleUnionImpl.93" = type { %"union.absl::variant_internal::DestructibleUnionImpl.94" }
%"union.absl::variant_internal::DestructibleUnionImpl.94" = type { %"class.std::__1::basic_string.82" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"struct.network::ResourceRequest" = type { %"class.std::__1::basic_string.82", %class.GURL, %"class.net::SiteForCookies", i8, %"class.absl::optional.130", %"class.absl::optional.130", %class.GURL, i32, %"class.net::HttpRequestHeaders", %"class.net::HttpRequestHeaders", i32, i32, i32, i8, i8, i32, i8, i8, i8, i32, i32, i32, %"class.std::__1::basic_string.82", i32, %class.scoped_refptr.142, i8, i8, i8, i8, i8, i8, i32, i8, i32, i8, i8, %"class.absl::optional.162", %"class.net::HttpRequestHeaders", %"class.net::HttpRequestHeaders", %"class.absl::optional.162", %"class.absl::optional.167", %"class.absl::optional.167", i8, i8, i8, i8, %"class.absl::optional.162", %"class.absl::optional.172", %"class.network::OptionalTrustTokenParams", %"class.absl::optional.227", %"class.absl::optional.233" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.129 }
%union.anon.129 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.130" = type { %"class.absl::optional_internal::optional_data.131" }
%"class.absl::optional_internal::optional_data.131" = type { %"class.absl::optional_internal::optional_data_base.132" }
%"class.absl::optional_internal::optional_data_base.132" = type { %"class.absl::optional_internal::optional_data_dtor_base.133" }
%"class.absl::optional_internal::optional_data_dtor_base.133" = type { i8, %union.anon.134 }
%union.anon.134 = type { %"class.url::Origin" }
%class.scoped_refptr.142 = type { %"class.network::ResourceRequestBody"* }
%"class.network::ResourceRequestBody" = type <{ %"class.base::RefCountedThreadSafe.143", [4 x i8], %"class.std::__1::vector.144", i64, i8, i8, [6 x i8] }>
%"class.base::RefCountedThreadSafe.143" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { %"class.network::DataElement"*, %"class.network::DataElement"*, %"class.std::__1::__compressed_pair.157" }
%"class.network::DataElement" = type { %"class.absl::variant.146" }
%"class.absl::variant.146" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial.147" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial.147" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial.148" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial.148" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial.149" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial.149" = type { %"class.absl::variant_internal::VariantStateBase.150" }
%"class.absl::variant_internal::VariantStateBase.150" = type { %"union.absl::variant_internal::DestructibleUnionImpl.151", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl.151" = type { %"union.absl::variant_internal::DestructibleUnionImpl.152" }
%"union.absl::variant_internal::DestructibleUnionImpl.152" = type { %"union.absl::variant_internal::DestructibleUnionImpl.153" }
%"union.absl::variant_internal::DestructibleUnionImpl.153" = type { %"union.absl::variant_internal::DestructibleUnionImpl.154" }
%"union.absl::variant_internal::DestructibleUnionImpl.154" = type { %"union.absl::variant_internal::DestructibleUnionImpl.156" }
%"union.absl::variant_internal::DestructibleUnionImpl.156" = type { %"class.network::DataElementFile" }
%"class.network::DataElementFile" = type { %"class.base::FilePath", i64, i64, %"class.base::Time" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.82" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.network::DataElement"* }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.135" }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.137" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.absl::optional.167" = type { %"class.absl::optional_internal::optional_data.168" }
%"class.absl::optional_internal::optional_data.168" = type { %"class.absl::optional_internal::optional_data_base.169" }
%"class.absl::optional_internal::optional_data_base.169" = type { %"class.absl::optional_internal::optional_data_dtor_base.170" }
%"class.absl::optional_internal::optional_data_dtor_base.170" = type { i8, %union.anon.171 }
%union.anon.171 = type { %"class.std::__1::basic_string.82" }
%"class.absl::optional.162" = type { %"class.absl::optional_internal::optional_data.163" }
%"class.absl::optional_internal::optional_data.163" = type { %"class.absl::optional_internal::optional_data_base.164" }
%"class.absl::optional_internal::optional_data_base.164" = type { %"class.absl::optional_internal::optional_data_dtor_base.165" }
%"class.absl::optional_internal::optional_data_dtor_base.165" = type { i8, %union.anon.166 }
%union.anon.166 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.172" = type { %"class.absl::optional_internal::optional_data.173" }
%"class.absl::optional_internal::optional_data.173" = type { %"class.absl::optional_internal::optional_data_base.174" }
%"class.absl::optional_internal::optional_data_base.174" = type { %"class.absl::optional_internal::optional_data_dtor_base.175" }
%"class.absl::optional_internal::optional_data_dtor_base.175" = type { i8, %union.anon.176 }
%union.anon.176 = type { %"struct.network::ResourceRequest::TrustedParams" }
%"struct.network::ResourceRequest::TrustedParams" = type { %"class.net::IsolationInfo", i8, i8, %"class.mojo::PendingRemote.196", %"class.mojo::PendingRemote.197", %"class.mojo::PendingRemote.198", %"class.mojo::StructPtr", %"class.mojo::PendingRemote.205" }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.130", %"class.absl::optional.130", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.182" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.177", %"class.absl::optional.177" }
%"class.absl::optional.177" = type { %"class.absl::optional_internal::optional_data.178" }
%"class.absl::optional_internal::optional_data.178" = type { %"class.absl::optional_internal::optional_data_base.179" }
%"class.absl::optional_internal::optional_data_base.179" = type { %"class.absl::optional_internal::optional_data_dtor_base.180" }
%"class.absl::optional_internal::optional_data_dtor_base.180" = type { i8, %union.anon.181 }
%union.anon.181 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.182" = type { %"class.absl::optional_internal::optional_data.183" }
%"class.absl::optional_internal::optional_data.183" = type { %"class.absl::optional_internal::optional_data_base.184" }
%"class.absl::optional_internal::optional_data_base.184" = type { %"class.absl::optional_internal::optional_data_dtor_base.185" }
%"class.absl::optional_internal::optional_data_dtor_base.185" = type { i8, %union.anon.186 }
%union.anon.186 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.mojo::PendingRemote.196" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::PendingRemote.197" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.198" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.network::mojom::ClientSecurityState"* }
%"class.network::mojom::ClientSecurityState" = type <{ %"struct.network::CrossOriginEmbedderPolicy", i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.167", i32, %"class.absl::optional.167" }
%"class.mojo::PendingRemote.205" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.network::OptionalTrustTokenParams" = type { %"class.mojo::StructPtr.206" }
%"class.mojo::StructPtr.206" = type { %"class.std::__1::unique_ptr.207" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.network::mojom::TrustTokenParams"* }
%"class.network::mojom::TrustTokenParams" = type { i32, i32, i32, i8, %"class.std::__1::vector.210", %"class.std::__1::vector.217", %"class.absl::optional.167" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.url::Origin"* }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"*, %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.std::__1::basic_string.82"* }
%"class.absl::optional.227" = type { %"class.absl::optional_internal::optional_data.228" }
%"class.absl::optional_internal::optional_data.228" = type { %"class.absl::optional_internal::optional_data_base.229" }
%"class.absl::optional_internal::optional_data_base.229" = type { %"class.absl::optional_internal::optional_data_dtor_base.230" }
%"class.absl::optional_internal::optional_data_dtor_base.230" = type { i8, [7 x i8], %union.anon.231 }
%union.anon.231 = type { %"struct.network::ResourceRequest::WebBundleTokenParams" }
%"struct.network::ResourceRequest::WebBundleTokenParams" = type <{ %class.GURL, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.232", i32, [4 x i8] }>
%"class.mojo::PendingRemote.232" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.absl::optional.233" = type { %"class.absl::optional_internal::optional_data.234" }
%"class.absl::optional_internal::optional_data.234" = type { %"class.absl::optional_internal::optional_data_base.235" }
%"class.absl::optional_internal::optional_data_base.235" = type { %"class.absl::optional_internal::optional_data_dtor_base.236" }
%"class.absl::optional_internal::optional_data_dtor_base.236" = type { i8, %union.anon.237 }
%union.anon.237 = type { %"class.std::__1::vector.238" }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { i32*, i32*, %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { i32* }
%"class.content::StoragePartition" = type { i32 (...)** }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.base::Value"* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.284", [4 x i8] }>
%"struct.std::__1::atomic.284" = type { %"struct.std::__1::__atomic_base.285" }
%"struct.std::__1::__atomic_base.285" = type { %"struct.std::__1::__atomic_base.286" }
%"struct.std::__1::__atomic_base.286" = type { %"struct.std::__1::__cxx_atomic_impl.287" }
%"struct.std::__1::__cxx_atomic_impl.287" = type { %"struct.std::__1::__cxx_atomic_base_impl.288" }
%"struct.std::__1::__cxx_atomic_base_impl.288" = type { i32 }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.289, %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.298", i8, i8, i8, i8, i32, %"class.std::__1::basic_string.82", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.312", i32, [4 x i8], i64, %"class.std::__1::basic_string.82", i32, [4 x i8], %"class.absl::optional.318", %"class.std::__1::vector.217", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.353", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.358", %"class.absl::optional.455", %"class.absl::optional.162", %"class.std::__1::vector.217", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.289 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.290", %"class.std::__1::vector.291", %"class.std::__1::basic_string.82", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.290" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.291" = type { %"class.std::__1::__vector_base.292" }
%"class.std::__1::__vector_base.292" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.293" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.298" = type { %"class.std::__1::unique_ptr.299" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string.82", %"class.std::__1::vector.302", %"class.std::__1::vector.302", %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82" }
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.304" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.mojo::InlinedStructPtr"* }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string.82", i16, [6 x i8] }>
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"class.absl::optional.318" = type { %"class.absl::optional_internal::optional_data.319" }
%"class.absl::optional_internal::optional_data.319" = type { %"class.absl::optional_internal::optional_data_base.320" }
%"class.absl::optional_internal::optional_data_base.320" = type { %"class.absl::optional_internal::optional_data_dtor_base.321" }
%"class.absl::optional_internal::optional_data_dtor_base.321" = type { i8, [7 x i8], %union.anon.322 }
%union.anon.322 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.323, %class.scoped_refptr.323, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.336", %"class.std::__1::basic_string.82", %"class.std::__1::vector.344", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.323 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.324", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string.82", %"class.std::__1::unique_ptr.325", %"class.std::__1::vector.329" }
%"class.base::RefCountedThreadSafe.324" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82", %"class.std::__1::vector.217", %"class.std::__1::vector.217", %"class.std::__1::vector.217", %"class.std::__1::vector.217" }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.329" = type { %"class.std::__1::__vector_base.330" }
%"class.std::__1::__vector_base.330" = type { %"class.std::__1::unique_ptr.325"*, %"class.std::__1::unique_ptr.325"*, %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.std::__1::unique_ptr.325"* }
%"class.std::__1::vector.336" = type { %"class.std::__1::__vector_base.337" }
%"class.std::__1::__vector_base.337" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.339" }
%"class.net::HashValue" = type { i32, %union.anon.338 }
%union.anon.338 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.348" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.346, i32, [4 x i8] }>
%class.scoped_refptr.346 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.347", i32, %"class.std::__1::basic_string.82", %"class.base::Time", %"class.std::__1::basic_string.82", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string.82" }
%"class.base::RefCountedThreadSafe.347" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string.82" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.absl::optional.353" = type { %"class.absl::optional_internal::optional_data.354" }
%"class.absl::optional_internal::optional_data.354" = type { %"class.absl::optional_internal::optional_data_base.355" }
%"class.absl::optional_internal::optional_data_base.355" = type { %"class.absl::optional_internal::optional_data_dtor_base.356" }
%"class.absl::optional_internal::optional_data_dtor_base.356" = type { i8, %union.anon.357 }
%union.anon.357 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.261" }
%"class.base::time_internal::TimeBase.261" = type { i64 }
%"class.mojo::StructPtr.358" = type { %"class.std::__1::unique_ptr.359" }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.362", %"class.mojo::StructPtr.412", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.419", %"class.base::TimeDelta", %"class.absl::optional.419", i32, [4 x i8], %"class.std::__1::vector.431", %"class.mojo::StructPtr.445", i8, [7 x i8] }>
%"class.std::__1::vector.362" = type { %"class.std::__1::__vector_base.363" }
%"class.std::__1::__vector_base.363" = type { %"class.mojo::StructPtr.364"*, %"class.mojo::StructPtr.364"*, %"class.std::__1::__compressed_pair.407" }
%"class.mojo::StructPtr.364" = type { %"class.std::__1::unique_ptr.365" }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.368", %"class.base::flat_map.375", %"class.base::flat_map.385", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.395", i8, %"class.std::__1::vector.217", i32, %"class.mojo::StructPtr.397", %"class.std::__1::vector.217" }
%"class.mojo::StructPtr.368" = type { %"class.std::__1::unique_ptr.369" }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82", i32, [4 x i8], %"class.std::__1::basic_string.82", i8, i8, [6 x i8] }>
%"class.base::flat_map.375" = type { %"class.base::internal::flat_tree.376" }
%"class.base::internal::flat_tree.376" = type { %"class.std::__1::vector.377" }
%"class.std::__1::vector.377" = type { %"class.std::__1::__vector_base.378" }
%"class.std::__1::__vector_base.378" = type { %"struct.std::__1::pair.379"*, %"struct.std::__1::pair.379"*, %"class.std::__1::__compressed_pair.380" }
%"struct.std::__1::pair.379" = type opaque
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.std::__1::pair.379"* }
%"class.base::flat_map.385" = type { %"class.base::internal::flat_tree.386" }
%"class.base::internal::flat_tree.386" = type { %"class.std::__1::vector.387" }
%"class.std::__1::vector.387" = type { %"class.std::__1::__vector_base.388" }
%"class.std::__1::__vector_base.388" = type { %"struct.std::__1::pair.389"*, %"struct.std::__1::pair.389"*, %"class.std::__1::__compressed_pair.390" }
%"struct.std::__1::pair.389" = type opaque
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::pair.389"* }
%"class.mojo::InlinedStructPtr.395" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string.82", i32, i32 }
%"class.mojo::StructPtr.397" = type { %"class.std::__1::unique_ptr.398" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.217", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.mojo::StructPtr.364"* }
%"class.mojo::StructPtr.412" = type { %"class.std::__1::unique_ptr.413" }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.167", i32, %"class.absl::optional.167" }
%"class.absl::optional.419" = type { %"class.absl::optional_internal::optional_data.420" }
%"class.absl::optional_internal::optional_data.420" = type { %"class.absl::optional_internal::optional_data_base.421" }
%"class.absl::optional_internal::optional_data_base.421" = type { %"class.absl::optional_internal::optional_data_dtor_base.422" }
%"class.absl::optional_internal::optional_data_dtor_base.422" = type { i8, %union.anon.423 }
%union.anon.423 = type { %"class.std::__1::vector.424" }
%"class.std::__1::vector.424" = type { %"class.std::__1::__vector_base.425" }
%"class.std::__1::__vector_base.425" = type { i32*, i32*, %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { i32* }
%"class.std::__1::vector.431" = type { %"class.std::__1::__vector_base.432" }
%"class.std::__1::__vector_base.432" = type { %"class.mojo::StructPtr.433"*, %"class.mojo::StructPtr.433"*, %"class.std::__1::__compressed_pair.440" }
%"class.mojo::StructPtr.433" = type { %"class.std::__1::unique_ptr.434" }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.167" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.mojo::StructPtr.433"* }
%"class.mojo::StructPtr.445" = type { %"class.std::__1::unique_ptr.446" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.217"* }
%"class.absl::optional.455" = type { %"class.absl::optional_internal::optional_data.456" }
%"class.absl::optional_internal::optional_data.456" = type { %"class.absl::optional_internal::optional_data_base.457" }
%"class.absl::optional_internal::optional_data_base.457" = type { %"class.absl::optional_internal::optional_data_dtor_base.458" }
%"class.absl::optional_internal::optional_data_dtor_base.458" = type { i8, %union.anon.459 }
%union.anon.459 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.460" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.217", %"class.absl::optional.167", %"class.std::__1::vector.217", %"class.std::__1::vector.217" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__111make_uniqueIN21SpellingServiceClient21TextCheckCallbackDataEJNS_10unique_ptrIN7network15SimpleURLLoaderENS_14default_deleteIS5_EEEEN4base12OnceCallbackIFvbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorI16SpellCheckResultNSE_ISK_EEEEEEESI_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__14listINS_10unique_ptrIN21SpellingServiceClient21TextCheckCallbackDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5eraseENS_21__list_const_iteratorIS6_PvEE = comdat any

$_ZNSt3__110__list_impINS_10unique_ptrIN21SpellingServiceClient21TextCheckCallbackDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv = comdat any

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM21SpellingServiceClientFvNSt3__115__list_iteratorINS4_10unique_ptrINS3_21TextCheckCallbackDataENS4_14default_deleteIS7_EEEEPvEENS_9TimeTicksENS6_INS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS8_ISJ_EEEEEJNS0_17UnretainedWrapperIS3_EESC_SD_EEEFvSL_EE7RunOnceEPNS0_13BindStateBaseEOSL_ = comdat any

$_ZN4base8internal9BindStateIM21SpellingServiceClientFvNSt3__115__list_iteratorINS3_10unique_ptrINS2_21TextCheckCallbackDataENS3_14default_deleteIS6_EEEEPvEENS_9TimeTicksENS5_INS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS7_ISI_EEEEEJNS0_17UnretainedWrapperIS2_EESB_SC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorI16SpellCheckResultNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_ = comdat any

@_ZN10spellcheck5prefs23kSpellCheckDictionariesE = external constant [0 x i8], align 1
@_ZZN21SpellingServiceClient16RequestTextCheckEPN7content14BrowserContextENS_11ServiceTypeERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEN4base12OnceCallbackIFvbSC_RKNS4_6vectorI16SpellCheckResultNS8_ISG_EEEEEEEE32kSpellingRequestRestBodyTemplate = internal constant [49 x i8] c"{\22text\22:%s,\22language\22:\22%s\22,\22originCountry\22:\22%s\22}\00", align 16
@.str.3 = private unnamed_addr constant [17 x i8] c"application/json\00", align 1
@_ZN10spellcheck5prefs17kSpellCheckEnableE = external constant [0 x i8], align 1
@_ZN10spellcheck5prefs29kSpellCheckUseSpellingServiceE = external constant [0 x i8], align 1
@_ZN12_GLOBAL__N_123kSpellingServiceRestURLE = internal constant [62 x i8] c"https://www.googleapis.com/spelling/v%d/spelling/check?key=%s\00", align 16
@_ZN12_GLOBAL__N_110kErrorPathE = internal constant [6 x i8] c"error\00", align 1
@_ZN12_GLOBAL__N_121kMisspellingsRestPathE = internal constant [35 x i8] c"spellingCheckResponse.misspellings\00", align 16
@.str.4 = private unnamed_addr constant [10 x i8] c"charStart\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"charLength\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"suggestions\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"suggestion\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"SpellCheck.SpellingService.RequestDuration\00", align 1
@.str.9 = private unnamed_addr constant [51 x i8] c"SpellCheck.SpellingService.RequestHttpResponseCode\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"SpellCheck.SpellingService.RequestResultType\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"en\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"es\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"fi\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"da\00", align 1
@_ZZN21SpellingServiceClient22OnSimpleLoaderCompleteENSt3__115__list_iteratorINS0_10unique_ptrINS_21TextCheckCallbackDataENS0_14default_deleteIS3_EEEEPvEEN4base9TimeTicksENS2_INS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS4_ISG_EEEEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN21SpellingServiceClient22OnSimpleLoaderCompleteENSt3__115__list_iteratorINS0_10unique_ptrINS_21TextCheckCallbackDataENS0_14default_deleteIS3_EEEEPvEEN4base9TimeTicksENS2_INS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS4_ISG_EEEEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN21SpellingServiceClientC1Ev = hidden unnamed_addr alias void (%class.SpellingServiceClient*), void (%class.SpellingServiceClient*)* @_ZN21SpellingServiceClientC2Ev
@_ZN21SpellingServiceClientD1Ev = hidden unnamed_addr alias void (%class.SpellingServiceClient*), void (%class.SpellingServiceClient*)* @_ZN21SpellingServiceClientD2Ev
@_ZN21SpellingServiceClient21TextCheckCallbackDataC1ENSt3__110unique_ptrIN7network15SimpleURLLoaderENS1_14default_deleteIS4_EEEEN4base12OnceCallbackIFvbRKNS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorI16SpellCheckResultNSD_ISJ_EEEEEEESF_ = hidden unnamed_addr alias void (%"struct.SpellingServiceClient::TextCheckCallbackData"*, %"class.network::SimpleURLLoader"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*), void (%"struct.SpellingServiceClient::TextCheckCallbackData"*, %"class.network::SimpleURLLoader"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*)* @_ZN21SpellingServiceClient21TextCheckCallbackDataC2ENSt3__110unique_ptrIN7network15SimpleURLLoaderENS1_14default_deleteIS4_EEEEN4base12OnceCallbackIFvbRKNS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorI16SpellCheckResultNSD_ISJ_EEEEEEESF_
@_ZN21SpellingServiceClient21TextCheckCallbackDataD1Ev = hidden unnamed_addr alias void (%"struct.SpellingServiceClient::TextCheckCallbackData"*), void (%"struct.SpellingServiceClient::TextCheckCallbackData"*)* @_ZN21SpellingServiceClient21TextCheckCallbackDataD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN21SpellingServiceClientC2Ev(%class.SpellingServiceClient*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %2, %"struct.std::__1::__list_node_base"** %3, align 8
  %4 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %2, %"struct.std::__1::__list_node_base"** %4, align 8
  %5 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SpellingServiceClientD2Ev(%class.SpellingServiceClient*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 1, i32 0
  %3 = load %"class.network::SharedURLLoaderFactory"*, %"class.network::SharedURLLoaderFactory"** %2, align 8
  %4 = icmp eq %"class.network::SharedURLLoaderFactory"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.network::SharedURLLoaderFactory", %"class.network::SharedURLLoaderFactory"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #12
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 -2
  %13 = bitcast %"class.base::RefCounted"* %12 to %"class.network::SharedURLLoaderFactory"*
  %14 = bitcast %"class.base::RefCounted"* %12 to void (%"class.network::SharedURLLoaderFactory"*)***
  %15 = load void (%"class.network::SharedURLLoaderFactory"*)**, void (%"class.network::SharedURLLoaderFactory"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.network::SharedURLLoaderFactory"*)*, void (%"class.network::SharedURLLoaderFactory"*)** %15, i64 1
  %17 = load void (%"class.network::SharedURLLoaderFactory"*)*, void (%"class.network::SharedURLLoaderFactory"*)** %16, align 8
  tail call void %17(%"class.network::SharedURLLoaderFactory"* nonnull %13) #12
  br label %18

18:                                               ; preds = %1, %5, %11
  %19 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__110__list_impINS_10unique_ptrIN21SpellingServiceClient21TextCheckCallbackDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__list_imp"* %19) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN21SpellingServiceClient16RequestTextCheckEPN7content14BrowserContextENS_11ServiceTypeERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEN4base12OnceCallbackIFvbSC_RKNS4_6vectorI16SpellCheckResultNS8_ISG_EEEEEEE(%class.SpellingServiceClient*, %"class.content::BrowserContext"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::OnceCallback"*) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::basic_string.82", align 8
  %9 = alloca %"class.std::__1::basic_string.82", align 8
  %10 = alloca %"class.std::__1::basic_string.82", align 8
  %11 = alloca %"class.std::__1::basic_string.82", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string.82", align 8
  %14 = alloca %"class.std::__1::basic_string.82", align 8
  %15 = alloca %"class.std::__1::basic_string.82", align 8
  %16 = alloca %"struct.net::NetworkTrafficAnnotationTag", align 4
  %17 = alloca %class.GURL, align 8
  %18 = alloca %"class.std::__1::unique_ptr.248", align 8
  %19 = alloca %"class.std::__1::basic_string.82", align 8
  %20 = alloca %"class.base::OnceCallback.260", align 8
  %21 = icmp eq %"class.content::BrowserContext"* %1, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %5
  %23 = tail call zeroext i1 @_ZN21SpellingServiceClient11IsAvailableEPN7content14BrowserContextENS_11ServiceTypeE(%"class.content::BrowserContext"* nonnull %1, i32 %2)
  br i1 %23, label %53, label %24

24:                                               ; preds = %5, %22
  %25 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #12
  %26 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %32 = inttoptr i64 %29 to %"class.base::internal::BindStateBase"*
  %33 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %32, i64 0, i32 1
  %34 = bitcast void ()** %33 to void (%"class.base::internal::BindStateBase"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*)**
  %35 = load void (%"class.base::internal::BindStateBase"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*)*, void (%"class.base::internal::BindStateBase"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*)** %34, align 8
  call void %35(%"class.base::internal::BindStateBase"* %32, i1 zeroext false, %"class.std::__1::basic_string"* dereferenceable(24) %3, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %37 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %36, align 8
  %38 = icmp eq %struct.SpellCheckResult* %37, null
  br i1 %38, label %605, label %39

39:                                               ; preds = %24
  %40 = bitcast %struct.SpellCheckResult* %37 to i8*
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %42 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %41, align 8
  %43 = icmp eq %struct.SpellCheckResult* %42, %37
  br i1 %43, label %51, label %44

44:                                               ; preds = %39, %44
  %45 = phi %struct.SpellCheckResult* [ %46, %44 ], [ %42, %39 ]
  %46 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %45, i64 -1
  call void @_ZN16SpellCheckResultD1Ev(%struct.SpellCheckResult* %46) #12
  %47 = icmp eq %struct.SpellCheckResult* %46, %37
  br i1 %47, label %48, label %44

48:                                               ; preds = %44
  %49 = bitcast %"class.std::__1::vector"* %7 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %39
  %52 = phi i8* [ %50, %48 ], [ %40, %39 ]
  store %struct.SpellCheckResult* %37, %struct.SpellCheckResult** %41, align 8
  call void @_ZdlPv(i8* %52) #13
  br label %605

53:                                               ; preds = %22
  %54 = bitcast %"class.content::BrowserContext"* %1 to %"class.base::SupportsUserData"*
  %55 = tail call %class.PrefService* @_ZN10user_prefs9UserPrefs3GetEPN4base16SupportsUserDataE(%"class.base::SupportsUserData"* nonnull %54) #12
  %56 = bitcast %"class.std::__1::basic_string.82"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12
  %57 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 24, i1 false) #12
  %58 = bitcast %"class.std::__1::basic_string.82"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #12
  %59 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs23kSpellCheckDictionariesE, i64 0, i64 0)) #12
  %60 = icmp ugt i64 %59, -17
  br i1 %60, label %61, label %63

61:                                               ; preds = %53
  %62 = bitcast %"class.std::__1::basic_string.82"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %62) #14
  unreachable

63:                                               ; preds = %53
  %64 = icmp ult i64 %59, 23
  br i1 %64, label %74, label %65

65:                                               ; preds = %63
  %66 = add nuw i64 %59, 16
  %67 = and i64 %66, -16
  %68 = tail call i8* @_Znwm(i64 %67) #13
  %69 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %68, i8** %69, align 8
  %70 = or i64 %67, -9223372036854775808
  %71 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %59, i64* %72, align 8
  %73 = bitcast %"class.std::__1::basic_string.82"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %79

74:                                               ; preds = %63
  %75 = trunc i64 %59 to i8
  %76 = bitcast %"class.std::__1::basic_string.82"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 %75, i8* %77, align 1
  %78 = icmp eq i64 %59, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %74, %65
  %80 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %76, %74 ], [ %73, %65 ]
  %81 = phi i8* [ %58, %74 ], [ %68, %65 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %81, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs23kSpellCheckDictionariesE, i64 0, i64 0), i64 %59, i1 false) #12
  br label %82

82:                                               ; preds = %74, %79
  %83 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %76, %74 ], [ %80, %79 ]
  %84 = phi i8* [ %58, %74 ], [ %81, %79 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 %59
  store i8 0, i8* %85, align 1
  %86 = call %"class.base::ListValue"* @_ZNK11PrefService7GetListERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %55, %"class.std::__1::basic_string.82"* nonnull dereferenceable(24) %9) #12
  %87 = call zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"* %86, i64 0, %"class.std::__1::basic_string.82"* nonnull %8) #12
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #13
  br label %94

94:                                               ; preds = %82, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  %95 = bitcast %"class.std::__1::basic_string.82"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #12
  %96 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 24, i1 false) #12
  %97 = bitcast %"class.std::__1::basic_string.82"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #12
  %98 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 24, i1 false) #12
  call void @_ZN10spellcheck35GetISOLanguageCountryCodeFromLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_S9_(%"class.std::__1::basic_string.82"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string.82"* nonnull %10, %"class.std::__1::basic_string.82"* nonnull %11) #12
  %99 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #12
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %103 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 24, i1 false)
  %106 = load i8, i8* %104, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %94
  %109 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* align 8 %109, i64 24, i1 false) #12
  br label %283

110:                                              ; preds = %94
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i16*, i16** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = icmp ult i64 %114, 11
  br i1 %115, label %116, label %121

116:                                              ; preds = %110
  %117 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %118 = trunc i64 %114 to i8
  %119 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %119, i64 0, i32 1, i32 1
  store i8 %118, i8* %120, align 1
  br label %136

121:                                              ; preds = %110
  %122 = icmp ugt i64 %114, 9223372036854775791
  br i1 %122, label %123, label %125

123:                                              ; preds = %121
  %124 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %124) #14
  unreachable

125:                                              ; preds = %121
  %126 = add nuw nsw i64 %114, 8
  %127 = and i64 %126, -8
  %128 = icmp slt i64 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  call void @abort() #14
  unreachable

130:                                              ; preds = %125
  %131 = shl i64 %127, 1
  %132 = call i8* @_Znwm(i64 %131) #13
  %133 = bitcast i8* %132 to i16*
  %134 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  store i8* %132, i8** %134, align 8
  %135 = or i64 %127, -9223372036854775808
  store i64 %135, i64* %102, align 8
  store i64 %114, i64* %101, align 8
  br label %136

136:                                              ; preds = %130, %116
  %137 = phi i16* [ %117, %116 ], [ %133, %130 ]
  %138 = add nuw nsw i64 %114, 1
  %139 = add i64 %114, 1
  %140 = icmp ult i64 %139, 16
  br i1 %140, label %230, label %141

141:                                              ; preds = %136
  %142 = add i64 %114, 1
  %143 = getelementptr i16, i16* %137, i64 %142
  %144 = getelementptr i16, i16* %112, i64 %142
  %145 = icmp ult i16* %137, %144
  %146 = icmp ult i16* %112, %143
  %147 = and i1 %145, %146
  br i1 %147, label %230, label %148

148:                                              ; preds = %141
  %149 = and i64 %139, -16
  %150 = sub i64 %138, %149
  %151 = getelementptr i16, i16* %112, i64 %149
  %152 = getelementptr i16, i16* %137, i64 %149
  %153 = add i64 %149, -16
  %154 = lshr exact i64 %153, 4
  %155 = add nuw nsw i64 %154, 1
  %156 = and i64 %155, 3
  %157 = icmp ult i64 %153, 48
  br i1 %157, label %209, label %158

158:                                              ; preds = %148
  %159 = sub nsw i64 %155, %156
  br label %160

160:                                              ; preds = %160, %158
  %161 = phi i64 [ 0, %158 ], [ %206, %160 ]
  %162 = phi i64 [ %159, %158 ], [ %207, %160 ]
  %163 = getelementptr i16, i16* %112, i64 %161
  %164 = getelementptr i16, i16* %137, i64 %161
  %165 = bitcast i16* %163 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !2
  %167 = getelementptr i16, i16* %163, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 2, !alias.scope !2
  %170 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %170, align 2, !alias.scope !5, !noalias !2
  %171 = getelementptr i16, i16* %164, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %172, align 2, !alias.scope !5, !noalias !2
  %173 = or i64 %161, 16
  %174 = getelementptr i16, i16* %112, i64 %173
  %175 = getelementptr i16, i16* %137, i64 %173
  %176 = bitcast i16* %174 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2, !alias.scope !2
  %178 = getelementptr i16, i16* %174, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !2
  %181 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %177, <8 x i16>* %181, align 2, !alias.scope !5, !noalias !2
  %182 = getelementptr i16, i16* %175, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %183, align 2, !alias.scope !5, !noalias !2
  %184 = or i64 %161, 32
  %185 = getelementptr i16, i16* %112, i64 %184
  %186 = getelementptr i16, i16* %137, i64 %184
  %187 = bitcast i16* %185 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !2
  %189 = getelementptr i16, i16* %185, i64 8
  %190 = bitcast i16* %189 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !2
  %192 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %188, <8 x i16>* %192, align 2, !alias.scope !5, !noalias !2
  %193 = getelementptr i16, i16* %186, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %194, align 2, !alias.scope !5, !noalias !2
  %195 = or i64 %161, 48
  %196 = getelementptr i16, i16* %112, i64 %195
  %197 = getelementptr i16, i16* %137, i64 %195
  %198 = bitcast i16* %196 to <8 x i16>*
  %199 = load <8 x i16>, <8 x i16>* %198, align 2, !alias.scope !2
  %200 = getelementptr i16, i16* %196, i64 8
  %201 = bitcast i16* %200 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 2, !alias.scope !2
  %203 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %203, align 2, !alias.scope !5, !noalias !2
  %204 = getelementptr i16, i16* %197, i64 8
  %205 = bitcast i16* %204 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %205, align 2, !alias.scope !5, !noalias !2
  %206 = add i64 %161, 64
  %207 = add i64 %162, -4
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %160, !llvm.loop !7

209:                                              ; preds = %160, %148
  %210 = phi i64 [ 0, %148 ], [ %206, %160 ]
  %211 = icmp eq i64 %156, 0
  br i1 %211, label %228, label %212

212:                                              ; preds = %209, %212
  %213 = phi i64 [ %225, %212 ], [ %210, %209 ]
  %214 = phi i64 [ %226, %212 ], [ %156, %209 ]
  %215 = getelementptr i16, i16* %112, i64 %213
  %216 = getelementptr i16, i16* %137, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !2
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !2
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !5, !noalias !2
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !5, !noalias !2
  %225 = add i64 %213, 16
  %226 = add i64 %214, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %212, !llvm.loop !9

228:                                              ; preds = %212, %209
  %229 = icmp eq i64 %139, %149
  br i1 %229, label %283, label %230

230:                                              ; preds = %228, %141, %136
  %231 = phi i64 [ %138, %141 ], [ %138, %136 ], [ %150, %228 ]
  %232 = phi i16* [ %112, %141 ], [ %112, %136 ], [ %151, %228 ]
  %233 = phi i16* [ %137, %141 ], [ %137, %136 ], [ %152, %228 ]
  %234 = add i64 %231, -1
  %235 = and i64 %231, 7
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %248, label %237

237:                                              ; preds = %230, %237
  %238 = phi i64 [ %243, %237 ], [ %231, %230 ]
  %239 = phi i16* [ %245, %237 ], [ %232, %230 ]
  %240 = phi i16* [ %244, %237 ], [ %233, %230 ]
  %241 = phi i64 [ %246, %237 ], [ %235, %230 ]
  %242 = load i16, i16* %239, align 2
  store i16 %242, i16* %240, align 2
  %243 = add i64 %238, -1
  %244 = getelementptr inbounds i16, i16* %240, i64 1
  %245 = getelementptr inbounds i16, i16* %239, i64 1
  %246 = add i64 %241, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %237, !llvm.loop !11

248:                                              ; preds = %237, %230
  %249 = phi i64 [ %231, %230 ], [ %243, %237 ]
  %250 = phi i16* [ %232, %230 ], [ %245, %237 ]
  %251 = phi i16* [ %233, %230 ], [ %244, %237 ]
  %252 = icmp ult i64 %234, 7
  br i1 %252, label %283, label %253

253:                                              ; preds = %248, %253
  %254 = phi i64 [ %279, %253 ], [ %249, %248 ]
  %255 = phi i16* [ %281, %253 ], [ %250, %248 ]
  %256 = phi i16* [ %280, %253 ], [ %251, %248 ]
  %257 = load i16, i16* %255, align 2
  store i16 %257, i16* %256, align 2
  %258 = getelementptr inbounds i16, i16* %256, i64 1
  %259 = getelementptr inbounds i16, i16* %255, i64 1
  %260 = load i16, i16* %259, align 2
  store i16 %260, i16* %258, align 2
  %261 = getelementptr inbounds i16, i16* %256, i64 2
  %262 = getelementptr inbounds i16, i16* %255, i64 2
  %263 = load i16, i16* %262, align 2
  store i16 %263, i16* %261, align 2
  %264 = getelementptr inbounds i16, i16* %256, i64 3
  %265 = getelementptr inbounds i16, i16* %255, i64 3
  %266 = load i16, i16* %265, align 2
  store i16 %266, i16* %264, align 2
  %267 = getelementptr inbounds i16, i16* %256, i64 4
  %268 = getelementptr inbounds i16, i16* %255, i64 4
  %269 = load i16, i16* %268, align 2
  store i16 %269, i16* %267, align 2
  %270 = getelementptr inbounds i16, i16* %256, i64 5
  %271 = getelementptr inbounds i16, i16* %255, i64 5
  %272 = load i16, i16* %271, align 2
  store i16 %272, i16* %270, align 2
  %273 = getelementptr inbounds i16, i16* %256, i64 6
  %274 = getelementptr inbounds i16, i16* %255, i64 6
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = getelementptr inbounds i16, i16* %256, i64 7
  %277 = getelementptr inbounds i16, i16* %255, i64 7
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = add i64 %254, -8
  %280 = getelementptr inbounds i16, i16* %256, i64 8
  %281 = getelementptr inbounds i16, i16* %255, i64 8
  %282 = icmp eq i64 %279, 0
  br i1 %282, label %283, label %253, !llvm.loop !12

283:                                              ; preds = %248, %253, %228, %108
  %284 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %285 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %284, i64 0, i32 1, i32 1
  %286 = load i8, i8* %285, align 1
  %287 = icmp slt i8 %286, 0
  %288 = load i16*, i16** %100, align 8
  %289 = load i64, i64* %101, align 8
  %290 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %291 = zext i8 %286 to i64
  %292 = select i1 %287, i16* %288, i16* %290
  %293 = select i1 %287, i64 %289, i64 %291
  %294 = getelementptr inbounds i16, i16* %292, i64 %293
  %295 = icmp eq i64 %293, 0
  br i1 %295, label %407, label %296

296:                                              ; preds = %283
  %297 = shl nsw i64 %293, 1
  %298 = add i64 %297, -2
  %299 = lshr exact i64 %298, 1
  %300 = add nuw i64 %299, 1
  %301 = icmp ult i64 %300, 16
  br i1 %301, label %397, label %302

302:                                              ; preds = %296
  %303 = and i64 %300, -16
  %304 = getelementptr i16, i16* %292, i64 %303
  br label %305

305:                                              ; preds = %392, %302
  %306 = phi i64 [ 0, %302 ], [ %393, %392 ]
  %307 = getelementptr i16, i16* %292, i64 %306
  %308 = bitcast i16* %307 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2
  %310 = getelementptr i16, i16* %307, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  %312 = load <8 x i16>, <8 x i16>* %311, align 2
  %313 = icmp eq <8 x i16> %309, <i16 8217, i16 8217, i16 8217, i16 8217, i16 8217, i16 8217, i16 8217, i16 8217>
  %314 = icmp eq <8 x i16> %312, <i16 8217, i16 8217, i16 8217, i16 8217, i16 8217, i16 8217, i16 8217, i16 8217>
  %315 = extractelement <8 x i1> %313, i32 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %305
  store i16 39, i16* %307, align 2
  br label %317

317:                                              ; preds = %316, %305
  %318 = extractelement <8 x i1> %313, i32 1
  br i1 %318, label %319, label %322

319:                                              ; preds = %317
  %320 = or i64 %306, 1
  %321 = getelementptr i16, i16* %292, i64 %320
  store i16 39, i16* %321, align 2
  br label %322

322:                                              ; preds = %319, %317
  %323 = extractelement <8 x i1> %313, i32 2
  br i1 %323, label %324, label %327

324:                                              ; preds = %322
  %325 = or i64 %306, 2
  %326 = getelementptr i16, i16* %292, i64 %325
  store i16 39, i16* %326, align 2
  br label %327

327:                                              ; preds = %324, %322
  %328 = extractelement <8 x i1> %313, i32 3
  br i1 %328, label %329, label %332

329:                                              ; preds = %327
  %330 = or i64 %306, 3
  %331 = getelementptr i16, i16* %292, i64 %330
  store i16 39, i16* %331, align 2
  br label %332

332:                                              ; preds = %329, %327
  %333 = extractelement <8 x i1> %313, i32 4
  br i1 %333, label %334, label %337

334:                                              ; preds = %332
  %335 = or i64 %306, 4
  %336 = getelementptr i16, i16* %292, i64 %335
  store i16 39, i16* %336, align 2
  br label %337

337:                                              ; preds = %334, %332
  %338 = extractelement <8 x i1> %313, i32 5
  br i1 %338, label %339, label %342

339:                                              ; preds = %337
  %340 = or i64 %306, 5
  %341 = getelementptr i16, i16* %292, i64 %340
  store i16 39, i16* %341, align 2
  br label %342

342:                                              ; preds = %339, %337
  %343 = extractelement <8 x i1> %313, i32 6
  br i1 %343, label %344, label %347

344:                                              ; preds = %342
  %345 = or i64 %306, 6
  %346 = getelementptr i16, i16* %292, i64 %345
  store i16 39, i16* %346, align 2
  br label %347

347:                                              ; preds = %344, %342
  %348 = extractelement <8 x i1> %313, i32 7
  br i1 %348, label %349, label %352

349:                                              ; preds = %347
  %350 = or i64 %306, 7
  %351 = getelementptr i16, i16* %292, i64 %350
  store i16 39, i16* %351, align 2
  br label %352

352:                                              ; preds = %349, %347
  %353 = extractelement <8 x i1> %314, i32 0
  br i1 %353, label %354, label %357

354:                                              ; preds = %352
  %355 = or i64 %306, 8
  %356 = getelementptr i16, i16* %292, i64 %355
  store i16 39, i16* %356, align 2
  br label %357

357:                                              ; preds = %354, %352
  %358 = extractelement <8 x i1> %314, i32 1
  br i1 %358, label %359, label %362

359:                                              ; preds = %357
  %360 = or i64 %306, 9
  %361 = getelementptr i16, i16* %292, i64 %360
  store i16 39, i16* %361, align 2
  br label %362

362:                                              ; preds = %359, %357
  %363 = extractelement <8 x i1> %314, i32 2
  br i1 %363, label %364, label %367

364:                                              ; preds = %362
  %365 = or i64 %306, 10
  %366 = getelementptr i16, i16* %292, i64 %365
  store i16 39, i16* %366, align 2
  br label %367

367:                                              ; preds = %364, %362
  %368 = extractelement <8 x i1> %314, i32 3
  br i1 %368, label %369, label %372

369:                                              ; preds = %367
  %370 = or i64 %306, 11
  %371 = getelementptr i16, i16* %292, i64 %370
  store i16 39, i16* %371, align 2
  br label %372

372:                                              ; preds = %369, %367
  %373 = extractelement <8 x i1> %314, i32 4
  br i1 %373, label %374, label %377

374:                                              ; preds = %372
  %375 = or i64 %306, 12
  %376 = getelementptr i16, i16* %292, i64 %375
  store i16 39, i16* %376, align 2
  br label %377

377:                                              ; preds = %374, %372
  %378 = extractelement <8 x i1> %314, i32 5
  br i1 %378, label %379, label %382

379:                                              ; preds = %377
  %380 = or i64 %306, 13
  %381 = getelementptr i16, i16* %292, i64 %380
  store i16 39, i16* %381, align 2
  br label %382

382:                                              ; preds = %379, %377
  %383 = extractelement <8 x i1> %314, i32 6
  br i1 %383, label %384, label %387

384:                                              ; preds = %382
  %385 = or i64 %306, 14
  %386 = getelementptr i16, i16* %292, i64 %385
  store i16 39, i16* %386, align 2
  br label %387

387:                                              ; preds = %384, %382
  %388 = extractelement <8 x i1> %314, i32 7
  br i1 %388, label %389, label %392

389:                                              ; preds = %387
  %390 = or i64 %306, 15
  %391 = getelementptr i16, i16* %292, i64 %390
  store i16 39, i16* %391, align 2
  br label %392

392:                                              ; preds = %389, %387
  %393 = add i64 %306, 16
  %394 = icmp eq i64 %393, %303
  br i1 %394, label %395, label %305, !llvm.loop !13

395:                                              ; preds = %392
  %396 = icmp eq i64 %300, %303
  br i1 %396, label %407, label %397

397:                                              ; preds = %395, %296
  %398 = phi i16* [ %292, %296 ], [ %304, %395 ]
  br label %399

399:                                              ; preds = %397, %404
  %400 = phi i16* [ %405, %404 ], [ %398, %397 ]
  %401 = load i16, i16* %400, align 2
  %402 = icmp eq i16 %401, 8217
  br i1 %402, label %403, label %404

403:                                              ; preds = %399
  store i16 39, i16* %400, align 2
  br label %404

404:                                              ; preds = %403, %399
  %405 = getelementptr inbounds i16, i16* %400, i64 1
  %406 = icmp eq i16* %405, %294
  br i1 %406, label %407, label %399, !llvm.loop !14

407:                                              ; preds = %404, %395, %283
  %408 = bitcast %"class.std::__1::basic_string.82"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %408) #12
  %409 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = bitcast %"class.std::__1::basic_string.82"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %410, i8 -86, i64 24, i1 false)
  call void @_ZN11google_apis9GetAPIKeyEv(%"class.std::__1::basic_string.82"* nonnull sret %13) #12
  %411 = bitcast %"class.std::__1::basic_string.82"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %411) #12
  %412 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = bitcast %"class.std::__1::basic_string.82"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %413, i8 -86, i64 24, i1 false)
  %414 = load i8, i8* %285, align 1
  %415 = icmp slt i8 %414, 0
  %416 = load i16*, i16** %100, align 8
  %417 = select i1 %415, i16* %416, i16* %290
  %418 = load i64, i64* %101, align 8
  %419 = zext i8 %414 to i64
  %420 = select i1 %415, i64 %418, i64 %419
  call void @_ZN4base19GetQuotedJSONStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.82"* nonnull sret %14, i16* %417, i64 %420) #12
  %421 = bitcast %"class.std::__1::basic_string.82"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %421) #12
  %422 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = bitcast %"class.std::__1::basic_string.82"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %424 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %423, i64 0, i32 1, i32 0
  %425 = bitcast %"class.std::__1::basic_string.82"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %425, i8 -86, i64 24, i1 false)
  %426 = load i8, i8* %424, align 1
  %427 = icmp slt i8 %426, 0
  %428 = load i8*, i8** %412, align 8
  %429 = select i1 %427, i8* %428, i8* %411
  %430 = bitcast %"class.std::__1::basic_string.82"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %431 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %430, i64 0, i32 1, i32 0
  %432 = load i8, i8* %431, align 1
  %433 = icmp slt i8 %432, 0
  %434 = load i8*, i8** %96, align 8
  %435 = select i1 %433, i8* %434, i8* %95
  %436 = bitcast %"class.std::__1::basic_string.82"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %437 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %436, i64 0, i32 1, i32 0
  %438 = load i8, i8* %437, align 1
  %439 = icmp slt i8 %438, 0
  %440 = load i8*, i8** %98, align 8
  %441 = select i1 %439, i8* %440, i8* %97
  call void (%"class.std::__1::basic_string.82"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.82"* nonnull sret %15, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @_ZZN21SpellingServiceClient16RequestTextCheckEPN7content14BrowserContextENS_11ServiceTypeERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEN4base12OnceCallbackIFvbSC_RKNS4_6vectorI16SpellCheckResultNS8_ISG_EEEEEEEE32kSpellingRequestRestBodyTemplate, i64 0, i64 0), i8* %429, i8* %435, i8* %441) #12
  %442 = bitcast %"struct.net::NetworkTrafficAnnotationTag"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %442) #12
  %443 = getelementptr inbounds %"struct.net::NetworkTrafficAnnotationTag", %"struct.net::NetworkTrafficAnnotationTag"* %16, i64 0, i32 0
  store i32 132553989, i32* %443, align 4
  %444 = call i8* @_Znwm(i64 1640) #13
  %445 = bitcast i8* %444 to %"struct.network::ResourceRequest"*
  call void @_ZN7network15ResourceRequestC1Ev(%"struct.network::ResourceRequest"* nonnull %445) #12
  %446 = bitcast %class.GURL* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %446) #12
  call void @_ZN21SpellingServiceClient16BuildEndpointUrlEi(%class.GURL* nonnull sret %17, %class.SpellingServiceClient* undef, i32 %2)
  %447 = getelementptr inbounds i8, i8* %444, i64 24
  %448 = bitcast i8* %447 to %class.GURL*
  %449 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %448, %class.GURL* nonnull dereferenceable(120) %17) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %446) #12
  %450 = getelementptr inbounds i8, i8* %444, i64 620
  %451 = bitcast i8* %450 to i32*
  store i32 0, i32* %451, align 4
  %452 = getelementptr inbounds i8, i8* %444, i64 23
  %453 = load i8, i8* %452, align 1
  %454 = icmp slt i8 %453, 0
  br i1 %454, label %455, label %460

455:                                              ; preds = %407
  %456 = getelementptr inbounds i8, i8* %444, i64 8
  %457 = bitcast i8* %456 to i64*
  store i64 4, i64* %457, align 8
  %458 = bitcast i8* %444 to i8**
  %459 = load i8*, i8** %458, align 8
  br label %461

460:                                              ; preds = %407
  store i8 4, i8* %452, align 1
  br label %461

461:                                              ; preds = %455, %460
  %462 = phi i8* [ %459, %455 ], [ %444, %460 ]
  %463 = bitcast i8* %462 to i32*
  store i32 1414745936, i32* %463, align 1
  %464 = getelementptr inbounds i8, i8* %462, i64 4
  store i8 0, i8* %464, align 1
  %465 = bitcast %"class.std::__1::unique_ptr.248"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %465) #12
  %466 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %18, i64 0, i32 0, i32 0, i32 0
  %467 = call %"class.network::SimpleURLLoader"* @_ZN7network15SimpleURLLoader6CreateENSt3__110unique_ptrINS_15ResourceRequestENS1_14default_deleteIS3_EEEERKN3net27NetworkTrafficAnnotationTagE(%"struct.network::ResourceRequest"* nonnull %445, %"struct.net::NetworkTrafficAnnotationTag"* nonnull dereferenceable(4) %16) #12
  store %"class.network::SimpleURLLoader"* %467, %"class.network::SimpleURLLoader"** %466, align 8
  %468 = bitcast %"class.std::__1::basic_string.82"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %468) #12
  %469 = bitcast %"class.std::__1::basic_string.82"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %470 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %469, i64 0, i32 1, i32 0
  store i8 16, i8* %470, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %468, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i64 16, i1 false) #12
  %471 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %472 = bitcast i64* %471 to i8*
  store i8 0, i8* %472, align 8
  %473 = bitcast %"class.network::SimpleURLLoader"* %467 to void (%"class.network::SimpleURLLoader"*, %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"*)***
  %474 = load void (%"class.network::SimpleURLLoader"*, %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"*)**, void (%"class.network::SimpleURLLoader"*, %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"*)*** %473, align 8
  %475 = getelementptr inbounds void (%"class.network::SimpleURLLoader"*, %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"*)*, void (%"class.network::SimpleURLLoader"*, %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"*)** %474, i64 14
  %476 = load void (%"class.network::SimpleURLLoader"*, %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"*)*, void (%"class.network::SimpleURLLoader"*, %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"*)** %475, align 8
  call void %476(%"class.network::SimpleURLLoader"* %467, %"class.std::__1::basic_string.82"* nonnull dereferenceable(24) %15, %"class.std::__1::basic_string.82"* nonnull dereferenceable(24) %19) #12
  %477 = load i8, i8* %470, align 1
  %478 = icmp slt i8 %477, 0
  br i1 %478, label %479, label %482

479:                                              ; preds = %461
  %480 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %481 = load i8*, i8** %480, align 8
  call void @_ZdlPv(i8* %481) #13
  br label %482

482:                                              ; preds = %479, %461
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %468) #12
  %483 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %484 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %483, align 8
  %485 = call %"struct.SpellingServiceClient::TextCheckCallbackData"* @_ZNSt3__111make_uniqueIN21SpellingServiceClient21TextCheckCallbackDataEJNS_10unique_ptrIN7network15SimpleURLLoaderENS_14default_deleteIS5_EEEEN4base12OnceCallbackIFvbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorI16SpellCheckResultNSE_ISK_EEEEEEESI_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.std::__1::unique_ptr.248"* nonnull dereferenceable(8) %18, %"class.base::OnceCallback"* dereferenceable(8) %4, %"class.std::__1::basic_string"* dereferenceable(24) %3)
  %486 = ptrtoint %"struct.SpellingServiceClient::TextCheckCallbackData"* %485 to i64
  %487 = call i8* @_Znwm(i64 24) #13, !noalias !16
  %488 = getelementptr inbounds i8, i8* %487, i64 16
  %489 = bitcast i8* %488 to i64*
  store i64 %486, i64* %489, align 8
  %490 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %484, i64 0, i32 0
  %491 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %490, align 8
  %492 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %491, i64 0, i32 1
  %493 = bitcast %"struct.std::__1::__list_node_base"** %492 to i8**
  store i8* %487, i8** %493, align 8
  %494 = bitcast %"struct.std::__1::__list_node_base"* %484 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = bitcast i8* %487 to i64*
  store i64 %495, i64* %496, align 8
  %497 = bitcast %"struct.std::__1::__list_node_base"* %484 to i8**
  store i8* %487, i8** %497, align 8
  %498 = getelementptr inbounds i8, i8* %487, i64 8
  %499 = bitcast i8* %498 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %484, %"struct.std::__1::__list_node_base"** %499, align 8
  %500 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %501 = load i64, i64* %500, align 8
  %502 = add i64 %501, 1
  store i64 %502, i64* %500, align 8
  %503 = ptrtoint i8* %487 to i64
  %504 = bitcast i8* %488 to %"struct.SpellingServiceClient::TextCheckCallbackData"**
  %505 = load %"struct.SpellingServiceClient::TextCheckCallbackData"*, %"struct.SpellingServiceClient::TextCheckCallbackData"** %504, align 8
  %506 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %505, i64 0, i32 0, i32 0, i32 0, i32 0
  %507 = load %"class.network::SimpleURLLoader"*, %"class.network::SimpleURLLoader"** %506, align 8
  %508 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 1, i32 0
  %509 = load %"class.network::SharedURLLoaderFactory"*, %"class.network::SharedURLLoaderFactory"** %508, align 8
  %510 = icmp eq %"class.network::SharedURLLoaderFactory"* %509, null
  br i1 %510, label %513, label %511

511:                                              ; preds = %482
  %512 = getelementptr inbounds %"class.network::SharedURLLoaderFactory", %"class.network::SharedURLLoaderFactory"* %509, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %512) #12
  br label %520

513:                                              ; preds = %482
  %514 = call %"class.content::StoragePartition"* @_ZN7content14BrowserContext26GetDefaultStoragePartitionEv(%"class.content::BrowserContext"* nonnull %1) #12
  %515 = bitcast %"class.content::StoragePartition"* %514 to %"class.network::SharedURLLoaderFactory"* (%"class.content::StoragePartition"*)***
  %516 = load %"class.network::SharedURLLoaderFactory"* (%"class.content::StoragePartition"*)**, %"class.network::SharedURLLoaderFactory"* (%"class.content::StoragePartition"*)*** %515, align 8
  %517 = getelementptr inbounds %"class.network::SharedURLLoaderFactory"* (%"class.content::StoragePartition"*)*, %"class.network::SharedURLLoaderFactory"* (%"class.content::StoragePartition"*)** %516, i64 3
  %518 = load %"class.network::SharedURLLoaderFactory"* (%"class.content::StoragePartition"*)*, %"class.network::SharedURLLoaderFactory"* (%"class.content::StoragePartition"*)** %517, align 8
  %519 = call %"class.network::SharedURLLoaderFactory"* %518(%"class.content::StoragePartition"* %514) #12
  br label %520

520:                                              ; preds = %513, %511
  %521 = phi %"class.network::SharedURLLoaderFactory"* [ %509, %511 ], [ %519, %513 ]
  %522 = getelementptr inbounds %"class.network::SharedURLLoaderFactory", %"class.network::SharedURLLoaderFactory"* %521, i64 0, i32 0
  %523 = ptrtoint %class.SpellingServiceClient* %0 to i64
  %524 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %525 = call i8* @_Znwm(i64 72) #13, !noalias !19
  %526 = bitcast i8* %525 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %526, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.274"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM21SpellingServiceClientFvNSt3__115__list_iteratorINS4_10unique_ptrINS3_21TextCheckCallbackDataENS4_14default_deleteIS7_EEEEPvEENS_9TimeTicksENS6_INS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS8_ISJ_EEEEEJNS0_17UnretainedWrapperIS3_EESC_SD_EEEFvSL_EE7RunOnceEPNS0_13BindStateBaseEOSL_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM21SpellingServiceClientFvNSt3__115__list_iteratorINS3_10unique_ptrINS2_21TextCheckCallbackDataENS3_14default_deleteIS6_EEEEPvEENS_9TimeTicksENS5_INS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS7_ISI_EEEEEJNS0_17UnretainedWrapperIS2_EESB_SC_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !19
  %527 = getelementptr inbounds i8, i8* %525, i64 32
  %528 = bitcast i8* %527 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.SpellingServiceClient*, %"struct.std::__1::__list_node_base"*, i64, %"class.std::__1::basic_string.82"*)* @_ZN21SpellingServiceClient22OnSimpleLoaderCompleteENSt3__115__list_iteratorINS0_10unique_ptrINS_21TextCheckCallbackDataENS0_14default_deleteIS3_EEEEPvEEN4base9TimeTicksENS2_INS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS4_ISG_EEEE to i64), i64 0>, <2 x i64>* %528, align 8, !noalias !19
  %529 = getelementptr inbounds i8, i8* %525, i64 48
  %530 = bitcast i8* %529 to i64*
  store i64 %523, i64* %530, align 8, !noalias !19
  %531 = getelementptr inbounds i8, i8* %525, i64 56
  %532 = bitcast i8* %531 to i64*
  store i64 %503, i64* %532, align 8, !noalias !19
  %533 = getelementptr inbounds i8, i8* %525, i64 64
  %534 = bitcast i8* %533 to i64*
  store i64 %524, i64* %534, align 8, !noalias !19
  %535 = bitcast %"class.base::OnceCallback.260"* %20 to i8**
  store i8* %525, i8** %535, align 8, !alias.scope !19
  %536 = bitcast %"class.network::SimpleURLLoader"* %507 to void (%"class.network::SimpleURLLoader"*, %"class.network::mojom::URLLoaderFactory"*, %"class.base::OnceCallback.260"*)***
  %537 = load void (%"class.network::SimpleURLLoader"*, %"class.network::mojom::URLLoaderFactory"*, %"class.base::OnceCallback.260"*)**, void (%"class.network::SimpleURLLoader"*, %"class.network::mojom::URLLoaderFactory"*, %"class.base::OnceCallback.260"*)*** %536, align 8
  %538 = getelementptr inbounds void (%"class.network::SimpleURLLoader"*, %"class.network::mojom::URLLoaderFactory"*, %"class.base::OnceCallback.260"*)*, void (%"class.network::SimpleURLLoader"*, %"class.network::mojom::URLLoaderFactory"*, %"class.base::OnceCallback.260"*)** %537, i64 3
  %539 = load void (%"class.network::SimpleURLLoader"*, %"class.network::mojom::URLLoaderFactory"*, %"class.base::OnceCallback.260"*)*, void (%"class.network::SimpleURLLoader"*, %"class.network::mojom::URLLoaderFactory"*, %"class.base::OnceCallback.260"*)** %538, align 8
  call void %539(%"class.network::SimpleURLLoader"* %507, %"class.network::mojom::URLLoaderFactory"* %522, %"class.base::OnceCallback.260"* nonnull %20) #12
  %540 = getelementptr inbounds %"class.base::OnceCallback.260", %"class.base::OnceCallback.260"* %20, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %540) #12
  %541 = icmp eq %"class.network::SharedURLLoaderFactory"* %521, null
  br i1 %541, label %555, label %542

542:                                              ; preds = %520
  %543 = getelementptr inbounds %"class.network::SharedURLLoaderFactory", %"class.network::SharedURLLoaderFactory"* %521, i64 0, i32 1
  %544 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %543, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %544) #12
  %545 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %543, i64 0, i32 0, i32 0
  %546 = load i32, i32* %545, align 4
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %555

548:                                              ; preds = %542
  %549 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %543, i64 -2
  %550 = bitcast %"class.base::RefCounted"* %549 to %"class.network::SharedURLLoaderFactory"*
  %551 = bitcast %"class.base::RefCounted"* %549 to void (%"class.network::SharedURLLoaderFactory"*)***
  %552 = load void (%"class.network::SharedURLLoaderFactory"*)**, void (%"class.network::SharedURLLoaderFactory"*)*** %551, align 8
  %553 = getelementptr inbounds void (%"class.network::SharedURLLoaderFactory"*)*, void (%"class.network::SharedURLLoaderFactory"*)** %552, i64 1
  %554 = load void (%"class.network::SharedURLLoaderFactory"*)*, void (%"class.network::SharedURLLoaderFactory"*)** %553, align 8
  call void %554(%"class.network::SharedURLLoaderFactory"* nonnull %550) #12
  br label %555

555:                                              ; preds = %520, %542, %548
  %556 = load %"class.network::SimpleURLLoader"*, %"class.network::SimpleURLLoader"** %466, align 8
  store %"class.network::SimpleURLLoader"* null, %"class.network::SimpleURLLoader"** %466, align 8
  %557 = icmp eq %"class.network::SimpleURLLoader"* %556, null
  br i1 %557, label %563, label %558

558:                                              ; preds = %555
  %559 = bitcast %"class.network::SimpleURLLoader"* %556 to void (%"class.network::SimpleURLLoader"*)***
  %560 = load void (%"class.network::SimpleURLLoader"*)**, void (%"class.network::SimpleURLLoader"*)*** %559, align 8
  %561 = getelementptr inbounds void (%"class.network::SimpleURLLoader"*)*, void (%"class.network::SimpleURLLoader"*)** %560, i64 1
  %562 = load void (%"class.network::SimpleURLLoader"*)*, void (%"class.network::SimpleURLLoader"*)** %561, align 8
  call void %562(%"class.network::SimpleURLLoader"* nonnull %556) #12
  br label %563

563:                                              ; preds = %558, %555
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %465) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %442) #12
  %564 = bitcast %"class.std::__1::basic_string.82"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %565 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %564, i64 0, i32 1, i32 0
  %566 = load i8, i8* %565, align 1
  %567 = icmp slt i8 %566, 0
  br i1 %567, label %568, label %570

568:                                              ; preds = %563
  %569 = load i8*, i8** %422, align 8
  call void @_ZdlPv(i8* %569) #13
  br label %570

570:                                              ; preds = %563, %568
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %421) #12
  %571 = load i8, i8* %424, align 1
  %572 = icmp slt i8 %571, 0
  br i1 %572, label %573, label %575

573:                                              ; preds = %570
  %574 = load i8*, i8** %412, align 8
  call void @_ZdlPv(i8* %574) #13
  br label %575

575:                                              ; preds = %570, %573
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %411) #12
  %576 = bitcast %"class.std::__1::basic_string.82"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %577 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %576, i64 0, i32 1, i32 0
  %578 = load i8, i8* %577, align 1
  %579 = icmp slt i8 %578, 0
  br i1 %579, label %580, label %582

580:                                              ; preds = %575
  %581 = load i8*, i8** %409, align 8
  call void @_ZdlPv(i8* %581) #13
  br label %582

582:                                              ; preds = %575, %580
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %408) #12
  %583 = load i8, i8* %285, align 1
  %584 = icmp slt i8 %583, 0
  br i1 %584, label %585, label %588

585:                                              ; preds = %582
  %586 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %587 = load i8*, i8** %586, align 8
  call void @_ZdlPv(i8* %587) #13
  br label %588

588:                                              ; preds = %582, %585
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #12
  %589 = load i8, i8* %437, align 1
  %590 = icmp slt i8 %589, 0
  br i1 %590, label %591, label %593

591:                                              ; preds = %588
  %592 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %592) #13
  br label %593

593:                                              ; preds = %588, %591
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #12
  %594 = load i8, i8* %431, align 1
  %595 = icmp slt i8 %594, 0
  br i1 %595, label %596, label %598

596:                                              ; preds = %593
  %597 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %597) #13
  br label %598

598:                                              ; preds = %593, %596
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #12
  %599 = bitcast %"class.std::__1::basic_string.82"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %600 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %599, i64 0, i32 1, i32 0
  %601 = load i8, i8* %600, align 1
  %602 = icmp slt i8 %601, 0
  br i1 %602, label %603, label %605

603:                                              ; preds = %598
  %604 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %604) #13
  br label %605

605:                                              ; preds = %603, %598, %51, %24
  %606 = phi i8* [ %25, %24 ], [ %25, %51 ], [ %56, %598 ], [ %56, %603 ]
  %607 = phi i1 [ false, %24 ], [ false, %51 ], [ true, %598 ], [ true, %603 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %606) #12
  ret i1 %607
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN21SpellingServiceClient11IsAvailableEPN7content14BrowserContextENS_11ServiceTypeE(%"class.content::BrowserContext"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string.82", align 8
  %4 = alloca %"class.std::__1::basic_string.82", align 8
  %5 = alloca %"class.std::__1::basic_string.82", align 8
  %6 = alloca %"class.std::__1::basic_string.82", align 8
  %7 = bitcast %"class.content::BrowserContext"* %0 to %"class.base::SupportsUserData"*
  %8 = tail call %class.PrefService* @_ZN10user_prefs9UserPrefs3GetEPN4base16SupportsUserDataE(%"class.base::SupportsUserData"* %7) #12
  %9 = bitcast %"class.std::__1::basic_string.82"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs17kSpellCheckEnableE, i64 0, i64 0)) #12
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string.82"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #13
  %20 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8
  br label %29

24:                                               ; preds = %14
  %25 = trunc i64 %10 to i8
  %26 = bitcast %"class.std::__1::basic_string.82"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1
  %28 = icmp eq i64 %10, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %24, %16
  %30 = phi i8* [ %19, %16 ], [ %9, %24 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs17kSpellCheckEnableE, i64 0, i64 0), i64 %10, i1 false) #12
  br label %31

31:                                               ; preds = %24, %29
  %32 = phi i8* [ %9, %24 ], [ %30, %29 ]
  %33 = getelementptr inbounds i8, i8* %32, i64 %10
  store i8 0, i8* %33, align 1
  %34 = call zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %8, %"class.std::__1::basic_string.82"* nonnull dereferenceable(24) %3) #12
  br i1 %34, label %35, label %78

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string.82"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  %37 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs29kSpellCheckUseSpellingServiceE, i64 0, i64 0)) #12
  %38 = icmp ugt i64 %37, -17
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %"class.std::__1::basic_string.82"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %40) #14
  unreachable

41:                                               ; preds = %35
  %42 = icmp ult i64 %37, 23
  br i1 %42, label %51, label %43

43:                                               ; preds = %41
  %44 = add nuw i64 %37, 16
  %45 = and i64 %44, -16
  %46 = call i8* @_Znwm(i64 %45) #13
  %47 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %46, i8** %47, align 8
  %48 = or i64 %45, -9223372036854775808
  %49 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %37, i64* %50, align 8
  br label %56

51:                                               ; preds = %41
  %52 = trunc i64 %37 to i8
  %53 = bitcast %"class.std::__1::basic_string.82"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 %52, i8* %54, align 1
  %55 = icmp eq i64 %37, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %51, %43
  %57 = phi i8* [ %46, %43 ], [ %36, %51 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs29kSpellCheckUseSpellingServiceE, i64 0, i64 0), i64 %37, i1 false) #12
  br label %58

58:                                               ; preds = %51, %56
  %59 = phi i8* [ %36, %51 ], [ %57, %56 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 %37
  store i8 0, i8* %60, align 1
  %61 = call zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %8, %"class.std::__1::basic_string.82"* nonnull dereferenceable(24) %4) #12
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %"class.content::BrowserContext"* %0 to i1 (%"class.content::BrowserContext"*)***
  %64 = load i1 (%"class.content::BrowserContext"*)**, i1 (%"class.content::BrowserContext"*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.content::BrowserContext"*)*, i1 (%"class.content::BrowserContext"*)** %64, i64 7
  %66 = load i1 (%"class.content::BrowserContext"*)*, i1 (%"class.content::BrowserContext"*)** %65, align 8
  %67 = call zeroext i1 %66(%"class.content::BrowserContext"* %0) #12
  br label %68

68:                                               ; preds = %62, %58
  %69 = phi i1 [ true, %58 ], [ %67, %62 ]
  %70 = bitcast %"class.std::__1::basic_string.82"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %68, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  br label %78

78:                                               ; preds = %31, %77
  %79 = phi i1 [ %69, %77 ], [ true, %31 ]
  %80 = bitcast %"class.std::__1::basic_string.82"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #13
  br label %87

87:                                               ; preds = %78, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  br i1 %79, label %151, label %88

88:                                               ; preds = %87
  %89 = bitcast %"class.std::__1::basic_string.82"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #12
  %90 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 24, i1 false) #12
  %92 = bitcast %"class.std::__1::basic_string.82"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #12
  %93 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs23kSpellCheckDictionariesE, i64 0, i64 0)) #12
  %94 = icmp ugt i64 %93, -17
  br i1 %94, label %95, label %97

95:                                               ; preds = %88
  %96 = bitcast %"class.std::__1::basic_string.82"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %96) #14
  unreachable

97:                                               ; preds = %88
  %98 = icmp ult i64 %93, 23
  br i1 %98, label %108, label %99

99:                                               ; preds = %97
  %100 = add nuw i64 %93, 16
  %101 = and i64 %100, -16
  %102 = call i8* @_Znwm(i64 %101) #13
  %103 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %102, i8** %103, align 8
  %104 = or i64 %101, -9223372036854775808
  %105 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %93, i64* %106, align 8
  %107 = bitcast %"class.std::__1::basic_string.82"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %113

108:                                              ; preds = %97
  %109 = trunc i64 %93 to i8
  %110 = bitcast %"class.std::__1::basic_string.82"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  store i8 %109, i8* %111, align 1
  %112 = icmp eq i64 %93, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %108, %99
  %114 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %110, %108 ], [ %107, %99 ]
  %115 = phi i8* [ %92, %108 ], [ %102, %99 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %115, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs23kSpellCheckDictionariesE, i64 0, i64 0), i64 %93, i1 false) #12
  br label %116

116:                                              ; preds = %108, %113
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %110, %108 ], [ %114, %113 ]
  %118 = phi i8* [ %92, %108 ], [ %115, %113 ]
  %119 = getelementptr inbounds i8, i8* %118, i64 %93
  store i8 0, i8* %119, align 1
  %120 = call %"class.base::ListValue"* @_ZNK11PrefService7GetListERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %8, %"class.std::__1::basic_string.82"* nonnull dereferenceable(24) %6) #12
  %121 = call zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"* %120, i64 0, %"class.std::__1::basic_string.82"* nonnull %5) #12
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #13
  br label %128

128:                                              ; preds = %116, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #12
  %129 = bitcast %"class.std::__1::basic_string.82"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  %133 = load i64, i64* %91, align 8
  %134 = zext i8 %131 to i64
  %135 = select i1 %132, i64 %133, i64 %134
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %144, label %137

137:                                              ; preds = %128
  %138 = icmp eq i32 %1, 2
  %139 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string.82"* nonnull %5, i64 0, i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #12
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string.82"* nonnull %5, i64 0, i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)) #12
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %153

144:                                              ; preds = %156, %137, %141, %153, %128
  %145 = phi i1 [ false, %128 ], [ %138, %153 ], [ %138, %141 ], [ %138, %137 ], [ %160, %156 ]
  %146 = load i8, i8* %130, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %144
  %149 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %149) #13
  br label %150

150:                                              ; preds = %144, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #12
  br label %151

151:                                              ; preds = %87, %150
  %152 = phi i1 [ %145, %150 ], [ false, %87 ]
  ret i1 %152

153:                                              ; preds = %141
  %154 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string.82"* nonnull %5, i64 0, i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #12
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %144, label %156

156:                                              ; preds = %153
  %157 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string.82"* nonnull %5, i64 0, i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0)) #12
  %158 = icmp eq i32 %157, 0
  %159 = icmp eq i32 %1, 1
  %160 = select i1 %158, i1 %138, i1 %159
  br label %144
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %class.PrefService* @_ZN10user_prefs9UserPrefs3GetEPN4base16SupportsUserDataE(%"class.base::SupportsUserData"*) local_unnamed_addr #3

declare %"class.base::ListValue"* @_ZNK11PrefService7GetListERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string.82"* dereferenceable(24)) local_unnamed_addr #3

declare zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"*, i64, %"class.std::__1::basic_string.82"*) local_unnamed_addr #3

declare void @_ZN10spellcheck35GetISOLanguageCountryCodeFromLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_S9_(%"class.std::__1::basic_string.82"* dereferenceable(24), %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"*) local_unnamed_addr #3

declare void @_ZN11google_apis9GetAPIKeyEv(%"class.std::__1::basic_string.82"* sret) local_unnamed_addr #3

declare void @_ZN4base19GetQuotedJSONStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.82"* sret, i16*, i64) local_unnamed_addr #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.82"* sret, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SpellingServiceClient16BuildEndpointUrlEi(%class.GURL* noalias sret, %class.SpellingServiceClient* nocapture readnone, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::basic_string.82", align 8
  %5 = alloca %"class.std::__1::basic_string.82", align 8
  %6 = bitcast %"class.std::__1::basic_string.82"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = bitcast %"class.std::__1::basic_string.82"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  call void @_ZN11google_apis9GetAPIKeyEv(%"class.std::__1::basic_string.82"* nonnull sret %5) #12
  %8 = bitcast %"class.std::__1::basic_string.82"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = select i1 %11, i8* %13, i8* %7
  call void (%"class.std::__1::basic_string.82"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.82"* nonnull sret %4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @_ZN12_GLOBAL__N_123kSpellingServiceRestURLE, i64 0, i64 0), i32 %2, i8* %14) #12
  %15 = bitcast %"class.std::__1::basic_string.82"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = select i1 %18, i8* %20, i8* %6
  %22 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %17 to i64
  %25 = select i1 %18, i64 %23, i64 %24
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* %21, i64 %25) #12
  %26 = load i8, i8* %16, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %3
  %29 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %3, %28
  %31 = load i8, i8* %9, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

declare %"class.network::SimpleURLLoader"* @_ZN7network15SimpleURLLoader6CreateENSt3__110unique_ptrINS_15ResourceRequestENS1_14default_deleteIS3_EEEERKN3net27NetworkTrafficAnnotationTagE(%"struct.network::ResourceRequest"*, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.SpellingServiceClient::TextCheckCallbackData"* @_ZNSt3__111make_uniqueIN21SpellingServiceClient21TextCheckCallbackDataEJNS_10unique_ptrIN7network15SimpleURLLoaderENS_14default_deleteIS5_EEEEN4base12OnceCallbackIFvbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorI16SpellCheckResultNSE_ISK_EEEEEEESI_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.std::__1::unique_ptr.248"* dereferenceable(8), %"class.base::OnceCallback"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = tail call i8* @_Znwm(i64 40) #13
  %7 = bitcast i8* %6 to %"struct.SpellingServiceClient::TextCheckCallbackData"*
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::unique_ptr.248"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.network::SimpleURLLoader"* null, %"class.network::SimpleURLLoader"** %8, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %21, i64 24, i1 false) #12
  br label %199

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %26, 11
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %30 = trunc i64 %26 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  store i8 %30, i8* %32, align 1
  br label %50

33:                                               ; preds = %22
  %34 = icmp ugt i64 %26, 9223372036854775791
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %36) #14
  unreachable

37:                                               ; preds = %33
  %38 = add nuw nsw i64 %26, 8
  %39 = and i64 %38, -8
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

42:                                               ; preds = %37
  %43 = shl i64 %39, 1
  %44 = tail call i8* @_Znwm(i64 %43) #13
  %45 = bitcast i8* %44 to i16*
  %46 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %44, i8** %46, align 8
  %47 = or i64 %39, -9223372036854775808
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %49, align 8
  br label %50

50:                                               ; preds = %42, %28
  %51 = phi i16* [ %29, %28 ], [ %45, %42 ]
  %52 = add nuw nsw i64 %26, 1
  %53 = add i64 %26, 1
  %54 = icmp ult i64 %53, 16
  br i1 %54, label %144, label %55

55:                                               ; preds = %50
  %56 = add i64 %26, 1
  %57 = getelementptr i16, i16* %51, i64 %56
  %58 = getelementptr i16, i16* %24, i64 %56
  %59 = icmp ult i16* %51, %58
  %60 = icmp ult i16* %24, %57
  %61 = and i1 %59, %60
  br i1 %61, label %144, label %62

62:                                               ; preds = %55
  %63 = and i64 %53, -16
  %64 = sub i64 %52, %63
  %65 = getelementptr i16, i16* %24, i64 %63
  %66 = getelementptr i16, i16* %51, i64 %63
  %67 = add i64 %63, -16
  %68 = lshr exact i64 %67, 4
  %69 = add nuw nsw i64 %68, 1
  %70 = and i64 %69, 3
  %71 = icmp ult i64 %67, 48
  br i1 %71, label %123, label %72

72:                                               ; preds = %62
  %73 = sub nsw i64 %69, %70
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i64 [ 0, %72 ], [ %120, %74 ]
  %76 = phi i64 [ %73, %72 ], [ %121, %74 ]
  %77 = getelementptr i16, i16* %24, i64 %75
  %78 = getelementptr i16, i16* %51, i64 %75
  %79 = bitcast i16* %77 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !24
  %81 = getelementptr i16, i16* %77, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !24
  %84 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !27, !noalias !24
  %85 = getelementptr i16, i16* %78, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !27, !noalias !24
  %87 = or i64 %75, 16
  %88 = getelementptr i16, i16* %24, i64 %87
  %89 = getelementptr i16, i16* %51, i64 %87
  %90 = bitcast i16* %88 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !24
  %92 = getelementptr i16, i16* %88, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !24
  %95 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !27, !noalias !24
  %96 = getelementptr i16, i16* %89, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !27, !noalias !24
  %98 = or i64 %75, 32
  %99 = getelementptr i16, i16* %24, i64 %98
  %100 = getelementptr i16, i16* %51, i64 %98
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !24
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !24
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !27, !noalias !24
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !27, !noalias !24
  %109 = or i64 %75, 48
  %110 = getelementptr i16, i16* %24, i64 %109
  %111 = getelementptr i16, i16* %51, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !24
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !24
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !27, !noalias !24
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !27, !noalias !24
  %120 = add i64 %75, 64
  %121 = add i64 %76, -4
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %74, !llvm.loop !29

123:                                              ; preds = %74, %62
  %124 = phi i64 [ 0, %62 ], [ %120, %74 ]
  %125 = icmp eq i64 %70, 0
  br i1 %125, label %142, label %126

126:                                              ; preds = %123, %126
  %127 = phi i64 [ %139, %126 ], [ %124, %123 ]
  %128 = phi i64 [ %140, %126 ], [ %70, %123 ]
  %129 = getelementptr i16, i16* %24, i64 %127
  %130 = getelementptr i16, i16* %51, i64 %127
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !24
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !24
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !27, !noalias !24
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !27, !noalias !24
  %139 = add i64 %127, 16
  %140 = add i64 %128, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %126, !llvm.loop !30

142:                                              ; preds = %126, %123
  %143 = icmp eq i64 %53, %63
  br i1 %143, label %197, label %144

144:                                              ; preds = %142, %55, %50
  %145 = phi i64 [ %52, %55 ], [ %52, %50 ], [ %64, %142 ]
  %146 = phi i16* [ %24, %55 ], [ %24, %50 ], [ %65, %142 ]
  %147 = phi i16* [ %51, %55 ], [ %51, %50 ], [ %66, %142 ]
  %148 = add i64 %145, -1
  %149 = and i64 %145, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %162, label %151

151:                                              ; preds = %144, %151
  %152 = phi i64 [ %157, %151 ], [ %145, %144 ]
  %153 = phi i16* [ %159, %151 ], [ %146, %144 ]
  %154 = phi i16* [ %158, %151 ], [ %147, %144 ]
  %155 = phi i64 [ %160, %151 ], [ %149, %144 ]
  %156 = load i16, i16* %153, align 2
  store i16 %156, i16* %154, align 2
  %157 = add i64 %152, -1
  %158 = getelementptr inbounds i16, i16* %154, i64 1
  %159 = getelementptr inbounds i16, i16* %153, i64 1
  %160 = add i64 %155, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %151, !llvm.loop !31

162:                                              ; preds = %151, %144
  %163 = phi i64 [ %145, %144 ], [ %157, %151 ]
  %164 = phi i16* [ %146, %144 ], [ %159, %151 ]
  %165 = phi i16* [ %147, %144 ], [ %158, %151 ]
  %166 = icmp ult i64 %148, 7
  br i1 %166, label %197, label %167

167:                                              ; preds = %162, %167
  %168 = phi i64 [ %193, %167 ], [ %163, %162 ]
  %169 = phi i16* [ %195, %167 ], [ %164, %162 ]
  %170 = phi i16* [ %194, %167 ], [ %165, %162 ]
  %171 = load i16, i16* %169, align 2
  store i16 %171, i16* %170, align 2
  %172 = getelementptr inbounds i16, i16* %170, i64 1
  %173 = getelementptr inbounds i16, i16* %169, i64 1
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %170, i64 2
  %176 = getelementptr inbounds i16, i16* %169, i64 2
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %170, i64 3
  %179 = getelementptr inbounds i16, i16* %169, i64 3
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %170, i64 4
  %182 = getelementptr inbounds i16, i16* %169, i64 4
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %170, i64 5
  %185 = getelementptr inbounds i16, i16* %169, i64 5
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %170, i64 6
  %188 = getelementptr inbounds i16, i16* %169, i64 6
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %170, i64 7
  %191 = getelementptr inbounds i16, i16* %169, i64 7
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = add i64 %168, -8
  %194 = getelementptr inbounds i16, i16* %170, i64 8
  %195 = getelementptr inbounds i16, i16* %169, i64 8
  %196 = icmp eq i64 %193, 0
  br i1 %196, label %197, label %167, !llvm.loop !32

197:                                              ; preds = %162, %167, %142
  %198 = load i64, i64* %14, align 8
  br label %199

199:                                              ; preds = %197, %19
  %200 = phi i64 [ %198, %197 ], [ %13, %19 ]
  %201 = bitcast i8* %6 to i64*
  store i64 %10, i64* %201, align 8
  %202 = getelementptr inbounds i8, i8* %6, i64 8
  %203 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %204 = bitcast i8* %202 to i64*
  store i64 %200, i64* %204, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %203, align 8
  %205 = getelementptr inbounds i8, i8* %6, i64 16
  %206 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %199
  %211 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* nonnull align 8 %211, i64 24, i1 false) #12
  br label %397

212:                                              ; preds = %199
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load i16*, i16** %213, align 8
  %215 = bitcast i16* %214 to i8*
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %217 = load i64, i64* %216, align 8
  %218 = icmp ult i64 %217, 11
  br i1 %218, label %219, label %222

219:                                              ; preds = %212
  %220 = trunc i64 %217 to i8
  %221 = getelementptr inbounds i8, i8* %6, i64 39
  store i8 %220, i8* %221, align 1
  br label %240

222:                                              ; preds = %212
  %223 = icmp ugt i64 %217, 9223372036854775791
  br i1 %223, label %224, label %226

224:                                              ; preds = %222
  %225 = bitcast i8* %205 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %225) #14
  unreachable

226:                                              ; preds = %222
  %227 = add nuw nsw i64 %217, 8
  %228 = and i64 %227, -8
  %229 = icmp slt i64 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %226
  tail call void @abort() #14
  unreachable

231:                                              ; preds = %226
  %232 = shl i64 %228, 1
  %233 = tail call i8* @_Znwm(i64 %232) #13
  %234 = bitcast i8* %205 to i8**
  store i8* %233, i8** %234, align 8
  %235 = or i64 %228, -9223372036854775808
  %236 = getelementptr inbounds i8, i8* %6, i64 32
  %237 = bitcast i8* %236 to i64*
  store i64 %235, i64* %237, align 8
  %238 = getelementptr inbounds i8, i8* %6, i64 24
  %239 = bitcast i8* %238 to i64*
  store i64 %217, i64* %239, align 8
  br label %240

240:                                              ; preds = %231, %219
  %241 = phi i8* [ %205, %219 ], [ %233, %231 ]
  %242 = bitcast i8* %241 to i16*
  %243 = add nuw nsw i64 %217, 1
  %244 = add i64 %217, 1
  %245 = icmp ult i64 %244, 16
  br i1 %245, label %338, label %246

246:                                              ; preds = %240
  %247 = shl i64 %217, 1
  %248 = add i64 %247, 2
  %249 = getelementptr i8, i8* %241, i64 %248
  %250 = add i64 %217, 1
  %251 = getelementptr i16, i16* %214, i64 %250
  %252 = bitcast i16* %251 to i8*
  %253 = icmp ult i8* %241, %252
  %254 = icmp ugt i8* %249, %215
  %255 = and i1 %253, %254
  br i1 %255, label %338, label %256

256:                                              ; preds = %246
  %257 = and i64 %244, -16
  %258 = sub i64 %243, %257
  %259 = getelementptr i16, i16* %214, i64 %257
  %260 = getelementptr i16, i16* %242, i64 %257
  %261 = add i64 %257, -16
  %262 = lshr exact i64 %261, 4
  %263 = add nuw nsw i64 %262, 1
  %264 = and i64 %263, 3
  %265 = icmp ult i64 %261, 48
  br i1 %265, label %317, label %266

266:                                              ; preds = %256
  %267 = sub nsw i64 %263, %264
  br label %268

268:                                              ; preds = %268, %266
  %269 = phi i64 [ 0, %266 ], [ %314, %268 ]
  %270 = phi i64 [ %267, %266 ], [ %315, %268 ]
  %271 = getelementptr i16, i16* %214, i64 %269
  %272 = getelementptr i16, i16* %242, i64 %269
  %273 = bitcast i16* %271 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !33
  %275 = getelementptr i16, i16* %271, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !33
  %278 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %278, align 2, !alias.scope !36, !noalias !33
  %279 = getelementptr i16, i16* %272, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %280, align 2, !alias.scope !36, !noalias !33
  %281 = or i64 %269, 16
  %282 = getelementptr i16, i16* %214, i64 %281
  %283 = getelementptr i16, i16* %242, i64 %281
  %284 = bitcast i16* %282 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !33
  %286 = getelementptr i16, i16* %282, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !33
  %289 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !36, !noalias !33
  %290 = getelementptr i16, i16* %283, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !36, !noalias !33
  %292 = or i64 %269, 32
  %293 = getelementptr i16, i16* %214, i64 %292
  %294 = getelementptr i16, i16* %242, i64 %292
  %295 = bitcast i16* %293 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !33
  %297 = getelementptr i16, i16* %293, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !33
  %300 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %300, align 2, !alias.scope !36, !noalias !33
  %301 = getelementptr i16, i16* %294, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %302, align 2, !alias.scope !36, !noalias !33
  %303 = or i64 %269, 48
  %304 = getelementptr i16, i16* %214, i64 %303
  %305 = getelementptr i16, i16* %242, i64 %303
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !33
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !33
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !36, !noalias !33
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !36, !noalias !33
  %314 = add i64 %269, 64
  %315 = add i64 %270, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %268, !llvm.loop !38

317:                                              ; preds = %268, %256
  %318 = phi i64 [ 0, %256 ], [ %314, %268 ]
  %319 = icmp eq i64 %264, 0
  br i1 %319, label %336, label %320

320:                                              ; preds = %317, %320
  %321 = phi i64 [ %333, %320 ], [ %318, %317 ]
  %322 = phi i64 [ %334, %320 ], [ %264, %317 ]
  %323 = getelementptr i16, i16* %214, i64 %321
  %324 = getelementptr i16, i16* %242, i64 %321
  %325 = bitcast i16* %323 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !33
  %327 = getelementptr i16, i16* %323, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !33
  %330 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %330, align 2, !alias.scope !36, !noalias !33
  %331 = getelementptr i16, i16* %324, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %332, align 2, !alias.scope !36, !noalias !33
  %333 = add i64 %321, 16
  %334 = add i64 %322, -1
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %336, label %320, !llvm.loop !39

336:                                              ; preds = %320, %317
  %337 = icmp eq i64 %244, %257
  br i1 %337, label %391, label %338

338:                                              ; preds = %336, %246, %240
  %339 = phi i64 [ %243, %246 ], [ %243, %240 ], [ %258, %336 ]
  %340 = phi i16* [ %214, %246 ], [ %214, %240 ], [ %259, %336 ]
  %341 = phi i16* [ %242, %246 ], [ %242, %240 ], [ %260, %336 ]
  %342 = add i64 %339, -1
  %343 = and i64 %339, 7
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %356, label %345

345:                                              ; preds = %338, %345
  %346 = phi i64 [ %351, %345 ], [ %339, %338 ]
  %347 = phi i16* [ %353, %345 ], [ %340, %338 ]
  %348 = phi i16* [ %352, %345 ], [ %341, %338 ]
  %349 = phi i64 [ %354, %345 ], [ %343, %338 ]
  %350 = load i16, i16* %347, align 2
  store i16 %350, i16* %348, align 2
  %351 = add i64 %346, -1
  %352 = getelementptr inbounds i16, i16* %348, i64 1
  %353 = getelementptr inbounds i16, i16* %347, i64 1
  %354 = add i64 %349, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %345, !llvm.loop !40

356:                                              ; preds = %345, %338
  %357 = phi i64 [ %339, %338 ], [ %351, %345 ]
  %358 = phi i16* [ %340, %338 ], [ %353, %345 ]
  %359 = phi i16* [ %341, %338 ], [ %352, %345 ]
  %360 = icmp ult i64 %342, 7
  br i1 %360, label %391, label %361

361:                                              ; preds = %356, %361
  %362 = phi i64 [ %387, %361 ], [ %357, %356 ]
  %363 = phi i16* [ %389, %361 ], [ %358, %356 ]
  %364 = phi i16* [ %388, %361 ], [ %359, %356 ]
  %365 = load i16, i16* %363, align 2
  store i16 %365, i16* %364, align 2
  %366 = getelementptr inbounds i16, i16* %364, i64 1
  %367 = getelementptr inbounds i16, i16* %363, i64 1
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %364, i64 2
  %370 = getelementptr inbounds i16, i16* %363, i64 2
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %364, i64 3
  %373 = getelementptr inbounds i16, i16* %363, i64 3
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %364, i64 4
  %376 = getelementptr inbounds i16, i16* %363, i64 4
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = getelementptr inbounds i16, i16* %364, i64 5
  %379 = getelementptr inbounds i16, i16* %363, i64 5
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %364, i64 6
  %382 = getelementptr inbounds i16, i16* %363, i64 6
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = getelementptr inbounds i16, i16* %364, i64 7
  %385 = getelementptr inbounds i16, i16* %363, i64 7
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = add i64 %362, -8
  %388 = getelementptr inbounds i16, i16* %364, i64 8
  %389 = getelementptr inbounds i16, i16* %363, i64 8
  %390 = icmp eq i64 %387, 0
  br i1 %390, label %391, label %361, !llvm.loop !41

391:                                              ; preds = %356, %361, %336
  %392 = load i8, i8* %207, align 1
  %393 = icmp slt i8 %392, 0
  br i1 %393, label %394, label %397

394:                                              ; preds = %391
  %395 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %396 = load i8*, i8** %395, align 8
  tail call void @_ZdlPv(i8* %396) #13
  br label %397

397:                                              ; preds = %210, %391, %394
  %398 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %398) #12
  ret %"struct.SpellingServiceClient::TextCheckCallbackData"* %7
}

declare %"class.content::StoragePartition"* @_ZN7content14BrowserContext26GetDefaultStoragePartitionEv(%"class.content::BrowserContext"*) local_unnamed_addr #3

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string.82"* dereferenceable(24)) local_unnamed_addr #3

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string.82"*, i64, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SpellingServiceClient29SetURLLoaderFactoryForTestingE13scoped_refptrIN7network22SharedURLLoaderFactoryEE(%class.SpellingServiceClient* nocapture, %"class.network::SharedURLLoaderFactory"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.network::SharedURLLoaderFactory"* %1 to i64
  %4 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 1
  %5 = bitcast %class.scoped_refptr* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %7 = load %"class.network::SharedURLLoaderFactory"*, %"class.network::SharedURLLoaderFactory"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.network::SharedURLLoaderFactory"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.network::SharedURLLoaderFactory", %"class.network::SharedURLLoaderFactory"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %11) #12
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 -2
  %17 = bitcast %"class.base::RefCounted"* %16 to %"class.network::SharedURLLoaderFactory"*
  %18 = bitcast %"class.base::RefCounted"* %16 to void (%"class.network::SharedURLLoaderFactory"*)***
  %19 = load void (%"class.network::SharedURLLoaderFactory"*)**, void (%"class.network::SharedURLLoaderFactory"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.network::SharedURLLoaderFactory"*)*, void (%"class.network::SharedURLLoaderFactory"*)** %19, i64 1
  %21 = load void (%"class.network::SharedURLLoaderFactory"*)*, void (%"class.network::SharedURLLoaderFactory"*)** %20, align 8
  tail call void %21(%"class.network::SharedURLLoaderFactory"* nonnull %17) #12
  br label %22

22:                                               ; preds = %15, %9, %2
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN21SpellingServiceClient13ParseResponseERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorI16SpellCheckResultNS4_ISA_EEEE(%class.SpellingServiceClient* nocapture readnone, %"class.std::__1::basic_string.82"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::DictionaryValue"*, align 8
  %5 = alloca %"class.base::ListValue"*, align 8
  %6 = alloca %"class.base::DictionaryValue"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::ListValue"*, align 8
  %10 = alloca %"class.base::DictionaryValue"*, align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %struct.SpellCheckResult, align 8
  %13 = bitcast %"class.std::__1::basic_string.82"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string.82"* %1 to i8*
  %20 = select i1 %16, i8* %18, i8* %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %15 to i64
  %24 = select i1 %16, i64 %22, i64 %23
  %25 = tail call %"class.base::Value"* @_ZN4base10JSONReader14ReadDeprecatedENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(i8* %20, i64 %24, i32 1, i64 200) #12
  %26 = bitcast %"class.base::Value"* %25 to %"class.base::DictionaryValue"*
  %27 = icmp eq %"class.base::Value"* %25, null
  br i1 %27, label %122, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i8
  %32 = icmp eq i8 %31, 6
  br i1 %32, label %33, label %119

33:                                               ; preds = %28
  %34 = bitcast %"class.base::DictionaryValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %4, align 8
  %35 = call zeroext i1 @_ZN4base15DictionaryValue13GetDictionaryENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPS0_(%"class.base::DictionaryValue"* nonnull %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN12_GLOBAL__N_110kErrorPathE, i64 0, i64 0), i64 5, %"class.base::DictionaryValue"** nonnull %4) #12
  br i1 %35, label %117, label %36

36:                                               ; preds = %33
  %37 = bitcast %"class.base::ListValue"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %5, align 8
  %38 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* nonnull %26, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN12_GLOBAL__N_121kMisspellingsRestPathE, i64 0, i64 0), i64 34, %"class.base::ListValue"** nonnull %5) #12
  br i1 %38, label %39, label %115

39:                                               ; preds = %36
  %40 = load %"class.base::ListValue"*, %"class.base::ListValue"** %5, align 8
  %41 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 7
  br i1 %43, label %44, label %64, !prof !42

44:                                               ; preds = %39
  %45 = bitcast %"class.base::DictionaryValue"** %6 to i8*
  %46 = bitcast i32* %7 to i8*
  %47 = bitcast i32* %8 to i8*
  %48 = bitcast %"class.base::ListValue"** %9 to i8*
  %49 = bitcast %"class.base::DictionaryValue"** %10 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %51 = bitcast %struct.SpellCheckResult* %12 to i8*
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %struct.SpellCheckResult** %52 to i64*
  %55 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %55, i64 0, i32 1, i32 1
  %57 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  br label %66

58:                                               ; preds = %112
  %59 = add nuw i64 %68, 1
  %60 = load %"class.base::ListValue"*, %"class.base::ListValue"** %5, align 8
  %61 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 7
  br i1 %63, label %66, label %64, !prof !42

64:                                               ; preds = %58, %39
  %65 = call dereferenceable(24) %"class.std::__1::vector.112"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #14
  unreachable

66:                                               ; preds = %44, %58
  %67 = phi %"class.base::ListValue"* [ %40, %44 ], [ %60, %58 ]
  %68 = phi i64 [ 0, %44 ], [ %59, %58 ]
  %69 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.base::ListValue"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = ashr exact i64 %73, 5
  %75 = icmp ult i64 %68, %74
  br i1 %75, label %76, label %115

76:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %6, align 8
  %77 = call zeroext i1 @_ZN4base9ListValue13GetDictionaryEmPPNS_15DictionaryValueE(%"class.base::ListValue"* %67, i64 %68, %"class.base::DictionaryValue"** nonnull %6) #12
  br i1 %77, label %79, label %78

78:                                               ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  br label %115

79:                                               ; preds = %76
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #12
  store i32 0, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #12
  store i32 0, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %9, align 8
  %80 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %6, align 8
  %81 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %80, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9, i32* nonnull %7) #12
  br i1 %81, label %82, label %112

82:                                               ; preds = %79
  %83 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %6, align 8
  %84 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %83, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i64 10, i32* nonnull %8) #12
  br i1 %84, label %85, label %112

85:                                               ; preds = %82
  %86 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %6, align 8
  %87 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* %86, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11, %"class.base::ListValue"** nonnull %9) #12
  br i1 %87, label %88, label %112

88:                                               ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #12
  %89 = load %"class.base::ListValue"*, %"class.base::ListValue"** %9, align 8
  %90 = call zeroext i1 @_ZN4base9ListValue13GetDictionaryEmPPNS_15DictionaryValueE(%"class.base::ListValue"* %89, i64 0, %"class.base::DictionaryValue"** nonnull %10) #12
  br i1 %90, label %91, label %105

91:                                               ; preds = %88
  %92 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %10, align 8
  %93 = call zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* %92, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i64 10, %"class.std::__1::basic_string"* nonnull %11) #12
  br i1 %93, label %94, label %105

94:                                               ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %51) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 48, i1 false)
  %95 = load i32, i32* %7, align 4
  %96 = load i32, i32* %8, align 4
  call void @_ZN16SpellCheckResultC1ENS_10DecorationEiiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%struct.SpellCheckResult* nonnull %12, i32 0, i32 %95, i32 %96, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #12
  %97 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %52, align 8
  %98 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %53, align 8
  %99 = icmp eq %struct.SpellCheckResult* %97, %98
  br i1 %99, label %103, label %100

100:                                              ; preds = %94
  call void @_ZN16SpellCheckResultC1ERKS_(%struct.SpellCheckResult* %97, %struct.SpellCheckResult* nonnull dereferenceable(48) %12) #12
  %101 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %97, i64 1
  %102 = ptrtoint %struct.SpellCheckResult* %101 to i64
  store i64 %102, i64* %54, align 8
  br label %104

103:                                              ; preds = %94
  call void @_ZNSt3__16vectorI16SpellCheckResultNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"* %2, %struct.SpellCheckResult* nonnull dereferenceable(48) %12) #12
  br label %104

104:                                              ; preds = %100, %103
  call void @_ZN16SpellCheckResultD1Ev(%struct.SpellCheckResult* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %51) #12
  br label %105

105:                                              ; preds = %88, %91, %104
  %106 = phi i32 [ 0, %104 ], [ 1, %91 ], [ 1, %88 ]
  %107 = load i8, i8* %56, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %105, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  br label %112

112:                                              ; preds = %111, %85, %79, %82
  %113 = phi i32 [ %106, %111 ], [ 1, %85 ], [ 1, %79 ], [ 1, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %58, label %115

115:                                              ; preds = %66, %112, %78, %36
  %116 = phi i1 [ true, %36 ], [ false, %78 ], [ false, %112 ], [ true, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br label %117

117:                                              ; preds = %115, %33
  %118 = phi i1 [ false, %33 ], [ %116, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %119

119:                                              ; preds = %117, %28
  %120 = phi i1 [ false, %28 ], [ %118, %117 ]
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %25) #12
  %121 = bitcast %"class.base::Value"* %25 to i8*
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %3, %119
  %123 = phi i1 [ %120, %119 ], [ false, %3 ]
  ret i1 %123
}

declare %"class.base::Value"* @_ZN4base10JSONReader14ReadDeprecatedENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(i8*, i64, i32, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN4base15DictionaryValue13GetDictionaryENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPS0_(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::DictionaryValue"**) local_unnamed_addr #3

declare zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::ListValue"**) local_unnamed_addr #3

declare zeroext i1 @_ZN4base9ListValue13GetDictionaryEmPPNS_15DictionaryValueE(%"class.base::ListValue"*, i64, %"class.base::DictionaryValue"**) local_unnamed_addr #3

declare zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"*, i8*, i64, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN16SpellCheckResultC1ENS_10DecorationEiiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%struct.SpellCheckResult*, i32, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN16SpellCheckResultD1Ev(%struct.SpellCheckResult*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SpellingServiceClient21TextCheckCallbackDataC2ENSt3__110unique_ptrIN7network15SimpleURLLoaderENS1_14default_deleteIS4_EEEEN4base12OnceCallbackIFvbRKNS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorI16SpellCheckResultNSD_ISJ_EEEEEEESF_(%"struct.SpellingServiceClient::TextCheckCallbackData"*, %"class.network::SimpleURLLoader"*, %"class.base::OnceCallback"* nocapture, %"class.std::__1::basic_string"* nocapture readonly) unnamed_addr #1 align 2 {
  %5 = ptrtoint %"class.network::SimpleURLLoader"* %1 to i64
  %6 = bitcast %"struct.SpellingServiceClient::TextCheckCallbackData"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #12
  br label %195

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %28 = trunc i64 %24 to i8
  %29 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 %28, i8* %30, align 1
  br label %48

31:                                               ; preds = %20
  %32 = icmp ugt i64 %24, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #14
  unreachable

35:                                               ; preds = %31
  %36 = add nuw nsw i64 %24, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #14
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #13
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  store i8* %42, i8** %44, align 8
  %45 = or i64 %37, -9223372036854775808
  %46 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %47, align 8
  br label %48

48:                                               ; preds = %40, %26
  %49 = phi i16* [ %27, %26 ], [ %43, %40 ]
  %50 = add nuw nsw i64 %24, 1
  %51 = add i64 %24, 1
  %52 = icmp ult i64 %51, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %48
  %54 = add i64 %24, 1
  %55 = getelementptr i16, i16* %49, i64 %54
  %56 = getelementptr i16, i16* %22, i64 %54
  %57 = icmp ult i16* %49, %56
  %58 = icmp ult i16* %22, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %51, -16
  %62 = sub i64 %50, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %49, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %49, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !43
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !43
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !46, !noalias !43
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !46, !noalias !43
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %49, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !43
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !43
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !46, !noalias !43
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !46, !noalias !43
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %49, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !43
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !43
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !46, !noalias !43
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !46, !noalias !43
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %49, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !43
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !43
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !46, !noalias !43
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !46, !noalias !43
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !48

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %49, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !43
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !43
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !46, !noalias !43
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !46, !noalias !43
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !49

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %51, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %48
  %143 = phi i64 [ %50, %53 ], [ %50, %48 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %48 ], [ %63, %140 ]
  %145 = phi i16* [ %49, %53 ], [ %49, %48 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !50

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !51

195:                                              ; preds = %160, %165, %140, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SpellingServiceClient21TextCheckCallbackDataD2Ev(%"struct.SpellingServiceClient::TextCheckCallbackData"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %11) #12
  %12 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.network::SimpleURLLoader"*, %"class.network::SimpleURLLoader"** %12, align 8
  store %"class.network::SimpleURLLoader"* null, %"class.network::SimpleURLLoader"** %12, align 8
  %14 = icmp eq %"class.network::SimpleURLLoader"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.network::SimpleURLLoader"* %13 to void (%"class.network::SimpleURLLoader"*)***
  %17 = load void (%"class.network::SimpleURLLoader"*)**, void (%"class.network::SimpleURLLoader"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.network::SimpleURLLoader"*)*, void (%"class.network::SimpleURLLoader"*)** %17, i64 1
  %19 = load void (%"class.network::SimpleURLLoader"*)*, void (%"class.network::SimpleURLLoader"*)** %18, align 8
  tail call void %19(%"class.network::SimpleURLLoader"* nonnull %13) #12
  br label %20

20:                                               ; preds = %10, %15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SpellingServiceClient22OnSimpleLoaderCompleteENSt3__115__list_iteratorINS0_10unique_ptrINS_21TextCheckCallbackDataENS0_14default_deleteIS3_EEEEPvEEN4base9TimeTicksENS2_INS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS4_ISG_EEEE(%class.SpellingServiceClient*, %"struct.std::__1::__list_node_base"*, i64, %"class.std::__1::basic_string.82"*) #1 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = load atomic i64, i64* @_ZZN21SpellingServiceClient22OnSimpleLoaderCompleteENSt3__115__list_iteratorINS0_10unique_ptrINS_21TextCheckCallbackDataENS0_14default_deleteIS3_EEEEPvEEN4base9TimeTicksENS2_INS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS4_ISG_EEEEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %11 = inttoptr i64 %10 to %"class.base::HistogramBase"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %4
  %14 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #12
  %15 = ptrtoint %"class.base::HistogramBase"* %14 to i64
  store atomic i64 %15, i64* @_ZZN21SpellingServiceClient22OnSimpleLoaderCompleteENSt3__115__list_iteratorINS0_10unique_ptrINS_21TextCheckCallbackDataENS0_14default_deleteIS3_EEEEPvEEN4base9TimeTicksENS2_INS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS4_ISG_EEEEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %16

16:                                               ; preds = %4, %13
  %17 = phi %"class.base::HistogramBase"* [ %11, %4 ], [ %14, %13 ]
  %18 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  %20 = sub nsw i64 %19, %2
  %21 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %17, %"class.base::TimeDelta"* nonnull dereferenceable(8) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %22 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %25 = bitcast %"struct.std::__1::__list_node_base"* %24 to %"struct.SpellingServiceClient::TextCheckCallbackData"**
  %26 = load %"struct.SpellingServiceClient::TextCheckCallbackData"*, %"struct.SpellingServiceClient::TextCheckCallbackData"** %25, align 8
  %27 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %26, i64 0, i32 1
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  %36 = load %"struct.SpellingServiceClient::TextCheckCallbackData"*, %"struct.SpellingServiceClient::TextCheckCallbackData"** %25, align 8
  %37 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %36, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %16
  %43 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %43, i64 24, i1 false) #12
  br label %217

44:                                               ; preds = %16
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 11
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %52 = trunc i64 %48 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 %52, i8* %54, align 1
  br label %70

55:                                               ; preds = %44
  %56 = icmp ugt i64 %48, 9223372036854775791
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %58) #14
  unreachable

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %48, 8
  %61 = and i64 %60, -8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  call void @abort() #14
  unreachable

64:                                               ; preds = %59
  %65 = shl i64 %61, 1
  %66 = call i8* @_Znwm(i64 %65) #13
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  store i8* %66, i8** %68, align 8
  %69 = or i64 %61, -9223372036854775808
  store i64 %69, i64* %34, align 8
  store i64 %48, i64* %33, align 8
  br label %70

70:                                               ; preds = %64, %50
  %71 = phi i16* [ %51, %50 ], [ %67, %64 ]
  %72 = add nuw nsw i64 %48, 1
  %73 = add i64 %48, 1
  %74 = icmp ult i64 %73, 16
  br i1 %74, label %164, label %75

75:                                               ; preds = %70
  %76 = add i64 %48, 1
  %77 = getelementptr i16, i16* %71, i64 %76
  %78 = getelementptr i16, i16* %46, i64 %76
  %79 = icmp ult i16* %71, %78
  %80 = icmp ult i16* %46, %77
  %81 = and i1 %79, %80
  br i1 %81, label %164, label %82

82:                                               ; preds = %75
  %83 = and i64 %73, -16
  %84 = sub i64 %72, %83
  %85 = getelementptr i16, i16* %46, i64 %83
  %86 = getelementptr i16, i16* %71, i64 %83
  %87 = add i64 %83, -16
  %88 = lshr exact i64 %87, 4
  %89 = add nuw nsw i64 %88, 1
  %90 = and i64 %89, 3
  %91 = icmp ult i64 %87, 48
  br i1 %91, label %143, label %92

92:                                               ; preds = %82
  %93 = sub nsw i64 %89, %90
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ 0, %92 ], [ %140, %94 ]
  %96 = phi i64 [ %93, %92 ], [ %141, %94 ]
  %97 = getelementptr i16, i16* %46, i64 %95
  %98 = getelementptr i16, i16* %71, i64 %95
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !52
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !52
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !55, !noalias !52
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !55, !noalias !52
  %107 = or i64 %95, 16
  %108 = getelementptr i16, i16* %46, i64 %107
  %109 = getelementptr i16, i16* %71, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !52
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !52
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !55, !noalias !52
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !55, !noalias !52
  %118 = or i64 %95, 32
  %119 = getelementptr i16, i16* %46, i64 %118
  %120 = getelementptr i16, i16* %71, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !52
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !52
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !55, !noalias !52
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !55, !noalias !52
  %129 = or i64 %95, 48
  %130 = getelementptr i16, i16* %46, i64 %129
  %131 = getelementptr i16, i16* %71, i64 %129
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !52
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !52
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !55, !noalias !52
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !55, !noalias !52
  %140 = add i64 %95, 64
  %141 = add i64 %96, -4
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %94, !llvm.loop !57

143:                                              ; preds = %94, %82
  %144 = phi i64 [ 0, %82 ], [ %140, %94 ]
  %145 = icmp eq i64 %90, 0
  br i1 %145, label %162, label %146

146:                                              ; preds = %143, %146
  %147 = phi i64 [ %159, %146 ], [ %144, %143 ]
  %148 = phi i64 [ %160, %146 ], [ %90, %143 ]
  %149 = getelementptr i16, i16* %46, i64 %147
  %150 = getelementptr i16, i16* %71, i64 %147
  %151 = bitcast i16* %149 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !52
  %153 = getelementptr i16, i16* %149, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  %155 = load <8 x i16>, <8 x i16>* %154, align 2, !alias.scope !52
  %156 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %152, <8 x i16>* %156, align 2, !alias.scope !55, !noalias !52
  %157 = getelementptr i16, i16* %150, i64 8
  %158 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %155, <8 x i16>* %158, align 2, !alias.scope !55, !noalias !52
  %159 = add i64 %147, 16
  %160 = add i64 %148, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %146, !llvm.loop !58

162:                                              ; preds = %146, %143
  %163 = icmp eq i64 %73, %83
  br i1 %163, label %217, label %164

164:                                              ; preds = %162, %75, %70
  %165 = phi i64 [ %72, %75 ], [ %72, %70 ], [ %84, %162 ]
  %166 = phi i16* [ %46, %75 ], [ %46, %70 ], [ %85, %162 ]
  %167 = phi i16* [ %71, %75 ], [ %71, %70 ], [ %86, %162 ]
  %168 = add i64 %165, -1
  %169 = and i64 %165, 7
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %182, label %171

171:                                              ; preds = %164, %171
  %172 = phi i64 [ %177, %171 ], [ %165, %164 ]
  %173 = phi i16* [ %179, %171 ], [ %166, %164 ]
  %174 = phi i16* [ %178, %171 ], [ %167, %164 ]
  %175 = phi i64 [ %180, %171 ], [ %169, %164 ]
  %176 = load i16, i16* %173, align 2
  store i16 %176, i16* %174, align 2
  %177 = add i64 %172, -1
  %178 = getelementptr inbounds i16, i16* %174, i64 1
  %179 = getelementptr inbounds i16, i16* %173, i64 1
  %180 = add i64 %175, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %171, !llvm.loop !59

182:                                              ; preds = %171, %164
  %183 = phi i64 [ %165, %164 ], [ %177, %171 ]
  %184 = phi i16* [ %166, %164 ], [ %179, %171 ]
  %185 = phi i16* [ %167, %164 ], [ %178, %171 ]
  %186 = icmp ult i64 %168, 7
  br i1 %186, label %217, label %187

187:                                              ; preds = %182, %187
  %188 = phi i64 [ %213, %187 ], [ %183, %182 ]
  %189 = phi i16* [ %215, %187 ], [ %184, %182 ]
  %190 = phi i16* [ %214, %187 ], [ %185, %182 ]
  %191 = load i16, i16* %189, align 2
  store i16 %191, i16* %190, align 2
  %192 = getelementptr inbounds i16, i16* %190, i64 1
  %193 = getelementptr inbounds i16, i16* %189, i64 1
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %190, i64 2
  %196 = getelementptr inbounds i16, i16* %189, i64 2
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %190, i64 3
  %199 = getelementptr inbounds i16, i16* %189, i64 3
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = getelementptr inbounds i16, i16* %190, i64 4
  %202 = getelementptr inbounds i16, i16* %189, i64 4
  %203 = load i16, i16* %202, align 2
  store i16 %203, i16* %201, align 2
  %204 = getelementptr inbounds i16, i16* %190, i64 5
  %205 = getelementptr inbounds i16, i16* %189, i64 5
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = getelementptr inbounds i16, i16* %190, i64 6
  %208 = getelementptr inbounds i16, i16* %189, i64 6
  %209 = load i16, i16* %208, align 2
  store i16 %209, i16* %207, align 2
  %210 = getelementptr inbounds i16, i16* %190, i64 7
  %211 = getelementptr inbounds i16, i16* %189, i64 7
  %212 = load i16, i16* %211, align 2
  store i16 %212, i16* %210, align 2
  %213 = add i64 %188, -8
  %214 = getelementptr inbounds i16, i16* %190, i64 8
  %215 = getelementptr inbounds i16, i16* %189, i64 8
  %216 = icmp eq i64 %213, 0
  br i1 %216, label %217, label %187, !llvm.loop !60

217:                                              ; preds = %182, %187, %162, %42
  %218 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #12
  %219 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %220 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %218, i8 0, i64 24, i1 false) #12
  %221 = icmp eq %"class.std::__1::basic_string.82"* %3, null
  br i1 %221, label %224, label %222

222:                                              ; preds = %217
  %223 = call zeroext i1 @_ZN21SpellingServiceClient13ParseResponseERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorI16SpellCheckResultNS4_ISA_EEEE(%class.SpellingServiceClient* undef, %"class.std::__1::basic_string.82"* nonnull dereferenceable(24) %3, %"class.std::__1::vector"* nonnull %9)
  br label %224

224:                                              ; preds = %217, %222
  %225 = phi i1 [ %223, %222 ], [ false, %217 ]
  %226 = load %"struct.SpellingServiceClient::TextCheckCallbackData"*, %"struct.SpellingServiceClient::TextCheckCallbackData"** %25, align 8
  %227 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %226, i64 0, i32 0, i32 0, i32 0, i32 0
  %228 = load %"class.network::SimpleURLLoader"*, %"class.network::SimpleURLLoader"** %227, align 8
  %229 = bitcast %"class.network::SimpleURLLoader"* %228 to %"class.network::mojom::URLResponseHead"* (%"class.network::SimpleURLLoader"*)***
  %230 = load %"class.network::mojom::URLResponseHead"* (%"class.network::SimpleURLLoader"*)**, %"class.network::mojom::URLResponseHead"* (%"class.network::SimpleURLLoader"*)*** %229, align 8
  %231 = getelementptr inbounds %"class.network::mojom::URLResponseHead"* (%"class.network::SimpleURLLoader"*)*, %"class.network::mojom::URLResponseHead"* (%"class.network::SimpleURLLoader"*)** %230, i64 21
  %232 = load %"class.network::mojom::URLResponseHead"* (%"class.network::SimpleURLLoader"*)*, %"class.network::mojom::URLResponseHead"* (%"class.network::SimpleURLLoader"*)** %231, align 8
  %233 = call %"class.network::mojom::URLResponseHead"* %232(%"class.network::SimpleURLLoader"* %228) #12
  %234 = icmp eq %"class.network::mojom::URLResponseHead"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %224
  %236 = getelementptr inbounds %"class.network::mojom::URLResponseHead", %"class.network::mojom::URLResponseHead"* %233, i64 0, i32 2, i32 0
  %237 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %236, align 8
  %238 = icmp eq %"class.net::HttpResponseHeaders"* %237, null
  br i1 %238, label %242, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %237, i64 0, i32 3
  %241 = load i32, i32* %240, align 8
  br label %242

242:                                              ; preds = %235, %224, %239
  %243 = phi i32 [ %241, %239 ], [ -2, %235 ], [ -2, %224 ]
  br i1 %225, label %244, label %249

244:                                              ; preds = %242
  %245 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %219, align 8
  %246 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %220, align 8
  %247 = icmp eq %struct.SpellCheckResult* %245, %246
  %248 = select i1 %247, i32 1, i32 2
  br label %249

249:                                              ; preds = %244, %242
  %250 = phi i32 [ %248, %244 ], [ 0, %242 ]
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i64 0, i64 0), i32 %243) #12
  %251 = load atomic i64, i64* @_ZZN21SpellingServiceClient22OnSimpleLoaderCompleteENSt3__115__list_iteratorINS0_10unique_ptrINS_21TextCheckCallbackDataENS0_14default_deleteIS3_EEEEPvEEN4base9TimeTicksENS2_INS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS4_ISG_EEEEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %252 = inttoptr i64 %251 to %"class.base::HistogramBase"*
  %253 = icmp eq i64 %251, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %249
  %255 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #12
  %256 = ptrtoint %"class.base::HistogramBase"* %255 to i64
  store atomic i64 %256, i64* @_ZZN21SpellingServiceClient22OnSimpleLoaderCompleteENSt3__115__list_iteratorINS0_10unique_ptrINS_21TextCheckCallbackDataENS0_14default_deleteIS3_EEEEPvEEN4base9TimeTicksENS2_INS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS4_ISG_EEEEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %257

257:                                              ; preds = %249, %254
  %258 = phi %"class.base::HistogramBase"* [ %252, %249 ], [ %255, %254 ]
  %259 = bitcast %"class.base::HistogramBase"* %258 to void (%"class.base::HistogramBase"*, i32)***
  %260 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %259, align 8
  %261 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %260, i64 6
  %262 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %261, align 8
  call void %262(%"class.base::HistogramBase"* %258, i32 %250) #12
  %263 = getelementptr inbounds %class.SpellingServiceClient, %class.SpellingServiceClient* %0, i64 0, i32 0
  %264 = call %"struct.std::__1::__list_node_base"* @_ZNSt3__14listINS_10unique_ptrIN21SpellingServiceClient21TextCheckCallbackDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5eraseENS_21__list_const_iteratorIS6_PvEE(%"class.std::__1::list"* %263, %"struct.std::__1::__list_node_base"* %1)
  %265 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #12
  %266 = load i64, i64* %31, align 8
  %267 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %266, i64* %267, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %268 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %269 = inttoptr i64 %266 to %"class.base::internal::BindStateBase"*
  %270 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %269, i64 0, i32 1
  %271 = bitcast void ()** %270 to void (%"class.base::internal::BindStateBase"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*)**
  %272 = load void (%"class.base::internal::BindStateBase"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*)*, void (%"class.base::internal::BindStateBase"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*)** %271, align 8
  call void %272(%"class.base::internal::BindStateBase"* %269, i1 zeroext %225, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %268) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #12
  %273 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %219, align 8
  %274 = icmp eq %struct.SpellCheckResult* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %257
  %276 = bitcast %struct.SpellCheckResult* %273 to i8*
  %277 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %220, align 8
  %278 = icmp eq %struct.SpellCheckResult* %277, %273
  br i1 %278, label %286, label %279

279:                                              ; preds = %275, %279
  %280 = phi %struct.SpellCheckResult* [ %281, %279 ], [ %277, %275 ]
  %281 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %280, i64 -1
  call void @_ZN16SpellCheckResultD1Ev(%struct.SpellCheckResult* %281) #12
  %282 = icmp eq %struct.SpellCheckResult* %281, %273
  br i1 %282, label %283, label %279

283:                                              ; preds = %279
  %284 = bitcast %"class.std::__1::vector"* %9 to i8**
  %285 = load i8*, i8** %284, align 8
  br label %286

286:                                              ; preds = %283, %275
  %287 = phi i8* [ %285, %283 ], [ %276, %275 ]
  store %struct.SpellCheckResult* %273, %struct.SpellCheckResult** %220, align 8
  call void @_ZdlPv(i8* %287) #13
  br label %288

288:                                              ; preds = %257, %286
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #12
  %289 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %289, i64 0, i32 1, i32 1
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %288
  %294 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %295 = load i8*, i8** %294, align 8
  call void @_ZdlPv(i8* %295) #13
  br label %296

296:                                              ; preds = %288, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  %297 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %297) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br i1 %221, label %308, label %298

298:                                              ; preds = %296
  %299 = bitcast %"class.std::__1::basic_string.82"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %300 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %299, i64 0, i32 1, i32 0
  %301 = load i8, i8* %300, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %306

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load i8*, i8** %304, align 8
  call void @_ZdlPv(i8* %305) #13
  br label %306

306:                                              ; preds = %303, %298
  %307 = bitcast %"class.std::__1::basic_string.82"* %3 to i8*
  call void @_ZdlPv(i8* %307) #13
  br label %308

308:                                              ; preds = %296, %306
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #3

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #3

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__list_node_base"* @_ZNSt3__14listINS_10unique_ptrIN21SpellingServiceClient21TextCheckCallbackDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5eraseENS_21__list_const_iteratorIS6_PvEE(%"class.std::__1::list"*, %"struct.std::__1::__list_node_base"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 1
  %4 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %3, align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base"* %4 to i64
  %6 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 0
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 1
  %9 = bitcast %"struct.std::__1::__list_node_base"** %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::__list_node_base"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.std::__1::__list_node_base"** %3 to i64**
  %13 = load i64*, i64** %12, align 8
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %18 = bitcast %"struct.std::__1::__list_node_base"* %17 to %"struct.SpellingServiceClient::TextCheckCallbackData"**
  %19 = load %"struct.SpellingServiceClient::TextCheckCallbackData"*, %"struct.SpellingServiceClient::TextCheckCallbackData"** %18, align 8
  store %"struct.SpellingServiceClient::TextCheckCallbackData"* null, %"struct.SpellingServiceClient::TextCheckCallbackData"** %18, align 8
  %20 = icmp eq %"struct.SpellingServiceClient::TextCheckCallbackData"* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %19, i64 0, i32 2
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::basic_string"* %22 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %27, %21
  %31 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %19, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %31) #12
  %32 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.network::SimpleURLLoader"*, %"class.network::SimpleURLLoader"** %32, align 8
  store %"class.network::SimpleURLLoader"* null, %"class.network::SimpleURLLoader"** %32, align 8
  %34 = icmp eq %"class.network::SimpleURLLoader"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.network::SimpleURLLoader"* %33 to void (%"class.network::SimpleURLLoader"*)***
  %37 = load void (%"class.network::SimpleURLLoader"*)**, void (%"class.network::SimpleURLLoader"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.network::SimpleURLLoader"*)*, void (%"class.network::SimpleURLLoader"*)** %37, i64 1
  %39 = load void (%"class.network::SimpleURLLoader"*)*, void (%"class.network::SimpleURLLoader"*)** %38, align 8
  tail call void %39(%"class.network::SimpleURLLoader"* nonnull %33) #12
  br label %40

40:                                               ; preds = %35, %30
  %41 = bitcast %"struct.SpellingServiceClient::TextCheckCallbackData"* %19 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %2, %40
  %43 = bitcast %"struct.std::__1::__list_node_base"* %1 to i8*
  tail call void @_ZdlPv(i8* %43) #13
  ret %"struct.std::__1::__list_node_base"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__list_impINS_10unique_ptrIN21SpellingServiceClient21TextCheckCallbackDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__list_imp"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %10, i64 0, i32 1
  %12 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 0
  %15 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %15, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  store i64 %13, i64* %17, align 8
  %18 = bitcast %"struct.std::__1::__list_node_base"* %7 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64**
  %21 = load i64*, i64** %20, align 8
  store i64 %19, i64* %21, align 8
  store i64 0, i64* %2, align 8
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %22, label %55, label %23

23:                                               ; preds = %5, %52
  %24 = phi %"struct.std::__1::__list_node_base"* [ %26, %52 ], [ %7, %5 ]
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 1
  %28 = bitcast %"struct.std::__1::__list_node_base"* %27 to %"struct.SpellingServiceClient::TextCheckCallbackData"**
  %29 = load %"struct.SpellingServiceClient::TextCheckCallbackData"*, %"struct.SpellingServiceClient::TextCheckCallbackData"** %28, align 8
  store %"struct.SpellingServiceClient::TextCheckCallbackData"* null, %"struct.SpellingServiceClient::TextCheckCallbackData"** %28, align 8
  %30 = icmp eq %"struct.SpellingServiceClient::TextCheckCallbackData"* %29, null
  br i1 %30, label %52, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %29, i64 0, i32 2
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string"* %32 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #13
  br label %40

40:                                               ; preds = %37, %31
  %41 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %29, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %41) #12
  %42 = getelementptr inbounds %"struct.SpellingServiceClient::TextCheckCallbackData", %"struct.SpellingServiceClient::TextCheckCallbackData"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.network::SimpleURLLoader"*, %"class.network::SimpleURLLoader"** %42, align 8
  store %"class.network::SimpleURLLoader"* null, %"class.network::SimpleURLLoader"** %42, align 8
  %44 = icmp eq %"class.network::SimpleURLLoader"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = bitcast %"class.network::SimpleURLLoader"* %43 to void (%"class.network::SimpleURLLoader"*)***
  %47 = load void (%"class.network::SimpleURLLoader"*)**, void (%"class.network::SimpleURLLoader"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.network::SimpleURLLoader"*)*, void (%"class.network::SimpleURLLoader"*)** %47, i64 1
  %49 = load void (%"class.network::SimpleURLLoader"*)*, void (%"class.network::SimpleURLLoader"*)** %48, align 8
  tail call void %49(%"class.network::SimpleURLLoader"* nonnull %43) #12
  br label %50

50:                                               ; preds = %45, %40
  %51 = bitcast %"struct.SpellingServiceClient::TextCheckCallbackData"* %29 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %23, %50
  %53 = bitcast %"struct.std::__1::__list_node_base"* %24 to i8*
  tail call void @_ZdlPv(i8* %53) #13
  %54 = icmp eq %"struct.std::__1::__list_node_base"* %26, %8
  br i1 %54, label %55, label %23

55:                                               ; preds = %52, %5, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.112"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() local_unnamed_addr #8 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #14
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZN7network15ResourceRequestC1Ev(%"struct.network::ResourceRequest"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM21SpellingServiceClientFvNSt3__115__list_iteratorINS4_10unique_ptrINS3_21TextCheckCallbackDataENS4_14default_deleteIS7_EEEEPvEENS_9TimeTicksENS6_INS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS8_ISJ_EEEEEJNS0_17UnretainedWrapperIS3_EESC_SD_EEEFvSL_EE7RunOnceEPNS0_13BindStateBaseEOSL_(%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.274"* dereferenceable(8)) #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %class.SpellingServiceClient*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%class.SpellingServiceClient*, %"struct.std::__1::__list_node_base"*, i64, %"class.std::__1::basic_string.82"*)**
  %22 = load void (%class.SpellingServiceClient*, %"struct.std::__1::__list_node_base"*, i64, %"class.std::__1::basic_string.82"*)*, void (%class.SpellingServiceClient*, %"struct.std::__1::__list_node_base"*, i64, %"class.std::__1::basic_string.82"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%class.SpellingServiceClient*, %"struct.std::__1::__list_node_base"*, i64, %"class.std::__1::basic_string.82"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%class.SpellingServiceClient*, %"struct.std::__1::__list_node_base"*, i64, %"class.std::__1::basic_string.82"*)* [ %22, %16 ], [ %24, %23 ]
  %27 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %28 = bitcast void (%"class.base::internal::BindStateBase"*)** %27 to %"struct.std::__1::__list_node_base"**
  %29 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %28, align 8
  %30 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %31 = bitcast void (%"class.base::internal::BindStateBase"*)** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.274"* %1, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"** %33, align 8
  store %"class.std::__1::basic_string.82"* null, %"class.std::__1::basic_string.82"** %33, align 8
  tail call void %26(%class.SpellingServiceClient* %13, %"struct.std::__1::__list_node_base"* %29, i64 %32, %"class.std::__1::basic_string.82"* %34) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM21SpellingServiceClientFvNSt3__115__list_iteratorINS3_10unique_ptrINS2_21TextCheckCallbackDataENS3_14default_deleteIS6_EEEEPvEENS_9TimeTicksENS5_INS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS7_ISI_EEEEEJNS0_17UnretainedWrapperIS2_EESB_SC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI16SpellCheckResultNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"*, %struct.SpellCheckResult* dereferenceable(48)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.SpellCheckResult** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.SpellCheckResult** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %struct.SpellCheckResult*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.SpellCheckResult* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %33, i64 %9
  %35 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %33, i64 %32
  %36 = ptrtoint %struct.SpellCheckResult* %35 to i64
  tail call void @_ZN16SpellCheckResultC1ERKS_(%struct.SpellCheckResult* %34, %struct.SpellCheckResult* dereferenceable(48) %1) #12
  %37 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %34, i64 1
  %38 = ptrtoint %struct.SpellCheckResult* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %39, align 8
  %41 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %3, align 8
  %42 = icmp eq %struct.SpellCheckResult* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %struct.SpellCheckResult* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %struct.SpellCheckResult* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %struct.SpellCheckResult* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %46, i64 -1
  %49 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %47, i64 -1
  tail call void @_ZN16SpellCheckResultC1ERKS_(%struct.SpellCheckResult* %48, %struct.SpellCheckResult* dereferenceable(48) %49) #12
  %50 = icmp eq %struct.SpellCheckResult* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %struct.SpellCheckResult* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %struct.SpellCheckResult* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %struct.SpellCheckResult* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %struct.SpellCheckResult*
  %60 = icmp eq %struct.SpellCheckResult* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %struct.SpellCheckResult* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %62, i64 -1
  tail call void @_ZN16SpellCheckResultD1Ev(%struct.SpellCheckResult* %63) #12
  %64 = icmp eq %struct.SpellCheckResult* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN16SpellCheckResultC1ERKS_(%struct.SpellCheckResult*, %struct.SpellCheckResult* dereferenceable(48)) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = distinct !{!13, !8}
!14 = distinct !{!14, !15, !8}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__14listINS_10unique_ptrIN21SpellingServiceClient21TextCheckCallbackDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__14listINS_10unique_ptrIN21SpellingServiceClient21TextCheckCallbackDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM21SpellingServiceClientFvNSt3__115__list_iteratorINS4_10unique_ptrINS3_21TextCheckCallbackDataENS4_14default_deleteIS7_EEEEPvEENS_9TimeTicksENS6_INS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS8_ISJ_EEEEEJNS0_17UnretainedWrapperIS3_EESC_SD_EEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM21SpellingServiceClientFvNSt3__115__list_iteratorINS4_10unique_ptrINS3_21TextCheckCallbackDataENS4_14default_deleteIS7_EEEEPvEENS_9TimeTicksENS6_INS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS8_ISJ_EEEEEJNS0_17UnretainedWrapperIS3_EESC_SD_EEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIM21SpellingServiceClientFvNSt3__115__list_iteratorINS2_10unique_ptrINS1_21TextCheckCallbackDataENS2_14default_deleteIS5_EEEEPvEENS_9TimeTicksENS4_INS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS6_ISH_EEEEEJNS_8internal17UnretainedWrapperIS1_EESA_SB_EEENS_12OnceCallbackINSM_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSR_DpOSS_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIM21SpellingServiceClientFvNSt3__115__list_iteratorINS2_10unique_ptrINS1_21TextCheckCallbackDataENS2_14default_deleteIS5_EEEEPvEENS_9TimeTicksENS4_INS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS6_ISH_EEEEEJNS_8internal17UnretainedWrapperIS1_EESA_SB_EEENS_12OnceCallbackINSM_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSR_DpOSS_"}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !8}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !10}
!32 = distinct !{!32, !8}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !8}
!39 = distinct !{!39, !10}
!40 = distinct !{!40, !10}
!41 = distinct !{!41, !8}
!42 = !{!"branch_weights", i32 2000, i32 1}
!43 = !{!44}
!44 = distinct !{!44, !45}
!45 = distinct !{!45, !"LVerDomain"}
!46 = !{!47}
!47 = distinct !{!47, !45}
!48 = distinct !{!48, !8}
!49 = distinct !{!49, !10}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !8}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !8}
!58 = distinct !{!58, !10}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !8}
