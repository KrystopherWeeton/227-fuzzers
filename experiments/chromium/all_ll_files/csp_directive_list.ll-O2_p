; ModuleID = '../../third_party/blink/renderer/core/frame/csp/csp_directive_list.cc'
source_filename = "../../third_party/blink/renderer/core/frame/csp/csp_directive_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.204", i32, [4 x i8], %"class.std::__1::unique_ptr.340", %"class.std::__1::unique_ptr.340", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.356", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.368", %"class.std::__1::unique_ptr.374", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.381", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.320", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.240" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.240" = type { %"struct.std::__1::__atomic_base.241" }
%"struct.std::__1::__atomic_base.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i64 }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::Worklist.251"* }
%"class.blink::Worklist.251" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.240" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::Worklist.258"* }
%"class.blink::Worklist.258" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.240" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::Worklist.265"* }
%"class.blink::Worklist.265" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.240" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::Worklist.272"* }
%"class.blink::Worklist.272" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.240" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::Worklist.279"* }
%"class.blink::Worklist.279" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.240" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::Worklist.286"* }
%"class.blink::Worklist.286" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.240" }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::Worklist.293"* }
%"class.blink::Worklist.293" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.240" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.300", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.314", [4 x i8] }>
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302", %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { i64 }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { float }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.323", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.332" }
%"class.WTF::Vector.332" = type { %"class.WTF::VectorBuffer.333" }
%"class.WTF::VectorBuffer.333" = type { %"class.WTF::VectorBufferBase.334" }
%"class.WTF::VectorBufferBase.334" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.348" }
%"class.WTF::VectorBuffer.348" = type { %"class.WTF::VectorBufferBase.349" }
%"class.WTF::VectorBufferBase.349" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.362" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.251"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.258"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.265"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.272"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.279"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.645" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.380 }
%class.scoped_refptr.380 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.381" = type { %"struct.std::__1::__atomic_base.382" }
%"struct.std::__1::__atomic_base.382" = type { %"struct.std::__1::__cxx_atomic_impl.383" }
%"struct.std::__1::__cxx_atomic_impl.383" = type { %"struct.std::__1::__cxx_atomic_base_impl.384" }
%"struct.std::__1::__cxx_atomic_base_impl.384" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr", %"class.WTF::HashMap", %"class.WTF::HashMap.2", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.13", i32, %"class.mojo::StructPtr.38", %"class.WTF::Vector.13" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.WTF::String" }
%"class.WTF::HashMap.2" = type { %"class.WTF::HashTable.3" }
%"class.WTF::HashTable.3" = type <{ %"struct.WTF::KeyValuePair.6"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.6" = type { i32, %"class.mojo::StructPtr.7" }
%"class.mojo::StructPtr.7" = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.network::mojom::blink::CSPSourceList"* }
%"class.network::mojom::blink::CSPSourceList" = type <{ %"class.WTF::Vector", %"class.WTF::Vector.13", %"class.WTF::Vector.18", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.mojo::StructPtr.21"*, i32, i32 }
%"class.mojo::StructPtr.21" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.network::mojom::blink::CSPHashSource"* }
%"class.network::mojom::blink::CSPHashSource" = type { i32, %"class.WTF::Vector.25" }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { i8*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.38" = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.13", i8, i8, [6 x i8] }>
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member", i8, [7 x i8], %"class.WTF::Vector.45", %"class.blink::HeapVector", i8, [7 x i8], %"class.WTF::HashSet", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47" }
%"class.WTF::VectorBufferBase.47" = type { %"class.mojo::StructPtr.48"*, i32, i32 }
%"class.mojo::StructPtr.48" = type { %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.blink::Member.62"*, i32, i32 }
%"class.blink::Member.62" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.64" }
%"class.WTF::HashTable.64" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.67" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::KURL"* }
%"class.WTF::StringAppend.849" = type { i8*, %"class.WTF::String" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.861", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.873", %"class.WTF::Vector.875" }
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.864", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.922", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.930", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.957", %"class.blink::FrameLoader", %"class.blink::Member.978", %"class.blink::Member.118", %"class.blink::Member.980", %"class.blink::Member.982", %"class.blink::Member.984", %"class.blink::Member.986", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.988", %class.scoped_refptr.990, %"class.blink::Member.991", %"class.blink::Member.993", %"class.blink::Member.995", %"class.blink::Member.997", %"class.blink::Member.999", %"class.blink::Member.1001", %"class.blink::Member.1003", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1107", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1113", %"class.std::__1::unique_ptr.1114", %"class.absl::optional.910", i32, [4 x i8], %"class.std::__1::unique_ptr.1120", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1138", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1156", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1170", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1178", %"class.blink::Member.1180", %"class.blink::Member.1182", %"class.blink::Member.1184", %"class.mojo::StructPtr.1187", %"class.blink::Member.1196", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1198", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.884", %"class.blink::Member.886", %"class.blink::Member.888", i8, i32, i8, i32, %"class.blink::Member.890", %"class.blink::Member.892", %"class.blink::FrameLifecycle", %"class.blink::Member.882", %"class.blink::Member.882", %"class.blink::Member.882", %"class.blink::Member.882", %"class.blink::Member.882", %"class.blink::Member.882", %"class.blink::Member.894", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.903", i8, %"class.base::UnguessableToken", %"class.absl::optional.905", %"class.absl::optional.910", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.882", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::Frame"* }
%"class.blink::Member.894" = type { %"class.blink::MemberBase.874" }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.882", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.895" }
%"class.std::__1::vector.895" = type { %"class.std::__1::__vector_base.896" }
%"class.std::__1::__vector_base.896" = type { %"struct.std::__1::pair.897"*, %"struct.std::__1::pair.897"*, %"class.std::__1::__compressed_pair.898" }
%"struct.std::__1::pair.897" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"struct.std::__1::pair.897"* }
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.905" = type { %"class.absl::optional_internal::optional_data.906" }
%"class.absl::optional_internal::optional_data.906" = type { %"class.absl::optional_internal::optional_data_base.907" }
%"class.absl::optional_internal::optional_data_base.907" = type { %"class.absl::optional_internal::optional_data_dtor_base.908" }
%"class.absl::optional_internal::optional_data_dtor_base.908" = type { i8, %union.anon.909 }
%union.anon.909 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.675 }
%union.anon.675 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.187 }
%class.scoped_refptr.187 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.915" }
%"class.blink::HeapHashSet.915" = type { %"class.WTF::HashSet.918" }
%"class.WTF::HashSet.918" = type { %"class.WTF::HashTable.919" }
%"class.WTF::HashTable.919" = type <{ %"class.blink::WeakMember.921"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.921" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.922" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.923" }
%"class.blink::HeapHashMap.923" = type { %"class.WTF::HashMap.926" }
%"class.WTF::HashMap.926" = type { %"class.WTF::HashTable.927" }
%"class.WTF::HashTable.927" = type <{ %"struct.WTF::KeyValuePair.929"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.929" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.933", %"class.base::WeakPtrFactory.938" }
%"class.WTF::HashMap.933" = type { %"class.WTF::HashTable.934" }
%"class.WTF::HashTable.934" = type <{ %"struct.WTF::KeyValuePair.937"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.937" = type opaque
%"class.base::WeakPtrFactory.938" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.389 }
%class.scoped_refptr.389 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.390", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.390" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.158" }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.391" }
%"struct.std::__1::atomic.391" = type { %"struct.std::__1::__atomic_base.392" }
%"struct.std::__1::__atomic_base.392" = type { %"struct.std::__1::__atomic_base.393" }
%"struct.std::__1::__atomic_base.393" = type { %"struct.std::__1::__cxx_atomic_impl.394" }
%"struct.std::__1::__cxx_atomic_impl.394" = type { %"struct.std::__1::__cxx_atomic_base_impl.395" }
%"struct.std::__1::__cxx_atomic_base_impl.395" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.942" }
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.451" }
%"class.blink::WeakMember.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.453" }
%"class.blink::HeapHashSet.453" = type { %"class.WTF::HashSet.456" }
%"class.WTF::HashSet.456" = type { %"class.WTF::HashTable.457" }
%"class.WTF::HashTable.457" = type <{ %"class.blink::WeakMember.459"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.459" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.946", i64, %"class.std::__1::map.947", i8*, i64, %"class.base::WeakPtrFactory.956" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.157 }
%class.scoped_refptr.157 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.946" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.947" = type { %"class.std::__1::__tree.948" }
%"class.std::__1::__tree.948" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"class.base::WeakPtrFactory.956" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.957" = type { %"class.WTF::HashSet.960" }
%"class.WTF::HashSet.960" = type { %"class.WTF::HashTable.961" }
%"class.WTF::HashTable.961" = type <{ %"class.blink::WeakMember.963"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.963" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.894", %"class.blink::Member.964", %"class.blink::Member.966", %"class.std::__1::unique_ptr.968", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.974" }
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.968" = type { %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.974" = type { %"class.WTF::HashTable.975" }
%"class.WTF::HashTable.975" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1205", %"class.blink::Member.894", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1210", i8, i32, %"class.blink::Color", %"class.absl::optional.1212", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1217", %"class.blink::Member.1219", %"class.blink::Member.1219", %"class.std::__1::unique_ptr.1222", i32, [4 x i8], %"class.WTF::HashSet.1225", %"class.blink::Member.1232", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1234", %"class.blink::HeapHashSet.1241", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1249", i8, %"class.blink::Member.1255", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1267", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1281", i8, %"class.std::__1::unique_ptr.1287", %"class.std::__1::unique_ptr.1403", %"class.WTF::Vector.1409", i32, %class.scoped_refptr.1414, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1415", %"class.blink::Member.1417", %"class.blink::Member.1419", %"class.blink::HeapHashSet.1421", %"class.blink::HeapHashSet.1428", %"class.std::__1::unique_ptr.1435", %"class.std::__1::unique_ptr.1442", %"class.WTF::Vector.154" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1205" = type { %"class.WTF::HashTable.1206" }
%"class.WTF::HashTable.1206" = type <{ %class.scoped_refptr.1209*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1209 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1210" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1211", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.387, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.387 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.388" }>
%"class.base::RefCountedThreadSafe.388" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1211" = type { %"class.blink::MemberBase.979" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1212" = type { %"class.absl::optional_internal::optional_data.1213" }
%"class.absl::optional_internal::optional_data.1213" = type { %"class.absl::optional_internal::optional_data_base.1214" }
%"class.absl::optional_internal::optional_data_base.1214" = type { %"class.absl::optional_internal::optional_data_dtor_base.1215" }
%"class.absl::optional_internal::optional_data_dtor_base.1215" = type { i8, %union.anon.1216 }
%union.anon.1216 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::HeapHashSet.1221"* }
%"class.blink::HeapHashSet.1221" = type opaque
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.WTF::HashSet.1225"* }
%"class.WTF::HashSet.1225" = type { %"class.WTF::HashTable.1226" }
%"class.WTF::HashTable.1226" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1234" = type { %"class.WTF::HashSet.1237" }
%"class.WTF::HashSet.1237" = type { %"class.WTF::HashTable.1238" }
%"class.WTF::HashTable.1238" = type <{ %"class.blink::Member.1240"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1240" = type opaque
%"class.blink::HeapHashSet.1241" = type { %"class.WTF::HashSet.1244" }
%"class.WTF::HashSet.1244" = type { %"class.WTF::HashTable.1245" }
%"class.WTF::HashTable.1245" = type <{ %"class.blink::Member.1247"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1259", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1259" = type { %"class.WTF::HashTable.1260" }
%"class.WTF::HashTable.1260" = type <{ %"struct.WTF::KeyValuePair.1262"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1262" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1263", i32, i32 }
%"class.WTF::Vector.1263" = type { %"class.WTF::VectorBuffer.1264" }
%"class.WTF::VectorBuffer.1264" = type { %"class.WTF::VectorBufferBase.1265" }
%"class.WTF::VectorBufferBase.1265" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1267" = type { %"class.WTF::LinkedHashSet.1270" }
%"class.WTF::LinkedHashSet.1270" = type { %"class.WTF::HashMap.1271", %"class.WTF::VectorBackedLinkedList.1275" }
%"class.WTF::HashMap.1271" = type { %"class.WTF::HashTable.1272" }
%"class.WTF::HashTable.1272" = type <{ %"struct.WTF::KeyValuePair.1274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1274" = type opaque
%"class.WTF::VectorBackedLinkedList.1275" = type { %"class.WTF::Vector.1276", i32, i32 }
%"class.WTF::Vector.1276" = type { %"class.WTF::VectorBuffer.1277" }
%"class.WTF::VectorBuffer.1277" = type { %"class.WTF::VectorBufferBase.1278" }
%"class.WTF::VectorBufferBase.1278" = type { %"class.WTF::VectorBackedLinkedListNode.1279"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1279" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1281" = type { %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1287" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1290, %class.scoped_refptr.1290, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1380", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1385", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1290 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1291", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1298" }
%"class.WTF::RefCounted.1291" = type { %"class.base::RefCounted.1292" }
%"class.base::RefCounted.1292" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1293", i32, [4 x i8] }>
%"class.WTF::Vector.1293" = type { %"class.WTF::VectorBuffer.1294" }
%"class.WTF::VectorBuffer.1294" = type { %"class.WTF::VectorBufferBase.1295" }
%"class.WTF::VectorBufferBase.1295" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1298" = type { %"class.WTF::VectorBuffer.1299" }
%"class.WTF::VectorBuffer.1299" = type { %"class.WTF::VectorBufferBase.1300" }
%"class.WTF::VectorBufferBase.1300" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1304", %"class.std::__1::unique_ptr.1353", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1301, %class.scoped_refptr.1302, %class.scoped_refptr.1303 }
%class.scoped_refptr.1301 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1317", i8, i8, %class.scoped_refptr.1301, i32, i32 }
%"class.WTF::RefCounted.1317" = type { %"class.base::RefCounted.1318" }
%"class.base::RefCounted.1318" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1302 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1471" }
%"class.blink::PaintPropertyNode.1471" = type { %"class.WTF::RefCounted.1472", i8, i8, %class.scoped_refptr.1302, i32, i32 }
%"class.WTF::RefCounted.1472" = type { %"class.base::RefCounted.1473" }
%"class.base::RefCounted.1473" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1303 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1468" }
%"class.blink::PaintPropertyNode.1468" = type { %"class.WTF::RefCounted.1469", i8, i8, %class.scoped_refptr.1303, i32, i32 }
%"class.WTF::RefCounted.1469" = type { %"class.base::RefCounted.1470" }
%"class.base::RefCounted.1470" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1304" = type { %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1307", %"class.WTF::Vector.1312", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1307" = type { %"class.WTF::VectorBuffer.1308" }
%"class.WTF::VectorBuffer.1308" = type { %"class.WTF::VectorBufferBase.1309" }
%"class.WTF::VectorBufferBase.1309" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1332" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1325, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1326", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1319" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1319" = type { %"class.std::__1::__compressed_pair.1320" }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1325 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1453", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1453" = type { %"class.WTF::RefCounted.1454", i8, i8, %class.scoped_refptr.1325, i32, i32 }
%"class.WTF::RefCounted.1454" = type { %"class.base::RefCounted.1455" }
%"class.base::RefCounted.1455" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1456" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1456" = type { %"class.absl::optional_internal::optional_data.1457" }
%"class.absl::optional_internal::optional_data.1457" = type { %"class.absl::optional_internal::optional_data_base.1458" }
%"class.absl::optional_internal::optional_data_base.1458" = type { %"class.absl::optional_internal::optional_data_dtor_base.1459" }
%"class.absl::optional_internal::optional_data_dtor_base.1459" = type { i8, %union.anon.1460 }
%union.anon.1460 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1461", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1461" = type { %"class.std::__1::__vector_base.1462" }
%"class.std::__1::__vector_base.1462" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1463" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1463" = type { %"struct.std::__1::__compressed_pair_elem.1464" }
%"struct.std::__1::__compressed_pair_elem.1464" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1326" = type { %"class.std::__1::__compressed_pair.1327" }
%"class.std::__1::__compressed_pair.1327" = type { %"struct.std::__1::__compressed_pair_elem.1328" }
%"struct.std::__1::__compressed_pair_elem.1328" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1332" = type { %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1335", %"class.std::__1::unique_ptr.1341", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1341" = type { %"class.std::__1::__compressed_pair.1342" }
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1353" = type { %"class.std::__1::__compressed_pair.1354" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.1355" }
%"struct.std::__1::__compressed_pair_elem.1355" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1356", %"class.absl::optional.1356" }
%"class.absl::optional.1356" = type { %"class.absl::optional_internal::optional_data.1357" }
%"class.absl::optional_internal::optional_data.1357" = type { %"class.absl::optional_internal::optional_data_base.1358" }
%"class.absl::optional_internal::optional_data_base.1358" = type { %"class.absl::optional_internal::optional_data_dtor_base.1359" }
%"class.absl::optional_internal::optional_data_dtor_base.1359" = type { i8, [3 x i8], %union.anon.1360 }
%union.anon.1360 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1298"*, %"class.absl::optional.1366", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1366" = type { %"class.absl::optional_internal::optional_data.1367" }
%"class.absl::optional_internal::optional_data.1367" = type { %"class.absl::optional_internal::optional_data_base.1368" }
%"class.absl::optional_internal::optional_data_base.1368" = type { %"class.absl::optional_internal::optional_data_dtor_base.1369" }
%"class.absl::optional_internal::optional_data_dtor_base.1369" = type { i8, %union.anon.1370 }
%union.anon.1370 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1371", %"class.WTF::Vector.1375" }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.877", [128 x i8] }
%"class.WTF::VectorBufferBase.877" = type { i32*, i32, i32 }
%"class.WTF::Vector.1375" = type { %"class.WTF::VectorBuffer.1376" }
%"class.WTF::VectorBuffer.1376" = type { %"class.WTF::VectorBufferBase.1377", [128 x i8] }
%"class.WTF::VectorBufferBase.1377" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1380" = type { %"class.WTF::VectorBuffer.1381" }
%"class.WTF::VectorBuffer.1381" = type { %"class.WTF::VectorBufferBase.1382" }
%"class.WTF::VectorBufferBase.1382" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1385" = type { %"class.WTF::HashTable.1386" }
%"class.WTF::HashTable.1386" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1390", %"class.WTF::Vector.1395" }
%"class.WTF::HashMap.1390" = type { %"class.WTF::HashTable.1391" }
%"class.WTF::HashTable.1391" = type <{ %"struct.WTF::KeyValuePair.1394"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1394" = type opaque
%"class.WTF::Vector.1395" = type { %"class.WTF::VectorBuffer.1396" }
%"class.WTF::VectorBuffer.1396" = type { %"class.WTF::VectorBufferBase.1397" }
%"class.WTF::VectorBufferBase.1397" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1403" = type { %"class.std::__1::__compressed_pair.1404" }
%"class.std::__1::__compressed_pair.1404" = type { %"struct.std::__1::__compressed_pair_elem.1405" }
%"struct.std::__1::__compressed_pair_elem.1405" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1409" = type { %"class.WTF::VectorBuffer.1410" }
%"class.WTF::VectorBuffer.1410" = type { %"class.WTF::VectorBufferBase.1411" }
%"class.WTF::VectorBufferBase.1411" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1414 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1415" = type { %"class.blink::MemberBase.1416" }
%"class.blink::MemberBase.1416" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1417" = type { %"class.blink::MemberBase.1418" }
%"class.blink::MemberBase.1418" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1421" = type { %"class.WTF::HashSet.1424" }
%"class.WTF::HashSet.1424" = type { %"class.WTF::HashTable.1425" }
%"class.WTF::HashTable.1425" = type <{ %"class.blink::WeakMember.1427"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1427" = type opaque
%"class.blink::HeapHashSet.1428" = type { %"class.WTF::HashSet.1431" }
%"class.WTF::HashSet.1431" = type { %"class.WTF::HashTable.1432" }
%"class.WTF::HashTable.1432" = type <{ %"class.blink::WeakMember.1434"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1434" = type opaque
%"class.std::__1::unique_ptr.1435" = type { %"class.std::__1::__compressed_pair.1436" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.1437" }
%"struct.std::__1::__compressed_pair_elem.1437" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1438" }
%"class.base::time_internal::TimeBase.1438" = type { i64 }
%"class.std::__1::unique_ptr.1442" = type { %"class.std::__1::__compressed_pair.1443" }
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.1444" }
%"struct.std::__1::__compressed_pair_elem.1444" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1445", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1445" = type { %"class.absl::optional_internal::optional_data.1446" }
%"class.absl::optional_internal::optional_data.1446" = type { %"class.absl::optional_internal::optional_data_base.1447" }
%"class.absl::optional_internal::optional_data_base.1447" = type { %"class.absl::optional_internal::optional_data_dtor_base.1448" }
%"class.absl::optional_internal::optional_data_dtor_base.1448" = type { i8, %union.anon.1449 }
%union.anon.1449 = type { %"class.base::Time" }
%"class.WTF::Vector.154" = type { %"class.WTF::VectorBuffer.155" }
%"class.WTF::VectorBuffer.155" = type { %"class.WTF::VectorBufferBase.156" }
%"class.WTF::VectorBufferBase.156" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.84" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.75", %"class.blink::Member.75" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::Member.75", %"class.blink::Member.75", %"class.blink::Member.79" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.100", %"class.blink::Member.102", %"class.blink::Member.77", %"class.blink::Member.104", %"class.blink::Member.104", %"class.blink::Member.127", %"class.blink::Member.129", %"class.blink::Member.131", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.136", %"class.blink::HeapVector.138" }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.154", %"class.WTF::Vector.154", i8, i32, %"class.blink::Member.165", %"class.blink::Member.167", %"class.blink::Member.169", %"class.blink::Member.171", %"class.blink::Member.173", %"class.blink::Member.175", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.177", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.183", %"class.blink::Member.185", %"class.blink::Member.144", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.188", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.120", %"class.blink::Member.118", %"class.blink::Member.397", %"class.blink::Member.118", %"class.blink::Member.118", %"class.blink::Member.118", %"class.blink::UserActionElementSet", %"class.blink::Member.406", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.414", i16, i8, %"class.blink::Member.421", %"class.blink::Member.423", %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::TextLinkColors", %"class.blink::Member.429", i8, [7 x i8], %"class.blink::HeapHashMap.431", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.118", %"class.WTF::Vector.438", %"class.blink::Member.443", %"class.blink::Member.445", i8, %"class.blink::Member.118", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.447", %"class.blink::HeapVector.481", %"class.std::__1::unique_ptr.488", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.494", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.507", %"class.WTF::Vector.509", i8, i8, %"class.std::__1::unique_ptr.514", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.120", %"class.blink::HeapVector.520", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.528", i8, i32, %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::Member.534", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.536", %"class.WTF::HashMap.538", %"class.blink::Member.543", %"class.blink::Member.545", %"class.blink::Member.547", %"class.blink::Member.549", %"class.blink::Member.102", %"class.blink::Member.102", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.551", i8, i32, %"class.blink::Member.558", %"class.blink::Member.560", i32, %"class.blink::Member.562", %"class.blink::Member.564", %"class.blink::Member.566", %"class.std::__1::unique_ptr.568", i64, %"class.std::__1::unique_ptr.574", i32, i32, %"class.blink::Member.580", %"class.blink::Member.582", %"class.blink::Member.584", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.586", %"class.WTF::Vector.588", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.593", %"class.blink::Member.600", %"class.std::__1::unique_ptr.602", %"class.blink::Member.608", i8, i8, %"class.WTF::String", %"class.blink::Member.610", i8, [7 x i8], %"class.blink::HeapHashMap.612", %"class.blink::HeapObserverSet.619", %"class.blink::Member.627", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.629", i32, i8, i8, %"class.blink::WeakMember.631", %"class.blink::Member.632" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.147" }
%"class.blink::HeapHashMap.147" = type { %"class.WTF::HashMap.150" }
%"class.WTF::HashMap.150" = type { %"class.WTF::HashTable.151" }
%"class.WTF::HashTable.151" = type <{ %"struct.WTF::KeyValuePair.153"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.153" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.165" = type { %"class.blink::MemberBase.166" }
%"class.blink::MemberBase.166" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.167" = type { %"class.blink::MemberBase.168" }
%"class.blink::MemberBase.168" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.650", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.706", i32, i8, [3 x i8], %"class.blink::HeapVector.708", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.716", %"class.blink::Member", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.725", %"class.blink::Member.813", %"class.blink::Member.815", i8, [7 x i8] }>
%"class.blink::Supplementable.650" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.651" }
%"class.blink::HeapHashMap.651" = type { %"class.WTF::HashMap.654" }
%"class.WTF::HashMap.654" = type { %"class.WTF::HashTable.655" }
%"class.WTF::HashTable.655" = type <{ %"struct.WTF::KeyValuePair.657"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.657" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.658" }
%"class.blink::Supplementable.658" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.659" }
%"class.blink::HeapHashMap.659" = type { %"class.WTF::HashMap.662" }
%"class.WTF::HashMap.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"struct.WTF::KeyValuePair.665"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.665" = type { i8*, %"class.blink::Member.855" }
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.857" }
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.666, %"class.std::__1::unique_ptr.670", %"class.std::__1::unique_ptr.670", %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.700", %"class.blink::Member.167", i32, [4 x i8], %"class.WTF::HashSet", i32, i32 }
%class.scoped_refptr.666 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.667", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.669 }
%"class.WTF::RefCounted.667" = type { %"class.base::RefCounted.668" }
%"class.base::RefCounted.668" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.669 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.670" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.687", %"class.std::__1::map.696"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.679", %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"class.std::__1::map.687" = type { %"class.std::__1::__tree.688" }
%"class.std::__1::__tree.688" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.689", %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"class.std::__1::map.696" = type opaque
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.708" = type { %"class.WTF::Vector.711" }
%"class.WTF::Vector.711" = type { %"class.WTF::VectorBuffer.712" }
%"class.WTF::VectorBuffer.712" = type { %"class.WTF::VectorBufferBase.713" }
%"class.WTF::VectorBufferBase.713" = type { %"class.blink::Member.714"*, i32, i32 }
%"class.blink::Member.714" = type opaque
%"class.blink::Member.716" = type { %"class.blink::MemberBase.717" }
%"class.blink::MemberBase.717" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.718", i32, i32 }
%"class.blink::HeapHashMap.718" = type { %"class.WTF::HashMap.721" }
%"class.WTF::HashMap.721" = type { %"class.WTF::HashTable.722" }
%"class.WTF::HashTable.722" = type <{ %"struct.WTF::KeyValuePair.724"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.724" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.728", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.728" = type { %"class.std::__1::unique_ptr.729" }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.45" }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.804" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.735", i32 }>
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.738", %"class.absl::optional.739", %"class.absl::optional.744", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.757", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.779", %"class.std::__1::map.790", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.799", i8, %class.scoped_refptr.749, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.800" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.738" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.739" = type { %"class.absl::optional_internal::optional_data.740" }
%"class.absl::optional_internal::optional_data.740" = type { %"class.absl::optional_internal::optional_data_base.741" }
%"class.absl::optional_internal::optional_data_base.741" = type { %"class.absl::optional_internal::optional_data_dtor_base.742" }
%"class.absl::optional_internal::optional_data_dtor_base.742" = type { i8, %union.anon.743 }
%union.anon.743 = type { %"class.base::TimeDelta" }
%"class.absl::optional.744" = type { %"class.absl::optional_internal::optional_data.745" }
%"class.absl::optional_internal::optional_data.745" = type { %"class.absl::optional_internal::optional_data_base.746" }
%"class.absl::optional_internal::optional_data_base.746" = type { %"class.absl::optional_internal::optional_data_dtor_base.747" }
%"class.absl::optional_internal::optional_data_dtor_base.747" = type { i8, %union.anon.748 }
%union.anon.748 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.749, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.750" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.750" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.755 }
%class.scoped_refptr.755 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.817", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.749, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.817" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.756 }
%class.scoped_refptr.756 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.760", %class.scoped_refptr.761 }
%"class.base::RepeatingCallback.760" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.761 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.762", [4 x i8] }>
%"class.base::RefCountedThreadSafe.762" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.766", %"class.std::__1::unique_ptr.772", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.778" }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.778" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.779" = type { %"class.std::__1::__tree.780" }
%"class.std::__1::__tree.780" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.781", %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"class.std::__1::map.790" = type { %"class.std::__1::__tree.791" }
%"class.std::__1::__tree.791" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.792", %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"class.base::OnceCallback.799" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.749 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.800" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::Member.169" = type { %"class.blink::MemberBase.170" }
%"class.blink::MemberBase.170" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.171" = type { %"class.blink::MemberBase.172" }
%"class.blink::MemberBase.172" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.173" = type { %"class.blink::MemberBase.174" }
%"class.blink::MemberBase.174" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.175" = type { %"class.blink::MemberBase.176" }
%"class.blink::MemberBase.176" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.183" = type { %"class.blink::MemberBase.184" }
%"class.blink::MemberBase.184" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.185" = type { %"class.blink::MemberBase.186" }
%"class.blink::MemberBase.186" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.WTF::Vector.188" = type { %"class.WTF::VectorBuffer.189" }
%"class.WTF::VectorBuffer.189" = type { %"class.WTF::VectorBufferBase.190" }
%"class.WTF::VectorBufferBase.190" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.191 }
%class.scoped_refptr.191 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.192", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.192" = type { %"class.base::RefCounted.193" }
%"class.base::RefCounted.193" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.196" }
%"class.blink::HeapHashMap.196" = type { %"class.WTF::HashMap.199" }
%"class.WTF::HashMap.199" = type { %"class.WTF::HashTable.200" }
%"class.WTF::HashTable.200" = type <{ %"struct.WTF::KeyValuePair.202"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.202" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.399" }
%"class.blink::HeapHashMap.399" = type { %"class.WTF::HashMap.402" }
%"class.WTF::HashMap.402" = type { %"class.WTF::HashTable.403" }
%"class.WTF::HashTable.403" = type <{ %"struct.WTF::KeyValuePair.405"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.405" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.410" }
%"class.WTF::HashSet.410" = type { %"class.WTF::HashTable.411" }
%"class.WTF::HashTable.411" = type <{ %"class.blink::WeakMember.413"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.413" = type opaque
%"class.blink::HeapHashSet.414" = type { %"class.WTF::HashSet.417" }
%"class.WTF::HashSet.417" = type { %"class.WTF::HashTable.418" }
%"class.WTF::HashTable.418" = type <{ %"class.blink::WeakMember.420"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.420" = type opaque
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.431" = type { %"class.WTF::HashMap.434" }
%"class.WTF::HashMap.434" = type { %"class.WTF::HashTable.435" }
%"class.WTF::HashTable.435" = type <{ %"struct.WTF::KeyValuePair.437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.437" = type opaque
%"class.WTF::Vector.438" = type { %"class.WTF::VectorBuffer.439" }
%"class.WTF::VectorBuffer.439" = type { %"class.WTF::VectorBufferBase.440" }
%"class.WTF::VectorBufferBase.440" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type <{ %"class.blink::ExecutionContextLifecycleStateObserver.base", [4 x i8], %"class.blink::NameClient", %"class.blink::Member.102", %"class.blink::HeapDeque", %"class.blink::HeapHashSet.475", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %class.scoped_refptr.387, i32, i8, i8, [2 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::HeapHashSet.475" = type { %"class.WTF::HashSet.478" }
%"class.WTF::HashSet.478" = type { %"class.WTF::HashTable.479" }
%"class.WTF::HashTable.479" = type <{ %"class.blink::Member.466"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::PendingScript"* }
%"class.blink::PendingScript" = type <{ %"class.blink::NameClient", %"class.blink::Member.470", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.472", %"class.blink::WeakMember.396", %"class.blink::WeakMember.474", i8, [7 x i8] }>
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::PendingScriptClient"* }
%"class.blink::PendingScriptClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.396" = type { %"class.blink::MemberBase.103" }
%"class.blink::WeakMember.474" = type { %"class.blink::MemberBase.168" }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.462" }
%"class.WTF::Deque.462" = type { %"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"class.blink::Member.466"*, i32, i32 }
%"class.blink::HeapVector.481" = type { %"class.WTF::Vector.484" }
%"class.WTF::Vector.484" = type { %"class.WTF::VectorBuffer.485" }
%"class.WTF::VectorBuffer.485" = type { %"class.WTF::VectorBufferBase.486" }
%"class.WTF::VectorBufferBase.486" = type { %"class.blink::Member.470"*, i32, i32 }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.494" = type { %"class.WTF::HashSet.497" }
%"class.WTF::HashSet.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"class.blink::WeakMember.500"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.500" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.501", i32, [4 x i8] }>
%"class.WTF::Vector.501" = type { %"class.WTF::VectorBuffer.502" }
%"class.WTF::VectorBuffer.502" = type { %"class.WTF::VectorBufferBase.503" }
%"class.WTF::VectorBufferBase.503" = type { %"struct.std::__1::pair.504"*, i32, i32 }
%"struct.std::__1::pair.504" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.509" = type { %"class.WTF::VectorBuffer.510" }
%"class.WTF::VectorBuffer.510" = type { %"class.WTF::VectorBufferBase.511" }
%"class.WTF::VectorBufferBase.511" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.120" = type { %"class.WTF::Vector.123" }
%"class.WTF::Vector.123" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125" }
%"class.WTF::VectorBufferBase.125" = type { %"class.blink::Member.118"*, i32, i32 }
%"class.blink::HeapVector.520" = type { %"class.WTF::Vector.523" }
%"class.WTF::Vector.523" = type { %"class.WTF::VectorBuffer.524" }
%"class.WTF::VectorBuffer.524" = type { %"class.WTF::VectorBufferBase.525" }
%"class.WTF::VectorBufferBase.525" = type { %"class.blink::Member.526"*, i32, i32 }
%"class.blink::Member.526" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.102" }
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.396", { i64, i64 } }
%"class.blink::HeapHashSet.551" = type { %"class.WTF::HashSet.554" }
%"class.WTF::HashSet.554" = type { %"class.WTF::HashTable.555" }
%"class.WTF::HashTable.555" = type <{ %"class.blink::Member.557"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.557" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.588" = type { %"class.WTF::VectorBuffer.589" }
%"class.WTF::VectorBuffer.589" = type { %"class.WTF::VectorBufferBase.590" }
%"class.WTF::VectorBufferBase.590" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.593" = type { %"class.WTF::HashMap.596" }
%"class.WTF::HashMap.596" = type { %"class.WTF::HashTable.597" }
%"class.WTF::HashTable.597" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.612" = type { %"class.WTF::HashMap.615" }
%"class.WTF::HashMap.615" = type { %"class.WTF::HashTable.616" }
%"class.WTF::HashTable.616" = type <{ %"struct.WTF::KeyValuePair.618"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.618" = type opaque
%"class.blink::HeapObserverSet.619" = type { i32, [4 x i8], %"class.blink::HeapHashSet.620" }
%"class.blink::HeapHashSet.620" = type { %"class.WTF::HashSet.623" }
%"class.WTF::HashSet.623" = type { %"class.WTF::HashTable.624" }
%"class.WTF::HashTable.624" = type <{ %"class.blink::WeakMember.626"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.626" = type opaque
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.102", %"class.blink::HeapHashSet.636", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.643", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.636" = type { %"class.WTF::HashSet.639" }
%"class.WTF::HashSet.639" = type { %"class.WTF::HashTable.640" }
%"class.WTF::HashTable.640" = type <{ %"class.blink::Member.642"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.642" = type opaque
%"class.blink::HeapTaskRunnerTimer.643" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.644", { i64, i64 } }
%"class.blink::WeakMember.644" = type { %"class.blink::MemberBase.630" }
%"class.blink::WeakMember.631" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::Node"* }
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.110" }
%"class.WTF::HashMap.110" = type { %"class.WTF::HashTable.111" }
%"class.WTF::HashTable.111" = type <{ %"struct.WTF::KeyValuePair.113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.113" = type { %"class.WTF::AtomicString", %"class.blink::Member.114" }
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.118", i32, %"class.blink::HeapVector.120" }
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.133" }
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::HeapHashMap.135"* }
%"class.blink::HeapHashMap.135" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.138" = type { %"class.WTF::Vector.141" }
%"class.WTF::Vector.141" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"class.blink::Member.144"*, i32, i32 }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.88", %"class.blink::Member.90", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.88" = type { %"class.WTF::SingleThreadedBitField.89" }
%"class.WTF::SingleThreadedBitField.89" = type { i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.93", %"class.WTF::AtomicString", %"class.WTF::Vector.95" }
%"class.WTF::RefCounted.93" = type { %"class.base::RefCounted.94" }
%"class.base::RefCounted.94" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97", [32 x i8] }
%"class.WTF::VectorBufferBase.97" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.990 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1005" }
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1101" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1009, %"class.std::__1::unique_ptr.735", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.749, i32 }>
%class.scoped_refptr.1009 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.749, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1067", %"class.absl::optional.1072", %"class.absl::optional.1026", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1092", i8, [7 x i8], %class.scoped_refptr.749, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.762" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.749, %"class.std::__1::unique_ptr.1010", %"class.absl::optional.1020", %"struct.std::__1::atomic.381", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1026", %"class.std::__1::unique_ptr.1031", i8, i64, %class.scoped_refptr.1064, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1066" }
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.749, i8, %"class.mojo::ScopedHandleBase.1013", %class.scoped_refptr.1014, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1015", i8*, %"class.base::WeakPtrFactory.1016" }
%"class.mojo::ScopedHandleBase.1013" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1014 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1015" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1016" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1020" = type { %"class.absl::optional_internal::optional_data.1021" }
%"class.absl::optional_internal::optional_data.1021" = type { %"class.absl::optional_internal::optional_data_base.1022" }
%"class.absl::optional_internal::optional_data_base.1022" = type { %"class.absl::optional_internal::optional_data_dtor_base.1023" }
%"class.absl::optional_internal::optional_data_dtor_base.1023" = type { i8, %union.anon.1024 }
%union.anon.1024 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1025", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1025" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1034", i8, i64, %class.scoped_refptr.1035, %class.scoped_refptr.1060 }
%"class.base::RepeatingCallback.1034" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1035 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1036", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1038", %"class.std::__1::map.1049", i8, [7 x i8] }>
%"class.base::RefCounted.1036" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1037 }
%class.scoped_refptr.1037 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1038" = type { %"class.std::__1::__tree.1039" }
%"class.std::__1::__tree.1039" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1040", %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"class.std::__1::map.1049" = type { %"class.std::__1::__tree.1050" }
%"class.std::__1::__tree.1050" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1051", %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%class.scoped_refptr.1060 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.1064 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1065 }
%class.scoped_refptr.1065 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.1066" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1067" = type { %"class.absl::optional_internal::optional_data.1068" }
%"class.absl::optional_internal::optional_data.1068" = type { %"class.absl::optional_internal::optional_data_base.1069" }
%"class.absl::optional_internal::optional_data_base.1069" = type { %"class.absl::optional_internal::optional_data_dtor_base.1070" }
%"class.absl::optional_internal::optional_data_dtor_base.1070" = type { i8, %union.anon.1071 }
%union.anon.1071 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1072" = type { %"class.absl::optional_internal::optional_data.1073" }
%"class.absl::optional_internal::optional_data.1073" = type { %"class.absl::optional_internal::optional_data_base.1074" }
%"class.absl::optional_internal::optional_data_base.1074" = type { %"class.absl::optional_internal::optional_data_dtor_base.1075" }
%"class.absl::optional_internal::optional_data_dtor_base.1075" = type { i8, [7 x i8], %union.anon.1076 }
%union.anon.1076 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1026" = type { %"class.absl::optional_internal::optional_data.1027" }
%"class.absl::optional_internal::optional_data.1027" = type { %"class.absl::optional_internal::optional_data_base.1028" }
%"class.absl::optional_internal::optional_data_base.1028" = type { %"class.absl::optional_internal::optional_data_dtor_base.1029" }
%"class.absl::optional_internal::optional_data_dtor_base.1029" = type { i8, %union.anon.1030 }
%union.anon.1030 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1077 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1077 = type { %"class.std::__1::map.1080" }
%"class.std::__1::map.1080" = type { %"class.std::__1::__tree.1081" }
%"class.std::__1::__tree.1081" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1082", %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1091"*, i64 }
%"class.std::__1::unique_ptr.1091" = type opaque
%"class.std::__1::map.1092" = type { %"class.std::__1::__tree.1093" }
%"class.std::__1::__tree.1093" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1094", %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1113" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.910" = type { %"class.absl::optional_internal::optional_data.911" }
%"class.absl::optional_internal::optional_data.911" = type { %"class.absl::optional_internal::optional_data_base.912" }
%"class.absl::optional_internal::optional_data_base.912" = type { %"class.absl::optional_internal::optional_data_dtor_base.913" }
%"class.absl::optional_internal::optional_data_dtor_base.913" = type { i8, %union.anon.914 }
%union.anon.914 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1126" }
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1130" }
%"class.mojo::AssociatedRemote.1130" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1131" }
%"class.mojo::internal::AssociatedInterfacePtrState.1131" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1132" }
%"class.std::__1::unique_ptr.1132" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1138" = type { %"class.blink::Member.1139" }
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1143" }
%"class.mojo::AssociatedRemote.1143" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1144" }
%"class.mojo::internal::AssociatedInterfacePtrState.1144" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1145" }
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1151" }
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.894", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1155" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.735" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1155" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1156" = type { %"class.blink::Member.1157" }
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1161", %"class.blink::Member.894", %"class.mojo::AssociatedReceiver.1162" }
%"class.blink::ThreadState::PrefinalizerRegistration.1161" = type { i8 }
%"class.mojo::AssociatedReceiver.1162" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1163" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1163" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1164" }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1168", %"class.blink::Member.894", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1168" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1009, %"class.std::__1::unique_ptr.735", %"class.base::WeakPtrFactory.1169" }
%"class.base::WeakPtrFactory.1169" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1170" = type { %"class.blink::Member.1171" }
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1175", %"class.blink::Member.894", %"class.mojo::AssociatedReceiver.1176" }
%"class.blink::ThreadState::PrefinalizerRegistration.1175" = type { i8 }
%"class.mojo::AssociatedReceiver.1176" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1177" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1177" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1185" }
%"class.blink::MemberBase.1185" = type { %"class.blink::HeapHashMap.1186"* }
%"class.blink::HeapHashMap.1186" = type opaque
%"class.mojo::StructPtr.1187" = type { %"class.std::__1::unique_ptr.1188" }
%"class.std::__1::unique_ptr.1188" = type { %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1191", %"class.mojo::InlinedStructPtr.1192" }
%"class.mojo::InlinedStructPtr.1191" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1192" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1198" = type { %"class.absl::optional_internal::optional_data.1199" }
%"class.absl::optional_internal::optional_data.1199" = type { %"class.absl::optional_internal::optional_data_base.1200" }
%"class.absl::optional_internal::optional_data_base.1200" = type { %"class.absl::optional_internal::optional_data_dtor_base.1201" }
%"class.absl::optional_internal::optional_data_dtor_base.1201" = type { i8, %union.anon.1202 }
%union.anon.1202 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.875" = type { %"class.WTF::VectorBuffer.876" }
%"class.WTF::VectorBuffer.876" = type { %"class.WTF::VectorBufferBase.877" }
%"class.WTF::StringAppend.1497" = type { %"class.WTF::StringAppend.1495", %"class.WTF::String" }
%"class.WTF::StringAppend.1495" = type { %"class.WTF::String", i8* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.849", i8* }
%"class.WTF::StringAppend.1496" = type { %"class.WTF::StringAppend.1497", i8* }
%"class.WTF::StringAppend.1498" = type { %"class.WTF::StringAppend.1499", i8* }
%"class.WTF::StringAppend.1499" = type { %"class.WTF::StringAppend.1496", %"class.WTF::String" }
%"class.WTF::Vector.1491" = type { %"class.WTF::VectorBuffer.1492" }
%"class.WTF::VectorBuffer.1492" = type { %"class.WTF::VectorBufferBase.27", [64 x i8] }
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.blink::ScriptLoader" = type { %"class.blink::PendingScriptClient", %"class.blink::NameClient", %"class.blink::Member.470", i8, %"class.blink::WeakMember.396", i8, i8, i8, i8, i32, i8, i8, i8, %"class.blink::Member.466", %"class.blink::Member.466", %"class.blink::Member.847" }
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type opaque
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1504, i32, i8, i8, [2 x i8] }>
%union.anon.1504 = type { %"class.WTF::Vector.1505" }
%"class.WTF::Vector.1505" = type { %"class.WTF::VectorBuffer.1506" }
%"class.WTF::VectorBuffer.1506" = type { %"class.WTF::VectorBufferBase.27", [16 x i8] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::HashSet.850" = type { %"class.WTF::HashTable.851" }
%"class.WTF::HashTable.851" = type <{ %"struct.std::__1::pair.854"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.854" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.WTF::StringAppend.1536" = type { %"class.WTF::StringAppend.1537", %"class.WTF::String" }
%"class.WTF::StringAppend.1537" = type { %"class.WTF::StringAppend.1538", i8* }
%"class.WTF::StringAppend.1538" = type { %"class.WTF::StringAppend.1539", %"class.WTF::String" }
%"class.WTF::StringAppend.1539" = type { %"class.WTF::StringAppend.1540", i8* }
%"class.WTF::StringAppend.1540" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::StringAppend.1535" = type { %"class.WTF::StringAppend.1536", i8* }
%"class.WTF::Vector.1526" = type { %"class.WTF::VectorBuffer.1527" }
%"class.WTF::VectorBuffer.1527" = type { %"class.WTF::VectorBufferBase.1528" }
%"class.WTF::VectorBufferBase.1528" = type { i8*, i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringTypeAdapter.1474" = type { %"class.WTF::StringTypeAdapter.1475" }
%"class.WTF::StringTypeAdapter.1475" = type { %"class.WTF::StringView" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringEPKcEES2_EES4_EES2_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S2_EENS1_INS1_IT_T0_EET1_EERKS9_SA_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EC2ES7_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EC2ES6_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPDs = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_6StringENS_7IntHashIS3_EENS_10HashTraitsIS3_EENS7_IS4_EENS_18PartitionAllocatorEE2atERKS3_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS3_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRcEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringES2_EEPKcEES2_EES5_S2_EENS1_INS1_IT_T0_EET1_EERKSA_SB_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS_6StringES2_EEPKcEES2_S5_EENS1_INS1_IT_T0_EET1_EERKS9_SA_ = comdat any

$_ZN3WTFplINS_12StringAppendINS_6StringES2_EEPKcS2_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_EcvS1_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_ED2Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EC2ES7_S1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EC2ES6_S4_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS_6StringES1_EEPKcEES1_EC2ES5_S1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringES1_EEPKcEC2ES2_S4_ = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [11 x i8] c"sha256-...\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"run the JavaScript URL\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"execute inline event handler\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"execute inline script\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"apply inline style\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"Refused to \00", align 1
@.str.6 = private unnamed_addr constant [71 x i8] c" because it violates the following Content Security Policy directive: \00", align 1
@.str.7 = private unnamed_addr constant [153 x i8] c"Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: \00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"neither 'wasm-eval' nor 'unsafe-eval' is\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"'unsafe-eval' is not\00", align 1
@.str.10 = private unnamed_addr constant [62 x i8] c"Refused to compile or instantiate WebAssembly module because \00", align 1
@.str.11 = private unnamed_addr constant [82 x i8] c" an allowed source of script in the following Content Security Policy directive: \00", align 1
@.str.12 = private unnamed_addr constant [154 x i8] c"Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: \22\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"\22.\0A\00", align 1
@.str.14 = private unnamed_addr constant [101 x i8] c"Refused to evaluate a string as JavaScript because this document requires 'Trusted Type' assignment.\00", align 1
@.str.15 = private unnamed_addr constant [173 x i8] c"Refused to create a TrustedTypePolicy named '%s' because a policy with that name already exists and the Content Security Policy directive does not 'allow-duplicates': \22%s\22.\00", align 1
@.str.16 = private unnamed_addr constant [124 x i8] c"Refused to create a TrustedTypePolicy named '%s' because it violates the following Content Security Policy directive: \22%s\22.\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"trusted-types\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"[Report Only] \00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.19 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.20 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.23 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.24 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.25 = private unnamed_addr constant [8 x i8] c"sha256-\00", align 1
@.str.26 = private unnamed_addr constant [101 x i8] c" Note that 'unsafe-inline' is ignored if either a hash or nonce value is present in the source list.\00", align 1
@.str.27 = private unnamed_addr constant [47 x i8] c" Either the 'unsafe-inline' keyword, a hash ('\00", align 1
@.str.28 = private unnamed_addr constant [69 x i8] c"'), or a nonce ('nonce-...') is required to enable inline execution.\00", align 1
@.str.29 = private unnamed_addr constant [142 x i8] c" Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present.\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c" Note also that '\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str.33 = private unnamed_addr constant [70 x i8] c"-src' was not explicitly set, so 'default-src' is used as a fallback.\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"\22.\00", align 1
@.str.36 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.37 = private unnamed_addr constant [88 x i8] c" Note that 'script-src' was not explicitly set, so 'default-src' is used as a fallback.\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase28is_web_assembly_csp_enabled_E = external local_unnamed_addr global i8, align 1
@.str.38 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.39 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.40 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, WTF::String>]\00", align 1
@.str.41 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"about\00", align 1
@.str.45 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.46 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.47 = private unnamed_addr constant [33 x i8] c"set the document's base URI to '\00", align 1
@.str.48 = private unnamed_addr constant [23 x i8] c"create a worker from '\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"connect to '\00", align 1
@.str.50 = private unnamed_addr constant [16 x i8] c"load the font '\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"send form data to '\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"frame '\00", align 1
@.str.53 = private unnamed_addr constant [17 x i8] c"load the image '\00", align 1
@.str.54 = private unnamed_addr constant [18 x i8] c"load media from '\00", align 1
@.str.55 = private unnamed_addr constant [21 x i8] c"load manifest from '\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"load plugin data from '\00", align 1
@.str.57 = private unnamed_addr constant [24 x i8] c"prefetch content from '\00", align 1
@.str.58 = private unnamed_addr constant [18 x i8] c"load the script '\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"load the stylesheet '\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"navigate to '\00", align 1
@.str.61 = private unnamed_addr constant [70 x i8] c" 'strict-dynamic' is present, so host-based allowlisting is disabled.\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c" Note that '\00", align 1
@.str.63 = private unnamed_addr constant [31 x i8] c"' was not explicitly set, so '\00", align 1
@.str.64 = private unnamed_addr constant [25 x i8] c"' is used as a fallback.\00", align 1
@.str.65 = private unnamed_addr constant [73 x i8] c"' because it violates the following Content Security Policy directive: \22\00", align 1
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@switch.table._ZN5blink27CSPDirectiveListAllowInlineERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyENS6_10InlineTypeEPNS_7ElementERKN3WTF6StringESE_SE_RKNSB_13OrdinalNumberENS_20ReportingDispositionE = private unnamed_addr constant [5 x i32] [i32 22, i32 22, i32 21, i32 25, i32 24], align 4
@switch.table._ZN5blink31CSPDirectiveListAllowFromSourceERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyENS1_16CSPDirectiveNameERKNS_4KURLESB_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionERKN3WTF6StringERKNSF_7HashSetINSt3__14pairISG_NS_18IntegrityAlgorithmEEENSF_8PairHashISG_SM_EENSF_10HashTraitsISN_EENSF_18PartitionAllocatorEEENS_17ParserDispositionE = private unnamed_addr constant [3 x i32] [i32 1, i32 2, i32 4], align 4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink28CSPDirectiveListIsReportOnlyERKN7network5mojom5blink21ContentSecurityPolicyE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture readonly dereferenceable(144)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink49CSPDirectiveListAllowTrustedTypeAssignmentFailureERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyERKN3WTF6StringESB_SB_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144), %"class.blink::ContentSecurityPolicy"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 10
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %40

11:                                               ; preds = %5
  %12 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = tail call i8* @_ZN5blink21ContentSecurityPolicy16GetDirectiveNameEN7network5mojom16CSPDirectiveNameE(i32 18) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = tail call i64 @strlen(i8* nonnull %13) #13
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi i64 [ %16, %15 ], [ 0, %11 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %13, i64 %18) #12
  %19 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %19) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %7) #12
  call fastcc void @_ZN5blink12_GLOBAL__N_115ReportViolationERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyERKN3WTF6StringENS2_16CSPDirectiveNameESC_RKNS_4KURLENS_19ResourceRequestHead14RedirectStatusENS7_34ContentSecurityPolicyViolationTypeESC_SC_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, %"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, i32 18, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::KURL"* nonnull dereferenceable(112) %7, i8 zeroext 1, i32 3, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %36

36:                                               ; preds = %17, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %37 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br label %40

40:                                               ; preds = %5, %36
  %41 = phi i1 [ %39, %36 ], [ true, %5 ]
  ret i1 %41
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink36CSPDirectiveListRequiresTrustedTypesERKN7network5mojom5blink21ContentSecurityPolicyE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture readonly dereferenceable(144)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_115ReportViolationERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyERKN3WTF6StringENS2_16CSPDirectiveNameESC_RKNS_4KURLENS_19ResourceRequestHead14RedirectStatusENS7_34ContentSecurityPolicyViolationTypeESC_SC_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144), %"class.blink::ContentSecurityPolicy"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i8 zeroext, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1 {
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend.849", align 8
  %13 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %86

18:                                               ; preds = %10
  %19 = bitcast %"class.WTF::StringAppend.849"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %66, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %40

30:                                               ; preds = %23
  %31 = zext i32 %29 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #12
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %30
  tail call void @llvm.trap() #12
  unreachable

38:                                               ; preds = %30
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %28, align 4
  br label %40

40:                                               ; preds = %38, %23
  %41 = phi i32 [ %39, %38 ], [ %29, %23 ]
  %42 = load atomic i32, i32* %24 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %55

45:                                               ; preds = %40
  %46 = zext i32 %41 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %45
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %45
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %28, align 4
  br label %55

55:                                               ; preds = %53, %40
  %56 = phi i32 [ %54, %53 ], [ %41, %40 ]
  %57 = load atomic i32, i32* %24 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = add i32 %56, -1
  store i32 %61, i32* %28, align 4
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i32 [ %61, %60 ], [ %56, %55 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %66

66:                                               ; preds = %18, %62, %65
  %67 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %12, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %12, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %68, align 8
  %69 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.849"* nonnull %12)
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %14, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #12
  br label %85

85:                                               ; preds = %66, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  br label %107

86:                                               ; preds = %10
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %14, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %107, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %107

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i33
  %99 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #12
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !2

104:                                              ; preds = %95
  tail call void @llvm.trap() #12
  unreachable

105:                                              ; preds = %95
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %96, align 4
  br label %107

107:                                              ; preds = %105, %90, %86, %85
  %108 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #12
  %109 = bitcast i8* %108 to %"class.blink::ConsoleMessage"*
  %110 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #12
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %109, i32 7, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::SourceLocation"* %110) #12
  %111 = getelementptr inbounds i8, i8* %108, i64 -4
  %112 = bitcast i8* %111 to i16*
  %113 = load atomic i16, i16* %112 monotonic, align 2
  %114 = or i16 %113, 1
  store atomic i16 %114, i16* %112 release, align 2
  call void @_ZN5blink21ContentSecurityPolicy12LogToConsoleEPNS_14ConsoleMessageEPNS_10LocalFrameE(%"class.blink::ContentSecurityPolicy"* %1, %"class.blink::ConsoleMessage"* %109, %"class.blink::LocalFrame"* null) #12
  %115 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 9
  %116 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 8
  %117 = load i8, i8* %116, align 8, !range !3
  %118 = icmp ne i8 %117, 0
  %119 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 0
  %120 = load i32, i32* %15, align 8
  call void @_ZN5blink21ContentSecurityPolicy15ReportViolationERKN3WTF6StringEN7network5mojom16CSPDirectiveNameES4_RKNS_4KURLERKNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEEbS4_NS6_25ContentSecurityPolicyTypeENS0_34ContentSecurityPolicyViolationTypeENSt3__110unique_ptrINS_14SourceLocationENSI_14default_deleteISK_EEEEPNS_10LocalFrameENS_19ResourceRequestHead14RedirectStatusEPNS_7ElementES4_S4_(%"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 %3, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::KURL"* dereferenceable(112) %5, %"class.WTF::Vector.13"* dereferenceable(16) %115, i1 zeroext %118, %"class.WTF::String"* dereferenceable(8) %119, i32 %120, i32 %7, i64 0, %"class.blink::LocalFrame"* null, i8 zeroext %6, %"class.blink::Element"* null, %"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %9) #12
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %107
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #12
  br label %136

136:                                              ; preds = %107, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @_ZN5blink21ContentSecurityPolicy16GetDirectiveNameEN7network5mojom16CSPDirectiveNameE(i32) local_unnamed_addr #3

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27CSPDirectiveListAllowInlineERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyENS6_10InlineTypeEPNS_7ElementERKN3WTF6StringESE_SE_RKNSB_13OrdinalNumberENS_20ReportingDispositionE(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144), %"class.blink::ContentSecurityPolicy"*, i32, %"class.blink::Element"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::OrdinalNumber"* nocapture readonly dereferenceable(4), i32) local_unnamed_addr #1 {
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend.849", align 8
  %12 = alloca %"class.WTF::StringAppend.1497", align 8
  %13 = alloca %"class.WTF::StringAppend.1497", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::StringAppend", align 8
  %16 = alloca %"class.WTF::StringAppend.1495", align 8
  %17 = alloca %"class.WTF::StringAppend.1496", align 8
  %18 = alloca %"class.WTF::StringAppend.1497", align 8
  %19 = alloca %"class.WTF::StringAppend.1495", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::HashMap", align 8
  %23 = alloca %"class.WTF::StringAppend.1498", align 8
  %24 = alloca %"class.WTF::StringAppend.1499", align 8
  %25 = alloca %"class.WTF::StringAppend.1496", align 8
  %26 = alloca %"class.WTF::StringAppend.1497", align 8
  %27 = alloca %"class.WTF::StringAppend.1495", align 8
  %28 = alloca %"class.blink::KURL", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.WTF::Vector.1491", align 8
  %31 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %32 = alloca %"class.WTF::StringAppend.849", align 8
  %33 = alloca %"class.WTF::String", align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %"class.WTF::String", align 8
  %37 = alloca %"class.WTF::String", align 8
  %38 = alloca %"class.WTF::StringAppend", align 8
  %39 = sext i32 %2 to i64
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN5blink27CSPDirectiveListAllowInlineERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyENS6_10InlineTypeEPNS_7ElementERKN3WTF6StringESE_SE_RKNSB_13OrdinalNumberENS_20ReportingDispositionE, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 %41, i32 0)
  %43 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %42, 0
  %44 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %42, 1
  %45 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %9
  %47 = tail call zeroext i1 @_ZN5blink23CSPSourceListAllowNonceERKN7network5mojom5blink13CSPSourceListERKN3WTF6StringE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %44, %"class.WTF::String"* dereferenceable(8) %5) #12
  br i1 %47, label %1430, label %48

48:                                               ; preds = %9, %46
  %49 = icmp eq %"class.blink::Element"* %3, null
  br i1 %49, label %88, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 48
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %88

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0
  %57 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE, align 8
  %58 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 1, i32 2
  %61 = bitcast %"class.blink::Member.75"* %60 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  %68 = icmp eq i32 %2, 1
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %88

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 1, i32 0, i32 0, i32 2
  %72 = bitcast %"class.blink::Member.75"* %71 to %"class.blink::ScriptLoader"**
  %73 = load %"class.blink::ScriptLoader"*, %"class.blink::ScriptLoader"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %73, i64 0, i32 5
  %75 = load i8, i8* %74, align 8, !range !3
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %88

77:                                               ; preds = %70
  %78 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 %41, i32 0) #12
  %79 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %78, 1
  %80 = add nsw i32 %41, -21
  %81 = icmp ult i32 %80, 2
  br i1 %81, label %82, label %88

82:                                               ; preds = %77
  %83 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %79, null
  br i1 %83, label %1430, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %79, i64 0, i32 9
  %86 = load i8, i8* %85, align 2, !range !3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %1430

88:                                               ; preds = %84, %70, %77, %48, %50, %55
  %89 = icmp eq i32 %8, 1
  br i1 %89, label %90, label %1427

90:                                               ; preds = %88
  switch i32 %2, label %207 [
    i32 0, label %91
    i32 2, label %91
    i32 1, label %95
    i32 4, label %95
    i32 3, label %95
  ]

91:                                               ; preds = %90, %90
  %92 = bitcast %"class.WTF::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10) #12
  %93 = bitcast %"class.WTF::String"* %33 to i64*
  %94 = load i64, i64* %93, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #12
  br label %207

95:                                               ; preds = %90, %90, %90
  %96 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96)
  %97 = bitcast %"class.WTF::Vector.1491"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %97) #12
  %98 = getelementptr inbounds %"class.WTF::Vector.1491", %"class.WTF::Vector.1491"* %30, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 64, i1 false) #12
  %99 = getelementptr inbounds %"class.WTF::Vector.1491", %"class.WTF::Vector.1491"* %30, i64 0, i32 0, i32 0, i32 0
  store i8* %98, i8** %99, align 8
  %100 = getelementptr inbounds %"class.WTF::Vector.1491", %"class.WTF::Vector.1491"* %30, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %100, align 8
  %101 = getelementptr inbounds %"class.WTF::Vector.1491", %"class.WTF::Vector.1491"* %30, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %101, align 4
  %102 = bitcast %"class.WTF::StringUTF8Adaptor"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %102) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -86, i64 40, i1 false) #12
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %31, %"class.WTF::String"* dereferenceable(8) %4, i32 0) #12
  %103 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %31, i64 0, i32 1
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %31, i64 0, i32 2
  %106 = load i32, i32* %105, align 8
  %107 = zext i32 %106 to i64
  %108 = call zeroext i1 @_ZN5blink13ComputeDigestENS_13HashAlgorithmEPKcmRN3WTF6VectorIhLj64ENS3_18PartitionAllocatorEEE(i32 1, i8* %104, i64 %107, %"class.WTF::Vector.1491"* nonnull dereferenceable(80) %30) #12
  br i1 %108, label %110, label %109

109:                                              ; preds = %95
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %29, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10) #12
  br label %195

110:                                              ; preds = %95
  %111 = bitcast %"class.WTF::StringAppend.849"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #12
  %112 = load i8*, i8** %99, align 8
  %113 = load i32, i32* %101, align 4
  %114 = zext i32 %113 to i64
  %115 = call %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64 %114, i8* %112, i32 0) #12
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %160, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %134

124:                                              ; preds = %117
  %125 = zext i32 %123 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #12
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !2

131:                                              ; preds = %124
  call void @llvm.trap() #12
  unreachable

132:                                              ; preds = %124
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %122, align 4
  br label %134

134:                                              ; preds = %132, %117
  %135 = phi i32 [ %133, %132 ], [ %123, %117 ]
  %136 = load atomic i32, i32* %118 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %149

139:                                              ; preds = %134
  %140 = zext i32 %135 to i33
  %141 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #12
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !2

146:                                              ; preds = %139
  call void @llvm.trap() #12
  unreachable

147:                                              ; preds = %139
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %122, align 4
  br label %149

149:                                              ; preds = %147, %134
  %150 = phi i32 [ %148, %147 ], [ %135, %134 ]
  %151 = load atomic i32, i32* %118 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %156

154:                                              ; preds = %149
  %155 = add i32 %150, -1
  store i32 %155, i32* %122, align 4
  br label %156

156:                                              ; preds = %154, %149
  %157 = phi i32 [ %155, %154 ], [ %150, %149 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #12
  br label %160

160:                                              ; preds = %159, %156, %110
  %161 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %32, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8** %161, align 8
  %162 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %32, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %162, align 8
  %163 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.849"* nonnull %32) #12
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %164, align 8
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #12
  br label %180

180:                                              ; preds = %179, %176, %160
  br i1 %116, label %194, label %181

181:                                              ; preds = %180
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #12
  br label %194

194:                                              ; preds = %193, %190, %180
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #12
  br label %195

195:                                              ; preds = %194, %109
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #12
  %196 = load i32, i32* %101, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %199, label %198, !prof !2

198:                                              ; preds = %195
  store i32 0, i32* %101, align 4
  br label %199

199:                                              ; preds = %198, %195
  %200 = load i8*, i8** %99, align 8
  %201 = icmp eq i8* %98, %200
  br i1 %201, label %204, label %202, !prof !4

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.WTF::Vector.1491", %"class.WTF::Vector.1491"* %30, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1492"* nonnull %203, i8* %200) #12
  br label %204

204:                                              ; preds = %199, %202
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %97) #12
  %205 = bitcast %"class.WTF::String"* %29 to i64*
  %206 = load i64, i64* %205, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96)
  br label %207

207:                                              ; preds = %90, %204, %91
  %208 = phi i64 [ 0, %90 ], [ %206, %204 ], [ %94, %91 ]
  switch i32 %2, label %209 [
    i32 0, label %211
    i32 2, label %213
    i32 1, label %215
    i32 4, label %217
    i32 3, label %217
  ]

209:                                              ; preds = %207
  %210 = bitcast %"class.WTF::StringAppend"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %210) #12
  br label %302

211:                                              ; preds = %207
  %212 = bitcast %"class.WTF::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %34, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i64 22) #12
  br label %219

213:                                              ; preds = %207
  %214 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %35, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i64 28) #12
  br label %219

215:                                              ; preds = %207
  %216 = bitcast %"class.WTF::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %36, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i64 21) #12
  br label %219

217:                                              ; preds = %207, %207
  %218 = bitcast %"class.WTF::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %37, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 18) #12
  br label %219

219:                                              ; preds = %217, %215, %213, %211
  %220 = phi %"class.WTF::String"* [ %37, %217 ], [ %36, %215 ], [ %35, %213 ], [ %34, %211 ]
  %221 = phi i8* [ %218, %217 ], [ %216, %215 ], [ %214, %213 ], [ %212, %211 ]
  %222 = bitcast %"class.WTF::String"* %220 to i64*
  %223 = load i64, i64* %222, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221) #12
  %224 = bitcast %"class.WTF::StringAppend"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #12
  %225 = inttoptr i64 %223 to %"class.WTF::StringImpl"*
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %302, label %227

227:                                              ; preds = %219
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %244

234:                                              ; preds = %227
  %235 = zext i32 %233 to i33
  %236 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %235, i33 1) #12
  %237 = extractvalue { i33, i1 } %236, 1
  %238 = extractvalue { i33, i1 } %236, 0
  %239 = icmp slt i33 %238, 0
  %240 = or i1 %237, %239
  br i1 %240, label %241, label %242, !prof !2

241:                                              ; preds = %234
  call void @llvm.trap() #12
  unreachable

242:                                              ; preds = %234
  %243 = trunc i33 %238 to i32
  store i32 %243, i32* %232, align 4
  br label %244

244:                                              ; preds = %242, %227
  %245 = phi i32 [ %243, %242 ], [ %233, %227 ]
  %246 = load atomic i32, i32* %228 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %259

249:                                              ; preds = %244
  %250 = zext i32 %245 to i33
  %251 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %250, i33 1) #12
  %252 = extractvalue { i33, i1 } %251, 1
  %253 = extractvalue { i33, i1 } %251, 0
  %254 = icmp slt i33 %253, 0
  %255 = or i1 %252, %254
  br i1 %255, label %256, label %257, !prof !2

256:                                              ; preds = %249
  call void @llvm.trap() #12
  unreachable

257:                                              ; preds = %249
  %258 = trunc i33 %253 to i32
  store i32 %258, i32* %232, align 4
  br label %259

259:                                              ; preds = %257, %244
  %260 = phi i32 [ %258, %257 ], [ %245, %244 ]
  %261 = load atomic i32, i32* %228 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %259
  %265 = add i32 %260, -1
  store i32 %265, i32* %232, align 4
  br label %266

266:                                              ; preds = %264, %259
  %267 = phi i32 [ %265, %264 ], [ %260, %259 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #12
  br label %270

270:                                              ; preds = %269, %266
  %271 = load atomic i32, i32* %228 monotonic, align 4, !noalias !5
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = load i32, i32* %232, align 4
  br i1 %273, label %275, label %285

275:                                              ; preds = %270
  %276 = zext i32 %274 to i33
  %277 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %276, i33 1) #12
  %278 = extractvalue { i33, i1 } %277, 1
  %279 = extractvalue { i33, i1 } %277, 0
  %280 = icmp slt i33 %279, 0
  %281 = or i1 %278, %280
  br i1 %281, label %282, label %283, !prof !2

282:                                              ; preds = %275
  call void @llvm.trap() #12, !noalias !5
  unreachable

283:                                              ; preds = %275
  %284 = trunc i33 %279 to i32
  store i32 %284, i32* %232, align 4, !noalias !5
  br label %285

285:                                              ; preds = %270, %283
  %286 = phi i32 [ %284, %283 ], [ %274, %270 ]
  %287 = bitcast %"class.WTF::StringAppend"* %38 to i64*
  store i64 ptrtoint ([12 x i8]* @.str.5 to i64), i64* %287, align 8, !alias.scope !5
  %288 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %225, %"class.WTF::StringImpl"** %288, align 8, !alias.scope !5
  %289 = load atomic i32, i32* %228 monotonic, align 4, !noalias !5
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %307

292:                                              ; preds = %285
  %293 = zext i32 %286 to i33
  %294 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %293, i33 1) #12
  %295 = extractvalue { i33, i1 } %294, 1
  %296 = extractvalue { i33, i1 } %294, 0
  %297 = icmp slt i33 %296, 0
  %298 = or i1 %295, %297
  br i1 %298, label %299, label %300, !prof !2

299:                                              ; preds = %292
  call void @llvm.trap() #12, !noalias !5
  unreachable

300:                                              ; preds = %292
  %301 = trunc i33 %296 to i32
  store i32 %301, i32* %232, align 4, !noalias !5
  br label %307

302:                                              ; preds = %209, %219
  %303 = phi i8* [ %224, %219 ], [ %210, %209 ]
  %304 = bitcast %"class.WTF::StringAppend"* %38 to i64*
  store i64 ptrtoint ([12 x i8]* @.str.5 to i64), i64* %304, align 8, !alias.scope !5
  %305 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %305, align 8, !alias.scope !5
  %306 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0), i8** %306, align 8, !alias.scope !5
  br label %319

307:                                              ; preds = %300, %285
  %308 = phi i32 [ %301, %300 ], [ %286, %285 ]
  %309 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0), i8** %309, align 8, !alias.scope !5
  %310 = load atomic i32, i32* %228 monotonic, align 4, !noalias !5
  %311 = and i32 %310, 2
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %315

313:                                              ; preds = %307
  %314 = add i32 %308, -1
  store i32 %314, i32* %232, align 4, !noalias !5
  br label %315

315:                                              ; preds = %313, %307
  %316 = phi i32 [ %314, %313 ], [ %308, %307 ]
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %315
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #12, !noalias !5
  br label %319

319:                                              ; preds = %302, %315, %318
  %320 = phi i8* [ %303, %302 ], [ %224, %315 ], [ %224, %318 ]
  %321 = phi %"class.WTF::StringImpl"* [ null, %302 ], [ %225, %315 ], [ %225, %318 ]
  %322 = phi i1 [ true, %302 ], [ false, %315 ], [ false, %318 ]
  %323 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %38)
  %324 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %324)
  %325 = bitcast %"class.WTF::HashMap"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %325)
  br i1 %45, label %1352, label %326

326:                                              ; preds = %319
  %327 = call zeroext i1 @_ZN5blink27CSPSourceListAllowAllInlineEN7network5mojom16CSPDirectiveNameERKNS1_5blink13CSPSourceListE(i32 %43, %"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %44) #12
  br i1 %327, label %1352, label %328

328:                                              ; preds = %326
  %329 = call zeroext i1 @_ZN5blink21ContentSecurityPolicy18IsScriptInlineTypeENS0_10InlineTypeE(i32 %2) #12
  %330 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %44, i64 0, i32 6
  %331 = load i8, i8* %330, align 1, !range !3
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %339, label %333

333:                                              ; preds = %328
  %334 = call zeroext i1 @_ZN5blink33CSPSourceListIsHashOrNoncePresentERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %44) #12
  br i1 %334, label %335, label %339

335:                                              ; preds = %333
  %336 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %336) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.26, i64 0, i64 0), i64 100) #12
  %337 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %336) #12
  br label %761

339:                                              ; preds = %333, %328
  %340 = bitcast %"class.WTF::StringAppend"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %340) #12
  %341 = inttoptr i64 %208 to %"class.WTF::StringImpl"*
  %342 = icmp eq i64 %208, 0
  br i1 %342, label %419, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %349 = load i32, i32* %348, align 4
  br i1 %347, label %350, label %360

350:                                              ; preds = %343
  %351 = zext i32 %349 to i33
  %352 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %351, i33 1) #12
  %353 = extractvalue { i33, i1 } %352, 1
  %354 = extractvalue { i33, i1 } %352, 0
  %355 = icmp slt i33 %354, 0
  %356 = or i1 %353, %355
  br i1 %356, label %357, label %358, !prof !2

357:                                              ; preds = %350
  call void @llvm.trap() #12
  unreachable

358:                                              ; preds = %350
  %359 = trunc i33 %354 to i32
  store i32 %359, i32* %348, align 4
  br label %360

360:                                              ; preds = %358, %343
  %361 = phi i32 [ %359, %358 ], [ %349, %343 ]
  %362 = load atomic i32, i32* %344 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %375

365:                                              ; preds = %360
  %366 = zext i32 %361 to i33
  %367 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %366, i33 1) #12
  %368 = extractvalue { i33, i1 } %367, 1
  %369 = extractvalue { i33, i1 } %367, 0
  %370 = icmp slt i33 %369, 0
  %371 = or i1 %368, %370
  br i1 %371, label %372, label %373, !prof !2

372:                                              ; preds = %365
  call void @llvm.trap() #12
  unreachable

373:                                              ; preds = %365
  %374 = trunc i33 %369 to i32
  store i32 %374, i32* %348, align 4
  br label %375

375:                                              ; preds = %373, %360
  %376 = phi i32 [ %374, %373 ], [ %361, %360 ]
  %377 = load atomic i32, i32* %344 monotonic, align 4
  %378 = and i32 %377, 2
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %375
  %381 = add i32 %376, -1
  store i32 %381, i32* %348, align 4
  br label %382

382:                                              ; preds = %380, %375
  %383 = phi i32 [ %381, %380 ], [ %376, %375 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #12
  %386 = load i32, i32* %348, align 4
  br label %387

387:                                              ; preds = %385, %382
  %388 = phi i32 [ %386, %385 ], [ %383, %382 ]
  %389 = load atomic i32, i32* %344 monotonic, align 4, !noalias !8
  %390 = and i32 %389, 2
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %402

392:                                              ; preds = %387
  %393 = zext i32 %388 to i33
  %394 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %393, i33 1) #12
  %395 = extractvalue { i33, i1 } %394, 1
  %396 = extractvalue { i33, i1 } %394, 0
  %397 = icmp slt i33 %396, 0
  %398 = or i1 %395, %397
  br i1 %398, label %399, label %400, !prof !2

399:                                              ; preds = %392
  call void @llvm.trap() #12, !noalias !8
  unreachable

400:                                              ; preds = %392
  %401 = trunc i33 %396 to i32
  store i32 %401, i32* %348, align 4, !noalias !8
  br label %402

402:                                              ; preds = %400, %387
  %403 = phi i32 [ %401, %400 ], [ %388, %387 ]
  %404 = bitcast %"class.WTF::StringAppend"* %15 to i64*
  store i64 ptrtoint ([47 x i8]* @.str.27 to i64), i64* %404, align 8, !alias.scope !8
  %405 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %341, %"class.WTF::StringImpl"** %405, align 8, !alias.scope !8
  %406 = load atomic i32, i32* %344 monotonic, align 4, !noalias !8
  %407 = and i32 %406, 2
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %423

409:                                              ; preds = %402
  %410 = zext i32 %403 to i33
  %411 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %410, i33 1) #12
  %412 = extractvalue { i33, i1 } %411, 1
  %413 = extractvalue { i33, i1 } %411, 0
  %414 = icmp slt i33 %413, 0
  %415 = or i1 %412, %414
  br i1 %415, label %416, label %417, !prof !2

416:                                              ; preds = %409
  call void @llvm.trap() #12, !noalias !8
  unreachable

417:                                              ; preds = %409
  %418 = trunc i33 %413 to i32
  store i32 %418, i32* %348, align 4, !noalias !8
  br label %423

419:                                              ; preds = %339
  %420 = bitcast %"class.WTF::StringAppend"* %15 to i64*
  store i64 ptrtoint ([47 x i8]* @.str.27 to i64), i64* %420, align 8, !alias.scope !8
  %421 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %421, align 8, !alias.scope !8
  %422 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.28, i64 0, i64 0), i8** %422, align 8, !alias.scope !8
  br label %435

423:                                              ; preds = %417, %402
  %424 = phi i32 [ %418, %417 ], [ %403, %402 ]
  %425 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.28, i64 0, i64 0), i8** %425, align 8, !alias.scope !8
  %426 = load atomic i32, i32* %344 monotonic, align 4, !noalias !8
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %431

429:                                              ; preds = %423
  %430 = add i32 %424, -1
  store i32 %430, i32* %348, align 4, !noalias !8
  br label %431

431:                                              ; preds = %429, %423
  %432 = phi i32 [ %430, %429 ], [ %424, %423 ]
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %435

434:                                              ; preds = %431
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #12, !noalias !8
  br label %435

435:                                              ; preds = %434, %431, %419
  %436 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %15) #12
  %437 = ptrtoint %"class.WTF::StringImpl"* %436 to i64
  %438 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %439 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %438, align 8
  %440 = icmp eq %"class.WTF::StringImpl"* %439, null
  br i1 %440, label %454, label %441

441:                                              ; preds = %435
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %439, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %443 = load atomic i32, i32* %442 monotonic, align 4
  %444 = and i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %439, i64 0, i32 0
  %447 = load i32, i32* %446, align 4
  br i1 %445, label %448, label %450

448:                                              ; preds = %441
  %449 = add i32 %447, -1
  store i32 %449, i32* %446, align 4
  br label %450

450:                                              ; preds = %448, %441
  %451 = phi i32 [ %449, %448 ], [ %447, %441 ]
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %454

453:                                              ; preds = %450
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %439) #12
  br label %454

454:                                              ; preds = %453, %450, %435
  br i1 %342, label %468, label %455

455:                                              ; preds = %454
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %457 = load atomic i32, i32* %456 monotonic, align 4
  %458 = and i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %461 = load i32, i32* %460, align 4
  br i1 %459, label %462, label %464

462:                                              ; preds = %455
  %463 = add i32 %461, -1
  store i32 %463, i32* %460, align 4
  br label %464

464:                                              ; preds = %462, %455
  %465 = phi i32 [ %463, %462 ], [ %461, %455 ]
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %468

467:                                              ; preds = %464
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #12
  br label %468

468:                                              ; preds = %467, %464, %454
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %340) #12
  switch i32 %2, label %469 [
    i32 0, label %470
    i32 2, label %470
    i32 4, label %470
    i32 1, label %555
    i32 3, label %555
  ]

469:                                              ; preds = %468
  unreachable

470:                                              ; preds = %468, %468, %468
  %471 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %44, i64 0, i32 10
  %472 = load i8, i8* %471, align 1, !range !3
  %473 = icmp eq i8 %472, 0
  br i1 %473, label %474, label %555

474:                                              ; preds = %470
  %475 = bitcast %"class.WTF::StringAppend.1495"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %475) #12
  %476 = icmp eq %"class.WTF::StringImpl"* %436, null
  br i1 %476, label %520, label %477

477:                                              ; preds = %474
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 0
  %483 = load i32, i32* %482, align 4
  br i1 %481, label %484, label %494

484:                                              ; preds = %477
  %485 = zext i32 %483 to i33
  %486 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %485, i33 1) #12
  %487 = extractvalue { i33, i1 } %486, 1
  %488 = extractvalue { i33, i1 } %486, 0
  %489 = icmp slt i33 %488, 0
  %490 = or i1 %487, %489
  br i1 %490, label %491, label %492, !prof !2

491:                                              ; preds = %484
  call void @llvm.trap() #12
  unreachable

492:                                              ; preds = %484
  %493 = trunc i33 %488 to i32
  store i32 %493, i32* %482, align 4
  br label %494

494:                                              ; preds = %492, %477
  %495 = phi i32 [ %493, %492 ], [ %483, %477 ]
  %496 = load atomic i32, i32* %478 monotonic, align 4
  %497 = and i32 %496, 2
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %499, label %509

499:                                              ; preds = %494
  %500 = zext i32 %495 to i33
  %501 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %500, i33 1) #12
  %502 = extractvalue { i33, i1 } %501, 1
  %503 = extractvalue { i33, i1 } %501, 0
  %504 = icmp slt i33 %503, 0
  %505 = or i1 %502, %504
  br i1 %505, label %506, label %507, !prof !2

506:                                              ; preds = %499
  call void @llvm.trap() #12
  unreachable

507:                                              ; preds = %499
  %508 = trunc i33 %503 to i32
  store i32 %508, i32* %482, align 4
  br label %509

509:                                              ; preds = %507, %494
  %510 = phi i32 [ %508, %507 ], [ %495, %494 ]
  %511 = load atomic i32, i32* %478 monotonic, align 4
  %512 = and i32 %511, 2
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %516

514:                                              ; preds = %509
  %515 = add i32 %510, -1
  store i32 %515, i32* %482, align 4
  br label %516

516:                                              ; preds = %514, %509
  %517 = phi i32 [ %515, %514 ], [ %510, %509 ]
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %519, label %520

519:                                              ; preds = %516
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %436) #12
  br label %520

520:                                              ; preds = %519, %516, %474
  %521 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %436, %"class.WTF::StringImpl"** %521, align 8
  %522 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([142 x i8], [142 x i8]* @.str.29, i64 0, i64 0), i8** %522, align 8
  %523 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %16) #12
  %524 = ptrtoint %"class.WTF::StringImpl"* %523 to i64
  br i1 %476, label %538, label %525

525:                                              ; preds = %520
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %527 = load atomic i32, i32* %526 monotonic, align 4
  %528 = and i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 0
  %531 = load i32, i32* %530, align 4
  br i1 %529, label %532, label %534

532:                                              ; preds = %525
  %533 = add i32 %531, -1
  store i32 %533, i32* %530, align 4
  br label %534

534:                                              ; preds = %532, %525
  %535 = phi i32 [ %533, %532 ], [ %531, %525 ]
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %537, label %538

537:                                              ; preds = %534
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %436) #12
  br label %538

538:                                              ; preds = %537, %534, %520
  %539 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %521, align 8
  %540 = icmp eq %"class.WTF::StringImpl"* %539, null
  br i1 %540, label %554, label %541

541:                                              ; preds = %538
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %539, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %543 = load atomic i32, i32* %542 monotonic, align 4
  %544 = and i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %539, i64 0, i32 0
  %547 = load i32, i32* %546, align 4
  br i1 %545, label %548, label %550

548:                                              ; preds = %541
  %549 = add i32 %547, -1
  store i32 %549, i32* %546, align 4
  br label %550

550:                                              ; preds = %548, %541
  %551 = phi i32 [ %549, %548 ], [ %547, %541 ]
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %553, label %554

553:                                              ; preds = %550
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %539) #12
  br label %554

554:                                              ; preds = %553, %550, %538
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %475) #12
  br label %555

555:                                              ; preds = %554, %470, %468, %468
  %556 = phi i64 [ %437, %470 ], [ %524, %554 ], [ %437, %468 ], [ %437, %468 ]
  %557 = inttoptr i64 %556 to %"class.WTF::StringImpl"*
  %558 = icmp eq i32 %43, 5
  br i1 %558, label %559, label %761

559:                                              ; preds = %555
  %560 = bitcast %"class.WTF::StringAppend.1496"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %560) #12
  %561 = bitcast %"class.WTF::StringAppend.1497"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %561) #12
  %562 = bitcast %"class.WTF::StringAppend.1495"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %562) #12
  %563 = icmp eq i64 %556, 0
  br i1 %563, label %607, label %564

564:                                              ; preds = %559
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load atomic i32, i32* %565 monotonic, align 4
  %567 = and i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  br i1 %568, label %571, label %581

571:                                              ; preds = %564
  %572 = zext i32 %570 to i33
  %573 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %572, i33 1) #12
  %574 = extractvalue { i33, i1 } %573, 1
  %575 = extractvalue { i33, i1 } %573, 0
  %576 = icmp slt i33 %575, 0
  %577 = or i1 %574, %576
  br i1 %577, label %578, label %579, !prof !2

578:                                              ; preds = %571
  call void @llvm.trap() #12
  unreachable

579:                                              ; preds = %571
  %580 = trunc i33 %575 to i32
  store i32 %580, i32* %569, align 4
  br label %581

581:                                              ; preds = %579, %564
  %582 = phi i32 [ %580, %579 ], [ %570, %564 ]
  %583 = load atomic i32, i32* %565 monotonic, align 4
  %584 = and i32 %583, 2
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %596

586:                                              ; preds = %581
  %587 = zext i32 %582 to i33
  %588 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %587, i33 1) #12
  %589 = extractvalue { i33, i1 } %588, 1
  %590 = extractvalue { i33, i1 } %588, 0
  %591 = icmp slt i33 %590, 0
  %592 = or i1 %589, %591
  br i1 %592, label %593, label %594, !prof !2

593:                                              ; preds = %586
  call void @llvm.trap() #12
  unreachable

594:                                              ; preds = %586
  %595 = trunc i33 %590 to i32
  store i32 %595, i32* %569, align 4
  br label %596

596:                                              ; preds = %594, %581
  %597 = phi i32 [ %595, %594 ], [ %582, %581 ]
  %598 = load atomic i32, i32* %565 monotonic, align 4
  %599 = and i32 %598, 2
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %603

601:                                              ; preds = %596
  %602 = add i32 %597, -1
  store i32 %602, i32* %569, align 4
  br label %603

603:                                              ; preds = %601, %596
  %604 = phi i32 [ %602, %601 ], [ %597, %596 ]
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %606, label %607

606:                                              ; preds = %603
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %557) #12
  br label %607

607:                                              ; preds = %606, %603, %559
  %608 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %557, %"class.WTF::StringImpl"** %608, align 8
  %609 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8** %609, align 8
  %610 = select i1 %329, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0)
  %611 = select i1 %329, i64 6, i64 5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* %610, i64 %611) #12
  %612 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %613 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %612, align 8
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.1497"* nonnull sret %18, %"class.WTF::StringAppend.1495"* nonnull dereferenceable(16) %19, %"class.WTF::StringImpl"* %613) #12
  %614 = bitcast %"class.WTF::StringAppend.1497"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %614) #12
  %615 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %616 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %615, align 8, !noalias !11
  %617 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %616, %"class.WTF::StringImpl"** %617, align 8, !noalias !11
  %618 = icmp eq %"class.WTF::StringImpl"* %616, null
  br i1 %618, label %636, label %619

619:                                              ; preds = %607
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %616, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %621 = load atomic i32, i32* %620 monotonic, align 4
  %622 = and i32 %621, 2
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %636

624:                                              ; preds = %619
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %616, i64 0, i32 0
  %626 = load i32, i32* %625, align 4
  %627 = zext i32 %626 to i33
  %628 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %627, i33 1) #12
  %629 = extractvalue { i33, i1 } %628, 1
  %630 = extractvalue { i33, i1 } %628, 0
  %631 = icmp slt i33 %630, 0
  %632 = or i1 %629, %631
  br i1 %632, label %633, label %634, !prof !2

633:                                              ; preds = %624
  call void @llvm.trap() #12
  unreachable

634:                                              ; preds = %624
  %635 = trunc i33 %630 to i32
  store i32 %635, i32* %625, align 4
  br label %636

636:                                              ; preds = %634, %619, %607
  %637 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %13, i64 0, i32 0, i32 1
  %638 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %18, i64 0, i32 0, i32 1
  %639 = bitcast i8** %638 to i64*
  %640 = load i64, i64* %639, align 8, !noalias !11
  %641 = bitcast i8** %637 to i64*
  store i64 %640, i64* %641, align 8, !noalias !11
  %642 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %18, i64 0, i32 1, i32 0, i32 0
  %643 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %642, align 8, !noalias !11
  %644 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %13, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %643, %"class.WTF::StringImpl"** %644, align 8, !noalias !11
  %645 = icmp eq %"class.WTF::StringImpl"* %643, null
  br i1 %645, label %663, label %646

646:                                              ; preds = %636
  %647 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %643, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %648 = load atomic i32, i32* %647 monotonic, align 4
  %649 = and i32 %648, 2
  %650 = icmp eq i32 %649, 0
  br i1 %650, label %651, label %663

651:                                              ; preds = %646
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %643, i64 0, i32 0
  %653 = load i32, i32* %652, align 4
  %654 = zext i32 %653 to i33
  %655 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %654, i33 1) #12
  %656 = extractvalue { i33, i1 } %655, 1
  %657 = extractvalue { i33, i1 } %655, 0
  %658 = icmp slt i33 %657, 0
  %659 = or i1 %656, %658
  br i1 %659, label %660, label %661, !prof !2

660:                                              ; preds = %651
  call void @llvm.trap() #12
  unreachable

661:                                              ; preds = %651
  %662 = trunc i33 %657 to i32
  store i32 %662, i32* %652, align 4
  br label %663

663:                                              ; preds = %661, %646, %636
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1496"* nonnull %17, %"class.WTF::StringAppend.1497"* nonnull byval(%"class.WTF::StringAppend.1497") align 8 %13, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.33, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %614) #12
  %664 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.1496"* nonnull %17) #12
  br i1 %563, label %678, label %665

665:                                              ; preds = %663
  %666 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load atomic i32, i32* %666 monotonic, align 4
  %668 = and i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %671 = load i32, i32* %670, align 4
  br i1 %669, label %672, label %674

672:                                              ; preds = %665
  %673 = add i32 %671, -1
  store i32 %673, i32* %670, align 4
  br label %674

674:                                              ; preds = %672, %665
  %675 = phi i32 [ %673, %672 ], [ %671, %665 ]
  %676 = icmp eq i32 %675, 0
  br i1 %676, label %677, label %678

677:                                              ; preds = %674
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %557) #12
  br label %678

678:                                              ; preds = %677, %674, %663
  %679 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %680 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %679, align 8
  %681 = icmp eq %"class.WTF::StringImpl"* %680, null
  br i1 %681, label %695, label %682

682:                                              ; preds = %678
  %683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %680, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %684 = load atomic i32, i32* %683 monotonic, align 4
  %685 = and i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %680, i64 0, i32 0
  %688 = load i32, i32* %687, align 4
  br i1 %686, label %689, label %691

689:                                              ; preds = %682
  %690 = add i32 %688, -1
  store i32 %690, i32* %687, align 4
  br label %691

691:                                              ; preds = %689, %682
  %692 = phi i32 [ %690, %689 ], [ %688, %682 ]
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %695

694:                                              ; preds = %691
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %680) #12
  br label %695

695:                                              ; preds = %694, %691, %678
  %696 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %697 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %696, align 8
  %698 = icmp eq %"class.WTF::StringImpl"* %697, null
  br i1 %698, label %712, label %699

699:                                              ; preds = %695
  %700 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %701 = load atomic i32, i32* %700 monotonic, align 4
  %702 = and i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 0
  %705 = load i32, i32* %704, align 4
  br i1 %703, label %706, label %708

706:                                              ; preds = %699
  %707 = add i32 %705, -1
  store i32 %707, i32* %704, align 4
  br label %708

708:                                              ; preds = %706, %699
  %709 = phi i32 [ %707, %706 ], [ %705, %699 ]
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %711, label %712

711:                                              ; preds = %708
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %697) #12
  br label %712

712:                                              ; preds = %711, %708, %695
  %713 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %642, align 8
  %714 = icmp eq %"class.WTF::StringImpl"* %713, null
  br i1 %714, label %728, label %715

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %713, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load atomic i32, i32* %716 monotonic, align 4
  %718 = and i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %713, i64 0, i32 0
  %721 = load i32, i32* %720, align 4
  br i1 %719, label %722, label %724

722:                                              ; preds = %715
  %723 = add i32 %721, -1
  store i32 %723, i32* %720, align 4
  br label %724

724:                                              ; preds = %722, %715
  %725 = phi i32 [ %723, %722 ], [ %721, %715 ]
  %726 = icmp eq i32 %725, 0
  br i1 %726, label %727, label %728

727:                                              ; preds = %724
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %713) #12
  br label %728

728:                                              ; preds = %727, %724, %712
  %729 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %615, align 8
  %730 = icmp eq %"class.WTF::StringImpl"* %729, null
  br i1 %730, label %744, label %731

731:                                              ; preds = %728
  %732 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %729, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %733 = load atomic i32, i32* %732 monotonic, align 4
  %734 = and i32 %733, 2
  %735 = icmp eq i32 %734, 0
  %736 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %729, i64 0, i32 0
  %737 = load i32, i32* %736, align 4
  br i1 %735, label %738, label %740

738:                                              ; preds = %731
  %739 = add i32 %737, -1
  store i32 %739, i32* %736, align 4
  br label %740

740:                                              ; preds = %738, %731
  %741 = phi i32 [ %739, %738 ], [ %737, %731 ]
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %743, label %744

743:                                              ; preds = %740
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %729) #12
  br label %744

744:                                              ; preds = %743, %740, %728
  %745 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %608, align 8
  %746 = icmp eq %"class.WTF::StringImpl"* %745, null
  br i1 %746, label %760, label %747

747:                                              ; preds = %744
  %748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %745, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %749 = load atomic i32, i32* %748 monotonic, align 4
  %750 = and i32 %749, 2
  %751 = icmp eq i32 %750, 0
  %752 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %745, i64 0, i32 0
  %753 = load i32, i32* %752, align 4
  br i1 %751, label %754, label %756

754:                                              ; preds = %747
  %755 = add i32 %753, -1
  store i32 %755, i32* %752, align 4
  br label %756

756:                                              ; preds = %754, %747
  %757 = phi i32 [ %755, %754 ], [ %753, %747 ]
  %758 = icmp eq i32 %757, 0
  br i1 %758, label %759, label %760

759:                                              ; preds = %756
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %745) #12
  br label %760

760:                                              ; preds = %759, %756, %744
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %562) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %561) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %560) #12
  br label %761

761:                                              ; preds = %760, %555, %335
  %762 = phi %"class.WTF::StringImpl"* [ %664, %760 ], [ %557, %555 ], [ %338, %335 ]
  %763 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %763) #12
  %764 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %764, align 8
  %765 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %22, i64 0, i32 0
  %766 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %325, i8 0, i64 20, i1 false) #12
  %767 = load i32, i32* %766, align 4
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %805, label %769

769:                                              ; preds = %761
  call void @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %765, i32 %767) #12
  %770 = load i32, i32* %766, align 4
  %771 = icmp eq i32 %770, 0
  %772 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %773 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %772, align 8
  %774 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 1
  %775 = load i32, i32* %774, align 8
  %776 = zext i32 %775 to i64
  %777 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %773, i64 %776
  br i1 %771, label %805, label %778

778:                                              ; preds = %769
  %779 = icmp eq i32 %775, 0
  br i1 %779, label %787, label %780

780:                                              ; preds = %778, %784
  %781 = phi %"struct.WTF::KeyValuePair"* [ %785, %784 ], [ %773, %778 ]
  %782 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %781, i64 0, i32 0
  %783 = load i32, i32* %782, align 4
  switch i32 %783, label %787 [
    i32 -1000001, label %784
    i32 0, label %784
  ]

784:                                              ; preds = %780, %780
  %785 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %781, i64 1
  %786 = icmp eq %"struct.WTF::KeyValuePair"* %785, %777
  br i1 %786, label %805, label %780

787:                                              ; preds = %780, %778
  %788 = phi %"struct.WTF::KeyValuePair"* [ %773, %778 ], [ %781, %780 ]
  %789 = icmp eq %"struct.WTF::KeyValuePair"* %788, %777
  br i1 %789, label %805, label %790

790:                                              ; preds = %787, %803
  %791 = phi %"struct.WTF::KeyValuePair"* [ %797, %803 ], [ %788, %787 ]
  %792 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %791, i64 0, i32 0
  %793 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS3_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %765, i32* dereferenceable(4) %792, %"struct.WTF::KeyValuePair"* dereferenceable(16) %791) #12
  %794 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %791, i64 1
  %795 = icmp eq %"struct.WTF::KeyValuePair"* %794, %777
  br i1 %795, label %805, label %796

796:                                              ; preds = %790, %800
  %797 = phi %"struct.WTF::KeyValuePair"* [ %801, %800 ], [ %794, %790 ]
  %798 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %797, i64 0, i32 0
  %799 = load i32, i32* %798, align 4
  switch i32 %799, label %803 [
    i32 -1000001, label %800
    i32 0, label %800
  ]

800:                                              ; preds = %796, %796
  %801 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %797, i64 1
  %802 = icmp eq %"struct.WTF::KeyValuePair"* %801, %777
  br i1 %802, label %805, label %796

803:                                              ; preds = %796
  %804 = icmp eq %"struct.WTF::KeyValuePair"* %797, %777
  br i1 %804, label %805, label %790

805:                                              ; preds = %784, %803, %790, %800, %787, %769, %761
  %806 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_125GetRawDirectiveForMessageEN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEES5_(%"class.WTF::HashMap"* nonnull %22, i32 %43) #12
  store %"class.WTF::StringImpl"* %806, %"class.WTF::StringImpl"** %764, align 8
  %807 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %22, i64 0, i32 0, i32 0
  %808 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %807, align 8
  %809 = icmp eq %"struct.WTF::KeyValuePair"* %808, null
  br i1 %809, label %843, label %810, !prof !4

810:                                              ; preds = %805
  %811 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %22, i64 0, i32 0, i32 1
  %812 = load i32, i32* %811, align 8
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %841, label %814

814:                                              ; preds = %810
  %815 = zext i32 %812 to i64
  br label %816

816:                                              ; preds = %838, %814
  %817 = phi i64 [ 0, %814 ], [ %839, %838 ]
  %818 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %808, i64 %817, i32 0
  %819 = load i32, i32* %818, align 4
  %820 = icmp eq i32 %819, -1000001
  br i1 %820, label %838, label %821

821:                                              ; preds = %816
  %822 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %808, i64 %817, i32 1, i32 0, i32 0
  %823 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %822, align 8
  %824 = icmp eq %"class.WTF::StringImpl"* %823, null
  br i1 %824, label %838, label %825

825:                                              ; preds = %821
  %826 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %823, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %827 = load atomic i32, i32* %826 monotonic, align 4
  %828 = and i32 %827, 2
  %829 = icmp eq i32 %828, 0
  %830 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %823, i64 0, i32 0
  %831 = load i32, i32* %830, align 4
  br i1 %829, label %832, label %834

832:                                              ; preds = %825
  %833 = add i32 %831, -1
  store i32 %833, i32* %830, align 4
  br label %834

834:                                              ; preds = %832, %825
  %835 = phi i32 [ %833, %832 ], [ %831, %825 ]
  %836 = icmp eq i32 %835, 0
  br i1 %836, label %837, label %838

837:                                              ; preds = %834
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %823) #12
  br label %838

838:                                              ; preds = %837, %834, %821, %816
  %839 = add nuw nsw i64 %817, 1
  %840 = icmp eq i64 %839, %815
  br i1 %840, label %841, label %816

841:                                              ; preds = %838, %810
  %842 = bitcast %"struct.WTF::KeyValuePair"* %808 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %842) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %807, align 8
  br label %843

843:                                              ; preds = %841, %805
  %844 = bitcast %"class.WTF::StringAppend.1498"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %844) #12
  %845 = bitcast %"class.WTF::StringAppend.1499"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %845) #12
  %846 = bitcast %"class.WTF::StringAppend.1496"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %846) #12
  %847 = bitcast %"class.WTF::StringAppend.1497"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %847) #12
  %848 = bitcast %"class.WTF::StringAppend.1495"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %848) #12
  %849 = icmp eq %"class.WTF::StringImpl"* %323, null
  br i1 %849, label %893, label %850

850:                                              ; preds = %843
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %852 = load atomic i32, i32* %851 monotonic, align 4
  %853 = and i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 0
  %856 = load i32, i32* %855, align 4
  br i1 %854, label %857, label %867

857:                                              ; preds = %850
  %858 = zext i32 %856 to i33
  %859 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %858, i33 1) #12
  %860 = extractvalue { i33, i1 } %859, 1
  %861 = extractvalue { i33, i1 } %859, 0
  %862 = icmp slt i33 %861, 0
  %863 = or i1 %860, %862
  br i1 %863, label %864, label %865, !prof !2

864:                                              ; preds = %857
  call void @llvm.trap() #12
  unreachable

865:                                              ; preds = %857
  %866 = trunc i33 %861 to i32
  store i32 %866, i32* %855, align 4
  br label %867

867:                                              ; preds = %865, %850
  %868 = phi i32 [ %866, %865 ], [ %856, %850 ]
  %869 = load atomic i32, i32* %851 monotonic, align 4
  %870 = and i32 %869, 2
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %872, label %882

872:                                              ; preds = %867
  %873 = zext i32 %868 to i33
  %874 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %873, i33 1) #12
  %875 = extractvalue { i33, i1 } %874, 1
  %876 = extractvalue { i33, i1 } %874, 0
  %877 = icmp slt i33 %876, 0
  %878 = or i1 %875, %877
  br i1 %878, label %879, label %880, !prof !2

879:                                              ; preds = %872
  call void @llvm.trap() #12
  unreachable

880:                                              ; preds = %872
  %881 = trunc i33 %876 to i32
  store i32 %881, i32* %855, align 4
  br label %882

882:                                              ; preds = %880, %867
  %883 = phi i32 [ %881, %880 ], [ %868, %867 ]
  %884 = load atomic i32, i32* %851 monotonic, align 4
  %885 = and i32 %884, 2
  %886 = icmp eq i32 %885, 0
  br i1 %886, label %887, label %889

887:                                              ; preds = %882
  %888 = add i32 %883, -1
  store i32 %888, i32* %855, align 4
  br label %889

889:                                              ; preds = %887, %882
  %890 = phi i32 [ %888, %887 ], [ %883, %882 ]
  %891 = icmp eq i32 %890, 0
  br i1 %891, label %892, label %893

892:                                              ; preds = %889
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %323) #12
  br label %893

893:                                              ; preds = %892, %889, %843
  %894 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %27, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %323, %"class.WTF::StringImpl"** %894, align 8
  %895 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %27, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i8** %895, align 8
  %896 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %764, align 8
  %897 = icmp eq %"class.WTF::StringImpl"* %896, null
  br i1 %897, label %915, label %898

898:                                              ; preds = %893
  %899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %896, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %900 = load atomic i32, i32* %899 monotonic, align 4
  %901 = and i32 %900, 2
  %902 = icmp eq i32 %901, 0
  br i1 %902, label %903, label %915

903:                                              ; preds = %898
  %904 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %896, i64 0, i32 0
  %905 = load i32, i32* %904, align 4
  %906 = zext i32 %905 to i33
  %907 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %906, i33 1) #12
  %908 = extractvalue { i33, i1 } %907, 1
  %909 = extractvalue { i33, i1 } %907, 0
  %910 = icmp slt i33 %909, 0
  %911 = or i1 %908, %910
  br i1 %911, label %912, label %913, !prof !2

912:                                              ; preds = %903
  call void @llvm.trap() #12
  unreachable

913:                                              ; preds = %903
  %914 = trunc i33 %909 to i32
  store i32 %914, i32* %904, align 4
  br label %915

915:                                              ; preds = %913, %898, %893
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.1497"* nonnull sret %26, %"class.WTF::StringAppend.1495"* nonnull dereferenceable(16) %27, %"class.WTF::StringImpl"* %896) #12
  %916 = bitcast %"class.WTF::StringAppend.1497"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %916) #12
  %917 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %918 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %917, align 8, !noalias !14
  %919 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %918, %"class.WTF::StringImpl"** %919, align 8, !noalias !14
  %920 = icmp eq %"class.WTF::StringImpl"* %918, null
  br i1 %920, label %938, label %921

921:                                              ; preds = %915
  %922 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %918, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %923 = load atomic i32, i32* %922 monotonic, align 4
  %924 = and i32 %923, 2
  %925 = icmp eq i32 %924, 0
  br i1 %925, label %926, label %938

926:                                              ; preds = %921
  %927 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %918, i64 0, i32 0
  %928 = load i32, i32* %927, align 4
  %929 = zext i32 %928 to i33
  %930 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %929, i33 1) #12
  %931 = extractvalue { i33, i1 } %930, 1
  %932 = extractvalue { i33, i1 } %930, 0
  %933 = icmp slt i33 %932, 0
  %934 = or i1 %931, %933
  br i1 %934, label %935, label %936, !prof !2

935:                                              ; preds = %926
  call void @llvm.trap() #12
  unreachable

936:                                              ; preds = %926
  %937 = trunc i33 %932 to i32
  store i32 %937, i32* %927, align 4
  br label %938

938:                                              ; preds = %936, %921, %915
  %939 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %12, i64 0, i32 0, i32 1
  %940 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %26, i64 0, i32 0, i32 1
  %941 = bitcast i8** %940 to i64*
  %942 = load i64, i64* %941, align 8, !noalias !14
  %943 = bitcast i8** %939 to i64*
  store i64 %942, i64* %943, align 8, !noalias !14
  %944 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %26, i64 0, i32 1, i32 0, i32 0
  %945 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %944, align 8, !noalias !14
  %946 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %12, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %945, %"class.WTF::StringImpl"** %946, align 8, !noalias !14
  %947 = icmp eq %"class.WTF::StringImpl"* %945, null
  br i1 %947, label %965, label %948

948:                                              ; preds = %938
  %949 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %945, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %950 = load atomic i32, i32* %949 monotonic, align 4
  %951 = and i32 %950, 2
  %952 = icmp eq i32 %951, 0
  br i1 %952, label %953, label %965

953:                                              ; preds = %948
  %954 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %945, i64 0, i32 0
  %955 = load i32, i32* %954, align 4
  %956 = zext i32 %955 to i33
  %957 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %956, i33 1) #12
  %958 = extractvalue { i33, i1 } %957, 1
  %959 = extractvalue { i33, i1 } %957, 0
  %960 = icmp slt i33 %959, 0
  %961 = or i1 %958, %960
  br i1 %961, label %962, label %963, !prof !2

962:                                              ; preds = %953
  call void @llvm.trap() #12
  unreachable

963:                                              ; preds = %953
  %964 = trunc i33 %959 to i32
  store i32 %964, i32* %954, align 4
  br label %965

965:                                              ; preds = %963, %948, %938
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1496"* nonnull %25, %"class.WTF::StringAppend.1497"* nonnull byval(%"class.WTF::StringAppend.1497") align 8 %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %916) #12
  %966 = icmp eq %"class.WTF::StringImpl"* %762, null
  br i1 %966, label %984, label %967

967:                                              ; preds = %965
  %968 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %762, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %969 = load atomic i32, i32* %968 monotonic, align 4
  %970 = and i32 %969, 2
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %984

972:                                              ; preds = %967
  %973 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %762, i64 0, i32 0
  %974 = load i32, i32* %973, align 4
  %975 = zext i32 %974 to i33
  %976 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %975, i33 1) #12
  %977 = extractvalue { i33, i1 } %976, 1
  %978 = extractvalue { i33, i1 } %976, 0
  %979 = icmp slt i33 %978, 0
  %980 = or i1 %977, %979
  br i1 %980, label %981, label %982, !prof !2

981:                                              ; preds = %972
  call void @llvm.trap() #12
  unreachable

982:                                              ; preds = %972
  %983 = trunc i33 %978 to i32
  store i32 %983, i32* %973, align 4
  br label %984

984:                                              ; preds = %982, %967, %965
  call void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S2_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.1499"* nonnull sret %24, %"class.WTF::StringAppend.1496"* nonnull dereferenceable(32) %25, %"class.WTF::StringImpl"* %762) #12
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringEPKcEES2_EES4_EES2_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.1498"* nonnull sret %23, %"class.WTF::StringAppend.1499"* nonnull dereferenceable(40) %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0)) #12
  %985 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.1498"* nonnull %23) #12
  %986 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %28, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %986) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %28) #12
  %987 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %44, i64 0, i32 11
  %988 = load i8, i8* %987, align 8, !range !3
  %989 = icmp eq i8 %988, 0
  %990 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %991 = select i1 %989, %"class.WTF::String"* %990, %"class.WTF::String"* %4
  %992 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %992) #12
  %993 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %993, align 8
  %994 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %995 = load i32, i32* %994, align 8
  %996 = icmp eq i32 %995, 0
  br i1 %996, label %997, label %1063

997:                                              ; preds = %984
  %998 = bitcast %"class.WTF::StringAppend.849"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %998) #12
  %999 = icmp eq %"class.WTF::StringImpl"* %985, null
  br i1 %999, label %1043, label %1000

1000:                                             ; preds = %997
  %1001 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1002 = load atomic i32, i32* %1001 monotonic, align 4
  %1003 = and i32 %1002, 2
  %1004 = icmp eq i32 %1003, 0
  %1005 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 0, i32 0
  %1006 = load i32, i32* %1005, align 4
  br i1 %1004, label %1007, label %1017

1007:                                             ; preds = %1000
  %1008 = zext i32 %1006 to i33
  %1009 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1008, i33 1) #12
  %1010 = extractvalue { i33, i1 } %1009, 1
  %1011 = extractvalue { i33, i1 } %1009, 0
  %1012 = icmp slt i33 %1011, 0
  %1013 = or i1 %1010, %1012
  br i1 %1013, label %1014, label %1015, !prof !2

1014:                                             ; preds = %1007
  call void @llvm.trap() #12
  unreachable

1015:                                             ; preds = %1007
  %1016 = trunc i33 %1011 to i32
  store i32 %1016, i32* %1005, align 4
  br label %1017

1017:                                             ; preds = %1015, %1000
  %1018 = phi i32 [ %1016, %1015 ], [ %1006, %1000 ]
  %1019 = load atomic i32, i32* %1001 monotonic, align 4
  %1020 = and i32 %1019, 2
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1022, label %1032

1022:                                             ; preds = %1017
  %1023 = zext i32 %1018 to i33
  %1024 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1023, i33 1) #12
  %1025 = extractvalue { i33, i1 } %1024, 1
  %1026 = extractvalue { i33, i1 } %1024, 0
  %1027 = icmp slt i33 %1026, 0
  %1028 = or i1 %1025, %1027
  br i1 %1028, label %1029, label %1030, !prof !2

1029:                                             ; preds = %1022
  call void @llvm.trap() #12
  unreachable

1030:                                             ; preds = %1022
  %1031 = trunc i33 %1026 to i32
  store i32 %1031, i32* %1005, align 4
  br label %1032

1032:                                             ; preds = %1030, %1017
  %1033 = phi i32 [ %1031, %1030 ], [ %1018, %1017 ]
  %1034 = load atomic i32, i32* %1001 monotonic, align 4
  %1035 = and i32 %1034, 2
  %1036 = icmp eq i32 %1035, 0
  br i1 %1036, label %1037, label %1039

1037:                                             ; preds = %1032
  %1038 = add i32 %1033, -1
  store i32 %1038, i32* %1005, align 4
  br label %1039

1039:                                             ; preds = %1037, %1032
  %1040 = phi i32 [ %1038, %1037 ], [ %1033, %1032 ]
  %1041 = icmp eq i32 %1040, 0
  br i1 %1041, label %1042, label %1043

1042:                                             ; preds = %1039
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %985) #12
  br label %1043

1043:                                             ; preds = %1042, %1039, %997
  %1044 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %11, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i8** %1044, align 8
  %1045 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %11, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %985, %"class.WTF::StringImpl"** %1045, align 8
  %1046 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.849"* nonnull %11) #12
  store %"class.WTF::StringImpl"* %1046, %"class.WTF::StringImpl"** %993, align 8
  %1047 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1045, align 8
  %1048 = icmp eq %"class.WTF::StringImpl"* %1047, null
  br i1 %1048, label %1062, label %1049

1049:                                             ; preds = %1043
  %1050 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1047, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1051 = load atomic i32, i32* %1050 monotonic, align 4
  %1052 = and i32 %1051, 2
  %1053 = icmp eq i32 %1052, 0
  %1054 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1047, i64 0, i32 0
  %1055 = load i32, i32* %1054, align 4
  br i1 %1053, label %1056, label %1058

1056:                                             ; preds = %1049
  %1057 = add i32 %1055, -1
  store i32 %1057, i32* %1054, align 4
  br label %1058

1058:                                             ; preds = %1056, %1049
  %1059 = phi i32 [ %1057, %1056 ], [ %1055, %1049 ]
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1061, label %1062

1061:                                             ; preds = %1058
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1047) #12
  br label %1062

1062:                                             ; preds = %1061, %1058, %1043
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %998) #12
  br label %1082

1063:                                             ; preds = %984
  store %"class.WTF::StringImpl"* %985, %"class.WTF::StringImpl"** %993, align 8
  %1064 = icmp eq %"class.WTF::StringImpl"* %985, null
  br i1 %1064, label %1082, label %1065

1065:                                             ; preds = %1063
  %1066 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1067 = load atomic i32, i32* %1066 monotonic, align 4
  %1068 = and i32 %1067, 2
  %1069 = icmp eq i32 %1068, 0
  br i1 %1069, label %1070, label %1082

1070:                                             ; preds = %1065
  %1071 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 0, i32 0
  %1072 = load i32, i32* %1071, align 4
  %1073 = zext i32 %1072 to i33
  %1074 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1073, i33 1) #12
  %1075 = extractvalue { i33, i1 } %1074, 1
  %1076 = extractvalue { i33, i1 } %1074, 0
  %1077 = icmp slt i33 %1076, 0
  %1078 = or i1 %1075, %1077
  br i1 %1078, label %1079, label %1080, !prof !2

1079:                                             ; preds = %1070
  call void @llvm.trap() #12
  unreachable

1080:                                             ; preds = %1070
  %1081 = trunc i33 %1076 to i32
  store i32 %1081, i32* %1071, align 4
  br label %1082

1082:                                             ; preds = %1080, %1065, %1063, %1062
  %1083 = getelementptr inbounds %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber"* %7, i64 0, i32 0
  %1084 = load i32, i32* %1083, align 4
  %1085 = add nsw i32 %1084, 1
  %1086 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureERKN3WTF6StringEjj(%"class.WTF::String"* dereferenceable(8) %6, i32 %1085, i32 0) #12
  %1087 = ptrtoint %"class.blink::SourceLocation"* %1086 to i64
  %1088 = call %"class.blink::SourceLocation"* @_ZNK5blink14SourceLocation5CloneEv(%"class.blink::SourceLocation"* %1086) #12
  %1089 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #12
  %1090 = bitcast i8* %1089 to %"class.blink::ConsoleMessage"*
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %1090, i32 7, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::SourceLocation"* %1088) #12
  %1091 = getelementptr inbounds i8, i8* %1089, i64 -4
  %1092 = bitcast i8* %1091 to i16*
  %1093 = load atomic i16, i16* %1092 monotonic, align 2
  %1094 = or i16 %1093, 1
  store atomic i16 %1094, i16* %1092 release, align 2
  call void @_ZN5blink21ContentSecurityPolicy12LogToConsoleEPNS_14ConsoleMessageEPNS_10LocalFrameE(%"class.blink::ContentSecurityPolicy"* %1, %"class.blink::ConsoleMessage"* %1090, %"class.blink::LocalFrame"* null) #12
  %1095 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 9
  %1096 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 8
  %1097 = load i8, i8* %1096, align 8, !range !3
  %1098 = icmp ne i8 %1097, 0
  %1099 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 0
  %1100 = load i32, i32* %994, align 8
  call void @_ZN5blink21ContentSecurityPolicy15ReportViolationERKN3WTF6StringEN7network5mojom16CSPDirectiveNameES4_RKNS_4KURLERKNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEEbS4_NS6_25ContentSecurityPolicyTypeENS0_34ContentSecurityPolicyViolationTypeENSt3__110unique_ptrINS_14SourceLocationENSI_14default_deleteISK_EEEEPNS_10LocalFrameENS_19ResourceRequestHead14RedirectStatusEPNS_7ElementES4_S4_(%"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %21, i32 %41, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::KURL"* nonnull dereferenceable(112) %28, %"class.WTF::Vector.13"* dereferenceable(16) %1095, i1 zeroext %1098, %"class.WTF::String"* dereferenceable(8) %1099, i32 %1100, i32 0, i64 %1087, %"class.blink::LocalFrame"* null, i8 zeroext 1, %"class.blink::Element"* %3, %"class.WTF::String"* dereferenceable(8) %991, %"class.WTF::String"* dereferenceable(8) %990) #12
  %1101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %993, align 8
  %1102 = icmp eq %"class.WTF::StringImpl"* %1101, null
  br i1 %1102, label %1116, label %1103

1103:                                             ; preds = %1082
  %1104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1105 = load atomic i32, i32* %1104 monotonic, align 4
  %1106 = and i32 %1105, 2
  %1107 = icmp eq i32 %1106, 0
  %1108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1101, i64 0, i32 0
  %1109 = load i32, i32* %1108, align 4
  br i1 %1107, label %1110, label %1112

1110:                                             ; preds = %1103
  %1111 = add i32 %1109, -1
  store i32 %1111, i32* %1108, align 4
  br label %1112

1112:                                             ; preds = %1110, %1103
  %1113 = phi i32 [ %1111, %1110 ], [ %1109, %1103 ]
  %1114 = icmp eq i32 %1113, 0
  br i1 %1114, label %1115, label %1116

1115:                                             ; preds = %1112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1101) #12
  br label %1116

1116:                                             ; preds = %1115, %1112, %1082
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %992) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %986) #12
  %1117 = icmp eq %"class.WTF::StringImpl"* %985, null
  br i1 %1117, label %1131, label %1118

1118:                                             ; preds = %1116
  %1119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1120 = load atomic i32, i32* %1119 monotonic, align 4
  %1121 = and i32 %1120, 2
  %1122 = icmp eq i32 %1121, 0
  %1123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 0, i32 0
  %1124 = load i32, i32* %1123, align 4
  br i1 %1122, label %1125, label %1127

1125:                                             ; preds = %1118
  %1126 = add i32 %1124, -1
  store i32 %1126, i32* %1123, align 4
  br label %1127

1127:                                             ; preds = %1125, %1118
  %1128 = phi i32 [ %1126, %1125 ], [ %1124, %1118 ]
  %1129 = icmp eq i32 %1128, 0
  br i1 %1129, label %1130, label %1131

1130:                                             ; preds = %1127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %985) #12
  br label %1131

1131:                                             ; preds = %1130, %1127, %1116
  %1132 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %1133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1132, align 8
  %1134 = icmp eq %"class.WTF::StringImpl"* %1133, null
  br i1 %1134, label %1148, label %1135

1135:                                             ; preds = %1131
  %1136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1137 = load atomic i32, i32* %1136 monotonic, align 4
  %1138 = and i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  %1140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1133, i64 0, i32 0
  %1141 = load i32, i32* %1140, align 4
  br i1 %1139, label %1142, label %1144

1142:                                             ; preds = %1135
  %1143 = add i32 %1141, -1
  store i32 %1143, i32* %1140, align 4
  br label %1144

1144:                                             ; preds = %1142, %1135
  %1145 = phi i32 [ %1143, %1142 ], [ %1141, %1135 ]
  %1146 = icmp eq i32 %1145, 0
  br i1 %1146, label %1147, label %1148

1147:                                             ; preds = %1144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1133) #12
  br label %1148

1148:                                             ; preds = %1147, %1144, %1131
  %1149 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1149, align 8
  %1151 = icmp eq %"class.WTF::StringImpl"* %1150, null
  br i1 %1151, label %1165, label %1152

1152:                                             ; preds = %1148
  %1153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1154 = load atomic i32, i32* %1153 monotonic, align 4
  %1155 = and i32 %1154, 2
  %1156 = icmp eq i32 %1155, 0
  %1157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1150, i64 0, i32 0
  %1158 = load i32, i32* %1157, align 4
  br i1 %1156, label %1159, label %1161

1159:                                             ; preds = %1152
  %1160 = add i32 %1158, -1
  store i32 %1160, i32* %1157, align 4
  br label %1161

1161:                                             ; preds = %1159, %1152
  %1162 = phi i32 [ %1160, %1159 ], [ %1158, %1152 ]
  %1163 = icmp eq i32 %1162, 0
  br i1 %1163, label %1164, label %1165

1164:                                             ; preds = %1161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1150) #12
  br label %1165

1165:                                             ; preds = %1164, %1161, %1148
  %1166 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1166, align 8
  %1168 = icmp eq %"class.WTF::StringImpl"* %1167, null
  br i1 %1168, label %1182, label %1169

1169:                                             ; preds = %1165
  %1170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1171 = load atomic i32, i32* %1170 monotonic, align 4
  %1172 = and i32 %1171, 2
  %1173 = icmp eq i32 %1172, 0
  %1174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1167, i64 0, i32 0
  %1175 = load i32, i32* %1174, align 4
  br i1 %1173, label %1176, label %1178

1176:                                             ; preds = %1169
  %1177 = add i32 %1175, -1
  store i32 %1177, i32* %1174, align 4
  br label %1178

1178:                                             ; preds = %1176, %1169
  %1179 = phi i32 [ %1177, %1176 ], [ %1175, %1169 ]
  %1180 = icmp eq i32 %1179, 0
  br i1 %1180, label %1181, label %1182

1181:                                             ; preds = %1178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1167) #12
  br label %1182

1182:                                             ; preds = %1181, %1178, %1165
  %1183 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %24, i64 0, i32 1, i32 0, i32 0
  %1184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1183, align 8
  %1185 = icmp eq %"class.WTF::StringImpl"* %1184, null
  br i1 %1185, label %1199, label %1186

1186:                                             ; preds = %1182
  %1187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1188 = load atomic i32, i32* %1187 monotonic, align 4
  %1189 = and i32 %1188, 2
  %1190 = icmp eq i32 %1189, 0
  %1191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1184, i64 0, i32 0
  %1192 = load i32, i32* %1191, align 4
  br i1 %1190, label %1193, label %1195

1193:                                             ; preds = %1186
  %1194 = add i32 %1192, -1
  store i32 %1194, i32* %1191, align 4
  br label %1195

1195:                                             ; preds = %1193, %1186
  %1196 = phi i32 [ %1194, %1193 ], [ %1192, %1186 ]
  %1197 = icmp eq i32 %1196, 0
  br i1 %1197, label %1198, label %1199

1198:                                             ; preds = %1195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1184) #12
  br label %1199

1199:                                             ; preds = %1198, %1195, %1182
  %1200 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %24, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1200, align 8
  %1202 = icmp eq %"class.WTF::StringImpl"* %1201, null
  br i1 %1202, label %1216, label %1203

1203:                                             ; preds = %1199
  %1204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1205 = load atomic i32, i32* %1204 monotonic, align 4
  %1206 = and i32 %1205, 2
  %1207 = icmp eq i32 %1206, 0
  %1208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1201, i64 0, i32 0
  %1209 = load i32, i32* %1208, align 4
  br i1 %1207, label %1210, label %1212

1210:                                             ; preds = %1203
  %1211 = add i32 %1209, -1
  store i32 %1211, i32* %1208, align 4
  br label %1212

1212:                                             ; preds = %1210, %1203
  %1213 = phi i32 [ %1211, %1210 ], [ %1209, %1203 ]
  %1214 = icmp eq i32 %1213, 0
  br i1 %1214, label %1215, label %1216

1215:                                             ; preds = %1212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1201) #12
  br label %1216

1216:                                             ; preds = %1215, %1212, %1199
  %1217 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1217, align 8
  %1219 = icmp eq %"class.WTF::StringImpl"* %1218, null
  br i1 %1219, label %1233, label %1220

1220:                                             ; preds = %1216
  %1221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1222 = load atomic i32, i32* %1221 monotonic, align 4
  %1223 = and i32 %1222, 2
  %1224 = icmp eq i32 %1223, 0
  %1225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1218, i64 0, i32 0
  %1226 = load i32, i32* %1225, align 4
  br i1 %1224, label %1227, label %1229

1227:                                             ; preds = %1220
  %1228 = add i32 %1226, -1
  store i32 %1228, i32* %1225, align 4
  br label %1229

1229:                                             ; preds = %1227, %1220
  %1230 = phi i32 [ %1228, %1227 ], [ %1226, %1220 ]
  %1231 = icmp eq i32 %1230, 0
  br i1 %1231, label %1232, label %1233

1232:                                             ; preds = %1229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1218) #12
  br label %1233

1233:                                             ; preds = %1232, %1229, %1216
  %1234 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  %1235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1234, align 8
  %1236 = icmp eq %"class.WTF::StringImpl"* %1235, null
  br i1 %1236, label %1250, label %1237

1237:                                             ; preds = %1233
  %1238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1239 = load atomic i32, i32* %1238 monotonic, align 4
  %1240 = and i32 %1239, 2
  %1241 = icmp eq i32 %1240, 0
  %1242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1235, i64 0, i32 0
  %1243 = load i32, i32* %1242, align 4
  br i1 %1241, label %1244, label %1246

1244:                                             ; preds = %1237
  %1245 = add i32 %1243, -1
  store i32 %1245, i32* %1242, align 4
  br label %1246

1246:                                             ; preds = %1244, %1237
  %1247 = phi i32 [ %1245, %1244 ], [ %1243, %1237 ]
  %1248 = icmp eq i32 %1247, 0
  br i1 %1248, label %1249, label %1250

1249:                                             ; preds = %1246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1235) #12
  br label %1250

1250:                                             ; preds = %1249, %1246, %1233
  %1251 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1251, align 8
  %1253 = icmp eq %"class.WTF::StringImpl"* %1252, null
  br i1 %1253, label %1267, label %1254

1254:                                             ; preds = %1250
  %1255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1256 = load atomic i32, i32* %1255 monotonic, align 4
  %1257 = and i32 %1256, 2
  %1258 = icmp eq i32 %1257, 0
  %1259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1252, i64 0, i32 0
  %1260 = load i32, i32* %1259, align 4
  br i1 %1258, label %1261, label %1263

1261:                                             ; preds = %1254
  %1262 = add i32 %1260, -1
  store i32 %1262, i32* %1259, align 4
  br label %1263

1263:                                             ; preds = %1261, %1254
  %1264 = phi i32 [ %1262, %1261 ], [ %1260, %1254 ]
  %1265 = icmp eq i32 %1264, 0
  br i1 %1265, label %1266, label %1267

1266:                                             ; preds = %1263
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1252) #12
  br label %1267

1267:                                             ; preds = %1266, %1263, %1250
  %1268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %944, align 8
  %1269 = icmp eq %"class.WTF::StringImpl"* %1268, null
  br i1 %1269, label %1283, label %1270

1270:                                             ; preds = %1267
  %1271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1272 = load atomic i32, i32* %1271 monotonic, align 4
  %1273 = and i32 %1272, 2
  %1274 = icmp eq i32 %1273, 0
  %1275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1268, i64 0, i32 0
  %1276 = load i32, i32* %1275, align 4
  br i1 %1274, label %1277, label %1279

1277:                                             ; preds = %1270
  %1278 = add i32 %1276, -1
  store i32 %1278, i32* %1275, align 4
  br label %1279

1279:                                             ; preds = %1277, %1270
  %1280 = phi i32 [ %1278, %1277 ], [ %1276, %1270 ]
  %1281 = icmp eq i32 %1280, 0
  br i1 %1281, label %1282, label %1283

1282:                                             ; preds = %1279
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1268) #12
  br label %1283

1283:                                             ; preds = %1282, %1279, %1267
  %1284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %917, align 8
  %1285 = icmp eq %"class.WTF::StringImpl"* %1284, null
  br i1 %1285, label %1299, label %1286

1286:                                             ; preds = %1283
  %1287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1288 = load atomic i32, i32* %1287 monotonic, align 4
  %1289 = and i32 %1288, 2
  %1290 = icmp eq i32 %1289, 0
  %1291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1284, i64 0, i32 0
  %1292 = load i32, i32* %1291, align 4
  br i1 %1290, label %1293, label %1295

1293:                                             ; preds = %1286
  %1294 = add i32 %1292, -1
  store i32 %1294, i32* %1291, align 4
  br label %1295

1295:                                             ; preds = %1293, %1286
  %1296 = phi i32 [ %1294, %1293 ], [ %1292, %1286 ]
  %1297 = icmp eq i32 %1296, 0
  br i1 %1297, label %1298, label %1299

1298:                                             ; preds = %1295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1284) #12
  br label %1299

1299:                                             ; preds = %1298, %1295, %1283
  %1300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %894, align 8
  %1301 = icmp eq %"class.WTF::StringImpl"* %1300, null
  br i1 %1301, label %1315, label %1302

1302:                                             ; preds = %1299
  %1303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1300, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1304 = load atomic i32, i32* %1303 monotonic, align 4
  %1305 = and i32 %1304, 2
  %1306 = icmp eq i32 %1305, 0
  %1307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1300, i64 0, i32 0
  %1308 = load i32, i32* %1307, align 4
  br i1 %1306, label %1309, label %1311

1309:                                             ; preds = %1302
  %1310 = add i32 %1308, -1
  store i32 %1310, i32* %1307, align 4
  br label %1311

1311:                                             ; preds = %1309, %1302
  %1312 = phi i32 [ %1310, %1309 ], [ %1308, %1302 ]
  %1313 = icmp eq i32 %1312, 0
  br i1 %1313, label %1314, label %1315

1314:                                             ; preds = %1311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1300) #12
  br label %1315

1315:                                             ; preds = %1314, %1311, %1299
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %848) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %847) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %846) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %845) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %844) #12
  %1316 = load i32, i32* %994, align 8
  %1317 = icmp eq i32 %1316, 0
  %1318 = xor i1 %329, true
  %1319 = or i1 %1317, %1318
  br i1 %1319, label %1321, label %1320

1320:                                             ; preds = %1315
  call void @_ZNK5blink21ContentSecurityPolicy39ReportBlockedScriptExecutionToInspectorERKN3WTF6StringE(%"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %21) #12
  br label %1321

1321:                                             ; preds = %1320, %1315
  %1322 = phi i1 [ false, %1320 ], [ %1317, %1315 ]
  %1323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %764, align 8
  %1324 = icmp eq %"class.WTF::StringImpl"* %1323, null
  br i1 %1324, label %1338, label %1325

1325:                                             ; preds = %1321
  %1326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1327 = load atomic i32, i32* %1326 monotonic, align 4
  %1328 = and i32 %1327, 2
  %1329 = icmp eq i32 %1328, 0
  %1330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1323, i64 0, i32 0
  %1331 = load i32, i32* %1330, align 4
  br i1 %1329, label %1332, label %1334

1332:                                             ; preds = %1325
  %1333 = add i32 %1331, -1
  store i32 %1333, i32* %1330, align 4
  br label %1334

1334:                                             ; preds = %1332, %1325
  %1335 = phi i32 [ %1333, %1332 ], [ %1331, %1325 ]
  %1336 = icmp eq i32 %1335, 0
  br i1 %1336, label %1337, label %1338

1337:                                             ; preds = %1334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1323) #12
  br label %1338

1338:                                             ; preds = %1337, %1334, %1321
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %763) #12
  br i1 %966, label %1352, label %1339

1339:                                             ; preds = %1338
  %1340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %762, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1341 = load atomic i32, i32* %1340 monotonic, align 4
  %1342 = and i32 %1341, 2
  %1343 = icmp eq i32 %1342, 0
  %1344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %762, i64 0, i32 0
  %1345 = load i32, i32* %1344, align 4
  br i1 %1343, label %1346, label %1348

1346:                                             ; preds = %1339
  %1347 = add i32 %1345, -1
  store i32 %1347, i32* %1344, align 4
  br label %1348

1348:                                             ; preds = %1346, %1339
  %1349 = phi i32 [ %1347, %1346 ], [ %1345, %1339 ]
  %1350 = icmp eq i32 %1349, 0
  br i1 %1350, label %1351, label %1352

1351:                                             ; preds = %1348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %762) #12
  br label %1352

1352:                                             ; preds = %319, %326, %1338, %1348, %1351
  %1353 = phi i1 [ true, %319 ], [ true, %326 ], [ %1322, %1338 ], [ %1322, %1348 ], [ %1322, %1351 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %324)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %325)
  %1354 = icmp eq %"class.WTF::StringImpl"* %323, null
  br i1 %1354, label %1368, label %1355

1355:                                             ; preds = %1352
  %1356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1357 = load atomic i32, i32* %1356 monotonic, align 4
  %1358 = and i32 %1357, 2
  %1359 = icmp eq i32 %1358, 0
  %1360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 0
  %1361 = load i32, i32* %1360, align 4
  br i1 %1359, label %1362, label %1364

1362:                                             ; preds = %1355
  %1363 = add i32 %1361, -1
  store i32 %1363, i32* %1360, align 4
  br label %1364

1364:                                             ; preds = %1362, %1355
  %1365 = phi i32 [ %1363, %1362 ], [ %1361, %1355 ]
  %1366 = icmp eq i32 %1365, 0
  br i1 %1366, label %1367, label %1368

1367:                                             ; preds = %1364
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %323) #12
  br label %1368

1368:                                             ; preds = %1352, %1364, %1367
  %1369 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  %1370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1369, align 8
  %1371 = icmp eq %"class.WTF::StringImpl"* %1370, null
  br i1 %1371, label %1385, label %1372

1372:                                             ; preds = %1368
  %1373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1370, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1374 = load atomic i32, i32* %1373 monotonic, align 4
  %1375 = and i32 %1374, 2
  %1376 = icmp eq i32 %1375, 0
  %1377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1370, i64 0, i32 0
  %1378 = load i32, i32* %1377, align 4
  br i1 %1376, label %1379, label %1381

1379:                                             ; preds = %1372
  %1380 = add i32 %1378, -1
  store i32 %1380, i32* %1377, align 4
  br label %1381

1381:                                             ; preds = %1379, %1372
  %1382 = phi i32 [ %1380, %1379 ], [ %1378, %1372 ]
  %1383 = icmp eq i32 %1382, 0
  br i1 %1383, label %1384, label %1385

1384:                                             ; preds = %1381
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1370) #12
  br label %1385

1385:                                             ; preds = %1368, %1381, %1384
  br i1 %322, label %1399, label %1386

1386:                                             ; preds = %1385
  %1387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1388 = load atomic i32, i32* %1387 monotonic, align 4
  %1389 = and i32 %1388, 2
  %1390 = icmp eq i32 %1389, 0
  %1391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %1392 = load i32, i32* %1391, align 4
  br i1 %1390, label %1393, label %1395

1393:                                             ; preds = %1386
  %1394 = add i32 %1392, -1
  store i32 %1394, i32* %1391, align 4
  br label %1395

1395:                                             ; preds = %1393, %1386
  %1396 = phi i32 [ %1394, %1393 ], [ %1392, %1386 ]
  %1397 = icmp eq i32 %1396, 0
  br i1 %1397, label %1398, label %1400

1398:                                             ; preds = %1395
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %321) #12
  br label %1400

1399:                                             ; preds = %1385
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %320) #12
  br label %1411

1400:                                             ; preds = %1395, %1398
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %320) #12
  %1401 = load atomic i32, i32* %1387 monotonic, align 4
  %1402 = and i32 %1401, 2
  %1403 = icmp eq i32 %1402, 0
  %1404 = load i32, i32* %1391, align 4
  br i1 %1403, label %1405, label %1407

1405:                                             ; preds = %1400
  %1406 = add i32 %1404, -1
  store i32 %1406, i32* %1391, align 4
  br label %1407

1407:                                             ; preds = %1405, %1400
  %1408 = phi i32 [ %1406, %1405 ], [ %1404, %1400 ]
  %1409 = icmp eq i32 %1408, 0
  br i1 %1409, label %1410, label %1411

1410:                                             ; preds = %1407
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %321) #12
  br label %1411

1411:                                             ; preds = %1399, %1407, %1410
  %1412 = inttoptr i64 %208 to %"class.WTF::StringImpl"*
  %1413 = icmp eq i64 %208, 0
  br i1 %1413, label %1430, label %1414

1414:                                             ; preds = %1411
  %1415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1412, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1416 = load atomic i32, i32* %1415 monotonic, align 4
  %1417 = and i32 %1416, 2
  %1418 = icmp eq i32 %1417, 0
  %1419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1412, i64 0, i32 0
  %1420 = load i32, i32* %1419, align 4
  br i1 %1418, label %1421, label %1423

1421:                                             ; preds = %1414
  %1422 = add i32 %1420, -1
  store i32 %1422, i32* %1419, align 4
  br label %1423

1423:                                             ; preds = %1421, %1414
  %1424 = phi i32 [ %1422, %1421 ], [ %1420, %1414 ]
  %1425 = icmp eq i32 %1424, 0
  br i1 %1425, label %1426, label %1430

1426:                                             ; preds = %1423
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1412) #12
  br label %1430

1427:                                             ; preds = %88
  br i1 %45, label %1430, label %1428

1428:                                             ; preds = %1427
  %1429 = tail call zeroext i1 @_ZN5blink27CSPSourceListAllowAllInlineEN7network5mojom16CSPDirectiveNameERKNS1_5blink13CSPSourceListE(i32 %43, %"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %44) #12
  br label %1430

1430:                                             ; preds = %84, %82, %1426, %1423, %1411, %1427, %1428, %46
  %1431 = phi i1 [ true, %46 ], [ true, %84 ], [ true, %1427 ], [ %1429, %1428 ], [ %1353, %1411 ], [ %1353, %1423 ], [ %1353, %1426 ], [ true, %82 ]
  ret i1 %1431
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture dereferenceable(144), i32, i32) unnamed_addr #1 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %84, label %5

5:                                                ; preds = %3
  %6 = icmp eq i32 %2, 0
  %7 = select i1 %6, i32 %1, i32 %2
  %8 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.6"*, %"struct.WTF::KeyValuePair.6"** %8, align 8
  %10 = icmp eq %"struct.WTF::KeyValuePair.6"* %9, null
  %11 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  br i1 %10, label %68, label %13

13:                                               ; preds = %5
  %14 = add i32 %12, -1
  %15 = zext i32 %14 to i64
  %16 = shl i32 %1, 15
  %17 = xor i32 %16, -1
  %18 = add i32 %17, %1
  %19 = lshr i32 %18, 10
  %20 = xor i32 %19, %18
  %21 = mul i32 %20, 9
  %22 = lshr i32 %21, 6
  %23 = xor i32 %22, %21
  %24 = shl i32 %23, 11
  %25 = xor i32 %24, -1
  %26 = add i32 %23, %25
  %27 = lshr i32 %26, 16
  %28 = xor i32 %27, %26
  %29 = and i32 %14, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %9, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, %1
  br i1 %34, label %63, label %35

35:                                               ; preds = %13
  %36 = xor i32 %28, -1
  %37 = lshr i32 %26, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %54, %35
  %50 = phi i32 [ %33, %35 ], [ %61, %54 ]
  %51 = phi i64 [ %30, %35 ], [ %58, %54 ]
  %52 = phi i64 [ 0, %35 ], [ %56, %54 ]
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %68, label %54

54:                                               ; preds = %49
  %55 = icmp eq i64 %52, 0
  %56 = select i1 %55, i64 %48, i64 %52
  %57 = add i64 %56, %51
  %58 = and i64 %57, %15
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %9, i64 %58
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %1
  br i1 %62, label %63, label %49

63:                                               ; preds = %54, %13
  %64 = phi %"struct.WTF::KeyValuePair.6"* [ %31, %13 ], [ %59, %54 ]
  %65 = icmp eq %"struct.WTF::KeyValuePair.6"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = zext i32 %12 to i64
  br label %71

68:                                               ; preds = %49, %63, %5
  %69 = zext i32 %12 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %9, i64 %69
  br label %71

71:                                               ; preds = %66, %68
  %72 = phi i64 [ %67, %66 ], [ %69, %68 ]
  %73 = phi %"struct.WTF::KeyValuePair.6"* [ %64, %66 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %9, i64 %72
  %75 = icmp eq %"struct.WTF::KeyValuePair.6"* %73, %74
  br i1 %75, label %79, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %78 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %77, align 8
  br label %84

79:                                               ; preds = %71
  %80 = tail call i32 @_ZN7network20CSPFallbackDirectiveENS_5mojom16CSPDirectiveNameES1_(i32 %1, i32 %7) #12
  %81 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 %80, i32 %7)
  %82 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %81, 0
  %83 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %81, 1
  br label %84

84:                                               ; preds = %76, %79, %3
  %85 = phi i32 [ 0, %3 ], [ %1, %76 ], [ %82, %79 ]
  %86 = phi %"class.network::mojom::blink::CSPSourceList"* [ null, %3 ], [ %78, %76 ], [ %83, %79 ]
  %87 = insertvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } undef, i32 %85, 0
  %88 = insertvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %87, %"class.network::mojom::blink::CSPSourceList"* %86, 1
  ret { i32, %"class.network::mojom::blink::CSPSourceList"* } %88
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink28CSPDirectiveListAllowDynamicERKN7network5mojom5blink21ContentSecurityPolicyENS1_16CSPDirectiveNameE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture dereferenceable(144), i32) local_unnamed_addr #1 {
  %3 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 %1, i32 0)
  %4 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %3, 1
  switch i32 %1, label %11 [
    i32 29, label %5
    i32 22, label %5
    i32 21, label %5
    i32 20, label %5
  ]

5:                                                ; preds = %2, %2, %2, %2
  %6 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %4, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %4, i64 0, i32 9
  %9 = load i8, i8* %8, align 2, !range !3
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %2, %5, %7
  %12 = phi i1 [ false, %2 ], [ true, %5 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #12
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %8) #12
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #12
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #12
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #12
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare zeroext i1 @_ZN5blink27CSPSourceListAllowAllInlineEN7network5mojom16CSPDirectiveNameERKNS1_5blink13CSPSourceListE(i32, %"class.network::mojom::blink::CSPSourceList"* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink31CSPDirectiveListShouldCheckEvalERKN7network5mojom5blink21ContentSecurityPolicyE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture dereferenceable(144)) local_unnamed_addr #1 {
  %2 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 20, i32 0)
  %3 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %2, 1
  %4 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %3, i64 0, i32 7
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp eq i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25CSPDirectiveListAllowEvalERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyENS_20ReportingDispositionENS6_15ExceptionStatusERKN3WTF6StringE(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144), %"class.blink::ContentSecurityPolicy"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 {
  %6 = alloca %"class.WTF::StringAppend.1497", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::HashMap", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend.1498", align 8
  %12 = alloca %"class.WTF::StringAppend.1499", align 8
  %13 = alloca %"class.WTF::StringAppend.1496", align 8
  %14 = alloca %"class.WTF::StringAppend.1497", align 8
  %15 = alloca %"class.WTF::StringAppend.1495", align 8
  %16 = alloca %"class.blink::KURL", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = icmp eq i32 %2, 1
  br i1 %18, label %19, label %526

19:                                               ; preds = %5
  %20 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.7, i64 0, i64 0), i64 152) #12
  %21 = bitcast %"class.WTF::HashMap"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21)
  %22 = call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 20, i32 0) #12
  %23 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %22, 0
  %24 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %22, 1
  %25 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %24, null
  br i1 %25, label %507, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %24, i64 0, i32 7
  %28 = load i8, i8* %27, align 4, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %507

30:                                               ; preds = %26
  %31 = icmp eq i32 %23, 5
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.37, i64 0, i64 0), i64 87) #12
  %34 = bitcast %"class.WTF::String"* %7 to i64*
  %35 = load i64, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  br label %36

36:                                               ; preds = %32, %30
  %37 = phi i64 [ %35, %32 ], [ 0, %30 ]
  %38 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0
  %41 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 20, i1 false) #12
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %80, label %44

44:                                               ; preds = %36
  call void @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %40, i32 %42) #12
  %45 = load i32, i32* %41, align 4
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %47, align 8
  %49 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 %51
  br i1 %46, label %80, label %53

53:                                               ; preds = %44
  %54 = icmp eq i32 %50, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %53, %59
  %56 = phi %"struct.WTF::KeyValuePair"* [ %60, %59 ], [ %48, %53 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  switch i32 %58, label %62 [
    i32 -1000001, label %59
    i32 0, label %59
  ]

59:                                               ; preds = %55, %55
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 1
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, %52
  br i1 %61, label %80, label %55

62:                                               ; preds = %55, %53
  %63 = phi %"struct.WTF::KeyValuePair"* [ %48, %53 ], [ %56, %55 ]
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %63, %52
  br i1 %64, label %80, label %65

65:                                               ; preds = %62, %78
  %66 = phi %"struct.WTF::KeyValuePair"* [ %72, %78 ], [ %63, %62 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS3_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %40, i32* dereferenceable(4) %67, %"struct.WTF::KeyValuePair"* dereferenceable(16) %66) #12
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 1
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %69, %52
  br i1 %70, label %80, label %71

71:                                               ; preds = %65, %75
  %72 = phi %"struct.WTF::KeyValuePair"* [ %76, %75 ], [ %69, %65 ]
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  switch i32 %74, label %78 [
    i32 -1000001, label %75
    i32 0, label %75
  ]

75:                                               ; preds = %71, %71
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 1
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %76, %52
  br i1 %77, label %80, label %71

78:                                               ; preds = %71
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %72, %52
  br i1 %79, label %80, label %65

80:                                               ; preds = %59, %78, %65, %75, %62, %44, %36
  %81 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_125GetRawDirectiveForMessageEN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEES5_(%"class.WTF::HashMap"* nonnull %9, i32 %23) #12
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %39, align 8
  %82 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, null
  br i1 %84, label %118, label %85, !prof !4

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %116, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %113, %89
  %92 = phi i64 [ 0, %89 ], [ %114, %113 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 %92, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, -1000001
  br i1 %95, label %113, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 %92, i32 1, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #12
  br label %113

113:                                              ; preds = %112, %109, %96, %91
  %114 = add nuw nsw i64 %92, 1
  %115 = icmp eq i64 %114, %90
  br i1 %115, label %116, label %91

116:                                              ; preds = %113, %85
  %117 = bitcast %"struct.WTF::KeyValuePair"* %83 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %117) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %82, align 8
  br label %118

118:                                              ; preds = %116, %80
  %119 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #12
  %120 = bitcast %"class.WTF::StringAppend.1498"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %120) #12
  %121 = bitcast %"class.WTF::StringAppend.1499"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %121) #12
  %122 = bitcast %"class.WTF::StringAppend.1496"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %122) #12
  %123 = bitcast %"class.WTF::StringAppend.1497"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #12
  %124 = bitcast %"class.WTF::StringAppend.1495"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #12
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %171, label %128

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %145

135:                                              ; preds = %128
  %136 = zext i32 %134 to i33
  %137 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %136, i33 1) #12
  %138 = extractvalue { i33, i1 } %137, 1
  %139 = extractvalue { i33, i1 } %137, 0
  %140 = icmp slt i33 %139, 0
  %141 = or i1 %138, %140
  br i1 %141, label %142, label %143, !prof !2

142:                                              ; preds = %135
  call void @llvm.trap() #12
  unreachable

143:                                              ; preds = %135
  %144 = trunc i33 %139 to i32
  store i32 %144, i32* %133, align 4
  br label %145

145:                                              ; preds = %143, %128
  %146 = phi i32 [ %144, %143 ], [ %134, %128 ]
  %147 = load atomic i32, i32* %129 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %160

150:                                              ; preds = %145
  %151 = zext i32 %146 to i33
  %152 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %151, i33 1) #12
  %153 = extractvalue { i33, i1 } %152, 1
  %154 = extractvalue { i33, i1 } %152, 0
  %155 = icmp slt i33 %154, 0
  %156 = or i1 %153, %155
  br i1 %156, label %157, label %158, !prof !2

157:                                              ; preds = %150
  call void @llvm.trap() #12
  unreachable

158:                                              ; preds = %150
  %159 = trunc i33 %154 to i32
  store i32 %159, i32* %133, align 4
  br label %160

160:                                              ; preds = %158, %145
  %161 = phi i32 [ %159, %158 ], [ %146, %145 ]
  %162 = load atomic i32, i32* %129 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  %166 = add i32 %161, -1
  store i32 %166, i32* %133, align 4
  br label %167

167:                                              ; preds = %165, %160
  %168 = phi i32 [ %166, %165 ], [ %161, %160 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #12
  br label %171

171:                                              ; preds = %170, %167, %118
  %172 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %172, align 8
  %173 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i8** %173, align 8
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %193, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %193

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i33
  %185 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %184, i33 1) #12
  %186 = extractvalue { i33, i1 } %185, 1
  %187 = extractvalue { i33, i1 } %185, 0
  %188 = icmp slt i33 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %191, !prof !2

190:                                              ; preds = %181
  call void @llvm.trap() #12
  unreachable

191:                                              ; preds = %181
  %192 = trunc i33 %187 to i32
  store i32 %192, i32* %182, align 4
  br label %193

193:                                              ; preds = %191, %176, %171
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.1497"* nonnull sret %14, %"class.WTF::StringAppend.1495"* nonnull dereferenceable(16) %15, %"class.WTF::StringImpl"* %174) #12
  %194 = bitcast %"class.WTF::StringAppend.1497"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #12
  %195 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8, !noalias !17
  %197 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %196, %"class.WTF::StringImpl"** %197, align 8, !noalias !17
  %198 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %198, label %216, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %216

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = zext i32 %206 to i33
  %208 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %207, i33 1) #12
  %209 = extractvalue { i33, i1 } %208, 1
  %210 = extractvalue { i33, i1 } %208, 0
  %211 = icmp slt i33 %210, 0
  %212 = or i1 %209, %211
  br i1 %212, label %213, label %214, !prof !2

213:                                              ; preds = %204
  call void @llvm.trap() #12
  unreachable

214:                                              ; preds = %204
  %215 = trunc i33 %210 to i32
  store i32 %215, i32* %205, align 4
  br label %216

216:                                              ; preds = %214, %199, %193
  %217 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %6, i64 0, i32 0, i32 1
  %218 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %14, i64 0, i32 0, i32 1
  %219 = bitcast i8** %218 to i64*
  %220 = load i64, i64* %219, align 8, !noalias !17
  %221 = bitcast i8** %217 to i64*
  store i64 %220, i64* %221, align 8, !noalias !17
  %222 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %14, i64 0, i32 1, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8, !noalias !17
  %224 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %224, align 8, !noalias !17
  %225 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %225, label %243, label %226

226:                                              ; preds = %216
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %243

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  %234 = zext i32 %233 to i33
  %235 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %234, i33 1) #12
  %236 = extractvalue { i33, i1 } %235, 1
  %237 = extractvalue { i33, i1 } %235, 0
  %238 = icmp slt i33 %237, 0
  %239 = or i1 %236, %238
  br i1 %239, label %240, label %241, !prof !2

240:                                              ; preds = %231
  call void @llvm.trap() #12
  unreachable

241:                                              ; preds = %231
  %242 = trunc i33 %237 to i32
  store i32 %242, i32* %232, align 4
  br label %243

243:                                              ; preds = %241, %226, %216
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1496"* nonnull %13, %"class.WTF::StringAppend.1497"* nonnull byval(%"class.WTF::StringAppend.1497") align 8 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #12
  %244 = inttoptr i64 %37 to %"class.WTF::StringImpl"*
  %245 = icmp eq i64 %37, 0
  br i1 %245, label %263, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %263

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = zext i32 %253 to i33
  %255 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %254, i33 1) #12
  %256 = extractvalue { i33, i1 } %255, 1
  %257 = extractvalue { i33, i1 } %255, 0
  %258 = icmp slt i33 %257, 0
  %259 = or i1 %256, %258
  br i1 %259, label %260, label %261, !prof !2

260:                                              ; preds = %251
  call void @llvm.trap() #12
  unreachable

261:                                              ; preds = %251
  %262 = trunc i33 %257 to i32
  store i32 %262, i32* %252, align 4
  br label %263

263:                                              ; preds = %261, %246, %243
  call void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S2_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.1499"* nonnull sret %12, %"class.WTF::StringAppend.1496"* nonnull dereferenceable(32) %13, %"class.WTF::StringImpl"* %244) #12
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringEPKcEES2_EES4_EES2_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.1498"* nonnull sret %11, %"class.WTF::StringAppend.1499"* nonnull dereferenceable(40) %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0)) #12
  %264 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.1498"* nonnull %11) #12
  %265 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %264, %"class.WTF::StringImpl"** %265, align 8
  %266 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %266) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %16) #12
  %267 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %24, i64 0, i32 11
  %268 = load i8, i8* %267, align 8, !range !3
  %269 = icmp eq i8 %268, 0
  %270 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %271 = select i1 %269, %"class.WTF::String"* %270, %"class.WTF::String"* %4
  call fastcc void @_ZN5blink12_GLOBAL__N_119ReportEvalViolationERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyERKN3WTF6StringENS2_16CSPDirectiveNameESC_RKNS_4KURLENS7_15ExceptionStatusESC_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, %"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::KURL"* nonnull dereferenceable(112) %16, i32 %3, %"class.WTF::String"* dereferenceable(8) %271) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %266) #12
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %272, null
  br i1 %273, label %287, label %274

274:                                              ; preds = %263
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  br i1 %278, label %281, label %283

281:                                              ; preds = %274
  %282 = add i32 %280, -1
  store i32 %282, i32* %279, align 4
  br label %283

283:                                              ; preds = %281, %274
  %284 = phi i32 [ %282, %281 ], [ %280, %274 ]
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %283
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %272) #12
  br label %287

287:                                              ; preds = %286, %283, %263
  %288 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %304, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #12
  br label %304

304:                                              ; preds = %303, %300, %287
  %305 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %307 = icmp eq %"class.WTF::StringImpl"* %306, null
  br i1 %307, label %321, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = and i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  br i1 %312, label %315, label %317

315:                                              ; preds = %308
  %316 = add i32 %314, -1
  store i32 %316, i32* %313, align 4
  br label %317

317:                                              ; preds = %315, %308
  %318 = phi i32 [ %316, %315 ], [ %314, %308 ]
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %306) #12
  br label %321

321:                                              ; preds = %320, %317, %304
  %322 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  %324 = icmp eq %"class.WTF::StringImpl"* %323, null
  br i1 %324, label %338, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load atomic i32, i32* %326 monotonic, align 4
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 0
  %331 = load i32, i32* %330, align 4
  br i1 %329, label %332, label %334

332:                                              ; preds = %325
  %333 = add i32 %331, -1
  store i32 %333, i32* %330, align 4
  br label %334

334:                                              ; preds = %332, %325
  %335 = phi i32 [ %333, %332 ], [ %331, %325 ]
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %323) #12
  br label %338

338:                                              ; preds = %337, %334, %321
  %339 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %12, i64 0, i32 1, i32 0, i32 0
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %339, align 8
  %341 = icmp eq %"class.WTF::StringImpl"* %340, null
  br i1 %341, label %355, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load atomic i32, i32* %343 monotonic, align 4
  %345 = and i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  br i1 %346, label %349, label %351

349:                                              ; preds = %342
  %350 = add i32 %348, -1
  store i32 %350, i32* %347, align 4
  br label %351

351:                                              ; preds = %349, %342
  %352 = phi i32 [ %350, %349 ], [ %348, %342 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %340) #12
  br label %355

355:                                              ; preds = %354, %351, %338
  %356 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %357 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  %358 = icmp eq %"class.WTF::StringImpl"* %357, null
  br i1 %358, label %372, label %359

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = and i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 0
  %365 = load i32, i32* %364, align 4
  br i1 %363, label %366, label %368

366:                                              ; preds = %359
  %367 = add i32 %365, -1
  store i32 %367, i32* %364, align 4
  br label %368

368:                                              ; preds = %366, %359
  %369 = phi i32 [ %367, %366 ], [ %365, %359 ]
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %368
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %357) #12
  br label %372

372:                                              ; preds = %371, %368, %355
  %373 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %373, align 8
  %375 = icmp eq %"class.WTF::StringImpl"* %374, null
  br i1 %375, label %389, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = and i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  br i1 %380, label %383, label %385

383:                                              ; preds = %376
  %384 = add i32 %382, -1
  store i32 %384, i32* %381, align 4
  br label %385

385:                                              ; preds = %383, %376
  %386 = phi i32 [ %384, %383 ], [ %382, %376 ]
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %389

388:                                              ; preds = %385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #12
  br label %389

389:                                              ; preds = %388, %385, %372
  %390 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %390, align 8
  %392 = icmp eq %"class.WTF::StringImpl"* %391, null
  br i1 %392, label %406, label %393

393:                                              ; preds = %389
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load atomic i32, i32* %394 monotonic, align 4
  %396 = and i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 0
  %399 = load i32, i32* %398, align 4
  br i1 %397, label %400, label %402

400:                                              ; preds = %393
  %401 = add i32 %399, -1
  store i32 %401, i32* %398, align 4
  br label %402

402:                                              ; preds = %400, %393
  %403 = phi i32 [ %401, %400 ], [ %399, %393 ]
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %406

405:                                              ; preds = %402
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %391) #12
  br label %406

406:                                              ; preds = %405, %402, %389
  %407 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %423, label %410

410:                                              ; preds = %406
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  br i1 %414, label %417, label %419

417:                                              ; preds = %410
  %418 = add i32 %416, -1
  store i32 %418, i32* %415, align 4
  br label %419

419:                                              ; preds = %417, %410
  %420 = phi i32 [ %418, %417 ], [ %416, %410 ]
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %423

422:                                              ; preds = %419
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %408) #12
  br label %423

423:                                              ; preds = %422, %419, %406
  %424 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %425 = icmp eq %"class.WTF::StringImpl"* %424, null
  br i1 %425, label %439, label %426

426:                                              ; preds = %423
  %427 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %424, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %428 = load atomic i32, i32* %427 monotonic, align 4
  %429 = and i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %424, i64 0, i32 0
  %432 = load i32, i32* %431, align 4
  br i1 %430, label %433, label %435

433:                                              ; preds = %426
  %434 = add i32 %432, -1
  store i32 %434, i32* %431, align 4
  br label %435

435:                                              ; preds = %433, %426
  %436 = phi i32 [ %434, %433 ], [ %432, %426 ]
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %439

438:                                              ; preds = %435
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %424) #12
  br label %439

439:                                              ; preds = %438, %435, %423
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %441 = icmp eq %"class.WTF::StringImpl"* %440, null
  br i1 %441, label %455, label %442

442:                                              ; preds = %439
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = load atomic i32, i32* %443 monotonic, align 4
  %445 = and i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 0
  %448 = load i32, i32* %447, align 4
  br i1 %446, label %449, label %451

449:                                              ; preds = %442
  %450 = add i32 %448, -1
  store i32 %450, i32* %447, align 4
  br label %451

451:                                              ; preds = %449, %442
  %452 = phi i32 [ %450, %449 ], [ %448, %442 ]
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %455

454:                                              ; preds = %451
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %440) #12
  br label %455

455:                                              ; preds = %454, %451, %439
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %455
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #12
  br label %471

471:                                              ; preds = %470, %467, %455
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %122) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %121) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %120) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #12
  %472 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %473 = load i32, i32* %472, align 8
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %476, label %475

475:                                              ; preds = %471
  call void @_ZNK5blink21ContentSecurityPolicy39ReportBlockedScriptExecutionToInspectorERKN3WTF6StringE(%"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  br label %476

476:                                              ; preds = %475, %471
  %477 = phi i1 [ false, %475 ], [ true, %471 ]
  %478 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %479 = icmp eq %"class.WTF::StringImpl"* %478, null
  br i1 %479, label %493, label %480

480:                                              ; preds = %476
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = load atomic i32, i32* %481 monotonic, align 4
  %483 = and i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 0
  %486 = load i32, i32* %485, align 4
  br i1 %484, label %487, label %489

487:                                              ; preds = %480
  %488 = add i32 %486, -1
  store i32 %488, i32* %485, align 4
  br label %489

489:                                              ; preds = %487, %480
  %490 = phi i32 [ %488, %487 ], [ %486, %480 ]
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %493

492:                                              ; preds = %489
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %478) #12
  br label %493

493:                                              ; preds = %492, %489, %476
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  br i1 %245, label %507, label %494

494:                                              ; preds = %493
  %495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %496 = load atomic i32, i32* %495 monotonic, align 4
  %497 = and i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %500 = load i32, i32* %499, align 4
  br i1 %498, label %501, label %503

501:                                              ; preds = %494
  %502 = add i32 %500, -1
  store i32 %502, i32* %499, align 4
  br label %503

503:                                              ; preds = %501, %494
  %504 = phi i32 [ %502, %501 ], [ %500, %494 ]
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %507

506:                                              ; preds = %503
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %244) #12
  br label %507

507:                                              ; preds = %19, %26, %493, %503, %506
  %508 = phi i1 [ true, %26 ], [ %477, %493 ], [ %477, %503 ], [ %477, %506 ], [ true, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21)
  %509 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %510, null
  br i1 %511, label %525, label %512

512:                                              ; preds = %507
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %514 = load atomic i32, i32* %513 monotonic, align 4
  %515 = and i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 0
  %518 = load i32, i32* %517, align 4
  br i1 %516, label %519, label %521

519:                                              ; preds = %512
  %520 = add i32 %518, -1
  store i32 %520, i32* %517, align 4
  br label %521

521:                                              ; preds = %519, %512
  %522 = phi i32 [ %520, %519 ], [ %518, %512 ]
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %525

524:                                              ; preds = %521
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %510) #12
  br label %525

525:                                              ; preds = %507, %521, %524
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %538

526:                                              ; preds = %5
  %527 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %528 = load i32, i32* %527, align 8
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %538, label %530

530:                                              ; preds = %526
  %531 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 20, i32 0)
  %532 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %531, 1
  %533 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %532, null
  br i1 %533, label %538, label %534

534:                                              ; preds = %530
  %535 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %532, i64 0, i32 7
  %536 = load i8, i8* %535, align 4, !range !3
  %537 = icmp ne i8 %536, 0
  br label %538

538:                                              ; preds = %534, %530, %526, %525
  %539 = phi i1 [ %508, %525 ], [ true, %526 ], [ true, %530 ], [ %537, %534 ]
  ret i1 %539
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink39CSPDirectiveListAllowWasmCodeGenerationERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyENS_20ReportingDispositionENS6_15ExceptionStatusERKN3WTF6StringE(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144), %"class.blink::ContentSecurityPolicy"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 {
  %6 = alloca %"class.WTF::StringAppend.1497", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::HashMap", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend.1498", align 8
  %12 = alloca %"class.WTF::StringAppend.1499", align 8
  %13 = alloca %"class.WTF::StringAppend.1496", align 8
  %14 = alloca %"class.WTF::StringAppend.1497", align 8
  %15 = alloca %"class.WTF::StringAppend.1495", align 8
  %16 = alloca %"class.blink::KURL", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::StringAppend", align 8
  %19 = icmp eq i32 %2, 1
  br i1 %19, label %20, label %700

20:                                               ; preds = %5
  %21 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %22, align 8
  %23 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase28is_web_assembly_csp_enabled_E, align 1, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %34

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::ContentSecurityPolicy", %"class.blink::ContentSecurityPolicy"* %1, i64 0, i32 16
  %27 = load i8, i8* %26, align 4, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %30, align 8
  %32 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %31, i64 0, i32 0
  %33 = tail call zeroext i1 @_ZN5blink14SchemeRegistry25SchemeSupportsWasmEvalCSPERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %32) #12
  br i1 %33, label %34, label %35

34:                                               ; preds = %20, %25, %29
  br label %35

35:                                               ; preds = %29, %34
  %36 = phi i8* [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0), %34 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), %29 ]
  %37 = tail call i64 @strlen(i8* nonnull %36) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* nonnull %36, i64 %37) #12
  %38 = bitcast %"class.WTF::StringAppend"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %116, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %58

48:                                               ; preds = %41
  %49 = zext i32 %47 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #12
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !2

55:                                               ; preds = %48
  call void @llvm.trap() #12
  unreachable

56:                                               ; preds = %48
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %46, align 4
  br label %58

58:                                               ; preds = %56, %41
  %59 = phi i32 [ %57, %56 ], [ %47, %41 ]
  %60 = load atomic i32, i32* %42 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %73

63:                                               ; preds = %58
  %64 = zext i32 %59 to i33
  %65 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #12
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %63
  call void @llvm.trap() #12
  unreachable

71:                                               ; preds = %63
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %46, align 4
  br label %73

73:                                               ; preds = %71, %58
  %74 = phi i32 [ %72, %71 ], [ %59, %58 ]
  %75 = load atomic i32, i32* %42 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = add i32 %74, -1
  store i32 %79, i32* %46, align 4
  br label %80

80:                                               ; preds = %78, %73
  %81 = phi i32 [ %79, %78 ], [ %74, %73 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12
  br label %84

84:                                               ; preds = %80, %83
  %85 = load atomic i32, i32* %42 monotonic, align 4, !noalias !20
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = load i32, i32* %46, align 4
  br i1 %87, label %89, label %99

89:                                               ; preds = %84
  %90 = zext i32 %88 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %89
  call void @llvm.trap() #12, !noalias !20
  unreachable

97:                                               ; preds = %89
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %46, align 4, !noalias !20
  br label %99

99:                                               ; preds = %84, %97
  %100 = phi i32 [ %98, %97 ], [ %88, %84 ]
  %101 = bitcast %"class.WTF::StringAppend"* %18 to i64*
  store i64 ptrtoint ([62 x i8]* @.str.10 to i64), i64* %101, align 8, !alias.scope !20
  %102 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %102, align 8, !alias.scope !20
  %103 = load atomic i32, i32* %42 monotonic, align 4, !noalias !20
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %120

106:                                              ; preds = %99
  %107 = zext i32 %100 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #12
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !2

113:                                              ; preds = %106
  call void @llvm.trap() #12, !noalias !20
  unreachable

114:                                              ; preds = %106
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %46, align 4, !noalias !20
  br label %120

116:                                              ; preds = %35
  %117 = bitcast %"class.WTF::StringAppend"* %18 to i64*
  store i64 ptrtoint ([62 x i8]* @.str.10 to i64), i64* %117, align 8, !alias.scope !20
  %118 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %118, align 8, !alias.scope !20
  %119 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.11, i64 0, i64 0), i8** %119, align 8, !alias.scope !20
  br label %132

120:                                              ; preds = %114, %99
  %121 = phi i32 [ %115, %114 ], [ %100, %99 ]
  %122 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.11, i64 0, i64 0), i8** %122, align 8, !alias.scope !20
  %123 = load atomic i32, i32* %42 monotonic, align 4, !noalias !20
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %120
  %127 = add i32 %121, -1
  store i32 %127, i32* %46, align 4, !noalias !20
  br label %128

128:                                              ; preds = %126, %120
  %129 = phi i32 [ %127, %126 ], [ %121, %120 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12, !noalias !20
  br label %132

132:                                              ; preds = %116, %128, %131
  %133 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %18)
  %134 = bitcast %"class.WTF::HashMap"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134)
  %135 = call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 20, i32 0) #12
  %136 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %135, 1
  %137 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %136, null
  br i1 %137, label %636, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %136, i64 0, i32 7
  %140 = load i8, i8* %139, align 4, !range !3
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %636

142:                                              ; preds = %138
  %143 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase28is_web_assembly_csp_enabled_E, align 1, !range !3
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %154

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.blink::ContentSecurityPolicy", %"class.blink::ContentSecurityPolicy"* %1, i64 0, i32 16
  %147 = load i8, i8* %146, align 4, !range !3
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %154

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %150, align 8
  %152 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %151, i64 0, i32 0
  %153 = call zeroext i1 @_ZN5blink14SchemeRegistry25SchemeSupportsWasmEvalCSPERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %152) #12
  br i1 %153, label %154, label %158

154:                                              ; preds = %149, %145, %142
  %155 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %136, i64 0, i32 8
  %156 = load i8, i8* %155, align 1, !range !3
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %636

158:                                              ; preds = %154, %149
  %159 = call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 20, i32 0) #12
  %160 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %159, 0
  %161 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %159, 1
  %162 = icmp eq i32 %160, 5
  br i1 %162, label %163, label %167

163:                                              ; preds = %158
  %164 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.37, i64 0, i64 0), i64 87) #12
  %165 = bitcast %"class.WTF::String"* %7 to i64*
  %166 = load i64, i64* %165, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #12
  br label %167

167:                                              ; preds = %163, %158
  %168 = phi i64 [ %166, %163 ], [ 0, %158 ]
  %169 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #12
  %170 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %170, align 8
  %171 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0
  %172 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 20, i1 false) #12
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %211, label %175

175:                                              ; preds = %167
  call void @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %171, i32 %173) #12
  %176 = load i32, i32* %172, align 4
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %179 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %178, align 8
  %180 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %179, i64 %182
  br i1 %177, label %211, label %184

184:                                              ; preds = %175
  %185 = icmp eq i32 %181, 0
  br i1 %185, label %193, label %186

186:                                              ; preds = %184, %190
  %187 = phi %"struct.WTF::KeyValuePair"* [ %191, %190 ], [ %179, %184 ]
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %187, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  switch i32 %189, label %193 [
    i32 -1000001, label %190
    i32 0, label %190
  ]

190:                                              ; preds = %186, %186
  %191 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %187, i64 1
  %192 = icmp eq %"struct.WTF::KeyValuePair"* %191, %183
  br i1 %192, label %211, label %186

193:                                              ; preds = %186, %184
  %194 = phi %"struct.WTF::KeyValuePair"* [ %179, %184 ], [ %187, %186 ]
  %195 = icmp eq %"struct.WTF::KeyValuePair"* %194, %183
  br i1 %195, label %211, label %196

196:                                              ; preds = %193, %209
  %197 = phi %"struct.WTF::KeyValuePair"* [ %203, %209 ], [ %194, %193 ]
  %198 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %197, i64 0, i32 0
  %199 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS3_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %171, i32* dereferenceable(4) %198, %"struct.WTF::KeyValuePair"* dereferenceable(16) %197) #12
  %200 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %197, i64 1
  %201 = icmp eq %"struct.WTF::KeyValuePair"* %200, %183
  br i1 %201, label %211, label %202

202:                                              ; preds = %196, %206
  %203 = phi %"struct.WTF::KeyValuePair"* [ %207, %206 ], [ %200, %196 ]
  %204 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  switch i32 %205, label %209 [
    i32 -1000001, label %206
    i32 0, label %206
  ]

206:                                              ; preds = %202, %202
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %203, i64 1
  %208 = icmp eq %"struct.WTF::KeyValuePair"* %207, %183
  br i1 %208, label %211, label %202

209:                                              ; preds = %202
  %210 = icmp eq %"struct.WTF::KeyValuePair"* %203, %183
  br i1 %210, label %211, label %196

211:                                              ; preds = %190, %209, %196, %206, %193, %175, %167
  %212 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_125GetRawDirectiveForMessageEN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEES5_(%"class.WTF::HashMap"* nonnull %9, i32 %160) #12
  store %"class.WTF::StringImpl"* %212, %"class.WTF::StringImpl"** %170, align 8
  %213 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0, i32 0
  %214 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %213, align 8
  %215 = icmp eq %"struct.WTF::KeyValuePair"* %214, null
  br i1 %215, label %249, label %216, !prof !4

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0, i32 1
  %218 = load i32, i32* %217, align 8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %247, label %220

220:                                              ; preds = %216
  %221 = zext i32 %218 to i64
  br label %222

222:                                              ; preds = %244, %220
  %223 = phi i64 [ 0, %220 ], [ %245, %244 ]
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %214, i64 %223, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, -1000001
  br i1 %226, label %244, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %214, i64 %223, i32 1, i32 0, i32 0
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #12
  br label %244

244:                                              ; preds = %243, %240, %227, %222
  %245 = add nuw nsw i64 %223, 1
  %246 = icmp eq i64 %245, %221
  br i1 %246, label %247, label %222

247:                                              ; preds = %244, %216
  %248 = bitcast %"struct.WTF::KeyValuePair"* %214 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %248) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %213, align 8
  br label %249

249:                                              ; preds = %247, %211
  %250 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #12
  %251 = bitcast %"class.WTF::StringAppend.1498"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %251) #12
  %252 = bitcast %"class.WTF::StringAppend.1499"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %252) #12
  %253 = bitcast %"class.WTF::StringAppend.1496"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %253) #12
  %254 = bitcast %"class.WTF::StringAppend.1497"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %254) #12
  %255 = bitcast %"class.WTF::StringAppend.1495"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %255) #12
  %256 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %256, label %300, label %257

257:                                              ; preds = %249
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %274

264:                                              ; preds = %257
  %265 = zext i32 %263 to i33
  %266 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %265, i33 1) #12
  %267 = extractvalue { i33, i1 } %266, 1
  %268 = extractvalue { i33, i1 } %266, 0
  %269 = icmp slt i33 %268, 0
  %270 = or i1 %267, %269
  br i1 %270, label %271, label %272, !prof !2

271:                                              ; preds = %264
  call void @llvm.trap() #12
  unreachable

272:                                              ; preds = %264
  %273 = trunc i33 %268 to i32
  store i32 %273, i32* %262, align 4
  br label %274

274:                                              ; preds = %272, %257
  %275 = phi i32 [ %273, %272 ], [ %263, %257 ]
  %276 = load atomic i32, i32* %258 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %289

279:                                              ; preds = %274
  %280 = zext i32 %275 to i33
  %281 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %280, i33 1) #12
  %282 = extractvalue { i33, i1 } %281, 1
  %283 = extractvalue { i33, i1 } %281, 0
  %284 = icmp slt i33 %283, 0
  %285 = or i1 %282, %284
  br i1 %285, label %286, label %287, !prof !2

286:                                              ; preds = %279
  call void @llvm.trap() #12
  unreachable

287:                                              ; preds = %279
  %288 = trunc i33 %283 to i32
  store i32 %288, i32* %262, align 4
  br label %289

289:                                              ; preds = %287, %274
  %290 = phi i32 [ %288, %287 ], [ %275, %274 ]
  %291 = load atomic i32, i32* %258 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %296

294:                                              ; preds = %289
  %295 = add i32 %290, -1
  store i32 %295, i32* %262, align 4
  br label %296

296:                                              ; preds = %294, %289
  %297 = phi i32 [ %295, %294 ], [ %290, %289 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #12
  br label %300

300:                                              ; preds = %299, %296, %249
  %301 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %133, %"class.WTF::StringImpl"** %301, align 8
  %302 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i8** %302, align 8
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %322, label %305

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %322

310:                                              ; preds = %305
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %312 = load i32, i32* %311, align 4
  %313 = zext i32 %312 to i33
  %314 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %313, i33 1) #12
  %315 = extractvalue { i33, i1 } %314, 1
  %316 = extractvalue { i33, i1 } %314, 0
  %317 = icmp slt i33 %316, 0
  %318 = or i1 %315, %317
  br i1 %318, label %319, label %320, !prof !2

319:                                              ; preds = %310
  call void @llvm.trap() #12
  unreachable

320:                                              ; preds = %310
  %321 = trunc i33 %316 to i32
  store i32 %321, i32* %311, align 4
  br label %322

322:                                              ; preds = %320, %305, %300
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.1497"* nonnull sret %14, %"class.WTF::StringAppend.1495"* nonnull dereferenceable(16) %15, %"class.WTF::StringImpl"* %303) #12
  %323 = bitcast %"class.WTF::StringAppend.1497"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #12
  %324 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8, !noalias !23
  %326 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %325, %"class.WTF::StringImpl"** %326, align 8, !noalias !23
  %327 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %327, label %345, label %328

328:                                              ; preds = %322
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %345

333:                                              ; preds = %328
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = zext i32 %335 to i33
  %337 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %336, i33 1) #12
  %338 = extractvalue { i33, i1 } %337, 1
  %339 = extractvalue { i33, i1 } %337, 0
  %340 = icmp slt i33 %339, 0
  %341 = or i1 %338, %340
  br i1 %341, label %342, label %343, !prof !2

342:                                              ; preds = %333
  call void @llvm.trap() #12
  unreachable

343:                                              ; preds = %333
  %344 = trunc i33 %339 to i32
  store i32 %344, i32* %334, align 4
  br label %345

345:                                              ; preds = %343, %328, %322
  %346 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %6, i64 0, i32 0, i32 1
  %347 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %14, i64 0, i32 0, i32 1
  %348 = bitcast i8** %347 to i64*
  %349 = load i64, i64* %348, align 8, !noalias !23
  %350 = bitcast i8** %346 to i64*
  store i64 %349, i64* %350, align 8, !noalias !23
  %351 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %14, i64 0, i32 1, i32 0, i32 0
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8, !noalias !23
  %353 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %352, %"class.WTF::StringImpl"** %353, align 8, !noalias !23
  %354 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %354, label %372, label %355

355:                                              ; preds = %345
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %372

360:                                              ; preds = %355
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = zext i32 %362 to i33
  %364 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %363, i33 1) #12
  %365 = extractvalue { i33, i1 } %364, 1
  %366 = extractvalue { i33, i1 } %364, 0
  %367 = icmp slt i33 %366, 0
  %368 = or i1 %365, %367
  br i1 %368, label %369, label %370, !prof !2

369:                                              ; preds = %360
  call void @llvm.trap() #12
  unreachable

370:                                              ; preds = %360
  %371 = trunc i33 %366 to i32
  store i32 %371, i32* %361, align 4
  br label %372

372:                                              ; preds = %370, %355, %345
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1496"* nonnull %13, %"class.WTF::StringAppend.1497"* nonnull byval(%"class.WTF::StringAppend.1497") align 8 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #12
  %373 = inttoptr i64 %168 to %"class.WTF::StringImpl"*
  %374 = icmp eq i64 %168, 0
  br i1 %374, label %392, label %375

375:                                              ; preds = %372
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load atomic i32, i32* %376 monotonic, align 4
  %378 = and i32 %377, 2
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %392

380:                                              ; preds = %375
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  %383 = zext i32 %382 to i33
  %384 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %383, i33 1) #12
  %385 = extractvalue { i33, i1 } %384, 1
  %386 = extractvalue { i33, i1 } %384, 0
  %387 = icmp slt i33 %386, 0
  %388 = or i1 %385, %387
  br i1 %388, label %389, label %390, !prof !2

389:                                              ; preds = %380
  call void @llvm.trap() #12
  unreachable

390:                                              ; preds = %380
  %391 = trunc i33 %386 to i32
  store i32 %391, i32* %381, align 4
  br label %392

392:                                              ; preds = %390, %375, %372
  call void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S2_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.1499"* nonnull sret %12, %"class.WTF::StringAppend.1496"* nonnull dereferenceable(32) %13, %"class.WTF::StringImpl"* %373) #12
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringEPKcEES2_EES4_EES2_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.1498"* nonnull sret %11, %"class.WTF::StringAppend.1499"* nonnull dereferenceable(40) %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0)) #12
  %393 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.1498"* nonnull %11) #12
  %394 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %393, %"class.WTF::StringImpl"** %394, align 8
  %395 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %395) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %16) #12
  %396 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %161, i64 0, i32 11
  %397 = load i8, i8* %396, align 8, !range !3
  %398 = icmp eq i8 %397, 0
  %399 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %400 = select i1 %398, %"class.WTF::String"* %399, %"class.WTF::String"* %4
  call fastcc void @_ZN5blink12_GLOBAL__N_119ReportEvalViolationERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyERKN3WTF6StringENS2_16CSPDirectiveNameESC_RKNS_4KURLENS7_15ExceptionStatusESC_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, %"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::KURL"* nonnull dereferenceable(112) %16, i32 %3, %"class.WTF::String"* dereferenceable(8) %400) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %395) #12
  %401 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8
  %402 = icmp eq %"class.WTF::StringImpl"* %401, null
  br i1 %402, label %416, label %403

403:                                              ; preds = %392
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %401, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = load atomic i32, i32* %404 monotonic, align 4
  %406 = and i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %401, i64 0, i32 0
  %409 = load i32, i32* %408, align 4
  br i1 %407, label %410, label %412

410:                                              ; preds = %403
  %411 = add i32 %409, -1
  store i32 %411, i32* %408, align 4
  br label %412

412:                                              ; preds = %410, %403
  %413 = phi i32 [ %411, %410 ], [ %409, %403 ]
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %416

415:                                              ; preds = %412
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %401) #12
  br label %416

416:                                              ; preds = %415, %412, %392
  %417 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %418 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %417, align 8
  %419 = icmp eq %"class.WTF::StringImpl"* %418, null
  br i1 %419, label %433, label %420

420:                                              ; preds = %416
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  br i1 %424, label %427, label %429

427:                                              ; preds = %420
  %428 = add i32 %426, -1
  store i32 %428, i32* %425, align 4
  br label %429

429:                                              ; preds = %427, %420
  %430 = phi i32 [ %428, %427 ], [ %426, %420 ]
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %429
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %418) #12
  br label %433

433:                                              ; preds = %432, %429, %416
  %434 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %434, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %435, null
  br i1 %436, label %450, label %437

437:                                              ; preds = %433
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load atomic i32, i32* %438 monotonic, align 4
  %440 = and i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 0
  %443 = load i32, i32* %442, align 4
  br i1 %441, label %444, label %446

444:                                              ; preds = %437
  %445 = add i32 %443, -1
  store i32 %445, i32* %442, align 4
  br label %446

446:                                              ; preds = %444, %437
  %447 = phi i32 [ %445, %444 ], [ %443, %437 ]
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %450

449:                                              ; preds = %446
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %435) #12
  br label %450

450:                                              ; preds = %449, %446, %433
  %451 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %451, align 8
  %453 = icmp eq %"class.WTF::StringImpl"* %452, null
  br i1 %453, label %467, label %454

454:                                              ; preds = %450
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %452) #12
  br label %467

467:                                              ; preds = %466, %463, %450
  %468 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %12, i64 0, i32 1, i32 0, i32 0
  %469 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %468, align 8
  %470 = icmp eq %"class.WTF::StringImpl"* %469, null
  br i1 %470, label %484, label %471

471:                                              ; preds = %467
  %472 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %469, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load atomic i32, i32* %472 monotonic, align 4
  %474 = and i32 %473, 2
  %475 = icmp eq i32 %474, 0
  %476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %469, i64 0, i32 0
  %477 = load i32, i32* %476, align 4
  br i1 %475, label %478, label %480

478:                                              ; preds = %471
  %479 = add i32 %477, -1
  store i32 %479, i32* %476, align 4
  br label %480

480:                                              ; preds = %478, %471
  %481 = phi i32 [ %479, %478 ], [ %477, %471 ]
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %484

483:                                              ; preds = %480
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %469) #12
  br label %484

484:                                              ; preds = %483, %480, %467
  %485 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %485, align 8
  %487 = icmp eq %"class.WTF::StringImpl"* %486, null
  br i1 %487, label %501, label %488

488:                                              ; preds = %484
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = and i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 0
  %494 = load i32, i32* %493, align 4
  br i1 %492, label %495, label %497

495:                                              ; preds = %488
  %496 = add i32 %494, -1
  store i32 %496, i32* %493, align 4
  br label %497

497:                                              ; preds = %495, %488
  %498 = phi i32 [ %496, %495 ], [ %494, %488 ]
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %501

500:                                              ; preds = %497
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %486) #12
  br label %501

501:                                              ; preds = %500, %497, %484
  %502 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %503 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %502, align 8
  %504 = icmp eq %"class.WTF::StringImpl"* %503, null
  br i1 %504, label %518, label %505

505:                                              ; preds = %501
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %503, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = load atomic i32, i32* %506 monotonic, align 4
  %508 = and i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %503, i64 0, i32 0
  %511 = load i32, i32* %510, align 4
  br i1 %509, label %512, label %514

512:                                              ; preds = %505
  %513 = add i32 %511, -1
  store i32 %513, i32* %510, align 4
  br label %514

514:                                              ; preds = %512, %505
  %515 = phi i32 [ %513, %512 ], [ %511, %505 ]
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %517, label %518

517:                                              ; preds = %514
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %503) #12
  br label %518

518:                                              ; preds = %517, %514, %501
  %519 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %520 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %519, align 8
  %521 = icmp eq %"class.WTF::StringImpl"* %520, null
  br i1 %521, label %535, label %522

522:                                              ; preds = %518
  %523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %524 = load atomic i32, i32* %523 monotonic, align 4
  %525 = and i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 0
  %528 = load i32, i32* %527, align 4
  br i1 %526, label %529, label %531

529:                                              ; preds = %522
  %530 = add i32 %528, -1
  store i32 %530, i32* %527, align 4
  br label %531

531:                                              ; preds = %529, %522
  %532 = phi i32 [ %530, %529 ], [ %528, %522 ]
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %534, label %535

534:                                              ; preds = %531
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %520) #12
  br label %535

535:                                              ; preds = %534, %531, %518
  %536 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %536, align 8
  %538 = icmp eq %"class.WTF::StringImpl"* %537, null
  br i1 %538, label %552, label %539

539:                                              ; preds = %535
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %541 = load atomic i32, i32* %540 monotonic, align 4
  %542 = and i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 0
  %545 = load i32, i32* %544, align 4
  br i1 %543, label %546, label %548

546:                                              ; preds = %539
  %547 = add i32 %545, -1
  store i32 %547, i32* %544, align 4
  br label %548

548:                                              ; preds = %546, %539
  %549 = phi i32 [ %547, %546 ], [ %545, %539 ]
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %551, label %552

551:                                              ; preds = %548
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %537) #12
  br label %552

552:                                              ; preds = %551, %548, %535
  %553 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8
  %554 = icmp eq %"class.WTF::StringImpl"* %553, null
  br i1 %554, label %568, label %555

555:                                              ; preds = %552
  %556 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %553, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %557 = load atomic i32, i32* %556 monotonic, align 4
  %558 = and i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %553, i64 0, i32 0
  %561 = load i32, i32* %560, align 4
  br i1 %559, label %562, label %564

562:                                              ; preds = %555
  %563 = add i32 %561, -1
  store i32 %563, i32* %560, align 4
  br label %564

564:                                              ; preds = %562, %555
  %565 = phi i32 [ %563, %562 ], [ %561, %555 ]
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %567, label %568

567:                                              ; preds = %564
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %553) #12
  br label %568

568:                                              ; preds = %567, %564, %552
  %569 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %570 = icmp eq %"class.WTF::StringImpl"* %569, null
  br i1 %570, label %584, label %571

571:                                              ; preds = %568
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %573 = load atomic i32, i32* %572 monotonic, align 4
  %574 = and i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 0
  %577 = load i32, i32* %576, align 4
  br i1 %575, label %578, label %580

578:                                              ; preds = %571
  %579 = add i32 %577, -1
  store i32 %579, i32* %576, align 4
  br label %580

580:                                              ; preds = %578, %571
  %581 = phi i32 [ %579, %578 ], [ %577, %571 ]
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %583, label %584

583:                                              ; preds = %580
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %569) #12
  br label %584

584:                                              ; preds = %583, %580, %568
  %585 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %586 = icmp eq %"class.WTF::StringImpl"* %585, null
  br i1 %586, label %600, label %587

587:                                              ; preds = %584
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %585, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %589 = load atomic i32, i32* %588 monotonic, align 4
  %590 = and i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %585, i64 0, i32 0
  %593 = load i32, i32* %592, align 4
  br i1 %591, label %594, label %596

594:                                              ; preds = %587
  %595 = add i32 %593, -1
  store i32 %595, i32* %592, align 4
  br label %596

596:                                              ; preds = %594, %587
  %597 = phi i32 [ %595, %594 ], [ %593, %587 ]
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %599, label %600

599:                                              ; preds = %596
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %585) #12
  br label %600

600:                                              ; preds = %599, %596, %584
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %255) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %254) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %253) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %252) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %251) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #12
  %601 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %602 = load i32, i32* %601, align 8
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %605, label %604

604:                                              ; preds = %600
  call void @_ZNK5blink21ContentSecurityPolicy39ReportBlockedScriptExecutionToInspectorERKN3WTF6StringE(%"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  br label %605

605:                                              ; preds = %604, %600
  %606 = phi i1 [ false, %604 ], [ true, %600 ]
  %607 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %608 = icmp eq %"class.WTF::StringImpl"* %607, null
  br i1 %608, label %622, label %609

609:                                              ; preds = %605
  %610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %607, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load atomic i32, i32* %610 monotonic, align 4
  %612 = and i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %607, i64 0, i32 0
  %615 = load i32, i32* %614, align 4
  br i1 %613, label %616, label %618

616:                                              ; preds = %609
  %617 = add i32 %615, -1
  store i32 %617, i32* %614, align 4
  br label %618

618:                                              ; preds = %616, %609
  %619 = phi i32 [ %617, %616 ], [ %615, %609 ]
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %622

621:                                              ; preds = %618
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %607) #12
  br label %622

622:                                              ; preds = %621, %618, %605
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #12
  br i1 %374, label %636, label %623

623:                                              ; preds = %622
  %624 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %625 = load atomic i32, i32* %624 monotonic, align 4
  %626 = and i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 0
  %629 = load i32, i32* %628, align 4
  br i1 %627, label %630, label %632

630:                                              ; preds = %623
  %631 = add i32 %629, -1
  store i32 %631, i32* %628, align 4
  br label %632

632:                                              ; preds = %630, %623
  %633 = phi i32 [ %631, %630 ], [ %629, %623 ]
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %636

635:                                              ; preds = %632
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %373) #12
  br label %636

636:                                              ; preds = %132, %138, %154, %622, %632, %635
  %637 = phi i1 [ true, %154 ], [ %606, %622 ], [ %606, %632 ], [ %606, %635 ], [ true, %138 ], [ true, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134)
  %638 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %638, label %652, label %639

639:                                              ; preds = %636
  %640 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %641 = load atomic i32, i32* %640 monotonic, align 4
  %642 = and i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %645 = load i32, i32* %644, align 4
  br i1 %643, label %646, label %648

646:                                              ; preds = %639
  %647 = add i32 %645, -1
  store i32 %647, i32* %644, align 4
  br label %648

648:                                              ; preds = %646, %639
  %649 = phi i32 [ %647, %646 ], [ %645, %639 ]
  %650 = icmp eq i32 %649, 0
  br i1 %650, label %651, label %652

651:                                              ; preds = %648
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #12
  br label %652

652:                                              ; preds = %636, %648, %651
  %653 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %654 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %653, align 8
  %655 = icmp eq %"class.WTF::StringImpl"* %654, null
  br i1 %655, label %669, label %656

656:                                              ; preds = %652
  %657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %654, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %658 = load atomic i32, i32* %657 monotonic, align 4
  %659 = and i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %654, i64 0, i32 0
  %662 = load i32, i32* %661, align 4
  br i1 %660, label %663, label %665

663:                                              ; preds = %656
  %664 = add i32 %662, -1
  store i32 %664, i32* %661, align 4
  br label %665

665:                                              ; preds = %663, %656
  %666 = phi i32 [ %664, %663 ], [ %662, %656 ]
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %668, label %669

668:                                              ; preds = %665
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %654) #12
  br label %669

669:                                              ; preds = %652, %665, %668
  br i1 %40, label %683, label %670

670:                                              ; preds = %669
  %671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %672 = load atomic i32, i32* %671 monotonic, align 4
  %673 = and i32 %672, 2
  %674 = icmp eq i32 %673, 0
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %676 = load i32, i32* %675, align 4
  br i1 %674, label %677, label %679

677:                                              ; preds = %670
  %678 = add i32 %676, -1
  store i32 %678, i32* %675, align 4
  br label %679

679:                                              ; preds = %677, %670
  %680 = phi i32 [ %678, %677 ], [ %676, %670 ]
  %681 = icmp eq i32 %680, 0
  br i1 %681, label %682, label %683

682:                                              ; preds = %679
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12
  br label %683

683:                                              ; preds = %669, %679, %682
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  %684 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %685 = icmp eq %"class.WTF::StringImpl"* %684, null
  br i1 %685, label %699, label %686

686:                                              ; preds = %683
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load atomic i32, i32* %687 monotonic, align 4
  %689 = and i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 0
  %692 = load i32, i32* %691, align 4
  br i1 %690, label %693, label %695

693:                                              ; preds = %686
  %694 = add i32 %692, -1
  store i32 %694, i32* %691, align 4
  br label %695

695:                                              ; preds = %693, %686
  %696 = phi i32 [ %694, %693 ], [ %692, %686 ]
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %698, label %699

698:                                              ; preds = %695
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %684) #12
  br label %699

699:                                              ; preds = %683, %695, %698
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %728

700:                                              ; preds = %5
  %701 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %702 = load i32, i32* %701, align 8
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %728, label %704

704:                                              ; preds = %700
  %705 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 20, i32 0) #12
  %706 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %705, 1
  %707 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %706, null
  br i1 %707, label %728, label %708

708:                                              ; preds = %704
  %709 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %706, i64 0, i32 7
  %710 = load i8, i8* %709, align 4, !range !3
  %711 = icmp eq i8 %710, 0
  br i1 %711, label %712, label %728

712:                                              ; preds = %708
  %713 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase28is_web_assembly_csp_enabled_E, align 1, !range !3
  %714 = icmp eq i8 %713, 0
  br i1 %714, label %715, label %724

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"class.blink::ContentSecurityPolicy", %"class.blink::ContentSecurityPolicy"* %1, i64 0, i32 16
  %717 = load i8, i8* %716, align 4, !range !3
  %718 = icmp eq i8 %717, 0
  br i1 %718, label %719, label %724

719:                                              ; preds = %715
  %720 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %721 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %720, align 8
  %722 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %721, i64 0, i32 0
  %723 = tail call zeroext i1 @_ZN5blink14SchemeRegistry25SchemeSupportsWasmEvalCSPERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %722) #12
  br i1 %723, label %724, label %728

724:                                              ; preds = %719, %715, %712
  %725 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %706, i64 0, i32 8
  %726 = load i8, i8* %725, align 1, !range !3
  %727 = icmp ne i8 %726, 0
  br label %728

728:                                              ; preds = %724, %719, %708, %704, %700, %699
  %729 = phi i1 [ %637, %699 ], [ true, %700 ], [ true, %708 ], [ true, %704 ], [ false, %719 ], [ %727, %724 ]
  ret i1 %729
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink33CSPDirectiveListShouldDisableEvalERKN7network5mojom5blink21ContentSecurityPolicyERN3WTF6StringE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture dereferenceable(144), %"class.WTF::String"* nocapture dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = alloca %"class.WTF::HashMap", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 20, i32 0)
  %7 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %6, 1
  %8 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %7, null
  br i1 %8, label %252, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %7, i64 0, i32 7
  %11 = load i8, i8* %10, align 4, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %252

13:                                               ; preds = %9
  %14 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %6, 0
  %15 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 2
  %18 = bitcast %"class.WTF::HashMap"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 20, i1 false) #12
  %19 = load i32, i32* %17, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %57, label %21

21:                                               ; preds = %13
  call void @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %16, i32 %19) #12
  %22 = load i32, i32* %17, align 4
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %24, align 8
  %26 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %28
  br i1 %23, label %57, label %30

30:                                               ; preds = %21
  %31 = icmp eq i32 %27, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %30, %36
  %33 = phi %"struct.WTF::KeyValuePair"* [ %37, %36 ], [ %25, %30 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  switch i32 %35, label %39 [
    i32 -1000001, label %36
    i32 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 1
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %37, %29
  br i1 %38, label %57, label %32

39:                                               ; preds = %32, %30
  %40 = phi %"struct.WTF::KeyValuePair"* [ %25, %30 ], [ %33, %32 ]
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, %29
  br i1 %41, label %57, label %42

42:                                               ; preds = %39, %55
  %43 = phi %"struct.WTF::KeyValuePair"* [ %49, %55 ], [ %40, %39 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0
  %45 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS3_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %16, i32* dereferenceable(4) %44, %"struct.WTF::KeyValuePair"* dereferenceable(16) %43) #12
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 1
  %47 = icmp eq %"struct.WTF::KeyValuePair"* %46, %29
  br i1 %47, label %57, label %48

48:                                               ; preds = %42, %52
  %49 = phi %"struct.WTF::KeyValuePair"* [ %53, %52 ], [ %46, %42 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  switch i32 %51, label %55 [
    i32 -1000001, label %52
    i32 0, label %52
  ]

52:                                               ; preds = %48, %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair"* %53, %29
  br i1 %54, label %57, label %48

55:                                               ; preds = %48
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %29
  br i1 %56, label %57, label %42

57:                                               ; preds = %36, %42, %55, %52, %13, %21, %39
  %58 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_125GetRawDirectiveForMessageEN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEES5_(%"class.WTF::HashMap"* nonnull %4, i32 %14)
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %135, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %77

67:                                               ; preds = %60
  %68 = zext i32 %66 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #12
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %67
  call void @llvm.trap() #12
  unreachable

75:                                               ; preds = %67
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %65, align 4
  br label %77

77:                                               ; preds = %75, %60
  %78 = phi i32 [ %76, %75 ], [ %66, %60 ]
  %79 = load atomic i32, i32* %61 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %92

82:                                               ; preds = %77
  %83 = zext i32 %78 to i33
  %84 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #12
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %82
  call void @llvm.trap() #12
  unreachable

90:                                               ; preds = %82
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %65, align 4
  br label %92

92:                                               ; preds = %90, %77
  %93 = phi i32 [ %91, %90 ], [ %78, %77 ]
  %94 = load atomic i32, i32* %61 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  %98 = add i32 %93, -1
  store i32 %98, i32* %65, align 4
  br label %99

99:                                               ; preds = %97, %92
  %100 = phi i32 [ %98, %97 ], [ %93, %92 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #12
  br label %103

103:                                              ; preds = %99, %102
  %104 = load atomic i32, i32* %61 monotonic, align 4, !noalias !26
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = load i32, i32* %65, align 4
  br i1 %106, label %108, label %118

108:                                              ; preds = %103
  %109 = zext i32 %107 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #12
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %108
  call void @llvm.trap() #12, !noalias !26
  unreachable

116:                                              ; preds = %108
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %65, align 4, !noalias !26
  br label %118

118:                                              ; preds = %103, %116
  %119 = phi i32 [ %117, %116 ], [ %107, %103 ]
  %120 = bitcast %"class.WTF::StringAppend"* %3 to i64*
  store i64 ptrtoint ([154 x i8]* @.str.12 to i64), i64* %120, align 8, !alias.scope !26
  %121 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %121, align 8, !alias.scope !26
  %122 = load atomic i32, i32* %61 monotonic, align 4, !noalias !26
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %139

125:                                              ; preds = %118
  %126 = zext i32 %119 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #12
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %125
  call void @llvm.trap() #12, !noalias !26
  unreachable

133:                                              ; preds = %125
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %65, align 4, !noalias !26
  br label %139

135:                                              ; preds = %57
  %136 = bitcast %"class.WTF::StringAppend"* %3 to i64*
  store i64 ptrtoint ([154 x i8]* @.str.12 to i64), i64* %136, align 8, !alias.scope !26
  %137 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %137, align 8, !alias.scope !26
  %138 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8** %138, align 8, !alias.scope !26
  br label %151

139:                                              ; preds = %133, %118
  %140 = phi i32 [ %134, %133 ], [ %119, %118 ]
  %141 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8** %141, align 8, !alias.scope !26
  %142 = load atomic i32, i32* %61 monotonic, align 4, !noalias !26
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %139
  %146 = add i32 %140, -1
  store i32 %146, i32* %65, align 4, !noalias !26
  br label %147

147:                                              ; preds = %145, %139
  %148 = phi i32 [ %146, %145 ], [ %140, %139 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #12, !noalias !26
  br label %151

151:                                              ; preds = %135, %147, %150
  %152 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %3)
  %153 = ptrtoint %"class.WTF::StringImpl"* %152 to i64
  %154 = bitcast %"class.WTF::String"* %1 to i64*
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  store i64 %153, i64* %154, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %151
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #12
  br label %171

171:                                              ; preds = %170, %167, %151
  %172 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %188, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %173) #12
  br label %188

188:                                              ; preds = %171, %184, %187
  br i1 %59, label %214, label %189

189:                                              ; preds = %188
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %198
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #12
  %202 = load i32, i32* %194, align 4
  br label %203

203:                                              ; preds = %198, %201
  %204 = phi i32 [ %199, %198 ], [ %202, %201 ]
  %205 = load atomic i32, i32* %190 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %203
  %209 = add i32 %204, -1
  store i32 %209, i32* %194, align 4
  br label %210

210:                                              ; preds = %208, %203
  %211 = phi i32 [ %209, %208 ], [ %204, %203 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #12
  br label %214

214:                                              ; preds = %188, %210, %213
  %215 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 0
  %216 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %215, align 8
  %217 = icmp eq %"struct.WTF::KeyValuePair"* %216, null
  br i1 %217, label %251, label %218, !prof !4

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 1
  %220 = load i32, i32* %219, align 8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %249, label %222

222:                                              ; preds = %218
  %223 = zext i32 %220 to i64
  br label %224

224:                                              ; preds = %246, %222
  %225 = phi i64 [ 0, %222 ], [ %247, %246 ]
  %226 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %216, i64 %225, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, -1000001
  br i1 %228, label %246, label %229

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %216, i64 %225, i32 1, i32 0, i32 0
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %232, label %246, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %233
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i32 [ %241, %240 ], [ %239, %233 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %231) #12
  br label %246

246:                                              ; preds = %245, %242, %229, %224
  %247 = add nuw nsw i64 %225, 1
  %248 = icmp eq i64 %247, %223
  br i1 %248, label %249, label %224

249:                                              ; preds = %246, %218
  %250 = bitcast %"struct.WTF::KeyValuePair"* %216 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %250) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %215, align 8
  br label %251

251:                                              ; preds = %214, %249
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br label %295

252:                                              ; preds = %9, %2
  %253 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 10
  %254 = load i32, i32* %253, align 8
  %255 = icmp eq i32 %254, 1
  br i1 %255, label %256, label %295

256:                                              ; preds = %252
  %257 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %257) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.14, i64 0, i64 0), i64 100) #12
  %258 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %259 = bitcast %"class.WTF::String"* %5 to i64*
  %260 = load i64, i64* %259, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %258, align 8
  %261 = bitcast %"class.WTF::String"* %1 to i64*
  %262 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  store i64 %260, i64* %261, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %278, label %265

265:                                              ; preds = %256
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %274

272:                                              ; preds = %265
  %273 = add i32 %271, -1
  store i32 %273, i32* %270, align 4
  br label %274

274:                                              ; preds = %272, %265
  %275 = phi i32 [ %273, %272 ], [ %271, %265 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #12
  br label %278

278:                                              ; preds = %256, %274, %277
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %294, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #12
  br label %294

294:                                              ; preds = %278, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %257) #12
  br label %295

295:                                              ; preds = %252, %294, %251
  %296 = phi i1 [ true, %294 ], [ true, %251 ], [ false, %252 ]
  ret i1 %296
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_125GetRawDirectiveForMessageEN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEES5_(%"class.WTF::HashMap"*, i32) unnamed_addr #1 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  store i32 %1, i32* %3, align 4
  %8 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %11 = bitcast %union.anon.1504* %10 to i8*
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %14, align 1
  %15 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = tail call i8* @_ZN5blink21ContentSecurityPolicy16GetDirectiveNameEN7network5mojom16CSPDirectiveNameE(i32 %1) #12
  %17 = icmp eq i8* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %2
  %19 = tail call i64 @strlen(i8* nonnull %16) #13
  %20 = icmp ult i64 %19, 4294967296
  br i1 %20, label %22, label %21, !prof !4

21:                                               ; preds = %18
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %18
  %23 = trunc i64 %19 to i32
  br label %24

24:                                               ; preds = %2, %22
  %25 = phi i32 [ %23, %22 ], [ 0, %2 ]
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %27 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* %16, i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %25, i32* %29, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  %30 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %32 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 1, i32* %34, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  %35 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12
  %36 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_6StringENS_7IntHashIS3_EENS_10HashTraitsIS3_EENS7_IS4_EENS_18PartitionAllocatorEE2atERKS3_(%"class.WTF::HashMap"* %0, i32* nonnull dereferenceable(4) %3)
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %38, label %43

38:                                               ; preds = %24
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 0, i32* %42, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  br label %63

43:                                               ; preds = %24
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %46, i32* %50, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %43
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %43
  %60 = phi i32 [ %58, %57 ], [ %56, %43 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %63

63:                                               ; preds = %38, %59, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  %64 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #12
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #12
  br label %80

80:                                               ; preds = %63, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret %"class.WTF::StringImpl"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink31CSPDirectiveListAllowFromSourceERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyENS1_16CSPDirectiveNameERKNS_4KURLESB_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionERKN3WTF6StringERKNSF_7HashSetINSt3__14pairISG_NS_18IntegrityAlgorithmEEENSF_8PairHashISG_SM_EENSF_10HashTraitsISN_EENSF_18PartitionAllocatorEEENS_17ParserDispositionE(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144), %"class.blink::ContentSecurityPolicy"*, i32, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), i8 zeroext, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::HashSet.850"* nocapture readonly dereferenceable(24), i8 zeroext) local_unnamed_addr #1 {
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.WTF::StringAppend.1536", align 8
  %14 = alloca %"class.WTF::StringAppend.1497", align 8
  %15 = alloca %"class.blink::KURL", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::StringAppend.1495", align 8
  %18 = alloca %"class.WTF::StringAppend.1495", align 8
  %19 = alloca %"class.WTF::StringAppend.1495", align 8
  %20 = alloca %"class.WTF::StringAppend.1495", align 8
  %21 = alloca %"class.WTF::StringAppend.1495", align 8
  %22 = alloca %"class.WTF::StringAppend.1495", align 8
  %23 = alloca %"class.WTF::StringAppend.1495", align 8
  %24 = alloca %"class.WTF::StringAppend.1495", align 8
  %25 = alloca %"class.WTF::StringAppend.1495", align 8
  %26 = alloca %"class.WTF::StringAppend.1495", align 8
  %27 = alloca %"class.WTF::StringAppend.1495", align 8
  %28 = alloca %"class.WTF::StringAppend.1495", align 8
  %29 = alloca %"class.WTF::StringAppend.1495", align 8
  %30 = alloca %"class.WTF::StringAppend.1495", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.WTF::String", align 8
  %33 = alloca %"class.WTF::String", align 8
  %34 = alloca %"class.WTF::StringAppend.1498", align 8
  %35 = alloca %"class.WTF::StringAppend.1499", align 8
  %36 = alloca %"class.WTF::StringAppend.1496", align 8
  %37 = alloca %"class.WTF::StringAppend.1497", align 8
  %38 = alloca %"class.WTF::StringAppend.1495", align 8
  %39 = alloca %"class.WTF::String", align 8
  %40 = alloca %"class.WTF::HashMap", align 8
  %41 = alloca %"class.WTF::String", align 8
  %42 = alloca %"class.WTF::StringAppend.1535", align 8
  %43 = alloca %"class.WTF::StringAppend.1536", align 8
  %44 = alloca %"class.WTF::StringAppend.1537", align 8
  %45 = alloca %"class.WTF::StringAppend.1538", align 8
  %46 = alloca %"class.WTF::StringAppend.1539", align 8
  %47 = alloca %"class.WTF::String", align 8
  %48 = alloca %"class.WTF::String", align 8
  %49 = alloca %"class.WTF::String", align 8
  %50 = alloca %"class.WTF::Vector.1526", align 8
  %51 = alloca %"class.WTF::String", align 8
  %52 = alloca i8, align 1
  %53 = alloca %"class.WTF::StringView", align 8
  switch i32 %2, label %69 [
    i32 14, label %54
    i32 9, label %54
    i32 29, label %61
  ]

54:                                               ; preds = %10, %10
  %55 = bitcast %"class.WTF::StringView"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55)
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %57 = bitcast %"class.WTF::StringView"* %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %53, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0), i8** %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %53, i64 0, i32 2
  store i32 5, i32* %59, align 8
  %60 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %3, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55)
  br i1 %60, label %2544, label %69

61:                                               ; preds = %10
  %62 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 29, i32 0) #12
  %63 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %62, 1
  %64 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %63, null
  br i1 %64, label %2544, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %63, i64 0, i32 9
  %67 = load i8, i8* %66, align 2, !range !3
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %265, label %2544

69:                                               ; preds = %54, %10
  %70 = icmp eq i32 %2, 22
  switch i32 %2, label %265 [
    i32 25, label %71
    i32 22, label %71
  ]

71:                                               ; preds = %69, %69
  %72 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 %2, i32 0)
  %73 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %72, 1
  %74 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = tail call zeroext i1 @_ZN5blink23CSPSourceListAllowNonceERKN7network5mojom5blink13CSPSourceListERKN3WTF6StringE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %73, %"class.WTF::String"* dereferenceable(8) %7) #12
  br i1 %76, label %2544, label %77

77:                                               ; preds = %71, %75
  br i1 %70, label %78, label %265

78:                                               ; preds = %77
  %79 = icmp eq i8 %9, 1
  br i1 %79, label %80, label %88

80:                                               ; preds = %78
  %81 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 22, i32 0) #12
  %82 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %81, 1
  %83 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %82, null
  br i1 %83, label %2544, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %82, i64 0, i32 9
  %86 = load i8, i8* %85, align 2, !range !3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %2544

88:                                               ; preds = %84, %78
  %89 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 22, i32 0)
  %90 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %89, 1
  %91 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %90, null
  br i1 %91, label %265, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.WTF::HashSet.850", %"class.WTF::HashSet.850"* %8, i64 0, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %265, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::HashSet.850", %"class.WTF::HashSet.850"* %8, i64 0, i32 0, i32 0
  %98 = load %"struct.std::__1::pair.854"*, %"struct.std::__1::pair.854"** %97, align 8
  %99 = getelementptr inbounds %"class.WTF::HashSet.850", %"class.WTF::HashSet.850"* %8, i64 0, i32 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"struct.std::__1::pair.854", %"struct.std::__1::pair.854"* %98, i64 %101
  %103 = icmp eq i32 %100, 0
  br i1 %103, label %118, label %104

104:                                              ; preds = %96, %115
  %105 = phi %"struct.std::__1::pair.854"* [ %116, %115 ], [ %98, %96 ]
  %106 = getelementptr inbounds %"struct.std::__1::pair.854", %"struct.std::__1::pair.854"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  %109 = getelementptr inbounds %"struct.std::__1::pair.854", %"struct.std::__1::pair.854"* %105, i64 0, i32 1
  %110 = load i8, i8* %109, align 1
  %111 = icmp eq i8 %110, 0
  %112 = and i1 %108, %111
  %113 = icmp eq %"class.WTF::StringImpl"* %107, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %114 = or i1 %113, %112
  br i1 %114, label %115, label %118

115:                                              ; preds = %104
  %116 = getelementptr inbounds %"struct.std::__1::pair.854", %"struct.std::__1::pair.854"* %105, i64 1
  %117 = icmp eq %"struct.std::__1::pair.854"* %116, %102
  br i1 %117, label %2544, label %104

118:                                              ; preds = %104, %96
  %119 = phi %"struct.std::__1::pair.854"* [ %98, %96 ], [ %105, %104 ]
  %120 = icmp eq %"struct.std::__1::pair.854"* %119, %102
  br i1 %120, label %2544, label %121

121:                                              ; preds = %118
  %122 = bitcast %"class.WTF::String"* %49 to i8*
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::Vector.1526"* %50 to i8*
  %125 = getelementptr inbounds %"class.WTF::Vector.1526", %"class.WTF::Vector.1526"* %50, i64 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.WTF::Vector.1526", %"class.WTF::Vector.1526"* %50, i64 0, i32 0, i32 0, i32 2
  %127 = bitcast %"class.WTF::String"* %51 to i8*
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 0, i32 0, i32 0
  br label %129

129:                                              ; preds = %263, %121
  %130 = phi %"struct.std::__1::pair.854"* [ %119, %121 ], [ %250, %263 ]
  %131 = call i8* @_Znwm(i64 24) #14, !noalias !29
  %132 = bitcast i8* %131 to %"class.network::mojom::blink::CSPHashSource"*
  call void @_ZN7network5mojom5blink13CSPHashSourceC1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %132) #12, !noalias !29
  %133 = getelementptr inbounds %"struct.std::__1::pair.854", %"struct.std::__1::pair.854"* %130, i64 0, i32 1
  %134 = load i8, i8* %133, align 8
  %135 = icmp ult i8 %134, 3
  br i1 %135, label %136, label %140

136:                                              ; preds = %129
  %137 = sext i8 %134 to i64
  %138 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN5blink31CSPDirectiveListAllowFromSourceERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyENS1_16CSPDirectiveNameERKNS_4KURLESB_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionERKN3WTF6StringERKNSF_7HashSetINSt3__14pairISG_NS_18IntegrityAlgorithmEEENSF_8PairHashISG_SM_EENSF_10HashTraitsISN_EENSF_18PartitionAllocatorEEENS_17ParserDispositionE, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4
  br label %140

140:                                              ; preds = %129, %136
  %141 = phi i32 [ %139, %136 ], [ 0, %129 ]
  %142 = bitcast i8* %131 to i32*
  store i32 %141, i32* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.854", %"struct.std::__1::pair.854"* %130, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %163, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %163

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = zext i32 %153 to i33
  %155 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %154, i33 1) #12
  %156 = extractvalue { i33, i1 } %155, 1
  %157 = extractvalue { i33, i1 } %155, 0
  %158 = icmp slt i33 %157, 0
  %159 = or i1 %156, %158
  br i1 %159, label %160, label %161, !prof !2

160:                                              ; preds = %151
  call void @llvm.trap() #12
  unreachable

161:                                              ; preds = %151
  %162 = trunc i33 %157 to i32
  store i32 %162, i32* %152, align 4
  br label %163

163:                                              ; preds = %161, %146, %140
  %164 = getelementptr inbounds i8, i8* %131, i64 8
  %165 = bitcast i8* %164 to %"class.WTF::Vector.25"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #12
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %123, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 16, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #12
  %166 = call %"class.WTF::StringImpl"* @_ZN3WTF17NormalizeToBase64ERKNS_6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %49) #12
  store %"class.WTF::StringImpl"* %166, %"class.WTF::StringImpl"** %128, align 8
  %167 = call zeroext i1 @_ZN3WTF12Base64DecodeERKNS_6StringERNS_6VectorIcLj0ENS_18PartitionAllocatorEEEPFbDsENS_18Base64DecodePolicyE(%"class.WTF::String"* nonnull dereferenceable(8) %51, %"class.WTF::Vector.1526"* nonnull dereferenceable(16) %50, i1 (i16)* null, i32 0) #12
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #12
  br label %183

183:                                              ; preds = %182, %179, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #12
  br i1 %167, label %184, label %213

184:                                              ; preds = %183
  %185 = load i32, i32* %126, align 4
  %186 = add i32 %185, -1
  %187 = icmp ugt i32 %186, 63
  br i1 %187, label %213, label %188

188:                                              ; preds = %184
  %189 = load i8*, i8** %125, align 8
  %190 = zext i32 %185 to i64
  %191 = getelementptr inbounds i8, i8* %189, i64 %190
  %192 = getelementptr inbounds i8, i8* %131, i64 20
  %193 = bitcast i8* %192 to i32*
  %194 = getelementptr inbounds i8, i8* %131, i64 16
  %195 = bitcast i8* %194 to i32*
  %196 = bitcast i8* %164 to i8**
  br label %197

197:                                              ; preds = %210, %188
  %198 = phi i8* [ %189, %188 ], [ %211, %210 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %52) #12
  store i8 -86, i8* %52, align 1
  %199 = load i8, i8* %198, align 1
  store i8 %199, i8* %52, align 1
  %200 = load i32, i32* %193, align 4
  %201 = load i32, i32* %195, align 8
  %202 = icmp eq i32 %200, %201
  br i1 %202, label %209, label %203, !prof !2

203:                                              ; preds = %197
  %204 = load i8*, i8** %196, align 8
  %205 = zext i32 %200 to i64
  %206 = getelementptr inbounds i8, i8* %204, i64 %205
  store i8 %199, i8* %206, align 1
  %207 = load i32, i32* %193, align 4
  %208 = add i32 %207, 1
  store i32 %208, i32* %193, align 4
  br label %210

209:                                              ; preds = %197
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRcEEvOT_(%"class.WTF::Vector.25"* %165, i8* nonnull dereferenceable(1) %52) #12
  br label %210

210:                                              ; preds = %209, %203
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %52) #12
  %211 = getelementptr inbounds i8, i8* %198, i64 1
  %212 = icmp eq i8* %211, %191
  br i1 %212, label %213, label %197

213:                                              ; preds = %210, %184, %183
  %214 = phi i1 [ false, %183 ], [ false, %184 ], [ true, %210 ]
  %215 = load i8*, i8** %125, align 8
  %216 = icmp eq i8* %215, null
  br i1 %216, label %222, label %217, !prof !4

217:                                              ; preds = %213
  %218 = load i32, i32* %126, align 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %221, label %220, !prof !2

220:                                              ; preds = %217
  store i32 0, i32* %126, align 4
  br label %221

221:                                              ; preds = %220, %217
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %215) #12
  store i8* null, i8** %125, align 8
  br label %222

222:                                              ; preds = %221, %213
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #12
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #12
  br label %238

238:                                              ; preds = %237, %234, %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  br i1 %214, label %239, label %243

239:                                              ; preds = %238
  %240 = call zeroext i1 @_ZN5blink22CSPSourceListAllowHashERKN7network5mojom5blink13CSPSourceListERKNS2_13CSPHashSourceE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %90, %"class.network::mojom::blink::CSPHashSource"* nonnull dereferenceable(24) %132) #12
  %241 = xor i1 %240, true
  %242 = zext i1 %241 to i32
  br label %243

243:                                              ; preds = %239, %238
  %244 = phi i32 [ 1, %238 ], [ %242, %239 ]
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %132) #12
  call void @_ZdlPv(i8* nonnull %131) #14
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %265

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"struct.std::__1::pair.854", %"struct.std::__1::pair.854"* %130, i64 1
  %248 = icmp eq %"struct.std::__1::pair.854"* %247, %102
  br i1 %248, label %2544, label %249

249:                                              ; preds = %246, %260
  %250 = phi %"struct.std::__1::pair.854"* [ %261, %260 ], [ %247, %246 ]
  %251 = getelementptr inbounds %"struct.std::__1::pair.854", %"struct.std::__1::pair.854"* %250, i64 0, i32 0, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = icmp eq %"class.WTF::StringImpl"* %252, null
  %254 = getelementptr inbounds %"struct.std::__1::pair.854", %"struct.std::__1::pair.854"* %250, i64 0, i32 1
  %255 = load i8, i8* %254, align 1
  %256 = icmp eq i8 %255, 0
  %257 = and i1 %253, %256
  %258 = icmp eq %"class.WTF::StringImpl"* %252, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %259 = or i1 %258, %257
  br i1 %259, label %260, label %263

260:                                              ; preds = %249
  %261 = getelementptr inbounds %"struct.std::__1::pair.854", %"struct.std::__1::pair.854"* %250, i64 1
  %262 = icmp eq %"struct.std::__1::pair.854"* %261, %102
  br i1 %262, label %2544, label %249

263:                                              ; preds = %249
  %264 = icmp eq %"struct.std::__1::pair.854"* %250, %102
  br i1 %264, label %2544, label %129

265:                                              ; preds = %243, %65, %92, %88, %69, %77
  %266 = call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 %2, i32 0)
  %267 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %266, 1
  %268 = icmp eq i32 %6, 1
  br i1 %268, label %269, label %2516

269:                                              ; preds = %265
  %270 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %266, 0
  %271 = bitcast %"class.WTF::HashMap"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %271)
  %272 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %267, null
  br i1 %272, label %2514, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %274, align 8
  %276 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %276) #12
  %277 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %3) #12
  br i1 %277, label %278, label %279

278:                                              ; preds = %273
  call void @_ZNK5blink21ContentSecurityPolicy20FallbackUrlForPluginEv(%"class.blink::KURL"* nonnull sret %15, %"class.blink::ContentSecurityPolicy"* %1) #12
  br label %280

279:                                              ; preds = %273
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %15, %"class.blink::KURL"* dereferenceable(112) %3) #12
  br label %280

280:                                              ; preds = %279, %278
  %281 = call zeroext i1 @_ZN5blink19CSPSourceListAllowsERKN7network5mojom5blink13CSPSourceListERKNS2_9CSPSourceERKNS_4KURLENS_19ResourceRequestHead14RedirectStatusE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %267, %"class.network::mojom::blink::CSPSource"* dereferenceable(40) %275, %"class.blink::KURL"* nonnull dereferenceable(112) %15, i8 zeroext %5) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %276) #12
  br i1 %281, label %282, label %287

282:                                              ; preds = %280
  switch i32 %2, label %2514 [
    i32 29, label %283
    i32 22, label %283
    i32 21, label %283
    i32 20, label %283
  ]

283:                                              ; preds = %282, %282, %282, %282
  %284 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %267, i64 0, i32 9
  %285 = load i8, i8* %284, align 2, !range !3
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %2514, label %287

287:                                              ; preds = %283, %280
  %288 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %288) #12
  %289 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %289, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 11) #12
  switch i32 %2, label %1310 [
    i32 1, label %290
    i32 29, label %375
    i32 4, label %460
    i32 6, label %545
    i32 7, label %630
    i32 9, label %715
    i32 10, label %800
    i32 12, label %885
    i32 11, label %970
    i32 14, label %1055
    i32 15, label %1140
    i32 22, label %1225
    i32 21, label %1225
    i32 20, label %1225
  ]

290:                                              ; preds = %287
  %291 = bitcast %"class.WTF::StringAppend.1495"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %291) #12
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %337, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %311

301:                                              ; preds = %294
  %302 = zext i32 %300 to i33
  %303 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %302, i33 1) #12
  %304 = extractvalue { i33, i1 } %303, 1
  %305 = extractvalue { i33, i1 } %303, 0
  %306 = icmp slt i33 %305, 0
  %307 = or i1 %304, %306
  br i1 %307, label %308, label %309, !prof !2

308:                                              ; preds = %301
  call void @llvm.trap() #12
  unreachable

309:                                              ; preds = %301
  %310 = trunc i33 %305 to i32
  store i32 %310, i32* %299, align 4
  br label %311

311:                                              ; preds = %309, %294
  %312 = phi i32 [ %310, %309 ], [ %300, %294 ]
  %313 = load atomic i32, i32* %295 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %326

316:                                              ; preds = %311
  %317 = zext i32 %312 to i33
  %318 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %317, i33 1) #12
  %319 = extractvalue { i33, i1 } %318, 1
  %320 = extractvalue { i33, i1 } %318, 0
  %321 = icmp slt i33 %320, 0
  %322 = or i1 %319, %321
  br i1 %322, label %323, label %324, !prof !2

323:                                              ; preds = %316
  call void @llvm.trap() #12
  unreachable

324:                                              ; preds = %316
  %325 = trunc i33 %320 to i32
  store i32 %325, i32* %299, align 4
  br label %326

326:                                              ; preds = %324, %311
  %327 = phi i32 [ %325, %324 ], [ %312, %311 ]
  %328 = load atomic i32, i32* %295 monotonic, align 4
  %329 = and i32 %328, 2
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %333

331:                                              ; preds = %326
  %332 = add i32 %327, -1
  store i32 %332, i32* %299, align 4
  br label %333

333:                                              ; preds = %331, %326
  %334 = phi i32 [ %332, %331 ], [ %327, %326 ]
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %337

336:                                              ; preds = %333
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #12
  br label %337

337:                                              ; preds = %336, %333, %290
  %338 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %292, %"class.WTF::StringImpl"** %338, align 8
  %339 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.47, i64 0, i64 0), i8** %339, align 8
  %340 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %17) #12
  %341 = ptrtoint %"class.WTF::StringImpl"* %340 to i64
  %342 = bitcast %"class.WTF::String"* %16 to i64*
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %341, i64* %342, align 8
  %344 = icmp eq %"class.WTF::StringImpl"* %343, null
  br i1 %344, label %358, label %345

345:                                              ; preds = %337
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  br i1 %349, label %352, label %354

352:                                              ; preds = %345
  %353 = add i32 %351, -1
  store i32 %353, i32* %350, align 4
  br label %354

354:                                              ; preds = %352, %345
  %355 = phi i32 [ %353, %352 ], [ %351, %345 ]
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %354
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %343) #12
  br label %358

358:                                              ; preds = %357, %354, %337
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #12
  br label %374

374:                                              ; preds = %373, %370, %358
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %291) #12
  br label %1492

375:                                              ; preds = %287
  %376 = bitcast %"class.WTF::StringAppend.1495"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %376) #12
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %377, null
  br i1 %378, label %422, label %379

379:                                              ; preds = %375
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load atomic i32, i32* %380 monotonic, align 4
  %382 = and i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  br i1 %383, label %386, label %396

386:                                              ; preds = %379
  %387 = zext i32 %385 to i33
  %388 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %387, i33 1) #12
  %389 = extractvalue { i33, i1 } %388, 1
  %390 = extractvalue { i33, i1 } %388, 0
  %391 = icmp slt i33 %390, 0
  %392 = or i1 %389, %391
  br i1 %392, label %393, label %394, !prof !2

393:                                              ; preds = %386
  call void @llvm.trap() #12
  unreachable

394:                                              ; preds = %386
  %395 = trunc i33 %390 to i32
  store i32 %395, i32* %384, align 4
  br label %396

396:                                              ; preds = %394, %379
  %397 = phi i32 [ %395, %394 ], [ %385, %379 ]
  %398 = load atomic i32, i32* %380 monotonic, align 4
  %399 = and i32 %398, 2
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %411

401:                                              ; preds = %396
  %402 = zext i32 %397 to i33
  %403 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %402, i33 1) #12
  %404 = extractvalue { i33, i1 } %403, 1
  %405 = extractvalue { i33, i1 } %403, 0
  %406 = icmp slt i33 %405, 0
  %407 = or i1 %404, %406
  br i1 %407, label %408, label %409, !prof !2

408:                                              ; preds = %401
  call void @llvm.trap() #12
  unreachable

409:                                              ; preds = %401
  %410 = trunc i33 %405 to i32
  store i32 %410, i32* %384, align 4
  br label %411

411:                                              ; preds = %409, %396
  %412 = phi i32 [ %410, %409 ], [ %397, %396 ]
  %413 = load atomic i32, i32* %380 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %418

416:                                              ; preds = %411
  %417 = add i32 %412, -1
  store i32 %417, i32* %384, align 4
  br label %418

418:                                              ; preds = %416, %411
  %419 = phi i32 [ %417, %416 ], [ %412, %411 ]
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %422

421:                                              ; preds = %418
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %377) #12
  br label %422

422:                                              ; preds = %421, %418, %375
  %423 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %377, %"class.WTF::StringImpl"** %423, align 8
  %424 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i64 0, i64 0), i8** %424, align 8
  %425 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %18) #12
  %426 = ptrtoint %"class.WTF::StringImpl"* %425 to i64
  %427 = bitcast %"class.WTF::String"* %16 to i64*
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %426, i64* %427, align 8
  %429 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %429, label %443, label %430

430:                                              ; preds = %422
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 0
  %436 = load i32, i32* %435, align 4
  br i1 %434, label %437, label %439

437:                                              ; preds = %430
  %438 = add i32 %436, -1
  store i32 %438, i32* %435, align 4
  br label %439

439:                                              ; preds = %437, %430
  %440 = phi i32 [ %438, %437 ], [ %436, %430 ]
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %428) #12
  br label %443

443:                                              ; preds = %442, %439, %422
  %444 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %423, align 8
  %445 = icmp eq %"class.WTF::StringImpl"* %444, null
  br i1 %445, label %459, label %446

446:                                              ; preds = %443
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %444, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %448 = load atomic i32, i32* %447 monotonic, align 4
  %449 = and i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %444, i64 0, i32 0
  %452 = load i32, i32* %451, align 4
  br i1 %450, label %453, label %455

453:                                              ; preds = %446
  %454 = add i32 %452, -1
  store i32 %454, i32* %451, align 4
  br label %455

455:                                              ; preds = %453, %446
  %456 = phi i32 [ %454, %453 ], [ %452, %446 ]
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %459

458:                                              ; preds = %455
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %444) #12
  br label %459

459:                                              ; preds = %458, %455, %443
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %376) #12
  br label %1484

460:                                              ; preds = %287
  %461 = bitcast %"class.WTF::StringAppend.1495"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %461) #12
  %462 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %463 = icmp eq %"class.WTF::StringImpl"* %462, null
  br i1 %463, label %507, label %464

464:                                              ; preds = %460
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %462, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %466 = load atomic i32, i32* %465 monotonic, align 4
  %467 = and i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %462, i64 0, i32 0
  %470 = load i32, i32* %469, align 4
  br i1 %468, label %471, label %481

471:                                              ; preds = %464
  %472 = zext i32 %470 to i33
  %473 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %472, i33 1) #12
  %474 = extractvalue { i33, i1 } %473, 1
  %475 = extractvalue { i33, i1 } %473, 0
  %476 = icmp slt i33 %475, 0
  %477 = or i1 %474, %476
  br i1 %477, label %478, label %479, !prof !2

478:                                              ; preds = %471
  call void @llvm.trap() #12
  unreachable

479:                                              ; preds = %471
  %480 = trunc i33 %475 to i32
  store i32 %480, i32* %469, align 4
  br label %481

481:                                              ; preds = %479, %464
  %482 = phi i32 [ %480, %479 ], [ %470, %464 ]
  %483 = load atomic i32, i32* %465 monotonic, align 4
  %484 = and i32 %483, 2
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %486, label %496

486:                                              ; preds = %481
  %487 = zext i32 %482 to i33
  %488 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %487, i33 1) #12
  %489 = extractvalue { i33, i1 } %488, 1
  %490 = extractvalue { i33, i1 } %488, 0
  %491 = icmp slt i33 %490, 0
  %492 = or i1 %489, %491
  br i1 %492, label %493, label %494, !prof !2

493:                                              ; preds = %486
  call void @llvm.trap() #12
  unreachable

494:                                              ; preds = %486
  %495 = trunc i33 %490 to i32
  store i32 %495, i32* %469, align 4
  br label %496

496:                                              ; preds = %494, %481
  %497 = phi i32 [ %495, %494 ], [ %482, %481 ]
  %498 = load atomic i32, i32* %465 monotonic, align 4
  %499 = and i32 %498, 2
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %503

501:                                              ; preds = %496
  %502 = add i32 %497, -1
  store i32 %502, i32* %469, align 4
  br label %503

503:                                              ; preds = %501, %496
  %504 = phi i32 [ %502, %501 ], [ %497, %496 ]
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %507

506:                                              ; preds = %503
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %462) #12
  br label %507

507:                                              ; preds = %506, %503, %460
  %508 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %462, %"class.WTF::StringImpl"** %508, align 8
  %509 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0), i8** %509, align 8
  %510 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %19) #12
  %511 = ptrtoint %"class.WTF::StringImpl"* %510 to i64
  %512 = bitcast %"class.WTF::String"* %16 to i64*
  %513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %511, i64* %512, align 8
  %514 = icmp eq %"class.WTF::StringImpl"* %513, null
  br i1 %514, label %528, label %515

515:                                              ; preds = %507
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %517 = load atomic i32, i32* %516 monotonic, align 4
  %518 = and i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 0
  %521 = load i32, i32* %520, align 4
  br i1 %519, label %522, label %524

522:                                              ; preds = %515
  %523 = add i32 %521, -1
  store i32 %523, i32* %520, align 4
  br label %524

524:                                              ; preds = %522, %515
  %525 = phi i32 [ %523, %522 ], [ %521, %515 ]
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %528

527:                                              ; preds = %524
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %513) #12
  br label %528

528:                                              ; preds = %527, %524, %507
  %529 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %508, align 8
  %530 = icmp eq %"class.WTF::StringImpl"* %529, null
  br i1 %530, label %544, label %531

531:                                              ; preds = %528
  %532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load atomic i32, i32* %532 monotonic, align 4
  %534 = and i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 0
  %537 = load i32, i32* %536, align 4
  br i1 %535, label %538, label %540

538:                                              ; preds = %531
  %539 = add i32 %537, -1
  store i32 %539, i32* %536, align 4
  br label %540

540:                                              ; preds = %538, %531
  %541 = phi i32 [ %539, %538 ], [ %537, %531 ]
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %544

543:                                              ; preds = %540
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %529) #12
  br label %544

544:                                              ; preds = %543, %540, %528
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %461) #12
  br label %1492

545:                                              ; preds = %287
  %546 = bitcast %"class.WTF::StringAppend.1495"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %546) #12
  %547 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %548 = icmp eq %"class.WTF::StringImpl"* %547, null
  br i1 %548, label %592, label %549

549:                                              ; preds = %545
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %547, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %551 = load atomic i32, i32* %550 monotonic, align 4
  %552 = and i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %547, i64 0, i32 0
  %555 = load i32, i32* %554, align 4
  br i1 %553, label %556, label %566

556:                                              ; preds = %549
  %557 = zext i32 %555 to i33
  %558 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %557, i33 1) #12
  %559 = extractvalue { i33, i1 } %558, 1
  %560 = extractvalue { i33, i1 } %558, 0
  %561 = icmp slt i33 %560, 0
  %562 = or i1 %559, %561
  br i1 %562, label %563, label %564, !prof !2

563:                                              ; preds = %556
  call void @llvm.trap() #12
  unreachable

564:                                              ; preds = %556
  %565 = trunc i33 %560 to i32
  store i32 %565, i32* %554, align 4
  br label %566

566:                                              ; preds = %564, %549
  %567 = phi i32 [ %565, %564 ], [ %555, %549 ]
  %568 = load atomic i32, i32* %550 monotonic, align 4
  %569 = and i32 %568, 2
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %581

571:                                              ; preds = %566
  %572 = zext i32 %567 to i33
  %573 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %572, i33 1) #12
  %574 = extractvalue { i33, i1 } %573, 1
  %575 = extractvalue { i33, i1 } %573, 0
  %576 = icmp slt i33 %575, 0
  %577 = or i1 %574, %576
  br i1 %577, label %578, label %579, !prof !2

578:                                              ; preds = %571
  call void @llvm.trap() #12
  unreachable

579:                                              ; preds = %571
  %580 = trunc i33 %575 to i32
  store i32 %580, i32* %554, align 4
  br label %581

581:                                              ; preds = %579, %566
  %582 = phi i32 [ %580, %579 ], [ %567, %566 ]
  %583 = load atomic i32, i32* %550 monotonic, align 4
  %584 = and i32 %583, 2
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %588

586:                                              ; preds = %581
  %587 = add i32 %582, -1
  store i32 %587, i32* %554, align 4
  br label %588

588:                                              ; preds = %586, %581
  %589 = phi i32 [ %587, %586 ], [ %582, %581 ]
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %591, label %592

591:                                              ; preds = %588
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %547) #12
  br label %592

592:                                              ; preds = %591, %588, %545
  %593 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %547, %"class.WTF::StringImpl"** %593, align 8
  %594 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i64 0, i64 0), i8** %594, align 8
  %595 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %20) #12
  %596 = ptrtoint %"class.WTF::StringImpl"* %595 to i64
  %597 = bitcast %"class.WTF::String"* %16 to i64*
  %598 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %596, i64* %597, align 8
  %599 = icmp eq %"class.WTF::StringImpl"* %598, null
  br i1 %599, label %613, label %600

600:                                              ; preds = %592
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = load atomic i32, i32* %601 monotonic, align 4
  %603 = and i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 0
  %606 = load i32, i32* %605, align 4
  br i1 %604, label %607, label %609

607:                                              ; preds = %600
  %608 = add i32 %606, -1
  store i32 %608, i32* %605, align 4
  br label %609

609:                                              ; preds = %607, %600
  %610 = phi i32 [ %608, %607 ], [ %606, %600 ]
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %613

612:                                              ; preds = %609
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %598) #12
  br label %613

613:                                              ; preds = %612, %609, %592
  %614 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %593, align 8
  %615 = icmp eq %"class.WTF::StringImpl"* %614, null
  br i1 %615, label %629, label %616

616:                                              ; preds = %613
  %617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %614, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %618 = load atomic i32, i32* %617 monotonic, align 4
  %619 = and i32 %618, 2
  %620 = icmp eq i32 %619, 0
  %621 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %614, i64 0, i32 0
  %622 = load i32, i32* %621, align 4
  br i1 %620, label %623, label %625

623:                                              ; preds = %616
  %624 = add i32 %622, -1
  store i32 %624, i32* %621, align 4
  br label %625

625:                                              ; preds = %623, %616
  %626 = phi i32 [ %624, %623 ], [ %622, %616 ]
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %628, label %629

628:                                              ; preds = %625
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %614) #12
  br label %629

629:                                              ; preds = %628, %625, %613
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %546) #12
  br label %1492

630:                                              ; preds = %287
  %631 = bitcast %"class.WTF::StringAppend.1495"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %631) #12
  %632 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %633 = icmp eq %"class.WTF::StringImpl"* %632, null
  br i1 %633, label %677, label %634

634:                                              ; preds = %630
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load atomic i32, i32* %635 monotonic, align 4
  %637 = and i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 0
  %640 = load i32, i32* %639, align 4
  br i1 %638, label %641, label %651

641:                                              ; preds = %634
  %642 = zext i32 %640 to i33
  %643 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %642, i33 1) #12
  %644 = extractvalue { i33, i1 } %643, 1
  %645 = extractvalue { i33, i1 } %643, 0
  %646 = icmp slt i33 %645, 0
  %647 = or i1 %644, %646
  br i1 %647, label %648, label %649, !prof !2

648:                                              ; preds = %641
  call void @llvm.trap() #12
  unreachable

649:                                              ; preds = %641
  %650 = trunc i33 %645 to i32
  store i32 %650, i32* %639, align 4
  br label %651

651:                                              ; preds = %649, %634
  %652 = phi i32 [ %650, %649 ], [ %640, %634 ]
  %653 = load atomic i32, i32* %635 monotonic, align 4
  %654 = and i32 %653, 2
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %656, label %666

656:                                              ; preds = %651
  %657 = zext i32 %652 to i33
  %658 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %657, i33 1) #12
  %659 = extractvalue { i33, i1 } %658, 1
  %660 = extractvalue { i33, i1 } %658, 0
  %661 = icmp slt i33 %660, 0
  %662 = or i1 %659, %661
  br i1 %662, label %663, label %664, !prof !2

663:                                              ; preds = %656
  call void @llvm.trap() #12
  unreachable

664:                                              ; preds = %656
  %665 = trunc i33 %660 to i32
  store i32 %665, i32* %639, align 4
  br label %666

666:                                              ; preds = %664, %651
  %667 = phi i32 [ %665, %664 ], [ %652, %651 ]
  %668 = load atomic i32, i32* %635 monotonic, align 4
  %669 = and i32 %668, 2
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %673

671:                                              ; preds = %666
  %672 = add i32 %667, -1
  store i32 %672, i32* %639, align 4
  br label %673

673:                                              ; preds = %671, %666
  %674 = phi i32 [ %672, %671 ], [ %667, %666 ]
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %677

676:                                              ; preds = %673
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %632) #12
  br label %677

677:                                              ; preds = %676, %673, %630
  %678 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %21, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %632, %"class.WTF::StringImpl"** %678, align 8
  %679 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i64 0, i64 0), i8** %679, align 8
  %680 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %21) #12
  %681 = ptrtoint %"class.WTF::StringImpl"* %680 to i64
  %682 = bitcast %"class.WTF::String"* %16 to i64*
  %683 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %681, i64* %682, align 8
  %684 = icmp eq %"class.WTF::StringImpl"* %683, null
  br i1 %684, label %698, label %685

685:                                              ; preds = %677
  %686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %683, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %687 = load atomic i32, i32* %686 monotonic, align 4
  %688 = and i32 %687, 2
  %689 = icmp eq i32 %688, 0
  %690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %683, i64 0, i32 0
  %691 = load i32, i32* %690, align 4
  br i1 %689, label %692, label %694

692:                                              ; preds = %685
  %693 = add i32 %691, -1
  store i32 %693, i32* %690, align 4
  br label %694

694:                                              ; preds = %692, %685
  %695 = phi i32 [ %693, %692 ], [ %691, %685 ]
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %698

697:                                              ; preds = %694
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %683) #12
  br label %698

698:                                              ; preds = %697, %694, %677
  %699 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %678, align 8
  %700 = icmp eq %"class.WTF::StringImpl"* %699, null
  br i1 %700, label %714, label %701

701:                                              ; preds = %698
  %702 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %699, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %703 = load atomic i32, i32* %702 monotonic, align 4
  %704 = and i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %699, i64 0, i32 0
  %707 = load i32, i32* %706, align 4
  br i1 %705, label %708, label %710

708:                                              ; preds = %701
  %709 = add i32 %707, -1
  store i32 %709, i32* %706, align 4
  br label %710

710:                                              ; preds = %708, %701
  %711 = phi i32 [ %709, %708 ], [ %707, %701 ]
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %713, label %714

713:                                              ; preds = %710
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %699) #12
  br label %714

714:                                              ; preds = %713, %710, %698
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %631) #12
  br label %1492

715:                                              ; preds = %287
  %716 = bitcast %"class.WTF::StringAppend.1495"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %716) #12
  %717 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %718 = icmp eq %"class.WTF::StringImpl"* %717, null
  br i1 %718, label %762, label %719

719:                                              ; preds = %715
  %720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %721 = load atomic i32, i32* %720 monotonic, align 4
  %722 = and i32 %721, 2
  %723 = icmp eq i32 %722, 0
  %724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 0
  %725 = load i32, i32* %724, align 4
  br i1 %723, label %726, label %736

726:                                              ; preds = %719
  %727 = zext i32 %725 to i33
  %728 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %727, i33 1) #12
  %729 = extractvalue { i33, i1 } %728, 1
  %730 = extractvalue { i33, i1 } %728, 0
  %731 = icmp slt i33 %730, 0
  %732 = or i1 %729, %731
  br i1 %732, label %733, label %734, !prof !2

733:                                              ; preds = %726
  call void @llvm.trap() #12
  unreachable

734:                                              ; preds = %726
  %735 = trunc i33 %730 to i32
  store i32 %735, i32* %724, align 4
  br label %736

736:                                              ; preds = %734, %719
  %737 = phi i32 [ %735, %734 ], [ %725, %719 ]
  %738 = load atomic i32, i32* %720 monotonic, align 4
  %739 = and i32 %738, 2
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %741, label %751

741:                                              ; preds = %736
  %742 = zext i32 %737 to i33
  %743 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %742, i33 1) #12
  %744 = extractvalue { i33, i1 } %743, 1
  %745 = extractvalue { i33, i1 } %743, 0
  %746 = icmp slt i33 %745, 0
  %747 = or i1 %744, %746
  br i1 %747, label %748, label %749, !prof !2

748:                                              ; preds = %741
  call void @llvm.trap() #12
  unreachable

749:                                              ; preds = %741
  %750 = trunc i33 %745 to i32
  store i32 %750, i32* %724, align 4
  br label %751

751:                                              ; preds = %749, %736
  %752 = phi i32 [ %750, %749 ], [ %737, %736 ]
  %753 = load atomic i32, i32* %720 monotonic, align 4
  %754 = and i32 %753, 2
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %756, label %758

756:                                              ; preds = %751
  %757 = add i32 %752, -1
  store i32 %757, i32* %724, align 4
  br label %758

758:                                              ; preds = %756, %751
  %759 = phi i32 [ %757, %756 ], [ %752, %751 ]
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %761, label %762

761:                                              ; preds = %758
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %717) #12
  br label %762

762:                                              ; preds = %761, %758, %715
  %763 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %22, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %717, %"class.WTF::StringImpl"** %763, align 8
  %764 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i64 0, i64 0), i8** %764, align 8
  %765 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %22) #12
  %766 = ptrtoint %"class.WTF::StringImpl"* %765 to i64
  %767 = bitcast %"class.WTF::String"* %16 to i64*
  %768 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %766, i64* %767, align 8
  %769 = icmp eq %"class.WTF::StringImpl"* %768, null
  br i1 %769, label %783, label %770

770:                                              ; preds = %762
  %771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %768, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %772 = load atomic i32, i32* %771 monotonic, align 4
  %773 = and i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %768, i64 0, i32 0
  %776 = load i32, i32* %775, align 4
  br i1 %774, label %777, label %779

777:                                              ; preds = %770
  %778 = add i32 %776, -1
  store i32 %778, i32* %775, align 4
  br label %779

779:                                              ; preds = %777, %770
  %780 = phi i32 [ %778, %777 ], [ %776, %770 ]
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %782, label %783

782:                                              ; preds = %779
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %768) #12
  br label %783

783:                                              ; preds = %782, %779, %762
  %784 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %763, align 8
  %785 = icmp eq %"class.WTF::StringImpl"* %784, null
  br i1 %785, label %799, label %786

786:                                              ; preds = %783
  %787 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %784, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %788 = load atomic i32, i32* %787 monotonic, align 4
  %789 = and i32 %788, 2
  %790 = icmp eq i32 %789, 0
  %791 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %784, i64 0, i32 0
  %792 = load i32, i32* %791, align 4
  br i1 %790, label %793, label %795

793:                                              ; preds = %786
  %794 = add i32 %792, -1
  store i32 %794, i32* %791, align 4
  br label %795

795:                                              ; preds = %793, %786
  %796 = phi i32 [ %794, %793 ], [ %792, %786 ]
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %798, label %799

798:                                              ; preds = %795
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %784) #12
  br label %799

799:                                              ; preds = %798, %795, %783
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %716) #12
  br label %1492

800:                                              ; preds = %287
  %801 = bitcast %"class.WTF::StringAppend.1495"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %801) #12
  %802 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %803 = icmp eq %"class.WTF::StringImpl"* %802, null
  br i1 %803, label %847, label %804

804:                                              ; preds = %800
  %805 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %802, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %806 = load atomic i32, i32* %805 monotonic, align 4
  %807 = and i32 %806, 2
  %808 = icmp eq i32 %807, 0
  %809 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %802, i64 0, i32 0
  %810 = load i32, i32* %809, align 4
  br i1 %808, label %811, label %821

811:                                              ; preds = %804
  %812 = zext i32 %810 to i33
  %813 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %812, i33 1) #12
  %814 = extractvalue { i33, i1 } %813, 1
  %815 = extractvalue { i33, i1 } %813, 0
  %816 = icmp slt i33 %815, 0
  %817 = or i1 %814, %816
  br i1 %817, label %818, label %819, !prof !2

818:                                              ; preds = %811
  call void @llvm.trap() #12
  unreachable

819:                                              ; preds = %811
  %820 = trunc i33 %815 to i32
  store i32 %820, i32* %809, align 4
  br label %821

821:                                              ; preds = %819, %804
  %822 = phi i32 [ %820, %819 ], [ %810, %804 ]
  %823 = load atomic i32, i32* %805 monotonic, align 4
  %824 = and i32 %823, 2
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %826, label %836

826:                                              ; preds = %821
  %827 = zext i32 %822 to i33
  %828 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %827, i33 1) #12
  %829 = extractvalue { i33, i1 } %828, 1
  %830 = extractvalue { i33, i1 } %828, 0
  %831 = icmp slt i33 %830, 0
  %832 = or i1 %829, %831
  br i1 %832, label %833, label %834, !prof !2

833:                                              ; preds = %826
  call void @llvm.trap() #12
  unreachable

834:                                              ; preds = %826
  %835 = trunc i33 %830 to i32
  store i32 %835, i32* %809, align 4
  br label %836

836:                                              ; preds = %834, %821
  %837 = phi i32 [ %835, %834 ], [ %822, %821 ]
  %838 = load atomic i32, i32* %805 monotonic, align 4
  %839 = and i32 %838, 2
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %841, label %843

841:                                              ; preds = %836
  %842 = add i32 %837, -1
  store i32 %842, i32* %809, align 4
  br label %843

843:                                              ; preds = %841, %836
  %844 = phi i32 [ %842, %841 ], [ %837, %836 ]
  %845 = icmp eq i32 %844, 0
  br i1 %845, label %846, label %847

846:                                              ; preds = %843
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %802) #12
  br label %847

847:                                              ; preds = %846, %843, %800
  %848 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %23, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %802, %"class.WTF::StringImpl"** %848, align 8
  %849 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.53, i64 0, i64 0), i8** %849, align 8
  %850 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %23) #12
  %851 = ptrtoint %"class.WTF::StringImpl"* %850 to i64
  %852 = bitcast %"class.WTF::String"* %16 to i64*
  %853 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %851, i64* %852, align 8
  %854 = icmp eq %"class.WTF::StringImpl"* %853, null
  br i1 %854, label %868, label %855

855:                                              ; preds = %847
  %856 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %853, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %857 = load atomic i32, i32* %856 monotonic, align 4
  %858 = and i32 %857, 2
  %859 = icmp eq i32 %858, 0
  %860 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %853, i64 0, i32 0
  %861 = load i32, i32* %860, align 4
  br i1 %859, label %862, label %864

862:                                              ; preds = %855
  %863 = add i32 %861, -1
  store i32 %863, i32* %860, align 4
  br label %864

864:                                              ; preds = %862, %855
  %865 = phi i32 [ %863, %862 ], [ %861, %855 ]
  %866 = icmp eq i32 %865, 0
  br i1 %866, label %867, label %868

867:                                              ; preds = %864
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %853) #12
  br label %868

868:                                              ; preds = %867, %864, %847
  %869 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %848, align 8
  %870 = icmp eq %"class.WTF::StringImpl"* %869, null
  br i1 %870, label %884, label %871

871:                                              ; preds = %868
  %872 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %873 = load atomic i32, i32* %872 monotonic, align 4
  %874 = and i32 %873, 2
  %875 = icmp eq i32 %874, 0
  %876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 0
  %877 = load i32, i32* %876, align 4
  br i1 %875, label %878, label %880

878:                                              ; preds = %871
  %879 = add i32 %877, -1
  store i32 %879, i32* %876, align 4
  br label %880

880:                                              ; preds = %878, %871
  %881 = phi i32 [ %879, %878 ], [ %877, %871 ]
  %882 = icmp eq i32 %881, 0
  br i1 %882, label %883, label %884

883:                                              ; preds = %880
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %869) #12
  br label %884

884:                                              ; preds = %883, %880, %868
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %801) #12
  br label %1492

885:                                              ; preds = %287
  %886 = bitcast %"class.WTF::StringAppend.1495"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %886) #12
  %887 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %888 = icmp eq %"class.WTF::StringImpl"* %887, null
  br i1 %888, label %932, label %889

889:                                              ; preds = %885
  %890 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %887, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %891 = load atomic i32, i32* %890 monotonic, align 4
  %892 = and i32 %891, 2
  %893 = icmp eq i32 %892, 0
  %894 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %887, i64 0, i32 0
  %895 = load i32, i32* %894, align 4
  br i1 %893, label %896, label %906

896:                                              ; preds = %889
  %897 = zext i32 %895 to i33
  %898 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %897, i33 1) #12
  %899 = extractvalue { i33, i1 } %898, 1
  %900 = extractvalue { i33, i1 } %898, 0
  %901 = icmp slt i33 %900, 0
  %902 = or i1 %899, %901
  br i1 %902, label %903, label %904, !prof !2

903:                                              ; preds = %896
  call void @llvm.trap() #12
  unreachable

904:                                              ; preds = %896
  %905 = trunc i33 %900 to i32
  store i32 %905, i32* %894, align 4
  br label %906

906:                                              ; preds = %904, %889
  %907 = phi i32 [ %905, %904 ], [ %895, %889 ]
  %908 = load atomic i32, i32* %890 monotonic, align 4
  %909 = and i32 %908, 2
  %910 = icmp eq i32 %909, 0
  br i1 %910, label %911, label %921

911:                                              ; preds = %906
  %912 = zext i32 %907 to i33
  %913 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %912, i33 1) #12
  %914 = extractvalue { i33, i1 } %913, 1
  %915 = extractvalue { i33, i1 } %913, 0
  %916 = icmp slt i33 %915, 0
  %917 = or i1 %914, %916
  br i1 %917, label %918, label %919, !prof !2

918:                                              ; preds = %911
  call void @llvm.trap() #12
  unreachable

919:                                              ; preds = %911
  %920 = trunc i33 %915 to i32
  store i32 %920, i32* %894, align 4
  br label %921

921:                                              ; preds = %919, %906
  %922 = phi i32 [ %920, %919 ], [ %907, %906 ]
  %923 = load atomic i32, i32* %890 monotonic, align 4
  %924 = and i32 %923, 2
  %925 = icmp eq i32 %924, 0
  br i1 %925, label %926, label %928

926:                                              ; preds = %921
  %927 = add i32 %922, -1
  store i32 %927, i32* %894, align 4
  br label %928

928:                                              ; preds = %926, %921
  %929 = phi i32 [ %927, %926 ], [ %922, %921 ]
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %931, label %932

931:                                              ; preds = %928
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %887) #12
  br label %932

932:                                              ; preds = %931, %928, %885
  %933 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %24, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %887, %"class.WTF::StringImpl"** %933, align 8
  %934 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), i8** %934, align 8
  %935 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %24) #12
  %936 = ptrtoint %"class.WTF::StringImpl"* %935 to i64
  %937 = bitcast %"class.WTF::String"* %16 to i64*
  %938 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %936, i64* %937, align 8
  %939 = icmp eq %"class.WTF::StringImpl"* %938, null
  br i1 %939, label %953, label %940

940:                                              ; preds = %932
  %941 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %938, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %942 = load atomic i32, i32* %941 monotonic, align 4
  %943 = and i32 %942, 2
  %944 = icmp eq i32 %943, 0
  %945 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %938, i64 0, i32 0
  %946 = load i32, i32* %945, align 4
  br i1 %944, label %947, label %949

947:                                              ; preds = %940
  %948 = add i32 %946, -1
  store i32 %948, i32* %945, align 4
  br label %949

949:                                              ; preds = %947, %940
  %950 = phi i32 [ %948, %947 ], [ %946, %940 ]
  %951 = icmp eq i32 %950, 0
  br i1 %951, label %952, label %953

952:                                              ; preds = %949
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %938) #12
  br label %953

953:                                              ; preds = %952, %949, %932
  %954 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %933, align 8
  %955 = icmp eq %"class.WTF::StringImpl"* %954, null
  br i1 %955, label %969, label %956

956:                                              ; preds = %953
  %957 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %954, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %958 = load atomic i32, i32* %957 monotonic, align 4
  %959 = and i32 %958, 2
  %960 = icmp eq i32 %959, 0
  %961 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %954, i64 0, i32 0
  %962 = load i32, i32* %961, align 4
  br i1 %960, label %963, label %965

963:                                              ; preds = %956
  %964 = add i32 %962, -1
  store i32 %964, i32* %961, align 4
  br label %965

965:                                              ; preds = %963, %956
  %966 = phi i32 [ %964, %963 ], [ %962, %956 ]
  %967 = icmp eq i32 %966, 0
  br i1 %967, label %968, label %969

968:                                              ; preds = %965
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %954) #12
  br label %969

969:                                              ; preds = %968, %965, %953
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %886) #12
  br label %1492

970:                                              ; preds = %287
  %971 = bitcast %"class.WTF::StringAppend.1495"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %971) #12
  %972 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %973 = icmp eq %"class.WTF::StringImpl"* %972, null
  br i1 %973, label %1017, label %974

974:                                              ; preds = %970
  %975 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %972, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %976 = load atomic i32, i32* %975 monotonic, align 4
  %977 = and i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %972, i64 0, i32 0
  %980 = load i32, i32* %979, align 4
  br i1 %978, label %981, label %991

981:                                              ; preds = %974
  %982 = zext i32 %980 to i33
  %983 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %982, i33 1) #12
  %984 = extractvalue { i33, i1 } %983, 1
  %985 = extractvalue { i33, i1 } %983, 0
  %986 = icmp slt i33 %985, 0
  %987 = or i1 %984, %986
  br i1 %987, label %988, label %989, !prof !2

988:                                              ; preds = %981
  call void @llvm.trap() #12
  unreachable

989:                                              ; preds = %981
  %990 = trunc i33 %985 to i32
  store i32 %990, i32* %979, align 4
  br label %991

991:                                              ; preds = %989, %974
  %992 = phi i32 [ %990, %989 ], [ %980, %974 ]
  %993 = load atomic i32, i32* %975 monotonic, align 4
  %994 = and i32 %993, 2
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %996, label %1006

996:                                              ; preds = %991
  %997 = zext i32 %992 to i33
  %998 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %997, i33 1) #12
  %999 = extractvalue { i33, i1 } %998, 1
  %1000 = extractvalue { i33, i1 } %998, 0
  %1001 = icmp slt i33 %1000, 0
  %1002 = or i1 %999, %1001
  br i1 %1002, label %1003, label %1004, !prof !2

1003:                                             ; preds = %996
  call void @llvm.trap() #12
  unreachable

1004:                                             ; preds = %996
  %1005 = trunc i33 %1000 to i32
  store i32 %1005, i32* %979, align 4
  br label %1006

1006:                                             ; preds = %1004, %991
  %1007 = phi i32 [ %1005, %1004 ], [ %992, %991 ]
  %1008 = load atomic i32, i32* %975 monotonic, align 4
  %1009 = and i32 %1008, 2
  %1010 = icmp eq i32 %1009, 0
  br i1 %1010, label %1011, label %1013

1011:                                             ; preds = %1006
  %1012 = add i32 %1007, -1
  store i32 %1012, i32* %979, align 4
  br label %1013

1013:                                             ; preds = %1011, %1006
  %1014 = phi i32 [ %1012, %1011 ], [ %1007, %1006 ]
  %1015 = icmp eq i32 %1014, 0
  br i1 %1015, label %1016, label %1017

1016:                                             ; preds = %1013
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %972) #12
  br label %1017

1017:                                             ; preds = %1016, %1013, %970
  %1018 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %25, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %972, %"class.WTF::StringImpl"** %1018, align 8
  %1019 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i8** %1019, align 8
  %1020 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %25) #12
  %1021 = ptrtoint %"class.WTF::StringImpl"* %1020 to i64
  %1022 = bitcast %"class.WTF::String"* %16 to i64*
  %1023 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %1021, i64* %1022, align 8
  %1024 = icmp eq %"class.WTF::StringImpl"* %1023, null
  br i1 %1024, label %1038, label %1025

1025:                                             ; preds = %1017
  %1026 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1023, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1027 = load atomic i32, i32* %1026 monotonic, align 4
  %1028 = and i32 %1027, 2
  %1029 = icmp eq i32 %1028, 0
  %1030 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1023, i64 0, i32 0
  %1031 = load i32, i32* %1030, align 4
  br i1 %1029, label %1032, label %1034

1032:                                             ; preds = %1025
  %1033 = add i32 %1031, -1
  store i32 %1033, i32* %1030, align 4
  br label %1034

1034:                                             ; preds = %1032, %1025
  %1035 = phi i32 [ %1033, %1032 ], [ %1031, %1025 ]
  %1036 = icmp eq i32 %1035, 0
  br i1 %1036, label %1037, label %1038

1037:                                             ; preds = %1034
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1023) #12
  br label %1038

1038:                                             ; preds = %1037, %1034, %1017
  %1039 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1018, align 8
  %1040 = icmp eq %"class.WTF::StringImpl"* %1039, null
  br i1 %1040, label %1054, label %1041

1041:                                             ; preds = %1038
  %1042 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1039, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1043 = load atomic i32, i32* %1042 monotonic, align 4
  %1044 = and i32 %1043, 2
  %1045 = icmp eq i32 %1044, 0
  %1046 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1039, i64 0, i32 0
  %1047 = load i32, i32* %1046, align 4
  br i1 %1045, label %1048, label %1050

1048:                                             ; preds = %1041
  %1049 = add i32 %1047, -1
  store i32 %1049, i32* %1046, align 4
  br label %1050

1050:                                             ; preds = %1048, %1041
  %1051 = phi i32 [ %1049, %1048 ], [ %1047, %1041 ]
  %1052 = icmp eq i32 %1051, 0
  br i1 %1052, label %1053, label %1054

1053:                                             ; preds = %1050
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1039) #12
  br label %1054

1054:                                             ; preds = %1053, %1050, %1038
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %971) #12
  br label %1492

1055:                                             ; preds = %287
  %1056 = bitcast %"class.WTF::StringAppend.1495"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1056) #12
  %1057 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %1058 = icmp eq %"class.WTF::StringImpl"* %1057, null
  br i1 %1058, label %1102, label %1059

1059:                                             ; preds = %1055
  %1060 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1057, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1061 = load atomic i32, i32* %1060 monotonic, align 4
  %1062 = and i32 %1061, 2
  %1063 = icmp eq i32 %1062, 0
  %1064 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1057, i64 0, i32 0
  %1065 = load i32, i32* %1064, align 4
  br i1 %1063, label %1066, label %1076

1066:                                             ; preds = %1059
  %1067 = zext i32 %1065 to i33
  %1068 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1067, i33 1) #12
  %1069 = extractvalue { i33, i1 } %1068, 1
  %1070 = extractvalue { i33, i1 } %1068, 0
  %1071 = icmp slt i33 %1070, 0
  %1072 = or i1 %1069, %1071
  br i1 %1072, label %1073, label %1074, !prof !2

1073:                                             ; preds = %1066
  call void @llvm.trap() #12
  unreachable

1074:                                             ; preds = %1066
  %1075 = trunc i33 %1070 to i32
  store i32 %1075, i32* %1064, align 4
  br label %1076

1076:                                             ; preds = %1074, %1059
  %1077 = phi i32 [ %1075, %1074 ], [ %1065, %1059 ]
  %1078 = load atomic i32, i32* %1060 monotonic, align 4
  %1079 = and i32 %1078, 2
  %1080 = icmp eq i32 %1079, 0
  br i1 %1080, label %1081, label %1091

1081:                                             ; preds = %1076
  %1082 = zext i32 %1077 to i33
  %1083 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1082, i33 1) #12
  %1084 = extractvalue { i33, i1 } %1083, 1
  %1085 = extractvalue { i33, i1 } %1083, 0
  %1086 = icmp slt i33 %1085, 0
  %1087 = or i1 %1084, %1086
  br i1 %1087, label %1088, label %1089, !prof !2

1088:                                             ; preds = %1081
  call void @llvm.trap() #12
  unreachable

1089:                                             ; preds = %1081
  %1090 = trunc i33 %1085 to i32
  store i32 %1090, i32* %1064, align 4
  br label %1091

1091:                                             ; preds = %1089, %1076
  %1092 = phi i32 [ %1090, %1089 ], [ %1077, %1076 ]
  %1093 = load atomic i32, i32* %1060 monotonic, align 4
  %1094 = and i32 %1093, 2
  %1095 = icmp eq i32 %1094, 0
  br i1 %1095, label %1096, label %1098

1096:                                             ; preds = %1091
  %1097 = add i32 %1092, -1
  store i32 %1097, i32* %1064, align 4
  br label %1098

1098:                                             ; preds = %1096, %1091
  %1099 = phi i32 [ %1097, %1096 ], [ %1092, %1091 ]
  %1100 = icmp eq i32 %1099, 0
  br i1 %1100, label %1101, label %1102

1101:                                             ; preds = %1098
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1057) #12
  br label %1102

1102:                                             ; preds = %1101, %1098, %1055
  %1103 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %26, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1057, %"class.WTF::StringImpl"** %1103, align 8
  %1104 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i8** %1104, align 8
  %1105 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %26) #12
  %1106 = ptrtoint %"class.WTF::StringImpl"* %1105 to i64
  %1107 = bitcast %"class.WTF::String"* %16 to i64*
  %1108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %1106, i64* %1107, align 8
  %1109 = icmp eq %"class.WTF::StringImpl"* %1108, null
  br i1 %1109, label %1123, label %1110

1110:                                             ; preds = %1102
  %1111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1112 = load atomic i32, i32* %1111 monotonic, align 4
  %1113 = and i32 %1112, 2
  %1114 = icmp eq i32 %1113, 0
  %1115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1108, i64 0, i32 0
  %1116 = load i32, i32* %1115, align 4
  br i1 %1114, label %1117, label %1119

1117:                                             ; preds = %1110
  %1118 = add i32 %1116, -1
  store i32 %1118, i32* %1115, align 4
  br label %1119

1119:                                             ; preds = %1117, %1110
  %1120 = phi i32 [ %1118, %1117 ], [ %1116, %1110 ]
  %1121 = icmp eq i32 %1120, 0
  br i1 %1121, label %1122, label %1123

1122:                                             ; preds = %1119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1108) #12
  br label %1123

1123:                                             ; preds = %1122, %1119, %1102
  %1124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1103, align 8
  %1125 = icmp eq %"class.WTF::StringImpl"* %1124, null
  br i1 %1125, label %1139, label %1126

1126:                                             ; preds = %1123
  %1127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1128 = load atomic i32, i32* %1127 monotonic, align 4
  %1129 = and i32 %1128, 2
  %1130 = icmp eq i32 %1129, 0
  %1131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1124, i64 0, i32 0
  %1132 = load i32, i32* %1131, align 4
  br i1 %1130, label %1133, label %1135

1133:                                             ; preds = %1126
  %1134 = add i32 %1132, -1
  store i32 %1134, i32* %1131, align 4
  br label %1135

1135:                                             ; preds = %1133, %1126
  %1136 = phi i32 [ %1134, %1133 ], [ %1132, %1126 ]
  %1137 = icmp eq i32 %1136, 0
  br i1 %1137, label %1138, label %1139

1138:                                             ; preds = %1135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1124) #12
  br label %1139

1139:                                             ; preds = %1138, %1135, %1123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1056) #12
  br label %1492

1140:                                             ; preds = %287
  %1141 = bitcast %"class.WTF::StringAppend.1495"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1141) #12
  %1142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %1143 = icmp eq %"class.WTF::StringImpl"* %1142, null
  br i1 %1143, label %1187, label %1144

1144:                                             ; preds = %1140
  %1145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1146 = load atomic i32, i32* %1145 monotonic, align 4
  %1147 = and i32 %1146, 2
  %1148 = icmp eq i32 %1147, 0
  %1149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1142, i64 0, i32 0
  %1150 = load i32, i32* %1149, align 4
  br i1 %1148, label %1151, label %1161

1151:                                             ; preds = %1144
  %1152 = zext i32 %1150 to i33
  %1153 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1152, i33 1) #12
  %1154 = extractvalue { i33, i1 } %1153, 1
  %1155 = extractvalue { i33, i1 } %1153, 0
  %1156 = icmp slt i33 %1155, 0
  %1157 = or i1 %1154, %1156
  br i1 %1157, label %1158, label %1159, !prof !2

1158:                                             ; preds = %1151
  call void @llvm.trap() #12
  unreachable

1159:                                             ; preds = %1151
  %1160 = trunc i33 %1155 to i32
  store i32 %1160, i32* %1149, align 4
  br label %1161

1161:                                             ; preds = %1159, %1144
  %1162 = phi i32 [ %1160, %1159 ], [ %1150, %1144 ]
  %1163 = load atomic i32, i32* %1145 monotonic, align 4
  %1164 = and i32 %1163, 2
  %1165 = icmp eq i32 %1164, 0
  br i1 %1165, label %1166, label %1176

1166:                                             ; preds = %1161
  %1167 = zext i32 %1162 to i33
  %1168 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1167, i33 1) #12
  %1169 = extractvalue { i33, i1 } %1168, 1
  %1170 = extractvalue { i33, i1 } %1168, 0
  %1171 = icmp slt i33 %1170, 0
  %1172 = or i1 %1169, %1171
  br i1 %1172, label %1173, label %1174, !prof !2

1173:                                             ; preds = %1166
  call void @llvm.trap() #12
  unreachable

1174:                                             ; preds = %1166
  %1175 = trunc i33 %1170 to i32
  store i32 %1175, i32* %1149, align 4
  br label %1176

1176:                                             ; preds = %1174, %1161
  %1177 = phi i32 [ %1175, %1174 ], [ %1162, %1161 ]
  %1178 = load atomic i32, i32* %1145 monotonic, align 4
  %1179 = and i32 %1178, 2
  %1180 = icmp eq i32 %1179, 0
  br i1 %1180, label %1181, label %1183

1181:                                             ; preds = %1176
  %1182 = add i32 %1177, -1
  store i32 %1182, i32* %1149, align 4
  br label %1183

1183:                                             ; preds = %1181, %1176
  %1184 = phi i32 [ %1182, %1181 ], [ %1177, %1176 ]
  %1185 = icmp eq i32 %1184, 0
  br i1 %1185, label %1186, label %1187

1186:                                             ; preds = %1183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1142) #12
  br label %1187

1187:                                             ; preds = %1186, %1183, %1140
  %1188 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %27, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1142, %"class.WTF::StringImpl"** %1188, align 8
  %1189 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %27, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57, i64 0, i64 0), i8** %1189, align 8
  %1190 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %27) #12
  %1191 = ptrtoint %"class.WTF::StringImpl"* %1190 to i64
  %1192 = bitcast %"class.WTF::String"* %16 to i64*
  %1193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %1191, i64* %1192, align 8
  %1194 = icmp eq %"class.WTF::StringImpl"* %1193, null
  br i1 %1194, label %1208, label %1195

1195:                                             ; preds = %1187
  %1196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1197 = load atomic i32, i32* %1196 monotonic, align 4
  %1198 = and i32 %1197, 2
  %1199 = icmp eq i32 %1198, 0
  %1200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1193, i64 0, i32 0
  %1201 = load i32, i32* %1200, align 4
  br i1 %1199, label %1202, label %1204

1202:                                             ; preds = %1195
  %1203 = add i32 %1201, -1
  store i32 %1203, i32* %1200, align 4
  br label %1204

1204:                                             ; preds = %1202, %1195
  %1205 = phi i32 [ %1203, %1202 ], [ %1201, %1195 ]
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1207, label %1208

1207:                                             ; preds = %1204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1193) #12
  br label %1208

1208:                                             ; preds = %1207, %1204, %1187
  %1209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1188, align 8
  %1210 = icmp eq %"class.WTF::StringImpl"* %1209, null
  br i1 %1210, label %1224, label %1211

1211:                                             ; preds = %1208
  %1212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1213 = load atomic i32, i32* %1212 monotonic, align 4
  %1214 = and i32 %1213, 2
  %1215 = icmp eq i32 %1214, 0
  %1216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1209, i64 0, i32 0
  %1217 = load i32, i32* %1216, align 4
  br i1 %1215, label %1218, label %1220

1218:                                             ; preds = %1211
  %1219 = add i32 %1217, -1
  store i32 %1219, i32* %1216, align 4
  br label %1220

1220:                                             ; preds = %1218, %1211
  %1221 = phi i32 [ %1219, %1218 ], [ %1217, %1211 ]
  %1222 = icmp eq i32 %1221, 0
  br i1 %1222, label %1223, label %1224

1223:                                             ; preds = %1220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1209) #12
  br label %1224

1224:                                             ; preds = %1223, %1220, %1208
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1141) #12
  br label %1492

1225:                                             ; preds = %287, %287, %287
  %1226 = bitcast %"class.WTF::StringAppend.1495"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1226) #12
  %1227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %1228 = icmp eq %"class.WTF::StringImpl"* %1227, null
  br i1 %1228, label %1272, label %1229

1229:                                             ; preds = %1225
  %1230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1231 = load atomic i32, i32* %1230 monotonic, align 4
  %1232 = and i32 %1231, 2
  %1233 = icmp eq i32 %1232, 0
  %1234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1227, i64 0, i32 0
  %1235 = load i32, i32* %1234, align 4
  br i1 %1233, label %1236, label %1246

1236:                                             ; preds = %1229
  %1237 = zext i32 %1235 to i33
  %1238 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1237, i33 1) #12
  %1239 = extractvalue { i33, i1 } %1238, 1
  %1240 = extractvalue { i33, i1 } %1238, 0
  %1241 = icmp slt i33 %1240, 0
  %1242 = or i1 %1239, %1241
  br i1 %1242, label %1243, label %1244, !prof !2

1243:                                             ; preds = %1236
  call void @llvm.trap() #12
  unreachable

1244:                                             ; preds = %1236
  %1245 = trunc i33 %1240 to i32
  store i32 %1245, i32* %1234, align 4
  br label %1246

1246:                                             ; preds = %1244, %1229
  %1247 = phi i32 [ %1245, %1244 ], [ %1235, %1229 ]
  %1248 = load atomic i32, i32* %1230 monotonic, align 4
  %1249 = and i32 %1248, 2
  %1250 = icmp eq i32 %1249, 0
  br i1 %1250, label %1251, label %1261

1251:                                             ; preds = %1246
  %1252 = zext i32 %1247 to i33
  %1253 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1252, i33 1) #12
  %1254 = extractvalue { i33, i1 } %1253, 1
  %1255 = extractvalue { i33, i1 } %1253, 0
  %1256 = icmp slt i33 %1255, 0
  %1257 = or i1 %1254, %1256
  br i1 %1257, label %1258, label %1259, !prof !2

1258:                                             ; preds = %1251
  call void @llvm.trap() #12
  unreachable

1259:                                             ; preds = %1251
  %1260 = trunc i33 %1255 to i32
  store i32 %1260, i32* %1234, align 4
  br label %1261

1261:                                             ; preds = %1259, %1246
  %1262 = phi i32 [ %1260, %1259 ], [ %1247, %1246 ]
  %1263 = load atomic i32, i32* %1230 monotonic, align 4
  %1264 = and i32 %1263, 2
  %1265 = icmp eq i32 %1264, 0
  br i1 %1265, label %1266, label %1268

1266:                                             ; preds = %1261
  %1267 = add i32 %1262, -1
  store i32 %1267, i32* %1234, align 4
  br label %1268

1268:                                             ; preds = %1266, %1261
  %1269 = phi i32 [ %1267, %1266 ], [ %1262, %1261 ]
  %1270 = icmp eq i32 %1269, 0
  br i1 %1270, label %1271, label %1272

1271:                                             ; preds = %1268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1227) #12
  br label %1272

1272:                                             ; preds = %1271, %1268, %1225
  %1273 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %28, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1227, %"class.WTF::StringImpl"** %1273, align 8
  %1274 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %28, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58, i64 0, i64 0), i8** %1274, align 8
  %1275 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %28) #12
  %1276 = ptrtoint %"class.WTF::StringImpl"* %1275 to i64
  %1277 = bitcast %"class.WTF::String"* %16 to i64*
  %1278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %1276, i64* %1277, align 8
  %1279 = icmp eq %"class.WTF::StringImpl"* %1278, null
  br i1 %1279, label %1293, label %1280

1280:                                             ; preds = %1272
  %1281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1282 = load atomic i32, i32* %1281 monotonic, align 4
  %1283 = and i32 %1282, 2
  %1284 = icmp eq i32 %1283, 0
  %1285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1278, i64 0, i32 0
  %1286 = load i32, i32* %1285, align 4
  br i1 %1284, label %1287, label %1289

1287:                                             ; preds = %1280
  %1288 = add i32 %1286, -1
  store i32 %1288, i32* %1285, align 4
  br label %1289

1289:                                             ; preds = %1287, %1280
  %1290 = phi i32 [ %1288, %1287 ], [ %1286, %1280 ]
  %1291 = icmp eq i32 %1290, 0
  br i1 %1291, label %1292, label %1293

1292:                                             ; preds = %1289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1278) #12
  br label %1293

1293:                                             ; preds = %1292, %1289, %1272
  %1294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1273, align 8
  %1295 = icmp eq %"class.WTF::StringImpl"* %1294, null
  br i1 %1295, label %1309, label %1296

1296:                                             ; preds = %1293
  %1297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1298 = load atomic i32, i32* %1297 monotonic, align 4
  %1299 = and i32 %1298, 2
  %1300 = icmp eq i32 %1299, 0
  %1301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1294, i64 0, i32 0
  %1302 = load i32, i32* %1301, align 4
  br i1 %1300, label %1303, label %1305

1303:                                             ; preds = %1296
  %1304 = add i32 %1302, -1
  store i32 %1304, i32* %1301, align 4
  br label %1305

1305:                                             ; preds = %1303, %1296
  %1306 = phi i32 [ %1304, %1303 ], [ %1302, %1296 ]
  %1307 = icmp eq i32 %1306, 0
  br i1 %1307, label %1308, label %1309

1308:                                             ; preds = %1305
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1294) #12
  br label %1309

1309:                                             ; preds = %1293, %1305, %1308
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1226) #12
  br label %1484

1310:                                             ; preds = %287
  %1311 = add i32 %2, -23
  %1312 = icmp ult i32 %1311, 3
  br i1 %1312, label %1313, label %1397

1313:                                             ; preds = %1310
  %1314 = bitcast %"class.WTF::StringAppend.1495"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1314) #12
  %1315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %1316 = icmp eq %"class.WTF::StringImpl"* %1315, null
  br i1 %1316, label %1360, label %1317

1317:                                             ; preds = %1313
  %1318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1319 = load atomic i32, i32* %1318 monotonic, align 4
  %1320 = and i32 %1319, 2
  %1321 = icmp eq i32 %1320, 0
  %1322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1315, i64 0, i32 0
  %1323 = load i32, i32* %1322, align 4
  br i1 %1321, label %1324, label %1334

1324:                                             ; preds = %1317
  %1325 = zext i32 %1323 to i33
  %1326 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1325, i33 1) #12
  %1327 = extractvalue { i33, i1 } %1326, 1
  %1328 = extractvalue { i33, i1 } %1326, 0
  %1329 = icmp slt i33 %1328, 0
  %1330 = or i1 %1327, %1329
  br i1 %1330, label %1331, label %1332, !prof !2

1331:                                             ; preds = %1324
  call void @llvm.trap() #12
  unreachable

1332:                                             ; preds = %1324
  %1333 = trunc i33 %1328 to i32
  store i32 %1333, i32* %1322, align 4
  br label %1334

1334:                                             ; preds = %1332, %1317
  %1335 = phi i32 [ %1333, %1332 ], [ %1323, %1317 ]
  %1336 = load atomic i32, i32* %1318 monotonic, align 4
  %1337 = and i32 %1336, 2
  %1338 = icmp eq i32 %1337, 0
  br i1 %1338, label %1339, label %1349

1339:                                             ; preds = %1334
  %1340 = zext i32 %1335 to i33
  %1341 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1340, i33 1) #12
  %1342 = extractvalue { i33, i1 } %1341, 1
  %1343 = extractvalue { i33, i1 } %1341, 0
  %1344 = icmp slt i33 %1343, 0
  %1345 = or i1 %1342, %1344
  br i1 %1345, label %1346, label %1347, !prof !2

1346:                                             ; preds = %1339
  call void @llvm.trap() #12
  unreachable

1347:                                             ; preds = %1339
  %1348 = trunc i33 %1343 to i32
  store i32 %1348, i32* %1322, align 4
  br label %1349

1349:                                             ; preds = %1347, %1334
  %1350 = phi i32 [ %1348, %1347 ], [ %1335, %1334 ]
  %1351 = load atomic i32, i32* %1318 monotonic, align 4
  %1352 = and i32 %1351, 2
  %1353 = icmp eq i32 %1352, 0
  br i1 %1353, label %1354, label %1356

1354:                                             ; preds = %1349
  %1355 = add i32 %1350, -1
  store i32 %1355, i32* %1322, align 4
  br label %1356

1356:                                             ; preds = %1354, %1349
  %1357 = phi i32 [ %1355, %1354 ], [ %1350, %1349 ]
  %1358 = icmp eq i32 %1357, 0
  br i1 %1358, label %1359, label %1360

1359:                                             ; preds = %1356
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1315) #12
  br label %1360

1360:                                             ; preds = %1359, %1356, %1313
  %1361 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1315, %"class.WTF::StringImpl"** %1361, align 8
  %1362 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i8** %1362, align 8
  %1363 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %29) #12
  %1364 = ptrtoint %"class.WTF::StringImpl"* %1363 to i64
  %1365 = bitcast %"class.WTF::String"* %16 to i64*
  %1366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %1364, i64* %1365, align 8
  %1367 = icmp eq %"class.WTF::StringImpl"* %1366, null
  br i1 %1367, label %1381, label %1368

1368:                                             ; preds = %1360
  %1369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1366, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1370 = load atomic i32, i32* %1369 monotonic, align 4
  %1371 = and i32 %1370, 2
  %1372 = icmp eq i32 %1371, 0
  %1373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1366, i64 0, i32 0
  %1374 = load i32, i32* %1373, align 4
  br i1 %1372, label %1375, label %1377

1375:                                             ; preds = %1368
  %1376 = add i32 %1374, -1
  store i32 %1376, i32* %1373, align 4
  br label %1377

1377:                                             ; preds = %1375, %1368
  %1378 = phi i32 [ %1376, %1375 ], [ %1374, %1368 ]
  %1379 = icmp eq i32 %1378, 0
  br i1 %1379, label %1380, label %1381

1380:                                             ; preds = %1377
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1366) #12
  br label %1381

1381:                                             ; preds = %1380, %1377, %1360
  %1382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1361, align 8
  %1383 = icmp eq %"class.WTF::StringImpl"* %1382, null
  br i1 %1383, label %1483, label %1384

1384:                                             ; preds = %1381
  %1385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1386 = load atomic i32, i32* %1385 monotonic, align 4
  %1387 = and i32 %1386, 2
  %1388 = icmp eq i32 %1387, 0
  %1389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1382, i64 0, i32 0
  %1390 = load i32, i32* %1389, align 4
  br i1 %1388, label %1391, label %1393

1391:                                             ; preds = %1384
  %1392 = add i32 %1390, -1
  store i32 %1392, i32* %1389, align 4
  br label %1393

1393:                                             ; preds = %1391, %1384
  %1394 = phi i32 [ %1392, %1391 ], [ %1390, %1384 ]
  %1395 = icmp eq i32 %1394, 0
  br i1 %1395, label %1396, label %1483

1396:                                             ; preds = %1393
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1382) #12
  br label %1483

1397:                                             ; preds = %1310
  switch i32 %2, label %1492 [
    i32 13, label %1398
    i32 29, label %1484
    i32 22, label %1484
    i32 21, label %1484
    i32 20, label %1484
  ]

1398:                                             ; preds = %1397
  %1399 = bitcast %"class.WTF::StringAppend.1495"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1399) #12
  %1400 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %1401 = icmp eq %"class.WTF::StringImpl"* %1400, null
  br i1 %1401, label %1445, label %1402

1402:                                             ; preds = %1398
  %1403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1400, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1404 = load atomic i32, i32* %1403 monotonic, align 4
  %1405 = and i32 %1404, 2
  %1406 = icmp eq i32 %1405, 0
  %1407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1400, i64 0, i32 0
  %1408 = load i32, i32* %1407, align 4
  br i1 %1406, label %1409, label %1419

1409:                                             ; preds = %1402
  %1410 = zext i32 %1408 to i33
  %1411 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1410, i33 1) #12
  %1412 = extractvalue { i33, i1 } %1411, 1
  %1413 = extractvalue { i33, i1 } %1411, 0
  %1414 = icmp slt i33 %1413, 0
  %1415 = or i1 %1412, %1414
  br i1 %1415, label %1416, label %1417, !prof !2

1416:                                             ; preds = %1409
  call void @llvm.trap() #12
  unreachable

1417:                                             ; preds = %1409
  %1418 = trunc i33 %1413 to i32
  store i32 %1418, i32* %1407, align 4
  br label %1419

1419:                                             ; preds = %1417, %1402
  %1420 = phi i32 [ %1418, %1417 ], [ %1408, %1402 ]
  %1421 = load atomic i32, i32* %1403 monotonic, align 4
  %1422 = and i32 %1421, 2
  %1423 = icmp eq i32 %1422, 0
  br i1 %1423, label %1424, label %1434

1424:                                             ; preds = %1419
  %1425 = zext i32 %1420 to i33
  %1426 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1425, i33 1) #12
  %1427 = extractvalue { i33, i1 } %1426, 1
  %1428 = extractvalue { i33, i1 } %1426, 0
  %1429 = icmp slt i33 %1428, 0
  %1430 = or i1 %1427, %1429
  br i1 %1430, label %1431, label %1432, !prof !2

1431:                                             ; preds = %1424
  call void @llvm.trap() #12
  unreachable

1432:                                             ; preds = %1424
  %1433 = trunc i33 %1428 to i32
  store i32 %1433, i32* %1407, align 4
  br label %1434

1434:                                             ; preds = %1432, %1419
  %1435 = phi i32 [ %1433, %1432 ], [ %1420, %1419 ]
  %1436 = load atomic i32, i32* %1403 monotonic, align 4
  %1437 = and i32 %1436, 2
  %1438 = icmp eq i32 %1437, 0
  br i1 %1438, label %1439, label %1441

1439:                                             ; preds = %1434
  %1440 = add i32 %1435, -1
  store i32 %1440, i32* %1407, align 4
  br label %1441

1441:                                             ; preds = %1439, %1434
  %1442 = phi i32 [ %1440, %1439 ], [ %1435, %1434 ]
  %1443 = icmp eq i32 %1442, 0
  br i1 %1443, label %1444, label %1445

1444:                                             ; preds = %1441
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1400) #12
  br label %1445

1445:                                             ; preds = %1444, %1441, %1398
  %1446 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %30, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1400, %"class.WTF::StringImpl"** %1446, align 8
  %1447 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %30, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0), i8** %1447, align 8
  %1448 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"* nonnull %30) #12
  %1449 = ptrtoint %"class.WTF::StringImpl"* %1448 to i64
  %1450 = bitcast %"class.WTF::String"* %16 to i64*
  %1451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  store i64 %1449, i64* %1450, align 8
  %1452 = icmp eq %"class.WTF::StringImpl"* %1451, null
  br i1 %1452, label %1466, label %1453

1453:                                             ; preds = %1445
  %1454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1451, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1455 = load atomic i32, i32* %1454 monotonic, align 4
  %1456 = and i32 %1455, 2
  %1457 = icmp eq i32 %1456, 0
  %1458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1451, i64 0, i32 0
  %1459 = load i32, i32* %1458, align 4
  br i1 %1457, label %1460, label %1462

1460:                                             ; preds = %1453
  %1461 = add i32 %1459, -1
  store i32 %1461, i32* %1458, align 4
  br label %1462

1462:                                             ; preds = %1460, %1453
  %1463 = phi i32 [ %1461, %1460 ], [ %1459, %1453 ]
  %1464 = icmp eq i32 %1463, 0
  br i1 %1464, label %1465, label %1466

1465:                                             ; preds = %1462
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1451) #12
  br label %1466

1466:                                             ; preds = %1465, %1462, %1445
  %1467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1446, align 8
  %1468 = icmp eq %"class.WTF::StringImpl"* %1467, null
  br i1 %1468, label %1482, label %1469

1469:                                             ; preds = %1466
  %1470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1467, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1471 = load atomic i32, i32* %1470 monotonic, align 4
  %1472 = and i32 %1471, 2
  %1473 = icmp eq i32 %1472, 0
  %1474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1467, i64 0, i32 0
  %1475 = load i32, i32* %1474, align 4
  br i1 %1473, label %1476, label %1478

1476:                                             ; preds = %1469
  %1477 = add i32 %1475, -1
  store i32 %1477, i32* %1474, align 4
  br label %1478

1478:                                             ; preds = %1476, %1469
  %1479 = phi i32 [ %1477, %1476 ], [ %1475, %1469 ]
  %1480 = icmp eq i32 %1479, 0
  br i1 %1480, label %1481, label %1482

1481:                                             ; preds = %1478
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1467) #12
  br label %1482

1482:                                             ; preds = %1481, %1478, %1466
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1399) #12
  br label %1492

1483:                                             ; preds = %1381, %1393, %1396
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1314) #12
  br label %1492

1484:                                             ; preds = %1309, %1397, %1397, %1397, %1397, %459
  %1485 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %267, i64 0, i32 9
  %1486 = load i8, i8* %1485, align 2, !range !3
  %1487 = icmp eq i8 %1486, 0
  br i1 %1487, label %1492, label %1488

1488:                                             ; preds = %1484
  %1489 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1489) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %31, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.61, i64 0, i64 0), i64 69) #12
  %1490 = bitcast %"class.WTF::String"* %31 to i64*
  %1491 = load i64, i64* %1490, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1489) #12
  br label %1492

1492:                                             ; preds = %1483, %1488, %1484, %1482, %1397, %1224, %1139, %1054, %969, %884, %799, %714, %629, %544, %374
  %1493 = phi i64 [ %1491, %1488 ], [ 0, %1484 ], [ 0, %1483 ], [ 0, %629 ], [ 0, %799 ], [ 0, %969 ], [ 0, %1139 ], [ 0, %1482 ], [ 0, %1224 ], [ 0, %1054 ], [ 0, %884 ], [ 0, %714 ], [ 0, %544 ], [ 0, %374 ], [ 0, %1397 ]
  %1494 = inttoptr i64 %1493 to %"class.WTF::StringImpl"*
  %1495 = bitcast %"class.WTF::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1495) #12
  %1496 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %1496, align 8
  %1497 = call i8* @_ZN5blink21ContentSecurityPolicy16GetDirectiveNameEN7network5mojom16CSPDirectiveNameE(i32 %270) #12
  %1498 = icmp eq i8* %1497, null
  br i1 %1498, label %1501, label %1499

1499:                                             ; preds = %1492
  %1500 = call i64 @strlen(i8* nonnull %1497) #13
  br label %1501

1501:                                             ; preds = %1499, %1492
  %1502 = phi i64 [ %1500, %1499 ], [ 0, %1492 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %32, i8* %1497, i64 %1502) #12
  %1503 = bitcast %"class.WTF::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1503) #12
  %1504 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %1504, align 8
  %1505 = call i8* @_ZN5blink21ContentSecurityPolicy16GetDirectiveNameEN7network5mojom16CSPDirectiveNameE(i32 %2) #12
  %1506 = icmp eq i8* %1505, null
  br i1 %1506, label %1509, label %1507

1507:                                             ; preds = %1501
  %1508 = call i64 @strlen(i8* nonnull %1505) #13
  br label %1509

1509:                                             ; preds = %1507, %1501
  %1510 = phi i64 [ %1508, %1507 ], [ 0, %1501 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %33, i8* %1505, i64 %1510) #12
  %1511 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1496, align 8
  %1512 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1504, align 8
  %1513 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %1511, %"class.WTF::StringImpl"* %1512) #12
  br i1 %1513, label %1856, label %1514

1514:                                             ; preds = %1509
  %1515 = bitcast %"class.WTF::StringAppend.1498"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1515) #12
  %1516 = bitcast %"class.WTF::StringAppend.1499"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1516) #12
  %1517 = bitcast %"class.WTF::StringAppend.1496"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1517) #12
  %1518 = bitcast %"class.WTF::StringAppend.1497"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1518) #12
  %1519 = bitcast %"class.WTF::StringAppend.1495"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1519) #12
  %1520 = icmp eq i64 %1493, 0
  br i1 %1520, label %1564, label %1521

1521:                                             ; preds = %1514
  %1522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1494, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1523 = load atomic i32, i32* %1522 monotonic, align 4
  %1524 = and i32 %1523, 2
  %1525 = icmp eq i32 %1524, 0
  %1526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1494, i64 0, i32 0
  %1527 = load i32, i32* %1526, align 4
  br i1 %1525, label %1528, label %1538

1528:                                             ; preds = %1521
  %1529 = zext i32 %1527 to i33
  %1530 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1529, i33 1) #12
  %1531 = extractvalue { i33, i1 } %1530, 1
  %1532 = extractvalue { i33, i1 } %1530, 0
  %1533 = icmp slt i33 %1532, 0
  %1534 = or i1 %1531, %1533
  br i1 %1534, label %1535, label %1536, !prof !2

1535:                                             ; preds = %1528
  call void @llvm.trap() #12
  unreachable

1536:                                             ; preds = %1528
  %1537 = trunc i33 %1532 to i32
  store i32 %1537, i32* %1526, align 4
  br label %1538

1538:                                             ; preds = %1536, %1521
  %1539 = phi i32 [ %1537, %1536 ], [ %1527, %1521 ]
  %1540 = load atomic i32, i32* %1522 monotonic, align 4
  %1541 = and i32 %1540, 2
  %1542 = icmp eq i32 %1541, 0
  br i1 %1542, label %1543, label %1553

1543:                                             ; preds = %1538
  %1544 = zext i32 %1539 to i33
  %1545 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1544, i33 1) #12
  %1546 = extractvalue { i33, i1 } %1545, 1
  %1547 = extractvalue { i33, i1 } %1545, 0
  %1548 = icmp slt i33 %1547, 0
  %1549 = or i1 %1546, %1548
  br i1 %1549, label %1550, label %1551, !prof !2

1550:                                             ; preds = %1543
  call void @llvm.trap() #12
  unreachable

1551:                                             ; preds = %1543
  %1552 = trunc i33 %1547 to i32
  store i32 %1552, i32* %1526, align 4
  br label %1553

1553:                                             ; preds = %1551, %1538
  %1554 = phi i32 [ %1552, %1551 ], [ %1539, %1538 ]
  %1555 = load atomic i32, i32* %1522 monotonic, align 4
  %1556 = and i32 %1555, 2
  %1557 = icmp eq i32 %1556, 0
  br i1 %1557, label %1558, label %1560

1558:                                             ; preds = %1553
  %1559 = add i32 %1554, -1
  store i32 %1559, i32* %1526, align 4
  br label %1560

1560:                                             ; preds = %1558, %1553
  %1561 = phi i32 [ %1559, %1558 ], [ %1554, %1553 ]
  %1562 = icmp eq i32 %1561, 0
  br i1 %1562, label %1563, label %1564

1563:                                             ; preds = %1560
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1494) #12
  br label %1564

1564:                                             ; preds = %1563, %1560, %1514
  %1565 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %38, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1494, %"class.WTF::StringImpl"** %1565, align 8
  %1566 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), i8** %1566, align 8
  %1567 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1504, align 8
  %1568 = icmp eq %"class.WTF::StringImpl"* %1567, null
  br i1 %1568, label %1586, label %1569

1569:                                             ; preds = %1564
  %1570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1567, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1571 = load atomic i32, i32* %1570 monotonic, align 4
  %1572 = and i32 %1571, 2
  %1573 = icmp eq i32 %1572, 0
  br i1 %1573, label %1574, label %1586

1574:                                             ; preds = %1569
  %1575 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1567, i64 0, i32 0
  %1576 = load i32, i32* %1575, align 4
  %1577 = zext i32 %1576 to i33
  %1578 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1577, i33 1) #12
  %1579 = extractvalue { i33, i1 } %1578, 1
  %1580 = extractvalue { i33, i1 } %1578, 0
  %1581 = icmp slt i33 %1580, 0
  %1582 = or i1 %1579, %1581
  br i1 %1582, label %1583, label %1584, !prof !2

1583:                                             ; preds = %1574
  call void @llvm.trap() #12
  unreachable

1584:                                             ; preds = %1574
  %1585 = trunc i33 %1580 to i32
  store i32 %1585, i32* %1575, align 4
  br label %1586

1586:                                             ; preds = %1584, %1569, %1564
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.1497"* nonnull sret %37, %"class.WTF::StringAppend.1495"* nonnull dereferenceable(16) %38, %"class.WTF::StringImpl"* %1567) #12
  %1587 = bitcast %"class.WTF::StringAppend.1497"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1587) #12
  %1588 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %1589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1588, align 8, !noalias !32
  %1590 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1589, %"class.WTF::StringImpl"** %1590, align 8, !noalias !32
  %1591 = icmp eq %"class.WTF::StringImpl"* %1589, null
  br i1 %1591, label %1609, label %1592

1592:                                             ; preds = %1586
  %1593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1589, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1594 = load atomic i32, i32* %1593 monotonic, align 4
  %1595 = and i32 %1594, 2
  %1596 = icmp eq i32 %1595, 0
  br i1 %1596, label %1597, label %1609

1597:                                             ; preds = %1592
  %1598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1589, i64 0, i32 0
  %1599 = load i32, i32* %1598, align 4
  %1600 = zext i32 %1599 to i33
  %1601 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1600, i33 1) #12
  %1602 = extractvalue { i33, i1 } %1601, 1
  %1603 = extractvalue { i33, i1 } %1601, 0
  %1604 = icmp slt i33 %1603, 0
  %1605 = or i1 %1602, %1604
  br i1 %1605, label %1606, label %1607, !prof !2

1606:                                             ; preds = %1597
  call void @llvm.trap() #12
  unreachable

1607:                                             ; preds = %1597
  %1608 = trunc i33 %1603 to i32
  store i32 %1608, i32* %1598, align 4
  br label %1609

1609:                                             ; preds = %1607, %1592, %1586
  %1610 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %14, i64 0, i32 0, i32 1
  %1611 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %37, i64 0, i32 0, i32 1
  %1612 = bitcast i8** %1611 to i64*
  %1613 = load i64, i64* %1612, align 8, !noalias !32
  %1614 = bitcast i8** %1610 to i64*
  store i64 %1613, i64* %1614, align 8, !noalias !32
  %1615 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %37, i64 0, i32 1, i32 0, i32 0
  %1616 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1615, align 8, !noalias !32
  %1617 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %14, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1616, %"class.WTF::StringImpl"** %1617, align 8, !noalias !32
  %1618 = icmp eq %"class.WTF::StringImpl"* %1616, null
  br i1 %1618, label %1636, label %1619

1619:                                             ; preds = %1609
  %1620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1616, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1621 = load atomic i32, i32* %1620 monotonic, align 4
  %1622 = and i32 %1621, 2
  %1623 = icmp eq i32 %1622, 0
  br i1 %1623, label %1624, label %1636

1624:                                             ; preds = %1619
  %1625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1616, i64 0, i32 0
  %1626 = load i32, i32* %1625, align 4
  %1627 = zext i32 %1626 to i33
  %1628 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1627, i33 1) #12
  %1629 = extractvalue { i33, i1 } %1628, 1
  %1630 = extractvalue { i33, i1 } %1628, 0
  %1631 = icmp slt i33 %1630, 0
  %1632 = or i1 %1629, %1631
  br i1 %1632, label %1633, label %1634, !prof !2

1633:                                             ; preds = %1624
  call void @llvm.trap() #12
  unreachable

1634:                                             ; preds = %1624
  %1635 = trunc i33 %1630 to i32
  store i32 %1635, i32* %1625, align 4
  br label %1636

1636:                                             ; preds = %1634, %1619, %1609
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1496"* nonnull %36, %"class.WTF::StringAppend.1497"* nonnull byval(%"class.WTF::StringAppend.1497") align 8 %14, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.63, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1587) #12
  %1637 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1496, align 8
  %1638 = icmp eq %"class.WTF::StringImpl"* %1637, null
  br i1 %1638, label %1656, label %1639

1639:                                             ; preds = %1636
  %1640 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1637, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1641 = load atomic i32, i32* %1640 monotonic, align 4
  %1642 = and i32 %1641, 2
  %1643 = icmp eq i32 %1642, 0
  br i1 %1643, label %1644, label %1656

1644:                                             ; preds = %1639
  %1645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1637, i64 0, i32 0
  %1646 = load i32, i32* %1645, align 4
  %1647 = zext i32 %1646 to i33
  %1648 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1647, i33 1) #12
  %1649 = extractvalue { i33, i1 } %1648, 1
  %1650 = extractvalue { i33, i1 } %1648, 0
  %1651 = icmp slt i33 %1650, 0
  %1652 = or i1 %1649, %1651
  br i1 %1652, label %1653, label %1654, !prof !2

1653:                                             ; preds = %1644
  call void @llvm.trap() #12
  unreachable

1654:                                             ; preds = %1644
  %1655 = trunc i33 %1650 to i32
  store i32 %1655, i32* %1645, align 4
  br label %1656

1656:                                             ; preds = %1654, %1639, %1636
  call void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S2_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.1499"* nonnull sret %35, %"class.WTF::StringAppend.1496"* nonnull dereferenceable(32) %36, %"class.WTF::StringImpl"* %1637) #12
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringEPKcEES2_EES4_EES2_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.1498"* nonnull sret %34, %"class.WTF::StringAppend.1499"* nonnull dereferenceable(40) %35, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.64, i64 0, i64 0)) #12
  %1657 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.1498"* nonnull %34) #12
  br i1 %1520, label %1671, label %1658

1658:                                             ; preds = %1656
  %1659 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1494, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1660 = load atomic i32, i32* %1659 monotonic, align 4
  %1661 = and i32 %1660, 2
  %1662 = icmp eq i32 %1661, 0
  %1663 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1494, i64 0, i32 0
  %1664 = load i32, i32* %1663, align 4
  br i1 %1662, label %1665, label %1667

1665:                                             ; preds = %1658
  %1666 = add i32 %1664, -1
  store i32 %1666, i32* %1663, align 4
  br label %1667

1667:                                             ; preds = %1665, %1658
  %1668 = phi i32 [ %1666, %1665 ], [ %1664, %1658 ]
  %1669 = icmp eq i32 %1668, 0
  br i1 %1669, label %1670, label %1671

1670:                                             ; preds = %1667
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1494) #12
  br label %1671

1671:                                             ; preds = %1670, %1667, %1656
  %1672 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %34, i64 0, i32 0, i32 1, i32 0, i32 0
  %1673 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1672, align 8
  %1674 = icmp eq %"class.WTF::StringImpl"* %1673, null
  br i1 %1674, label %1688, label %1675

1675:                                             ; preds = %1671
  %1676 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1673, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1677 = load atomic i32, i32* %1676 monotonic, align 4
  %1678 = and i32 %1677, 2
  %1679 = icmp eq i32 %1678, 0
  %1680 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1673, i64 0, i32 0
  %1681 = load i32, i32* %1680, align 4
  br i1 %1679, label %1682, label %1684

1682:                                             ; preds = %1675
  %1683 = add i32 %1681, -1
  store i32 %1683, i32* %1680, align 4
  br label %1684

1684:                                             ; preds = %1682, %1675
  %1685 = phi i32 [ %1683, %1682 ], [ %1681, %1675 ]
  %1686 = icmp eq i32 %1685, 0
  br i1 %1686, label %1687, label %1688

1687:                                             ; preds = %1684
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1673) #12
  br label %1688

1688:                                             ; preds = %1687, %1684, %1671
  %1689 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1690 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1689, align 8
  %1691 = icmp eq %"class.WTF::StringImpl"* %1690, null
  br i1 %1691, label %1705, label %1692

1692:                                             ; preds = %1688
  %1693 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1690, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1694 = load atomic i32, i32* %1693 monotonic, align 4
  %1695 = and i32 %1694, 2
  %1696 = icmp eq i32 %1695, 0
  %1697 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1690, i64 0, i32 0
  %1698 = load i32, i32* %1697, align 4
  br i1 %1696, label %1699, label %1701

1699:                                             ; preds = %1692
  %1700 = add i32 %1698, -1
  store i32 %1700, i32* %1697, align 4
  br label %1701

1701:                                             ; preds = %1699, %1692
  %1702 = phi i32 [ %1700, %1699 ], [ %1698, %1692 ]
  %1703 = icmp eq i32 %1702, 0
  br i1 %1703, label %1704, label %1705

1704:                                             ; preds = %1701
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1690) #12
  br label %1705

1705:                                             ; preds = %1704, %1701, %1688
  %1706 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1707 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1706, align 8
  %1708 = icmp eq %"class.WTF::StringImpl"* %1707, null
  br i1 %1708, label %1722, label %1709

1709:                                             ; preds = %1705
  %1710 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1707, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1711 = load atomic i32, i32* %1710 monotonic, align 4
  %1712 = and i32 %1711, 2
  %1713 = icmp eq i32 %1712, 0
  %1714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1707, i64 0, i32 0
  %1715 = load i32, i32* %1714, align 4
  br i1 %1713, label %1716, label %1718

1716:                                             ; preds = %1709
  %1717 = add i32 %1715, -1
  store i32 %1717, i32* %1714, align 4
  br label %1718

1718:                                             ; preds = %1716, %1709
  %1719 = phi i32 [ %1717, %1716 ], [ %1715, %1709 ]
  %1720 = icmp eq i32 %1719, 0
  br i1 %1720, label %1721, label %1722

1721:                                             ; preds = %1718
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1707) #12
  br label %1722

1722:                                             ; preds = %1721, %1718, %1705
  %1723 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %35, i64 0, i32 1, i32 0, i32 0
  %1724 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1723, align 8
  %1725 = icmp eq %"class.WTF::StringImpl"* %1724, null
  br i1 %1725, label %1739, label %1726

1726:                                             ; preds = %1722
  %1727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1724, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1728 = load atomic i32, i32* %1727 monotonic, align 4
  %1729 = and i32 %1728, 2
  %1730 = icmp eq i32 %1729, 0
  %1731 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1724, i64 0, i32 0
  %1732 = load i32, i32* %1731, align 4
  br i1 %1730, label %1733, label %1735

1733:                                             ; preds = %1726
  %1734 = add i32 %1732, -1
  store i32 %1734, i32* %1731, align 4
  br label %1735

1735:                                             ; preds = %1733, %1726
  %1736 = phi i32 [ %1734, %1733 ], [ %1732, %1726 ]
  %1737 = icmp eq i32 %1736, 0
  br i1 %1737, label %1738, label %1739

1738:                                             ; preds = %1735
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1724) #12
  br label %1739

1739:                                             ; preds = %1738, %1735, %1722
  %1740 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1741 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1740, align 8
  %1742 = icmp eq %"class.WTF::StringImpl"* %1741, null
  br i1 %1742, label %1756, label %1743

1743:                                             ; preds = %1739
  %1744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1741, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1745 = load atomic i32, i32* %1744 monotonic, align 4
  %1746 = and i32 %1745, 2
  %1747 = icmp eq i32 %1746, 0
  %1748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1741, i64 0, i32 0
  %1749 = load i32, i32* %1748, align 4
  br i1 %1747, label %1750, label %1752

1750:                                             ; preds = %1743
  %1751 = add i32 %1749, -1
  store i32 %1751, i32* %1748, align 4
  br label %1752

1752:                                             ; preds = %1750, %1743
  %1753 = phi i32 [ %1751, %1750 ], [ %1749, %1743 ]
  %1754 = icmp eq i32 %1753, 0
  br i1 %1754, label %1755, label %1756

1755:                                             ; preds = %1752
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1741) #12
  br label %1756

1756:                                             ; preds = %1755, %1752, %1739
  %1757 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1758 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1757, align 8
  %1759 = icmp eq %"class.WTF::StringImpl"* %1758, null
  br i1 %1759, label %1773, label %1760

1760:                                             ; preds = %1756
  %1761 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1758, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1762 = load atomic i32, i32* %1761 monotonic, align 4
  %1763 = and i32 %1762, 2
  %1764 = icmp eq i32 %1763, 0
  %1765 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1758, i64 0, i32 0
  %1766 = load i32, i32* %1765, align 4
  br i1 %1764, label %1767, label %1769

1767:                                             ; preds = %1760
  %1768 = add i32 %1766, -1
  store i32 %1768, i32* %1765, align 4
  br label %1769

1769:                                             ; preds = %1767, %1760
  %1770 = phi i32 [ %1768, %1767 ], [ %1766, %1760 ]
  %1771 = icmp eq i32 %1770, 0
  br i1 %1771, label %1772, label %1773

1772:                                             ; preds = %1769
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1758) #12
  br label %1773

1773:                                             ; preds = %1772, %1769, %1756
  %1774 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %36, i64 0, i32 0, i32 1, i32 0, i32 0
  %1775 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1774, align 8
  %1776 = icmp eq %"class.WTF::StringImpl"* %1775, null
  br i1 %1776, label %1790, label %1777

1777:                                             ; preds = %1773
  %1778 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1775, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1779 = load atomic i32, i32* %1778 monotonic, align 4
  %1780 = and i32 %1779, 2
  %1781 = icmp eq i32 %1780, 0
  %1782 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1775, i64 0, i32 0
  %1783 = load i32, i32* %1782, align 4
  br i1 %1781, label %1784, label %1786

1784:                                             ; preds = %1777
  %1785 = add i32 %1783, -1
  store i32 %1785, i32* %1782, align 4
  br label %1786

1786:                                             ; preds = %1784, %1777
  %1787 = phi i32 [ %1785, %1784 ], [ %1783, %1777 ]
  %1788 = icmp eq i32 %1787, 0
  br i1 %1788, label %1789, label %1790

1789:                                             ; preds = %1786
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1775) #12
  br label %1790

1790:                                             ; preds = %1789, %1786, %1773
  %1791 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1792 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1791, align 8
  %1793 = icmp eq %"class.WTF::StringImpl"* %1792, null
  br i1 %1793, label %1807, label %1794

1794:                                             ; preds = %1790
  %1795 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1792, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1796 = load atomic i32, i32* %1795 monotonic, align 4
  %1797 = and i32 %1796, 2
  %1798 = icmp eq i32 %1797, 0
  %1799 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1792, i64 0, i32 0
  %1800 = load i32, i32* %1799, align 4
  br i1 %1798, label %1801, label %1803

1801:                                             ; preds = %1794
  %1802 = add i32 %1800, -1
  store i32 %1802, i32* %1799, align 4
  br label %1803

1803:                                             ; preds = %1801, %1794
  %1804 = phi i32 [ %1802, %1801 ], [ %1800, %1794 ]
  %1805 = icmp eq i32 %1804, 0
  br i1 %1805, label %1806, label %1807

1806:                                             ; preds = %1803
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1792) #12
  br label %1807

1807:                                             ; preds = %1806, %1803, %1790
  %1808 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1615, align 8
  %1809 = icmp eq %"class.WTF::StringImpl"* %1808, null
  br i1 %1809, label %1823, label %1810

1810:                                             ; preds = %1807
  %1811 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1808, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1812 = load atomic i32, i32* %1811 monotonic, align 4
  %1813 = and i32 %1812, 2
  %1814 = icmp eq i32 %1813, 0
  %1815 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1808, i64 0, i32 0
  %1816 = load i32, i32* %1815, align 4
  br i1 %1814, label %1817, label %1819

1817:                                             ; preds = %1810
  %1818 = add i32 %1816, -1
  store i32 %1818, i32* %1815, align 4
  br label %1819

1819:                                             ; preds = %1817, %1810
  %1820 = phi i32 [ %1818, %1817 ], [ %1816, %1810 ]
  %1821 = icmp eq i32 %1820, 0
  br i1 %1821, label %1822, label %1823

1822:                                             ; preds = %1819
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1808) #12
  br label %1823

1823:                                             ; preds = %1822, %1819, %1807
  %1824 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1588, align 8
  %1825 = icmp eq %"class.WTF::StringImpl"* %1824, null
  br i1 %1825, label %1839, label %1826

1826:                                             ; preds = %1823
  %1827 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1824, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1828 = load atomic i32, i32* %1827 monotonic, align 4
  %1829 = and i32 %1828, 2
  %1830 = icmp eq i32 %1829, 0
  %1831 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1824, i64 0, i32 0
  %1832 = load i32, i32* %1831, align 4
  br i1 %1830, label %1833, label %1835

1833:                                             ; preds = %1826
  %1834 = add i32 %1832, -1
  store i32 %1834, i32* %1831, align 4
  br label %1835

1835:                                             ; preds = %1833, %1826
  %1836 = phi i32 [ %1834, %1833 ], [ %1832, %1826 ]
  %1837 = icmp eq i32 %1836, 0
  br i1 %1837, label %1838, label %1839

1838:                                             ; preds = %1835
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1824) #12
  br label %1839

1839:                                             ; preds = %1838, %1835, %1823
  %1840 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1565, align 8
  %1841 = icmp eq %"class.WTF::StringImpl"* %1840, null
  br i1 %1841, label %1855, label %1842

1842:                                             ; preds = %1839
  %1843 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1840, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1844 = load atomic i32, i32* %1843 monotonic, align 4
  %1845 = and i32 %1844, 2
  %1846 = icmp eq i32 %1845, 0
  %1847 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1840, i64 0, i32 0
  %1848 = load i32, i32* %1847, align 4
  br i1 %1846, label %1849, label %1851

1849:                                             ; preds = %1842
  %1850 = add i32 %1848, -1
  store i32 %1850, i32* %1847, align 4
  br label %1851

1851:                                             ; preds = %1849, %1842
  %1852 = phi i32 [ %1850, %1849 ], [ %1848, %1842 ]
  %1853 = icmp eq i32 %1852, 0
  br i1 %1853, label %1854, label %1855

1854:                                             ; preds = %1851
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1840) #12
  br label %1855

1855:                                             ; preds = %1854, %1851, %1839
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1519) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1518) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1517) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1516) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1515) #12
  br label %1856

1856:                                             ; preds = %1855, %1509
  %1857 = phi %"class.WTF::StringImpl"* [ %1657, %1855 ], [ %1494, %1509 ]
  %1858 = bitcast %"class.WTF::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1858) #12
  %1859 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %1859, align 8
  %1860 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %40, i64 0, i32 0
  %1861 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %271, i8 0, i64 20, i1 false) #12
  %1862 = load i32, i32* %1861, align 4
  %1863 = icmp eq i32 %1862, 0
  br i1 %1863, label %1900, label %1864

1864:                                             ; preds = %1856
  call void @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %1860, i32 %1862) #12
  %1865 = load i32, i32* %1861, align 4
  %1866 = icmp eq i32 %1865, 0
  %1867 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %1868 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %1867, align 8
  %1869 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 1
  %1870 = load i32, i32* %1869, align 8
  %1871 = zext i32 %1870 to i64
  %1872 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1868, i64 %1871
  br i1 %1866, label %1900, label %1873

1873:                                             ; preds = %1864
  %1874 = icmp eq i32 %1870, 0
  br i1 %1874, label %1882, label %1875

1875:                                             ; preds = %1873, %1879
  %1876 = phi %"struct.WTF::KeyValuePair"* [ %1880, %1879 ], [ %1868, %1873 ]
  %1877 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1876, i64 0, i32 0
  %1878 = load i32, i32* %1877, align 4
  switch i32 %1878, label %1882 [
    i32 -1000001, label %1879
    i32 0, label %1879
  ]

1879:                                             ; preds = %1875, %1875
  %1880 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1876, i64 1
  %1881 = icmp eq %"struct.WTF::KeyValuePair"* %1880, %1872
  br i1 %1881, label %1900, label %1875

1882:                                             ; preds = %1875, %1873
  %1883 = phi %"struct.WTF::KeyValuePair"* [ %1868, %1873 ], [ %1876, %1875 ]
  %1884 = icmp eq %"struct.WTF::KeyValuePair"* %1883, %1872
  br i1 %1884, label %1900, label %1885

1885:                                             ; preds = %1882, %1898
  %1886 = phi %"struct.WTF::KeyValuePair"* [ %1892, %1898 ], [ %1883, %1882 ]
  %1887 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1886, i64 0, i32 0
  %1888 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS3_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %1860, i32* dereferenceable(4) %1887, %"struct.WTF::KeyValuePair"* dereferenceable(16) %1886) #12
  %1889 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1886, i64 1
  %1890 = icmp eq %"struct.WTF::KeyValuePair"* %1889, %1872
  br i1 %1890, label %1900, label %1891

1891:                                             ; preds = %1885, %1895
  %1892 = phi %"struct.WTF::KeyValuePair"* [ %1896, %1895 ], [ %1889, %1885 ]
  %1893 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1892, i64 0, i32 0
  %1894 = load i32, i32* %1893, align 4
  switch i32 %1894, label %1898 [
    i32 -1000001, label %1895
    i32 0, label %1895
  ]

1895:                                             ; preds = %1891, %1891
  %1896 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1892, i64 1
  %1897 = icmp eq %"struct.WTF::KeyValuePair"* %1896, %1872
  br i1 %1897, label %1900, label %1891

1898:                                             ; preds = %1891
  %1899 = icmp eq %"struct.WTF::KeyValuePair"* %1892, %1872
  br i1 %1899, label %1900, label %1885

1900:                                             ; preds = %1879, %1898, %1885, %1895, %1882, %1864, %1856
  %1901 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_125GetRawDirectiveForMessageEN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEES5_(%"class.WTF::HashMap"* nonnull %40, i32 %270) #12
  store %"class.WTF::StringImpl"* %1901, %"class.WTF::StringImpl"** %1859, align 8
  %1902 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %40, i64 0, i32 0, i32 0
  %1903 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %1902, align 8
  %1904 = icmp eq %"struct.WTF::KeyValuePair"* %1903, null
  br i1 %1904, label %1938, label %1905, !prof !4

1905:                                             ; preds = %1900
  %1906 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %40, i64 0, i32 0, i32 1
  %1907 = load i32, i32* %1906, align 8
  %1908 = icmp eq i32 %1907, 0
  br i1 %1908, label %1936, label %1909

1909:                                             ; preds = %1905
  %1910 = zext i32 %1907 to i64
  br label %1911

1911:                                             ; preds = %1933, %1909
  %1912 = phi i64 [ 0, %1909 ], [ %1934, %1933 ]
  %1913 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1903, i64 %1912, i32 0
  %1914 = load i32, i32* %1913, align 4
  %1915 = icmp eq i32 %1914, -1000001
  br i1 %1915, label %1933, label %1916

1916:                                             ; preds = %1911
  %1917 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1903, i64 %1912, i32 1, i32 0, i32 0
  %1918 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1917, align 8
  %1919 = icmp eq %"class.WTF::StringImpl"* %1918, null
  br i1 %1919, label %1933, label %1920

1920:                                             ; preds = %1916
  %1921 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1918, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1922 = load atomic i32, i32* %1921 monotonic, align 4
  %1923 = and i32 %1922, 2
  %1924 = icmp eq i32 %1923, 0
  %1925 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1918, i64 0, i32 0
  %1926 = load i32, i32* %1925, align 4
  br i1 %1924, label %1927, label %1929

1927:                                             ; preds = %1920
  %1928 = add i32 %1926, -1
  store i32 %1928, i32* %1925, align 4
  br label %1929

1929:                                             ; preds = %1927, %1920
  %1930 = phi i32 [ %1928, %1927 ], [ %1926, %1920 ]
  %1931 = icmp eq i32 %1930, 0
  br i1 %1931, label %1932, label %1933

1932:                                             ; preds = %1929
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1918) #12
  br label %1933

1933:                                             ; preds = %1932, %1929, %1916, %1911
  %1934 = add nuw nsw i64 %1912, 1
  %1935 = icmp eq i64 %1934, %1910
  br i1 %1935, label %1936, label %1911

1936:                                             ; preds = %1933, %1905
  %1937 = bitcast %"struct.WTF::KeyValuePair"* %1903 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1937) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %1902, align 8
  br label %1938

1938:                                             ; preds = %1936, %1900
  %1939 = bitcast %"class.WTF::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1939) #12
  %1940 = bitcast %"class.WTF::StringAppend.1535"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1940) #12
  %1941 = bitcast %"class.WTF::StringAppend.1536"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1941) #12
  %1942 = bitcast %"class.WTF::StringAppend.1537"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1942) #12
  %1943 = bitcast %"class.WTF::StringAppend.1538"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1943) #12
  %1944 = bitcast %"class.WTF::StringAppend.1539"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1944) #12
  %1945 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %3) #12
  %1946 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.WTF::StringImpl"* %1945) #12
  %1947 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %1946, 0
  %1948 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %1946, 1
  %1949 = icmp eq %"class.WTF::StringImpl"* %1947, null
  br i1 %1949, label %1967, label %1950

1950:                                             ; preds = %1938
  %1951 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1947, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1952 = load atomic i32, i32* %1951 monotonic, align 4
  %1953 = and i32 %1952, 2
  %1954 = icmp eq i32 %1953, 0
  br i1 %1954, label %1955, label %1967

1955:                                             ; preds = %1950
  %1956 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1947, i64 0, i32 0
  %1957 = load i32, i32* %1956, align 4
  %1958 = zext i32 %1957 to i33
  %1959 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1958, i33 1) #12
  %1960 = extractvalue { i33, i1 } %1959, 1
  %1961 = extractvalue { i33, i1 } %1959, 0
  %1962 = icmp slt i33 %1961, 0
  %1963 = or i1 %1960, %1962
  br i1 %1963, label %1964, label %1965, !prof !2

1964:                                             ; preds = %1955
  call void @llvm.trap() #12
  unreachable

1965:                                             ; preds = %1955
  %1966 = trunc i33 %1961 to i32
  store i32 %1966, i32* %1956, align 4
  br label %1967

1967:                                             ; preds = %1965, %1950, %1938
  %1968 = icmp eq %"class.WTF::StringImpl"* %1948, null
  br i1 %1968, label %1986, label %1969

1969:                                             ; preds = %1967
  %1970 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1948, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1971 = load atomic i32, i32* %1970 monotonic, align 4
  %1972 = and i32 %1971, 2
  %1973 = icmp eq i32 %1972, 0
  br i1 %1973, label %1974, label %1986

1974:                                             ; preds = %1969
  %1975 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1948, i64 0, i32 0
  %1976 = load i32, i32* %1975, align 4
  %1977 = zext i32 %1976 to i33
  %1978 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1977, i33 1) #12
  %1979 = extractvalue { i33, i1 } %1978, 1
  %1980 = extractvalue { i33, i1 } %1978, 0
  %1981 = icmp slt i33 %1980, 0
  %1982 = or i1 %1979, %1981
  br i1 %1982, label %1983, label %1984, !prof !2

1983:                                             ; preds = %1974
  call void @llvm.trap() #12
  unreachable

1984:                                             ; preds = %1974
  %1985 = trunc i33 %1980 to i32
  store i32 %1985, i32* %1975, align 4
  br label %1986

1986:                                             ; preds = %1984, %1969, %1967
  call void @_ZN3WTF12StringAppendINS0_INS_6StringES1_EEPKcEC2ES2_S4_(%"class.WTF::StringAppend.1539"* nonnull %46, %"class.WTF::StringImpl"* %1947, %"class.WTF::StringImpl"* %1948, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.65, i64 0, i64 0)) #12
  %1987 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1859, align 8
  %1988 = icmp eq %"class.WTF::StringImpl"* %1987, null
  br i1 %1988, label %2006, label %1989

1989:                                             ; preds = %1986
  %1990 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1987, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1991 = load atomic i32, i32* %1990 monotonic, align 4
  %1992 = and i32 %1991, 2
  %1993 = icmp eq i32 %1992, 0
  br i1 %1993, label %1994, label %2006

1994:                                             ; preds = %1989
  %1995 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1987, i64 0, i32 0
  %1996 = load i32, i32* %1995, align 4
  %1997 = zext i32 %1996 to i33
  %1998 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1997, i33 1) #12
  %1999 = extractvalue { i33, i1 } %1998, 1
  %2000 = extractvalue { i33, i1 } %1998, 0
  %2001 = icmp slt i33 %2000, 0
  %2002 = or i1 %1999, %2001
  br i1 %2002, label %2003, label %2004, !prof !2

2003:                                             ; preds = %1994
  call void @llvm.trap() #12
  unreachable

2004:                                             ; preds = %1994
  %2005 = trunc i33 %2000 to i32
  store i32 %2005, i32* %1995, align 4
  br label %2006

2006:                                             ; preds = %2004, %1989, %1986
  call void @_ZN3WTFplINS_12StringAppendINS_6StringES2_EEPKcS2_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1538"* nonnull sret %45, %"class.WTF::StringAppend.1539"* nonnull dereferenceable(24) %46, %"class.WTF::StringImpl"* %1987) #12
  call void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringES2_EEPKcEES2_S5_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.1537"* nonnull sret %44, %"class.WTF::StringAppend.1538"* nonnull dereferenceable(32) %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)) #12
  %2007 = icmp eq %"class.WTF::StringImpl"* %1857, null
  br i1 %2007, label %2025, label %2008

2008:                                             ; preds = %2006
  %2009 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1857, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2010 = load atomic i32, i32* %2009 monotonic, align 4
  %2011 = and i32 %2010, 2
  %2012 = icmp eq i32 %2011, 0
  br i1 %2012, label %2013, label %2025

2013:                                             ; preds = %2008
  %2014 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1857, i64 0, i32 0
  %2015 = load i32, i32* %2014, align 4
  %2016 = zext i32 %2015 to i33
  %2017 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2016, i33 1) #12
  %2018 = extractvalue { i33, i1 } %2017, 1
  %2019 = extractvalue { i33, i1 } %2017, 0
  %2020 = icmp slt i33 %2019, 0
  %2021 = or i1 %2018, %2020
  br i1 %2021, label %2022, label %2023, !prof !2

2022:                                             ; preds = %2013
  call void @llvm.trap() #12
  unreachable

2023:                                             ; preds = %2013
  %2024 = trunc i33 %2019 to i32
  store i32 %2024, i32* %2014, align 4
  br label %2025

2025:                                             ; preds = %2023, %2008, %2006
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringES2_EEPKcEES2_EES5_S2_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.1536"* nonnull sret %43, %"class.WTF::StringAppend.1537"* nonnull dereferenceable(40) %44, %"class.WTF::StringImpl"* %1857) #12
  %2026 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2027 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2026, align 8
  %2028 = icmp eq %"class.WTF::StringImpl"* %2027, null
  br i1 %2028, label %2046, label %2029

2029:                                             ; preds = %2025
  %2030 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2027, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2031 = load atomic i32, i32* %2030 monotonic, align 4
  %2032 = and i32 %2031, 2
  %2033 = icmp eq i32 %2032, 0
  br i1 %2033, label %2034, label %2046

2034:                                             ; preds = %2029
  %2035 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2027, i64 0, i32 0
  %2036 = load i32, i32* %2035, align 4
  %2037 = zext i32 %2036 to i33
  %2038 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2037, i33 1) #12
  %2039 = extractvalue { i33, i1 } %2038, 1
  %2040 = extractvalue { i33, i1 } %2038, 0
  %2041 = icmp slt i33 %2040, 0
  %2042 = or i1 %2039, %2041
  br i1 %2042, label %2043, label %2044, !prof !2

2043:                                             ; preds = %2034
  call void @llvm.trap() #12
  unreachable

2044:                                             ; preds = %2034
  %2045 = trunc i33 %2040 to i32
  store i32 %2045, i32* %2035, align 4
  br label %2046

2046:                                             ; preds = %2044, %2029, %2025
  %2047 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %2048 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2047, align 8
  %2049 = icmp eq %"class.WTF::StringImpl"* %2048, null
  br i1 %2049, label %2067, label %2050

2050:                                             ; preds = %2046
  %2051 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2048, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2052 = load atomic i32, i32* %2051 monotonic, align 4
  %2053 = and i32 %2052, 2
  %2054 = icmp eq i32 %2053, 0
  br i1 %2054, label %2055, label %2067

2055:                                             ; preds = %2050
  %2056 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2048, i64 0, i32 0
  %2057 = load i32, i32* %2056, align 4
  %2058 = zext i32 %2057 to i33
  %2059 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2058, i33 1) #12
  %2060 = extractvalue { i33, i1 } %2059, 1
  %2061 = extractvalue { i33, i1 } %2059, 0
  %2062 = icmp slt i33 %2061, 0
  %2063 = or i1 %2060, %2062
  br i1 %2063, label %2064, label %2065, !prof !2

2064:                                             ; preds = %2055
  call void @llvm.trap() #12
  unreachable

2065:                                             ; preds = %2055
  %2066 = trunc i33 %2061 to i32
  store i32 %2066, i32* %2056, align 4
  br label %2067

2067:                                             ; preds = %2065, %2050, %2046
  %2068 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %43, i64 0, i32 0, i32 0, i32 0, i32 1
  %2069 = bitcast i8** %2068 to i64*
  %2070 = load i64, i64* %2069, align 8
  %2071 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %43, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %2072 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2071, align 8
  %2073 = icmp eq %"class.WTF::StringImpl"* %2072, null
  br i1 %2073, label %2091, label %2074

2074:                                             ; preds = %2067
  %2075 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2072, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2076 = load atomic i32, i32* %2075 monotonic, align 4
  %2077 = and i32 %2076, 2
  %2078 = icmp eq i32 %2077, 0
  br i1 %2078, label %2079, label %2091

2079:                                             ; preds = %2074
  %2080 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2072, i64 0, i32 0
  %2081 = load i32, i32* %2080, align 4
  %2082 = zext i32 %2081 to i33
  %2083 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2082, i33 1) #12
  %2084 = extractvalue { i33, i1 } %2083, 1
  %2085 = extractvalue { i33, i1 } %2083, 0
  %2086 = icmp slt i33 %2085, 0
  %2087 = or i1 %2084, %2086
  br i1 %2087, label %2088, label %2089, !prof !2

2088:                                             ; preds = %2079
  call void @llvm.trap() #12
  unreachable

2089:                                             ; preds = %2079
  %2090 = trunc i33 %2085 to i32
  store i32 %2090, i32* %2080, align 4
  br label %2091

2091:                                             ; preds = %2089, %2074, %2067
  %2092 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %43, i64 0, i32 0, i32 1
  %2093 = bitcast i8** %2092 to i64*
  %2094 = load i64, i64* %2093, align 8
  %2095 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %43, i64 0, i32 1, i32 0, i32 0
  %2096 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2095, align 8
  %2097 = icmp eq %"class.WTF::StringImpl"* %2096, null
  br i1 %2097, label %2115, label %2098

2098:                                             ; preds = %2091
  %2099 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2096, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2100 = load atomic i32, i32* %2099 monotonic, align 4
  %2101 = and i32 %2100, 2
  %2102 = icmp eq i32 %2101, 0
  br i1 %2102, label %2103, label %2115

2103:                                             ; preds = %2098
  %2104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2096, i64 0, i32 0
  %2105 = load i32, i32* %2104, align 4
  %2106 = zext i32 %2105 to i33
  %2107 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2106, i33 1) #12
  %2108 = extractvalue { i33, i1 } %2107, 1
  %2109 = extractvalue { i33, i1 } %2107, 0
  %2110 = icmp slt i33 %2109, 0
  %2111 = or i1 %2108, %2110
  br i1 %2111, label %2112, label %2113, !prof !2

2112:                                             ; preds = %2103
  call void @llvm.trap() #12
  unreachable

2113:                                             ; preds = %2103
  %2114 = trunc i33 %2109 to i32
  store i32 %2114, i32* %2104, align 4
  br label %2115

2115:                                             ; preds = %2113, %2098, %2091
  %2116 = bitcast %"class.WTF::StringAppend.1536"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2116) #12, !noalias !35
  %2117 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2027, %"class.WTF::StringImpl"** %2117, align 8, !noalias !35
  %2118 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2048, %"class.WTF::StringImpl"** %2118, align 8, !noalias !35
  %2119 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %2120 = bitcast i8** %2119 to i64*
  store i64 %2070, i64* %2120, align 8, !noalias !35
  %2121 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2072, %"class.WTF::StringImpl"** %2121, align 8, !noalias !35
  %2122 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %13, i64 0, i32 0, i32 1
  %2123 = bitcast i8** %2122 to i64*
  store i64 %2094, i64* %2123, align 8, !noalias !35
  %2124 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %13, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2096, %"class.WTF::StringImpl"** %2124, align 8, !noalias !35
  %2125 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %42, i64 0, i32 0
  %2126 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2027, %"class.WTF::StringImpl"** %2126, align 8
  br i1 %2028, label %2145, label %2127

2127:                                             ; preds = %2115
  %2128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2027, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2129 = load atomic i32, i32* %2128 monotonic, align 4
  %2130 = and i32 %2129, 2
  %2131 = icmp eq i32 %2130, 0
  br i1 %2131, label %2132, label %2145

2132:                                             ; preds = %2127
  %2133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2027, i64 0, i32 0
  %2134 = load i32, i32* %2133, align 4
  %2135 = zext i32 %2134 to i33
  %2136 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2135, i33 1) #12
  %2137 = extractvalue { i33, i1 } %2136, 1
  %2138 = extractvalue { i33, i1 } %2136, 0
  %2139 = icmp slt i33 %2138, 0
  %2140 = or i1 %2137, %2139
  br i1 %2140, label %2141, label %2142, !prof !2

2141:                                             ; preds = %2132
  call void @llvm.trap() #12
  unreachable

2142:                                             ; preds = %2132
  %2143 = trunc i33 %2138 to i32
  store i32 %2143, i32* %2133, align 4
  %2144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2118, align 8
  br label %2145

2145:                                             ; preds = %2142, %2127, %2115
  %2146 = phi %"class.WTF::StringImpl"* [ %2144, %2142 ], [ %2048, %2127 ], [ %2048, %2115 ]
  %2147 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2146, %"class.WTF::StringImpl"** %2147, align 8
  %2148 = icmp eq %"class.WTF::StringImpl"* %2146, null
  br i1 %2148, label %2166, label %2149

2149:                                             ; preds = %2145
  %2150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2151 = load atomic i32, i32* %2150 monotonic, align 4
  %2152 = and i32 %2151, 2
  %2153 = icmp eq i32 %2152, 0
  br i1 %2153, label %2154, label %2166

2154:                                             ; preds = %2149
  %2155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2146, i64 0, i32 0
  %2156 = load i32, i32* %2155, align 4
  %2157 = zext i32 %2156 to i33
  %2158 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2157, i33 1) #12
  %2159 = extractvalue { i33, i1 } %2158, 1
  %2160 = extractvalue { i33, i1 } %2158, 0
  %2161 = icmp slt i33 %2160, 0
  %2162 = or i1 %2159, %2161
  br i1 %2162, label %2163, label %2164, !prof !2

2163:                                             ; preds = %2154
  call void @llvm.trap() #12
  unreachable

2164:                                             ; preds = %2154
  %2165 = trunc i33 %2160 to i32
  store i32 %2165, i32* %2155, align 4
  br label %2166

2166:                                             ; preds = %2164, %2149, %2145
  %2167 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2168 = load i64, i64* %2120, align 8
  %2169 = bitcast i8** %2167 to i64*
  store i64 %2168, i64* %2169, align 8
  %2170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2121, align 8
  %2171 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2170, %"class.WTF::StringImpl"** %2171, align 8
  %2172 = icmp eq %"class.WTF::StringImpl"* %2170, null
  br i1 %2172, label %2190, label %2173

2173:                                             ; preds = %2166
  %2174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2175 = load atomic i32, i32* %2174 monotonic, align 4
  %2176 = and i32 %2175, 2
  %2177 = icmp eq i32 %2176, 0
  br i1 %2177, label %2178, label %2190

2178:                                             ; preds = %2173
  %2179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2170, i64 0, i32 0
  %2180 = load i32, i32* %2179, align 4
  %2181 = zext i32 %2180 to i33
  %2182 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2181, i33 1) #12
  %2183 = extractvalue { i33, i1 } %2182, 1
  %2184 = extractvalue { i33, i1 } %2182, 0
  %2185 = icmp slt i33 %2184, 0
  %2186 = or i1 %2183, %2185
  br i1 %2186, label %2187, label %2188, !prof !2

2187:                                             ; preds = %2178
  call void @llvm.trap() #12
  unreachable

2188:                                             ; preds = %2178
  %2189 = trunc i33 %2184 to i32
  store i32 %2189, i32* %2179, align 4
  br label %2190

2190:                                             ; preds = %2188, %2173, %2166
  %2191 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %42, i64 0, i32 0, i32 0, i32 1
  %2192 = load i64, i64* %2123, align 8
  %2193 = bitcast i8** %2191 to i64*
  store i64 %2192, i64* %2193, align 8
  %2194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2124, align 8
  %2195 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %42, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2194, %"class.WTF::StringImpl"** %2195, align 8
  %2196 = icmp eq %"class.WTF::StringImpl"* %2194, null
  br i1 %2196, label %2214, label %2197

2197:                                             ; preds = %2190
  %2198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2199 = load atomic i32, i32* %2198 monotonic, align 4
  %2200 = and i32 %2199, 2
  %2201 = icmp eq i32 %2200, 0
  br i1 %2201, label %2202, label %2214

2202:                                             ; preds = %2197
  %2203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2194, i64 0, i32 0
  %2204 = load i32, i32* %2203, align 4
  %2205 = zext i32 %2204 to i33
  %2206 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2205, i33 1) #12
  %2207 = extractvalue { i33, i1 } %2206, 1
  %2208 = extractvalue { i33, i1 } %2206, 0
  %2209 = icmp slt i33 %2208, 0
  %2210 = or i1 %2207, %2209
  br i1 %2210, label %2211, label %2212, !prof !2

2211:                                             ; preds = %2202
  call void @llvm.trap() #12
  unreachable

2212:                                             ; preds = %2202
  %2213 = trunc i33 %2208 to i32
  store i32 %2213, i32* %2203, align 4
  br label %2214

2214:                                             ; preds = %2212, %2197, %2190
  %2215 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %42, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), i8** %2215, align 8, !alias.scope !35
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_ED2Ev(%"class.WTF::StringAppend.1536"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2116) #12, !noalias !35
  %2216 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_EcvS1_Ev(%"class.WTF::StringAppend.1535"* nonnull %42) #12
  %2217 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2216, %"class.WTF::StringImpl"** %2217, align 8
  %2218 = bitcast %"class.WTF::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2218) #12
  %2219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2219, align 8
  %2220 = bitcast %"class.WTF::String"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2220) #12
  %2221 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %48, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2221, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_115ReportViolationERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyERKN3WTF6StringENS2_16CSPDirectiveNameESC_RKNS_4KURLENS_19ResourceRequestHead14RedirectStatusENS7_34ContentSecurityPolicyViolationTypeESC_SC_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, %"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %39, i32 %2, %"class.WTF::String"* nonnull dereferenceable(8) %41, %"class.blink::KURL"* dereferenceable(112) %4, i8 zeroext %5, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %47, %"class.WTF::String"* nonnull dereferenceable(8) %48) #12
  %2222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2221, align 8
  %2223 = icmp eq %"class.WTF::StringImpl"* %2222, null
  br i1 %2223, label %2237, label %2224

2224:                                             ; preds = %2214
  %2225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2226 = load atomic i32, i32* %2225 monotonic, align 4
  %2227 = and i32 %2226, 2
  %2228 = icmp eq i32 %2227, 0
  %2229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2222, i64 0, i32 0
  %2230 = load i32, i32* %2229, align 4
  br i1 %2228, label %2231, label %2233

2231:                                             ; preds = %2224
  %2232 = add i32 %2230, -1
  store i32 %2232, i32* %2229, align 4
  br label %2233

2233:                                             ; preds = %2231, %2224
  %2234 = phi i32 [ %2232, %2231 ], [ %2230, %2224 ]
  %2235 = icmp eq i32 %2234, 0
  br i1 %2235, label %2236, label %2237

2236:                                             ; preds = %2233
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2222) #12
  br label %2237

2237:                                             ; preds = %2236, %2233, %2214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2220) #12
  %2238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2219, align 8
  %2239 = icmp eq %"class.WTF::StringImpl"* %2238, null
  br i1 %2239, label %2253, label %2240

2240:                                             ; preds = %2237
  %2241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2242 = load atomic i32, i32* %2241 monotonic, align 4
  %2243 = and i32 %2242, 2
  %2244 = icmp eq i32 %2243, 0
  %2245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2238, i64 0, i32 0
  %2246 = load i32, i32* %2245, align 4
  br i1 %2244, label %2247, label %2249

2247:                                             ; preds = %2240
  %2248 = add i32 %2246, -1
  store i32 %2248, i32* %2245, align 4
  br label %2249

2249:                                             ; preds = %2247, %2240
  %2250 = phi i32 [ %2248, %2247 ], [ %2246, %2240 ]
  %2251 = icmp eq i32 %2250, 0
  br i1 %2251, label %2252, label %2253

2252:                                             ; preds = %2249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2238) #12
  br label %2253

2253:                                             ; preds = %2252, %2249, %2237
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2218) #12
  %2254 = icmp eq %"class.WTF::StringImpl"* %2216, null
  br i1 %2254, label %2268, label %2255

2255:                                             ; preds = %2253
  %2256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2257 = load atomic i32, i32* %2256 monotonic, align 4
  %2258 = and i32 %2257, 2
  %2259 = icmp eq i32 %2258, 0
  %2260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2216, i64 0, i32 0
  %2261 = load i32, i32* %2260, align 4
  br i1 %2259, label %2262, label %2264

2262:                                             ; preds = %2255
  %2263 = add i32 %2261, -1
  store i32 %2263, i32* %2260, align 4
  br label %2264

2264:                                             ; preds = %2262, %2255
  %2265 = phi i32 [ %2263, %2262 ], [ %2261, %2255 ]
  %2266 = icmp eq i32 %2265, 0
  br i1 %2266, label %2267, label %2268

2267:                                             ; preds = %2264
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2216) #12
  br label %2268

2268:                                             ; preds = %2267, %2264, %2253
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_ED2Ev(%"class.WTF::StringAppend.1536"* nonnull %2125) #12
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_ED2Ev(%"class.WTF::StringAppend.1536"* nonnull %43) #12
  %2269 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %44, i64 0, i32 0, i32 1, i32 0, i32 0
  %2270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2269, align 8
  %2271 = icmp eq %"class.WTF::StringImpl"* %2270, null
  br i1 %2271, label %2285, label %2272

2272:                                             ; preds = %2268
  %2273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2274 = load atomic i32, i32* %2273 monotonic, align 4
  %2275 = and i32 %2274, 2
  %2276 = icmp eq i32 %2275, 0
  %2277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2270, i64 0, i32 0
  %2278 = load i32, i32* %2277, align 4
  br i1 %2276, label %2279, label %2281

2279:                                             ; preds = %2272
  %2280 = add i32 %2278, -1
  store i32 %2280, i32* %2277, align 4
  br label %2281

2281:                                             ; preds = %2279, %2272
  %2282 = phi i32 [ %2280, %2279 ], [ %2278, %2272 ]
  %2283 = icmp eq i32 %2282, 0
  br i1 %2283, label %2284, label %2285

2284:                                             ; preds = %2281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2270) #12
  br label %2285

2285:                                             ; preds = %2284, %2281, %2268
  %2286 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %2287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2286, align 8
  %2288 = icmp eq %"class.WTF::StringImpl"* %2287, null
  br i1 %2288, label %2302, label %2289

2289:                                             ; preds = %2285
  %2290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2291 = load atomic i32, i32* %2290 monotonic, align 4
  %2292 = and i32 %2291, 2
  %2293 = icmp eq i32 %2292, 0
  %2294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2287, i64 0, i32 0
  %2295 = load i32, i32* %2294, align 4
  br i1 %2293, label %2296, label %2298

2296:                                             ; preds = %2289
  %2297 = add i32 %2295, -1
  store i32 %2297, i32* %2294, align 4
  br label %2298

2298:                                             ; preds = %2296, %2289
  %2299 = phi i32 [ %2297, %2296 ], [ %2295, %2289 ]
  %2300 = icmp eq i32 %2299, 0
  br i1 %2300, label %2301, label %2302

2301:                                             ; preds = %2298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2287) #12
  br label %2302

2302:                                             ; preds = %2301, %2298, %2285
  %2303 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2303, align 8
  %2305 = icmp eq %"class.WTF::StringImpl"* %2304, null
  br i1 %2305, label %2319, label %2306

2306:                                             ; preds = %2302
  %2307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2308 = load atomic i32, i32* %2307 monotonic, align 4
  %2309 = and i32 %2308, 2
  %2310 = icmp eq i32 %2309, 0
  %2311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2304, i64 0, i32 0
  %2312 = load i32, i32* %2311, align 4
  br i1 %2310, label %2313, label %2315

2313:                                             ; preds = %2306
  %2314 = add i32 %2312, -1
  store i32 %2314, i32* %2311, align 4
  br label %2315

2315:                                             ; preds = %2313, %2306
  %2316 = phi i32 [ %2314, %2313 ], [ %2312, %2306 ]
  %2317 = icmp eq i32 %2316, 0
  br i1 %2317, label %2318, label %2319

2318:                                             ; preds = %2315
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2304) #12
  br label %2319

2319:                                             ; preds = %2318, %2315, %2302
  %2320 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %45, i64 0, i32 1, i32 0, i32 0
  %2321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2320, align 8
  %2322 = icmp eq %"class.WTF::StringImpl"* %2321, null
  br i1 %2322, label %2336, label %2323

2323:                                             ; preds = %2319
  %2324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2325 = load atomic i32, i32* %2324 monotonic, align 4
  %2326 = and i32 %2325, 2
  %2327 = icmp eq i32 %2326, 0
  %2328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2321, i64 0, i32 0
  %2329 = load i32, i32* %2328, align 4
  br i1 %2327, label %2330, label %2332

2330:                                             ; preds = %2323
  %2331 = add i32 %2329, -1
  store i32 %2331, i32* %2328, align 4
  br label %2332

2332:                                             ; preds = %2330, %2323
  %2333 = phi i32 [ %2331, %2330 ], [ %2329, %2323 ]
  %2334 = icmp eq i32 %2333, 0
  br i1 %2334, label %2335, label %2336

2335:                                             ; preds = %2332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2321) #12
  br label %2336

2336:                                             ; preds = %2335, %2332, %2319
  %2337 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %2338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2337, align 8
  %2339 = icmp eq %"class.WTF::StringImpl"* %2338, null
  br i1 %2339, label %2353, label %2340

2340:                                             ; preds = %2336
  %2341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2342 = load atomic i32, i32* %2341 monotonic, align 4
  %2343 = and i32 %2342, 2
  %2344 = icmp eq i32 %2343, 0
  %2345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2338, i64 0, i32 0
  %2346 = load i32, i32* %2345, align 4
  br i1 %2344, label %2347, label %2349

2347:                                             ; preds = %2340
  %2348 = add i32 %2346, -1
  store i32 %2348, i32* %2345, align 4
  br label %2349

2349:                                             ; preds = %2347, %2340
  %2350 = phi i32 [ %2348, %2347 ], [ %2346, %2340 ]
  %2351 = icmp eq i32 %2350, 0
  br i1 %2351, label %2352, label %2353

2352:                                             ; preds = %2349
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2338) #12
  br label %2353

2353:                                             ; preds = %2352, %2349, %2336
  %2354 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2354, align 8
  %2356 = icmp eq %"class.WTF::StringImpl"* %2355, null
  br i1 %2356, label %2370, label %2357

2357:                                             ; preds = %2353
  %2358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2359 = load atomic i32, i32* %2358 monotonic, align 4
  %2360 = and i32 %2359, 2
  %2361 = icmp eq i32 %2360, 0
  %2362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2355, i64 0, i32 0
  %2363 = load i32, i32* %2362, align 4
  br i1 %2361, label %2364, label %2366

2364:                                             ; preds = %2357
  %2365 = add i32 %2363, -1
  store i32 %2365, i32* %2362, align 4
  br label %2366

2366:                                             ; preds = %2364, %2357
  %2367 = phi i32 [ %2365, %2364 ], [ %2363, %2357 ]
  %2368 = icmp eq i32 %2367, 0
  br i1 %2368, label %2369, label %2370

2369:                                             ; preds = %2366
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2355) #12
  br label %2370

2370:                                             ; preds = %2369, %2366, %2353
  %2371 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %46, i64 0, i32 0, i32 1, i32 0, i32 0
  %2372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2371, align 8
  %2373 = icmp eq %"class.WTF::StringImpl"* %2372, null
  br i1 %2373, label %2387, label %2374

2374:                                             ; preds = %2370
  %2375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2372, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2376 = load atomic i32, i32* %2375 monotonic, align 4
  %2377 = and i32 %2376, 2
  %2378 = icmp eq i32 %2377, 0
  %2379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2372, i64 0, i32 0
  %2380 = load i32, i32* %2379, align 4
  br i1 %2378, label %2381, label %2383

2381:                                             ; preds = %2374
  %2382 = add i32 %2380, -1
  store i32 %2382, i32* %2379, align 4
  br label %2383

2383:                                             ; preds = %2381, %2374
  %2384 = phi i32 [ %2382, %2381 ], [ %2380, %2374 ]
  %2385 = icmp eq i32 %2384, 0
  br i1 %2385, label %2386, label %2387

2386:                                             ; preds = %2383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2372) #12
  br label %2387

2387:                                             ; preds = %2386, %2383, %2370
  %2388 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %2389 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2388, align 8
  %2390 = icmp eq %"class.WTF::StringImpl"* %2389, null
  br i1 %2390, label %2404, label %2391

2391:                                             ; preds = %2387
  %2392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2389, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2393 = load atomic i32, i32* %2392 monotonic, align 4
  %2394 = and i32 %2393, 2
  %2395 = icmp eq i32 %2394, 0
  %2396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2389, i64 0, i32 0
  %2397 = load i32, i32* %2396, align 4
  br i1 %2395, label %2398, label %2400

2398:                                             ; preds = %2391
  %2399 = add i32 %2397, -1
  store i32 %2399, i32* %2396, align 4
  br label %2400

2400:                                             ; preds = %2398, %2391
  %2401 = phi i32 [ %2399, %2398 ], [ %2397, %2391 ]
  %2402 = icmp eq i32 %2401, 0
  br i1 %2402, label %2403, label %2404

2403:                                             ; preds = %2400
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2389) #12
  br label %2404

2404:                                             ; preds = %2403, %2400, %2387
  br i1 %1968, label %2418, label %2405

2405:                                             ; preds = %2404
  %2406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1948, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2407 = load atomic i32, i32* %2406 monotonic, align 4
  %2408 = and i32 %2407, 2
  %2409 = icmp eq i32 %2408, 0
  %2410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1948, i64 0, i32 0
  %2411 = load i32, i32* %2410, align 4
  br i1 %2409, label %2412, label %2414

2412:                                             ; preds = %2405
  %2413 = add i32 %2411, -1
  store i32 %2413, i32* %2410, align 4
  br label %2414

2414:                                             ; preds = %2412, %2405
  %2415 = phi i32 [ %2413, %2412 ], [ %2411, %2405 ]
  %2416 = icmp eq i32 %2415, 0
  br i1 %2416, label %2417, label %2418

2417:                                             ; preds = %2414
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1948) #12
  br label %2418

2418:                                             ; preds = %2417, %2414, %2404
  br i1 %1949, label %2432, label %2419

2419:                                             ; preds = %2418
  %2420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1947, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2421 = load atomic i32, i32* %2420 monotonic, align 4
  %2422 = and i32 %2421, 2
  %2423 = icmp eq i32 %2422, 0
  %2424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1947, i64 0, i32 0
  %2425 = load i32, i32* %2424, align 4
  br i1 %2423, label %2426, label %2428

2426:                                             ; preds = %2419
  %2427 = add i32 %2425, -1
  store i32 %2427, i32* %2424, align 4
  br label %2428

2428:                                             ; preds = %2426, %2419
  %2429 = phi i32 [ %2427, %2426 ], [ %2425, %2419 ]
  %2430 = icmp eq i32 %2429, 0
  br i1 %2430, label %2431, label %2432

2431:                                             ; preds = %2428
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1947) #12
  br label %2432

2432:                                             ; preds = %2431, %2428, %2418
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1944) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1943) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1942) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1941) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1940) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1939) #12
  %2433 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %2434 = load i32, i32* %2433, align 8
  %2435 = icmp eq i32 %2434, 0
  %2436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1859, align 8
  %2437 = icmp eq %"class.WTF::StringImpl"* %2436, null
  br i1 %2437, label %2451, label %2438

2438:                                             ; preds = %2432
  %2439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2440 = load atomic i32, i32* %2439 monotonic, align 4
  %2441 = and i32 %2440, 2
  %2442 = icmp eq i32 %2441, 0
  %2443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2436, i64 0, i32 0
  %2444 = load i32, i32* %2443, align 4
  br i1 %2442, label %2445, label %2447

2445:                                             ; preds = %2438
  %2446 = add i32 %2444, -1
  store i32 %2446, i32* %2443, align 4
  br label %2447

2447:                                             ; preds = %2445, %2438
  %2448 = phi i32 [ %2446, %2445 ], [ %2444, %2438 ]
  %2449 = icmp eq i32 %2448, 0
  br i1 %2449, label %2450, label %2451

2450:                                             ; preds = %2447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2436) #12
  br label %2451

2451:                                             ; preds = %2450, %2447, %2432
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1858) #12
  %2452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1504, align 8
  %2453 = icmp eq %"class.WTF::StringImpl"* %2452, null
  br i1 %2453, label %2467, label %2454

2454:                                             ; preds = %2451
  %2455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2456 = load atomic i32, i32* %2455 monotonic, align 4
  %2457 = and i32 %2456, 2
  %2458 = icmp eq i32 %2457, 0
  %2459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2452, i64 0, i32 0
  %2460 = load i32, i32* %2459, align 4
  br i1 %2458, label %2461, label %2463

2461:                                             ; preds = %2454
  %2462 = add i32 %2460, -1
  store i32 %2462, i32* %2459, align 4
  br label %2463

2463:                                             ; preds = %2461, %2454
  %2464 = phi i32 [ %2462, %2461 ], [ %2460, %2454 ]
  %2465 = icmp eq i32 %2464, 0
  br i1 %2465, label %2466, label %2467

2466:                                             ; preds = %2463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2452) #12
  br label %2467

2467:                                             ; preds = %2466, %2463, %2451
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1503) #12
  %2468 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1496, align 8
  %2469 = icmp eq %"class.WTF::StringImpl"* %2468, null
  br i1 %2469, label %2483, label %2470

2470:                                             ; preds = %2467
  %2471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2468, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2472 = load atomic i32, i32* %2471 monotonic, align 4
  %2473 = and i32 %2472, 2
  %2474 = icmp eq i32 %2473, 0
  %2475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2468, i64 0, i32 0
  %2476 = load i32, i32* %2475, align 4
  br i1 %2474, label %2477, label %2479

2477:                                             ; preds = %2470
  %2478 = add i32 %2476, -1
  store i32 %2478, i32* %2475, align 4
  br label %2479

2479:                                             ; preds = %2477, %2470
  %2480 = phi i32 [ %2478, %2477 ], [ %2476, %2470 ]
  %2481 = icmp eq i32 %2480, 0
  br i1 %2481, label %2482, label %2483

2482:                                             ; preds = %2479
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2468) #12
  br label %2483

2483:                                             ; preds = %2482, %2479, %2467
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1495) #12
  br i1 %2007, label %2497, label %2484

2484:                                             ; preds = %2483
  %2485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1857, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2486 = load atomic i32, i32* %2485 monotonic, align 4
  %2487 = and i32 %2486, 2
  %2488 = icmp eq i32 %2487, 0
  %2489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1857, i64 0, i32 0
  %2490 = load i32, i32* %2489, align 4
  br i1 %2488, label %2491, label %2493

2491:                                             ; preds = %2484
  %2492 = add i32 %2490, -1
  store i32 %2492, i32* %2489, align 4
  br label %2493

2493:                                             ; preds = %2491, %2484
  %2494 = phi i32 [ %2492, %2491 ], [ %2490, %2484 ]
  %2495 = icmp eq i32 %2494, 0
  br i1 %2495, label %2496, label %2497

2496:                                             ; preds = %2493
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1857) #12
  br label %2497

2497:                                             ; preds = %2496, %2493, %2483
  %2498 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %2499 = icmp eq %"class.WTF::StringImpl"* %2498, null
  br i1 %2499, label %2513, label %2500

2500:                                             ; preds = %2497
  %2501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2498, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2502 = load atomic i32, i32* %2501 monotonic, align 4
  %2503 = and i32 %2502, 2
  %2504 = icmp eq i32 %2503, 0
  %2505 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2498, i64 0, i32 0
  %2506 = load i32, i32* %2505, align 4
  br i1 %2504, label %2507, label %2509

2507:                                             ; preds = %2500
  %2508 = add i32 %2506, -1
  store i32 %2508, i32* %2505, align 4
  br label %2509

2509:                                             ; preds = %2507, %2500
  %2510 = phi i32 [ %2508, %2507 ], [ %2506, %2500 ]
  %2511 = icmp eq i32 %2510, 0
  br i1 %2511, label %2512, label %2513

2512:                                             ; preds = %2509
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2498) #12
  br label %2513

2513:                                             ; preds = %2512, %2509, %2497
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288) #12
  br label %2514

2514:                                             ; preds = %269, %282, %283, %2513
  %2515 = phi i1 [ %2435, %2513 ], [ true, %269 ], [ true, %283 ], [ true, %282 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %271)
  br label %2527

2516:                                             ; preds = %265
  %2517 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2518 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %2517, align 8
  %2519 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %267, null
  br i1 %2519, label %2527, label %2520

2520:                                             ; preds = %2516
  %2521 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %2521) #12
  %2522 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %3) #12
  br i1 %2522, label %2523, label %2524

2523:                                             ; preds = %2520
  call void @_ZNK5blink21ContentSecurityPolicy20FallbackUrlForPluginEv(%"class.blink::KURL"* nonnull sret %12, %"class.blink::ContentSecurityPolicy"* %1) #12
  br label %2525

2524:                                             ; preds = %2520
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %12, %"class.blink::KURL"* dereferenceable(112) %3) #12
  br label %2525

2525:                                             ; preds = %2524, %2523
  %2526 = call zeroext i1 @_ZN5blink19CSPSourceListAllowsERKN7network5mojom5blink13CSPSourceListERKNS2_9CSPSourceERKNS_4KURLENS_19ResourceRequestHead14RedirectStatusE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %267, %"class.network::mojom::blink::CSPSource"* dereferenceable(40) %2518, %"class.blink::KURL"* nonnull dereferenceable(112) %12, i8 zeroext %5) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %2521) #12
  br label %2527

2527:                                             ; preds = %2525, %2516, %2514
  %2528 = phi i1 [ %2515, %2514 ], [ %2526, %2525 ], [ true, %2516 ]
  %2529 = icmp ne i32 %2, 1
  %2530 = xor i1 %2528, true
  %2531 = or i1 %2529, %2530
  br i1 %2531, label %2544, label %2532

2532:                                             ; preds = %2527
  %2533 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2534 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %2533, align 8
  %2535 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %267, null
  br i1 %2535, label %2544, label %2536

2536:                                             ; preds = %2532
  %2537 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %2537) #12
  %2538 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %3) #12
  br i1 %2538, label %2539, label %2540

2539:                                             ; preds = %2536
  call void @_ZNK5blink21ContentSecurityPolicy20FallbackUrlForPluginEv(%"class.blink::KURL"* nonnull sret %11, %"class.blink::ContentSecurityPolicy"* %1) #12
  br label %2541

2540:                                             ; preds = %2536
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %11, %"class.blink::KURL"* dereferenceable(112) %3) #12
  br label %2541

2541:                                             ; preds = %2539, %2540
  %2542 = call zeroext i1 @_ZN5blink19CSPSourceListAllowsERKN7network5mojom5blink13CSPSourceListERKNS2_9CSPSourceERKNS_4KURLENS_19ResourceRequestHead14RedirectStatusE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %267, %"class.network::mojom::blink::CSPSource"* dereferenceable(40) %2534, %"class.blink::KURL"* nonnull dereferenceable(112) %11, i8 zeroext %5) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %2537) #12
  br i1 %2542, label %2544, label %2543

2543:                                             ; preds = %2541
  call void @_ZNK5blink21ContentSecurityPolicy5CountENS_5mojom10WebFeatureE(%"class.blink::ContentSecurityPolicy"* %1, i32 1763) #12
  br label %2544

2544:                                             ; preds = %115, %263, %246, %260, %84, %65, %2532, %118, %80, %61, %2543, %2541, %2527, %75, %54
  %2545 = phi i1 [ true, %54 ], [ true, %65 ], [ true, %75 ], [ true, %84 ], [ %2528, %2527 ], [ %2528, %2541 ], [ %2528, %2543 ], [ true, %61 ], [ true, %80 ], [ true, %118 ], [ %2528, %2532 ], [ true, %260 ], [ true, %246 ], [ true, %263 ], [ true, %115 ]
  ret i1 %2545
}

declare void @_ZNK5blink21ContentSecurityPolicy5CountENS_5mojom10WebFeatureE(%"class.blink::ContentSecurityPolicy"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink38CSPDirectiveListAllowTrustedTypePolicyERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyERKN3WTF6StringEbRNS6_29AllowTrustedTypePolicyDetailsE(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144), %"class.blink::ContentSecurityPolicy"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32* dereferenceable(4)) local_unnamed_addr #1 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::HashMap", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %14, align 8
  %16 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %15, null
  br i1 %16, label %205, label %17

17:                                               ; preds = %5
  %18 = tail call zeroext i1 @_ZN5blink21CSPTrustedTypesAllowsERKN7network5mojom5blink15CSPTrustedTypesERKN3WTF6StringEbRNS_21ContentSecurityPolicy29AllowTrustedTypePolicyDetailsE(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull dereferenceable(24) %15, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext %3, i32* dereferenceable(4) %4) #12
  br i1 %18, label %205, label %19

19:                                               ; preds = %17
  %20 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0
  %23 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 2
  %24 = bitcast %"class.WTF::HashMap"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 20, i1 false) #12
  %25 = load i32, i32* %23, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  call void @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %22, i32 %25) #12
  %28 = load i32, i32* %23, align 4
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %31 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %30, align 8
  %32 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %34
  br i1 %29, label %63, label %36

36:                                               ; preds = %27
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %36, %42
  %39 = phi %"struct.WTF::KeyValuePair"* [ %43, %42 ], [ %31, %36 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  switch i32 %41, label %45 [
    i32 -1000001, label %42
    i32 0, label %42
  ]

42:                                               ; preds = %38, %38
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 1
  %44 = icmp eq %"struct.WTF::KeyValuePair"* %43, %35
  br i1 %44, label %63, label %38

45:                                               ; preds = %38, %36
  %46 = phi %"struct.WTF::KeyValuePair"* [ %31, %36 ], [ %39, %38 ]
  %47 = icmp eq %"struct.WTF::KeyValuePair"* %46, %35
  br i1 %47, label %63, label %48

48:                                               ; preds = %45, %61
  %49 = phi %"struct.WTF::KeyValuePair"* [ %55, %61 ], [ %46, %45 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %51 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS3_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %22, i32* dereferenceable(4) %50, %"struct.WTF::KeyValuePair"* dereferenceable(16) %49) #12
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 1
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %52, %35
  br i1 %53, label %63, label %54

54:                                               ; preds = %48, %58
  %55 = phi %"struct.WTF::KeyValuePair"* [ %59, %58 ], [ %52, %48 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  switch i32 %57, label %61 [
    i32 -1000001, label %58
    i32 0, label %58
  ]

58:                                               ; preds = %54, %54
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 1
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %35
  br i1 %60, label %63, label %54

61:                                               ; preds = %54
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %55, %35
  br i1 %62, label %63, label %48

63:                                               ; preds = %42, %48, %61, %58, %19, %27, %45
  %64 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_125GetRawDirectiveForMessageEN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEES5_(%"class.WTF::HashMap"* nonnull %7, i32 27)
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %21, align 8
  %65 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0, i32 0
  %66 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %65, align 8
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %67, label %101, label %68, !prof !4

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72

72:                                               ; preds = %68
  %73 = zext i32 %70 to i64
  br label %74

74:                                               ; preds = %96, %72
  %75 = phi i64 [ 0, %72 ], [ %97, %96 ]
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 %75, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, -1000001
  br i1 %78, label %96, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 %75, i32 1, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #12
  br label %96

96:                                               ; preds = %95, %92, %79, %74
  %97 = add nuw nsw i64 %75, 1
  %98 = icmp eq i64 %97, %73
  br i1 %98, label %99, label %74

99:                                               ; preds = %96, %68
  %100 = bitcast %"struct.WTF::KeyValuePair"* %66 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %65, align 8
  br label %101

101:                                              ; preds = %63, %99
  %102 = load i32, i32* %4, align 4
  %103 = icmp eq i32 %102, 2
  %104 = select i1 %103, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.16, i64 0, i64 0)
  %105 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i64 13) #12
  %106 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #12
  %107 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #12
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* %2, i32 0) #12
  %108 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = select i1 %111, i8* %113, i8* %107
  %115 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #12
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.WTF::String"* nonnull %6, i32 0) #12
  %116 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = select i1 %119, i8* %121, i8* %115
  %123 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* %104, i8* %114, i8* %122) #12
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %124, align 8
  %125 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %125) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %12) #12
  %126 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #12
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %127, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_115ReportViolationERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyERKN3WTF6StringENS2_16CSPDirectiveNameESC_RKNS_4KURLENS_19ResourceRequestHead14RedirectStatusENS7_34ContentSecurityPolicyViolationTypeESC_SC_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, %"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8, i32 27, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::KURL"* nonnull dereferenceable(112) %12, i8 zeroext 1, i32 4, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %13)
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %101
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #12
  br label %143

143:                                              ; preds = %101, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %125) #12
  %144 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #12
  br label %158

158:                                              ; preds = %143, %154, %157
  %159 = load i8, i8* %117, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %158
  %162 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %162) #14
  br label %163

163:                                              ; preds = %158, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #12
  %164 = load i8, i8* %109, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %163
  %167 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %167) #14
  br label %168

168:                                              ; preds = %163, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #12
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #12
  br label %185

185:                                              ; preds = %168, %181, %184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  %186 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %187 = load i32, i32* %186, align 8
  %188 = icmp eq i32 %187, 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #12
  br label %204

204:                                              ; preds = %185, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %205

205:                                              ; preds = %5, %17, %204
  %206 = phi i1 [ %188, %204 ], [ true, %17 ], [ true, %5 ]
  ret i1 %206
}

declare zeroext i1 @_ZN5blink21CSPTrustedTypesAllowsERKN7network5mojom5blink15CSPTrustedTypesERKN3WTF6StringEbRNS_21ContentSecurityPolicy29AllowTrustedTypePolicyDetailsE(%"class.network::mojom::blink::CSPTrustedTypes"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32* dereferenceable(4)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #3

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25CSPDirectiveListAllowHashERKN7network5mojom5blink21ContentSecurityPolicyERKNS2_13CSPHashSourceENS_21ContentSecurityPolicy10InlineTypeE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture dereferenceable(144), %"class.network::mojom::blink::CSPHashSource"* dereferenceable(24), i32) local_unnamed_addr #1 {
  switch i32 %2, label %8 [
    i32 1, label %9
    i32 0, label %13
    i32 2, label %13
    i32 4, label %4
    i32 3, label %7
  ]

4:                                                ; preds = %3
  %5 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 24, i32 0)
  %6 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %5, 1
  br label %17

7:                                                ; preds = %3
  br label %9

8:                                                ; preds = %3
  unreachable

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 22, %3 ], [ 25, %7 ]
  %11 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 %10, i32 0)
  %12 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %11, 1
  br label %24

13:                                               ; preds = %3, %3
  %14 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 21, i32 0)
  %15 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %24, label %17

17:                                               ; preds = %13, %4
  %18 = phi %"class.network::mojom::blink::CSPSourceList"* [ %6, %4 ], [ %15, %13 ]
  %19 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %18, i64 0, i32 10
  %22 = load i8, i8* %21, align 1, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %27

24:                                               ; preds = %13, %9
  %25 = phi %"class.network::mojom::blink::CSPSourceList"* [ %12, %9 ], [ %15, %13 ]
  %26 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %20, %24
  %28 = phi %"class.network::mojom::blink::CSPSourceList"* [ %25, %24 ], [ %18, %20 ]
  %29 = tail call zeroext i1 @_ZN5blink22CSPSourceListAllowHashERKN7network5mojom5blink13CSPSourceListERKNS2_13CSPHashSourceE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %28, %"class.network::mojom::blink::CSPHashSource"* dereferenceable(24) %1) #12
  br label %30

30:                                               ; preds = %17, %20, %27, %24
  %31 = phi i1 [ false, %20 ], [ true, %24 ], [ %29, %27 ], [ true, %17 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink45CSPDirectiveListIsObjectRestrictionReasonableERKN7network5mojom5blink21ContentSecurityPolicyE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture dereferenceable(144)) local_unnamed_addr #1 {
  %2 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 14, i32 0)
  %3 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %2, 1
  %4 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN5blink19CSPSourceListIsNoneERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %3) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ false, %1 ], [ %6, %5 ]
  ret i1 %8
}

declare zeroext i1 @_ZN5blink19CSPSourceListIsNoneERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink43CSPDirectiveListIsBaseRestrictionReasonableERKN7network5mojom5blink21ContentSecurityPolicyE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture readonly dereferenceable(144)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.6"*, %"struct.WTF::KeyValuePair.6"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.6"* %3, null
  %5 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  br i1 %4, label %35, label %7

7:                                                ; preds = %1
  %8 = add i32 %6, -1
  %9 = zext i32 %8 to i64
  %10 = and i32 %8, 1656419744
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %3, i64 %11
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %30, label %16

16:                                               ; preds = %7, %21
  %17 = phi i32 [ %28, %21 ], [ %14, %7 ]
  %18 = phi i64 [ %25, %21 ], [ %11, %7 ]
  %19 = phi i64 [ %23, %21 ], [ 0, %7 ]
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = icmp eq i64 %19, 0
  %23 = select i1 %22, i64 4259200167, i64 %19
  %24 = add i64 %23, %18
  %25 = and i64 %24, %9
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %3, i64 %25
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %16

30:                                               ; preds = %21, %7
  %31 = phi %"struct.WTF::KeyValuePair.6"* [ %12, %7 ], [ %26, %21 ]
  %32 = icmp eq %"struct.WTF::KeyValuePair.6"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = zext i32 %6 to i64
  br label %38

35:                                               ; preds = %16, %30, %1
  %36 = zext i32 %6 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %3, i64 %36
  br label %38

38:                                               ; preds = %33, %35
  %39 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %40 = phi %"struct.WTF::KeyValuePair.6"* [ %31, %33 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %3, i64 %39
  %42 = icmp eq %"struct.WTF::KeyValuePair.6"* %40, %41
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.6", %"struct.WTF::KeyValuePair.6"* %40, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %44, align 8
  %46 = tail call zeroext i1 @_ZN5blink19CSPSourceListIsNoneERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* dereferenceable(64) %45) #12
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %44, align 8
  %49 = tail call zeroext i1 @_ZN5blink19CSPSourceListIsSelfERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* dereferenceable(64) %48) #12
  br label %50

50:                                               ; preds = %38, %43, %47
  %51 = phi i1 [ false, %38 ], [ true, %43 ], [ %49, %47 ]
  ret i1 %51
}

declare zeroext i1 @_ZN5blink19CSPSourceListIsSelfERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink45CSPDirectiveListIsScriptRestrictionReasonableERKN7network5mojom5blink21ContentSecurityPolicyE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture dereferenceable(144)) local_unnamed_addr #1 {
  %2 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 20, i32 0)
  %3 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %2, 1
  %4 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %2, 0
  %7 = tail call zeroext i1 @_ZN5blink27CSPSourceListAllowAllInlineEN7network5mojom16CSPDirectiveNameERKNS1_5blink13CSPSourceListE(i32 %6, %"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %3) #12
  br i1 %7, label %19, label %8

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @_ZN5blink19CSPSourceListIsNoneERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %3) #12
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = tail call zeroext i1 @_ZN5blink33CSPSourceListIsHashOrNoncePresentERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %3) #12
  br i1 %11, label %12, label %19

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %3, i64 0, i32 9
  %14 = load i8, i8* %13, align 2, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %12
  %17 = tail call zeroext i1 @_ZN5blink35CSPSourceListAllowsURLBasedMatchingERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* nonnull dereferenceable(64) %3) #12
  %18 = xor i1 %17, true
  br label %19

19:                                               ; preds = %10, %16, %12, %8, %5, %1
  %20 = phi i1 [ false, %1 ], [ false, %5 ], [ true, %8 ], [ false, %10 ], [ true, %12 ], [ %18, %16 ]
  ret i1 %20
}

declare zeroext i1 @_ZN5blink33CSPSourceListIsHashOrNoncePresentERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* dereferenceable(64)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink35CSPSourceListAllowsURLBasedMatchingERKN7network5mojom5blink13CSPSourceListE(%"class.network::mojom::blink::CSPSourceList"* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink38CSPDirectiveListIsActiveForConnectionsERKN7network5mojom5blink21ContentSecurityPolicyE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture dereferenceable(144)) local_unnamed_addr #1 {
  %2 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 4, i32 0)
  %3 = extractvalue { i32, %"class.network::mojom::blink::CSPSourceList"* } %2, 1
  %4 = icmp ne %"class.network::mojom::blink::CSPSourceList"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink34CSPDirectiveListOperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS1_16CSPDirectiveNameE(%"class.network::mojom::blink::ContentSecurityPolicy"* nocapture dereferenceable(144), i32) local_unnamed_addr #1 {
  %3 = tail call fastcc { i32, %"class.network::mojom::blink::CSPSourceList"* } @_ZN5blink12_GLOBAL__N_118OperativeDirectiveERKN7network5mojom5blink21ContentSecurityPolicyENS2_16CSPDirectiveNameES7_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144) %0, i32 %1, i32 0)
  ret { i32, %"class.network::mojom::blink::CSPSourceList"* } %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.849"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.849"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #12
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #12
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #12
  %29 = bitcast %"class.WTF::StringTypeAdapter.1474"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #12
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.1474"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #12
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"* nonnull %47, i8* %50) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #12
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %59
  call void @llvm.trap() #12
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.849"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #12
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #12
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #12
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #12
  %90 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #12
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #12
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"* nonnull %108, i16* %111) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #12
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #12
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #12
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #12
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #12
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare void @_ZN5blink21ContentSecurityPolicy12LogToConsoleEPNS_14ConsoleMessageEPNS_10LocalFrameE(%"class.blink::ContentSecurityPolicy"*, %"class.blink::ConsoleMessage"*, %"class.blink::LocalFrame"*) local_unnamed_addr #3

declare void @_ZN5blink21ContentSecurityPolicy15ReportViolationERKN3WTF6StringEN7network5mojom16CSPDirectiveNameES4_RKNS_4KURLERKNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEEbS4_NS6_25ContentSecurityPolicyTypeENS0_34ContentSecurityPolicyViolationTypeENSt3__110unique_ptrINS_14SourceLocationENSI_14default_deleteISK_EEEEPNS_10LocalFrameENS_19ResourceRequestHead14RedirectStatusEPNS_7ElementES4_S4_(%"class.blink::ContentSecurityPolicy"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::Vector.13"* dereferenceable(16), i1 zeroext, %"class.WTF::String"* dereferenceable(8), i32, i32, i64, %"class.blink::LocalFrame"*, i8 zeroext, %"class.blink::Element"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.849"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"*, i16*) local_unnamed_addr #3

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #12
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #12
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %40, i8* %41) #12
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.23, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #12
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #12
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare i32 @_ZN7network20CSPFallbackDirectiveENS_5mojom16CSPDirectiveNameES1_(i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink23CSPSourceListAllowNonceERKN7network5mojom5blink13CSPSourceListERKN3WTF6StringE(%"class.network::mojom::blink::CSPSourceList"* dereferenceable(64), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #3

declare zeroext i1 @_ZN5blink13ComputeDigestENS_13HashAlgorithmEPKcmRN3WTF6VectorIhLj64ENS3_18PartitionAllocatorEEE(i32, i8*, i64, %"class.WTF::Vector.1491"* dereferenceable(80)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1492"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink21ContentSecurityPolicy18IsScriptInlineTypeENS0_10InlineTypeE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1495"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #12
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1495"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #12
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #12
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #12
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %45) #12
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"* nonnull %46, i8* %25) #12
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %49) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #12
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #12
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1495"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #12
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.1474"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #12
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter.1474"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #12
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %105) #12
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"* nonnull %106, i16* %85) #12
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %3, i16* %109) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #12
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #12
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #12
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #12
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.1497"* noalias sret, %"class.WTF::StringAppend.1495"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #12
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #12
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.1497"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.1497"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.1496"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #12
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  %17 = select i1 %16, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %15
  %18 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #12
  %20 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %20) #12
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  br i1 %24, label %25, label %26

25:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  br label %75

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %12, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %12
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  br i1 %32, label %75, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.1496"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #12
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #12
  %40 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %40) #12
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.1497"* %38, i8* %37) #12
  %41 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1497"* %38) #12
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %43) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #12
  %44 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %44, label %117, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %62

52:                                               ; preds = %45
  %53 = zext i32 %51 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #12
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !2

59:                                               ; preds = %52
  call void @llvm.trap() #12
  unreachable

60:                                               ; preds = %52
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %50, align 4
  br label %62

62:                                               ; preds = %45, %60
  %63 = phi i32 [ %61, %60 ], [ %51, %45 ]
  %64 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %65 = load atomic i32, i32* %46 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %70 = add i32 %63, -1
  store i32 %70, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi i32 [ %70, %68 ], [ %63, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %117

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %117

75:                                               ; preds = %26, %25
  %76 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %77 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.1496"* %0)
  %78 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %77, i16** nonnull dereferenceable(8) %7) #12
  %79 = load i16*, i16** %7, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 0
  %81 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #12
  %82 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %82) #12
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.1497"* %80, i16* %79) #12
  %83 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1497"* %80) #12
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %79, i64 %84
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %85) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #12
  %86 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %86, label %117, label %87

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %104

94:                                               ; preds = %87
  %95 = zext i32 %93 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #12
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %94
  call void @llvm.trap() #12
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %92, align 4
  br label %104

104:                                              ; preds = %87, %102
  %105 = phi i32 [ %103, %102 ], [ %93, %87 ]
  %106 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %107 = load atomic i32, i32* %88 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %112 = add i32 %105, -1
  store i32 %112, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %104
  %114 = phi i32 [ %112, %110 ], [ %105, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #12
  br label %117

117:                                              ; preds = %116, %113, %75, %74, %71, %33
  %118 = phi i8* [ %34, %33 ], [ %34, %71 ], [ %34, %74 ], [ %76, %75 ], [ %76, %113 ], [ %76, %116 ]
  %119 = phi i64 [ 0, %33 ], [ %64, %71 ], [ %64, %74 ], [ 0, %75 ], [ %106, %113 ], [ %106, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #12
  %120 = inttoptr i64 %119 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringEPKcEES2_EES4_EES2_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.1498"* noalias sret, %"class.WTF::StringAppend.1499"* dereferenceable(40), i8*) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.WTF::StringAppend.1499", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #12
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #12
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8** %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %36, %26
  %54 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %4, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %1, i64 0, i32 0, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8** %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %1, i64 0, i32 1, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %68
  tail call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %53, %63, %78
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.1498"* %0, %"class.WTF::StringAppend.1499"* nonnull byval(%"class.WTF::StringAppend.1499") align 8 %4, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S2_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.1499"* noalias sret, %"class.WTF::StringAppend.1496"* dereferenceable(32), %"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.WTF::StringAppend.1496", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #12
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #12
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %1, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8** %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %26, %36, %51
  %54 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %4, i64 0, i32 1
  %55 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %1, i64 0, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8** %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #12
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %65
  tail call void @llvm.trap() #12
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %78

77:                                               ; preds = %53
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EC2ES6_S1_(%"class.WTF::StringAppend.1499"* %0, %"class.WTF::StringAppend.1496"* nonnull byval(%"class.WTF::StringAppend.1496") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %90

78:                                               ; preds = %60, %75
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EC2ES6_S1_(%"class.WTF::StringAppend.1499"* %0, %"class.WTF::StringAppend.1496"* nonnull byval(%"class.WTF::StringAppend.1496") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %79 = load atomic i32, i32* %61 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %78
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %78
  %87 = phi i32 [ %85, %84 ], [ %83, %78 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %90

90:                                               ; preds = %77, %86, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.1498"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #12
  %12 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %12) #12
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #12
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %18) #12
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %22 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  %25 = select i1 %24, %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"* %23
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #12
  %28 = load i8*, i8** %27, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %28) #12
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  br i1 %32, label %33, label %34

33:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  br label %41

34:                                               ; preds = %1
  %35 = icmp eq %"class.WTF::StringImpl"* %20, null
  %36 = select i1 %35, %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"* %20
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  br i1 %40, label %41, label %42

41:                                               ; preds = %34, %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  br label %90

42:                                               ; preds = %34
  %43 = icmp eq %"class.WTF::StringImpl"* %14, null
  %44 = select i1 %43, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %14
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  br i1 %48, label %90, label %49

49:                                               ; preds = %42
  %50 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %51 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_E6lengthEv(%"class.WTF::StringAppend.1498"* %0)
  %52 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %51, i8** nonnull dereferenceable(8) %7) #12
  %53 = load i8*, i8** %7, align 8
  %54 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 16, i1 false) #12
  %55 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %55) #12
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPh(%"class.WTF::StringAppend.1499"* %9, i8* %53) #12
  %56 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv(%"class.WTF::StringAppend.1499"* %9) #12
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %53, i64 %57
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %58) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #12
  %59 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %59, label %131, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %77

67:                                               ; preds = %60
  %68 = zext i32 %66 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #12
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %67
  call void @llvm.trap() #12
  unreachable

75:                                               ; preds = %67
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %65, align 4
  br label %77

77:                                               ; preds = %60, %75
  %78 = phi i32 [ %76, %75 ], [ %66, %60 ]
  %79 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %80 = load atomic i32, i32* %61 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %85 = add i32 %78, -1
  store i32 %85, i32* %84, align 4
  br label %86

86:                                               ; preds = %83, %77
  %87 = phi i32 [ %85, %83 ], [ %78, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %131

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %131

90:                                               ; preds = %42, %41
  %91 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %92 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_E6lengthEv(%"class.WTF::StringAppend.1498"* %0)
  %93 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %92, i16** nonnull dereferenceable(8) %8) #12
  %94 = load i16*, i16** %8, align 8
  %95 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 16, i1 false) #12
  %96 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %96) #12
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPDs(%"class.WTF::StringAppend.1499"* %9, i16* %94) #12
  %97 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv(%"class.WTF::StringAppend.1499"* %9) #12
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i16, i16* %94, i64 %98
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %4, i16* %99) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #12
  %100 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %100, label %131, label %101

101:                                              ; preds = %90
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %118

108:                                              ; preds = %101
  %109 = zext i32 %107 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #12
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %108
  call void @llvm.trap() #12
  unreachable

116:                                              ; preds = %108
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %106, align 4
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i32 [ %117, %116 ], [ %107, %101 ]
  %120 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %121 = load atomic i32, i32* %102 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %126 = add i32 %119, -1
  store i32 %126, i32* %125, align 4
  br label %127

127:                                              ; preds = %124, %118
  %128 = phi i32 [ %126, %124 ], [ %119, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #12
  br label %131

131:                                              ; preds = %130, %127, %90, %89, %86, %49
  %132 = phi i8* [ %50, %49 ], [ %50, %86 ], [ %50, %89 ], [ %91, %90 ], [ %91, %127 ], [ %91, %130 ]
  %133 = phi i64 [ 0, %49 ], [ %79, %86 ], [ %79, %89 ], [ 0, %90 ], [ %120, %127 ], [ %120, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #12
  %134 = inttoptr i64 %133 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %134
}

declare void @_ZNK5blink21ContentSecurityPolicy39ReportBlockedScriptExecutionToInspectorERKN3WTF6StringE(%"class.blink::ContentSecurityPolicy"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1495"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1495", %"class.WTF::StringAppend.1495"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %21) #12
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1496"*, %"class.WTF::StringAppend.1497"* byval(%"class.WTF::StringAppend.1497") align 8, i8*) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %1, i64 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %1, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #12
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #12
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 1
  store i8* %2, i8** %53, align 8
  br label %67

54:                                               ; preds = %35, %50
  %55 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 1
  store i8* %2, i8** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #12
  br label %67

67:                                               ; preds = %52, %66, %63
  br i1 %7, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %81

81:                                               ; preds = %67, %77, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.1497"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #12
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.1496"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1497"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1497"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1497"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1495"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1495"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.1497"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1474"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1474"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.1474"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #12
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #12
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %48) #12
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"* nonnull %49, i8* %1) #12
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1495"* %6) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"* nonnull %53, i8* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.1497"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1474"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1474"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.1474"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #12
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.WTF::StringAppend.1497", %"class.WTF::StringAppend.1497"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #12
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %48) #12
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"* nonnull %49, i16* %1) #12
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %4, i16* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1495"* %6) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"* nonnull %53, i16* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureERKN3WTF6StringEjj(%"class.WTF::String"* dereferenceable(8), i32, i32) local_unnamed_addr #3

declare %"class.blink::SourceLocation"* @_ZNK5blink14SourceLocation5CloneEv(%"class.blink::SourceLocation"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.1498"*, %"class.WTF::StringAppend.1499"* byval(%"class.WTF::StringAppend.1499") align 8, i8*) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #12
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #12
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %1, i64 0, i32 0, i32 1
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast i8** %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %1, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %60, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %81

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #12
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %67
  tail call void @llvm.trap() #12
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %81

79:                                               ; preds = %52
  %80 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 1
  store i8* %2, i8** %80, align 8
  br label %94

81:                                               ; preds = %62, %77
  %82 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 1
  store i8* %2, i8** %82, align 8
  %83 = load atomic i32, i32* %63 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #12
  br label %94

94:                                               ; preds = %79, %93, %90
  br i1 %34, label %108, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #12
  br label %108

108:                                              ; preds = %107, %104, %94
  br i1 %7, label %122, label %109

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %122

122:                                              ; preds = %108, %118, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EC2ES6_S1_(%"class.WTF::StringAppend.1499"*, %"class.WTF::StringAppend.1496"* byval(%"class.WTF::StringAppend.1496") align 8, %"class.WTF::StringImpl"*) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %1, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #12
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #12
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %25, %35, %50
  %53 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.WTF::StringAppend.1496", %"class.WTF::StringAppend.1496"* %1, i64 0, i32 1
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast i8** %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %58, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %59, label %89, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %77

67:                                               ; preds = %60
  %68 = zext i32 %66 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #12
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %67
  tail call void @llvm.trap() #12
  unreachable

75:                                               ; preds = %67
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %65, align 4
  br label %77

77:                                               ; preds = %60, %75
  %78 = phi i32 [ %76, %75 ], [ %66, %60 ]
  %79 = load atomic i32, i32* %61 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %84 = add i32 %78, -1
  store i32 %84, i32* %83, align 4
  br label %85

85:                                               ; preds = %82, %77
  %86 = phi i32 [ %84, %82 ], [ %78, %77 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %89

89:                                               ; preds = %52, %85, %88
  br i1 %34, label %103, label %90

90:                                               ; preds = %89
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #12
  br label %103

103:                                              ; preds = %102, %99, %89
  br i1 %7, label %117, label %104

104:                                              ; preds = %103
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %117

117:                                              ; preds = %103, %113, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_E6lengthEv(%"class.WTF::StringAppend.1498"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1498", %"class.WTF::StringAppend.1498"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv(%"class.WTF::StringAppend.1499"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv(%"class.WTF::StringAppend.1499"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv(%"class.WTF::StringAppend.1499"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.1496"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.1496"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPh(%"class.WTF::StringAppend.1499"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #12
  %29 = load i8*, i8** %28, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %29) #12
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.1497"* %26, i8* %1) #12
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1497"* %26) #12
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %32) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #12
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.1496"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"* nonnull %33, i8* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPDs(%"class.WTF::StringAppend.1499"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1499", %"class.WTF::StringAppend.1499"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #12
  %29 = load i8*, i8** %28, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %29) #12
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.1497"* %26, i16* %1) #12
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1497"* %26) #12
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %1, i64 %31
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %3, i16* %32) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #12
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.1496"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"* nonnull %33, i16* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_119ReportEvalViolationERKN7network5mojom5blink21ContentSecurityPolicyEPNS_21ContentSecurityPolicyERKN3WTF6StringENS2_16CSPDirectiveNameESC_RKNS_4KURLENS7_15ExceptionStatusESC_(%"class.network::mojom::blink::ContentSecurityPolicy"* dereferenceable(144), %"class.blink::ContentSecurityPolicy"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend.849", align 8
  %10 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %83

15:                                               ; preds = %7
  %16 = bitcast %"class.WTF::StringAppend.849"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %63, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %37

27:                                               ; preds = %20
  %28 = zext i32 %26 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #12
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

35:                                               ; preds = %27
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %25, align 4
  br label %37

37:                                               ; preds = %35, %20
  %38 = phi i32 [ %36, %35 ], [ %26, %20 ]
  %39 = load atomic i32, i32* %21 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %52

42:                                               ; preds = %37
  %43 = zext i32 %38 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #12
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %42
  tail call void @llvm.trap() #12
  unreachable

50:                                               ; preds = %42
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %25, align 4
  br label %52

52:                                               ; preds = %50, %37
  %53 = phi i32 [ %51, %50 ], [ %38, %37 ]
  %54 = load atomic i32, i32* %21 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = add i32 %53, -1
  store i32 %58, i32* %25, align 4
  br label %59

59:                                               ; preds = %57, %52
  %60 = phi i32 [ %58, %57 ], [ %53, %52 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #12
  br label %63

63:                                               ; preds = %15, %59, %62
  %64 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringAppend.849", %"class.WTF::StringAppend.849"* %9, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %65, align 8
  %66 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.849"* nonnull %9)
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %11, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #12
  br label %82

82:                                               ; preds = %63, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  br label %104

83:                                               ; preds = %7
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %11, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i33
  %96 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #12
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %92
  tail call void @llvm.trap() #12
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4
  br label %104

104:                                              ; preds = %102, %87, %83, %82
  %105 = load i32, i32* %12, align 8
  %106 = icmp eq i32 %105, 0
  %107 = icmp eq i32 %5, 1
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %118

109:                                              ; preds = %104
  %110 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #12
  %111 = bitcast i8* %110 to %"class.blink::ConsoleMessage"*
  %112 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #12
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %111, i32 7, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::SourceLocation"* %112) #12
  %113 = getelementptr inbounds i8, i8* %110, i64 -4
  %114 = bitcast i8* %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = or i16 %115, 1
  store atomic i16 %116, i16* %114 release, align 2
  call void @_ZN5blink21ContentSecurityPolicy12LogToConsoleEPNS_14ConsoleMessageEPNS_10LocalFrameE(%"class.blink::ContentSecurityPolicy"* %1, %"class.blink::ConsoleMessage"* %111, %"class.blink::LocalFrame"* null) #12
  %117 = load i32, i32* %12, align 8
  br label %118

118:                                              ; preds = %104, %109
  %119 = phi i32 [ %105, %104 ], [ %117, %109 ]
  %120 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 9
  %121 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 8
  %122 = load i8, i8* %121, align 8, !range !3
  %123 = icmp ne i8 %122, 0
  %124 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %0, i64 0, i32 7, i32 0, i32 0
  %125 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  call void @_ZN5blink21ContentSecurityPolicy15ReportViolationERKN3WTF6StringEN7network5mojom16CSPDirectiveNameES4_RKNS_4KURLERKNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEEbS4_NS6_25ContentSecurityPolicyTypeENS0_34ContentSecurityPolicyViolationTypeENSt3__110unique_ptrINS_14SourceLocationENSI_14default_deleteISK_EEEEPNS_10LocalFrameENS_19ResourceRequestHead14RedirectStatusEPNS_7ElementES4_S4_(%"class.blink::ContentSecurityPolicy"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 20, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::KURL"* dereferenceable(112) %4, %"class.WTF::Vector.13"* dereferenceable(16) %120, i1 zeroext %123, %"class.WTF::String"* dereferenceable(8) %124, i32 %119, i32 1, i64 0, %"class.blink::LocalFrame"* null, i8 zeroext 1, %"class.blink::Element"* null, %"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %125) #12
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #12
  br label %141

141:                                              ; preds = %118, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret void
}

declare zeroext i1 @_ZN5blink14SchemeRegistry25SchemeSupportsWasmEvalCSPERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #12
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #12
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_6StringENS_7IntHashIS3_EENS_10HashTraitsIS3_EENS7_IS4_EENS_18PartitionAllocatorEE2atERKS3_(%"class.WTF::HashMap"*, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %83, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %6
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %83, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %6
  %60 = phi %"struct.WTF::KeyValuePair"* [ %27, %6 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, null
  br i1 %61, label %83, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #12
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  tail call void @llvm.trap() #12
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %45, %2, %81, %66, %62, %59
  %84 = phi %"class.WTF::StringImpl"* [ null, %59 ], [ null, %62 ], [ %64, %66 ], [ %64, %81 ], [ null, %2 ], [ null, %45 ]
  ret %"class.WTF::StringImpl"* %84
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %71

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.39, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.40, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #12
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair"*
  %31 = add nsw i64 %27, -1
  %32 = and i64 %27, 3
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %57, label %34

34:                                               ; preds = %26
  %35 = sub nsw i64 %27, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %54, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %55, %36 ]
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %37, i32 0
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %37, i32 1
  %41 = bitcast %"class.WTF::String"* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = or i64 %37, 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %42, i32 0
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %42, i32 1
  %45 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = or i64 %37, 2
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %46, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %46, i32 1
  %49 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %37, 3
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %50, i32 1
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = add nuw nsw i64 %37, 4
  %55 = add i64 %38, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %36

57:                                               ; preds = %36, %26
  %58 = phi i64 [ 0, %26 ], [ %54, %36 ]
  %59 = icmp eq i64 %32, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %57, %60
  %61 = phi i64 [ %66, %60 ], [ %58, %57 ]
  %62 = phi i64 [ %67, %60 ], [ %32, %57 ]
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %61, i32 0
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %61, i32 1
  %65 = bitcast %"class.WTF::String"* %64 to i64*
  store i64 0, i64* %65, align 8
  %66 = add nuw nsw i64 %61, 1
  %67 = add i64 %62, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %60, !llvm.loop !38

69:                                               ; preds = %60, %57
  %70 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %30, i32 %17, %"struct.WTF::KeyValuePair"* null) #12
  br label %71

71:                                               ; preds = %69, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %62

18:                                               ; preds = %168
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %169, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %172, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %170, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi i64 [ 0, %29 ], [ %54, %53 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %52, %49, %36, %31
  %54 = add nuw nsw i64 %32, 1
  %55 = icmp eq i64 %54, %30
  br i1 %55, label %56, label %31

56:                                               ; preds = %53, %27
  %57 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #12
  br label %58

58:                                               ; preds = %20, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  ret %"struct.WTF::KeyValuePair"* %23

62:                                               ; preds = %13, %168
  %63 = phi i64 [ %17, %13 ], [ %169, %168 ]
  %64 = phi i32 [ %7, %13 ], [ %170, %168 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %171, %168 ]
  %66 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %172, %168 ]
  %67 = phi i32 [ 0, %13 ], [ %173, %168 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  switch i32 %70, label %71 [
    i32 -1000001, label %168
    i32 0, label %168
  ]

71:                                               ; preds = %62
  %72 = shl i32 %70, 15
  %73 = xor i32 %72, -1
  %74 = add i32 %70, %73
  %75 = lshr i32 %74, 10
  %76 = xor i32 %75, %74
  %77 = mul i32 %76, 9
  %78 = lshr i32 %77, 6
  %79 = xor i32 %78, %77
  %80 = shl i32 %79, 11
  %81 = xor i32 %80, -1
  %82 = add i32 %79, %81
  %83 = lshr i32 %82, 16
  %84 = xor i32 %83, %82
  %85 = and i32 %84, %14
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %71
  %93 = xor i32 %84, -1
  %94 = lshr i32 %82, 23
  %95 = add i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %115

106:                                              ; preds = %122
  %107 = ptrtoint %"struct.WTF::KeyValuePair"* %129 to i64
  %108 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair"*
  br label %109

109:                                              ; preds = %106, %71
  %110 = phi i64 [ %107, %106 ], [ %88, %71 ]
  %111 = phi %"struct.WTF::KeyValuePair"* [ %108, %106 ], [ null, %71 ]
  %112 = icmp eq %"struct.WTF::KeyValuePair"* %111, null
  %113 = ptrtoint %"struct.WTF::KeyValuePair"* %111 to i64
  %114 = select i1 %112, i64 %110, i64 %113
  br label %134

115:                                              ; preds = %122, %92
  %116 = phi i64 [ 0, %92 ], [ %124, %122 ]
  %117 = phi i32 [ %90, %92 ], [ %132, %122 ]
  %118 = phi i64 [ %88, %92 ], [ %130, %122 ]
  %119 = phi i64 [ %86, %92 ], [ %128, %122 ]
  %120 = phi i64 [ 0, %92 ], [ %126, %122 ]
  %121 = icmp eq i32 %117, %70
  br i1 %121, label %134, label %122

122:                                              ; preds = %115
  %123 = icmp eq i32 %117, -1000001
  %124 = select i1 %123, i64 %118, i64 %116
  %125 = icmp eq i64 %120, 0
  %126 = select i1 %125, i64 %105, i64 %120
  %127 = add i64 %126, %119
  %128 = and i64 %127, %15
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %128
  %130 = ptrtoint %"struct.WTF::KeyValuePair"* %129 to i64
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %106, label %115

134:                                              ; preds = %115, %109
  %135 = phi i64 [ %114, %109 ], [ %118, %115 ]
  %136 = inttoptr i64 %135 to %"struct.WTF::KeyValuePair"*
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 0, i32 1, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #12
  br label %153

153:                                              ; preds = %134, %149, %152
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 0, i32 0
  %155 = load i32, i32* %69, align 8
  store i32 %155, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68, i32 1
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = bitcast %"class.WTF::String"* %157 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.WTF::String"* %156 to i64*
  store i64 %160, i64* %161, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %158, align 8
  %162 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %68
  %164 = icmp eq %"struct.WTF::KeyValuePair"* %163, %3
  %165 = select i1 %164, %"struct.WTF::KeyValuePair"* %136, %"struct.WTF::KeyValuePair"* %66
  %166 = load i32, i32* %6, align 8
  %167 = ptrtoint %"struct.WTF::KeyValuePair"* %162 to i64
  br label %168

168:                                              ; preds = %62, %62, %153
  %169 = phi i64 [ %63, %62 ], [ %167, %153 ], [ %63, %62 ]
  %170 = phi i32 [ %64, %62 ], [ %166, %153 ], [ %64, %62 ]
  %171 = phi %"struct.WTF::KeyValuePair"* [ %65, %62 ], [ %162, %153 ], [ %65, %62 ]
  %172 = phi %"struct.WTF::KeyValuePair"* [ %66, %62 ], [ %165, %153 ], [ %66, %62 ]
  %173 = add i32 %67, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %18, label %62
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS3_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %80, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %137, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  br label %80

80:                                               ; preds = %10, %68, %70
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %83, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #12
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !2

103:                                              ; preds = %94
  tail call void @llvm.trap() #12
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %104, %89, %80
  %107 = ptrtoint %"class.WTF::StringImpl"* %87 to i64
  %108 = bitcast %"class.WTF::String"* %85 to i64*
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  store i64 %107, i64* %108, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #12
  br label %125

125:                                              ; preds = %106, %121, %124
  %126 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %126, align 4
  %129 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %130 = load i32, i32* %129, align 8
  %131 = add i32 %130, %128
  %132 = shl i32 %131, 1
  %133 = load i32, i32* %12, align 8
  %134 = icmp ult i32 %132, %133
  br i1 %134, label %137, label %135

135:                                              ; preds = %125
  %136 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %137

137:                                              ; preds = %50, %125, %135
  %138 = phi i8 [ 1, %125 ], [ 1, %135 ], [ 0, %50 ]
  %139 = phi %"struct.WTF::KeyValuePair"* [ %81, %125 ], [ %136, %135 ], [ %52, %50 ]
  %140 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %139, 0
  %141 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %140, i8 %138, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.39, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 1
  %49 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 1
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 1
  %57 = bitcast %"class.WTF::String"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 1
  %61 = bitcast %"class.WTF::String"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !40

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #12
  ret %"struct.WTF::KeyValuePair"* %78
}

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink22CSPSourceListAllowHashERKN7network5mojom5blink13CSPSourceListERKNS2_13CSPHashSourceE(%"class.network::mojom::blink::CSPSourceList"* dereferenceable(64), %"class.network::mojom::blink::CSPHashSource"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN7network5mojom5blink13CSPHashSourceC1Ev(%"class.network::mojom::blink::CSPHashSource"*) unnamed_addr #3

declare zeroext i1 @_ZN3WTF12Base64DecodeERKNS_6StringERNS_6VectorIcLj0ENS_18PartitionAllocatorEEEPFbDsENS_18Base64DecodePolicyE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.1526"* dereferenceable(16), i1 (i16)*, i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF17NormalizeToBase64ERKNS_6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRcEEvOT_(%"class.WTF::Vector.25"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  br i1 %15, label %18, label %38, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq i8* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %20) #12
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %35, label %24

24:                                               ; preds = %18
  %25 = load i8*, i8** %16, align 8
  %26 = icmp ne i8* %22, null
  %27 = icmp ne i8* %25, null
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %33, !prof !4

29:                                               ; preds = %24
  %30 = load i32, i32* %3, align 4
  %31 = zext i32 %30 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 1 %25, i64 %31, i1 false) #12
  %32 = load i8*, i8** %16, align 8
  br label %33

33:                                               ; preds = %29, %24
  %34 = phi i8* [ %25, %24 ], [ %32, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %34) #12
  br label %35

35:                                               ; preds = %18, %33
  %36 = bitcast %"class.WTF::Vector.25"* %0 to i64*
  store atomic i64 %23, i64* %36 monotonic, align 8
  %37 = trunc i64 %21 to i32
  store i32 %37, i32* %6, align 8
  br label %38

38:                                               ; preds = %35, %2
  %39 = phi i8* [ %17, %2 ], [ %22, %35 ]
  %40 = load i32, i32* %3, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  %43 = load i8, i8* %1, align 1
  store i8 %43, i8* %42, align 1
  %44 = load i32, i32* %3, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.45, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.46, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringES2_EEPKcEES2_EES5_S2_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.1536"* noalias sret, %"class.WTF::StringAppend.1537"* dereferenceable(40), %"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.WTF::StringAppend.1537", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #12
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #12
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #12
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %36
  tail call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %46, %31, %26
  %49 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %4, i64 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %1, i64 0, i32 0, i32 0, i32 1
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i8** %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #12
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %63
  tail call void @llvm.trap() #12
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %48, %58, %73
  %76 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %4, i64 0, i32 1
  %77 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %1, i64 0, i32 1
  %78 = bitcast i8** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast i8** %76 to i64*
  store i64 %79, i64* %80, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %100

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %100

99:                                               ; preds = %75
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EC2ES7_S1_(%"class.WTF::StringAppend.1536"* %0, %"class.WTF::StringAppend.1537"* nonnull byval(%"class.WTF::StringAppend.1537") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %112

100:                                              ; preds = %82, %97
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EC2ES7_S1_(%"class.WTF::StringAppend.1536"* %0, %"class.WTF::StringAppend.1537"* nonnull byval(%"class.WTF::StringAppend.1537") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %101 = load atomic i32, i32* %83 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %100
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %100
  %109 = phi i32 [ %107, %106 ], [ %105, %100 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %112

112:                                              ; preds = %99, %108, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringES2_EEPKcEES2_S5_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.1537"* noalias sret, %"class.WTF::StringAppend.1538"* dereferenceable(32), i8*) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.WTF::StringAppend.1538", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #12
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #12
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #12
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %36
  tail call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %46, %31, %26
  %49 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %4, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %1, i64 0, i32 0, i32 1
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i8** %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %1, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #12
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %63
  tail call void @llvm.trap() #12
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %48, %58, %73
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EC2ES6_S4_(%"class.WTF::StringAppend.1537"* %0, %"class.WTF::StringAppend.1538"* nonnull byval(%"class.WTF::StringAppend.1538") align 8 %4, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS_6StringES2_EEPKcS2_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1538"* noalias sret, %"class.WTF::StringAppend.1539"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.WTF::StringAppend.1539", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #12
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #12
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #12
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %36
  tail call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %26, %31, %46
  %49 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %4, i64 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %1, i64 0, i32 1
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i8** %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %73

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i33
  %64 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #12
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !2

69:                                               ; preds = %60
  tail call void @llvm.trap() #12
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4
  br label %73

72:                                               ; preds = %48
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringES1_EEPKcEES1_EC2ES5_S1_(%"class.WTF::StringAppend.1538"* %0, %"class.WTF::StringAppend.1539"* nonnull byval(%"class.WTF::StringAppend.1539") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %85

73:                                               ; preds = %55, %70
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringES1_EEPKcEES1_EC2ES5_S1_(%"class.WTF::StringAppend.1538"* %0, %"class.WTF::StringAppend.1539"* nonnull byval(%"class.WTF::StringAppend.1539") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %74 = load atomic i32, i32* %56 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %73
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %73
  %82 = phi i32 [ %80, %79 ], [ %78, %73 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %85

85:                                               ; preds = %72, %81, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat {
  %3 = alloca %"class.WTF::StringAppend.1540", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.1540"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.1540"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1540", %"class.WTF::StringAppend.1540"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.1540", %"class.WTF::StringAppend.1540"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_EcvS1_Ev(%"class.WTF::StringAppend.1535"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #12
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #12
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %20 = select i1 %18, %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %17
  %21 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false) #12
  %23 = load i8*, i8** %22, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %23) #12
  %24 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %28 = select i1 %26, %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"* %25
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  br label %43

36:                                               ; preds = %1
  %37 = icmp eq %"class.WTF::StringImpl"* %30, null
  %38 = select i1 %37, %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"* %30
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  br i1 %42, label %43, label %44

43:                                               ; preds = %36, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  br label %49

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  br i1 %48, label %49, label %50

49:                                               ; preds = %44, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  br label %93

50:                                               ; preds = %44
  %51 = icmp eq %"class.WTF::StringImpl"* %11, null
  %52 = select i1 %51, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  br i1 %56, label %93, label %57

57:                                               ; preds = %50
  %58 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_E6lengthEv(%"class.WTF::StringAppend.1535"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %59, i8** nonnull dereferenceable(8) %5) #12
  %61 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_E7WriteToEPh(%"class.WTF::StringAppend.1535"* %0, i8* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %129, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %129

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %129

93:                                               ; preds = %50, %49
  %94 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %95 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_E6lengthEv(%"class.WTF::StringAppend.1535"* %0)
  %96 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %95, i16** nonnull dereferenceable(8) %6) #12
  %97 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_E7WriteToEPDs(%"class.WTF::StringAppend.1535"* %0, i16* %97)
  %98 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %98, label %129, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %116

106:                                              ; preds = %99
  %107 = zext i32 %105 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #12
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !2

113:                                              ; preds = %106
  call void @llvm.trap() #12
  unreachable

114:                                              ; preds = %106
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %104, align 4
  br label %116

116:                                              ; preds = %99, %114
  %117 = phi i32 [ %115, %114 ], [ %105, %99 ]
  %118 = ptrtoint %"class.WTF::StringImpl"* %96 to i64
  %119 = load atomic i32, i32* %100 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %124 = add i32 %117, -1
  store i32 %124, i32* %123, align 4
  br label %125

125:                                              ; preds = %122, %116
  %126 = phi i32 [ %124, %122 ], [ %117, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #12
  br label %129

129:                                              ; preds = %128, %125, %93, %92, %89, %57
  %130 = phi i8* [ %58, %57 ], [ %58, %89 ], [ %58, %92 ], [ %94, %93 ], [ %94, %125 ], [ %94, %128 ]
  %131 = phi i64 [ 0, %57 ], [ %82, %89 ], [ %82, %92 ], [ 0, %93 ], [ %118, %125 ], [ %118, %128 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #12
  %132 = inttoptr i64 %131 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %132
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_ED2Ev(%"class.WTF::StringAppend.1536"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %34, %31, %18
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %51, %48, %35
  %53 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %69

69:                                               ; preds = %52, %65, %68
  ret void
}

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EC2ES7_S1_(%"class.WTF::StringAppend.1536"*, %"class.WTF::StringAppend.1537"* byval(%"class.WTF::StringAppend.1537") align 8, %"class.WTF::StringImpl"*) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #12
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #12
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %25
  %48 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %1, i64 0, i32 0, i32 0, i32 1
  %50 = bitcast i8** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast i8** %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #12
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  tail call void @llvm.trap() #12
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %47, %57, %72
  %75 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %1, i64 0, i32 1
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast i8** %75 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %80, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %81, label %111, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %99

89:                                               ; preds = %82
  %90 = zext i32 %88 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %89
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %89
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %87, align 4
  br label %99

99:                                               ; preds = %82, %97
  %100 = phi i32 [ %98, %97 ], [ %88, %82 ]
  %101 = load atomic i32, i32* %83 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %106 = add i32 %100, -1
  store i32 %106, i32* %105, align 4
  br label %107

107:                                              ; preds = %104, %99
  %108 = phi i32 [ %106, %104 ], [ %100, %99 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %111

111:                                              ; preds = %74, %107, %110
  br i1 %56, label %125, label %112

112:                                              ; preds = %111
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %125

125:                                              ; preds = %124, %121, %111
  br i1 %29, label %139, label %126

126:                                              ; preds = %125
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %139

139:                                              ; preds = %138, %135, %125
  br i1 %7, label %153, label %140

140:                                              ; preds = %139
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %153

153:                                              ; preds = %139, %149, %152
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EC2ES6_S4_(%"class.WTF::StringAppend.1537"*, %"class.WTF::StringAppend.1538"* byval(%"class.WTF::StringAppend.1538") align 8, i8*) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #12
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #12
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %25
  %48 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %1, i64 0, i32 0, i32 1
  %50 = bitcast i8** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast i8** %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %1, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %76

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #12
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  tail call void @llvm.trap() #12
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %76

74:                                               ; preds = %47
  %75 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 1
  store i8* %2, i8** %75, align 8
  br label %89

76:                                               ; preds = %57, %72
  %77 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 1
  store i8* %2, i8** %77, align 8
  %78 = load atomic i32, i32* %58 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %89

89:                                               ; preds = %74, %88, %85
  br i1 %29, label %103, label %90

90:                                               ; preds = %89
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %103

103:                                              ; preds = %102, %99, %89
  br i1 %7, label %117, label %104

104:                                              ; preds = %103
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %117

117:                                              ; preds = %103, %113, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringES1_EEPKcEES1_EC2ES5_S1_(%"class.WTF::StringAppend.1538"*, %"class.WTF::StringAppend.1539"* byval(%"class.WTF::StringAppend.1539") align 8, %"class.WTF::StringImpl"*) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #12
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #12
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %25, %30, %45
  %48 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %0, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %1, i64 0, i32 1
  %50 = bitcast i8** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast i8** %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %53, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %54, label %84, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %72

62:                                               ; preds = %55
  %63 = zext i32 %61 to i33
  %64 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #12
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !2

69:                                               ; preds = %62
  tail call void @llvm.trap() #12
  unreachable

70:                                               ; preds = %62
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %60, align 4
  br label %72

72:                                               ; preds = %55, %70
  %73 = phi i32 [ %71, %70 ], [ %61, %55 ]
  %74 = load atomic i32, i32* %56 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %79 = add i32 %73, -1
  store i32 %79, i32* %78, align 4
  br label %80

80:                                               ; preds = %77, %72
  %81 = phi i32 [ %79, %77 ], [ %73, %72 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %84

84:                                               ; preds = %47, %80, %83
  br i1 %29, label %98, label %85

85:                                               ; preds = %84
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %98

98:                                               ; preds = %97, %94, %84
  br i1 %7, label %112, label %99

99:                                               ; preds = %98
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %112

112:                                              ; preds = %98, %108, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringES1_EEPKcEC2ES2_S4_(%"class.WTF::StringAppend.1539"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, i8*) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %4
  %25 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %46

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  tail call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %46

44:                                               ; preds = %24
  %45 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 1
  store i8* %3, i8** %45, align 8
  br label %59

46:                                               ; preds = %27, %42
  %47 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 1
  store i8* %3, i8** %47, align 8
  %48 = load atomic i32, i32* %28 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %59

59:                                               ; preds = %44, %58, %55
  br i1 %6, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.1540"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1540", %"class.WTF::StringAppend.1540"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #12
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #12
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.1540", %"class.WTF::StringAppend.1540"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %33
  tail call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_E6lengthEv(%"class.WTF::StringAppend.1535"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_E6lengthEv(%"class.WTF::StringAppend.1536"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_E6lengthEv(%"class.WTF::StringAppend.1536"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_E7WriteToEPh(%"class.WTF::StringAppend.1535"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E7WriteToEPh(%"class.WTF::StringAppend.1537"* %10, i8* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E6lengthEv(%"class.WTF::StringAppend.1537"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"* nonnull %30, i8* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_E6lengthEv(%"class.WTF::StringAppend.1536"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_EES4_E7WriteToEPDs(%"class.WTF::StringAppend.1535"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1535", %"class.WTF::StringAppend.1535"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E7WriteToEPDs(%"class.WTF::StringAppend.1537"* %10, i16* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E6lengthEv(%"class.WTF::StringAppend.1537"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"* nonnull %30, i16* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_E6lengthEv(%"class.WTF::StringAppend.1536"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %4, i16* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_EES1_E6lengthEv(%"class.WTF::StringAppend.1536"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1536", %"class.WTF::StringAppend.1536"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E6lengthEv(%"class.WTF::StringAppend.1537"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E6lengthEv(%"class.WTF::StringAppend.1537"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E6lengthEv(%"class.WTF::StringAppend.1537"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1538"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1538"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1538"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1538", %"class.WTF::StringAppend.1538"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.1539"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.1539"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.1539"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1540"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1540"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1540"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1540", %"class.WTF::StringAppend.1540"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.1540", %"class.WTF::StringAppend.1540"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #12
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %31, i8* %32) #12
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #12
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E7WriteToEPh(%"class.WTF::StringAppend.1537"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPh(%"class.WTF::StringAppend.1539"* %10, i8* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.1539"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"* nonnull %30, i8* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1538"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPh(%"class.WTF::StringAppend.1539"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %19, %17
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  %30 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false) #12
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %25
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %25
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %36, %38
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %31, align 8
  store i32 %47, i32* %32, align 8
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"* nonnull %49, i8* %1) #12
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0
  %51 = load i32, i32* %13, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"* nonnull %50, i8* %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1540"* %6) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EEPKcEES1_EES4_E7WriteToEPDs(%"class.WTF::StringAppend.1537"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1537", %"class.WTF::StringAppend.1537"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPDs(%"class.WTF::StringAppend.1539"* %10, i16* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.1539"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"* nonnull %30, i16* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.1538"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %4, i16* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPDs(%"class.WTF::StringAppend.1539"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %19, %17
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1474"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  %30 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::StringAppend.1539", %"class.WTF::StringAppend.1539"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false) #12
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %25
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %25
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %36, %38
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %31, align 8
  store i32 %47, i32* %32, align 8
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"* nonnull %49, i16* %1) #12
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0
  %51 = load i32, i32* %13, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"* nonnull %50, i16* %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1540"* %6) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %5, i16* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare zeroext i1 @_ZN5blink19CSPSourceListAllowsERKN7network5mojom5blink13CSPSourceListERKNS2_9CSPSourceERKNS_4KURLENS_19ResourceRequestHead14RedirectStatusE(%"class.network::mojom::blink::CSPSourceList"* dereferenceable(64), %"class.network::mojom::blink::CSPSource"* dereferenceable(40), %"class.blink::KURL"* dereferenceable(112), i8 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #3

declare void @_ZNK5blink21ContentSecurityPolicy20FallbackUrlForPluginEv(%"class.blink::KURL"* sret, %"class.blink::ContentSecurityPolicy"*) local_unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.849"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.849"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1475"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.849"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1474", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1474"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1474", %"class.WTF::StringTypeAdapter.1474"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1475"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.849"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!19 = distinct !{!19, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!22 = distinct !{!22, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!28 = distinct !{!28, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN7network5mojom5blink13CSPHashSource3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!31 = distinct !{!31, !"_ZN7network5mojom5blink13CSPHashSource3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!34 = distinct !{!34, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS_6StringES2_EEPKcEES2_EES5_EES2_S5_EENS1_INS1_IT_T0_EET1_EERKSB_SC_: argument 0"}
!37 = distinct !{!37, !"_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS_6StringES2_EEPKcEES2_EES5_EES2_S5_EENS1_INS1_IT_T0_EET1_EERKSB_SC_"}
!38 = distinct !{!38, !39}
!39 = !{!"llvm.loop.unroll.disable"}
!40 = distinct !{!40, !39}
