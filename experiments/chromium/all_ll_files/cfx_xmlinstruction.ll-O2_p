; ModuleID = '../../third_party/pdfium/core/fxcrt/xml/cfx_xmlinstruction.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/xml/cfx_xmlinstruction.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_XMLInstruction = type { %class.CFX_XMLNode, %"class.fxcrt::WideString", %"class.std::__1::vector" }
%class.CFX_XMLNode = type { %"class.fxcrt::TreeNode" }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.fxcrt::WideString"* }
%class.CFX_XMLDocument = type { %"class.std::__1::vector.4", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.CFX_XMLNode* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::unique_ptr.6"* }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_XMLElement* }
%class.CFX_XMLElement = type opaque
%"class.fxcrt::RetainPtr.16" = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.IFX_SeekableWriteStream* }
%class.IFX_SeekableWriteStream = type { %class.IFX_RetainableWriteStream.base, %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_RetainableWriteStream.base = type { %class.IFX_WriteStream }
%class.IFX_WriteStream = type { i32 (...)** }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.15", i64 }
%"class.fxcrt::UnownedPtr.15" = type { i8* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.22" }
%"class.fxcrt::RetainPtr.22" = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.fxcrt::StringDataTemplate.26"* }
%"class.fxcrt::StringDataTemplate.26" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorIN5fxcrt10WideStringENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN5fxcrt10WideStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@_ZTV18CFX_XMLInstruction = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_XMLInstruction*)* @_ZN18CFX_XMLInstructionD2Ev to i8*), i8* bitcast (void (%class.CFX_XMLInstruction*)* @_ZN18CFX_XMLInstructionD0Ev to i8*), i8* bitcast (i32 (%class.CFX_XMLInstruction*)* @_ZNK18CFX_XMLInstruction7GetTypeEv to i8*), i8* bitcast (%class.CFX_XMLNode* (%class.CFX_XMLInstruction*, %class.CFX_XMLDocument*)* @_ZN18CFX_XMLInstruction5CloneEP15CFX_XMLDocument to i8*), i8* bitcast (void (%class.CFX_XMLInstruction*, %"class.fxcrt::RetainPtr.16"*)* @_ZN18CFX_XMLInstruction4SaveERKN5fxcrt9RetainPtrI23IFX_SeekableWriteStreamEE to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [40 x i8] c"<?xml version=\221.0\22 encoding=\22UTF-8\22?>\0A\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"<?\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"?>\0A\00", align 1
@.str.7 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

@_ZN18CFX_XMLInstructionC1ERKN5fxcrt10WideStringE = hidden unnamed_addr alias void (%class.CFX_XMLInstruction*, %"class.fxcrt::WideString"*), void (%class.CFX_XMLInstruction*, %"class.fxcrt::WideString"*)* @_ZN18CFX_XMLInstructionC2ERKN5fxcrt10WideStringE
@_ZN18CFX_XMLInstructionD1Ev = hidden unnamed_addr alias void (%class.CFX_XMLInstruction*), void (%class.CFX_XMLInstruction*)* @_ZN18CFX_XMLInstructionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_XMLInstructionC2ERKN5fxcrt10WideStringE(%class.CFX_XMLInstruction*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 0
  tail call void @_ZN11CFX_XMLNodeC2Ev(%class.CFX_XMLNode* %3) #12
  %4 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV18CFX_XMLInstruction, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %5, %"class.fxcrt::WideString"* dereferenceable(8) %1) #12
  %6 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  ret void
}

declare void @_ZN11CFX_XMLNodeC2Ev(%class.CFX_XMLNode*) unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_XMLInstructionD2Ev(%class.CFX_XMLInstruction*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV18CFX_XMLInstruction, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %4, align 8
  %6 = icmp eq %"class.fxcrt::WideString"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  %9 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %9, align 8
  %11 = icmp eq %"class.fxcrt::WideString"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.fxcrt::WideString"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %13, i64 -1
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %14) #12
  %15 = icmp eq %"class.fxcrt::WideString"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.fxcrt::WideString"* %5, %"class.fxcrt::WideString"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %22) #12
  %23 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 0
  tail call void @_ZN11CFX_XMLNodeD2Ev(%class.CFX_XMLNode* %23) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11CFX_XMLNodeD2Ev(%class.CFX_XMLNode*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_XMLInstructionD0Ev(%class.CFX_XMLInstruction*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV18CFX_XMLInstruction, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %4, align 8
  %6 = icmp eq %"class.fxcrt::WideString"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  %9 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %9, align 8
  %11 = icmp eq %"class.fxcrt::WideString"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.fxcrt::WideString"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %13, i64 -1
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %14) #12
  %15 = icmp eq %"class.fxcrt::WideString"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.fxcrt::WideString"* %5, %"class.fxcrt::WideString"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %22) #12
  %23 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 0
  tail call void @_ZN11CFX_XMLNodeD2Ev(%class.CFX_XMLNode* %23) #12
  %24 = bitcast %class.CFX_XMLInstruction* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK18CFX_XMLInstruction7GetTypeEv(%class.CFX_XMLInstruction* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFX_XMLNode* @_ZN18CFX_XMLInstruction5CloneEP15CFX_XMLDocument(%class.CFX_XMLInstruction*, %class.CFX_XMLDocument*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.6", align 8
  %4 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = tail call i8* @_Znwm(i64 80) #13
  %7 = bitcast i8* %6 to %class.CFX_XMLNode*
  tail call void @_ZN11CFX_XMLNodeC2Ev(%class.CFX_XMLNode* nonnull %7) #12
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV18CFX_XMLInstruction, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 48
  %10 = bitcast i8* %9 to %"class.fxcrt::WideString"*
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %10, %"class.fxcrt::WideString"* dereferenceable(8) %4) #12
  %11 = getelementptr inbounds i8, i8* %6, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  %12 = ptrtoint i8* %6 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.6"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %14, align 8
  %16 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %16, align 8
  %18 = icmp ult %"class.std::__1::unique_ptr.6"* %15, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %3, i64 0, i32 0, i32 0, i32 0
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %20, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.6"* %15 to i64*
  store i64 %12, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %15, i64 1
  %23 = ptrtoint %"class.std::__1::unique_ptr.6"* %22 to i64
  %24 = bitcast %"class.std::__1::unique_ptr.6"** %14 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %2
  %26 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %1, i64 0, i32 0
  call void @_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.4"* %26, %"class.std::__1::unique_ptr.6"* nonnull dereferenceable(8) %3) #12
  br label %27

27:                                               ; preds = %25, %19
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %3, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %28, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %28, align 8
  %30 = icmp eq %class.CFX_XMLNode* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %class.CFX_XMLNode* %29 to void (%class.CFX_XMLNode*)***
  %33 = load void (%class.CFX_XMLNode*)**, void (%class.CFX_XMLNode*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %33, i64 1
  %35 = load void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %34, align 8
  call void %35(%class.CFX_XMLNode* nonnull %29) #12
  br label %36

36:                                               ; preds = %27, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %37 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %14, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %37, i64 -1, i32 0, i32 0, i32 0
  %39 = bitcast %class.CFX_XMLNode** %38 to %class.CFX_XMLInstruction**
  %40 = load %class.CFX_XMLInstruction*, %class.CFX_XMLInstruction** %39, align 8
  %41 = icmp eq %class.CFX_XMLInstruction* %40, %0
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %40, i64 0, i32 2
  %44 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %44, align 8
  %46 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2, i32 0, i32 1
  %47 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %46, align 8
  call void @_ZNSt3__16vectorIN5fxcrt10WideStringENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %43, %"class.fxcrt::WideString"* %45, %"class.fxcrt::WideString"* %47) #12
  br label %48

48:                                               ; preds = %36, %42
  %49 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %40, i64 0, i32 0
  ret %class.CFX_XMLNode* %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_XMLInstruction10AppendDataERKN5fxcrt10WideStringE(%class.CFX_XMLInstruction*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2, i32 0, i32 1
  %4 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %3, align 8
  %5 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %5, align 8
  %7 = icmp eq %"class.fxcrt::WideString"* %4, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* dereferenceable(8) %1) #12
  %9 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 1
  %10 = ptrtoint %"class.fxcrt::WideString"* %9 to i64
  %11 = bitcast %"class.fxcrt::WideString"** %3 to i64*
  store i64 %10, i64* %11, align 8
  br label %14

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2
  tail call void @_ZNSt3__16vectorIN5fxcrt10WideStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %13, %"class.fxcrt::WideString"* dereferenceable(8) %1) #12
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK18CFX_XMLInstruction20IsOriginalXFAVersionEv(%class.CFX_XMLInstruction* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8, !noalias !2
  %4 = icmp eq %"class.fxcrt::StringDataTemplate"* %3, null
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 3
  %6 = select i1 %4, [1 x i32]* @.str.7, [1 x i32]* %5
  br i1 %4, label %25, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !noalias !2
  %10 = icmp eq i64 %9, 18
  br i1 %10, label %18, label %25

11:                                               ; preds = %18
  %12 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 1
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  %15 = icmp ule i32 %14, 126
  %16 = icmp eq i32 %13, 114
  %17 = and i1 %15, %16
  br i1 %17, label %26, label %25

18:                                               ; preds = %7
  %19 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 0
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, -1
  %22 = icmp ule i32 %21, 126
  %23 = icmp eq i32 %20, 111
  %24 = and i1 %22, %23
  br i1 %24, label %11, label %25

25:                                               ; preds = %124, %117, %110, %103, %96, %89, %82, %75, %68, %61, %54, %47, %40, %33, %26, %11, %18, %1, %7
  ret i1 false

26:                                               ; preds = %11
  %27 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  %30 = icmp ule i32 %29, 126
  %31 = icmp eq i32 %28, 105
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %25

33:                                               ; preds = %26
  %34 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 3
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, -1
  %37 = icmp ule i32 %36, 126
  %38 = icmp eq i32 %35, 103
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %25

40:                                               ; preds = %33
  %41 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 4
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, -1
  %44 = icmp ule i32 %43, 126
  %45 = icmp eq i32 %42, 105
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %25

47:                                               ; preds = %40
  %48 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 5
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, -1
  %51 = icmp ule i32 %50, 126
  %52 = icmp eq i32 %49, 110
  %53 = and i1 %51, %52
  br i1 %53, label %54, label %25

54:                                               ; preds = %47
  %55 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 6
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, -1
  %58 = icmp ule i32 %57, 126
  %59 = icmp eq i32 %56, 97
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %25

61:                                               ; preds = %54
  %62 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 7
  %63 = load i32, i32* %62, align 4
  %64 = add i32 %63, -1
  %65 = icmp ule i32 %64, 126
  %66 = icmp eq i32 %63, 108
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %25

68:                                               ; preds = %61
  %69 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 8
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %70, -1
  %72 = icmp ule i32 %71, 126
  %73 = icmp eq i32 %70, 88
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %25

75:                                               ; preds = %68
  %76 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 9
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %77, -1
  %79 = icmp ule i32 %78, 126
  %80 = icmp eq i32 %77, 70
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %25

82:                                               ; preds = %75
  %83 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 10
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, -1
  %86 = icmp ule i32 %85, 126
  %87 = icmp eq i32 %84, 65
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %25

89:                                               ; preds = %82
  %90 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 11
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %91, -1
  %93 = icmp ule i32 %92, 126
  %94 = icmp eq i32 %91, 86
  %95 = and i1 %93, %94
  br i1 %95, label %96, label %25

96:                                               ; preds = %89
  %97 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 12
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, -1
  %100 = icmp ule i32 %99, 126
  %101 = icmp eq i32 %98, 101
  %102 = and i1 %100, %101
  br i1 %102, label %103, label %25

103:                                              ; preds = %96
  %104 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 13
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, -1
  %107 = icmp ule i32 %106, 126
  %108 = icmp eq i32 %105, 114
  %109 = and i1 %107, %108
  br i1 %109, label %110, label %25

110:                                              ; preds = %103
  %111 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 14
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, -1
  %114 = icmp ule i32 %113, 126
  %115 = icmp eq i32 %112, 115
  %116 = and i1 %114, %115
  br i1 %116, label %117, label %25

117:                                              ; preds = %110
  %118 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 15
  %119 = load i32, i32* %118, align 4
  %120 = add i32 %119, -1
  %121 = icmp ule i32 %120, 126
  %122 = icmp eq i32 %119, 105
  %123 = and i1 %121, %122
  br i1 %123, label %124, label %25

124:                                              ; preds = %117
  %125 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 16
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, -1
  %128 = icmp ule i32 %127, 126
  %129 = icmp eq i32 %126, 111
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %25

131:                                              ; preds = %124
  %132 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 17
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, -1
  %135 = icmp ule i32 %134, 126
  %136 = icmp eq i32 %133, 110
  %137 = and i1 %135, %136
  %138 = select i1 %137, i1 true, i1 false
  ret i1 %138
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK18CFX_XMLInstruction9IsAcrobatEv(%class.CFX_XMLInstruction* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8, !noalias !5
  %4 = icmp eq %"class.fxcrt::StringDataTemplate"* %3, null
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 3
  %6 = select i1 %4, [1 x i32]* @.str.7, [1 x i32]* %5
  br i1 %4, label %25, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !noalias !5
  %10 = icmp eq i64 %9, 7
  br i1 %10, label %18, label %25

11:                                               ; preds = %18
  %12 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 1
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  %15 = icmp ule i32 %14, 126
  %16 = icmp eq i32 %13, 99
  %17 = and i1 %15, %16
  br i1 %17, label %26, label %25

18:                                               ; preds = %7
  %19 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 0
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, -1
  %22 = icmp ule i32 %21, 126
  %23 = icmp eq i32 %20, 97
  %24 = and i1 %22, %23
  br i1 %24, label %11, label %25

25:                                               ; preds = %47, %40, %33, %26, %11, %18, %1, %7
  ret i1 false

26:                                               ; preds = %11
  %27 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  %30 = icmp ule i32 %29, 126
  %31 = icmp eq i32 %28, 114
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %25

33:                                               ; preds = %26
  %34 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 3
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, -1
  %37 = icmp ule i32 %36, 126
  %38 = icmp eq i32 %35, 111
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %25

40:                                               ; preds = %33
  %41 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 4
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, -1
  %44 = icmp ule i32 %43, 126
  %45 = icmp eq i32 %42, 98
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %25

47:                                               ; preds = %40
  %48 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 5
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, -1
  %51 = icmp ule i32 %50, 126
  %52 = icmp eq i32 %49, 97
  %53 = and i1 %51, %52
  br i1 %53, label %54, label %25

54:                                               ; preds = %47
  %55 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 6
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, -1
  %58 = icmp ule i32 %57, 126
  %59 = icmp eq i32 %56, 116
  %60 = and i1 %58, %59
  %61 = select i1 %60, i1 true, i1 false
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_XMLInstruction4SaveERKN5fxcrt9RetainPtrI23IFX_SeekableWriteStreamEE(%class.CFX_XMLInstruction*, %"class.fxcrt::RetainPtr.16"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %11 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %12 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %13, align 8, !noalias !8
  %15 = icmp eq %"class.fxcrt::StringDataTemplate"* %14, null
  %16 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 3
  %17 = select i1 %15, [1 x i32]* @.str.7, [1 x i32]* %16
  br i1 %15, label %41, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !8
  %21 = icmp eq i64 %20, 3
  br i1 %21, label %27, label %41

22:                                               ; preds = %32
  %23 = getelementptr inbounds [1 x i32], [1 x i32]* %17, i64 0, i64 1
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %24, -1
  %26 = icmp ugt i32 %25, 126
  br i1 %26, label %41, label %135

27:                                               ; preds = %18
  %28 = getelementptr inbounds [1 x i32], [1 x i32]* %17, i64 0, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %29, -1
  %31 = icmp ugt i32 %30, 126
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = tail call i32** @__ctype_tolower_loc() #14
  %34 = load i32*, i32** %33, align 8
  %35 = sext i32 %29 to i64
  %36 = getelementptr inbounds i32, i32* %34, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds i32, i32* %34, i64 120
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %22, label %41

41:                                               ; preds = %32, %27, %22, %135, %144, %149, %2, %18
  %42 = getelementptr inbounds %"class.fxcrt::RetainPtr.16", %"class.fxcrt::RetainPtr.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %class.IFX_SeekableWriteStream*, %class.IFX_SeekableWriteStream** %42, align 8
  %44 = getelementptr inbounds %class.IFX_SeekableWriteStream, %class.IFX_SeekableWriteStream* %43, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 2, i64* %46, align 8
  %47 = bitcast %class.IFX_SeekableWriteStream* %43 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %48 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %48, i64 1
  %50 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %49, align 8
  %51 = call zeroext i1 %50(%class.IFX_WriteStream* %44, %"class.fxcrt::StringViewTemplate"* nonnull %4) #12
  %52 = load %class.IFX_SeekableWriteStream*, %class.IFX_SeekableWriteStream** %42, align 8
  %53 = getelementptr inbounds %class.IFX_SeekableWriteStream, %class.IFX_SeekableWriteStream* %52, i64 0, i32 0, i32 0
  %54 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  call void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* nonnull sret %6, %"class.fxcrt::WideString"* %12) #12
  %55 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.fxcrt::StringDataTemplate.26"*, %"class.fxcrt::StringDataTemplate.26"** %55, align 8, !noalias !11
  %57 = icmp eq %"class.fxcrt::StringDataTemplate.26"* %56, null
  %58 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.26", %"class.fxcrt::StringDataTemplate.26"* %56, i64 0, i32 3, i64 0
  %59 = select i1 %57, i8* null, i8* %58
  br i1 %57, label %63, label %60

60:                                               ; preds = %41
  %61 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.26", %"class.fxcrt::StringDataTemplate.26"* %56, i64 0, i32 1
  %62 = load i64, i64* %61, align 8, !noalias !11
  br label %63

63:                                               ; preds = %41, %60
  %64 = phi i64 [ %62, %60 ], [ 0, %41 ]
  %65 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %65, align 8, !alias.scope !11
  %66 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %64, i64* %66, align 8, !alias.scope !11
  %67 = bitcast %class.IFX_SeekableWriteStream* %52 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %68 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %67, align 8
  %69 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %68, i64 1
  %70 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %69, align 8
  %71 = call zeroext i1 %70(%class.IFX_WriteStream* %53, %"class.fxcrt::StringViewTemplate"* nonnull %5) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  %72 = load %class.IFX_SeekableWriteStream*, %class.IFX_SeekableWriteStream** %42, align 8
  %73 = getelementptr inbounds %class.IFX_SeekableWriteStream, %class.IFX_SeekableWriteStream* %72, i64 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %74, align 8
  %75 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 1
  store i64 1, i64* %75, align 8
  %76 = bitcast %class.IFX_SeekableWriteStream* %72 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %77 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %76, align 8
  %78 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %77, i64 1
  %79 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %78, align 8
  %80 = call zeroext i1 %79(%class.IFX_WriteStream* %73, %"class.fxcrt::StringViewTemplate"* nonnull %7) #12
  %81 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %81, align 8
  %83 = getelementptr inbounds %class.CFX_XMLInstruction, %class.CFX_XMLInstruction* %0, i64 0, i32 2, i32 0, i32 1
  %84 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %83, align 8
  %85 = icmp eq %"class.fxcrt::WideString"* %82, %84
  %86 = load %class.IFX_SeekableWriteStream*, %class.IFX_SeekableWriteStream** %42, align 8
  %87 = getelementptr inbounds %class.IFX_SeekableWriteStream, %class.IFX_SeekableWriteStream* %86, i64 0, i32 0, i32 0
  br i1 %85, label %95, label %88

88:                                               ; preds = %63
  %89 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  %90 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 1
  br label %105

95:                                               ; preds = %116, %63
  %96 = phi %class.IFX_SeekableWriteStream* [ %86, %63 ], [ %132, %116 ]
  %97 = phi %class.IFX_WriteStream* [ %87, %63 ], [ %133, %116 ]
  %98 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 1
  store i64 3, i64* %99, align 8
  %100 = bitcast %class.IFX_SeekableWriteStream* %96 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %101 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %100, align 8
  %102 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %101, i64 1
  %103 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %102, align 8
  %104 = call zeroext i1 %103(%class.IFX_WriteStream* %97, %"class.fxcrt::StringViewTemplate"* nonnull %11) #12
  br label %134

105:                                              ; preds = %88, %116
  %106 = phi %class.IFX_WriteStream* [ %87, %88 ], [ %133, %116 ]
  %107 = phi %class.IFX_SeekableWriteStream* [ %86, %88 ], [ %132, %116 ]
  %108 = phi %"class.fxcrt::WideString"* [ %82, %88 ], [ %130, %116 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12
  call void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* nonnull sret %9, %"class.fxcrt::WideString"* %108) #12
  %109 = load %"class.fxcrt::StringDataTemplate.26"*, %"class.fxcrt::StringDataTemplate.26"** %90, align 8, !noalias !14
  %110 = icmp eq %"class.fxcrt::StringDataTemplate.26"* %109, null
  %111 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.26", %"class.fxcrt::StringDataTemplate.26"* %109, i64 0, i32 3, i64 0
  %112 = select i1 %110, i8* null, i8* %111
  br i1 %110, label %116, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.26", %"class.fxcrt::StringDataTemplate.26"* %109, i64 0, i32 1
  %115 = load i64, i64* %114, align 8, !noalias !14
  br label %116

116:                                              ; preds = %105, %113
  %117 = phi i64 [ %115, %113 ], [ 0, %105 ]
  store i8* %112, i8** %91, align 8, !alias.scope !14
  store i64 %117, i64* %92, align 8, !alias.scope !14
  %118 = bitcast %class.IFX_SeekableWriteStream* %107 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %119 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %118, align 8
  %120 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %119, i64 1
  %121 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %120, align 8
  %122 = call zeroext i1 %121(%class.IFX_WriteStream* %106, %"class.fxcrt::StringViewTemplate"* nonnull %8) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #12
  %123 = load %class.IFX_SeekableWriteStream*, %class.IFX_SeekableWriteStream** %42, align 8
  %124 = getelementptr inbounds %class.IFX_SeekableWriteStream, %class.IFX_SeekableWriteStream* %123, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %93, align 8
  store i64 1, i64* %94, align 8
  %125 = bitcast %class.IFX_SeekableWriteStream* %123 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %126 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %125, align 8
  %127 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %126, i64 1
  %128 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %127, align 8
  %129 = call zeroext i1 %128(%class.IFX_WriteStream* %124, %"class.fxcrt::StringViewTemplate"* nonnull %10) #12
  %130 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %108, i64 1
  %131 = icmp eq %"class.fxcrt::WideString"* %130, %84
  %132 = load %class.IFX_SeekableWriteStream*, %class.IFX_SeekableWriteStream** %42, align 8
  %133 = getelementptr inbounds %class.IFX_SeekableWriteStream, %class.IFX_SeekableWriteStream* %132, i64 0, i32 0, i32 0
  br i1 %131, label %95, label %105

134:                                              ; preds = %95, %158
  ret void

135:                                              ; preds = %22
  %136 = tail call i32** @__ctype_tolower_loc() #14
  %137 = load i32*, i32** %136, align 8
  %138 = sext i32 %24 to i64
  %139 = getelementptr inbounds i32, i32* %137, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds i32, i32* %137, i64 109
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %144, label %41

144:                                              ; preds = %135
  %145 = getelementptr inbounds [1 x i32], [1 x i32]* %17, i64 0, i64 2
  %146 = load i32, i32* %145, align 4
  %147 = add i32 %146, -1
  %148 = icmp ugt i32 %147, 126
  br i1 %148, label %41, label %149

149:                                              ; preds = %144
  %150 = tail call i32** @__ctype_tolower_loc() #14
  %151 = load i32*, i32** %150, align 8
  %152 = sext i32 %146 to i64
  %153 = getelementptr inbounds i32, i32* %151, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds i32, i32* %151, i64 108
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %158, label %41

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"class.fxcrt::RetainPtr.16", %"class.fxcrt::RetainPtr.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load %class.IFX_SeekableWriteStream*, %class.IFX_SeekableWriteStream** %159, align 8
  %161 = getelementptr inbounds %class.IFX_SeekableWriteStream, %class.IFX_SeekableWriteStream* %160, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8** %162, align 8
  %163 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 39, i64* %163, align 8
  %164 = bitcast %class.IFX_SeekableWriteStream* %160 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %165 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %164, align 8
  %166 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %165, i64 1
  %167 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %166, align 8
  %168 = call zeroext i1 %167(%class.IFX_WriteStream* %161, %"class.fxcrt::StringViewTemplate"* nonnull %3) #12
  br label %134
}

declare void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::WideString"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32** @__ctype_tolower_loc() local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.4"*, %"class.std::__1::unique_ptr.6"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.6"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.6"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.6"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.6"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.6"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.6"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.6"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.6"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.6"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.6"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CFX_XMLNode** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.6"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.6"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.6"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.6"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !17

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.6"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.6"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.6"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.6"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.6"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.6"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.6"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.6"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.6"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.6"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.6"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.6"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.6"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.6"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.6"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.6"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.6"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.6"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.6"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.6"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.6"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.6"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.6"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.6"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.6"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.6"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.6"*
  %138 = icmp eq %"class.std::__1::unique_ptr.6"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.6"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %142, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %142, align 8
  %144 = icmp eq %class.CFX_XMLNode* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %class.CFX_XMLNode* %143 to void (%class.CFX_XMLNode*)***
  %147 = load void (%class.CFX_XMLNode*)**, void (%class.CFX_XMLNode*)*** %146, align 8
  %148 = getelementptr inbounds void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %147, i64 1
  %149 = load void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %148, align 8
  tail call void %149(%class.CFX_XMLNode* nonnull %143) #12
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.6"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5fxcrt10WideStringENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.fxcrt::WideString"* %2 to i64
  %5 = ptrtoint %"class.fxcrt::WideString"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.fxcrt::WideString"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.fxcrt::WideString"*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.fxcrt::WideString"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 %22
  %25 = select i1 %23, %"class.fxcrt::WideString"* %24, %"class.fxcrt::WideString"* %2
  %26 = icmp eq %"class.fxcrt::WideString"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.fxcrt::WideString"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.fxcrt::WideString"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %28, %"class.fxcrt::WideString"* dereferenceable(8) %29) #12
  %31 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %29, i64 1
  %32 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %28, i64 1
  %33 = icmp eq %"class.fxcrt::WideString"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.fxcrt::WideString"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.fxcrt::WideString"* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.fxcrt::WideString"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"class.fxcrt::WideString"* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %"class.fxcrt::WideString"* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %42, %"class.fxcrt::WideString"* dereferenceable(8) %43) #12
  %44 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %43, i64 1
  %45 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %42, i64 1
  %46 = icmp eq %"class.fxcrt::WideString"* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %"class.fxcrt::WideString"* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %113

51:                                               ; preds = %34
  %52 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %18, align 8
  %53 = icmp eq %"class.fxcrt::WideString"* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %"class.fxcrt::WideString"* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %55, i64 -1
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %56) #12
  %57 = icmp eq %"class.fxcrt::WideString"* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %"class.fxcrt::WideString"* %35, %"class.fxcrt::WideString"** %18, align 8
  br label %113

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %64 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %63, align 8
  %65 = icmp eq %"class.fxcrt::WideString"* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"class.fxcrt::WideString"* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %67, i64 -1
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %68) #12
  %69 = icmp eq %"class.fxcrt::WideString"* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %"class.fxcrt::WideString"* %16, %"class.fxcrt::WideString"** %63, align 8
  tail call void @_ZdlPv(i8* %74) #13
  %75 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #12
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 2305843009213693951
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #15
  unreachable

81:                                               ; preds = %76
  %82 = ashr exact i64 %77, 3
  %83 = icmp ult i64 %82, 1152921504606846975
  br i1 %83, label %84, label %91

84:                                               ; preds = %81
  %85 = ashr exact i64 %77, 2
  %86 = icmp ult i64 %85, %7
  br i1 %86, label %91, label %87

87:                                               ; preds = %84
  %88 = icmp ugt i64 %85, 2305843009213693951
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  %90 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #15
  unreachable

91:                                               ; preds = %84, %81, %87
  %92 = phi i64 [ %85, %87 ], [ 2305843009213693951, %81 ], [ %7, %84 ]
  %93 = shl i64 %92, 3
  %94 = tail call i8* @_Znwm(i64 %93) #13
  %95 = bitcast i8* %94 to %"class.fxcrt::WideString"*
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %97 = bitcast %"class.fxcrt::WideString"** %96 to i8**
  store i8* %94, i8** %97, align 8
  %98 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %94, i8** %98, align 8
  %99 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %95, i64 %92
  store %"class.fxcrt::WideString"* %99, %"class.fxcrt::WideString"** %8, align 8
  %100 = bitcast %"class.fxcrt::WideString"** %96 to i64*
  %101 = ptrtoint i8* %94 to i64
  %102 = icmp eq %"class.fxcrt::WideString"* %1, %2
  br i1 %102, label %111, label %103

103:                                              ; preds = %91, %103
  %104 = phi %"class.fxcrt::WideString"* [ %107, %103 ], [ %95, %91 ]
  %105 = phi %"class.fxcrt::WideString"* [ %106, %103 ], [ %1, %91 ]
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %104, %"class.fxcrt::WideString"* dereferenceable(8) %105) #12
  %106 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %105, i64 1
  %107 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %104, i64 1
  %108 = icmp eq %"class.fxcrt::WideString"* %106, %2
  br i1 %108, label %109, label %103

109:                                              ; preds = %103
  %110 = ptrtoint %"class.fxcrt::WideString"* %107 to i64
  br label %111

111:                                              ; preds = %91, %109
  %112 = phi i64 [ %101, %91 ], [ %110, %109 ]
  store i64 %112, i64* %100, align 8
  br label %113

113:                                              ; preds = %49, %58, %111
  ret void
}

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5fxcrt10WideStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.fxcrt::WideString"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.fxcrt::WideString"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.fxcrt::WideString"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.fxcrt::WideString"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %36, i64 %9
  %38 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %36, i64 %35
  %39 = ptrtoint %"class.fxcrt::WideString"* %38 to i64
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %37, %"class.fxcrt::WideString"* dereferenceable(8) %1) #12
  %40 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %37, i64 1
  %41 = ptrtoint %"class.fxcrt::WideString"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %42, align 8
  %44 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %3, align 8
  %45 = icmp eq %"class.fxcrt::WideString"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.fxcrt::WideString"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.fxcrt::WideString"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.fxcrt::WideString"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %49, i64 -1
  %52 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %50, i64 -1
  tail call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* %51, %"class.fxcrt::WideString"* dereferenceable(8) %52) #12
  %53 = icmp eq %"class.fxcrt::WideString"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.fxcrt::WideString"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.fxcrt::WideString"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.fxcrt::WideString"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.fxcrt::WideString"*
  %63 = icmp eq %"class.fxcrt::WideString"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.fxcrt::WideString"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %65, i64 -1
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %66) #12
  %67 = icmp eq %"class.fxcrt::WideString"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
