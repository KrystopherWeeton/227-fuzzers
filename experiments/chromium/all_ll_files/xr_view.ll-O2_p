; ModuleID = '../../third_party/blink/renderer/modules/xr/xr_view.cc'
source_filename = "../../third_party/blink/renderer/modules/xr/xr_view.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.517", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.517" = type { %"class.base::RefCounted.518" }
%"class.base::RefCounted.518" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.521" }
%"class.blink::HeapHashMap.521" = type { %"class.WTF::HashMap.524" }
%"class.WTF::HashMap.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"struct.WTF::KeyValuePair.527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.527" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.529", i32, [4 x i8], %"class.std::__1::unique_ptr.667", %"class.std::__1::unique_ptr.667", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.678", %"class.std::__1::unique_ptr.684", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.696", %"class.std::__1::unique_ptr.702", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.96", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.532", %"class.std::__1::unique_ptr.538", %"class.std::__1::unique_ptr.544", %"class.std::__1::unique_ptr.550", %"class.std::__1::unique_ptr.556", %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.573", %"class.std::__1::unique_ptr.580", %"class.std::__1::unique_ptr.580", %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.594", %"class.std::__1::unique_ptr.601", %"class.std::__1::unique_ptr.601", %"class.std::__1::unique_ptr.608", %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.622", %"class.std::__1::unique_ptr.647", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.565" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.565" = type { %"struct.std::__1::__atomic_base.566" }
%"struct.std::__1::__atomic_base.566" = type { %"struct.std::__1::__atomic_base.567" }
%"struct.std::__1::__atomic_base.567" = type { %"struct.std::__1::__cxx_atomic_impl.568" }
%"struct.std::__1::__cxx_atomic_impl.568" = type { %"struct.std::__1::__cxx_atomic_base_impl.569" }
%"struct.std::__1::__cxx_atomic_base_impl.569" = type { i64 }
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.blink::Worklist.576"* }
%"class.blink::Worklist.576" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.565" }
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.blink::Worklist.583"* }
%"class.blink::Worklist.583" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.565" }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.blink::Worklist.590"* }
%"class.blink::Worklist.590" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.565" }
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.blink::Worklist.597"* }
%"class.blink::Worklist.597" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.565" }
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.blink::Worklist.604"* }
%"class.blink::Worklist.604" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.565" }
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.blink::Worklist.611"* }
%"class.blink::Worklist.611" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.565" }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::Worklist.618"* }
%"class.blink::Worklist.618" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.565" }
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.625", %"class.std::__1::__compressed_pair.633", %"class.std::__1::__compressed_pair.638", %"class.std::__1::__compressed_pair.640", [4 x i8] }>
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627", %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { i64 }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { float }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.650", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.659" }
%"class.WTF::Vector.659" = type { %"class.WTF::VectorBuffer.660" }
%"class.WTF::VectorBuffer.660" = type { %"class.WTF::VectorBufferBase.661" }
%"class.WTF::VectorBufferBase.661" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.675" }
%"class.WTF::VectorBuffer.675" = type { %"class.WTF::VectorBufferBase.676" }
%"class.WTF::VectorBufferBase.676" = type { %"struct.std::__1::pair.677"*, i32, i32 }
%"struct.std::__1::pair.677" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.690" }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.576"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.583"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.590"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.597"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.604"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.931" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.708 }
%class.scoped_refptr.708 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.54" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i32 }
%"class.blink::XRView" = type { %"class.blink::ScriptWrappable", i32, %"class.WTF::String", %"class.blink::Member", %"class.blink::Member.284", %"class.blink::Member.420", %"class.blink::Member.422" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::XRFrame"* }
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::XRViewData"* }
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::XRRigidTransform"* }
%"class.blink::XRRigidTransform" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.426", %"class.blink::Member.426", %"class.blink::Member.420", %"class.blink::Member.422", %"class.std::__1::unique_ptr.408" }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::DOMPointReadOnly"* }
%"class.blink::DOMPointReadOnly" = type opaque
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.424" }
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::XRFrame" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.1", i8, i8, [6 x i8] }>
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::XRSession"* }
%"class.blink::XRSession" = type <{ %"class.blink::EventTargetWithInlineData", %"class.device::mojom::blink::XRSessionClient", %"class.device::mojom::blink::XRInputSourceButtonListener", %"class.blink::ActiveScriptWrappable", %"class.blink::HeapVector.12", i8, [7 x i8], %"class.WTF::Vector.20", %"class.blink::HeapVector.25", %"class.blink::Member.34", i32, i8, [3 x i8], %"class.WTF::String", %"class.WTF::String", i32, i32, %"class.WTF::String", %"class.blink::Member.36", %"class.blink::Member.38", %"class.blink::HeapVector.40", %"class.blink::Member.31", i8, i8, [6 x i8], %"class.WTF::HashSet", %"class.std::__1::unique_ptr.50", i8, [7 x i8], %"class.blink::HeapHashMap", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap.244", %"class.blink::HeapHashMap.251", %"class.blink::HeapHashMap.258", %"class.WTF::HashSet.265", %"class.WTF::HashSet.265", %"class.blink::Member.269", %"class.blink::Member.271", %"class.absl::optional.273", [4 x i8], %"class.blink::HeapVector.278", %"class.WTF::Vector.294", %"class.blink::Member.305", %"class.blink::Member.314", %"class.blink::Member.316", %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.348", i8, [7 x i8], %"class.blink::HeapHashSet", %"class.blink::HeapVector.350", i32, [4 x i8], %"class.mojo::StructPtr.358", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver", %"class.WTF::Vector.379", %"class.blink::Member.385", %"class.std::__1::unique_ptr.408", i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, [3 x i8], float, i8, i8, [6 x i8], %"class.std::__1::unique_ptr.414", i8, i8, i16, i8, [3 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.7" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::HeapVector.9"* }
%"class.blink::HeapVector.9" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.10"* }
%"class.WTF::Vector.10" = type opaque
%"class.device::mojom::blink::XRSessionClient" = type { i32 (...)** }
%"class.device::mojom::blink::XRInputSourceButtonListener" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapVector.12" = type { %"class.WTF::Vector.15" }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17" }
%"class.WTF::VectorBufferBase.17" = type { %"class.blink::Member.18"*, i32, i32 }
%"class.blink::Member.18" = type opaque
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.22" }
%"class.WTF::VectorBufferBase.22" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector.25" = type { %"class.WTF::Vector.28" }
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.30" }
%"class.WTF::VectorBufferBase.30" = type { %"class.blink::Member.31"*, i32, i32 }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::XRSystem"* }
%"class.blink::XRSystem" = type opaque
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::XRRenderState"* }
%"class.blink::XRRenderState" = type opaque
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::XRLightProbe"* }
%"class.blink::XRLightProbe" = type opaque
%"class.blink::HeapVector.40" = type { %"class.WTF::Vector.43" }
%"class.WTF::Vector.43" = type { %"class.WTF::VectorBuffer.44" }
%"class.WTF::VectorBuffer.44" = type { %"class.WTF::VectorBufferBase.45" }
%"class.WTF::VectorBufferBase.45" = type { %"class.blink::Member.46"*, i32, i32 }
%"class.blink::Member.46" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.blink::XRSession::MetricsReporter"* }
%"struct.blink::XRSession::MetricsReporter" = type { %"class.mojo::Remote", %"class.WTF::HashSet" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.226" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.53, %"class.std::__1::unique_ptr.176", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.59, i32 }>
%class.scoped_refptr.53 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.59, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.138", %"class.absl::optional.143", %"class.absl::optional.100", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.167", i8, [7 x i8], %class.scoped_refptr.59, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.54" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.76 }
%class.scoped_refptr.76 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.77", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.77" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.78" }
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.59, %"class.std::__1::unique_ptr.85", %"class.absl::optional", %"struct.std::__1::atomic.96", i8, i8, i8, i8, i32, i32, %"class.absl::optional.100", %"class.std::__1::unique_ptr.105", i8, i64, %class.scoped_refptr.134, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.137" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.84", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.84" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.59, i8, %"class.mojo::ScopedHandleBase.88", %class.scoped_refptr.89, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.90" }
%"class.mojo::ScopedHandleBase.88" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.89 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.90" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.94 }
%union.anon.94 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.95", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.95" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.108", i8, i64, %class.scoped_refptr.109, %class.scoped_refptr.130 }
%"class.base::RepeatingCallback.108" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.109 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.119", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::map.119" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%class.scoped_refptr.130 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.134 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.135 }
%class.scoped_refptr.135 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.936", [4 x i8], %"class.base::RepeatingCallback.179", %class.scoped_refptr.59, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.936" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.179" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.137" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, [7 x i8], %union.anon.147 }
%union.anon.147 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.100" = type { %"class.absl::optional_internal::optional_data.101" }
%"class.absl::optional_internal::optional_data.101" = type { %"class.absl::optional_internal::optional_data_base.102" }
%"class.absl::optional_internal::optional_data_base.102" = type { %"class.absl::optional_internal::optional_data_dtor_base.103" }
%"class.absl::optional_internal::optional_data_dtor_base.103" = type { i8, %union.anon.104 }
%union.anon.104 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.152 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.152 = type { %"class.std::__1::map.155" }
%"class.std::__1::map.155" = type { %"class.std::__1::__tree.156" }
%"class.std::__1::__tree.156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.166"*, i64 }
%"class.std::__1::unique_ptr.166" = type opaque
%"class.std::__1::map.167" = type { %"class.std::__1::__tree.168" }
%"class.std::__1::__tree.168" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.179", %"class.base::OnceCallback.180", %"class.absl::optional.181", %"class.absl::optional.186", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.193", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.201", %"class.std::__1::map.212", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.221", i8, %class.scoped_refptr.59, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.222" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.180" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.181" = type { %"class.absl::optional_internal::optional_data.182" }
%"class.absl::optional_internal::optional_data.182" = type { %"class.absl::optional_internal::optional_data_base.183" }
%"class.absl::optional_internal::optional_data_base.183" = type { %"class.absl::optional_internal::optional_data_dtor_base.184" }
%"class.absl::optional_internal::optional_data_dtor_base.184" = type { i8, %union.anon.185 }
%union.anon.185 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.186" = type { %"class.absl::optional_internal::optional_data.187" }
%"class.absl::optional_internal::optional_data.187" = type { %"class.absl::optional_internal::optional_data_base.188" }
%"class.absl::optional_internal::optional_data_base.188" = type { %"class.absl::optional_internal::optional_data_dtor_base.189" }
%"class.absl::optional_internal::optional_data_dtor_base.189" = type { i8, %union.anon.190 }
%union.anon.190 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.59, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.191" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.191" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.192 }
%class.scoped_refptr.192 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.196", %class.scoped_refptr.197 }
%"class.base::RepeatingCallback.196" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.197 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.201" = type { %"class.std::__1::__tree.202" }
%"class.std::__1::__tree.202" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::map.212" = type { %"class.std::__1::__tree.213" }
%"class.std::__1::__tree.213" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.base::OnceCallback.221" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.222" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.59 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.60" }>
%"class.base::RefCountedThreadSafe.60" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.device::mojom::blink::XRSessionMetricsRecorderProxy"* }
%"class.device::mojom::blink::XRSessionMetricsRecorderProxy" = type { %"class.device::mojom::blink::XRSessionMetricsRecorder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.device::mojom::blink::XRSessionMetricsRecorder" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.237" }
%"class.WTF::HashTable.237" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::HeapHashMap.244" = type { %"class.WTF::HashMap.247" }
%"class.WTF::HashMap.247" = type { %"class.WTF::HashTable.248" }
%"class.WTF::HashTable.248" = type <{ %"struct.WTF::KeyValuePair.250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.250" = type opaque
%"class.blink::HeapHashMap.251" = type { %"class.WTF::HashMap.254" }
%"class.WTF::HashMap.254" = type { %"class.WTF::HashTable.255" }
%"class.WTF::HashTable.255" = type <{ %"struct.WTF::KeyValuePair.257"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.257" = type opaque
%"class.blink::HeapHashMap.258" = type { %"class.WTF::HashMap.261" }
%"class.WTF::HashMap.261" = type { %"class.WTF::HashTable.262" }
%"class.WTF::HashTable.262" = type <{ %"struct.WTF::KeyValuePair.264"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.264" = type opaque
%"class.WTF::HashSet.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::XRPlaneManager"* }
%"class.blink::XRPlaneManager" = type opaque
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::XRDepthManager"* }
%"class.blink::XRDepthManager" = type opaque
%"class.absl::optional.273" = type { %"class.absl::optional_internal::optional_data.274" }
%"class.absl::optional_internal::optional_data.274" = type { %"class.absl::optional_internal::optional_data_base.275" }
%"class.absl::optional_internal::optional_data_base.275" = type { %"class.absl::optional_internal::optional_data_dtor_base.276" }
%"class.absl::optional_internal::optional_data_dtor_base.276" = type { i8, %union.anon.277 }
%union.anon.277 = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.blink::HeapVector.278" = type { %"class.WTF::Vector.281" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.blink::Member.284"*, i32, i32 }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.297" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.device::mojom::blink::XRView"* }
%"class.device::mojom::blink::XRView" = type { i32, %"class.mojo::InlinedStructPtr", %"class.gfx::Transform", %"class.gfx::Size" }
%"class.mojo::InlinedStructPtr" = type { %"class.device::mojom::blink::VRFieldOfView", i32 }
%"class.device::mojom::blink::VRFieldOfView" = type { float, float, float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::XRInputSourceArray"* }
%"class.blink::XRInputSourceArray" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapHashMap.307" }
%"class.blink::HeapHashMap.307" = type { %"class.WTF::HashMap.310" }
%"class.WTF::HashMap.310" = type { %"class.WTF::HashTable.311" }
%"class.WTF::HashTable.311" = type <{ %"struct.WTF::KeyValuePair.313"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.313" = type opaque
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::XRWebGLLayer"* }
%"class.blink::XRWebGLLayer" = type opaque
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::ResizeObserver"* }
%"class.blink::ResizeObserver" = type opaque
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::XRCanvasInputProvider"* }
%"class.blink::XRCanvasInputProvider" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.332" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.322", %"class.blink::Member.322" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.322", %"class.blink::Member.324", %"class.blink::Member.322", %"class.blink::Member.322", %"class.blink::Member.326" }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.428", %"class.blink::Member.430", %"class.blink::Member.324", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.454", %"class.blink::Member.456", %"class.blink::Member.458", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.463", %"class.blink::HeapVector.465" }
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.481", %"class.WTF::Vector.481", i8, i32, %"class.blink::Member.486", %"class.blink::Member.406", %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::Member.494", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.502", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.508", %"class.blink::Member.510", %"class.blink::Member.471", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.513", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.447", %"class.blink::Member.320", %"class.blink::Member.714", %"class.blink::Member.320", %"class.blink::Member.320", %"class.blink::Member.320", %"class.blink::UserActionElementSet", %"class.blink::Member.723", double, double, i64, i64, %"class.blink::HeapHashSet.725", %"class.blink::HeapHashSet.732", i16, i8, %"class.blink::Member.739", %"class.blink::Member.741", %"class.blink::Member.743", %"class.blink::Member.745", %"class.blink::TextLinkColors", %"class.blink::Member.747", i8, [7 x i8], %"class.blink::HeapHashMap.749", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.320", %"class.WTF::Vector.756", %"class.blink::Member.761", %"class.blink::Member.763", i8, %"class.blink::Member.320", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.765", %"class.blink::HeapVector.767", %"class.std::__1::unique_ptr.775", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.781", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.794", %"class.WTF::Vector.796", i8, i8, %"class.std::__1::unique_ptr.801", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.447", %"class.blink::HeapVector.807", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.815", i8, i32, %"class.blink::Member.817", %"class.blink::Member.819", %"class.blink::Member.821", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.823", %"class.WTF::HashMap.825", %"class.blink::Member.830", %"class.blink::Member.832", %"class.blink::Member.834", %"class.blink::Member.836", %"class.blink::Member.430", %"class.blink::Member.430", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.838", i8, i32, %"class.blink::Member.845", %"class.blink::Member.847", i32, %"class.blink::Member.849", %"class.blink::Member.851", %"class.blink::Member.853", %"class.std::__1::unique_ptr.855", i64, %"class.std::__1::unique_ptr.861", i32, i32, %"class.blink::Member.867", %"class.blink::Member.869", %"class.blink::Member.871", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.873", %"class.WTF::Vector.875", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.880", %"class.blink::Member.887", %"class.std::__1::unique_ptr.889", %"class.blink::Member.895", i8, i8, %"class.WTF::String", %"class.blink::Member.897", i8, [7 x i8], %"class.blink::HeapHashMap.899", %"class.blink::HeapObserverSet", %"class.blink::Member.913", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.915", i32, i8, i8, %"class.blink::WeakMember.917", %"class.blink::Member.918" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.474" }
%"class.blink::HeapHashMap.474" = type { %"class.WTF::HashMap.477" }
%"class.WTF::HashMap.477" = type { %"class.WTF::HashTable.478" }
%"class.WTF::HashTable.478" = type <{ %"struct.WTF::KeyValuePair.480"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.480" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.481" = type { %"class.WTF::VectorBuffer.482" }
%"class.WTF::VectorBuffer.482" = type { %"class.WTF::VectorBufferBase.483" }
%"class.WTF::VectorBufferBase.483" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.496" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.blink::KURL"* }
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.512 }
%class.scoped_refptr.512 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.513" = type { %"class.WTF::VectorBuffer.514" }
%"class.WTF::VectorBuffer.514" = type { %"class.WTF::VectorBufferBase.515" }
%"class.WTF::VectorBufferBase.515" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.516 }
%class.scoped_refptr.516 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.716" }
%"class.blink::HeapHashMap.716" = type { %"class.WTF::HashMap.719" }
%"class.WTF::HashMap.719" = type { %"class.WTF::HashTable.720" }
%"class.WTF::HashTable.720" = type <{ %"struct.WTF::KeyValuePair.722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.722" = type opaque
%"class.blink::Member.723" = type { %"class.blink::MemberBase.724" }
%"class.blink::MemberBase.724" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.725" = type { %"class.WTF::HashSet.728" }
%"class.WTF::HashSet.728" = type { %"class.WTF::HashTable.729" }
%"class.WTF::HashTable.729" = type <{ %"class.blink::WeakMember.731"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.731" = type opaque
%"class.blink::HeapHashSet.732" = type { %"class.WTF::HashSet.735" }
%"class.WTF::HashSet.735" = type { %"class.WTF::HashTable.736" }
%"class.WTF::HashTable.736" = type <{ %"class.blink::WeakMember.738"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.738" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.749" = type { %"class.WTF::HashMap.752" }
%"class.WTF::HashMap.752" = type { %"class.WTF::HashTable.753" }
%"class.WTF::HashTable.753" = type <{ %"struct.WTF::KeyValuePair.755"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.755" = type opaque
%"class.WTF::Vector.756" = type { %"class.WTF::VectorBuffer.757" }
%"class.WTF::VectorBuffer.757" = type { %"class.WTF::VectorBufferBase.758" }
%"class.WTF::VectorBufferBase.758" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.767" = type { %"class.WTF::Vector.770" }
%"class.WTF::Vector.770" = type { %"class.WTF::VectorBuffer.771" }
%"class.WTF::VectorBuffer.771" = type { %"class.WTF::VectorBufferBase.772" }
%"class.WTF::VectorBufferBase.772" = type { %"class.blink::Member.773"*, i32, i32 }
%"class.blink::Member.773" = type opaque
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.781" = type { %"class.WTF::HashSet.784" }
%"class.WTF::HashSet.784" = type { %"class.WTF::HashTable.785" }
%"class.WTF::HashTable.785" = type <{ %"class.blink::WeakMember.787"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.787" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.788", i32, [4 x i8] }>
%"class.WTF::Vector.788" = type { %"class.WTF::VectorBuffer.789" }
%"class.WTF::VectorBuffer.789" = type { %"class.WTF::VectorBufferBase.790" }
%"class.WTF::VectorBufferBase.790" = type { %"struct.std::__1::pair.791"*, i32, i32 }
%"struct.std::__1::pair.791" = type opaque
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.796" = type { %"class.WTF::VectorBuffer.797" }
%"class.WTF::VectorBuffer.797" = type { %"class.WTF::VectorBufferBase.798" }
%"class.WTF::VectorBufferBase.798" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.801" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.447" = type { %"class.WTF::Vector.450" }
%"class.WTF::Vector.450" = type { %"class.WTF::VectorBuffer.451" }
%"class.WTF::VectorBuffer.451" = type { %"class.WTF::VectorBufferBase.452" }
%"class.WTF::VectorBufferBase.452" = type { %"class.blink::Member.320"*, i32, i32 }
%"class.blink::HeapVector.807" = type { %"class.WTF::Vector.810" }
%"class.WTF::Vector.810" = type { %"class.WTF::VectorBuffer.811" }
%"class.WTF::VectorBuffer.811" = type { %"class.WTF::VectorBufferBase.812" }
%"class.WTF::VectorBufferBase.812" = type { %"class.blink::Member.813"*, i32, i32 }
%"class.blink::Member.813" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.430" }
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.825" = type { %"class.WTF::HashTable.826" }
%"class.WTF::HashTable.826" = type <{ %"struct.WTF::KeyValuePair.829"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.829" = type opaque
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.713", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.711, %"class.base::WeakPtrFactory.712" }
%class.scoped_refptr.711 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.712" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.713" = type { %"class.blink::MemberBase.431" }
%"class.blink::HeapHashSet.838" = type { %"class.WTF::HashSet.841" }
%"class.WTF::HashSet.841" = type { %"class.WTF::HashTable.842" }
%"class.WTF::HashTable.842" = type <{ %"class.blink::Member.844"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.844" = type opaque
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.875" = type { %"class.WTF::VectorBuffer.876" }
%"class.WTF::VectorBuffer.876" = type { %"class.WTF::VectorBufferBase.877" }
%"class.WTF::VectorBufferBase.877" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.880" = type { %"class.WTF::HashMap.883" }
%"class.WTF::HashMap.883" = type { %"class.WTF::HashTable.884" }
%"class.WTF::HashTable.884" = type <{ %"struct.WTF::KeyValuePair.886"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.886" = type opaque
%"class.blink::Member.887" = type { %"class.blink::MemberBase.888" }
%"class.blink::MemberBase.888" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.906" }
%"class.blink::HeapHashSet.906" = type { %"class.WTF::HashSet.909" }
%"class.WTF::HashSet.909" = type { %"class.WTF::HashTable.910" }
%"class.WTF::HashTable.910" = type <{ %"class.blink::WeakMember.912"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.912" = type opaque
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.430", %"class.blink::HeapHashSet.922", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.929", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.922" = type { %"class.WTF::HashSet.925" }
%"class.WTF::HashSet.925" = type { %"class.WTF::HashTable.926" }
%"class.WTF::HashTable.926" = type <{ %"class.blink::Member.928"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.928" = type opaque
%"class.blink::HeapTaskRunnerTimer.929" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.930", { i64, i64 } }
%"class.blink::WeakMember.930" = type { %"class.blink::MemberBase.916" }
%"class.blink::WeakMember.917" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::Node"* }
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.436" }
%"class.blink::HeapHashMap.436" = type { %"class.WTF::HashMap.439" }
%"class.WTF::HashMap.439" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ %"struct.WTF::KeyValuePair.442"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.442" = type { %"class.WTF::AtomicString", %"class.blink::Member.443" }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.320", i32, %"class.blink::HeapVector.447" }
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.460" }
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::HeapHashMap.462"* }
%"class.blink::HeapHashMap.462" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.465" = type { %"class.WTF::Vector.468" }
%"class.WTF::Vector.468" = type { %"class.WTF::VectorBuffer.469" }
%"class.WTF::VectorBuffer.469" = type { %"class.WTF::VectorBufferBase.470" }
%"class.WTF::VectorBufferBase.470" = type { %"class.blink::Member.471"*, i32, i32 }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.330 }
%class.scoped_refptr.330 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.331" }
%"class.base::RefCounted.331" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.336", %"class.blink::Member.338", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.336" = type { %"class.WTF::SingleThreadedBitField.337" }
%"class.WTF::SingleThreadedBitField.337" = type { i32 }
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.341", %"class.WTF::AtomicString", %"class.WTF::Vector.343" }
%"class.WTF::RefCounted.341" = type { %"class.base::RefCounted.342" }
%"class.base::RefCounted.342" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.343" = type { %"class.WTF::VectorBuffer.344" }
%"class.WTF::VectorBuffer.344" = type { %"class.WTF::VectorBufferBase.345", [32 x i8] }
%"class.WTF::VectorBufferBase.345" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::XRDOMOverlayState"* }
%"class.blink::XRDOMOverlayState" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.241" }
%"class.WTF::HashSet.241" = type { %"class.WTF::HashTable.242" }
%"class.WTF::HashTable.242" = type <{ %"class.blink::Member.31"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.350" = type { %"class.WTF::Vector.353" }
%"class.WTF::Vector.353" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.355" }
%"class.WTF::VectorBufferBase.355" = type { %"class.blink::Member.356"*, i32, i32 }
%"class.blink::Member.356" = type opaque
%"class.mojo::StructPtr.358" = type { %"class.std::__1::unique_ptr.359" }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.device::mojom::blink::VRStageParameters"* }
%"class.device::mojom::blink::VRStageParameters" = type { %"class.gfx::Transform", %"class.absl::optional.362" }
%"class.absl::optional.362" = type { %"class.absl::optional_internal::optional_data.363" }
%"class.absl::optional_internal::optional_data.363" = type { %"class.absl::optional_internal::optional_data_base.364" }
%"class.absl::optional_internal::optional_data_base.364" = type { %"class.absl::optional_internal::optional_data_dtor_base.365" }
%"class.absl::optional_internal::optional_data_dtor_base.365" = type { i8, %union.anon.366 }
%union.anon.366 = type { %"class.WTF::Vector.367" }
%"class.WTF::Vector.367" = type { %"class.WTF::VectorBuffer.368" }
%"class.WTF::VectorBuffer.368" = type { %"class.WTF::VectorBufferBase.369" }
%"class.WTF::VectorBufferBase.369" = type { %"class.gfx::Point3F"*, i32, i32 }
%"class.gfx::Point3F" = type { float, float, float }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.375" }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::HeapMojoReceiver<device::mojom::blink::XRSessionClient, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<device::mojom::blink::XRSessionClient, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.377" }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::HeapMojoAssociatedReceiver<device::mojom::blink::XRInputSourceButtonListener, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<device::mojom::blink::XRInputSourceButtonListener, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::Vector.379" = type { %"class.WTF::VectorBuffer.380" }
%"class.WTF::VectorBuffer.380" = type { %"class.WTF::VectorBufferBase.381" }
%"class.WTF::VectorBufferBase.381" = type { %"class.base::OnceCallback.382"*, i32, i32 }
%"class.base::OnceCallback.382" = type opaque
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::XRFrameRequestCallbackCollection"* }
%"class.blink::XRFrameRequestCallbackCollection" = type { %"class.blink::NameClient", %"class.blink::HeapHashMap.389", %"class.WTF::HashMap.396", %"class.WTF::Vector.401", %"class.blink::HeapHashMap.389", %"class.WTF::HashMap.396", i32, %"class.blink::Member.406" }
%"class.WTF::Vector.401" = type { %"class.WTF::VectorBuffer.402" }
%"class.WTF::VectorBuffer.402" = type { %"class.WTF::VectorBufferBase.403" }
%"class.WTF::VectorBufferBase.403" = type { i32*, i32, i32 }
%"class.blink::HeapHashMap.389" = type { %"class.WTF::HashMap.392" }
%"class.WTF::HashMap.392" = type { %"class.WTF::HashTable.393" }
%"class.WTF::HashTable.393" = type <{ %"struct.WTF::KeyValuePair.395"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.395" = type opaque
%"class.WTF::HashMap.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %"struct.WTF::KeyValuePair.400"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.400" = type opaque
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.blink::XRSessionViewportScaler"* }
%"class.blink::XRSessionViewportScaler" = type opaque
%"class.blink::XRViewData" = type <{ i32, [4 x i8], %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, [7 x i8], %"class.absl::optional.288", double, double, i8, [7 x i8] }>
%"class.absl::optional.288" = type { %"class.absl::optional_internal::optional_data.289" }
%"class.absl::optional_internal::optional_data.289" = type { %"class.absl::optional_internal::optional_data_base.290" }
%"class.absl::optional_internal::optional_data_base.290" = type { %"class.absl::optional_internal::optional_data_dtor_base.291" }
%"class.absl::optional_internal::optional_data_dtor_base.291" = type { i8, %union.anon.292 }
%union.anon.292 = type { double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%"class.blink::XRCamera" = type { %"class.blink::ScriptWrappable", %"class.blink::Member", %"class.gfx::Size" }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.941, %"class.blink::Member.942", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.941 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.944" }
%"class.blink::Persistent.944" = type { %"class.blink::PersistentBase.945" }
%"class.blink::PersistentBase.945" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink6XRViewD2Ev = comdat any

$_ZN5blink6XRViewD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink6XRView18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7XRFrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16XRRigidTransformEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10XRViewDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink6XRViewE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::XRView"*)* @_ZN5blink6XRViewD2Ev to i8*), i8* bitcast (void (%"class.blink::XRView"*)* @_ZN5blink6XRViewD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::XRView"*, %"class.blink::Visitor"*)* @_ZNK5blink6XRView5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::XRView"*)* @_ZNK5blink6XRView18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"left\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"right\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@_ZN5blink12_GLOBAL__N_117kMinViewportScaleE = internal unnamed_addr constant double 5.000000e-02, align 8
@_ZN5blink6XRView18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink6XRViewC1EPNS_7XRFrameEPNS_10XRViewDataE = hidden unnamed_addr alias void (%"class.blink::XRView"*, %"class.blink::XRFrame"*, %"class.blink::XRViewData"*), void (%"class.blink::XRView"*, %"class.blink::XRFrame"*, %"class.blink::XRViewData"*)* @_ZN5blink6XRViewC2EPNS_7XRFrameEPNS_10XRViewDataE
@_ZN5blink10XRViewDataC1ERKN4mojo9StructPtrIN6device5mojom5blink6XRViewEEEdd = hidden unnamed_addr alias void (%"class.blink::XRViewData"*, %"class.mojo::StructPtr"*, double, double), void (%"class.blink::XRViewData"*, %"class.mojo::StructPtr"*, double, double)* @_ZN5blink10XRViewDataC2ERKN4mojo9StructPtrIN6device5mojom5blink6XRViewEEEdd

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6XRViewC2EPNS_7XRFrameEPNS_10XRViewDataE(%"class.blink::XRView"* nocapture, %"class.blink::XRFrame"*, %"class.blink::XRViewData"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6XRViewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::XRFrame"* %1, %"class.blink::XRFrame"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::XRViewData"* %2, %"class.blink::XRViewData"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 6
  %18 = bitcast %"class.blink::Member.420"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  switch i32 %11, label %93 [
    i32 1, label %19
    i32 2, label %56
  ]

19:                                               ; preds = %3
  %20 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #7
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %22 = bitcast %"class.WTF::String"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %24 = bitcast %"class.WTF::String"* %12 to i64*
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  store i64 %23, i64* %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %130, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #7
  br label %40

40:                                               ; preds = %36, %39
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %130, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %130

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #7
  br label %130

56:                                               ; preds = %3
  %57 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #7
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %59 = bitcast %"class.WTF::String"* %5 to i64*
  %60 = load i64, i64* %59, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %58, align 8
  %61 = bitcast %"class.WTF::String"* %12 to i64*
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  store i64 %60, i64* %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %130, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #7
  br label %77

77:                                               ; preds = %73, %76
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %130, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %130

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #7
  br label %130

93:                                               ; preds = %3
  %94 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #7
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %96 = bitcast %"class.WTF::String"* %6 to i64*
  %97 = load i64, i64* %96, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %98 = bitcast %"class.WTF::String"* %12 to i64*
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  store i64 %97, i64* %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %130, label %101

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #7
  br label %114

114:                                              ; preds = %110, %113
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #7
  br label %130

130:                                              ; preds = %129, %126, %114, %93, %92, %89, %77, %56, %55, %52, %40, %19
  %131 = phi i8* [ %20, %19 ], [ %20, %40 ], [ %20, %52 ], [ %20, %55 ], [ %57, %56 ], [ %57, %77 ], [ %57, %89 ], [ %57, %92 ], [ %94, %93 ], [ %94, %114 ], [ %94, %126 ], [ %94, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #7
  %132 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %2, i64 0, i32 2
  %133 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #7
  %134 = bitcast i8* %133 to %"class.blink::XRRigidTransform"*
  call void @_ZN5blink16XRRigidTransformC1ERKNS_20TransformationMatrixE(%"class.blink::XRRigidTransform"* %134, %"class.blink::TransformationMatrix"* dereferenceable(128) %132) #7
  %135 = getelementptr inbounds i8, i8* %133, i64 -4
  %136 = bitcast i8* %135 to i16*
  %137 = load atomic i16, i16* %136 monotonic, align 2
  %138 = or i16 %137, 1
  store atomic i16 %138, i16* %136 release, align 2
  %139 = ptrtoint i8* %133 to i64
  %140 = bitcast %"class.blink::Member.420"* %16 to i64*
  store atomic i64 %139, i64* %140 monotonic, align 8
  %141 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %145, label %143

143:                                              ; preds = %130
  %144 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %133) #7
  br label %145

145:                                              ; preds = %130, %143
  %146 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %2, i64 0, i32 3
  %147 = call %"class.blink::DOMTypedArray"* @_ZN5blink37transformationMatrixToDOMFloat32ArrayERKNS_20TransformationMatrixE(%"class.blink::TransformationMatrix"* dereferenceable(128) %146) #7
  %148 = ptrtoint %"class.blink::DOMTypedArray"* %147 to i64
  %149 = bitcast %"class.blink::Member.422"* %17 to i64*
  store atomic i64 %148, i64* %149 monotonic, align 8
  %150 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %145
  %153 = bitcast %"class.blink::DOMTypedArray"* %147 to i8*
  %154 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %153) #7
  br label %155

155:                                              ; preds = %145, %152
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::DOMTypedArray"* @_ZN5blink37transformationMatrixToDOMFloat32ArrayERKNS_20TransformationMatrixE(%"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::XRFrame"* @_ZNK5blink6XRView5frameEv(%"class.blink::XRView"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %2, align 8
  ret %"class.blink::XRFrame"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::XRSession"* @_ZNK5blink6XRView7sessionEv(%"class.blink::XRView"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %4, align 8
  ret %"class.blink::XRSession"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::DOMTypedArray"* @_ZNK5blink6XRView16projectionMatrixEv(%"class.blink::XRView"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %2, align 8
  %4 = icmp eq %"class.blink::DOMTypedArray"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %7, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %3, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to float**
  %14 = load float*, float** %13, align 8
  %15 = icmp eq float* %14, null
  %16 = select i1 %15, %"class.blink::DOMTypedArray"* null, %"class.blink::DOMTypedArray"* %3
  ret %"class.blink::DOMTypedArray"* %16

17:                                               ; preds = %1, %5
  ret %"class.blink::DOMTypedArray"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10XRViewDataC2ERKN4mojo9StructPtrIN6device5mojom5blink6XRViewEEEdd(%"class.blink::XRViewData"*, %"class.mojo::StructPtr"* nocapture readonly dereferenceable(8), double, double) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.device::mojom::blink::XRView"*, %"class.device::mojom::blink::XRView"** %6, align 8
  %8 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %5, align 8
  %10 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 2, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %10, align 8
  %11 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 2, i32 0, i32 0, i64 0, i64 1
  %12 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 2, i32 0, i32 0, i64 1, i64 1
  %13 = bitcast double* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %12, align 8
  %14 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 2, i32 0, i32 0, i64 1, i64 2
  %15 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 2, i32 0, i32 0, i64 2, i64 2
  %16 = bitcast double* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %15, align 8
  %17 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 2, i32 0, i32 0, i64 2, i64 3
  %18 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 2, i32 0, i32 0, i64 3, i64 3
  %19 = bitcast double* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #7
  %20 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 0, i64 0
  %21 = bitcast double* %18 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %21, align 8
  %22 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 0, i64 1
  %23 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 1, i64 1
  %24 = bitcast double* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %23, align 8
  %25 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 1, i64 2
  %26 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 2, i64 2
  %27 = bitcast double* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %26, align 8
  %28 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 2, i64 3
  %29 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 3, i64 3
  %30 = bitcast double* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #7
  %31 = bitcast double* %29 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %31, align 8
  %32 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 4, i32 0, i32 0, i64 0, i64 1
  %33 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 4, i32 0, i32 0, i64 1, i64 1
  %34 = bitcast double* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %33, align 8
  %35 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 4, i32 0, i32 0, i64 1, i64 2
  %36 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 4, i32 0, i32 0, i64 2, i64 2
  %37 = bitcast double* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %36, align 8
  %38 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 4, i32 0, i32 0, i64 2, i64 3
  %39 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 4, i32 0, i32 0, i64 3, i64 3
  %40 = bitcast double* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #7
  %41 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 0, i64 0
  %42 = bitcast double* %39 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %42, align 8
  %43 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 0, i64 1
  %44 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 1, i64 1
  %45 = bitcast double* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %44, align 8
  %46 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 1, i64 2
  %47 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 2, i64 2
  %48 = bitcast double* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %47, align 8
  %49 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 2, i64 3
  %50 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 3, i64 3
  %51 = bitcast double* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %50, align 8
  %52 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 6
  store i8 1, i8* %52, align 8
  %53 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 9
  %55 = bitcast double* %54 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %55, align 8
  %56 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 11
  store i8 0, i8* %56, align 8
  %57 = load %"class.device::mojom::blink::XRView"*, %"class.device::mojom::blink::XRView"** %6, align 8
  %58 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %57, i64 0, i32 1, i32 0, i32 0
  %59 = load float, float* %58, align 4
  %60 = fpext float %59 to double
  %61 = fmul double %60, 0x3F91DF46A2529D39
  %62 = fptrunc double %61 to float
  %63 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %57, i64 0, i32 1, i32 0, i32 1
  %64 = load float, float* %63, align 4
  %65 = fpext float %64 to double
  %66 = fmul double %65, 0x3F91DF46A2529D39
  %67 = fptrunc double %66 to float
  %68 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %57, i64 0, i32 1, i32 0, i32 2
  %69 = load float, float* %68, align 4
  %70 = fpext float %69 to double
  %71 = fmul double %70, 0x3F91DF46A2529D39
  %72 = fptrunc double %71 to float
  %73 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %57, i64 0, i32 1, i32 0, i32 3
  %74 = load float, float* %73, align 4
  %75 = fpext float %74 to double
  %76 = fmul double %75, 0x3F91DF46A2529D39
  %77 = fptrunc double %76 to float
  %78 = fptrunc double %2 to float
  %79 = fptrunc double %3 to float
  %80 = tail call float @tanf(float %62) #7
  %81 = tail call float @tanf(float %67) #7
  %82 = tail call float @tanf(float %72) #7
  %83 = tail call float @tanf(float %77) #7
  %84 = insertelement <2 x float> undef, float %82, i32 0
  %85 = insertelement <2 x float> %84, float %80, i32 1
  %86 = insertelement <2 x float> undef, float %83, i32 0
  %87 = insertelement <2 x float> %86, float %81, i32 1
  %88 = fadd <2 x float> %85, %87
  %89 = fdiv <2 x float> <float 2.000000e+00, float 2.000000e+00>, %88
  %90 = fsub float %78, %79
  %91 = fdiv float 1.000000e+00, %90
  %92 = extractelement <2 x float> %89, i32 0
  %93 = fpext float %92 to double
  %94 = extractelement <2 x float> %89, i32 1
  %95 = fpext float %94 to double
  %96 = fsub <2 x float> %85, %87
  %97 = fmul <2 x float> %96, %89
  %98 = fpext <2 x float> %97 to <2 x double>
  %99 = fmul <2 x double> %98, <double -5.000000e-01, double 5.000000e-01>
  %100 = fadd float %78, %79
  %101 = fmul float %100, %91
  %102 = fpext float %101 to double
  %103 = fmul float %79, 2.000000e+00
  %104 = fmul float %103, %78
  %105 = fmul float %104, %91
  %106 = fpext float %105 to double
  store double %93, double* %20, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #7
  store double %95, double* %23, align 8
  %107 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 2, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #7
  %108 = bitcast double* %107 to <2 x double>*
  store <2 x double> %99, <2 x double>* %108, align 8
  store double %102, double* %26, align 8
  store double -1.000000e+00, double* %28, align 8
  %109 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 3, i64 0
  %110 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 3, i64 2
  %111 = bitcast double* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #7
  store double %106, double* %110, align 8
  store double 0.000000e+00, double* %29, align 8
  %112 = load %"class.device::mojom::blink::XRView"*, %"class.device::mojom::blink::XRView"** %6, align 8
  %113 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %112, i64 0, i32 2, i32 0, i32 0, i64 0, i64 0
  %114 = bitcast float* %113 to <2 x float>*
  %115 = load <2 x float>, <2 x float>* %114, align 4
  %116 = fpext <2 x float> %115 to <2 x double>
  %117 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %112, i64 0, i32 2, i32 0, i32 0, i64 0, i64 2
  %118 = bitcast float* %117 to <2 x float>*
  %119 = load <2 x float>, <2 x float>* %118, align 4
  %120 = fpext <2 x float> %119 to <2 x double>
  %121 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %112, i64 0, i32 2, i32 0, i32 0, i64 1, i64 0
  %122 = bitcast float* %121 to <2 x float>*
  %123 = load <2 x float>, <2 x float>* %122, align 4
  %124 = fpext <2 x float> %123 to <2 x double>
  %125 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %112, i64 0, i32 2, i32 0, i32 0, i64 1, i64 2
  %126 = bitcast float* %125 to <2 x float>*
  %127 = load <2 x float>, <2 x float>* %126, align 4
  %128 = fpext <2 x float> %127 to <2 x double>
  %129 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %112, i64 0, i32 2, i32 0, i32 0, i64 2, i64 0
  %130 = bitcast float* %129 to <2 x float>*
  %131 = load <2 x float>, <2 x float>* %130, align 4
  %132 = fpext <2 x float> %131 to <2 x double>
  %133 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %112, i64 0, i32 2, i32 0, i32 0, i64 2, i64 2
  %134 = bitcast float* %133 to <2 x float>*
  %135 = load <2 x float>, <2 x float>* %134, align 4
  %136 = fpext <2 x float> %135 to <2 x double>
  %137 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %112, i64 0, i32 2, i32 0, i32 0, i64 3, i64 0
  %138 = bitcast float* %137 to <2 x float>*
  %139 = load <2 x float>, <2 x float>* %138, align 4
  %140 = fpext <2 x float> %139 to <2 x double>
  %141 = getelementptr inbounds %"class.device::mojom::blink::XRView", %"class.device::mojom::blink::XRView"* %112, i64 0, i32 2, i32 0, i32 0, i64 3, i64 2
  %142 = bitcast float* %141 to <2 x float>*
  %143 = load <2 x float>, <2 x float>* %142, align 4
  %144 = fpext <2 x float> %143 to <2 x double>
  %145 = bitcast double* %41 to <2 x double>*
  store <2 x double> %116, <2 x double>* %145, align 8
  %146 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 0, i64 2
  %147 = bitcast double* %146 to <2 x double>*
  store <2 x double> %120, <2 x double>* %147, align 8
  %148 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 1, i64 0
  %149 = bitcast double* %148 to <2 x double>*
  store <2 x double> %124, <2 x double>* %149, align 8
  %150 = bitcast double* %46 to <2 x double>*
  store <2 x double> %128, <2 x double>* %150, align 8
  %151 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 2, i64 0
  %152 = bitcast double* %151 to <2 x double>*
  store <2 x double> %132, <2 x double>* %152, align 8
  %153 = bitcast double* %47 to <2 x double>*
  store <2 x double> %136, <2 x double>* %153, align 8
  %154 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 3, i64 0
  %155 = bitcast double* %154 to <2 x double>*
  store <2 x double> %140, <2 x double>* %155, align 8
  %156 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5, i32 0, i32 0, i64 3, i64 2
  %157 = bitcast double* %156 to <2 x double>*
  store <2 x double> %144, <2 x double>* %157, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10XRViewData29UpdateProjectionMatrixFromFoVEffffff(%"class.blink::XRViewData"* nocapture, float, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %8 = tail call float @tanf(float %1) #7
  %9 = tail call float @tanf(float %2) #7
  %10 = tail call float @tanf(float %3) #7
  %11 = tail call float @tanf(float %4) #7
  %12 = insertelement <2 x float> undef, float %10, i32 0
  %13 = insertelement <2 x float> %12, float %8, i32 1
  %14 = insertelement <2 x float> undef, float %11, i32 0
  %15 = insertelement <2 x float> %14, float %9, i32 1
  %16 = fadd <2 x float> %13, %15
  %17 = fdiv <2 x float> <float 2.000000e+00, float 2.000000e+00>, %16
  %18 = fsub float %5, %6
  %19 = fdiv float 1.000000e+00, %18
  %20 = extractelement <2 x float> %17, i32 0
  %21 = fpext float %20 to double
  %22 = extractelement <2 x float> %17, i32 1
  %23 = fpext float %22 to double
  %24 = fsub <2 x float> %13, %15
  %25 = fmul <2 x float> %24, %17
  %26 = fpext <2 x float> %25 to <2 x double>
  %27 = fmul <2 x double> %26, <double -5.000000e-01, double 5.000000e-01>
  %28 = fadd float %5, %6
  %29 = fmul float %28, %19
  %30 = fpext float %29 to double
  %31 = fmul float %6, 2.000000e+00
  %32 = fmul float %31, %5
  %33 = fmul float %32, %19
  %34 = fpext float %33 to double
  %35 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 0, i64 0
  store double %21, double* %35, align 8
  %36 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 0, i64 1
  %37 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 1, i64 1
  %38 = bitcast double* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false)
  store double %23, double* %37, align 8
  %39 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 1, i64 2
  %40 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 2, i64 0
  %41 = bitcast double* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false)
  %42 = bitcast double* %40 to <2 x double>*
  store <2 x double> %27, <2 x double>* %42, align 8
  %43 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 2, i64 2
  store double %30, double* %43, align 8
  %44 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 2, i64 3
  store double -1.000000e+00, double* %44, align 8
  %45 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 3, i64 0
  %46 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 3, i64 2
  %47 = bitcast double* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false)
  store double %34, double* %46, align 8
  %48 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 3, i64 3
  store double 0.000000e+00, double* %48, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10XRViewData23SetHeadFromEyeTransformERKNS_20TransformationMatrixE(%"class.blink::XRViewData"* nocapture, %"class.blink::TransformationMatrix"* nocapture readonly dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5
  %4 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  %5 = bitcast %"class.blink::TransformationMatrix"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 128, i1 false) #7
  ret void
}

; Function Attrs: nofree nounwind
declare float @tanf(float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10XRViewData32UpdateProjectionMatrixFromAspectEffff(%"class.blink::XRViewData"* nocapture, float, float, float, float) local_unnamed_addr #0 align 2 {
  %6 = fmul float %1, 5.000000e-01
  %7 = tail call float @tanf(float %6) #7
  %8 = fdiv float 1.000000e+00, %7
  %9 = fsub float %3, %4
  %10 = fdiv float 1.000000e+00, %9
  %11 = fdiv float %8, %2
  %12 = fpext float %11 to double
  %13 = fpext float %8 to double
  %14 = fadd float %3, %4
  %15 = fmul float %14, %10
  %16 = fpext float %15 to double
  %17 = fmul float %4, 2.000000e+00
  %18 = fmul float %17, %3
  %19 = fmul float %18, %10
  %20 = fpext float %19 to double
  %21 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 0, i64 0
  store double %12, double* %21, align 8
  %22 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 0, i64 1
  %23 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 1, i64 1
  %24 = bitcast double* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false)
  store double %13, double* %23, align 8
  %25 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 1, i64 2
  %26 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 2, i64 2
  %27 = bitcast double* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false)
  store double %16, double* %26, align 8
  %28 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 2, i64 3
  store double -1.000000e+00, double* %28, align 8
  %29 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 3, i64 0
  %30 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 3, i64 2
  %31 = bitcast double* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false)
  store double %20, double* %30, align 8
  %32 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 3, i32 0, i32 0, i64 3, i64 3
  store double 0.000000e+00, double* %32, align 8
  %33 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 6
  store i8 1, i8* %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10XRViewData16UnprojectPointerEdddd(%"class.blink::TransformationMatrix"* noalias sret, %"class.blink::XRViewData"*, double, double, double, double) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::TransformationMatrix", align 8
  %8 = alloca %"class.blink::FloatPoint3D", align 4
  %9 = alloca %"class.blink::FloatPoint3D", align 4
  %10 = alloca %"class.blink::FloatPoint3D", align 4
  %11 = alloca %"class.blink::FloatPoint3D", align 4
  %12 = alloca %"class.blink::FloatPoint3D", align 4
  %13 = alloca %"class.blink::TransformationMatrix", align 16
  %14 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %1, i64 0, i32 6
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %6
  %18 = bitcast %"class.blink::TransformationMatrix"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %1, i64 0, i32 3
  call void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* nonnull sret %7, %"class.blink::TransformationMatrix"* %19) #7
  %20 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %1, i64 0, i32 4
  %21 = bitcast %"class.blink::TransformationMatrix"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %18, i64 128, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %18) #7
  store i8 0, i8* %14, align 8
  br label %22

22:                                               ; preds = %6, %17
  %23 = bitcast %"class.blink::FloatPoint3D"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %8, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %8, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %8, i64 0, i32 2
  %27 = fdiv double %2, %4
  %28 = fmul double %27, 2.000000e+00
  %29 = fadd double %28, -1.000000e+00
  %30 = fptrunc double %29 to float
  %31 = fsub double %5, %3
  %32 = fdiv double %31, %5
  %33 = fmul double %32, 2.000000e+00
  %34 = fadd double %33, -1.000000e+00
  %35 = fptrunc double %34 to float
  store float %30, float* %24, align 4
  store float %35, float* %25, align 4
  store float -1.000000e+00, float* %26, align 4
  %36 = bitcast %"class.blink::FloatPoint3D"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %36) #7
  %37 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %9, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %37, align 4
  %38 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %9, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %38, align 4
  %39 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %9, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %39, align 4
  %40 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %1, i64 0, i32 4
  call void @_ZNK5blink20TransformationMatrix8MapPointERKNS_12FloatPoint3DE(%"class.blink::FloatPoint3D"* nonnull sret %9, %"class.blink::TransformationMatrix"* %40, %"class.blink::FloatPoint3D"* nonnull dereferenceable(12) %8) #7
  %41 = bitcast %"class.blink::FloatPoint3D"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %41) #7
  %42 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %10, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %10, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %10, i64 0, i32 2
  %45 = load float, float* %37, align 4, !noalias !3
  %46 = fsub float 0.000000e+00, %45
  %47 = load float, float* %38, align 4, !noalias !3
  %48 = fsub float 0.000000e+00, %47
  %49 = load float, float* %39, align 4, !noalias !3
  %50 = fsub float 0.000000e+00, %49
  store float %46, float* %42, align 4, !alias.scope !3
  store float %48, float* %43, align 4, !alias.scope !3
  store float %50, float* %44, align 4, !alias.scope !3
  call void @_ZN5blink12FloatPoint3D9NormalizeEv(%"class.blink::FloatPoint3D"* nonnull %10) #7
  %51 = bitcast %"class.blink::FloatPoint3D"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %51) #7
  %52 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %11, i64 0, i32 0
  %53 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %11, i64 0, i32 1
  %54 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %11, i64 0, i32 2
  %55 = load float, float* %44, align 4, !noalias !6
  %56 = load float, float* %43, align 4, !noalias !6
  %57 = fmul float %56, 0.000000e+00
  %58 = fsub float %55, %57
  %59 = load float, float* %42, align 4, !noalias !6
  %60 = fmul float %59, 0.000000e+00
  %61 = fmul float %55, 0.000000e+00
  %62 = fsub float %60, %61
  %63 = fsub float %57, %59
  store float %58, float* %52, align 4, !alias.scope !6
  store float %62, float* %53, align 4, !alias.scope !6
  store float %63, float* %54, align 4, !alias.scope !6
  call void @_ZN5blink12FloatPoint3D9NormalizeEv(%"class.blink::FloatPoint3D"* nonnull %11) #7
  %64 = bitcast %"class.blink::FloatPoint3D"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %64) #7
  %65 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %12, i64 0, i32 0
  %66 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %12, i64 0, i32 1
  %67 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %12, i64 0, i32 2
  %68 = load float, float* %43, align 4, !noalias !9
  %69 = load float, float* %54, align 4, !noalias !9
  %70 = fmul float %68, %69
  %71 = load float, float* %44, align 4, !noalias !9
  %72 = load float, float* %53, align 4, !noalias !9
  %73 = fmul float %71, %72
  %74 = fsub float %70, %73
  %75 = load float, float* %52, align 4, !noalias !9
  %76 = fmul float %71, %75
  %77 = load float, float* %42, align 4, !noalias !9
  %78 = fmul float %69, %77
  %79 = fsub float %76, %78
  %80 = fmul float %72, %77
  %81 = fmul float %68, %75
  %82 = fsub float %80, %81
  store float %74, float* %65, align 4, !alias.scope !9
  store float %79, float* %66, align 4, !alias.scope !9
  store float %82, float* %67, align 4, !alias.scope !9
  call void @_ZN5blink12FloatPoint3D9NormalizeEv(%"class.blink::FloatPoint3D"* nonnull %12) #7
  %83 = bitcast %"class.blink::TransformationMatrix"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %83) #7
  %84 = load float, float* %52, align 4
  %85 = load float, float* %65, align 4
  %86 = insertelement <2 x float> undef, float %84, i32 0
  %87 = insertelement <2 x float> %86, float %85, i32 1
  %88 = fpext <2 x float> %87 to <2 x double>
  %89 = load float, float* %42, align 4
  %90 = fpext float %89 to double
  %91 = load float, float* %53, align 4
  %92 = load float, float* %66, align 4
  %93 = insertelement <2 x float> undef, float %91, i32 0
  %94 = insertelement <2 x float> %93, float %92, i32 1
  %95 = fpext <2 x float> %94 to <2 x double>
  %96 = load float, float* %43, align 4
  %97 = fpext float %96 to double
  %98 = load float, float* %54, align 4
  %99 = load float, float* %67, align 4
  %100 = insertelement <2 x float> undef, float %98, i32 0
  %101 = insertelement <2 x float> %100, float %99, i32 1
  %102 = fpext <2 x float> %101 to <2 x double>
  %103 = load float, float* %44, align 4
  %104 = fpext float %103 to double
  %105 = bitcast %"class.blink::TransformationMatrix"* %13 to <2 x double>*
  store <2 x double> %88, <2 x double>* %105, align 16
  %106 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %13, i64 0, i32 0, i32 0, i64 0, i64 2
  store double %90, double* %106, align 16
  %107 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %13, i64 0, i32 0, i32 0, i64 0, i64 3
  store double 0.000000e+00, double* %107, align 8
  %108 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %13, i64 0, i32 0, i32 0, i64 1, i64 0
  %109 = bitcast double* %108 to <2 x double>*
  store <2 x double> %95, <2 x double>* %109, align 16
  %110 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %13, i64 0, i32 0, i32 0, i64 1, i64 2
  store double %97, double* %110, align 16
  %111 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %13, i64 0, i32 0, i32 0, i64 1, i64 3
  store double 0.000000e+00, double* %111, align 8
  %112 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %13, i64 0, i32 0, i32 0, i64 2, i64 0
  %113 = bitcast double* %112 to <2 x double>*
  store <2 x double> %102, <2 x double>* %113, align 16
  %114 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %13, i64 0, i32 0, i32 0, i64 2, i64 2
  store double %104, double* %114, align 16
  %115 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %13, i64 0, i32 0, i32 0, i64 2, i64 3
  %116 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %13, i64 0, i32 0, i32 0, i64 3, i64 3
  %117 = bitcast double* %115 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 32, i1 false)
  store double 1.000000e+00, double* %116, align 8
  %118 = load float, float* %37, align 4
  %119 = fsub float -0.000000e+00, %118
  %120 = fpext float %119 to double
  %121 = load float, float* %38, align 4
  %122 = fsub float -0.000000e+00, %121
  %123 = fpext float %122 to double
  %124 = load float, float* %39, align 4
  %125 = fsub float -0.000000e+00, %124
  %126 = fpext float %125 to double
  %127 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix11Translate3dEddd(%"class.blink::TransformationMatrix"* nonnull %13, double %120, double %123, double %126) #7
  call void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* sret %0, %"class.blink::TransformationMatrix"* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %83) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %64) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %51) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %41) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %36) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #7
  ret void
}

declare void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* sret, %"class.blink::TransformationMatrix"*) local_unnamed_addr #2

declare void @_ZNK5blink20TransformationMatrix8MapPointERKNS_12FloatPoint3DE(%"class.blink::FloatPoint3D"* sret, %"class.blink::TransformationMatrix"*, %"class.blink::FloatPoint3D"* dereferenceable(12)) local_unnamed_addr #2

declare void @_ZN5blink12FloatPoint3D9NormalizeEv(%"class.blink::FloatPoint3D"*) local_unnamed_addr #2

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix11Translate3dEddd(%"class.blink::TransformationMatrix"*, double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10XRViewData16UpdatePoseMatrixERKNS_20TransformationMatrixE(%"class.blink::XRViewData"*, %"class.blink::TransformationMatrix"* nocapture readonly dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  %5 = bitcast %"class.blink::TransformationMatrix"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 128, i1 false) #7
  %6 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 5
  %7 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* %3, %"class.blink::TransformationMatrix"* dereferenceable(128) %6) #7
  ret void
}

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::XRRigidTransform"* @_ZNK5blink6XRView9transformEv(%"class.blink::XRView"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::XRRigidTransform"*, %"class.blink::XRRigidTransform"** %2, align 8
  ret %"class.blink::XRRigidTransform"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8, double } @_ZNK5blink6XRView24recommendedViewportScaleEv(%"class.blink::XRView"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::XRViewData"*, %"class.blink::XRViewData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %3, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %3, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load double, double* %6, align 8
  %8 = insertvalue { i8, double } undef, i8 %5, 0
  %9 = insertvalue { i8, double } %8, double %7, 1
  ret { i8, double } %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8, double } @_ZNK5blink10XRViewData24recommendedViewportScaleEv(%"class.blink::XRViewData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %5 = load double, double* %4, align 8
  %6 = insertvalue { i8, double } undef, i8 %3, 0
  %7 = insertvalue { i8, double } %6, double %5, 1
  ret { i8, double } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6XRView20requestViewportScaleEN4absl8optionalIdEE(%"class.blink::XRView"* nocapture readonly, i8, double) local_unnamed_addr #0 align 2 {
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::XRViewData"*, %"class.blink::XRViewData"** %6, align 8
  %8 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  store double %2, double* %4, align 8
  %9 = icmp eq i8 %1, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  store double 1.000000e+00, double* %5, align 8
  %12 = fcmp olt double %2, 5.000000e-02
  %13 = select i1 %12, double* @_ZN5blink12_GLOBAL__N_117kMinViewportScaleE, double* %4
  %14 = load double, double* %13, align 8
  %15 = fcmp ogt double %14, 1.000000e+00
  %16 = select i1 %15, double* %5, double* %13
  %17 = bitcast double* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %7, i64 0, i32 9
  %20 = bitcast double* %19 to i64*
  store i64 %18, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  br label %21

21:                                               ; preds = %3, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10XRViewData20requestViewportScaleEN4absl8optionalIdEE(%"class.blink::XRViewData"* nocapture, i8, double) local_unnamed_addr #0 align 2 {
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  store double %2, double* %4, align 8
  %6 = icmp eq i8 %1, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  store double 1.000000e+00, double* %5, align 8
  %9 = fcmp olt double %2, 5.000000e-02
  %10 = select i1 %9, double* @_ZN5blink12_GLOBAL__N_117kMinViewportScaleE, double* %4
  %11 = load double, double* %10, align 8
  %12 = fcmp ogt double %11, 1.000000e+00
  %13 = select i1 %12, double* %5, double* %10
  %14 = bitcast double* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.blink::XRViewData", %"class.blink::XRViewData"* %0, i64 0, i32 9
  %17 = bitcast double* %16 to i64*
  store i64 %15, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  br label %18

18:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRCamera"* @_ZNK5blink6XRView6cameraEv(%"class.blink::XRView"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink9XRSession16IsFeatureEnabledEN6device5mojom16XRSessionFeatureE(%"class.blink::XRSession"* %5, i32 10) #7
  %7 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %2, align 8
  %8 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %7, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %9, i64 0, i32 10
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 3
  %13 = and i1 %6, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %9, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #7
  %20 = bitcast i8* %19 to %"class.blink::XRCamera"*
  %21 = load %"class.blink::XRFrame"*, %"class.blink::XRFrame"** %2, align 8
  tail call void @_ZN5blink8XRCameraC1EPNS_7XRFrameE(%"class.blink::XRCamera"* %20, %"class.blink::XRFrame"* %21) #7
  %22 = getelementptr inbounds i8, i8* %19, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  br label %26

26:                                               ; preds = %14, %1, %18
  %27 = phi %"class.blink::XRCamera"* [ %20, %18 ], [ null, %14 ], [ null, %1 ]
  ret %"class.blink::XRCamera"* %27
}

declare zeroext i1 @_ZNK5blink9XRSession16IsFeatureEnabledEN6device5mojom16XRSessionFeatureE(%"class.blink::XRSession"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink6XRView5TraceEPNS_7VisitorE(%"class.blink::XRView"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7XRFrameEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 6
  %15 = bitcast %"class.blink::Member.422"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 5
  %26 = bitcast %"class.blink::Member.420"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16XRRigidTransformEE5TraceEPNS_7VisitorEPKv) #7
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 4
  %37 = bitcast %"class.blink::Member.284"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10XRViewDataEE5TraceEPNS_7VisitorEPKv) #7
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %47, %"class.blink::Visitor"* %1) #7
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6XRViewD2Ev(%"class.blink::XRView"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6XRViewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #7
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6XRViewD0Ev(%"class.blink::XRView"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6XRViewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XRView", %"class.blink::XRView"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #7
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink6XRView18GetWrapperTypeInfoEv(%"class.blink::XRView"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink6XRView18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink16XRRigidTransformC1ERKNS_20TransformationMatrixE(%"class.blink::XRRigidTransform"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !12

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !12

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #7
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink8XRCameraC1EPNS_7XRFrameE(%"class.blink::XRCamera"*, %"class.blink::XRFrame"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7XRFrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XRFrame"*
  tail call void @_ZNK5blink7XRFrame5TraceEPNS_7VisitorE(%"class.blink::XRFrame"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink7XRFrame5TraceEPNS_7VisitorE(%"class.blink::XRFrame"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16XRRigidTransformEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XRRigidTransform"*
  %4 = bitcast i8* %1 to void (%"class.blink::XRRigidTransform"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::XRRigidTransform"*, %"class.blink::Visitor"*)**, void (%"class.blink::XRRigidTransform"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::XRRigidTransform"*, %"class.blink::Visitor"*)*, void (%"class.blink::XRRigidTransform"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::XRRigidTransform"*, %"class.blink::Visitor"*)*, void (%"class.blink::XRRigidTransform"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::XRRigidTransform"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10XRViewDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blinkmiERKNS_12FloatPoint3DES2_: argument 0"}
!5 = distinct !{!5, !"_ZN5blinkmiERKNS_12FloatPoint3DES2_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink12FloatPoint3D5CrossERKS0_: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink12FloatPoint3D5CrossERKS0_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink12FloatPoint3D5CrossERKS0_: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink12FloatPoint3D5CrossERKS0_"}
!12 = !{!"branch_weights", i32 1, i32 2000}
