; ModuleID = '../../third_party/skia/src/gpu/gl/GrGLRenderTarget.cpp'
source_filename = "../../third_party/skia/src/gpu/gl/GrGLRenderTarget.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLRenderTarget = type { %class.GrRenderTarget.base, %class.sk_sp.137, i32, i32, i32, i32, i8, i32, %class.GrSurface }
%class.GrRenderTarget.base = type <{ i32 (...)**, %class.sk_sp, %class.sk_sp, i32 }>
%class.sk_sp = type { %class.GrAttachment* }
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.sk_sp.137 = type { %class.GrGLAttachment* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.135 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.1, i8* }
%class.sk_sp.1 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.2, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.2 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.3, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.3 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %class.sk_sp.69, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.109", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.6", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.5 }
%class.sk_sp.5 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.16, %class.SkTArray.25, %class.SkTArray.27, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.9"*, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.27, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.28 }
%class.sk_sp.28 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.16 = type { %class.SkTHashTable.17 }
%class.SkTHashTable.17 = type { i32, i32, %class.SkAutoTArray.18 }
%class.SkAutoTArray.18 = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.351" }
%"struct.std::__1::pair.351" = type { i32, %class.SkTArray.352* }
%class.SkTArray.352 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.25 = type { %"class.std::__1::unique_ptr.26"*, i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.352, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.27 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.41 }
%class.SkFibBlockSizes.41 = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.69 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.81, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.97, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.73 }
%class.SkTHashTable.73 = type { i32, i32, %class.SkAutoTArray.74 }
%class.SkAutoTArray.74 = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.81 = type { %class.SkTHashTable.82 }
%class.SkTHashTable.82 = type { i32, i32, %class.SkAutoTArray.83 }
%class.SkAutoTArray.83 = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.90, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.90 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.91" }
%"struct.std::__1::atomic.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.96, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.96 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.2, %class.sk_sp.112, %class.sk_sp.112 }
%class.sk_sp.112 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.134 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.134 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.135 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.136, void (i8*)*, i8* }
%class.SkNVRefCnt.136 = type { %"struct.std::__1::atomic" }
%class.GrGLGpu = type <{ %class.GrGpu, %"class.std::__1::unique_ptr.138", %class.sk_sp.266, i32, i32, %class.sk_sp.275, i32, i32, i32, %struct.anon, %class.anon, %struct.GrNativeRect, %"class.GrGLGpu::HWVertexArrayState", i8, [3 x i8], [6 x %struct.anon.309], %struct.anon.310, i32, i32, i32, %class.GrStencilSettings, i32, i32, i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, [4 x i8], %class.SkAutoTArray.311, [4 x float], i32, [3 x %struct.anon.318], [4 x i8], %class.sk_sp.319, [4 x %struct.anon.320], %class.sk_sp.319, i8, [7 x i8], i64, %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.327", %class.GrFinishCallbacks, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %class.GrGLContext* }
%class.GrGLContext = type { %class.GrGLContextInfo }
%class.GrGLContextInfo = type { i32 (...)**, %class.sk_sp.141, %struct.GrGLDriverInfo, i32, %class.sk_sp.248 }
%class.sk_sp.141 = type { %struct.GrGLInterface* }
%struct.GrGLInterface = type { %class.SkRefCnt.base, %union.anon.142, %class.GrGLExtensions, %"struct.GrGLInterface::Functions" }
%union.anon.142 = type { i32 }
%class.GrGLExtensions = type { i8, %class.SkTArray.27 }
%"struct.GrGLInterface::Functions" = type { %class.GrGLFunction, %class.GrGLFunction.143, %class.GrGLFunction.143, %class.GrGLFunction.144, %class.GrGLFunction.143, %class.GrGLFunction.144, %class.GrGLFunction.145, %class.GrGLFunction.143, %class.GrGLFunction.143, %class.GrGLFunction.143, %class.GrGLFunction.143, %class.GrGLFunction, %class.GrGLFunction.146, %class.GrGLFunction.147, %class.GrGLFunction, %class.GrGLFunction.143, %class.GrGLFunction.148, %class.GrGLFunction.149, %class.GrGLFunction.150, %class.GrGLFunction.151, %class.GrGLFunction, %class.GrGLFunction.147, %class.GrGLFunction.152, %class.GrGLFunction.153, %class.GrGLFunction.154, %class.GrGLFunction.155, %class.GrGLFunction, %class.GrGLFunction.156, %class.GrGLFunction.157, %class.GrGLFunction.158, %class.GrGLFunction.159, %class.GrGLFunction.151, %class.GrGLFunction, %class.GrGLFunction.160, %class.GrGLFunction.160, %class.GrGLFunction.160, %class.GrGLFunction, %class.GrGLFunction.160, %class.GrGLFunction.160, %class.GrGLFunction.160, %class.GrGLFunction, %class.GrGLFunction.160, %class.GrGLFunction.160, %class.GrGLFunction.161, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.162, %class.GrGLFunction.163, %class.GrGLFunction.164, %class.GrGLFunction, %class.GrGLFunction.160, %class.GrGLFunction.165, %class.GrGLFunction.166, %class.GrGLFunction.167, %class.GrGLFunction.168, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.146, %class.GrGLFunction, %class.GrGLFunction.146, %class.GrGLFunction.169, %class.GrGLFunction.170, %class.GrGLFunction.171, %class.GrGLFunction.172, %class.GrGLFunction, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction.174, %class.GrGLFunction.159, %class.GrGLFunction.175, %class.GrGLFunction.176, %class.GrGLFunction.177, %class.GrGLFunction.178, %class.GrGLFunction.179, %class.GrGLFunction.174, %class.GrGLFunction.180, %class.GrGLFunction.174, %class.GrGLFunction.181, %class.GrGLFunction.182, %class.GrGLFunction.174, %class.GrGLFunction.174, %class.GrGLFunction.179, %class.GrGLFunction.174, %class.GrGLFunction.183, %class.GrGLFunction.184, %class.GrGLFunction.185, %class.GrGLFunction.186, %class.GrGLFunction.187, %class.GrGLFunction.188, %class.GrGLFunction, %class.GrGLFunction.169, %class.GrGLFunction.189, %class.GrGLFunction.190, %class.GrGLFunction.191, %class.GrGLFunction.158, %class.GrGLFunction.192, %class.GrGLFunction.193, %class.GrGLFunction, %class.GrGLFunction.194, %class.GrGLFunction.195, %class.GrGLFunction.196, %class.GrGLFunction.197, %class.GrGLFunction.197, %class.GrGLFunction.198, %class.GrGLFunction.199, %class.GrGLFunction.200, %class.GrGLFunction.201, %class.GrGLFunction.202, %class.GrGLFunction.203, %class.GrGLFunction.204, %class.GrGLFunction.205, %class.GrGLFunction.191, %class.GrGLFunction.191, %class.GrGLFunction.143, %class.GrGLFunction.146, %class.GrGLFunction.188, %class.GrGLFunction.143, %class.GrGLFunction, %class.GrGLFunction.206, %class.GrGLFunction.207, %class.GrGLFunction.208, %class.GrGLFunction.208, %class.GrGLFunction.208, %class.GrGLFunction.209, %class.GrGLFunction.146, %class.GrGLFunction.195, %class.GrGLFunction.210, %class.GrGLFunction.211, %class.GrGLFunction.143, %class.GrGLFunction.212, %class.GrGLFunction.213, %class.GrGLFunction.214, %class.GrGLFunction, %class.GrGLFunction.143, %class.GrGLFunction.215, %class.GrGLFunction.170, %class.GrGLFunction.192, %class.GrGLFunction.215, %class.GrGLFunction.216, %class.GrGLFunction.217, %class.GrGLFunction.218, %class.GrGLFunction.219, %class.GrGLFunction.195, %class.GrGLFunction.210, %class.GrGLFunction.217, %class.GrGLFunction.208, %class.GrGLFunction.146, %class.GrGLFunction.189, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.224, %class.GrGLFunction.225, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.226, %class.GrGLFunction.211, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.227, %class.GrGLFunction.228, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.229, %class.GrGLFunction.229, %class.GrGLFunction.229, %class.GrGLFunction.192, %class.GrGLFunction.230, %class.GrGLFunction.230, %class.GrGLFunction, %class.GrGLFunction.231, %class.GrGLFunction.232, %class.GrGLFunction.232, %class.GrGLFunction.232, %class.GrGLFunction.143, %class.GrGLFunction.233, %class.GrGLFunction.234, %class.GrGLFunction.211, %class.GrGLFunction, %class.GrGLFunction.235, %class.GrGLFunction.236, %class.GrGLFunction.237, %class.GrGLFunction.238, %class.GrGLFunction.239, %class.GrGLFunction.240, %class.GrGLFunction.241, %class.GrGLFunction.242, %class.GrGLFunction.243, %class.GrGLFunction.244, %class.GrGLFunction.245, %class.GrGLFunction.146, %class.GrGLFunction.245, %class.GrGLFunction.246, %class.GrGLFunction.247, %class.GrGLFunction }
%class.GrGLFunction.144 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.145 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.148 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.149 = type { void (i8*, i32, i64, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.150 = type { void (i8*, i32, i64, i64, i8*)*, [4 x i64] }
%class.GrGLFunction.147 = type { void (i8*, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.152 = type { void (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.153 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.154 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.155 = type { void (i8*, i8, i8, i8, i8)*, [4 x i64] }
%class.GrGLFunction.156 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.157 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.151 = type { i32 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.161 = type { void (i8*, i8)*, [4 x i64] }
%class.GrGLFunction.162 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.163 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.164 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.160 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.165 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.166 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.167 = type { void (i8*, i32, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.168 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.171 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.172 = type { void (i8*, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.173 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.159 = type { i32 (i8*)*, [4 x i64] }
%class.GrGLFunction.175 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.176 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.177 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.178 = type { void (i8*, i32, i32, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.180 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.181 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.182 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.179 = type { void (i8*, i32, i32, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.174 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.183 = type { void (i8*, i32, i32, i32*, i32*)*, [4 x i64] }
%class.GrGLFunction.184 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.185 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.186 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.187 = type { i32 (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.169 = type { void (i8*, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.190 = type { void (i8*, i32, i32, i32*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.158 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.193 = type { void (i8*, float)*, [4 x i64] }
%class.GrGLFunction.194 = type { void (i8*, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.196 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.197 = type { i8* (i8*, i32, i64, i64, i32)*, [4 x i64] }
%class.GrGLFunction.198 = type { i8* (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.199 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.200 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.201 = type { void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.202 = type { void (i8*, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.203 = type { void (i8*, i32, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.204 = type { void (i8*, i32, i32*, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.205 = type { void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.191 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.188 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.206 = type { void (i8*, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.207 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.209 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.212 = type { void (i8*, i32, i32, i8**, i32*)*, [4 x i64] }
%class.GrGLFunction.213 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.214 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.170 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.215 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.216 = type { void (i8*, i32, i32, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.218 = type { void (i8*, i32, i32, float)*, [4 x i64] }
%class.GrGLFunction.219 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.195 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.210 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.217 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.208 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.189 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.220 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.221 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.224 = type { void (i8*, i32, float, float)*, [4 x i64] }
%class.GrGLFunction.225 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.226 = type { void (i8*, i32, float, float, float)*, [4 x i64] }
%class.GrGLFunction.227 = type { void (i8*, i32, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.228 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.222 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.223 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.229 = type { void (i8*, i32, i32, i8, float*)*, [4 x i64] }
%class.GrGLFunction.192 = type { i8 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.230 = type { void (i8*, i8*)*, [4 x i64] }
%class.GrGLFunction.231 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.232 = type { void (i8*, i32, float*)*, [4 x i64] }
%class.GrGLFunction.143 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.233 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.234 = type { void (i8*, i32, i32, i32, i8, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.211 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.235 = type { %struct.__GLsync* (i8*, i32, i32)*, [4 x i64] }
%struct.__GLsync = type opaque
%class.GrGLFunction.236 = type { i8 (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.237 = type { i32 (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.238 = type { void (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.239 = type { void (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.240 = type { void (i8*, i32, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.241 = type { void (i8*, i32, i32, i32, i32, i32*, i8)*, [4 x i64] }
%class.GrGLFunction.242 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.243 = type { void (i8*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, [4 x i64] }
%class.GrGLFunction.244 = type { i32 (i8*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.146 = type { void (i8*)*, [4 x i64] }
%class.GrGLFunction.245 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.246 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.247 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction = type { void (i8*, i32)*, [4 x i64] }
%struct.GrGLDriverInfo = type <{ i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%class.sk_sp.248 = type { %class.GrGLCaps* }
%class.GrGLCaps = type <{ %class.GrCaps.base, i8, i32, [4 x i8], %class.SkTArray.249, i32, i32, i32, i32, i32, i32, i32, i40, i32, i32, [4 x i8], [24 x %"struct.GrGLCaps::FormatInfo"], [31 x i32], [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.3, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%class.SkTArray.249 = type { i32*, i64 }
%"struct.GrGLCaps::FormatInfo" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, %class.SkTDArray.250, %"class.std::__1::unique_ptr.251", i32, [4 x i8] }>
%class.SkTDArray.250 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.GrGLCaps::ColorTypeInfo"* }
%"struct.GrGLCaps::ColorTypeInfo" = type <{ i32, i32, %class.GrSwizzle, %class.GrSwizzle, [4 x i8], %"class.std::__1::unique_ptr.254", i32, [4 x i8] }>
%class.GrSwizzle = type { i16 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats"* }
%"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%class.sk_sp.266 = type { %"class.GrGLGpu::ProgramCache"* }
%"class.GrGLGpu::ProgramCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.267, %class.SkTInternalLList }
%class.SkTHashTable.267 = type { i32, i32, %class.SkAutoTArray.268 }
%class.SkAutoTArray.268 = type { %"class.std::__1::unique_ptr.269" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"*, %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"* }
%"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry" = type opaque
%class.sk_sp.275 = type { %class.GrGLProgram* }
%class.GrGLProgram = type <{ %class.SkRefCnt.base, %"struct.GrGLProgram::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, i32, [4 x i8], %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.282", %"class.std::__1::vector", %"class.std::__1::unique_ptr.298", i32, i32, i32, i32, %class.GrGLGpu*, %class.GrGLProgramDataManager, i32, [4 x i8] }>
%"struct.GrGLProgram::RenderTargetState" = type { %struct.SkISize, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type opaque
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.288"*, %"class.std::__1::unique_ptr.288"*, %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.27, %class.SkTArray.291 }
%class.SkTArray.291 = type { %"class.std::__1::unique_ptr.288"*, i64 }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.std::__1::unique_ptr.288"* }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.GrGLProgram::Attribute"* }
%"struct.GrGLProgram::Attribute" = type { i32, i32, i64, i32 }
%class.GrGLProgramDataManager = type { %class.GrGLSLProgramDataManager, %class.SkTArray.304, %class.GrGLGpu* }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.304 = type { %"struct.GrGLProgramDataManager::Uniform"*, i64 }
%"struct.GrGLProgramDataManager::Uniform" = type { i32 }
%struct.anon = type { i32, %struct.GrNativeRect }
%class.anon = type { i32, i32, i32, %class.GrWindowRectsState }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.305 }
%union.anon.305 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.GrNativeRect = type { i32, i32, i32, i32 }
%"class.GrGLGpu::HWVertexArrayState" = type { i32, i8, [3 x i8], %class.GrGLAttribArrayState, %class.GrGLVertexArray* }
%class.GrGLAttribArrayState = type <{ %class.SkSTArray.306, i32, i8, i8, [2 x i8] }>
%class.SkSTArray.306 = type { %class.SkAlignedSTStorage.307, %class.SkTArray.308 }
%class.SkAlignedSTStorage.307 = type { [640 x i8] }
%class.SkTArray.308 = type { %"struct.GrGLAttribArrayState::AttribArrayState"*, i64 }
%"struct.GrGLAttribArrayState::AttribArrayState" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, i32, i32, [4 x i8], i8*, i32, [4 x i8] }>
%class.GrGLVertexArray = type { i32, [4 x i8], %class.GrGLAttribArrayState, %"class.GrGpuResource::UniqueID", [4 x i8] }
%struct.anon.309 = type <{ i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.310 = type { i32, i32, i32, %struct.SkRGBA4f, i8, i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrStencilSettings = type { i32, %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face" }
%"struct.GrStencilSettings::Face" = type { %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.SkAutoTArray.311 = type { %"class.std::__1::unique_ptr.312" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.GrGLGpu::TextureUnitBindings"* }
%"class.GrGLGpu::TextureUnitBindings" = type { [3 x %"struct.GrGLGpu::TextureUnitBindings::TargetBinding"] }
%"struct.GrGLGpu::TextureUnitBindings::TargetBinding" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.318 = type { i32, i32, i32, i32 }
%struct.anon.320 = type { i32, i32, i32 }
%class.sk_sp.319 = type { %class.GrGLBuffer* }
%class.GrGLBuffer = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.GrGLGpu::SamplerObjectCache"* }
%"class.GrGLGpu::SamplerObjectCache" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %class.GrGLOpsRenderPass* }
%class.GrGLOpsRenderPass = type opaque
%class.GrFinishCallbacks = type { %class.GrGpu*, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.333" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { i64 }
%"struct.GrGLRenderTarget::IDs" = type { i32, i8, i32, i32, i32 }
%class.GrGLAttachment = type { %class.GrAttachment.base, i32, i32, [4 x i8] }
%class.GrAttachment.base = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8 }>
%class.GrRenderTarget = type <{ i32 (...)**, %class.sk_sp, %class.sk_sp, i32, [4 x i8], %class.GrSurface }>
%class.sk_sp.338 = type { %class.GrGLRenderTarget* }
%class.GrBackendRenderTarget = type { i8, i8, i32, i32, i32, i32, i32, %union.anon.339, %class.sk_sp.340 }
%union.anon.339 = type { %struct.GrGLFramebufferInfo, [136 x i8] }
%struct.GrGLFramebufferInfo = type { i32, i32 }
%class.sk_sp.340 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%class.GrBackendFormat = type { i32, i8, %union.anon.341, i32, [4 x i8] }
%union.anon.341 = type { %struct.anon.342 }
%struct.anon.342 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrGLTexture = type <{ %class.GrTexture.base, [4 x i8], %class.sk_sp.344, i32, i32, i8, i8, [6 x i8], %class.GrSurface }>
%class.GrTexture.base = type <{ i32 (...)**, i32, i32, i32 }>
%class.sk_sp.344 = type { %class.GrGLTextureParameters* }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.345, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.345 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.SkTraceMemoryDump = type { i32 (...)** }

$_ZNK14GrRenderTarget18alwaysClearStencilEv = comdat any

$_ZN14GrRenderTarget14asRenderTargetEv = comdat any

$_ZNK14GrRenderTarget14asRenderTargetEv = comdat any

$_ZNK9GrSurface15getResourceTypeEv = comdat any

$_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString = comdat any

$_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey = comdat any

$_ZN9GrSurface9asTextureEv = comdat any

$_ZNK9GrSurface9asTextureEv = comdat any

$_ZTv0_n112_N14GrRenderTarget14asRenderTargetEv = comdat any

$_ZTv0_n120_NK14GrRenderTarget14asRenderTargetEv = comdat any

$_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE = comdat any

$_ZNK16GrGLRenderTarget18alwaysClearStencilEv = comdat any

$_ZN16GrGLRenderTargetD1Ev = comdat any

$_ZN16GrGLRenderTargetD0Ev = comdat any

$_ZTv0_n40_N16GrGLRenderTargetD1Ev = comdat any

$_ZTv0_n40_N16GrGLRenderTargetD0Ev = comdat any

@_ZTV16GrGLRenderTarget = hidden unnamed_addr constant { [16 x i8*], [31 x i8*] } { [16 x i8*] [i8* inttoptr (i64 64 to i8*), i8* null, i8* null, i8* bitcast (i1 (%class.GrGLRenderTarget*)* @_ZNK16GrGLRenderTarget18alwaysClearStencilEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZN14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZNK14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (void (%class.GrBackendRenderTarget*, %class.GrGLRenderTarget*)* @_ZNK16GrGLRenderTarget22getBackendRenderTargetEv to i8*), i8* bitcast (i1 (%class.GrGLRenderTarget*, i1)* @_ZNK16GrGLRenderTarget27canAttemptStencilAttachmentEb to i8*), i8* bitcast (void (%class.GrGLRenderTarget*)* @_ZN16GrGLRenderTargetD1Ev to i8*), i8* bitcast (void (%class.GrGLRenderTarget*)* @_ZN16GrGLRenderTargetD0Ev to i8*), i8* bitcast (void (%class.GrGLRenderTarget*)* @_ZN16GrGLRenderTarget9onAbandonEv to i8*), i8* bitcast (void (%class.GrGLRenderTarget*)* @_ZN16GrGLRenderTarget9onReleaseEv to i8*), i8* bitcast (i1 (%class.GrGLRenderTarget*, %class.GrAttachment*, i1)* @_ZN16GrGLRenderTarget25completeStencilAttachmentEP12GrAttachmentb to i8*), i8* bitcast (void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)* @_ZNK16GrGLRenderTarget13backendFormatEv to i8*), i8* bitcast (void (%class.GrGLRenderTarget*, %class.SkTraceMemoryDump*)* @_ZNK16GrGLRenderTarget20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (i64 (%class.GrGLRenderTarget*)* @_ZNK16GrGLRenderTarget15onGpuMemorySizeEv to i8*)], [31 x i8*] [i8* null, i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* null, i8* null, i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* null, i8* null, i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* null, i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%class.GrGLRenderTarget*, %class.SkTraceMemoryDump*)* @_ZTv0_n24_NK16GrGLRenderTarget20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (i8* (%class.GrSurface*)* @_ZNK9GrSurface15getResourceTypeEv to i8*), i8* bitcast (void (%class.GrGLRenderTarget*)* @_ZTv0_n40_N16GrGLRenderTargetD1Ev to i8*), i8* bitcast (void (%class.GrGLRenderTarget*)* @_ZTv0_n40_N16GrGLRenderTargetD0Ev to i8*), i8* bitcast (void (%class.GrGLRenderTarget*)* @_ZTv0_n48_N16GrGLRenderTarget9onReleaseEv to i8*), i8* bitcast (void (%class.GrGLRenderTarget*)* @_ZTv0_n56_N16GrGLRenderTarget9onAbandonEv to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)* @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.GrScratchKey*)* @_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (i64 (%class.GrGLRenderTarget*)* @_ZTv0_n80_NK16GrGLRenderTarget15onGpuMemorySizeEv to i8*), i8* bitcast (void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)* @_ZTv0_n88_NK16GrGLRenderTarget13backendFormatEv to i8*), i8* bitcast (%class.GrTexture* (%class.GrSurface*)* @_ZN9GrSurface9asTextureEv to i8*), i8* bitcast (%class.GrTexture* (%class.GrSurface*)* @_ZNK9GrSurface9asTextureEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZTv0_n112_N14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZTv0_n120_NK14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (void (%class.GrSurface*, %class.sk_sp.135*)* @_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE to i8*)] }, align 8
@_ZTT16GrGLRenderTarget = hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [13 x i8*], [31 x i8*] }, { [13 x i8*], [31 x i8*] }* @_ZTC16GrGLRenderTarget0_14GrRenderTarget, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [13 x i8*], [31 x i8*] }, { [13 x i8*], [31 x i8*] }* @_ZTC16GrGLRenderTarget0_14GrRenderTarget, i32 0, inrange i32 1, i32 16) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i32 0, inrange i32 1, i32 16) to i8*)], align 8
@.str = private unnamed_addr constant [14 x i8] c"/renderbuffer\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"RenderTarget\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"gl_renderbuffer\00", align 1
@_ZTC16GrGLRenderTarget0_14GrRenderTarget = hidden unnamed_addr constant { [13 x i8*], [31 x i8*] } { [13 x i8*] [i8* inttoptr (i64 64 to i8*), i8* null, i8* null, i8* bitcast (i1 (%class.GrRenderTarget*)* @_ZNK14GrRenderTarget18alwaysClearStencilEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZN14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZNK14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZN14GrRenderTargetD1Ev to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZN14GrRenderTargetD0Ev to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZN14GrRenderTarget9onAbandonEv to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZN14GrRenderTarget9onReleaseEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [31 x i8*] [i8* null, i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* inttoptr (i64 -64 to i8*), i8* null, i8* null, i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*)* @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (i8* (%class.GrSurface*)* @_ZNK9GrSurface15getResourceTypeEv to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZTv0_n40_N14GrRenderTargetD1Ev to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZTv0_n40_N14GrRenderTargetD0Ev to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZTv0_n48_N14GrRenderTarget9onReleaseEv to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZTv0_n56_N14GrRenderTarget9onAbandonEv to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)* @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.GrScratchKey*)* @_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%class.GrTexture* (%class.GrSurface*)* @_ZN9GrSurface9asTextureEv to i8*), i8* bitcast (%class.GrTexture* (%class.GrSurface*)* @_ZNK9GrSurface9asTextureEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZTv0_n112_N14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZTv0_n120_NK14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (void (%class.GrSurface*, %class.sk_sp.135*)* @_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE to i8*)] }, align 8
@_ZTV9GrSurface = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV14GrGLAttachment = external unnamed_addr constant { [17 x i8*] }, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"Surface\00", align 1
@switch.table._ZTv0_n88_NK16GrGLRenderTarget13backendFormatEv = private unnamed_addr constant [27 x i32] [i32 0, i32 32856, i32 33321, i32 32828, i32 32832, i32 32837, i32 37793, i32 36194, i32 34842, i32 33325, i32 32849, i32 33323, i32 32857, i32 32854, i32 35907, i32 36196, i32 37492, i32 33776, i32 33777, i32 33322, i32 33324, i32 32859, i32 33327, i32 34846, i32 36168, i32 36169, i32 35056], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrGLRenderTargetC2EP7GrGLGpuRK7SkISize10GrGLFormatiRKNS_3IDsEP14GrGLAttachment(%class.GrGLRenderTarget*, i8**, %class.GrGLGpu*, %struct.SkISize* dereferenceable(8), i32, i32, %"struct.GrGLRenderTarget::IDs"* nocapture readonly dereferenceable(20), %class.GrGLAttachment*) unnamed_addr #0 align 2 {
  %9 = bitcast %class.GrGLRenderTarget* %0 to %class.GrRenderTarget*
  %10 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %2, i64 0, i32 0
  %11 = bitcast %class.GrGLAttachment* %7 to %class.GrAttachment*
  %12 = getelementptr inbounds i8*, i8** %1, i64 1
  tail call void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget* %9, i8** %12, %class.GrGpu* %10, %struct.SkISize* dereferenceable(8) %3, i32 %5, i1 zeroext false, %class.GrAttachment* %11) #11
  %13 = bitcast i8** %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %class.GrGLRenderTarget* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds i8*, i8** %1, i64 3
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %20 = inttoptr i64 %14 to i8*
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = bitcast i8* %25 to i64*
  store i64 %18, i64* %26, align 8
  %27 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 1, i32 0
  store %class.GrGLAttachment* null, %class.GrGLAttachment** %27, align 8
  %28 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %6, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 2
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %6, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 3
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %6, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 4
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %6, i64 0, i32 1
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 6
  store i8 %38, i8* %39, align 8
  %40 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 5
  store i32 %4, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %6, i64 0, i32 4
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 7
  store i32 %42, i32* %43, align 4
  %44 = or i32 %32, %29
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %8
  %47 = load i8*, i8** %19, align 8
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %24, i64 %50
  %52 = getelementptr inbounds i8, i8* %51, i64 160
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = or i32 %54, 2
  store i32 %55, i32* %53, align 4
  br label %56

56:                                               ; preds = %8, %46
  %57 = load i8*, i8** %19, align 8
  %58 = getelementptr i8, i8* %57, i64 -24
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %24, i64 %60
  %62 = bitcast i8* %61 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource* %62, i1 zeroext false) #11
  ret void
}

declare void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget*, i8**, %class.GrGpu*, %struct.SkISize* dereferenceable(8), i32, i1 zeroext, %class.GrAttachment*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16GrGLRenderTarget4initE10GrGLFormatRKNS_3IDsE(%class.GrGLRenderTarget* nocapture, i32, %"struct.GrGLRenderTarget::IDs"* nocapture readonly dereferenceable(20)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 2
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %2, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 3
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %2, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 4
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %2, i64 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 6
  store i8 %14, i8* %15, align 8
  %16 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 5
  store i32 %1, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %2, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 7
  store i32 %18, i32* %19, align 4
  ret void
}

declare void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrGLRenderTargetC1EP7GrGLGpuRK7SkISize10GrGLFormatiRKNS_3IDsEP14GrGLAttachment(%class.GrGLRenderTarget*, %class.GrGLGpu*, %struct.SkISize* dereferenceable(8), i32, i32, %"struct.GrGLRenderTarget::IDs"* nocapture readonly dereferenceable(20), %class.GrGLAttachment*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8
  %9 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 0
  %10 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %8, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* %10, %class.GrGpu* %9) #11
  %11 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 1
  %13 = bitcast %struct.SkISize* %2 to i64*
  %14 = bitcast %struct.SkISize* %12 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 3
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 4, i32 0
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %18, align 8
  %19 = bitcast %class.GrGLRenderTarget* %0 to %class.GrRenderTarget*
  %20 = bitcast %class.GrGLAttachment* %6 to %class.GrAttachment*
  tail call void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget* %19, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrGLRenderTarget, i64 0, i64 1), %class.GrGpu* %9, %struct.SkISize* dereferenceable(8) %2, i32 %4, i1 zeroext false, %class.GrAttachment* %20) #11
  %21 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 1, i64 16) to i32 (...)**), i32 (...)*** %11, align 8
  %22 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 1, i32 0
  store %class.GrGLAttachment* null, %class.GrGLAttachment** %22, align 8
  %23 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 3
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 4
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 1
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 6
  store i8 %33, i8* %34, align 8
  %35 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 5
  store i32 %3, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 4
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 7
  store i32 %37, i32* %38, align 4
  %39 = or i32 %27, %24
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %7
  %42 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = or i32 %43, 2
  store i32 %44, i32* %42, align 4
  br label %45

45:                                               ; preds = %7, %41
  %46 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 0
  tail call void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource* %46, i1 zeroext false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrGLRenderTargetC2EP7GrGLGpuRK7SkISize10GrGLFormatiRKNS_3IDsE(%class.GrGLRenderTarget*, i8**, %class.GrGLGpu*, %struct.SkISize* dereferenceable(8), i32, i32, %"struct.GrGLRenderTarget::IDs"* nocapture readonly dereferenceable(20)) unnamed_addr #0 align 2 {
  %8 = bitcast %class.GrGLRenderTarget* %0 to %class.GrRenderTarget*
  %9 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %2, i64 0, i32 0
  %10 = getelementptr inbounds i8*, i8** %1, i64 1
  tail call void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget* %8, i8** %10, %class.GrGpu* %9, %struct.SkISize* dereferenceable(8) %3, i32 %5, i1 zeroext false, %class.GrAttachment* null) #11
  %11 = bitcast i8** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %class.GrGLRenderTarget* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds i8*, i8** %1, i64 3
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = inttoptr i64 %12 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = bitcast i8* %22 to i64*
  store i64 %16, i64* %23, align 8
  %24 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 1, i32 0
  store %class.GrGLAttachment* null, %class.GrGLAttachment** %24, align 8
  %25 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %6, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %6, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 3
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %6, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 4
  store i32 %32, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %6, i64 0, i32 1
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 6
  store i8 %35, i8* %36, align 8
  %37 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 5
  store i32 %4, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %6, i64 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 7
  store i32 %39, i32* %40, align 4
  %41 = or i32 %29, %26
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %7
  %44 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr i8, i8* %45, i64 -24
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %21, i64 %48
  %50 = getelementptr inbounds i8, i8* %49, i64 160
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = or i32 %52, 2
  store i32 %53, i32* %51, align 4
  br label %54

54:                                               ; preds = %7, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrGLRenderTargetC1EP7GrGLGpuRK7SkISize10GrGLFormatiRKNS_3IDsE(%class.GrGLRenderTarget*, %class.GrGLGpu*, %struct.SkISize* dereferenceable(8), i32, i32, %"struct.GrGLRenderTarget::IDs"* nocapture readonly dereferenceable(20)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8
  %8 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 0
  %9 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %7, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* %9, %class.GrGpu* %8) #11
  %10 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 1
  %12 = bitcast %struct.SkISize* %2 to i64*
  %13 = bitcast %struct.SkISize* %11 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 2
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 3
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 4, i32 0
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %17, align 8
  %18 = bitcast %class.GrGLRenderTarget* %0 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget* %18, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrGLRenderTarget, i64 0, i64 1), %class.GrGpu* %8, %struct.SkISize* dereferenceable(8) %2, i32 %4, i1 zeroext false, %class.GrAttachment* null) #11
  %19 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 1, i64 16) to i32 (...)**), i32 (...)*** %10, align 8
  %20 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 1, i32 0
  store %class.GrGLAttachment* null, %class.GrGLAttachment** %20, align 8
  %21 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 3
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 4
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 1
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 6
  store i8 %31, i8* %32, align 8
  %33 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 5
  store i32 %3, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 4
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 7
  store i32 %35, i32* %36, align 4
  %37 = or i32 %25, %22
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %6
  %40 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = or i32 %41, 2
  store i32 %42, i32* %40, align 4
  br label %43

43:                                               ; preds = %6, %39
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_Z22stencil_bits_to_formati(i32) local_unnamed_addr #3 {
  %2 = icmp eq i32 %0, 16
  %3 = select i1 %2, i32 25, i32 0
  %4 = icmp eq i32 %0, 8
  %5 = select i1 %4, i32 26, i32 %3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrGLRenderTarget11MakeWrappedEP7GrGLGpuRK7SkISize10GrGLFormatiRKNS_3IDsEi(%class.sk_sp.338* noalias nocapture sret, %class.GrGLGpu*, %struct.SkISize* dereferenceable(8), i32, i32, %"struct.GrGLRenderTarget::IDs"* nocapture readonly dereferenceable(20), i32) local_unnamed_addr #0 align 2 {
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = bitcast %struct.SkISize* %2 to i64*
  br label %39

11:                                               ; preds = %7
  %12 = icmp eq i32 %6, 16
  %13 = select i1 %12, i32 25, i32 0
  %14 = icmp eq i32 %6, 8
  %15 = select i1 %14, i32 26, i32 %13
  %16 = tail call i8* @_Znwm(i64 200) #12
  %17 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 0
  %18 = bitcast %struct.SkISize* %2 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = bitcast i8* %16 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* nonnull %20, %class.GrGpu* %17) #11
  %21 = bitcast i8* %16 to i32 (...)***
  %22 = getelementptr inbounds i8, i8* %16, i64 152
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %16, i64 160
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %16, i64 164
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds i8, i8* %16, i64 168
  %28 = bitcast i8* %27 to %class.GrRefCntedCallback**
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %28, align 8
  %29 = getelementptr inbounds i8, i8* %16, i64 176
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds i8, i8* %16, i64 180
  %31 = bitcast i8* %30 to i32*
  store i32 %4, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %16, i64 184
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds i8, i8* %16, i64 185
  store i8 0, i8* %33, align 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV14GrGLAttachment, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %34 = getelementptr inbounds i8, i8* %16, i64 188
  %35 = bitcast i8* %34 to i32*
  store i32 %15, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %16, i64 192
  %37 = bitcast i8* %36 to i32*
  store i32 0, i32* %37, align 8
  tail call void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource* nonnull %20, i1 zeroext true) #11
  %38 = bitcast i8* %16 to %class.GrAttachment*
  br label %39

39:                                               ; preds = %9, %11
  %40 = phi i64* [ %10, %9 ], [ %18, %11 ]
  %41 = phi %class.GrAttachment* [ null, %9 ], [ %38, %11 ]
  %42 = tail call i8* @_Znwm(i64 240) #12
  %43 = getelementptr inbounds i8, i8* %42, i64 64
  %44 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 0
  %45 = bitcast i8* %43 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* %45, %class.GrGpu* %44) #11
  %46 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %42, i64 216
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %40, align 4
  store i64 %49, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* %42, i64 224
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %42, i64 228
  store i8 0, i8* %52, align 4
  %53 = getelementptr inbounds i8, i8* %42, i64 232
  %54 = bitcast i8* %53 to %class.GrRefCntedCallback**
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %54, align 8
  %55 = bitcast i8* %42 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget* nonnull %55, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrGLRenderTarget, i64 0, i64 1), %class.GrGpu* %44, %struct.SkISize* dereferenceable(8) %2, i32 %4, i1 zeroext false, %class.GrAttachment* %41) #11
  %56 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %56, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 1, i64 16) to i32 (...)**), i32 (...)*** %46, align 8
  %57 = getelementptr inbounds i8, i8* %42, i64 32
  %58 = bitcast i8* %57 to %class.GrGLAttachment**
  store %class.GrGLAttachment* null, %class.GrGLAttachment** %58, align 8
  %59 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds i8, i8* %42, i64 40
  %62 = bitcast i8* %61 to i32*
  store i32 %60, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds i8, i8* %42, i64 44
  %66 = bitcast i8* %65 to i32*
  store i32 %64, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds i8, i8* %42, i64 48
  %70 = bitcast i8* %69 to i32*
  store i32 %68, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 1
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = getelementptr inbounds i8, i8* %42, i64 56
  store i8 %72, i8* %73, align 8
  %74 = getelementptr inbounds i8, i8* %42, i64 52
  %75 = bitcast i8* %74 to i32*
  store i32 %3, i32* %75, align 4
  %76 = getelementptr inbounds %"struct.GrGLRenderTarget::IDs", %"struct.GrGLRenderTarget::IDs"* %5, i64 0, i32 4
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds i8, i8* %42, i64 60
  %79 = bitcast i8* %78 to i32*
  store i32 %77, i32* %79, align 4
  %80 = or i32 %64, %60
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %39
  %83 = load i32, i32* %51, align 4
  %84 = or i32 %83, 2
  store i32 %84, i32* %51, align 4
  br label %85

85:                                               ; preds = %39, %82
  tail call void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource* %45, i1 zeroext false) #11
  %86 = bitcast %class.sk_sp.338* %0 to i8**
  store i8* %42, i8** %86, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16GrGLRenderTarget22getBackendRenderTargetEv(%class.GrBackendRenderTarget* noalias sret, %class.GrGLRenderTarget* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %struct.GrGLFramebufferInfo, align 4
  %4 = alloca %class.GrBackendFormat, align 8
  %5 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 1
  %8 = bitcast %struct.GrGLFramebufferInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds %struct.GrGLFramebufferInfo, %struct.GrGLFramebufferInfo* %3, i64 0, i32 0
  %10 = getelementptr inbounds %struct.GrGLFramebufferInfo, %struct.GrGLFramebufferInfo* %3, i64 0, i32 1
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %1, i64 0, i32 2
  %12 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %1, i64 0, i32 3
  %13 = select i1 %7, i32* %11, i32* %12
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %9, align 4
  %15 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %1, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %16, 27
  br i1 %17, label %19, label %18

18:                                               ; preds = %2
  tail call void @llvm.trap() #11
  unreachable

19:                                               ; preds = %2
  %20 = sext i32 %16 to i64
  %21 = getelementptr inbounds [27 x i32], [27 x i32]* @switch.table._ZTv0_n88_NK16GrGLRenderTarget13backendFormatEv, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %10, align 4
  %23 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %1, i64 0, i32 0, i32 2, i32 0
  %24 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %1, i64 0, i32 0, i32 1, i32 0
  %25 = select i1 %7, %class.GrAttachment** %23, %class.GrAttachment** %24
  %26 = load %class.GrAttachment*, %class.GrAttachment** %25, align 8
  %27 = icmp eq %class.GrAttachment* %26, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %19
  %29 = bitcast %class.GrBackendFormat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #11
  %30 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %26, i64 0, i32 0
  %31 = bitcast %class.GrAttachment* %26 to void (%class.GrBackendFormat*, %class.GrSurface*)***
  %32 = load void (%class.GrBackendFormat*, %class.GrSurface*)**, void (%class.GrBackendFormat*, %class.GrSurface*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %32, i64 9
  %34 = load void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %33, align 8
  call void %34(%class.GrBackendFormat* nonnull sret %4, %class.GrSurface* %30) #11
  %35 = call i32 @_Z26GrBackendFormatStencilBitsRK15GrBackendFormat(%class.GrBackendFormat* nonnull dereferenceable(72) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #11
  %36 = load i32, i32* %5, align 8
  br label %37

37:                                               ; preds = %19, %28
  %38 = phi i32 [ %36, %28 ], [ %6, %19 ]
  %39 = phi i32 [ %35, %28 ], [ 0, %19 ]
  %40 = bitcast %class.GrGLRenderTarget* %1 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr i8, i8* %41, i64 -24
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %class.GrGLRenderTarget* %1 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = getelementptr inbounds i8, i8* %46, i64 152
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds i8, i8* %46, i64 156
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  call void @_ZN21GrBackendRenderTargetC1EiiiiRK19GrGLFramebufferInfo(%class.GrBackendRenderTarget* %0, i32 %49, i32 %52, i32 %38, i32 %39, %struct.GrGLFramebufferInfo* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret void
}

declare i32 @_Z26GrBackendFormatStencilBitsRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN21GrBackendRenderTargetC1EiiiiRK19GrGLFramebufferInfo(%class.GrBackendRenderTarget*, i32, i32, i32, i32, %struct.GrGLFramebufferInfo* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16GrGLRenderTarget13backendFormatEv(%class.GrBackendFormat* noalias sret, %class.GrGLRenderTarget* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %1, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 27
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @llvm.trap() #11
  unreachable

7:                                                ; preds = %2
  %8 = sext i32 %4 to i64
  %9 = getelementptr inbounds [27 x i32], [27 x i32]* @switch.table._ZTv0_n88_NK16GrGLRenderTarget13backendFormatEv, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  tail call void @_ZN15GrBackendFormatC1Ejj(%class.GrBackendFormat* %0, i32 %10, i32 3553) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n88_NK16GrGLRenderTarget13backendFormatEv(%class.GrBackendFormat* noalias sret, %class.GrGLRenderTarget* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrGLRenderTarget* %1 to i8*
  %4 = bitcast %class.GrGLRenderTarget* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 -88
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 %8
  %10 = getelementptr inbounds i8, i8* %9, i64 52
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4, !noalias !3
  %13 = icmp ult i32 %12, 27
  br i1 %13, label %15, label %14

14:                                               ; preds = %2
  tail call void @llvm.trap() #11
  unreachable

15:                                               ; preds = %2
  %16 = sext i32 %12 to i64
  %17 = getelementptr inbounds [27 x i32], [27 x i32]* @switch.table._ZTv0_n88_NK16GrGLRenderTarget13backendFormatEv, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  tail call void @_ZN15GrBackendFormatC1Ejj(%class.GrBackendFormat* %0, i32 %18, i32 3553) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK16GrGLRenderTarget15onGpuMemorySizeEv(%class.GrGLRenderTarget*) unnamed_addr #0 align 2 {
  %2 = alloca %class.GrBackendFormat, align 8
  %3 = bitcast %class.GrBackendFormat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3) #11
  %4 = bitcast %class.GrGLRenderTarget* %0 to void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)***
  %5 = load void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)**, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)** %5, i64 10
  %7 = load void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)** %6, align 8
  call void %7(%class.GrBackendFormat* nonnull sret %2, %class.GrGLRenderTarget* %0) #11
  %8 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr i8, i8* %9, i64 -24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %12
  %15 = getelementptr inbounds i8, i8* %14, i64 152
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = call i64 @_ZN9GrSurface11ComputeSizeERK15GrBackendFormat7SkISizei11GrMipmappedb(%class.GrBackendFormat* nonnull dereferenceable(72) %2, i64 %17, i32 %19, i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3) #11
  ret i64 %20
}

declare i64 @_ZN9GrSurface11ComputeSizeERK15GrBackendFormat7SkISizei11GrMipmappedb(%class.GrBackendFormat* dereferenceable(72), i64, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZTv0_n80_NK16GrGLRenderTarget15onGpuMemorySizeEv(%class.GrGLRenderTarget*) unnamed_addr #0 align 2 {
  %2 = alloca %class.GrBackendFormat, align 8
  %3 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %4 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 -80
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 %8
  %10 = bitcast i8* %9 to %class.GrGLRenderTarget*
  %11 = bitcast %class.GrBackendFormat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #11
  %12 = bitcast i8* %9 to void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)***
  %13 = load void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)**, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)** %13, i64 10
  %15 = load void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)** %14, align 8
  call void %15(%class.GrBackendFormat* nonnull sret %2, %class.GrGLRenderTarget* %10) #11
  %16 = bitcast i8* %9 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %9, i64 %20
  %22 = getelementptr inbounds i8, i8* %21, i64 152
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %9, i64 60
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = call i64 @_ZN9GrSurface11ComputeSizeERK15GrBackendFormat7SkISizei11GrMipmappedb(%class.GrBackendFormat* nonnull dereferenceable(72) %2, i64 %24, i32 %27, i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #11
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16GrGLRenderTarget25completeStencilAttachmentEP12GrAttachmentb(%class.GrGLRenderTarget*, %class.GrAttachment* readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr i8, i8* %5, i64 -24
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %8
  %11 = getelementptr inbounds i8, i8* %10, i64 128
  %12 = bitcast i8* %11 to %class.GrGLGpu**
  %13 = load %class.GrGLGpu*, %class.GrGLGpu** %12, align 8
  %14 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.GrGLContext*, %class.GrGLContext** %14, align 8
  %16 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %15, i64 0, i32 0, i32 1, i32 0
  %17 = load %struct.GrGLInterface*, %struct.GrGLInterface** %16, align 8
  %18 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = icmp ne i32 %19, 1
  %21 = xor i1 %2, true
  %22 = or i1 %20, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = tail call zeroext i1 @_ZN16GrGLRenderTarget27ensureDynamicMSAAAttachmentEv(%class.GrGLRenderTarget* %0)
  br i1 %24, label %25, label %53

25:                                               ; preds = %3, %23
  %26 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 2
  %27 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 3
  %28 = select i1 %2, i32* %26, i32* %27
  %29 = load i32, i32* %28, align 4
  tail call void @_ZN7GrGLGpu15bindFramebufferEjj(%class.GrGLGpu* %13, i32 36160, i32 %29) #11
  %30 = icmp eq %class.GrAttachment* %1, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %17, i64 0, i32 3, i32 62, i32 0
  %33 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** %32, align 8
  %34 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %17, i64 0, i32 3, i32 62, i32 1, i64 0
  %35 = bitcast i64* %34 to i8*
  tail call void %33(i8* %35, i32 36160, i32 36128, i32 36161, i32 0) #11
  %36 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** %32, align 8
  tail call void %36(i8* %35, i32 36160, i32 36096, i32 36161, i32 0) #11
  br label %53

37:                                               ; preds = %25
  %38 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %1, i64 1
  %39 = bitcast %class.GrAttachment* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %17, i64 0, i32 3, i32 62, i32 0
  %42 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** %41, align 8
  %43 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %17, i64 0, i32 3, i32 62, i32 1, i64 0
  %44 = bitcast i64* %43 to i8*
  tail call void %42(i8* %44, i32 36160, i32 36128, i32 36161, i32 %40) #11
  %45 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %1, i64 0, i32 6, i64 2
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 4
  switch i32 %47, label %48 [
    i32 26, label %49
    i32 15, label %51
    i32 16, label %51
    i32 17, label %51
    i32 18, label %51
    i32 1, label %51
    i32 2, label %51
    i32 3, label %51
    i32 4, label %51
    i32 5, label %51
    i32 6, label %51
    i32 7, label %51
    i32 8, label %51
    i32 9, label %51
    i32 23, label %51
    i32 10, label %51
    i32 11, label %51
    i32 12, label %51
    i32 13, label %51
    i32 14, label %51
    i32 19, label %51
    i32 20, label %51
    i32 21, label %51
    i32 22, label %51
    i32 24, label %51
    i32 25, label %51
    i32 0, label %51
  ]

48:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

49:                                               ; preds = %37
  %50 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** %41, align 8
  tail call void %50(i8* %44, i32 36160, i32 36096, i32 36161, i32 %40) #11
  br label %53

51:                                               ; preds = %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37
  %52 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** %41, align 8
  tail call void %52(i8* %44, i32 36160, i32 36096, i32 36161, i32 0) #11
  br label %53

53:                                               ; preds = %31, %51, %49, %23
  %54 = phi i1 [ false, %23 ], [ true, %49 ], [ true, %51 ], [ true, %31 ]
  ret i1 %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrGLGpu* @_ZNK16GrGLRenderTarget8getGLGpuEv(%class.GrGLRenderTarget* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr i8, i8* %3, i64 -24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 %6
  %9 = getelementptr inbounds i8, i8* %8, i64 128
  %10 = bitcast i8* %9 to %class.GrGLGpu**
  %11 = load %class.GrGLGpu*, %class.GrGLGpu** %10, align 8
  ret %class.GrGLGpu* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16GrGLRenderTarget27ensureDynamicMSAAAttachmentEv(%class.GrGLRenderTarget*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GrBackendFormat, align 8
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.GrBackendFormat, align 8
  %5 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %184

8:                                                ; preds = %1
  %9 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = bitcast i8* %15 to %class.GrGpuResource*
  %17 = tail call %class.GrDirectContext* @_ZN13GrGpuResource10getContextEv(%class.GrGpuResource* %16) #11
  %18 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %17, i64 0, i32 6, i32 0, i32 0, i32 0
  %19 = load %class.GrResourceProvider*, %class.GrResourceProvider** %18, align 8
  %20 = load i8*, i8** %9, align 8
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i8, i8* %14, i64 %23
  %25 = getelementptr inbounds i8, i8* %24, i64 128
  %26 = bitcast i8* %25 to %class.GrGpu**
  %27 = load %class.GrGpu*, %class.GrGpu** %26, align 8
  %28 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %27, i64 0, i32 2, i32 0
  %29 = load %class.GrCaps*, %class.GrCaps** %28, align 8
  %30 = bitcast %class.GrBackendFormat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %30) #11
  %31 = getelementptr inbounds i8, i8* %20, i64 80
  %32 = bitcast i8* %31 to void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)**
  %33 = load void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)** %32, align 8
  call void %33(%class.GrBackendFormat* nonnull sret %2, %class.GrGLRenderTarget* %0) #11
  %34 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %29, i64 0, i32 13
  %35 = bitcast %class.GrCaps* %29 to i32 (%class.GrCaps*, %class.GrBackendFormat*)***
  %36 = load i32 (%class.GrCaps*, %class.GrBackendFormat*)**, i32 (%class.GrCaps*, %class.GrBackendFormat*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%class.GrCaps*, %class.GrBackendFormat*)*, i32 (%class.GrCaps*, %class.GrBackendFormat*)** %36, i64 6
  %38 = load i32 (%class.GrCaps*, %class.GrBackendFormat*)*, i32 (%class.GrCaps*, %class.GrBackendFormat*)** %37, align 8
  %39 = call i32 %38(%class.GrCaps* %29, %class.GrBackendFormat* nonnull dereferenceable(72) %2) #11
  %40 = load i32, i32* %34, align 4
  %41 = icmp slt i32 %39, %40
  %42 = select i1 %41, i32 %39, i32 %40
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %30) #11
  %43 = icmp slt i32 %42, 2
  br i1 %43, label %184, label %44

44:                                               ; preds = %8
  %45 = load i8*, i8** %9, align 8
  %46 = getelementptr i8, i8* %45, i64 -24
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %14, i64 %48
  %50 = getelementptr inbounds i8, i8* %49, i64 128
  %51 = bitcast i8* %50 to %class.GrGLGpu**
  %52 = load %class.GrGLGpu*, %class.GrGLGpu** %51, align 8
  %53 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %52, i64 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %class.GrGLContext*, %class.GrGLContext** %53, align 8
  %55 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %54, i64 0, i32 0, i32 1, i32 0
  %56 = load %struct.GrGLInterface*, %struct.GrGLInterface** %55, align 8
  %57 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %56, i64 0, i32 3, i32 68, i32 0
  %58 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %57, align 8
  %59 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %56, i64 0, i32 3, i32 68, i32 1, i64 0
  %60 = bitcast i64* %59 to i8*
  call void %58(i8* %60, i32 1, i32* %5) #11
  %61 = load i32, i32* %5, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %184, label %63

63:                                               ; preds = %44
  %64 = load i8*, i8** %9, align 8
  %65 = getelementptr i8, i8* %64, i64 -24
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds i8, i8* %14, i64 %67
  %69 = getelementptr inbounds i8, i8* %68, i64 128
  %70 = bitcast i8* %69 to %class.GrGLGpu**
  %71 = load %class.GrGLGpu*, %class.GrGLGpu** %70, align 8
  call void @_ZN7GrGLGpu15bindFramebufferEjj(%class.GrGLGpu* %71, i32 36160, i32 %61) #11
  %72 = getelementptr inbounds %class.GrResourceProvider, %class.GrResourceProvider* %19, i64 0, i32 2, i32 0
  %73 = load %class.GrCaps*, %class.GrCaps** %72, align 8
  %74 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %73, i64 0, i32 3
  %75 = bitcast i48* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 16384
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %113, label %79

79:                                               ; preds = %63
  %80 = load i8*, i8** %9, align 8
  %81 = getelementptr i8, i8* %80, i64 -24
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds i8, i8* %14, i64 %83
  %85 = bitcast i8* %84 to %class.GrSurface*
  %86 = bitcast i8* %84 to %class.GrTexture* (%class.GrSurface*)***
  %87 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %86, align 8
  %88 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %87, i64 10
  %89 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %88, align 8
  %90 = call %class.GrTexture* %89(%class.GrSurface* %85) #11
  %91 = icmp eq %class.GrTexture* %90, null
  br i1 %91, label %113, label %92

92:                                               ; preds = %79
  %93 = bitcast %class.GrTexture* %90 to %class.GrGLTexture*
  %94 = load i8*, i8** %9, align 8
  %95 = getelementptr i8, i8* %94, i64 -24
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds i8, i8* %14, i64 %97
  %99 = getelementptr inbounds i8, i8* %98, i64 128
  %100 = bitcast i8* %99 to %class.GrGLGpu**
  %101 = load %class.GrGLGpu*, %class.GrGLGpu** %100, align 8
  %102 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %101, i64 0, i32 1, i32 0, i32 0, i32 0
  %103 = load %class.GrGLContext*, %class.GrGLContext** %102, align 8
  %104 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %103, i64 0, i32 0, i32 1, i32 0
  %105 = load %struct.GrGLInterface*, %struct.GrGLInterface** %104, align 8
  %106 = call i32 @_ZNK11GrGLTexture6targetEv(%class.GrGLTexture* nonnull %93) #11
  %107 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %90, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %105, i64 0, i32 3, i32 64, i32 0
  %110 = load void (i8*, i32, i32, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32, i32, i32)** %109, align 8
  %111 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %105, i64 0, i32 3, i32 64, i32 1, i64 0
  %112 = bitcast i64* %111 to i8*
  call void %110(i8* %112, i32 36160, i32 36064, i32 %106, i32 %108, i32 0, i32 %42) #11
  br label %184

113:                                              ; preds = %63, %79
  %114 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 1
  %115 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #11
  %116 = load i8*, i8** %9, align 8
  %117 = getelementptr i8, i8* %116, i64 -24
  %118 = bitcast i8* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds i8, i8* %14, i64 %119
  %121 = getelementptr inbounds i8, i8* %120, i64 152
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %class.GrBackendFormat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %124) #11
  %125 = getelementptr inbounds i8, i8* %116, i64 80
  %126 = bitcast i8* %125 to void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)**
  %127 = load void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)** %126, align 8
  call void %127(%class.GrBackendFormat* nonnull sret %4, %class.GrGLRenderTarget* %0) #11
  %128 = load i8*, i8** %9, align 8
  %129 = getelementptr i8, i8* %128, i64 -24
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds i8, i8* %14, i64 %131
  %133 = getelementptr inbounds i8, i8* %132, i64 164
  %134 = load i8, i8* %133, align 4, !range !2
  %135 = icmp ne i8 %134, 0
  call void @_ZN18GrResourceProvider28getDiscardableMSAAAttachmentE7SkISizeRK15GrBackendFormati11GrProtected(%class.sk_sp* nonnull sret %3, %class.GrResourceProvider* %19, i64 %123, %class.GrBackendFormat* nonnull dereferenceable(72) %4, i32 %42, i1 zeroext %135) #11
  %136 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %137 = bitcast %class.sk_sp* %3 to i64*
  %138 = load i64, i64* %137, align 8
  store %class.GrAttachment* null, %class.GrAttachment** %136, align 8
  %139 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %114, i64 0, i32 0
  %140 = load %class.GrGLAttachment*, %class.GrGLAttachment** %139, align 8
  %141 = bitcast %class.sk_sp.137* %114 to i64*
  store i64 %138, i64* %141, align 8
  %142 = icmp eq %class.GrGLAttachment* %140, null
  br i1 %142, label %151, label %143

143:                                              ; preds = %113
  %144 = getelementptr inbounds %class.GrGLAttachment, %class.GrGLAttachment* %140, i64 0, i32 0, i32 0, i32 0, i32 1
  %145 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw add i32* %145, i32 -1 acq_rel
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %151

148:                                              ; preds = %143
  %149 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %144, i64 -1
  %150 = bitcast %class.GrIORef* %149 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %150, i32 0) #11
  br label %151

151:                                              ; preds = %113, %143, %148
  %152 = load %class.GrAttachment*, %class.GrAttachment** %136, align 8
  %153 = icmp eq %class.GrAttachment* %152, null
  br i1 %153, label %162, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %152, i64 0, i32 0, i32 0, i32 1
  %156 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = atomicrmw add i32* %156, i32 -1 acq_rel
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %162

159:                                              ; preds = %154
  %160 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %155, i64 -1
  %161 = bitcast %class.GrIORef* %160 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %161, i32 0) #11
  br label %162

162:                                              ; preds = %151, %154, %159
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %124) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #11
  %163 = load %class.GrGLAttachment*, %class.GrGLAttachment** %139, align 8
  %164 = icmp eq %class.GrGLAttachment* %163, null
  br i1 %164, label %184, label %165

165:                                              ; preds = %162
  %166 = load i8*, i8** %9, align 8
  %167 = getelementptr i8, i8* %166, i64 -24
  %168 = bitcast i8* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds i8, i8* %14, i64 %169
  %171 = getelementptr inbounds i8, i8* %170, i64 128
  %172 = bitcast i8* %171 to %class.GrGLGpu**
  %173 = load %class.GrGLGpu*, %class.GrGLGpu** %172, align 8
  %174 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %173, i64 0, i32 1, i32 0, i32 0, i32 0
  %175 = load %class.GrGLContext*, %class.GrGLContext** %174, align 8
  %176 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %175, i64 0, i32 0, i32 1, i32 0
  %177 = load %struct.GrGLInterface*, %struct.GrGLInterface** %176, align 8
  %178 = getelementptr inbounds %class.GrGLAttachment, %class.GrGLAttachment* %163, i64 0, i32 2
  %179 = load i32, i32* %178, align 8
  %180 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %177, i64 0, i32 3, i32 62, i32 0
  %181 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** %180, align 8
  %182 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %177, i64 0, i32 3, i32 62, i32 1, i64 0
  %183 = bitcast i64* %182 to i8*
  call void %181(i8* %183, i32 36160, i32 36064, i32 36161, i32 %179) #11
  br label %184

184:                                              ; preds = %162, %165, %8, %44, %92, %1
  %185 = phi i1 [ true, %1 ], [ true, %165 ], [ false, %8 ], [ false, %44 ], [ true, %92 ], [ false, %162 ]
  ret i1 %185
}

declare void @_ZN7GrGLGpu15bindFramebufferEjj(%class.GrGLGpu*, i32, i32) local_unnamed_addr #1

declare %class.GrDirectContext* @_ZN13GrGpuResource10getContextEv(%class.GrGpuResource*) local_unnamed_addr #1

declare i32 @_ZNK11GrGLTexture6targetEv(%class.GrGLTexture*) local_unnamed_addr #1

declare void @_ZN18GrResourceProvider28getDiscardableMSAAAttachmentE7SkISizeRK15GrBackendFormati11GrProtected(%class.sk_sp* sret, %class.GrResourceProvider*, i64, %class.GrBackendFormat* dereferenceable(72), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrGLRenderTarget9onReleaseEv(%class.GrGLRenderTarget*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %46, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr i8, i8* %7, i64 -24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %10
  %13 = getelementptr inbounds i8, i8* %12, i64 128
  %14 = bitcast i8* %13 to %class.GrGLGpu**
  %15 = load %class.GrGLGpu*, %class.GrGLGpu** %14, align 8
  %16 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %5
  tail call void @_ZN7GrGLGpu17deleteFramebufferEj(%class.GrGLGpu* %15, i32 %17) #11
  br label %20

20:                                               ; preds = %5, %19
  %21 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @_ZN7GrGLGpu17deleteFramebufferEj(%class.GrGLGpu* %15, i32 %22) #11
  br label %25

25:                                               ; preds = %20, %24
  %26 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %25
  %30 = load i8*, i8** %6, align 8
  %31 = getelementptr i8, i8* %30, i64 -24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds i8, i8* %11, i64 %33
  %35 = getelementptr inbounds i8, i8* %34, i64 128
  %36 = bitcast i8* %35 to %class.GrGLGpu**
  %37 = load %class.GrGLGpu*, %class.GrGLGpu** %36, align 8
  %38 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %37, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %class.GrGLContext*, %class.GrGLContext** %38, align 8
  %40 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %39, i64 0, i32 0, i32 1, i32 0
  %41 = load %struct.GrGLInterface*, %struct.GrGLInterface** %40, align 8
  %42 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %41, i64 0, i32 3, i32 38, i32 0
  %43 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %42, align 8
  %44 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %41, i64 0, i32 3, i32 38, i32 1, i64 0
  %45 = bitcast i64* %44 to i8*
  tail call void %43(i8* %45, i32 1, i32* %26) #11
  br label %46

46:                                               ; preds = %29, %25, %1
  %47 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 2
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 3
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 4
  store i32 0, i32* %49, align 8
  %50 = bitcast %class.GrGLRenderTarget* %0 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTarget9onReleaseEv(%class.GrRenderTarget* %50) #11
  ret void
}

declare void @_ZN7GrGLGpu17deleteFramebufferEj(%class.GrGLGpu*, i32) local_unnamed_addr #1

declare void @_ZN14GrRenderTarget9onReleaseEv(%class.GrRenderTarget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n48_N16GrGLRenderTarget9onReleaseEv(%class.GrGLRenderTarget*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %3 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -48
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 56
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %55, label %12

12:                                               ; preds = %1
  %13 = bitcast i8* %8 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 -24
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %8, i64 %17
  %19 = getelementptr inbounds i8, i8* %18, i64 128
  %20 = bitcast i8* %19 to %class.GrGLGpu**
  %21 = load %class.GrGLGpu*, %class.GrGLGpu** %20, align 8
  %22 = getelementptr inbounds i8, i8* %8, i64 44
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %12
  tail call void @_ZN7GrGLGpu17deleteFramebufferEj(%class.GrGLGpu* %21, i32 %24) #11
  br label %27

27:                                               ; preds = %26, %12
  %28 = getelementptr inbounds i8, i8* %8, i64 40
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN7GrGLGpu17deleteFramebufferEj(%class.GrGLGpu* %21, i32 %30) #11
  br label %33

33:                                               ; preds = %32, %27
  %34 = getelementptr inbounds i8, i8* %8, i64 48
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = load i8*, i8** %13, align 8
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %8, i64 %42
  %44 = getelementptr inbounds i8, i8* %43, i64 128
  %45 = bitcast i8* %44 to %class.GrGLGpu**
  %46 = load %class.GrGLGpu*, %class.GrGLGpu** %45, align 8
  %47 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %46, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %class.GrGLContext*, %class.GrGLContext** %47, align 8
  %49 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %48, i64 0, i32 0, i32 1, i32 0
  %50 = load %struct.GrGLInterface*, %struct.GrGLInterface** %49, align 8
  %51 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %50, i64 0, i32 3, i32 38, i32 0
  %52 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %51, align 8
  %53 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %50, i64 0, i32 3, i32 38, i32 1, i64 0
  %54 = bitcast i64* %53 to i8*
  tail call void %52(i8* %54, i32 1, i32* %35) #11
  br label %55

55:                                               ; preds = %1, %33, %38
  %56 = getelementptr inbounds i8, i8* %8, i64 40
  %57 = bitcast i8* %56 to i32*
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %8, i64 44
  %59 = bitcast i8* %58 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %8, i64 48
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 8
  %62 = bitcast i8* %8 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTarget9onReleaseEv(%class.GrRenderTarget* %62) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrGLRenderTarget9onAbandonEv(%class.GrGLRenderTarget*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 2
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 3
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 4
  store i32 0, i32* %4, align 8
  %5 = bitcast %class.GrGLRenderTarget* %0 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTarget9onAbandonEv(%class.GrRenderTarget* %5) #11
  ret void
}

declare void @_ZN14GrRenderTarget9onAbandonEv(%class.GrRenderTarget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n56_N16GrGLRenderTarget9onAbandonEv(%class.GrGLRenderTarget*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %3 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -56
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 40
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 44
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %8, i64 48
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8
  %15 = bitcast i8* %8 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTarget9onAbandonEv(%class.GrRenderTarget* %15) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK16GrGLRenderTarget27canAttemptStencilAttachmentEb(%class.GrGLRenderTarget* nocapture readonly, i1 zeroext) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  %10 = and i1 %9, %1
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i1 [ true, %2 ], [ %10, %6 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16GrGLRenderTarget20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGLRenderTarget*, %class.SkTraceMemoryDump*) unnamed_addr #0 align 2 {
  %3 = alloca %class.GrBackendFormat, align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = bitcast %class.SkTraceMemoryDump* %1 to i1 (%class.SkTraceMemoryDump*)***
  %11 = load i1 (%class.SkTraceMemoryDump*)**, i1 (%class.SkTraceMemoryDump*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%class.SkTraceMemoryDump*)*, i1 (%class.SkTraceMemoryDump*)** %11, i64 5
  %13 = load i1 (%class.SkTraceMemoryDump*)*, i1 (%class.SkTraceMemoryDump*)** %12, align 8
  %14 = tail call zeroext i1 %13(%class.SkTraceMemoryDump* %1) #11
  br i1 %14, label %15, label %76

15:                                               ; preds = %9, %2
  %16 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 7
  %17 = load i32, i32* %16, align 4
  %18 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = bitcast i8* %24 to %class.GrSurface*
  %26 = bitcast i8* %24 to %class.GrTexture* (%class.GrSurface*)***
  %27 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %26, align 8
  %28 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %27, i64 11
  %29 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %28, align 8
  %30 = tail call %class.GrTexture* %29(%class.GrSurface* %25) #11
  %31 = icmp ne %class.GrTexture* %30, null
  %32 = zext i1 %31 to i32
  %33 = sub i32 %17, %32
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %76

35:                                               ; preds = %15
  %36 = bitcast %class.GrBackendFormat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #11
  %37 = bitcast %class.GrGLRenderTarget* %0 to void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)***
  %38 = load void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)**, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)** %38, i64 10
  %40 = load void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)*, void (%class.GrBackendFormat*, %class.GrGLRenderTarget*)** %39, align 8
  call void %40(%class.GrBackendFormat* nonnull sret %3, %class.GrGLRenderTarget* %0) #11
  %41 = load i8*, i8** %18, align 8
  %42 = getelementptr i8, i8* %41, i64 -24
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %23, i64 %44
  %46 = getelementptr inbounds i8, i8* %45, i64 152
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZN9GrSurface11ComputeSizeERK15GrBackendFormat7SkISizei11GrMipmappedb(%class.GrBackendFormat* nonnull dereferenceable(72) %3, i64 %48, i32 %33, i1 zeroext false, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #11
  %50 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  %51 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %51, align 8
  %52 = load i8*, i8** %18, align 8
  %53 = getelementptr i8, i8* %52, i64 -24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds i8, i8* %23, i64 %55
  %57 = bitcast i8* %56 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource15getResourceNameEv(%class.SkString* nonnull sret %4, %class.GrGpuResource* %57) #11
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #11
  %58 = load i8*, i8** %18, align 8
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %23, i64 %61
  %63 = bitcast i8* %62 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource24dumpMemoryStatisticsPrivEP17SkTraceMemoryDumpRK8SkStringPKcm(%class.GrGpuResource* %63, %class.SkTraceMemoryDump* %1, %class.SkString* nonnull dereferenceable(8) %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 %49) #11
  %64 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %65, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %5) #11
  %66 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 4
  %67 = load i32, i32* %66, align 8
  call void @_ZN8SkString9insertU32Emj(%class.SkString* nonnull %5, i64 -1, i32 %67) #11
  %68 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %51, align 8
  %69 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %68, i64 0, i32 2
  %70 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %65, align 8
  %71 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %70, i64 0, i32 2
  %72 = bitcast %class.SkTraceMemoryDump* %1 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)***
  %73 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %73, i64 2
  %75 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %74, align 8
  call void %75(%class.SkTraceMemoryDump* %1, i8* %69, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* %71) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  br label %76

76:                                               ; preds = %15, %35, %9
  ret void
}

declare void @_ZNK13GrGpuResource15getResourceNameEv(%class.SkString* sret, %class.GrGpuResource*) local_unnamed_addr #1

declare void @_ZNK13GrGpuResource24dumpMemoryStatisticsPrivEP17SkTraceMemoryDumpRK8SkStringPKcm(%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString* dereferenceable(8), i8*, i64) local_unnamed_addr #1

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n24_NK16GrGLRenderTarget20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGLRenderTarget*, %class.SkTraceMemoryDump*) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %4 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 -24
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 %8
  %10 = bitcast i8* %9 to %class.GrGLRenderTarget*
  tail call void @_ZNK16GrGLRenderTarget20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGLRenderTarget* %10, %class.SkTraceMemoryDump* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14GrRenderTarget18alwaysClearStencilEv(%class.GrRenderTarget*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZN14GrRenderTarget14asRenderTargetEv(%class.GrRenderTarget*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRenderTarget* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZNK14GrRenderTarget14asRenderTargetEv(%class.GrRenderTarget*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRenderTarget* %0
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN14GrRenderTargetD1Ev(%class.GrRenderTarget*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN14GrRenderTargetD0Ev(%class.GrRenderTarget*) unnamed_addr #7

declare void @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGpuResource*, %class.SkTraceMemoryDump*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK9GrSurface15getResourceTypeEv(%class.GrSurface*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n40_N14GrRenderTargetD1Ev(%class.GrRenderTarget*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n40_N14GrRenderTargetD0Ev(%class.GrRenderTarget*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n48_N14GrRenderTarget9onReleaseEv(%class.GrRenderTarget*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n56_N14GrRenderTarget9onAbandonEv(%class.GrRenderTarget*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString(%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey(%class.GrGpuResource*, %class.GrScratchKey*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrTexture* @_ZN9GrSurface9asTextureEv(%class.GrSurface*) unnamed_addr #0 comdat align 2 {
  ret %class.GrTexture* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrTexture* @_ZNK9GrSurface9asTextureEv(%class.GrSurface*) unnamed_addr #0 comdat align 2 {
  ret %class.GrTexture* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZTv0_n112_N14GrRenderTarget14asRenderTargetEv(%class.GrRenderTarget*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrRenderTarget* %0 to i8*
  %3 = bitcast %class.GrRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -112
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %class.GrRenderTarget*
  ret %class.GrRenderTarget* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZTv0_n120_NK14GrRenderTarget14asRenderTargetEv(%class.GrRenderTarget*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrRenderTarget* %0 to i8*
  %3 = bitcast %class.GrRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -120
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %class.GrRenderTarget*
  ret %class.GrRenderTarget* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE(%class.GrSurface*, %class.sk_sp.135*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16GrGLRenderTarget18alwaysClearStencilEv(%class.GrGLRenderTarget*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr i8, i8* %3, i64 -24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 %6
  %9 = getelementptr inbounds i8, i8* %8, i64 160
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 2
  %13 = icmp ne i32 %12, 0
  ret i1 %13
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16GrGLRenderTargetD1Ev(%class.GrGLRenderTarget*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %class.GrGLRenderTarget* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8
  %4 = bitcast %class.GrSurface* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 1, i64 16) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 1, i32 0
  %6 = load %class.GrGLAttachment*, %class.GrGLAttachment** %5, align 8
  %7 = icmp eq %class.GrGLAttachment* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.GrGLAttachment, %class.GrGLAttachment* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 -1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %9, i64 -1
  %15 = bitcast %class.GrIORef* %14 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %15, i32 0) #11
  br label %16

16:                                               ; preds = %1, %8, %13
  %17 = bitcast %class.GrGLRenderTarget* %0 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTargetD2Ev(%class.GrRenderTarget* %17, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrGLRenderTarget, i64 0, i64 1)) #11
  %18 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 4, i32 0
  %20 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %19, align 8
  %21 = icmp eq %class.GrRefCntedCallback* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %20, i64 0, i32 0
  %24 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %35

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.SkNVRefCnt.136, %class.SkNVRefCnt.136* %23, i64 2
  %29 = bitcast %class.SkNVRefCnt.136* %28 to void (i8*)**
  %30 = load void (i8*)*, void (i8*)** %29, align 8
  %31 = getelementptr inbounds %class.SkNVRefCnt.136, %class.SkNVRefCnt.136* %23, i64 4
  %32 = bitcast %class.SkNVRefCnt.136* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void %30(i8* %33) #11
  %34 = bitcast %class.GrRefCntedCallback* %20 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %16, %22, %27
  %36 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %3, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %36) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16GrGLRenderTargetD0Ev(%class.GrGLRenderTarget*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %class.GrGLRenderTarget* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8
  %4 = bitcast %class.GrSurface* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 1, i64 16) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 1, i32 0
  %6 = load %class.GrGLAttachment*, %class.GrGLAttachment** %5, align 8
  %7 = icmp eq %class.GrGLAttachment* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.GrGLAttachment, %class.GrGLAttachment* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 -1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %9, i64 -1
  %15 = bitcast %class.GrIORef* %14 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %15, i32 0) #11
  br label %16

16:                                               ; preds = %13, %8, %1
  %17 = bitcast %class.GrGLRenderTarget* %0 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTargetD2Ev(%class.GrRenderTarget* %17, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrGLRenderTarget, i64 0, i64 1)) #11
  %18 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %0, i64 0, i32 8, i32 4, i32 0
  %20 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %19, align 8
  %21 = icmp eq %class.GrRefCntedCallback* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %20, i64 0, i32 0
  %24 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %35

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.SkNVRefCnt.136, %class.SkNVRefCnt.136* %23, i64 2
  %29 = bitcast %class.SkNVRefCnt.136* %28 to void (i8*)**
  %30 = load void (i8*)*, void (i8*)** %29, align 8
  %31 = getelementptr inbounds %class.SkNVRefCnt.136, %class.SkNVRefCnt.136* %23, i64 4
  %32 = bitcast %class.SkNVRefCnt.136* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void %30(i8* %33) #11
  %34 = bitcast %class.GrRefCntedCallback* %20 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %16, %22, %27
  %36 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %3, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %36) #11
  %37 = bitcast %class.GrGLRenderTarget* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n40_N16GrGLRenderTargetD1Ev(%class.GrGLRenderTarget*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %3 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 64
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 1, i64 16) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 32
  %13 = bitcast i8* %12 to %class.GrGLAttachment**
  %14 = load %class.GrGLAttachment*, %class.GrGLAttachment** %13, align 8
  %15 = icmp eq %class.GrGLAttachment* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.GrGLAttachment, %class.GrGLAttachment* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %17, i64 -1
  %23 = bitcast %class.GrIORef* %22 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %23, i32 0) #11
  br label %24

24:                                               ; preds = %21, %16, %1
  %25 = bitcast i8* %8 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTargetD2Ev(%class.GrRenderTarget* %25, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrGLRenderTarget, i64 0, i64 1)) #11
  %26 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %8, i64 232
  %28 = bitcast i8* %27 to %class.GrRefCntedCallback**
  %29 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %28, align 8
  %30 = icmp eq %class.GrRefCntedCallback* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %29, i64 0, i32 0
  %33 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.SkNVRefCnt.136, %class.SkNVRefCnt.136* %32, i64 2
  %38 = bitcast %class.SkNVRefCnt.136* %37 to void (i8*)**
  %39 = load void (i8*)*, void (i8*)** %38, align 8
  %40 = getelementptr inbounds %class.SkNVRefCnt.136, %class.SkNVRefCnt.136* %32, i64 4
  %41 = bitcast %class.SkNVRefCnt.136* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void %39(i8* %42) #11
  %43 = bitcast %class.GrRefCntedCallback* %29 to i8*
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %24, %31, %36
  %45 = bitcast i8* %10 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %45) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n40_N16GrGLRenderTargetD0Ev(%class.GrGLRenderTarget*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %class.GrGLRenderTarget* %0 to i8*
  %3 = bitcast %class.GrGLRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 64
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrGLRenderTarget, i64 0, inrange i32 1, i64 16) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 32
  %13 = bitcast i8* %12 to %class.GrGLAttachment**
  %14 = load %class.GrGLAttachment*, %class.GrGLAttachment** %13, align 8
  %15 = icmp eq %class.GrGLAttachment* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.GrGLAttachment, %class.GrGLAttachment* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %17, i64 -1
  %23 = bitcast %class.GrIORef* %22 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %23, i32 0) #11
  br label %24

24:                                               ; preds = %21, %16, %1
  %25 = bitcast i8* %8 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTargetD2Ev(%class.GrRenderTarget* %25, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrGLRenderTarget, i64 0, i64 1)) #11
  %26 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %8, i64 232
  %28 = bitcast i8* %27 to %class.GrRefCntedCallback**
  %29 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %28, align 8
  %30 = icmp eq %class.GrRefCntedCallback* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %29, i64 0, i32 0
  %33 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.SkNVRefCnt.136, %class.SkNVRefCnt.136* %32, i64 2
  %38 = bitcast %class.SkNVRefCnt.136* %37 to void (i8*)**
  %39 = load void (i8*)*, void (i8*)** %38, align 8
  %40 = getelementptr inbounds %class.SkNVRefCnt.136, %class.SkNVRefCnt.136* %32, i64 4
  %41 = bitcast %class.SkNVRefCnt.136* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void %39(i8* %42) #11
  %43 = bitcast %class.GrRefCntedCallback* %29 to i8*
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %24, %31, %36
  %45 = bitcast i8* %10 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %45) #11
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

declare void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource*, %class.GrGpu*) unnamed_addr #1

declare void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN15GrBackendFormatC1Ejj(%class.GrBackendFormat*, i32, i32) unnamed_addr #1

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #1

declare void @_ZN8SkString9insertU32Emj(%class.SkString*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN14GrRenderTargetD2Ev(%class.GrRenderTarget*, i8**) unnamed_addr #7

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK16GrGLRenderTarget13backendFormatEv: argument 0"}
!5 = distinct !{!5, !"_ZNK16GrGLRenderTarget13backendFormatEv"}
