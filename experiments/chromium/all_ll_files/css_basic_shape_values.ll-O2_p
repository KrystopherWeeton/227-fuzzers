; ModuleID = '../../third_party/blink/renderer/core/css/css_basic_shape_values.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_basic_shape_values.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.170", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.114", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i64 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist.45"* }
%"class.blink::Worklist.45" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.94", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.108", [4 x i8] }>
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { float }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.117", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.45"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.174" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.169 }
%class.scoped_refptr.169 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::cssvalue::CSSBasicShapeCircleValue" = type { %"class.blink::CSSValue", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.220, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%union.anon.220 = type { %"class.WTF::Vector.221" }
%"class.WTF::Vector.221" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223", [16 x i8] }
%"class.WTF::VectorBufferBase.223" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSValuePair" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.blink::Member.1", %"class.blink::Member.1", i32, [4 x i8] }>
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSIdentifierValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::cssvalue::CSSBasicShapeEllipseValue" = type { %"class.blink::CSSValue", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::cssvalue::CSSBasicShapePolygonValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.blink::HeapVector", i32, [4 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.181" }
%"class.WTF::Vector.181" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183" }
%"class.WTF::VectorBufferBase.183" = type { %"class.blink::Member.184"*, i32, i32 }
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.WTF::Vector.187" = type { %"class.WTF::VectorBuffer.188" }
%"class.WTF::VectorBuffer.188" = type { %"class.WTF::VectorBufferBase.189" }
%"class.WTF::VectorBufferBase.189" = type { %"class.WTF::String"*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::cssvalue::CSSBasicShapeInsetValue" = type { %"class.blink::CSSValue", %"class.blink::Member.184", %"class.blink::Member.184", %"class.blink::Member.184", %"class.blink::Member.184", %"class.blink::Member.192", %"class.blink::Member.192", %"class.blink::Member.192", %"class.blink::Member.192" }
%"class.blink::Member.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::CSSValuePair"* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.226" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228", [16 x i8] }
%"class.WTF::VectorBufferBase.228" = type { i16*, i32, i32 }

$_ZNK3WTF6VectorIN5blink6MemberINS1_17CSSPrimitiveValueEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_12CSSValuePairEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSPrimitiveValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17CSSPrimitiveValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12CSSValuePairEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"circle(\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.5 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__const._ZN5blink8cssvalueL18BuildEllipseStringERKN3WTF6StringES4_S4_S4_.at = private unnamed_addr constant [3 x i8] c"at\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"ellipse(\00", align 1
@_ZZN5blink8cssvalueL18BuildPolygonStringERKNS_8WindRuleERKN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEEE15kEvenOddOpening = internal constant [18 x i8] c"polygon(evenodd, \00", align 16
@_ZZN5blink8cssvalueL18BuildPolygonStringERKNS_8WindRuleERKN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEEE15kNonZeroOpening = internal constant [9 x i8] c"polygon(\00", align 1
@_ZZN5blink8cssvalueL18BuildPolygonStringERKNS_8WindRuleERKN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEEE15kCommaSeparator = internal constant [3 x i8] c", \00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__const._ZN5blink8cssvalueL16BuildInsetStringERKN3WTF6StringES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_.opening = private unnamed_addr constant [7 x i8] c"inset(\00", align 1
@__const._ZN5blink8cssvalueL16BuildInsetStringERKN3WTF6StringES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_.corners_separator = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"0px\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue24CSSBasicShapeCircleValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapeCircleValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca [3 x i8], align 1
  %3 = alloca i16, align 2
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %13, align 8
  %15 = tail call fastcc %"class.blink::CSSValuePair"* @_ZN5blink8cssvalueL31BuildSerializablePositionOffsetEPNS_8CSSValueENS_10CSSValueIDE(%"class.blink::CSSValue"* %14, i32 306)
  %16 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %16, align 8
  %18 = tail call fastcc %"class.blink::CSSValuePair"* @_ZN5blink8cssvalueL31BuildSerializablePositionOffsetEPNS_8CSSValueENS_10CSSValueIDE(%"class.blink::CSSValue"* %17, i32 302)
  %19 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %19, align 8
  %21 = icmp eq %"class.blink::CSSValue"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %20, i64 0, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 2
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %20, i64 1, i32 1
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 656
  br i1 %30, label %34, label %31

31:                                               ; preds = %22, %26
  %32 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %20) #8
  %33 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  br label %34

34:                                               ; preds = %1, %31, %26
  %35 = phi i64 [ %33, %31 ], [ 0, %26 ], [ 0, %1 ]
  %36 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %15, i64 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.blink::CSSValue"** %36 to %"class.blink::CSSIdentifierValue"**
  %38 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  switch i32 %40, label %58 [
    i32 306, label %41
    i32 302, label %48
  ]

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %18, i64 0, i32 2, i32 0, i32 0
  %43 = bitcast %"class.blink::CSSValue"** %42 to %"class.blink::CSSIdentifierValue"**
  %44 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %44, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 302
  br i1 %47, label %55, label %58

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %18, i64 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.blink::CSSValue"** %49 to %"class.blink::CSSIdentifierValue"**
  %51 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 306
  br i1 %54, label %55, label %58

55:                                               ; preds = %48, %41
  %56 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %15, i64 0, i32 3, i32 0, i32 0
  %57 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %56, align 8
  br label %60

58:                                               ; preds = %48, %41, %34
  %59 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %15, i64 0, i32 0
  br label %60

60:                                               ; preds = %55, %58
  %61 = phi %"class.blink::CSSValue"* [ %57, %55 ], [ %59, %58 ]
  %62 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %61) #8
  %63 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %18, i64 0, i32 2, i32 0, i32 0
  %64 = bitcast %"class.blink::CSSValue"** %63 to %"class.blink::CSSIdentifierValue"**
  %65 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %65, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  switch i32 %67, label %81 [
    i32 306, label %68
    i32 302, label %73
  ]

68:                                               ; preds = %60
  %69 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %37, align 8
  %70 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %69, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 302
  br i1 %72, label %78, label %81

73:                                               ; preds = %60
  %74 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %37, align 8
  %75 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %74, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 306
  br i1 %77, label %78, label %81

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %18, i64 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %79, align 8
  br label %83

81:                                               ; preds = %73, %68, %60
  %82 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %18, i64 0, i32 0
  br label %83

83:                                               ; preds = %78, %81
  %84 = phi %"class.blink::CSSValue"* [ %80, %78 ], [ %82, %81 ]
  %85 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %84) #8
  %86 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %86) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %86, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @__const._ZN5blink8cssvalueL18BuildEllipseStringERKN3WTF6StringES4_S4_S4_.at, i64 0, i64 0), i64 3, i1 false) #8
  %87 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %87) #8
  store i16 32, i16* %3, align 2
  %88 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %88) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 48, i1 false) #8
  %89 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %91 = bitcast %union.anon.220* %90 to i8*
  store i8 0, i8* %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %93, align 4
  %94 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %94, align 1
  %95 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #8
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 7, i32* %99, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #8
  %100 = inttoptr i64 %35 to %"class.WTF::StringImpl"*
  %101 = icmp eq i64 %35, 0
  br i1 %101, label %111, label %102

102:                                              ; preds = %83
  %103 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #8
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 1
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %109 = bitcast i8** %108 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %106, i32* %110, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #8
  br label %111

111:                                              ; preds = %102, %83
  %112 = icmp eq %"class.WTF::StringImpl"* %62, null
  %113 = icmp eq %"class.WTF::StringImpl"* %85, null
  %114 = and i1 %112, %113
  br i1 %114, label %191, label %115

115:                                              ; preds = %111
  br i1 %101, label %128, label %116

116:                                              ; preds = %115
  %117 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #8
  %118 = call i64 @strlen(i8* nonnull %87) #9
  %119 = icmp ult i64 %118, 4294967296
  br i1 %119, label %121, label %120, !prof !2

120:                                              ; preds = %116
  call void @llvm.trap() #8
  unreachable

121:                                              ; preds = %116
  %122 = trunc i64 %118 to i32
  %123 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %124 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %126 = bitcast i8** %125 to i16**
  store i16* %3, i16** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %122, i32* %127, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #8
  br label %128

128:                                              ; preds = %121, %115
  %129 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #8
  %130 = call i64 @strlen(i8* nonnull %86) #9
  %131 = icmp ult i64 %130, 4294967296
  br i1 %131, label %133, label %132, !prof !2

132:                                              ; preds = %128
  call void @llvm.trap() #8
  unreachable

133:                                              ; preds = %128
  %134 = trunc i64 %130 to i32
  %135 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %136 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %86, i8** %137, align 8
  %138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %134, i32* %138, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #8
  %139 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #8
  %140 = call i64 @strlen(i8* nonnull %87) #9
  %141 = icmp ult i64 %140, 4294967296
  br i1 %141, label %143, label %142, !prof !2

142:                                              ; preds = %133
  call void @llvm.trap() #8
  unreachable

143:                                              ; preds = %133
  %144 = trunc i64 %140 to i32
  %145 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %146 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %148 = bitcast i8** %147 to i16**
  store i16* %3, i16** %148, align 8
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %144, i32* %149, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #8
  %150 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #8
  br i1 %112, label %151, label %155

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %152, align 8
  %153 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %154 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %153, i64* %154, align 8
  br label %162

155:                                              ; preds = %143
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %156, align 8
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %161 = bitcast i8** %160 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %161, align 8
  br label %162

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %158, %155 ], [ 0, %151 ]
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %163, i32* %164, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #8
  %165 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #8
  %166 = call i64 @strlen(i8* nonnull %87) #9
  %167 = icmp ult i64 %166, 4294967296
  br i1 %167, label %169, label %168, !prof !2

168:                                              ; preds = %162
  call void @llvm.trap() #8
  unreachable

169:                                              ; preds = %162
  %170 = trunc i64 %166 to i32
  %171 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %172 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %171, i64* %172, align 8
  %173 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %174 = bitcast i8** %173 to i16**
  store i16* %3, i16** %174, align 8
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %170, i32* %175, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #8
  %176 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #8
  br i1 %113, label %177, label %181

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %178, align 8
  %179 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %180 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %179, i64* %180, align 8
  br label %188

181:                                              ; preds = %169
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 1
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %187 = bitcast i8** %186 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %187, align 8
  br label %188

188:                                              ; preds = %181, %177
  %189 = phi i32 [ %184, %181 ], [ 0, %177 ]
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %189, i32* %190, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #8
  br label %191

191:                                              ; preds = %111, %188
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %4, i8 zeroext 41) #8
  %192 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #8
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #8
  br label %208

208:                                              ; preds = %191, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %88) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %87) #8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %86) #8
  br i1 %113, label %222, label %209

209:                                              ; preds = %208
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #8
  br label %222

222:                                              ; preds = %208, %218, %221
  br i1 %112, label %236, label %223

223:                                              ; preds = %222
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  br label %236

236:                                              ; preds = %222, %232, %235
  br i1 %101, label %250, label %237

237:                                              ; preds = %236
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  br i1 %241, label %244, label %246

244:                                              ; preds = %237
  %245 = add i32 %243, -1
  store i32 %245, i32* %242, align 4
  br label %246

246:                                              ; preds = %244, %237
  %247 = phi i32 [ %245, %244 ], [ %243, %237 ]
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #8
  br label %250

250:                                              ; preds = %236, %246, %249
  ret %"class.WTF::StringImpl"* %192
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CSSValuePair"* @_ZN5blink8cssvalueL31BuildSerializablePositionOffsetEPNS_8CSSValueENS_10CSSValueIDE(%"class.blink::CSSValue"*, i32) unnamed_addr #0 {
  %3 = icmp eq %"class.blink::CSSValue"* %0, null
  br i1 %3, label %42, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  switch i8 %6, label %36 [
    i8 2, label %7
    i8 9, label %11
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 1, i32 1
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  br label %38

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %13 = bitcast i8* %12 to %"class.blink::CSSIdentifierValue"**
  %14 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 5, i32 1
  %18 = bitcast i8* %17 to %"class.blink::CSSPrimitiveValue"**
  %19 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %18, align 8
  %20 = ptrtoint %"class.blink::CSSPrimitiveValue"* %19 to i64
  switch i32 %16, label %38 [
    i32 307, label %21
    i32 303, label %21
  ]

21:                                               ; preds = %11, %11
  %22 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %19) #8
  br i1 %22, label %23, label %45

23:                                               ; preds = %21
  %24 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %19) #8
  %25 = fcmp ult double %24, 0x47EFFFFFE0000000
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  %27 = fcmp ole double %24, 0xC7EFFFFFE0000000
  %28 = select i1 %27, double 0xC7EFFFFFE0000000, double %24
  %29 = fptrunc double %28 to float
  br label %30

30:                                               ; preds = %23, %26
  %31 = phi float [ %29, %26 ], [ 0x47EFFFFFE0000000, %23 ]
  %32 = fsub float 1.000000e+02, %31
  %33 = fpext float %32 to double
  %34 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %33, i32 2) #8
  %35 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %34 to i64
  br label %38

36:                                               ; preds = %4
  %37 = ptrtoint %"class.blink::CSSValue"* %0 to i64
  br label %38

38:                                               ; preds = %7, %11, %30, %36
  %39 = phi i64 [ %37, %36 ], [ %20, %11 ], [ %35, %30 ], [ 0, %7 ]
  %40 = phi i32 [ %1, %36 ], [ %16, %11 ], [ %1, %30 ], [ %10, %7 ]
  %41 = icmp eq i32 %40, 310
  br i1 %41, label %42, label %45

42:                                               ; preds = %2, %38
  %43 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 5.000000e+01, i32 2) #8
  %44 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %43 to i64
  br label %60

45:                                               ; preds = %21, %38
  %46 = phi i32 [ %40, %38 ], [ %16, %21 ]
  %47 = phi i64 [ %39, %38 ], [ %20, %21 ]
  %48 = inttoptr i64 %47 to %"class.blink::CSSPrimitiveValue"*
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %45
  %51 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"* nonnull %48) #8
  br i1 %51, label %52, label %60

52:                                               ; preds = %50
  %53 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue6IsZeroEv(%"class.blink::CSSPrimitiveValue"* nonnull %48) #8
  br i1 %53, label %54, label %60

54:                                               ; preds = %45, %52
  switch i32 %46, label %55 [
    i32 307, label %56
    i32 303, label %56
  ]

55:                                               ; preds = %54
  br label %56

56:                                               ; preds = %54, %54, %55
  %57 = phi double [ 0.000000e+00, %55 ], [ 1.000000e+02, %54 ], [ 1.000000e+02, %54 ]
  %58 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %57, i32 2) #8
  %59 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %58 to i64
  br label %60

60:                                               ; preds = %50, %52, %56, %42
  %61 = phi i64 [ %44, %42 ], [ %59, %56 ], [ %47, %52 ], [ %47, %50 ]
  %62 = phi i32 [ %1, %42 ], [ %1, %56 ], [ %46, %52 ], [ %46, %50 ]
  %63 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %62) #8
  %64 = ptrtoint %"class.blink::CSSIdentifierValue"* %63 to i64
  %65 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValuePairEEEPvm(i64 32) #8
  %66 = bitcast i8* %65 to %"class.blink::CSSValuePair"*
  store i8 0, i8* %65, align 1
  %67 = getelementptr inbounds i8, i8* %65, i64 1
  %68 = load i8, i8* %67, align 1
  %69 = and i8 %68, -8
  store i8 %69, i8* %67, align 1
  %70 = getelementptr inbounds i8, i8* %65, i64 2
  store i8 9, i8* %70, align 1
  %71 = getelementptr inbounds i8, i8* %65, i64 8
  %72 = bitcast i8* %71 to i64*
  store i64 %64, i64* %72, align 8
  %73 = getelementptr inbounds i8, i8* %65, i64 16
  %74 = bitcast i8* %73 to i64*
  store i64 %61, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %65, i64 24
  %76 = bitcast i8* %75 to i32*
  store i32 1, i32* %76, align 8
  %77 = getelementptr inbounds i8, i8* %65, i64 -4
  %78 = bitcast i8* %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = or i16 %79, 1
  store atomic i16 %80, i16* %78 release, align 2
  ret %"class.blink::CSSValuePair"* %66
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8cssvalue24CSSBasicShapeCircleValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapeCircleValue"* nocapture readonly, %"class.blink::cssvalue::CSSBasicShapeCircleValue"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %5, align 8
  %7 = icmp eq %"class.blink::CSSValue"* %4, %6
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = icmp ne %"class.blink::CSSValue"* %4, null
  %10 = icmp ne %"class.blink::CSSValue"* %6, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %38

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %4, %"class.blink::CSSValue"* nonnull dereferenceable(3) %6) #8
  br i1 %13, label %14, label %38

14:                                               ; preds = %2, %12
  %15 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %1, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %17, align 8
  %19 = icmp eq %"class.blink::CSSValue"* %16, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = icmp ne %"class.blink::CSSValue"* %16, null
  %22 = icmp ne %"class.blink::CSSValue"* %18, null
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %16, %"class.blink::CSSValue"* nonnull dereferenceable(3) %18) #8
  br i1 %25, label %26, label %38

26:                                               ; preds = %14, %24
  %27 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %0, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %1, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %29, align 8
  %31 = icmp eq %"class.blink::CSSValue"* %28, %30
  br i1 %31, label %38, label %32

32:                                               ; preds = %26
  %33 = icmp ne %"class.blink::CSSValue"* %28, null
  %34 = icmp ne %"class.blink::CSSValue"* %30, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %28, %"class.blink::CSSValue"* nonnull dereferenceable(3) %30) #8
  br label %38

38:                                               ; preds = %20, %8, %36, %32, %26, %24, %12
  %39 = phi i1 [ false, %24 ], [ false, %12 ], [ %37, %36 ], [ true, %26 ], [ false, %32 ], [ false, %8 ], [ false, %20 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8cssvalue24CSSBasicShapeCircleValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapeCircleValue"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSValue"*
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %0, i64 0, i32 2
  %16 = bitcast %"class.blink::Member"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to %"class.blink::CSSValue"*
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %20, i64 0, i32 0
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, i64 5
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* %21, i8* %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %26

26:                                               ; preds = %14, %19
  %27 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeCircleValue", %"class.blink::cssvalue::CSSBasicShapeCircleValue"* %0, i64 0, i32 3
  %28 = bitcast %"class.blink::Member"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %29 to %"class.blink::CSSValue"*
  %33 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %32, i64 0, i32 0
  %34 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8* %33, i8* %33, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %26, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSBasicShapeEllipseValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapeEllipseValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca [3 x i8], align 1
  %3 = alloca i16, align 2
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %15, align 8
  %17 = tail call fastcc %"class.blink::CSSValuePair"* @_ZN5blink8cssvalueL31BuildSerializablePositionOffsetEPNS_8CSSValueENS_10CSSValueIDE(%"class.blink::CSSValue"* %16, i32 306)
  %18 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %18, align 8
  %20 = tail call fastcc %"class.blink::CSSValuePair"* @_ZN5blink8cssvalueL31BuildSerializablePositionOffsetEPNS_8CSSValueENS_10CSSValueIDE(%"class.blink::CSSValue"* %19, i32 302)
  %21 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %21, align 8
  %23 = icmp eq %"class.blink::CSSValue"* %22, null
  br i1 %23, label %55, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %22, i64 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 2
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %22, i64 1, i32 1
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 656
  br label %33

33:                                               ; preds = %24, %28
  %34 = phi i1 [ false, %24 ], [ %32, %28 ]
  %35 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 4, i32 0, i32 0
  %36 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %35, align 8
  %37 = icmp eq %"class.blink::CSSValue"* %36, null
  br i1 %37, label %49, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %36, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 2
  br i1 %41, label %42, label %49

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %36, i64 1, i32 1
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = icmp ne i32 %45, 656
  %47 = xor i1 %34, true
  %48 = or i1 %46, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %38, %33, %42
  %50 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %22) #8
  %51 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %52 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %35, align 8
  %53 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %52) #8
  %54 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  br label %55

55:                                               ; preds = %1, %49, %42
  %56 = phi i64 [ %54, %49 ], [ 0, %42 ], [ 0, %1 ]
  %57 = phi i64 [ %51, %49 ], [ 0, %42 ], [ 0, %1 ]
  %58 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %17, i64 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.blink::CSSValue"** %58 to %"class.blink::CSSIdentifierValue"**
  %60 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %60, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  switch i32 %62, label %80 [
    i32 306, label %63
    i32 302, label %70
  ]

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %20, i64 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.blink::CSSValue"** %64 to %"class.blink::CSSIdentifierValue"**
  %66 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 302
  br i1 %69, label %77, label %80

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %20, i64 0, i32 2, i32 0, i32 0
  %72 = bitcast %"class.blink::CSSValue"** %71 to %"class.blink::CSSIdentifierValue"**
  %73 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %73, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 306
  br i1 %76, label %77, label %80

77:                                               ; preds = %70, %63
  %78 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %17, i64 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %78, align 8
  br label %82

80:                                               ; preds = %70, %63, %55
  %81 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %17, i64 0, i32 0
  br label %82

82:                                               ; preds = %77, %80
  %83 = phi %"class.blink::CSSValue"* [ %79, %77 ], [ %81, %80 ]
  %84 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %83) #8
  %85 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %20, i64 0, i32 2, i32 0, i32 0
  %86 = bitcast %"class.blink::CSSValue"** %85 to %"class.blink::CSSIdentifierValue"**
  %87 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %87, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  switch i32 %89, label %103 [
    i32 306, label %90
    i32 302, label %95
  ]

90:                                               ; preds = %82
  %91 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %59, align 8
  %92 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %91, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 302
  br i1 %94, label %100, label %103

95:                                               ; preds = %82
  %96 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %59, align 8
  %97 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %96, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 306
  br i1 %99, label %100, label %103

100:                                              ; preds = %95, %90
  %101 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %20, i64 0, i32 3, i32 0, i32 0
  %102 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %101, align 8
  br label %105

103:                                              ; preds = %95, %90, %82
  %104 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %20, i64 0, i32 0
  br label %105

105:                                              ; preds = %100, %103
  %106 = phi %"class.blink::CSSValue"* [ %102, %100 ], [ %104, %103 ]
  %107 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %106) #8
  %108 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %108) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %108, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @__const._ZN5blink8cssvalueL18BuildEllipseStringERKN3WTF6StringES4_S4_S4_.at, i64 0, i64 0), i64 3, i1 false) #8
  %109 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %109) #8
  store i16 32, i16* %3, align 2
  %110 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %110) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 48, i1 false) #8
  %111 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %113 = bitcast %union.anon.220* %112 to i8*
  store i8 0, i8* %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %115, align 4
  %116 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %116, align 1
  %117 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #8
  %118 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %119 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 8, i32* %121, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #8
  %122 = inttoptr i64 %57 to %"class.WTF::StringImpl"*
  %123 = icmp eq i64 %57, 0
  br i1 %123, label %133, label %124

124:                                              ; preds = %105
  %125 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #8
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %131 = bitcast i8** %130 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %128, i32* %132, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #8
  br label %133

133:                                              ; preds = %124, %105
  %134 = phi i8 [ 0, %105 ], [ 1, %124 ]
  %135 = inttoptr i64 %56 to %"class.WTF::StringImpl"*
  %136 = icmp eq i64 %56, 0
  br i1 %136, label %160, label %137

137:                                              ; preds = %133
  %138 = icmp eq i8 %134, 0
  br i1 %138, label %151, label %139

139:                                              ; preds = %137
  %140 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #8
  %141 = call i64 @strlen(i8* nonnull %109) #9
  %142 = icmp ult i64 %141, 4294967296
  br i1 %142, label %144, label %143, !prof !2

143:                                              ; preds = %139
  call void @llvm.trap() #8
  unreachable

144:                                              ; preds = %139
  %145 = trunc i64 %141 to i32
  %146 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %147 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %149 = bitcast i8** %148 to i16**
  store i16* %3, i16** %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %145, i32* %150, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #8
  br label %151

151:                                              ; preds = %137, %144
  %152 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #8
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %153, align 8
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 1
  %157 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %158 = bitcast i8** %157 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"** %158, align 8
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %155, i32* %159, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #8
  br label %160

160:                                              ; preds = %151, %133
  %161 = phi i8 [ %134, %133 ], [ 1, %151 ]
  %162 = icmp eq %"class.WTF::StringImpl"* %84, null
  %163 = icmp eq %"class.WTF::StringImpl"* %107, null
  %164 = and i1 %162, %163
  br i1 %164, label %243, label %165

165:                                              ; preds = %160
  %166 = and i8 %161, 1
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %180, label %168

168:                                              ; preds = %165
  %169 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #8
  %170 = call i64 @strlen(i8* nonnull %109) #9
  %171 = icmp ult i64 %170, 4294967296
  br i1 %171, label %173, label %172, !prof !2

172:                                              ; preds = %168
  call void @llvm.trap() #8
  unreachable

173:                                              ; preds = %168
  %174 = trunc i64 %170 to i32
  %175 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %176 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %178 = bitcast i8** %177 to i16**
  store i16* %3, i16** %178, align 8
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %174, i32* %179, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #8
  br label %180

180:                                              ; preds = %173, %165
  %181 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #8
  %182 = call i64 @strlen(i8* nonnull %108) #9
  %183 = icmp ult i64 %182, 4294967296
  br i1 %183, label %185, label %184, !prof !2

184:                                              ; preds = %180
  call void @llvm.trap() #8
  unreachable

185:                                              ; preds = %180
  %186 = trunc i64 %182 to i32
  %187 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %188 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* %108, i8** %189, align 8
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %186, i32* %190, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #8
  %191 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #8
  %192 = call i64 @strlen(i8* nonnull %109) #9
  %193 = icmp ult i64 %192, 4294967296
  br i1 %193, label %195, label %194, !prof !2

194:                                              ; preds = %185
  call void @llvm.trap() #8
  unreachable

195:                                              ; preds = %185
  %196 = trunc i64 %192 to i32
  %197 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %198 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %197, i64* %198, align 8
  %199 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %200 = bitcast i8** %199 to i16**
  store i16* %3, i16** %200, align 8
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %196, i32* %201, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191) #8
  %202 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #8
  br i1 %162, label %203, label %207

203:                                              ; preds = %195
  %204 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %204, align 8
  %205 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %206 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %205, i64* %206, align 8
  br label %214

207:                                              ; preds = %195
  %208 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %208, align 8
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 1
  %212 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %213 = bitcast i8** %212 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %211, %"class.WTF::StringImpl"** %213, align 8
  br label %214

214:                                              ; preds = %207, %203
  %215 = phi i32 [ %210, %207 ], [ 0, %203 ]
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %215, i32* %216, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #8
  %217 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #8
  %218 = call i64 @strlen(i8* nonnull %109) #9
  %219 = icmp ult i64 %218, 4294967296
  br i1 %219, label %221, label %220, !prof !2

220:                                              ; preds = %214
  call void @llvm.trap() #8
  unreachable

221:                                              ; preds = %214
  %222 = trunc i64 %218 to i32
  %223 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %224 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %226 = bitcast i8** %225 to i16**
  store i16* %3, i16** %226, align 8
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %222, i32* %227, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #8
  %228 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #8
  br i1 %163, label %229, label %233

229:                                              ; preds = %221
  %230 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %230, align 8
  %231 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %232 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %231, i64* %232, align 8
  br label %240

233:                                              ; preds = %221
  %234 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %234, align 8
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 1
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %239 = bitcast i8** %238 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %237, %"class.WTF::StringImpl"** %239, align 8
  br label %240

240:                                              ; preds = %233, %229
  %241 = phi i32 [ %236, %233 ], [ 0, %229 ]
  %242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %241, i32* %242, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #8
  br label %243

243:                                              ; preds = %160, %240
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %4, i8 zeroext 41) #8
  %244 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #8
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #8
  br label %260

260:                                              ; preds = %243, %256, %259
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %110) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %109) #8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %108) #8
  br i1 %163, label %274, label %261

261:                                              ; preds = %260
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #8
  br label %274

274:                                              ; preds = %260, %270, %273
  br i1 %162, label %288, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #8
  br label %288

288:                                              ; preds = %274, %284, %287
  br i1 %136, label %302, label %289

289:                                              ; preds = %288
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  br i1 %293, label %296, label %298

296:                                              ; preds = %289
  %297 = add i32 %295, -1
  store i32 %297, i32* %294, align 4
  br label %298

298:                                              ; preds = %296, %289
  %299 = phi i32 [ %297, %296 ], [ %295, %289 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #8
  br label %302

302:                                              ; preds = %288, %298, %301
  br i1 %123, label %316, label %303

303:                                              ; preds = %302
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #8
  br label %316

316:                                              ; preds = %302, %312, %315
  ret %"class.WTF::StringImpl"* %244
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8cssvalue25CSSBasicShapeEllipseValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapeEllipseValue"* nocapture readonly, %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %5, align 8
  %7 = icmp eq %"class.blink::CSSValue"* %4, %6
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = icmp ne %"class.blink::CSSValue"* %4, null
  %10 = icmp ne %"class.blink::CSSValue"* %6, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %50

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %4, %"class.blink::CSSValue"* nonnull dereferenceable(3) %6) #8
  br i1 %13, label %14, label %50

14:                                               ; preds = %2, %12
  %15 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %1, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %17, align 8
  %19 = icmp eq %"class.blink::CSSValue"* %16, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = icmp ne %"class.blink::CSSValue"* %16, null
  %22 = icmp ne %"class.blink::CSSValue"* %18, null
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %50

24:                                               ; preds = %20
  %25 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %16, %"class.blink::CSSValue"* nonnull dereferenceable(3) %18) #8
  br i1 %25, label %26, label %50

26:                                               ; preds = %14, %24
  %27 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %1, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %29, align 8
  %31 = icmp eq %"class.blink::CSSValue"* %28, %30
  br i1 %31, label %38, label %32

32:                                               ; preds = %26
  %33 = icmp ne %"class.blink::CSSValue"* %28, null
  %34 = icmp ne %"class.blink::CSSValue"* %30, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %50

36:                                               ; preds = %32
  %37 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %28, %"class.blink::CSSValue"* nonnull dereferenceable(3) %30) #8
  br i1 %37, label %38, label %50

38:                                               ; preds = %26, %36
  %39 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 4, i32 0, i32 0
  %40 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %1, i64 0, i32 4, i32 0, i32 0
  %42 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %41, align 8
  %43 = icmp eq %"class.blink::CSSValue"* %40, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %38
  %45 = icmp ne %"class.blink::CSSValue"* %40, null
  %46 = icmp ne %"class.blink::CSSValue"* %42, null
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %40, %"class.blink::CSSValue"* nonnull dereferenceable(3) %42) #8
  br label %50

50:                                               ; preds = %32, %20, %8, %48, %44, %38, %36, %24, %12
  %51 = phi i1 [ false, %36 ], [ false, %24 ], [ false, %12 ], [ %49, %48 ], [ true, %38 ], [ false, %44 ], [ false, %8 ], [ false, %20 ], [ false, %32 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8cssvalue25CSSBasicShapeEllipseValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapeEllipseValue"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSValue"*
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 2
  %16 = bitcast %"class.blink::Member"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to %"class.blink::CSSValue"*
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %20, i64 0, i32 0
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, i64 5
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* %21, i8* %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %26

26:                                               ; preds = %14, %19
  %27 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 3
  %28 = bitcast %"class.blink::Member"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %29 to %"class.blink::CSSValue"*
  %33 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %32, i64 0, i32 0
  %34 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8* %33, i8* %33, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %26, %31
  %39 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeEllipseValue", %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %0, i64 0, i32 4
  %40 = bitcast %"class.blink::Member"* %39 to i64*
  %41 = load atomic i64, i64* %40 monotonic, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = inttoptr i64 %41 to %"class.blink::CSSValue"*
  %45 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %44, i64 0, i32 0
  %46 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, i64 5
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %1, i8* %45, i8* %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %50

50:                                               ; preds = %38, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSBasicShapePolygonValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapePolygonValue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::Vector.187", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = bitcast %"class.WTF::Vector.187"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %8, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #8
  %14 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapePolygonValue", %"class.blink::cssvalue::CSSBasicShapePolygonValue"* %0, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapePolygonValue", %"class.blink::cssvalue::CSSBasicShapePolygonValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %1
  %19 = zext i32 %16 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %19) #8
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.187"* %8 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %12, align 8
  %26 = load i32, i32* %15, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.WTF::String"* %9 to i8*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  br label %194

31:                                               ; preds = %228
  %32 = load i32, i32* %13, align 4
  %33 = icmp eq i32 %32, 0
  br label %34

34:                                               ; preds = %1, %31, %18
  %35 = phi i1 [ %33, %31 ], [ true, %18 ], [ true, %1 ]
  %36 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapePolygonValue", %"class.blink::cssvalue::CSSBasicShapePolygonValue"* %0, i64 0, i32 3
  %37 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false) #8
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %40 = bitcast %union.anon.220* %39 to i8*
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %42, align 4
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %43, align 1
  br i1 %35, label %44, label %58

44:                                               ; preds = %81, %34
  %45 = phi i32 [ 17, %34 ], [ %85, %81 ]
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %2, i32 %45) #8
  %46 = load i32, i32* %36, align 4
  %47 = icmp eq i32 %46, 1
  %48 = select i1 %47, %"class.WTF::StringView"* %3, %"class.WTF::StringView"* %4
  %49 = select i1 %47, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZZN5blink8cssvalueL18BuildPolygonStringERKNS_8WindRuleERKN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEEE15kEvenOddOpening, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZN5blink8cssvalueL18BuildPolygonStringERKNS_8WindRuleERKN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEEE15kNonZeroOpening, i64 0, i64 0)
  %50 = select i1 %47, i32 17, i32 8
  %51 = bitcast %"class.WTF::StringView"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %53 = bitcast %"class.WTF::StringView"* %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 1
  store i8* %49, i8** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 2
  store i32 %50, i32* %55, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %48) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #8
  %56 = load i32, i32* %13, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %106, label %89

58:                                               ; preds = %34, %81
  %59 = phi i32 [ %86, %81 ], [ 0, %34 ]
  %60 = phi i32 [ %85, %81 ], [ 17, %34 ]
  %61 = icmp eq i32 %59, 0
  %62 = add i32 %60, 2
  %63 = select i1 %61, i32 %60, i32 %62
  %64 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"* nonnull %8, i32 %59) #8
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %58
  %72 = phi i32 [ %70, %68 ], [ 0, %58 ]
  %73 = or i32 %59, 1
  %74 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"* nonnull %8, i32 %73) #8
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  br label %81

81:                                               ; preds = %78, %71
  %82 = phi i32 [ %80, %78 ], [ 0, %71 ]
  %83 = add i32 %63, 1
  %84 = add i32 %83, %72
  %85 = add i32 %84, %82
  %86 = add i32 %59, 2
  %87 = load i32, i32* %13, align 4
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %58, label %44

89:                                               ; preds = %44
  %90 = bitcast %"class.WTF::StringView"* %5 to i8*
  %91 = bitcast %"class.WTF::StringView"* %5 to i64*
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %94 = bitcast %"class.WTF::StringView"* %6 to i8*
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %97 = bitcast i8** %96 to %"class.WTF::StringImpl"**
  %98 = bitcast %"class.WTF::StringView"* %6 to i64*
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %100 = bitcast %"class.WTF::StringView"* %7 to i8*
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  %104 = bitcast %"class.WTF::StringView"* %7 to i64*
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  br label %123

106:                                              ; preds = %152, %44
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 41) #8
  %107 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #8
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %157, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %157

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #8
  br label %157

123:                                              ; preds = %152, %89
  %124 = phi i32 [ 0, %89 ], [ %154, %152 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %123
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #8
  %127 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %127, i64* %91, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN5blink8cssvalueL18BuildPolygonStringERKNS_8WindRuleERKN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEEE15kCommaSeparator, i64 0, i64 0), i8** %92, align 8
  store i32 2, i32* %93, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #8
  br label %128

128:                                              ; preds = %126, %123
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #8
  %129 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"* nonnull %8, i32 %124) #8
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %133, label %135

133:                                              ; preds = %128
  store i8* null, i8** %96, align 8
  %134 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %134, i64* %98, align 8
  br label %139

135:                                              ; preds = %128
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %95, align 8
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 1
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %97, align 8
  br label %139

139:                                              ; preds = %135, %133
  %140 = phi i32 [ %137, %135 ], [ 0, %133 ]
  store i32 %140, i32* %99, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 32) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #8
  %141 = or i32 %124, 1
  %142 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"* nonnull %8, i32 %141) #8
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  store i8* null, i8** %102, align 8
  %147 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %147, i64* %104, align 8
  br label %152

148:                                              ; preds = %139
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %101, align 8
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 1
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %103, align 8
  br label %152

152:                                              ; preds = %148, %146
  %153 = phi i32 [ %150, %148 ], [ 0, %146 ]
  store i32 %153, i32* %105, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #8
  %154 = add i32 %124, 2
  %155 = load i32, i32* %13, align 4
  %156 = icmp ult i32 %154, %155
  br i1 %156, label %123, label %106

157:                                              ; preds = %106, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #8
  %158 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %159 = icmp eq %"class.WTF::String"* %158, null
  br i1 %159, label %193, label %160, !prof !2

160:                                              ; preds = %157
  %161 = bitcast %"class.WTF::String"* %158 to i8*
  %162 = load i32, i32* %13, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %191, label %164, !prof !3

164:                                              ; preds = %160
  %165 = zext i32 %162 to i64
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %158, i64 %165
  br label %167

167:                                              ; preds = %185, %164
  %168 = phi %"class.WTF::String"* [ %186, %185 ], [ %158, %164 ]
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %168, i64 0, i32 0, i32 0
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #8
  br label %185

185:                                              ; preds = %184, %181, %167
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %168, i64 1
  %187 = icmp eq %"class.WTF::String"* %186, %166
  br i1 %187, label %188, label %167

188:                                              ; preds = %185
  store i32 0, i32* %13, align 4
  %189 = bitcast %"class.WTF::Vector.187"* %8 to i8**
  %190 = load i8*, i8** %189, align 8
  br label %191

191:                                              ; preds = %188, %160
  %192 = phi i8* [ %190, %188 ], [ %161, %160 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %192) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %11, align 8
  br label %193

193:                                              ; preds = %157, %191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret %"class.WTF::StringImpl"* %107

194:                                              ; preds = %28, %228
  %195 = phi i32 [ 0, %28 ], [ %229, %228 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %196 = call dereferenceable(8) %"class.blink::Member.184"* @_ZNK3WTF6VectorIN5blink6MemberINS1_17CSSPrimitiveValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"* %14, i32 %195)
  %197 = getelementptr inbounds %"class.blink::Member.184", %"class.blink::Member.184"* %196, i64 0, i32 0, i32 0
  %198 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %198, i64 0, i32 0
  %200 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %199) #8
  store %"class.WTF::StringImpl"* %200, %"class.WTF::StringImpl"** %30, align 8
  %201 = load i32, i32* %13, align 4
  %202 = load i32, i32* %12, align 8
  %203 = icmp eq i32 %201, %202
  br i1 %203, label %212, label %204, !prof !3

204:                                              ; preds = %194
  %205 = ptrtoint %"class.WTF::StringImpl"* %200 to i64
  %206 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %207 = zext i32 %201 to i64
  %208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %206, i64 %207
  %209 = bitcast %"class.WTF::String"* %208 to i64*
  store i64 %205, i64* %209, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %30, align 8
  %210 = load i32, i32* %13, align 4
  %211 = add i32 %210, 1
  store i32 %211, i32* %13, align 4
  br label %228

212:                                              ; preds = %194
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.187"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #8
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #8
  br label %228

228:                                              ; preds = %204, %212, %224, %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  %229 = add nuw i32 %195, 1
  %230 = load i32, i32* %15, align 4
  %231 = icmp ult i32 %229, %230
  br i1 %231, label %194, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.184"* @_ZNK3WTF6VectorIN5blink6MemberINS1_17CSSPrimitiveValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.184"*, %"class.blink::Member.184"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.184", %"class.blink::Member.184"* %24, i64 %25
  ret %"class.blink::Member.184"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8cssvalue25CSSBasicShapePolygonValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapePolygonValue"*, %"class.blink::cssvalue::CSSBasicShapePolygonValue"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapePolygonValue", %"class.blink::cssvalue::CSSBasicShapePolygonValue"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapePolygonValue", %"class.blink::cssvalue::CSSBasicShapePolygonValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapePolygonValue", %"class.blink::cssvalue::CSSBasicShapePolygonValue"* %1, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapePolygonValue", %"class.blink::cssvalue::CSSBasicShapePolygonValue"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %5, %8
  br i1 %9, label %10, label %32

10:                                               ; preds = %2
  %11 = icmp eq i32 %5, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %10, %29
  %13 = phi i32 [ %30, %29 ], [ 0, %10 ]
  %14 = tail call dereferenceable(8) %"class.blink::Member.184"* @_ZNK3WTF6VectorIN5blink6MemberINS1_17CSSPrimitiveValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"* %3, i32 %13) #8
  %15 = tail call dereferenceable(8) %"class.blink::Member.184"* @_ZNK3WTF6VectorIN5blink6MemberINS1_17CSSPrimitiveValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"* %6, i32 %13) #8
  %16 = getelementptr inbounds %"class.blink::Member.184", %"class.blink::Member.184"* %14, i64 0, i32 0, i32 0
  %17 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Member.184", %"class.blink::Member.184"* %15, i64 0, i32 0, i32 0
  %19 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %18, align 8
  %20 = icmp eq %"class.blink::CSSPrimitiveValue"* %17, %19
  br i1 %20, label %29, label %21

21:                                               ; preds = %12
  %22 = icmp ne %"class.blink::CSSPrimitiveValue"* %17, null
  %23 = icmp ne %"class.blink::CSSPrimitiveValue"* %19, null
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %32

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %17, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %19, i64 0, i32 0
  %28 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %26, %"class.blink::CSSValue"* dereferenceable(3) %27) #8
  br i1 %28, label %29, label %32

29:                                               ; preds = %25, %12
  %30 = add nuw i32 %13, 1
  %31 = icmp eq i32 %30, %5
  br i1 %31, label %32, label %12

32:                                               ; preds = %21, %25, %29, %2, %10
  %33 = phi i1 [ false, %2 ], [ true, %10 ], [ false, %21 ], [ false, %25 ], [ true, %29 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8cssvalue25CSSBasicShapePolygonValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapePolygonValue"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapePolygonValue", %"class.blink::cssvalue::CSSBasicShapePolygonValue"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #8
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSPrimitiveValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue23CSSBasicShapeInsetValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapeInsetValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca [7 x i8], align 1
  %3 = alloca i16, align 2
  %4 = alloca [6 x i8], align 1
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::Vector.187", align 8
  %15 = alloca %"class.WTF::Vector.187", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.WTF::String", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.WTF::String", align 8
  %31 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %35 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %37 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %39 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %41 = bitcast %"class.WTF::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %43 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %44, align 8
  %45 = bitcast %"class.WTF::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 5, i32 0, i32 0
  %48 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %47, align 8
  %49 = icmp eq %"class.blink::CSSValuePair"* %48, null
  br i1 %49, label %61, label %50

50:                                               ; preds = %1
  %51 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %48, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %51, align 8
  %53 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %52) #8
  %54 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  %55 = bitcast %"class.WTF::String"* %23 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %48, i64 0, i32 3, i32 0, i32 0
  %57 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %56, align 8
  %58 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %57) #8
  %59 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %60 = bitcast %"class.WTF::String"* %24 to i64*
  store i64 %59, i64* %60, align 8
  br label %61

61:                                               ; preds = %50, %1
  %62 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 6, i32 0, i32 0
  %63 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %62, align 8
  %64 = icmp eq %"class.blink::CSSValuePair"* %63, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %63, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %66, align 8
  %68 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %67) #8
  %69 = ptrtoint %"class.WTF::StringImpl"* %68 to i64
  %70 = bitcast %"class.WTF::String"* %25 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %63, i64 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %71, align 8
  %73 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %72) #8
  %74 = ptrtoint %"class.WTF::StringImpl"* %73 to i64
  %75 = bitcast %"class.WTF::String"* %26 to i64*
  store i64 %74, i64* %75, align 8
  br label %76

76:                                               ; preds = %65, %61
  %77 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 7, i32 0, i32 0
  %78 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %77, align 8
  %79 = icmp eq %"class.blink::CSSValuePair"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %78, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %81, align 8
  %83 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %82) #8
  %84 = ptrtoint %"class.WTF::StringImpl"* %83 to i64
  %85 = bitcast %"class.WTF::String"* %27 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %78, i64 0, i32 3, i32 0, i32 0
  %87 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %86, align 8
  %88 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %87) #8
  %89 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  %90 = bitcast %"class.WTF::String"* %28 to i64*
  store i64 %89, i64* %90, align 8
  br label %91

91:                                               ; preds = %80, %76
  %92 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 8, i32 0, i32 0
  %93 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %92, align 8
  %94 = icmp eq %"class.blink::CSSValuePair"* %93, null
  br i1 %94, label %106, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %93, i64 0, i32 2, i32 0, i32 0
  %97 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %96, align 8
  %98 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %97) #8
  %99 = ptrtoint %"class.WTF::StringImpl"* %98 to i64
  %100 = bitcast %"class.WTF::String"* %29 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %93, i64 0, i32 3, i32 0, i32 0
  %102 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %101, align 8
  %103 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %102) #8
  %104 = ptrtoint %"class.WTF::StringImpl"* %103 to i64
  %105 = bitcast %"class.WTF::String"* %30 to i64*
  store i64 %104, i64* %105, align 8
  br label %106

106:                                              ; preds = %95, %91
  %107 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 1, i32 0, i32 0
  %108 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %107, align 8
  %109 = icmp eq %"class.blink::CSSPrimitiveValue"* %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %108, i64 0, i32 0
  %112 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %111) #8
  %113 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  br label %114

114:                                              ; preds = %106, %110
  %115 = phi i64 [ %113, %110 ], [ 0, %106 ]
  %116 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %116, align 8
  %118 = icmp eq %"class.blink::CSSPrimitiveValue"* %117, null
  br i1 %118, label %123, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %117, i64 0, i32 0
  %121 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %120) #8
  %122 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  br label %123

123:                                              ; preds = %114, %119
  %124 = phi i64 [ %122, %119 ], [ 0, %114 ]
  %125 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 3, i32 0, i32 0
  %126 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %125, align 8
  %127 = icmp eq %"class.blink::CSSPrimitiveValue"* %126, null
  br i1 %127, label %132, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %126, i64 0, i32 0
  %130 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %129) #8
  %131 = ptrtoint %"class.WTF::StringImpl"* %130 to i64
  br label %132

132:                                              ; preds = %123, %128
  %133 = phi i64 [ %131, %128 ], [ 0, %123 ]
  %134 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 4, i32 0, i32 0
  %135 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %134, align 8
  %136 = icmp eq %"class.blink::CSSPrimitiveValue"* %135, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %135, i64 0, i32 0
  %139 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %138) #8
  %140 = ptrtoint %"class.WTF::StringImpl"* %139 to i64
  br label %141

141:                                              ; preds = %132, %137
  %142 = phi i64 [ %140, %137 ], [ 0, %132 ]
  %143 = getelementptr inbounds [7 x i8], [7 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %143) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %143, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @__const._ZN5blink8cssvalueL16BuildInsetStringERKN3WTF6StringES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_.opening, i64 0, i64 0), i64 7, i1 false) #8
  %144 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %144) #8
  store i16 32, i16* %3, align 2
  %145 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %145) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %145, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @__const._ZN5blink8cssvalueL16BuildInsetStringERKN3WTF6StringES4_S4_S4_S4_S4_S4_S4_S4_S4_S4_S4_.corners_separator, i64 0, i64 0), i64 6, i1 false) #8
  %146 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %146) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 -86, i64 48, i1 false) #8
  %147 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %149 = bitcast %union.anon.220* %148 to i8*
  store i8 0, i8* %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  store i32 0, i32* %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %151, align 4
  %152 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %152, align 1
  %153 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #8
  %154 = call i64 @strlen(i8* nonnull %143) #9
  %155 = icmp ult i64 %154, 4294967296
  br i1 %155, label %157, label %156, !prof !2

156:                                              ; preds = %141
  tail call void @llvm.trap() #8
  unreachable

157:                                              ; preds = %141
  %158 = trunc i64 %154 to i32
  %159 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %160 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* %143, i8** %161, align 8
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %158, i32* %162, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #8
  %163 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #8
  %164 = inttoptr i64 %115 to %"class.WTF::StringImpl"*
  %165 = icmp eq i64 %115, 0
  br i1 %165, label %166, label %170

166:                                              ; preds = %157
  %167 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %167, align 8
  %168 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %169 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %168, i64* %169, align 8
  br label %177

170:                                              ; preds = %157
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %164, %"class.WTF::StringImpl"** %171, align 8
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 1
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %176 = bitcast i8** %175 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %174, %"class.WTF::StringImpl"** %176, align 8
  br label %177

177:                                              ; preds = %170, %166
  %178 = phi i32 [ %173, %170 ], [ 0, %166 ]
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %178, i32* %179, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #8
  %180 = inttoptr i64 %142 to %"class.WTF::StringImpl"*
  %181 = icmp eq i64 %142, 0
  br i1 %181, label %186, label %182

182:                                              ; preds = %177
  %183 = inttoptr i64 %124 to %"class.WTF::StringImpl"*
  %184 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %180, %"class.WTF::StringImpl"* %183) #8
  %185 = xor i1 %184, true
  br label %186

186:                                              ; preds = %182, %177
  %187 = phi i1 [ false, %177 ], [ %185, %182 ]
  %188 = inttoptr i64 %133 to %"class.WTF::StringImpl"*
  %189 = icmp eq i64 %133, 0
  br i1 %189, label %194, label %190

190:                                              ; preds = %186
  %191 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %188, %"class.WTF::StringImpl"* %164) #8
  %192 = xor i1 %191, true
  %193 = or i1 %187, %192
  br label %194

194:                                              ; preds = %190, %186
  %195 = phi i1 [ false, %186 ], [ %193, %190 ]
  %196 = inttoptr i64 %124 to %"class.WTF::StringImpl"*
  %197 = icmp eq i64 %124, 0
  br i1 %197, label %222, label %198

198:                                              ; preds = %194
  %199 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %196, %"class.WTF::StringImpl"* %164) #8
  %200 = xor i1 %199, true
  %201 = or i1 %195, %200
  br i1 %201, label %202, label %222

202:                                              ; preds = %198
  %203 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #8
  %204 = call i64 @strlen(i8* nonnull %144) #9
  %205 = icmp ult i64 %204, 4294967296
  br i1 %205, label %207, label %206, !prof !2

206:                                              ; preds = %202
  call void @llvm.trap() #8
  unreachable

207:                                              ; preds = %202
  %208 = trunc i64 %204 to i32
  %209 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %210 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %209, i64* %210, align 8
  %211 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %212 = bitcast i8** %211 to i16**
  store i16* %3, i16** %212, align 8
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %208, i32* %213, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #8
  %214 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #8
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %196, %"class.WTF::StringImpl"** %215, align 8
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 1
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %220 = bitcast i8** %219 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %218, %"class.WTF::StringImpl"** %220, align 8
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %217, i32* %221, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #8
  br label %222

222:                                              ; preds = %207, %198, %194
  br i1 %195, label %223, label %250

223:                                              ; preds = %222
  %224 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #8
  %225 = call i64 @strlen(i8* nonnull %144) #9
  %226 = icmp ult i64 %225, 4294967296
  br i1 %226, label %228, label %227, !prof !2

227:                                              ; preds = %223
  call void @llvm.trap() #8
  unreachable

228:                                              ; preds = %223
  %229 = trunc i64 %225 to i32
  %230 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %231 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %233 = bitcast i8** %232 to i16**
  store i16* %3, i16** %233, align 8
  %234 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %229, i32* %234, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #8
  %235 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #8
  br i1 %189, label %236, label %240

236:                                              ; preds = %228
  %237 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %237, align 8
  %238 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %239 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %238, i64* %239, align 8
  br label %247

240:                                              ; preds = %228
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %188, %"class.WTF::StringImpl"** %241, align 8
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 1
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %246 = bitcast i8** %245 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"** %246, align 8
  br label %247

247:                                              ; preds = %240, %236
  %248 = phi i32 [ %243, %240 ], [ 0, %236 ]
  %249 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %248, i32* %249, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235) #8
  br label %250

250:                                              ; preds = %247, %222
  br i1 %187, label %251, label %278

251:                                              ; preds = %250
  %252 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #8
  %253 = call i64 @strlen(i8* nonnull %144) #9
  %254 = icmp ult i64 %253, 4294967296
  br i1 %254, label %256, label %255, !prof !2

255:                                              ; preds = %251
  call void @llvm.trap() #8
  unreachable

256:                                              ; preds = %251
  %257 = trunc i64 %253 to i32
  %258 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %259 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %261 = bitcast i8** %260 to i16**
  store i16* %3, i16** %261, align 8
  %262 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %257, i32* %262, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %252) #8
  %263 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %263) #8
  br i1 %181, label %264, label %268

264:                                              ; preds = %256
  %265 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %265, align 8
  %266 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %267 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %266, i64* %267, align 8
  br label %275

268:                                              ; preds = %256
  %269 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %269, align 8
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 1
  %271 = load i32, i32* %270, align 4
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 1
  %273 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %274 = bitcast i8** %273 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %272, %"class.WTF::StringImpl"** %274, align 8
  br label %275

275:                                              ; preds = %268, %264
  %276 = phi i32 [ %271, %268 ], [ 0, %264 ]
  %277 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %276, i32* %277, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #8
  br label %278

278:                                              ; preds = %275, %250
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  %283 = or i1 %280, %282
  br i1 %283, label %498, label %284

284:                                              ; preds = %278
  %285 = bitcast %"class.WTF::Vector.187"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %285) #8
  %286 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %14, i64 0, i32 0, i32 0, i32 0
  %287 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %14, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %285, i8 0, i64 16, i1 false) #8
  %288 = call fastcc zeroext i1 @_ZN5blink8cssvalueL15BuildInsetRadiiERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERKS3_S8_S8_S8_(%"class.WTF::Vector.187"* nonnull dereferenceable(16) %14, %"class.WTF::String"* nonnull dereferenceable(8) %23, %"class.WTF::String"* nonnull dereferenceable(8) %25, %"class.WTF::String"* nonnull dereferenceable(8) %27, %"class.WTF::String"* nonnull dereferenceable(8) %29) #8
  %289 = bitcast %"class.WTF::Vector.187"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %289) #8
  %290 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %15, i64 0, i32 0, i32 0, i32 0
  %291 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %15, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 0, i64 16, i1 false) #8
  %292 = call fastcc zeroext i1 @_ZN5blink8cssvalueL15BuildInsetRadiiERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERKS3_S8_S8_S8_(%"class.WTF::Vector.187"* nonnull dereferenceable(16) %15, %"class.WTF::String"* nonnull dereferenceable(8) %24, %"class.WTF::String"* nonnull dereferenceable(8) %26, %"class.WTF::String"* nonnull dereferenceable(8) %28, %"class.WTF::String"* nonnull dereferenceable(8) %30) #8
  %293 = and i1 %288, %292
  br i1 %293, label %425, label %294

294:                                              ; preds = %284
  %295 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %295) #8
  %296 = call i64 @strlen(i8* nonnull %144) #9
  %297 = icmp ult i64 %296, 4294967296
  br i1 %297, label %299, label %298, !prof !2

298:                                              ; preds = %294
  call void @llvm.trap() #8
  unreachable

299:                                              ; preds = %294
  %300 = trunc i64 %296 to i32
  %301 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %302 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %301, i64* %302, align 8
  %303 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %304 = bitcast i8** %303 to i16**
  store i16* %3, i16** %304, align 8
  %305 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %300, i32* %305, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %295) #8
  %306 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %306) #8
  %307 = call i64 @strlen(i8* nonnull %145) #9
  %308 = icmp ult i64 %307, 4294967296
  br i1 %308, label %310, label %309, !prof !2

309:                                              ; preds = %299
  call void @llvm.trap() #8
  unreachable

310:                                              ; preds = %299
  %311 = trunc i64 %307 to i32
  %312 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %313 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %312, i64* %313, align 8
  %314 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* %145, i8** %314, align 8
  %315 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %311, i32* %315, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %306) #8
  %316 = load i32, i32* %287, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %330, label %318

318:                                              ; preds = %310
  %319 = bitcast %"class.WTF::StringView"* %18 to i8*
  %320 = bitcast %"class.WTF::StringView"* %18 to i64*
  %321 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %322 = bitcast i8** %321 to i16**
  %323 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  %324 = bitcast %"class.WTF::StringView"* %19 to i8*
  %325 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 0
  %326 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %327 = bitcast i8** %326 to %"class.WTF::StringImpl"**
  %328 = bitcast %"class.WTF::StringView"* %19 to i64*
  %329 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  br label %353

330:                                              ; preds = %371, %310
  %331 = phi i32 [ 0, %310 ], [ %374, %371 ]
  %332 = load i32, i32* %291, align 4
  %333 = icmp eq i32 %331, %332
  br i1 %333, label %334, label %376

334:                                              ; preds = %330
  %335 = icmp eq i32 %331, 0
  br i1 %335, label %425, label %336

336:                                              ; preds = %334
  %337 = load %"class.WTF::String"*, %"class.WTF::String"** %286, align 8
  %338 = load %"class.WTF::String"*, %"class.WTF::String"** %290, align 8
  %339 = zext i32 %331 to i64
  %340 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %337, i64 %339
  br label %341

341:                                              ; preds = %349, %336
  %342 = phi %"class.WTF::String"* [ %351, %349 ], [ %338, %336 ]
  %343 = phi %"class.WTF::String"* [ %350, %349 ], [ %337, %336 ]
  %344 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %343, i64 0, i32 0, i32 0
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %344, align 8
  %346 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %342, i64 0, i32 0, i32 0
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %346, align 8
  %348 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %345, %"class.WTF::StringImpl"* %347) #8
  br i1 %348, label %349, label %376

349:                                              ; preds = %341
  %350 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %343, i64 1
  %351 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %342, i64 1
  %352 = icmp eq %"class.WTF::String"* %350, %340
  br i1 %352, label %425, label %341

353:                                              ; preds = %371, %318
  %354 = phi i32 [ 0, %318 ], [ %373, %371 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #8
  %355 = call i64 @strlen(i8* nonnull %144) #9
  %356 = icmp ult i64 %355, 4294967296
  br i1 %356, label %358, label %357, !prof !2

357:                                              ; preds = %353
  call void @llvm.trap() #8
  unreachable

358:                                              ; preds = %353
  %359 = trunc i64 %355 to i32
  %360 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %360, i64* %320, align 8
  store i16* %3, i16** %322, align 8
  store i32 %359, i32* %323, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %324) #8
  %361 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"* nonnull %14, i32 %354) #8
  %362 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %361, i64 0, i32 0, i32 0
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %363, null
  br i1 %364, label %365, label %367

365:                                              ; preds = %358
  store i8* null, i8** %326, align 8
  %366 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %366, i64* %328, align 8
  br label %371

367:                                              ; preds = %358
  store %"class.WTF::StringImpl"* %363, %"class.WTF::StringImpl"** %325, align 8
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 1
  store %"class.WTF::StringImpl"* %370, %"class.WTF::StringImpl"** %327, align 8
  br label %371

371:                                              ; preds = %367, %365
  %372 = phi i32 [ %369, %367 ], [ 0, %365 ]
  store i32 %372, i32* %329, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %19) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %324) #8
  %373 = add nuw i32 %354, 1
  %374 = load i32, i32* %287, align 4
  %375 = icmp ult i32 %373, %374
  br i1 %375, label %353, label %330

376:                                              ; preds = %341, %330
  %377 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %377) #8
  %378 = call i64 @strlen(i8* nonnull %144) #9
  %379 = icmp ult i64 %378, 4294967296
  br i1 %379, label %381, label %380, !prof !2

380:                                              ; preds = %376
  call void @llvm.trap() #8
  unreachable

381:                                              ; preds = %376
  %382 = trunc i64 %378 to i32
  %383 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %384 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %383, i64* %384, align 8
  %385 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  %386 = bitcast i8** %385 to i16**
  store i16* %3, i16** %386, align 8
  %387 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 %382, i32* %387, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %20) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %377) #8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 47) #8
  %388 = load i32, i32* %291, align 4
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %425, label %390

390:                                              ; preds = %381
  %391 = bitcast %"class.WTF::StringView"* %21 to i8*
  %392 = bitcast %"class.WTF::StringView"* %21 to i64*
  %393 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  %394 = bitcast i8** %393 to i16**
  %395 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  %396 = bitcast %"class.WTF::StringView"* %22 to i8*
  %397 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 0
  %398 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  %399 = bitcast i8** %398 to %"class.WTF::StringImpl"**
  %400 = bitcast %"class.WTF::StringView"* %22 to i64*
  %401 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  br label %402

402:                                              ; preds = %420, %390
  %403 = phi i32 [ 0, %390 ], [ %422, %420 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %391) #8
  %404 = call i64 @strlen(i8* nonnull %144) #9
  %405 = icmp ult i64 %404, 4294967296
  br i1 %405, label %407, label %406, !prof !2

406:                                              ; preds = %402
  call void @llvm.trap() #8
  unreachable

407:                                              ; preds = %402
  %408 = trunc i64 %404 to i32
  %409 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %409, i64* %392, align 8
  store i16* %3, i16** %394, align 8
  store i32 %408, i32* %395, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %21) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %391) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %396) #8
  %410 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"* nonnull %15, i32 %403) #8
  %411 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %410, i64 0, i32 0, i32 0
  %412 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %411, align 8
  %413 = icmp eq %"class.WTF::StringImpl"* %412, null
  br i1 %413, label %414, label %416

414:                                              ; preds = %407
  store i8* null, i8** %398, align 8
  %415 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %415, i64* %400, align 8
  br label %420

416:                                              ; preds = %407
  store %"class.WTF::StringImpl"* %412, %"class.WTF::StringImpl"** %397, align 8
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 1
  %418 = load i32, i32* %417, align 4
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 1
  store %"class.WTF::StringImpl"* %419, %"class.WTF::StringImpl"** %399, align 8
  br label %420

420:                                              ; preds = %416, %414
  %421 = phi i32 [ %418, %416 ], [ 0, %414 ]
  store i32 %421, i32* %401, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %22) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %396) #8
  %422 = add nuw i32 %403, 1
  %423 = load i32, i32* %291, align 4
  %424 = icmp ult i32 %422, %423
  br i1 %424, label %402, label %425

425:                                              ; preds = %349, %420, %381, %334, %284
  %426 = load %"class.WTF::String"*, %"class.WTF::String"** %290, align 8
  %427 = icmp eq %"class.WTF::String"* %426, null
  br i1 %427, label %461, label %428, !prof !2

428:                                              ; preds = %425
  %429 = bitcast %"class.WTF::String"* %426 to i8*
  %430 = load i32, i32* %291, align 4
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %459, label %432, !prof !3

432:                                              ; preds = %428
  %433 = zext i32 %430 to i64
  %434 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %426, i64 %433
  br label %435

435:                                              ; preds = %453, %432
  %436 = phi %"class.WTF::String"* [ %454, %453 ], [ %426, %432 ]
  %437 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %436, i64 0, i32 0, i32 0
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %439, label %453, label %440

440:                                              ; preds = %435
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 0
  %446 = load i32, i32* %445, align 4
  br i1 %444, label %447, label %449

447:                                              ; preds = %440
  %448 = add i32 %446, -1
  store i32 %448, i32* %445, align 4
  br label %449

449:                                              ; preds = %447, %440
  %450 = phi i32 [ %448, %447 ], [ %446, %440 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %438) #8
  br label %453

453:                                              ; preds = %452, %449, %435
  %454 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %436, i64 1
  %455 = icmp eq %"class.WTF::String"* %454, %434
  br i1 %455, label %456, label %435

456:                                              ; preds = %453
  store i32 0, i32* %291, align 4
  %457 = bitcast %"class.WTF::Vector.187"* %15 to i8**
  %458 = load i8*, i8** %457, align 8
  br label %459

459:                                              ; preds = %456, %428
  %460 = phi i8* [ %458, %456 ], [ %429, %428 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %460) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %290, align 8
  br label %461

461:                                              ; preds = %459, %425
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %289) #8
  %462 = load %"class.WTF::String"*, %"class.WTF::String"** %286, align 8
  %463 = icmp eq %"class.WTF::String"* %462, null
  br i1 %463, label %497, label %464, !prof !2

464:                                              ; preds = %461
  %465 = bitcast %"class.WTF::String"* %462 to i8*
  %466 = load i32, i32* %287, align 4
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %495, label %468, !prof !3

468:                                              ; preds = %464
  %469 = zext i32 %466 to i64
  %470 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %462, i64 %469
  br label %471

471:                                              ; preds = %489, %468
  %472 = phi %"class.WTF::String"* [ %490, %489 ], [ %462, %468 ]
  %473 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %472, i64 0, i32 0, i32 0
  %474 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %473, align 8
  %475 = icmp eq %"class.WTF::StringImpl"* %474, null
  br i1 %475, label %489, label %476

476:                                              ; preds = %471
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = load atomic i32, i32* %477 monotonic, align 4
  %479 = and i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 0
  %482 = load i32, i32* %481, align 4
  br i1 %480, label %483, label %485

483:                                              ; preds = %476
  %484 = add i32 %482, -1
  store i32 %484, i32* %481, align 4
  br label %485

485:                                              ; preds = %483, %476
  %486 = phi i32 [ %484, %483 ], [ %482, %476 ]
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %489

488:                                              ; preds = %485
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %474) #8
  br label %489

489:                                              ; preds = %488, %485, %471
  %490 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %472, i64 1
  %491 = icmp eq %"class.WTF::String"* %490, %470
  br i1 %491, label %492, label %471

492:                                              ; preds = %489
  store i32 0, i32* %287, align 4
  %493 = bitcast %"class.WTF::Vector.187"* %14 to i8**
  %494 = load i8*, i8** %493, align 8
  br label %495

495:                                              ; preds = %492, %464
  %496 = phi i8* [ %494, %492 ], [ %465, %464 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %496) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %286, align 8
  br label %497

497:                                              ; preds = %495, %461
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %285) #8
  br label %498

498:                                              ; preds = %497, %278
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 41) #8
  %499 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #8
  %500 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %501 = icmp eq %"class.WTF::StringImpl"* %500, null
  br i1 %501, label %515, label %502

502:                                              ; preds = %498
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %500, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load atomic i32, i32* %503 monotonic, align 4
  %505 = and i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %500, i64 0, i32 0
  %508 = load i32, i32* %507, align 4
  br i1 %506, label %509, label %511

509:                                              ; preds = %502
  %510 = add i32 %508, -1
  store i32 %510, i32* %507, align 4
  br label %511

511:                                              ; preds = %509, %502
  %512 = phi i32 [ %510, %509 ], [ %508, %502 ]
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %511
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %500) #8
  br label %515

515:                                              ; preds = %498, %511, %514
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %146) #8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %145) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %144) #8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %143) #8
  br i1 %181, label %529, label %516

516:                                              ; preds = %515
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = load atomic i32, i32* %517 monotonic, align 4
  %519 = and i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %522 = load i32, i32* %521, align 4
  br i1 %520, label %523, label %525

523:                                              ; preds = %516
  %524 = add i32 %522, -1
  store i32 %524, i32* %521, align 4
  br label %525

525:                                              ; preds = %523, %516
  %526 = phi i32 [ %524, %523 ], [ %522, %516 ]
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %528, label %529

528:                                              ; preds = %525
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #8
  br label %529

529:                                              ; preds = %515, %525, %528
  br i1 %189, label %543, label %530

530:                                              ; preds = %529
  %531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %532 = load atomic i32, i32* %531 monotonic, align 4
  %533 = and i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %536 = load i32, i32* %535, align 4
  br i1 %534, label %537, label %539

537:                                              ; preds = %530
  %538 = add i32 %536, -1
  store i32 %538, i32* %535, align 4
  br label %539

539:                                              ; preds = %537, %530
  %540 = phi i32 [ %538, %537 ], [ %536, %530 ]
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %543

542:                                              ; preds = %539
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #8
  br label %543

543:                                              ; preds = %529, %539, %542
  br i1 %197, label %557, label %544

544:                                              ; preds = %543
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %546 = load atomic i32, i32* %545 monotonic, align 4
  %547 = and i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %550 = load i32, i32* %549, align 4
  br i1 %548, label %551, label %553

551:                                              ; preds = %544
  %552 = add i32 %550, -1
  store i32 %552, i32* %549, align 4
  br label %553

553:                                              ; preds = %551, %544
  %554 = phi i32 [ %552, %551 ], [ %550, %544 ]
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %556, label %557

556:                                              ; preds = %553
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #8
  br label %557

557:                                              ; preds = %543, %553, %556
  br i1 %165, label %571, label %558

558:                                              ; preds = %557
  %559 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %560 = load atomic i32, i32* %559 monotonic, align 4
  %561 = and i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %564 = load i32, i32* %563, align 4
  br i1 %562, label %565, label %567

565:                                              ; preds = %558
  %566 = add i32 %564, -1
  store i32 %566, i32* %563, align 4
  br label %567

567:                                              ; preds = %565, %558
  %568 = phi i32 [ %566, %565 ], [ %564, %558 ]
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %570, label %571

570:                                              ; preds = %567
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #8
  br label %571

571:                                              ; preds = %557, %567, %570
  %572 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %573 = icmp eq %"class.WTF::StringImpl"* %572, null
  br i1 %573, label %587, label %574

574:                                              ; preds = %571
  %575 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %576 = load atomic i32, i32* %575 monotonic, align 4
  %577 = and i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 0
  %580 = load i32, i32* %579, align 4
  br i1 %578, label %581, label %583

581:                                              ; preds = %574
  %582 = add i32 %580, -1
  store i32 %582, i32* %579, align 4
  br label %583

583:                                              ; preds = %581, %574
  %584 = phi i32 [ %582, %581 ], [ %580, %574 ]
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %587

586:                                              ; preds = %583
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %572) #8
  br label %587

587:                                              ; preds = %571, %583, %586
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %588 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %589 = icmp eq %"class.WTF::StringImpl"* %588, null
  br i1 %589, label %603, label %590

590:                                              ; preds = %587
  %591 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %588, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load atomic i32, i32* %591 monotonic, align 4
  %593 = and i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %588, i64 0, i32 0
  %596 = load i32, i32* %595, align 4
  br i1 %594, label %597, label %599

597:                                              ; preds = %590
  %598 = add i32 %596, -1
  store i32 %598, i32* %595, align 4
  br label %599

599:                                              ; preds = %597, %590
  %600 = phi i32 [ %598, %597 ], [ %596, %590 ]
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %603

602:                                              ; preds = %599
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %588) #8
  br label %603

603:                                              ; preds = %587, %599, %602
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %604 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %605 = icmp eq %"class.WTF::StringImpl"* %604, null
  br i1 %605, label %619, label %606

606:                                              ; preds = %603
  %607 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %608 = load atomic i32, i32* %607 monotonic, align 4
  %609 = and i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 0
  %612 = load i32, i32* %611, align 4
  br i1 %610, label %613, label %615

613:                                              ; preds = %606
  %614 = add i32 %612, -1
  store i32 %614, i32* %611, align 4
  br label %615

615:                                              ; preds = %613, %606
  %616 = phi i32 [ %614, %613 ], [ %612, %606 ]
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %618, label %619

618:                                              ; preds = %615
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %604) #8
  br label %619

619:                                              ; preds = %603, %615, %618
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  %620 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %621 = icmp eq %"class.WTF::StringImpl"* %620, null
  br i1 %621, label %635, label %622

622:                                              ; preds = %619
  %623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %620, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %624 = load atomic i32, i32* %623 monotonic, align 4
  %625 = and i32 %624, 2
  %626 = icmp eq i32 %625, 0
  %627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %620, i64 0, i32 0
  %628 = load i32, i32* %627, align 4
  br i1 %626, label %629, label %631

629:                                              ; preds = %622
  %630 = add i32 %628, -1
  store i32 %630, i32* %627, align 4
  br label %631

631:                                              ; preds = %629, %622
  %632 = phi i32 [ %630, %629 ], [ %628, %622 ]
  %633 = icmp eq i32 %632, 0
  br i1 %633, label %634, label %635

634:                                              ; preds = %631
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %620) #8
  br label %635

635:                                              ; preds = %619, %631, %634
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  %636 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %637 = icmp eq %"class.WTF::StringImpl"* %636, null
  br i1 %637, label %651, label %638

638:                                              ; preds = %635
  %639 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %636, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %640 = load atomic i32, i32* %639 monotonic, align 4
  %641 = and i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %636, i64 0, i32 0
  %644 = load i32, i32* %643, align 4
  br i1 %642, label %645, label %647

645:                                              ; preds = %638
  %646 = add i32 %644, -1
  store i32 %646, i32* %643, align 4
  br label %647

647:                                              ; preds = %645, %638
  %648 = phi i32 [ %646, %645 ], [ %644, %638 ]
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %650, label %651

650:                                              ; preds = %647
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %636) #8
  br label %651

651:                                              ; preds = %635, %647, %650
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %652 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %653 = icmp eq %"class.WTF::StringImpl"* %652, null
  br i1 %653, label %667, label %654

654:                                              ; preds = %651
  %655 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %652, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %656 = load atomic i32, i32* %655 monotonic, align 4
  %657 = and i32 %656, 2
  %658 = icmp eq i32 %657, 0
  %659 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %652, i64 0, i32 0
  %660 = load i32, i32* %659, align 4
  br i1 %658, label %661, label %663

661:                                              ; preds = %654
  %662 = add i32 %660, -1
  store i32 %662, i32* %659, align 4
  br label %663

663:                                              ; preds = %661, %654
  %664 = phi i32 [ %662, %661 ], [ %660, %654 ]
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %667

666:                                              ; preds = %663
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %652) #8
  br label %667

667:                                              ; preds = %651, %663, %666
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %668 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %669 = icmp eq %"class.WTF::StringImpl"* %668, null
  br i1 %669, label %683, label %670

670:                                              ; preds = %667
  %671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %672 = load atomic i32, i32* %671 monotonic, align 4
  %673 = and i32 %672, 2
  %674 = icmp eq i32 %673, 0
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 0
  %676 = load i32, i32* %675, align 4
  br i1 %674, label %677, label %679

677:                                              ; preds = %670
  %678 = add i32 %676, -1
  store i32 %678, i32* %675, align 4
  br label %679

679:                                              ; preds = %677, %670
  %680 = phi i32 [ %678, %677 ], [ %676, %670 ]
  %681 = icmp eq i32 %680, 0
  br i1 %681, label %682, label %683

682:                                              ; preds = %679
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %668) #8
  br label %683

683:                                              ; preds = %667, %679, %682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %684 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %685 = icmp eq %"class.WTF::StringImpl"* %684, null
  br i1 %685, label %699, label %686

686:                                              ; preds = %683
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load atomic i32, i32* %687 monotonic, align 4
  %689 = and i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 0
  %692 = load i32, i32* %691, align 4
  br i1 %690, label %693, label %695

693:                                              ; preds = %686
  %694 = add i32 %692, -1
  store i32 %694, i32* %691, align 4
  br label %695

695:                                              ; preds = %693, %686
  %696 = phi i32 [ %694, %693 ], [ %692, %686 ]
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %698, label %699

698:                                              ; preds = %695
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %684) #8
  br label %699

699:                                              ; preds = %683, %695, %698
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  ret %"class.WTF::StringImpl"* %499
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8cssvalue23CSSBasicShapeInsetValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapeInsetValue"* nocapture readonly, %"class.blink::cssvalue::CSSBasicShapeInsetValue"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %5, align 8
  %7 = icmp eq %"class.blink::CSSPrimitiveValue"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = icmp ne %"class.blink::CSSPrimitiveValue"* %4, null
  %10 = icmp ne %"class.blink::CSSPrimitiveValue"* %6, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %114

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %6, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %13, %"class.blink::CSSValue"* dereferenceable(3) %14) #8
  br i1 %15, label %16, label %114

16:                                               ; preds = %2, %12
  %17 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %1, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %19, align 8
  %21 = icmp eq %"class.blink::CSSPrimitiveValue"* %18, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %16
  %23 = icmp ne %"class.blink::CSSPrimitiveValue"* %18, null
  %24 = icmp ne %"class.blink::CSSPrimitiveValue"* %20, null
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %114

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %18, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %20, i64 0, i32 0
  %29 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %27, %"class.blink::CSSValue"* dereferenceable(3) %28) #8
  br i1 %29, label %30, label %114

30:                                               ; preds = %16, %26
  %31 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %1, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %33, align 8
  %35 = icmp eq %"class.blink::CSSPrimitiveValue"* %32, %34
  br i1 %35, label %44, label %36

36:                                               ; preds = %30
  %37 = icmp ne %"class.blink::CSSPrimitiveValue"* %32, null
  %38 = icmp ne %"class.blink::CSSPrimitiveValue"* %34, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %114

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %32, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %34, i64 0, i32 0
  %43 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %41, %"class.blink::CSSValue"* dereferenceable(3) %42) #8
  br i1 %43, label %44, label %114

44:                                               ; preds = %30, %40
  %45 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 4, i32 0, i32 0
  %46 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %1, i64 0, i32 4, i32 0, i32 0
  %48 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %47, align 8
  %49 = icmp eq %"class.blink::CSSPrimitiveValue"* %46, %48
  br i1 %49, label %58, label %50

50:                                               ; preds = %44
  %51 = icmp ne %"class.blink::CSSPrimitiveValue"* %46, null
  %52 = icmp ne %"class.blink::CSSPrimitiveValue"* %48, null
  %53 = and i1 %51, %52
  br i1 %53, label %54, label %114

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %46, i64 0, i32 0
  %56 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %48, i64 0, i32 0
  %57 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %55, %"class.blink::CSSValue"* dereferenceable(3) %56) #8
  br i1 %57, label %58, label %114

58:                                               ; preds = %44, %54
  %59 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 5, i32 0, i32 0
  %60 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %1, i64 0, i32 5, i32 0, i32 0
  %62 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %61, align 8
  %63 = icmp eq %"class.blink::CSSValuePair"* %60, %62
  br i1 %63, label %72, label %64

64:                                               ; preds = %58
  %65 = icmp ne %"class.blink::CSSValuePair"* %60, null
  %66 = icmp ne %"class.blink::CSSValuePair"* %62, null
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %114

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %60, i64 0, i32 0
  %70 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %62, i64 0, i32 0
  %71 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %69, %"class.blink::CSSValue"* dereferenceable(3) %70) #8
  br i1 %71, label %72, label %114

72:                                               ; preds = %58, %68
  %73 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 6, i32 0, i32 0
  %74 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %1, i64 0, i32 6, i32 0, i32 0
  %76 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %75, align 8
  %77 = icmp eq %"class.blink::CSSValuePair"* %74, %76
  br i1 %77, label %86, label %78

78:                                               ; preds = %72
  %79 = icmp ne %"class.blink::CSSValuePair"* %74, null
  %80 = icmp ne %"class.blink::CSSValuePair"* %76, null
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %114

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %74, i64 0, i32 0
  %84 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %76, i64 0, i32 0
  %85 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %83, %"class.blink::CSSValue"* dereferenceable(3) %84) #8
  br i1 %85, label %86, label %114

86:                                               ; preds = %72, %82
  %87 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 7, i32 0, i32 0
  %88 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %1, i64 0, i32 7, i32 0, i32 0
  %90 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %89, align 8
  %91 = icmp eq %"class.blink::CSSValuePair"* %88, %90
  br i1 %91, label %100, label %92

92:                                               ; preds = %86
  %93 = icmp ne %"class.blink::CSSValuePair"* %88, null
  %94 = icmp ne %"class.blink::CSSValuePair"* %90, null
  %95 = and i1 %93, %94
  br i1 %95, label %96, label %114

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %88, i64 0, i32 0
  %98 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %90, i64 0, i32 0
  %99 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %97, %"class.blink::CSSValue"* dereferenceable(3) %98) #8
  br i1 %99, label %100, label %114

100:                                              ; preds = %86, %96
  %101 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 8, i32 0, i32 0
  %102 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %1, i64 0, i32 8, i32 0, i32 0
  %104 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %103, align 8
  %105 = icmp eq %"class.blink::CSSValuePair"* %102, %104
  br i1 %105, label %114, label %106

106:                                              ; preds = %100
  %107 = icmp ne %"class.blink::CSSValuePair"* %102, null
  %108 = icmp ne %"class.blink::CSSValuePair"* %104, null
  %109 = and i1 %107, %108
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %102, i64 0, i32 0
  %112 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %104, i64 0, i32 0
  %113 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %111, %"class.blink::CSSValue"* dereferenceable(3) %112) #8
  br label %114

114:                                              ; preds = %92, %78, %64, %50, %36, %22, %8, %110, %106, %100, %96, %82, %68, %54, %40, %26, %12
  %115 = phi i1 [ false, %96 ], [ false, %82 ], [ false, %68 ], [ false, %54 ], [ false, %40 ], [ false, %26 ], [ false, %12 ], [ %113, %110 ], [ true, %100 ], [ false, %106 ], [ false, %8 ], [ false, %22 ], [ false, %36 ], [ false, %50 ], [ false, %64 ], [ false, %78 ], [ false, %92 ]
  ret i1 %115
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8cssvalue23CSSBasicShapeInsetValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapeInsetValue"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.184"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSPrimitiveValue"*
  %9 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CSSPrimitiveValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 2
  %16 = bitcast %"class.blink::Member.184"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to %"class.blink::CSSPrimitiveValue"*
  %21 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %20, i64 0, i32 0, i32 0
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, i64 5
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* %21, i8* %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CSSPrimitiveValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %26

26:                                               ; preds = %14, %19
  %27 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 3
  %28 = bitcast %"class.blink::Member.184"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %29 to %"class.blink::CSSPrimitiveValue"*
  %33 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %32, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8* %33, i8* %33, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CSSPrimitiveValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %26, %31
  %39 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 4
  %40 = bitcast %"class.blink::Member.184"* %39 to i64*
  %41 = load atomic i64, i64* %40 monotonic, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = inttoptr i64 %41 to %"class.blink::CSSPrimitiveValue"*
  %45 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %44, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, i64 5
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %1, i8* %45, i8* %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CSSPrimitiveValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %50

50:                                               ; preds = %38, %43
  %51 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 5
  %52 = bitcast %"class.blink::Member.192"* %51 to i64*
  %53 = load atomic i64, i64* %52 monotonic, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = inttoptr i64 %53 to %"class.blink::CSSValuePair"*
  %57 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %56, i64 0, i32 0, i32 0
  %58 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %1, i8* %57, i8* %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSValuePairEE5TraceEPNS_7VisitorEPKv) #8
  br label %62

62:                                               ; preds = %50, %55
  %63 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 6
  %64 = bitcast %"class.blink::Member.192"* %63 to i64*
  %65 = load atomic i64, i64* %64 monotonic, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %62
  %68 = inttoptr i64 %65 to %"class.blink::CSSValuePair"*
  %69 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %68, i64 0, i32 0, i32 0
  %70 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, i64 5
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, align 8
  tail call void %73(%"class.blink::Visitor"* %1, i8* %69, i8* %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSValuePairEE5TraceEPNS_7VisitorEPKv) #8
  br label %74

74:                                               ; preds = %62, %67
  %75 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 7
  %76 = bitcast %"class.blink::Member.192"* %75 to i64*
  %77 = load atomic i64, i64* %76 monotonic, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = inttoptr i64 %77 to %"class.blink::CSSValuePair"*
  %81 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %80, i64 0, i32 0, i32 0
  %82 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, i64 5
  %85 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %84, align 8
  tail call void %85(%"class.blink::Visitor"* %1, i8* %81, i8* %81, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSValuePairEE5TraceEPNS_7VisitorEPKv) #8
  br label %86

86:                                               ; preds = %74, %79
  %87 = getelementptr inbounds %"class.blink::cssvalue::CSSBasicShapeInsetValue", %"class.blink::cssvalue::CSSBasicShapeInsetValue"* %0, i64 0, i32 8
  %88 = bitcast %"class.blink::Member.192"* %87 to i64*
  %89 = load atomic i64, i64* %88 monotonic, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %86
  %92 = inttoptr i64 %89 to %"class.blink::CSSValuePair"*
  %93 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %92, i64 0, i32 0, i32 0
  %94 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %95, i64 5
  %97 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, align 8
  tail call void %97(%"class.blink::Visitor"* %1, i8* %93, i8* %93, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSValuePairEE5TraceEPNS_7VisitorEPKv) #8
  br label %98

98:                                               ; preds = %86, %91
  ret void
}

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue6IsZeroEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32) local_unnamed_addr #2

declare double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValuePairEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #8
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #8
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #8
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #8
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #8
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.220* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.220* %16 to %"class.WTF::Vector.226"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.226"* %30, i16* nonnull dereferenceable(2) %3) #8
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #8
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.221"* %41, i8* nonnull dereferenceable(1) %4) #8
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.226"*, i16* dereferenceable(2)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.226"* %0, i32 %5) #8
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.226"* %0, i32 %5) #8
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.226"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.226"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.226"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.226"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.226"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.226"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.226"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.227"* %19, i16* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #8
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.227"* %53, i16* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.226"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.227"*, i16*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.221"*, i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.221"* %0, i32 %5) #8
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.221"* %0, i32 %5) #8
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.221"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.221"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.221"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.221"* %0, i32 %27) #8
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.221"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.221"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.221"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #8
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.222"* %18, i8* nonnull %6) #8
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !2

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #8
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !2

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.222"* %46, i8* %42) #8
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.221"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.221", %"class.WTF::Vector.221"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #8
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.222"*, i8*) local_unnamed_addr #7 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #8
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink8cssvalueL15BuildInsetRadiiERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERKS3_S8_S8_S8_(%"class.WTF::Vector.187"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"* %11) #8
  br i1 %12, label %13, label %57

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %17) #8
  br i1 %18, label %19, label %57

19:                                               ; preds = %13
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %22 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %21) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %55, label %28, !prof !3

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::String"*, %"class.WTF::String"** %29, align 8
  %31 = zext i32 %24 to i64
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 %31, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #8
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #8
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %28
  %53 = load i32, i32* %23, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %23, align 4
  br label %56

55:                                               ; preds = %19
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.187"* %0, %"class.WTF::String"* dereferenceable(8) %1) #8
  br label %56

56:                                               ; preds = %52, %55
  br i1 %22, label %195, label %92

57:                                               ; preds = %13, %5
  %58 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %91, label %63, !prof !3

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::String"*, %"class.WTF::String"** %64, align 8
  %66 = zext i32 %59 to i64
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 %66, i32 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %69, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #8
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !3

85:                                               ; preds = %76
  tail call void @llvm.trap() #8
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %86, %71, %63
  %89 = load i32, i32* %58, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %58, align 4
  br label %92

91:                                               ; preds = %57
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.187"* %0, %"class.WTF::String"* dereferenceable(8) %1) #8
  br label %92

92:                                               ; preds = %56, %91, %88
  %93 = phi i1 [ false, %56 ], [ true, %88 ], [ true, %91 ]
  %94 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %126, label %99, !prof !3

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::String"*, %"class.WTF::String"** %100, align 8
  %102 = zext i32 %95 to i64
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 %102, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %105, label %123, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %123

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #8
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121, !prof !3

120:                                              ; preds = %111
  tail call void @llvm.trap() #8
  unreachable

121:                                              ; preds = %111
  %122 = trunc i33 %117 to i32
  store i32 %122, i32* %112, align 4
  br label %123

123:                                              ; preds = %121, %106, %99
  %124 = load i32, i32* %94, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %94, align 4
  br i1 %93, label %129, label %162

126:                                              ; preds = %92
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.187"* %0, %"class.WTF::String"* dereferenceable(8) %2) #8
  br i1 %93, label %127, label %162

127:                                              ; preds = %126
  %128 = load i32, i32* %94, align 4
  br label %129

129:                                              ; preds = %127, %123
  %130 = phi i32 [ %128, %127 ], [ %125, %123 ]
  %131 = load i32, i32* %96, align 8
  %132 = icmp eq i32 %130, %131
  br i1 %132, label %161, label %133, !prof !3

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::String"*, %"class.WTF::String"** %134, align 8
  %136 = zext i32 %130 to i64
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %135, i64 %136, i32 0, i32 0
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %139, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %140, label %158, label %141

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %158

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = zext i32 %148 to i33
  %150 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %149, i33 1) #8
  %151 = extractvalue { i33, i1 } %150, 1
  %152 = extractvalue { i33, i1 } %150, 0
  %153 = icmp slt i33 %152, 0
  %154 = or i1 %151, %153
  br i1 %154, label %155, label %156, !prof !3

155:                                              ; preds = %146
  tail call void @llvm.trap() #8
  unreachable

156:                                              ; preds = %146
  %157 = trunc i33 %152 to i32
  store i32 %157, i32* %147, align 4
  br label %158

158:                                              ; preds = %156, %141, %133
  %159 = load i32, i32* %94, align 4
  %160 = add i32 %159, 1
  store i32 %160, i32* %94, align 4
  br label %162

161:                                              ; preds = %129
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.187"* %0, %"class.WTF::String"* dereferenceable(8) %3) #8
  br label %162

162:                                              ; preds = %161, %158, %123, %126
  br i1 %12, label %195, label %163

163:                                              ; preds = %162
  %164 = load i32, i32* %94, align 4
  %165 = load i32, i32* %96, align 8
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %194, label %167, !prof !3

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.WTF::String"*, %"class.WTF::String"** %168, align 8
  %170 = zext i32 %164 to i64
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %169, i64 %170, i32 0, i32 0
  store %"class.WTF::StringImpl"* %171, %"class.WTF::StringImpl"** %172, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %173, label %191, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %191

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i33
  %183 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #8
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !3

188:                                              ; preds = %179
  tail call void @llvm.trap() #8
  unreachable

189:                                              ; preds = %179
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %180, align 4
  br label %191

191:                                              ; preds = %189, %174, %167
  %192 = load i32, i32* %94, align 4
  %193 = add i32 %192, 1
  store i32 %193, i32* %94, align 4
  br label %195

194:                                              ; preds = %163
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.187"* %0, %"class.WTF::String"* dereferenceable(8) %4) #8
  br label %195

195:                                              ; preds = %162, %56, %194, %191
  %196 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, 1
  br i1 %198, label %199, label %226

199:                                              ; preds = %195
  %200 = tail call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"* %0, i32 0) #8
  %201 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #8
  %202 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %200, i64 0, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %205, label %209

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %206, align 8
  %207 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %208 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %207, i64* %208, align 8
  br label %217

209:                                              ; preds = %199
  %210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %203, %"class.WTF::StringImpl"** %210, align 8
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 1
  %214 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %215 = bitcast i8** %214 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %213, %"class.WTF::StringImpl"** %215, align 8
  %216 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %217

217:                                              ; preds = %209, %205
  %218 = phi i64 [ %216, %209 ], [ %207, %205 ]
  %219 = phi i32 [ %212, %209 ], [ 0, %205 ]
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %219, i32* %220, align 8
  %221 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #8
  %222 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %218, i64* %222, align 8
  %223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8** %223, align 8
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 3, i32* %224, align 8
  %225 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #8
  br label %226

226:                                              ; preds = %217, %195
  %227 = phi i1 [ false, %195 ], [ %225, %217 ]
  ret i1 %227
}

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.187"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.187"* %0, i32 %5, %"class.WTF::String"* %1) #8
  %7 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #8
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #8
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = load i32, i32* %3, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.187"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp ugt %"class.WTF::String"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.WTF::String"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.WTF::String"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !2

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.187"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.WTF::String"* %2 to i64
  %55 = ptrtoint %"class.WTF::String"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !2

68:                                               ; preds = %53
  %69 = icmp eq %"class.WTF::String"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %70) #8
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.WTF::String"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.WTF::String"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !2

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #8
  %86 = bitcast %"class.WTF::Vector.187"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #8
  %90 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.WTF::String"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.WTF::String"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.WTF::String"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.WTF::String"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.187"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.187"* %0, i32 %5, %"class.WTF::String"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %6 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = load i32, i32* %3, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CSSPrimitiveValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.184"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.184", %"class.blink::Member.184"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.184"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSPrimitiveValue"*
  %35 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CSSPrimitiveValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17CSSPrimitiveValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12CSSValuePairEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
