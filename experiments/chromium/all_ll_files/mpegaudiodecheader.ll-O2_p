; ModuleID = '../../third_party/ffmpeg/libavcodec/mpegaudiodecheader.c'
source_filename = "../../third_party/ffmpeg/libavcodec/mpegaudiodecheader.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.MPADecodeHeader = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@avpriv_mpa_freq_tab = external local_unnamed_addr constant [3 x i16], align 2
@avpriv_mpa_bitrate_tab = external local_unnamed_addr constant [2 x [3 x [15 x i16]]], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* nocapture, i32) local_unnamed_addr #0 {
  %3 = icmp ult i32 %1, -2097152
  %4 = and i32 %1, 1572864
  %5 = icmp eq i32 %4, 524288
  %6 = or i1 %3, %5
  %7 = and i32 %1, 393216
  %8 = icmp eq i32 %7, 0
  %9 = or i1 %8, %6
  %10 = and i32 %1, 61440
  %11 = icmp eq i32 %10, 61440
  %12 = or i1 %11, %9
  %13 = and i32 %1, 3072
  %14 = icmp eq i32 %13, 3072
  %15 = or i1 %14, %12
  br i1 %15, label %90, label %16

16:                                               ; preds = %2
  %17 = and i32 %1, 1048576
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = lshr i32 %1, 19
  %21 = and i32 %20, 1
  %22 = xor i32 %21, 1
  br label %23

23:                                               ; preds = %16, %19
  %24 = phi i32 [ %22, %19 ], [ 1, %16 ]
  %25 = phi i32 [ 0, %19 ], [ 1, %16 ]
  %26 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %0, i64 0, i32 9
  store i32 %24, i32* %26, align 4
  %27 = lshr i32 %1, 17
  %28 = and i32 %27, 3
  %29 = sub nuw nsw i32 4, %28
  %30 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %0, i64 0, i32 2
  store i32 %29, i32* %30, align 4
  %31 = lshr i32 %1, 10
  %32 = and i32 %31, 3
  %33 = icmp eq i32 %32, 3
  %34 = select i1 %33, i32 0, i32 %32
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [3 x i16], [3 x i16]* @avpriv_mpa_freq_tab, i64 0, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = add nsw i32 %24, %25
  %40 = lshr i32 %38, %39
  %41 = mul nsw i32 %39, 3
  %42 = add nsw i32 %41, %34
  %43 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %0, i64 0, i32 4
  store i32 %42, i32* %43, align 4
  %44 = lshr i32 %1, 16
  %45 = and i32 %44, 1
  %46 = xor i32 %45, 1
  %47 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %0, i64 0, i32 1
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %0, i64 0, i32 3
  store i32 %40, i32* %48, align 4
  %49 = lshr i32 %1, 12
  %50 = and i32 %49, 15
  %51 = lshr i32 %1, 9
  %52 = and i32 %51, 1
  %53 = lshr i32 %1, 6
  %54 = and i32 %53, 3
  %55 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %0, i64 0, i32 7
  store i32 %54, i32* %55, align 4
  %56 = lshr i32 %1, 4
  %57 = and i32 %56, 3
  %58 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %0, i64 0, i32 8
  store i32 %57, i32* %58, align 4
  %59 = icmp eq i32 %54, 3
  %60 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %0, i64 0, i32 6
  %61 = select i1 %59, i32 1, i32 2
  store i32 %61, i32* %60, align 4
  %62 = icmp eq i32 %50, 0
  br i1 %62, label %90, label %63

63:                                               ; preds = %23
  %64 = sext i32 %24 to i64
  %65 = xor i32 %28, 3
  %66 = zext i32 %65 to i64
  %67 = zext i32 %50 to i64
  %68 = getelementptr inbounds [2 x [3 x [15 x i16]]], [2 x [3 x [15 x i16]]]* @avpriv_mpa_bitrate_tab, i64 0, i64 %64, i64 %66, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = zext i16 %69 to i32
  %71 = mul nuw nsw i32 %70, 1000
  %72 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %0, i64 0, i32 5
  store i32 %71, i32* %72, align 4
  switch i32 %29, label %82 [
    i32 1, label %73
    i32 2, label %78
  ]

73:                                               ; preds = %63
  %74 = mul nuw nsw i32 %70, 12000
  %75 = sdiv i32 %74, %40
  %76 = add nuw nsw i32 %75, %52
  %77 = shl nsw i32 %76, 2
  br label %87

78:                                               ; preds = %63
  %79 = mul nsw i32 %70, 144000
  %80 = sdiv i32 %79, %40
  %81 = add nsw i32 %80, %52
  br label %87

82:                                               ; preds = %63
  %83 = mul nsw i32 %70, 144000
  %84 = shl i32 %40, %24
  %85 = sdiv i32 %83, %84
  %86 = add nsw i32 %85, %52
  br label %87

87:                                               ; preds = %82, %78, %73
  %88 = phi i32 [ %86, %82 ], [ %81, %78 ], [ %77, %73 ]
  %89 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %0, i64 0, i32 0
  store i32 %88, i32* %89, align 4
  br label %90

90:                                               ; preds = %2, %23, %87
  %91 = phi i32 [ 0, %87 ], [ 1, %23 ], [ -1, %2 ]
  ret i32 %91
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_mpa_decode_header(i32, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #2 {
  %7 = alloca %struct.MPADecodeHeader, align 4
  %8 = bitcast %struct.MPADecodeHeader* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 40, i1 false)
  %9 = call i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* nonnull %7, i32 %0)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %7, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %16 [
    i32 1, label %14
    i32 2, label %15
  ]

14:                                               ; preds = %11
  store i32 86058, i32* %5, align 4
  br label %25

15:                                               ; preds = %11
  store i32 86016, i32* %5, align 4
  br label %25

16:                                               ; preds = %11
  %17 = load i32, i32* %5, align 4
  %18 = icmp eq i32 %17, 86029
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  store i32 86017, i32* %5, align 4
  br label %20

20:                                               ; preds = %16, %19
  %21 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %7, i64 0, i32 9
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %23, i32 1152, i32 576
  br label %25

25:                                               ; preds = %20, %15, %14
  %26 = phi i32 [ 1152, %15 ], [ 384, %14 ], [ %24, %20 ]
  store i32 %26, i32* %3, align 4
  %27 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %7, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %1, align 4
  %29 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %7, i64 0, i32 6
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %2, align 4
  %31 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %7, i64 0, i32 5
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %4, align 4
  %33 = getelementptr inbounds %struct.MPADecodeHeader, %struct.MPADecodeHeader* %7, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %6, %25
  %36 = phi i32 [ %34, %25 ], [ -1, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #3
  ret i32 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
