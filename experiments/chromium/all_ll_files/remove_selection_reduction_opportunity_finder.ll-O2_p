; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/reduce/remove_selection_reduction_opportunity_finder.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/reduce/remove_selection_reduction_opportunity_finder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.spvtools::reduce::RemoveSelectionReductionOpportunityFinder" = type { %"class.spvtools::reduce::ReductionOpportunityFinder" }
%"class.spvtools::reduce::ReductionOpportunityFinder" = type { i32 (...)** }
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"class.std::__1::unique_ptr.917"*, %"class.std::__1::unique_ptr.917"*, %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.spvtools::reduce::ReductionOpportunity"* }
%"class.spvtools::reduce::ReductionOpportunity" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"class.std::__1::unique_ptr.917"* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.157", %"class.std::__1::unordered_map.178", %"class.std::__1::unordered_map.206", i32, [4 x i8], %"class.std::__1::unordered_map.230", %"class.std::__1::unordered_map.254", %"class.std::__1::unique_ptr.278", %"class.std::__1::map", %"class.std::__1::map.369", %"class.std::__1::unordered_map.378", %"class.std::__1::unique_ptr.405", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.598", %"class.std::__1::unique_ptr.628", %"class.std::__1::unique_ptr.643", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.878", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.26", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.31", %"class.std::__1::vector.19", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.19", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.14" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.3" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::vector.6"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.33"*, %"class.std::__1::unique_ptr.33"*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.26", %"class.std::__1::vector.36", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.43", %"class.std::__1::unique_ptr.26", %"class.std::__1::vector.36" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.26", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::unique_ptr.45"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.std::__1::unique_ptr.26"*, %"class.std::__1::unique_ptr.26"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::unique_ptr.26"* }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.std::__1::unique_ptr.33"* }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.96" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.70", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.86", [4 x i8] }>
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72", %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i64 }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::unordered_map.96" = type { %"class.std::__1::__hash_table.97" }
%"class.std::__1::__hash_table.97" = type <{ %"class.std::__1::unique_ptr.98", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.118", [4 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base.101"** }
%"struct.std::__1::__hash_node_base.101" = type { %"struct.std::__1::__hash_node_base.101"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator.103" }
%"class.std::__1::__bucket_list_deallocator.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base.101" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.130", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.130" = type { %"class.std::__1::__hash_table.131" }
%"class.std::__1::__hash_table.131" = type <{ %"class.std::__1::unique_ptr.132", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134", %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::__hash_node_base.135"** }
%"struct.std::__1::__hash_node_base.135" = type { %"struct.std::__1::__hash_node_base.135"* }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.std::__1::__bucket_list_deallocator.137" }
%"class.std::__1::__bucket_list_deallocator.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base.135" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.174", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::set.163"* }
%"class.std::__1::set.163" = type { %"class.std::__1::__tree.164" }
%"class.std::__1::__tree.164" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.165", %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.spvtools::EnumSet.174" = type { i64, %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unordered_map.178" = type { %"class.std::__1::__hash_table.179" }
%"class.std::__1::__hash_table.179" = type <{ %"class.std::__1::unique_ptr.180", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.200", [4 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182", %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base.183"** }
%"struct.std::__1::__hash_node_base.183" = type { %"struct.std::__1::__hash_node_base.183"* }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.std::__1::__bucket_list_deallocator.185" }
%"class.std::__1::__bucket_list_deallocator.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.std::__1::__hash_node_base.183" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unordered_map.206" = type { %"class.std::__1::__hash_table.207" }
%"class.std::__1::__hash_table.207" = type <{ %"class.std::__1::unique_ptr.208", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.226", [4 x i8] }>
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210", %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::__hash_node_base.211"** }
%"struct.std::__1::__hash_node_base.211" = type { %"struct.std::__1::__hash_node_base.211"* }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.std::__1::__bucket_list_deallocator.213" }
%"class.std::__1::__bucket_list_deallocator.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::__hash_node_base.211" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unordered_map.254" = type { %"class.std::__1::__hash_table.255" }
%"class.std::__1::__hash_table.255" = type <{ %"class.std::__1::unique_ptr.256", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.274", [4 x i8] }>
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258", %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.259"** }
%"struct.std::__1::__hash_node_base.259" = type { %"struct.std::__1::__hash_node_base.259"* }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.std::__1::__bucket_list_deallocator.261" }
%"class.std::__1::__bucket_list_deallocator.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base.259" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.281", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.309", %"class.std::__1::unordered_map.333" }
%"class.std::__1::unordered_map.281" = type { %"class.std::__1::__hash_table.282" }
%"class.std::__1::__hash_table.282" = type <{ %"class.std::__1::unique_ptr.283", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", %"class.std::__1::__compressed_pair.303", [4 x i8] }>
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285", %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base.286"** }
%"struct.std::__1::__hash_node_base.286" = type { %"struct.std::__1::__hash_node_base.286"* }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.std::__1::__bucket_list_deallocator.288" }
%"class.std::__1::__bucket_list_deallocator.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base.286" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unordered_map.309" = type { %"class.std::__1::__hash_table.310" }
%"class.std::__1::__hash_table.310" = type <{ %"class.std::__1::unique_ptr.311", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.326", %"class.std::__1::__compressed_pair.329", [4 x i8] }>
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313", %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.std::__1::__hash_node_base.314"** }
%"struct.std::__1::__hash_node_base.314" = type { %"struct.std::__1::__hash_node_base.314"* }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.std::__1::__bucket_list_deallocator.316" }
%"class.std::__1::__bucket_list_deallocator.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::__hash_node_base.314" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unordered_map.333" = type { %"class.std::__1::__hash_table.334" }
%"class.std::__1::__hash_table.334" = type <{ %"class.std::__1::unique_ptr.335", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.350", %"class.std::__1::__compressed_pair.353", [4 x i8] }>
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337", %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.std::__1::__hash_node_base.338"** }
%"struct.std::__1::__hash_node_base.338" = type { %"struct.std::__1::__hash_node_base.338"* }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.std::__1::__bucket_list_deallocator.340" }
%"class.std::__1::__bucket_list_deallocator.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"struct.std::__1::__hash_node_base.338" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.360" }
%"class.std::__1::__tree.360" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::map.369" = type { %"class.std::__1::__tree.370" }
%"class.std::__1::__tree.370" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.371", %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::unordered_map.378" = type { %"class.std::__1::__hash_table.379" }
%"class.std::__1::__hash_table.379" = type <{ %"class.std::__1::unique_ptr.380", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.400", [4 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.383"** }
%"struct.std::__1::__hash_node_base.383" = type { %"struct.std::__1::__hash_node_base.383"* }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__bucket_list_deallocator.385" }
%"class.std::__1::__bucket_list_deallocator.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.383" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.408", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.463" }
%"class.std::__1::unordered_map.408" = type { %"class.std::__1::__hash_table.409" }
%"class.std::__1::__hash_table.409" = type <{ %"class.std::__1::unique_ptr.410", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.428", [4 x i8] }>
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412", %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.std::__1::__hash_node_base.413"** }
%"struct.std::__1::__hash_node_base.413" = type { %"struct.std::__1::__hash_node_base.413"* }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.std::__1::__bucket_list_deallocator.415" }
%"class.std::__1::__bucket_list_deallocator.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.std::__1::__hash_node_base.413" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.432" }
%"class.std::__1::__tree.432" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.433", %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.442" }
%"class.std::__1::__hash_table.442" = type <{ %"class.std::__1::unique_ptr.443", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.458", %"class.std::__1::__compressed_pair.460", [4 x i8] }>
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445", %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.std::__1::__hash_node_base.446"** }
%"struct.std::__1::__hash_node_base.446" = type { %"struct.std::__1::__hash_node_base.446"* }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.std::__1::__bucket_list_deallocator.448" }
%"class.std::__1::__bucket_list_deallocator.448" = type { %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.std::__1::__hash_node_base.446" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::unique_ptr.465"*, %"class.std::__1::unique_ptr.465"*, %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.468", i32, [4 x i8] }>
%"class.std::__1::vector.468" = type { %"class.std::__1::__vector_base.469" }
%"class.std::__1::__vector_base.469" = type { %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"*, %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.std::__1::unique_ptr.465"* }
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.488", %"class.std::__1::unordered_map.512", %"class.std::__1::unordered_set.536", %"class.std::__1::vector.558", %"class.std::__1::unordered_map.488", %"class.std::__1::unordered_map.571" }
%"class.std::__1::unordered_map.512" = type { %"class.std::__1::__hash_table.513" }
%"class.std::__1::__hash_table.513" = type <{ %"class.std::__1::unique_ptr.514", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.529", %"class.std::__1::__compressed_pair.532", [4 x i8] }>
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516", %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.517"** }
%"struct.std::__1::__hash_node_base.517" = type { %"struct.std::__1::__hash_node_base.517"* }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.std::__1::__bucket_list_deallocator.519" }
%"class.std::__1::__bucket_list_deallocator.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"struct.std::__1::__hash_node_base.517" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unordered_set.536" = type { %"class.std::__1::__hash_table.537" }
%"class.std::__1::__hash_table.537" = type <{ %"class.std::__1::unique_ptr.538", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.555", [4 x i8] }>
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540", %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"struct.std::__1::__hash_node_base.541"** }
%"struct.std::__1::__hash_node_base.541" = type { %"struct.std::__1::__hash_node_base.541"* }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.std::__1::__bucket_list_deallocator.543" }
%"class.std::__1::__bucket_list_deallocator.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"struct.std::__1::__hash_node_base.541" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::vector.558" = type { %"class.std::__1::__vector_base.559" }
%"class.std::__1::__vector_base.559" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.566" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.560" }
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.488" = type { %"class.std::__1::__hash_table.489" }
%"class.std::__1::__hash_table.489" = type <{ %"class.std::__1::unique_ptr.490", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.505", %"class.std::__1::__compressed_pair.508", [4 x i8] }>
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492", %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"struct.std::__1::__hash_node_base.493"** }
%"struct.std::__1::__hash_node_base.493" = type { %"struct.std::__1::__hash_node_base.493"* }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.std::__1::__bucket_list_deallocator.495" }
%"class.std::__1::__bucket_list_deallocator.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"struct.std::__1::__hash_node_base.493" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unordered_map.571" = type { %"class.std::__1::__hash_table.572" }
%"class.std::__1::__hash_table.572" = type <{ %"class.std::__1::unique_ptr.573", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.588", %"class.std::__1::__compressed_pair.591", [4 x i8] }>
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575", %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"struct.std::__1::__hash_node_base.576"** }
%"struct.std::__1::__hash_node_base.576" = type { %"struct.std::__1::__hash_node_base.576"* }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.std::__1::__bucket_list_deallocator.578" }
%"class.std::__1::__bucket_list_deallocator.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.576" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.601", %"class.std::__1::unordered_map.601", %"class.std::__1::unordered_map.601", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.601" = type { %"class.std::__1::__hash_table.602" }
%"class.std::__1::__hash_table.602" = type <{ %"class.std::__1::unique_ptr.603", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.618", %"class.std::__1::__compressed_pair.621", [4 x i8] }>
%"class.std::__1::unique_ptr.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605", %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"struct.std::__1::__hash_node_base.606"** }
%"struct.std::__1::__hash_node_base.606" = type { %"struct.std::__1::__hash_node_base.606"* }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"class.std::__1::__bucket_list_deallocator.608" }
%"class.std::__1::__bucket_list_deallocator.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"struct.std::__1::__hash_node_base.606" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.std::__1::multimap.631"* }
%"class.std::__1::multimap.631" = type { %"class.std::__1::__tree.632" }
%"class.std::__1::__tree.632" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.633", %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.646", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.663", %"class.std::__1::map.685" }
%"class.std::__1::map.646" = type { %"class.std::__1::__tree.647" }
%"class.std::__1::__tree.647" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.648", %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.656", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.656" = type { %"class.std::__1::__vector_base.657" }
%"class.std::__1::__vector_base.657" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.663" = type { %"class.std::__1::__hash_table.664" }
%"class.std::__1::__hash_table.664" = type <{ %"class.std::__1::unique_ptr.665", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.680", %"class.std::__1::__compressed_pair.682", [4 x i8] }>
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667", %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"struct.std::__1::__hash_node_base.668"** }
%"struct.std::__1::__hash_node_base.668" = type { %"struct.std::__1::__hash_node_base.668"* }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.std::__1::__bucket_list_deallocator.670" }
%"class.std::__1::__bucket_list_deallocator.670" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"struct.std::__1::__hash_node_base.668" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::map.685" = type { %"class.std::__1::__tree.686" }
%"class.std::__1::__tree.686" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.687", %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.702" }
%"class.std::__1::unordered_map.702" = type { %"class.std::__1::__hash_table.703" }
%"class.std::__1::__hash_table.703" = type <{ %"class.std::__1::unique_ptr.704", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.719", %"class.std::__1::__compressed_pair.722", [4 x i8] }>
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706", %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"struct.std::__1::__hash_node_base.707"** }
%"struct.std::__1::__hash_node_base.707" = type { %"struct.std::__1::__hash_node_base.707"* }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.std::__1::__bucket_list_deallocator.709" }
%"class.std::__1::__bucket_list_deallocator.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"struct.std::__1::__hash_node_base.707" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.732", %"class.std::__1::unordered_map.254", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.732" = type { %"class.std::__1::__hash_table.733" }
%"class.std::__1::__hash_table.733" = type <{ %"class.std::__1::unique_ptr.734", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.749", %"class.std::__1::__compressed_pair.752", [4 x i8] }>
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736", %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"struct.std::__1::__hash_node_base.737"** }
%"struct.std::__1::__hash_node_base.737" = type { %"struct.std::__1::__hash_node_base.737"* }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.std::__1::__bucket_list_deallocator.739" }
%"class.std::__1::__bucket_list_deallocator.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"struct.std::__1::__hash_node_base.737" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.762", %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.765", %"class.std::__1::map.789", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.800" }
%"class.std::__1::unordered_map.765" = type { %"class.std::__1::__hash_table.766" }
%"class.std::__1::__hash_table.766" = type <{ %"class.std::__1::unique_ptr.767", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.782", %"class.std::__1::__compressed_pair.785", [4 x i8] }>
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769", %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"struct.std::__1::__hash_node_base.770"** }
%"struct.std::__1::__hash_node_base.770" = type { %"struct.std::__1::__hash_node_base.770"* }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.std::__1::__bucket_list_deallocator.772" }
%"class.std::__1::__bucket_list_deallocator.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"struct.std::__1::__hash_node_base.770" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::map.789" = type { %"class.std::__1::__tree.790" }
%"class.std::__1::__tree.790" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.791", %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"class.std::__1::function.802"*, %"class.std::__1::function.802"*, %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::function.802" = type { %"class.std::__1::__function::__policy_func.805" }
%"class.std::__1::__function::__policy_func.805" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.806", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.806" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.807"*)* }
%"class.std::__1::vector.807" = type { %"class.std::__1::__vector_base.808" }
%"class.std::__1::__vector_base.808" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.std::__1::function.802"* }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.825", %"class.std::__1::map.849", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.860" }
%"class.std::__1::unordered_map.825" = type { %"class.std::__1::__hash_table.826" }
%"class.std::__1::__hash_table.826" = type <{ %"class.std::__1::unique_ptr.827", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.842", %"class.std::__1::__compressed_pair.845", [4 x i8] }>
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829", %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.std::__1::__hash_node_base.830"** }
%"struct.std::__1::__hash_node_base.830" = type { %"struct.std::__1::__hash_node_base.830"* }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.std::__1::__bucket_list_deallocator.832" }
%"class.std::__1::__bucket_list_deallocator.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.std::__1::__hash_node_base.830" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::map.849" = type { %"class.std::__1::__tree.850" }
%"class.std::__1::__tree.850" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.851", %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::vector.860" = type { %"class.std::__1::__vector_base.861" }
%"class.std::__1::__vector_base.861" = type { %"class.std::__1::function.862"*, %"class.std::__1::function.862"*, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::function.862" = type { %"class.std::__1::__function::__policy_func.865" }
%"class.std::__1::__function::__policy_func.865" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.866", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.866" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.807"*)* }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"class.std::__1::function.862"* }
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.881", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.881" = type { %"class.std::__1::__hash_table.882" }
%"class.std::__1::__hash_table.882" = type <{ %"class.std::__1::unique_ptr.883", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.901", [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885", %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.std::__1::__hash_node_base.886"** }
%"struct.std::__1::__hash_node_base.886" = type { %"struct.std::__1::__hash_node_base.886"* }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.std::__1::__bucket_list_deallocator.888" }
%"class.std::__1::__bucket_list_deallocator.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.std::__1::__hash_node_base.886" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.905" }
%"class.std::__1::vector.905" = type { %"class.std::__1::__vector_base.906" }
%"class.std::__1::__vector_base.906" = type { i64*, i64*, %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { i64* }
%"class.std::__1::unordered_set.928" = type { %"class.std::__1::__hash_table.929" }
%"class.std::__1::__hash_table.929" = type <{ %"class.std::__1::unique_ptr.930", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.947", [4 x i8] }>
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932", %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.933"** }
%"struct.std::__1::__hash_node_base.933" = type { %"struct.std::__1::__hash_node_base.933"* }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::__bucket_list_deallocator.935" }
%"class.std::__1::__bucket_list_deallocator.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.933" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::vector.950" = type { %"class.std::__1::__vector_base.951" }
%"class.std::__1::__vector_base.951" = type { %"class.spvtools::opt::Function"**, %"class.spvtools::opt::Function"**, %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.spvtools::opt::Function"** }
%"struct.std::__1::__hash_node.991" = type <{ %"struct.std::__1::__hash_node_base.933", i64, i32, [4 x i8] }>
%"class.std::__1::function.966" = type { %"class.std::__1::__function::__policy_func.970" }
%"class.std::__1::__function::__policy_func.970" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.971", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.971" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon }
%class.anon = type { %"class.std::__1::unordered_set.928"*, %"class.std::__1::unordered_set.928"*, i32* }
%"class.std::__1::__function::__default_alloc_func.1004" = type { %class.anon.973 }
%class.anon.973 = type { i8*, i32, %"class.std::__1::unordered_set.928"* }

$_ZN8spvtools6reduce26ReductionOpportunityFinderD2Ev = comdat any

$_ZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinderD0Ev = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools6reduce20ReductionOpportunityENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

@.str = private unnamed_addr constant [42 x i8] c"RemoveSelectionReductionOpportunityFinder\00", align 1
@_ZTVN8spvtools6reduce41RemoveSelectionReductionOpportunityFinderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::reduce::ReductionOpportunityFinder"*)* @_ZN8spvtools6reduce26ReductionOpportunityFinderD2Ev to i8*), i8* bitcast (void (%"class.spvtools::reduce::RemoveSelectionReductionOpportunityFinder"*)* @_ZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinderD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector.915"*, %"class.spvtools::reduce::RemoveSelectionReductionOpportunityFinder"*, %"class.spvtools::opt::IRContext"*, i32)* @_ZNK8spvtools6reduce41RemoveSelectionReductionOpportunityFinder25GetAvailableOpportunitiesEPNS_3opt9IRContextEj to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.spvtools::reduce::RemoveSelectionReductionOpportunityFinder"*)* @_ZNK8spvtools6reduce41RemoveSelectionReductionOpportunityFinder7GetNameEv to i8*)] }, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools6reduce35RemoveSelectionReductionOpportunityE = external unnamed_addr constant { [6 x i8*] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0FvjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0FvjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools6reduce41RemoveSelectionReductionOpportunityFinder7GetNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.spvtools::reduce::RemoveSelectionReductionOpportunityFinder"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 48) #10
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 41, i64 -9223372036854775760>, <2 x i64>* %6, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* align 1 getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41, i1 false) #11
  %7 = getelementptr inbounds i8, i8* %3, i64 41
  store i8 0, i8* %7, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools6reduce41RemoveSelectionReductionOpportunityFinder25GetAvailableOpportunitiesEPNS_3opt9IRContextEj(%"class.std::__1::vector.915"* noalias sret, %"class.spvtools::reduce::RemoveSelectionReductionOpportunityFinder"* nocapture readnone, %"class.spvtools::opt::IRContext"*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unordered_set.928", align 8
  %6 = alloca %"class.std::__1::vector.950", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::unordered_set.928", align 8
  %10 = alloca %"class.std::__1::unique_ptr.917", align 8
  %11 = bitcast %"class.std::__1::unordered_set.928"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %5, i64 0, i32 0, i32 4, i64 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %5, i64 0, i32 0, i32 3
  %17 = bitcast %"class.std::__1::__compressed_pair.947"* %16 to i32*
  %18 = bitcast i8* %15 to i32*
  store i32 -1431655766, i32* %18, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %17, align 8
  %19 = bitcast %"class.std::__1::vector.950"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  call void @_ZN8spvtools6reduce26ReductionOpportunityFinder18GetTargetFunctionsEPNS_3opt9IRContextEj(%"class.std::__1::vector.950"* nonnull sret %6, %"class.spvtools::opt::IRContext"* %2, i32 %3) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.950", %"class.std::__1::vector.950"* %6, i64 0, i32 0, i32 0
  %21 = load %"class.spvtools::opt::Function"**, %"class.spvtools::opt::Function"*** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.950", %"class.std::__1::vector.950"* %6, i64 0, i32 0, i32 1
  %23 = load %"class.spvtools::opt::Function"**, %"class.spvtools::opt::Function"*** %22, align 8
  %24 = icmp eq %"class.spvtools::opt::Function"** %21, %23
  br i1 %24, label %31, label %25

25:                                               ; preds = %4
  %26 = bitcast i32* %7 to i8*
  %27 = bitcast i32* %8 to i8*
  %28 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %5, i64 0, i32 0
  br label %60

29:                                               ; preds = %68
  %30 = load %"class.spvtools::opt::Function"**, %"class.spvtools::opt::Function"*** %20, align 8
  br label %31

31:                                               ; preds = %29, %4
  %32 = phi %"class.spvtools::opt::Function"** [ %30, %29 ], [ %21, %4 ]
  %33 = icmp eq %"class.spvtools::opt::Function"** %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = ptrtoint %"class.spvtools::opt::Function"** %32 to i64
  %36 = bitcast %"class.spvtools::opt::Function"*** %22 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"class.spvtools::opt::Function"** %32 to i8*
  call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %31, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %39 = getelementptr inbounds %"class.std::__1::vector.915", %"class.std::__1::vector.915"* %0, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::vector.915", %"class.std::__1::vector.915"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.std::__1::vector.915"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #11
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %42, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %43, i64 0, i32 15, i32 0, i32 0
  %45 = load %"class.std::__1::unique_ptr.33"*, %"class.std::__1::unique_ptr.33"** %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %43, i64 0, i32 15, i32 0, i32 1
  %47 = load %"class.std::__1::unique_ptr.33"*, %"class.std::__1::unique_ptr.33"** %46, align 8
  %48 = icmp eq %"class.std::__1::unique_ptr.33"* %45, %47
  br i1 %48, label %89, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %9, i64 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %9, i64 0, i32 0, i32 3
  %52 = bitcast %"class.std::__1::__compressed_pair.947"* %51 to i32*
  %53 = bitcast %"class.std::__1::unordered_set.928"* %9 to i8*
  %54 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.std::__1::unique_ptr.917"* %10 to i8*
  %57 = bitcast %"class.std::__1::unique_ptr.917"* %10 to i64*
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %10, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr.917"** %39 to i64*
  br label %104

60:                                               ; preds = %25, %68
  %61 = phi %"class.spvtools::opt::Function"** [ %21, %25 ], [ %69, %68 ]
  %62 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %62, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %62, i64 0, i32 3, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.45"* %64, %66
  br i1 %67, label %68, label %71

68:                                               ; preds = %86, %60
  %69 = getelementptr inbounds %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %61, i64 1
  %70 = icmp eq %"class.spvtools::opt::Function"** %69, %23
  br i1 %70, label %29, label %60

71:                                               ; preds = %60, %86
  %72 = phi %"class.std::__1::unique_ptr.45"* [ %87, %86 ], [ %64, %60 ]
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %73, align 8
  %75 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* %74) #11
  %76 = icmp eq %"class.spvtools::opt::Instruction"* %75, null
  br i1 %76, label %86, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %75, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 246
  br i1 %80, label %81, label %86

81:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #11
  store i32 -1431655766, i32* %7, align 4
  %82 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %75, i32 0) #11
  store i32 %82, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #11
  store i32 -1431655766, i32* %8, align 4
  %83 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %75, i32 1) #11
  store i32 %83, i32* %8, align 4
  %84 = call { %"struct.std::__1::__hash_node_base.933"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.929"* nonnull %28, i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %7) #11
  %85 = call { %"struct.std::__1::__hash_node_base.933"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.929"* nonnull %28, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #11
  br label %86

86:                                               ; preds = %71, %77, %81
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %72, i64 1
  %88 = icmp eq %"class.std::__1::unique_ptr.45"* %87, %66
  br i1 %88, label %68, label %71

89:                                               ; preds = %113, %38
  %90 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %14, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.933"* %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %89, %92
  %93 = phi %"struct.std::__1::__hash_node_base.933"* [ %95, %92 ], [ %90, %89 ]
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %93, i64 0, i32 0
  %95 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %94, align 8
  %96 = bitcast %"struct.std::__1::__hash_node_base.933"* %93 to i8*
  call void @_ZdlPv(i8* %96) #10
  %97 = icmp eq %"struct.std::__1::__hash_node_base.933"* %95, null
  br i1 %97, label %98, label %92

98:                                               ; preds = %92, %89
  %99 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.933"** null, %"struct.std::__1::__hash_node_base.933"*** %12, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.933"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = bitcast %"struct.std::__1::__hash_node_base.933"** %99 to i8*
  call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %98, %101
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  ret void

104:                                              ; preds = %49, %113
  %105 = phi %"class.std::__1::unique_ptr.33"* [ %45, %49 ], [ %114, %113 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %106, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %107, i64 0, i32 3, i32 0, i32 0
  %109 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %108, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %107, i64 0, i32 3, i32 0, i32 1
  %111 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %110, align 8
  %112 = icmp eq %"class.std::__1::unique_ptr.45"* %109, %111
  br i1 %112, label %113, label %116

113:                                              ; preds = %181, %104
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33"* %105, i64 1
  %115 = icmp eq %"class.std::__1::unique_ptr.33"* %114, %47
  br i1 %115, label %89, label %104

116:                                              ; preds = %104, %181
  %117 = phi %"class.std::__1::unique_ptr.45"* [ %182, %181 ], [ %109, %104 ]
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %118, align 8
  %120 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* %119) #11
  %121 = icmp eq %"class.spvtools::opt::Instruction"* %120, null
  br i1 %121, label %181, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %120, i64 0, i32 2
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, 247
  br i1 %125, label %126, label %181

126:                                              ; preds = %122
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 32, i1 false) #11
  %127 = load i32, i32* %17, align 8
  store i32 %127, i32* %52, align 8
  %128 = load i64, i64* %13, align 8
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.929"* nonnull %50, i64 %128) #11
  %129 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %14, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.933"* %129, null
  br i1 %130, label %141, label %131

131:                                              ; preds = %126
  %132 = ptrtoint %"struct.std::__1::__hash_node_base.933"* %129 to i64
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ %132, %131 ], [ %139, %133 ]
  %135 = inttoptr i64 %134 to %"struct.std::__1::__hash_node.991"*
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node.991", %"struct.std::__1::__hash_node.991"* %135, i64 0, i32 2
  %137 = call { %"struct.std::__1::__hash_node_base.933"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.929"* nonnull %50, i32* dereferenceable(4) %136, i32* dereferenceable(4) %136) #11
  %138 = inttoptr i64 %134 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %133

141:                                              ; preds = %133, %126
  %142 = call zeroext i1 @_ZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS_3opt9IRContextERKNS2_10BasicBlockEPNS2_11InstructionENSt3__113unordered_setIjNSA_4hashIjEENSA_8equal_toIjEENSA_9allocatorIjEEEE(%"class.spvtools::opt::IRContext"* %2, %"class.spvtools::opt::BasicBlock"* dereferenceable(136) %119, %"class.spvtools::opt::Instruction"* nonnull %120, %"class.std::__1::unordered_set.928"* nonnull %9)
  %143 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %54, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.933"* %143, null
  br i1 %144, label %151, label %145

145:                                              ; preds = %141, %145
  %146 = phi %"struct.std::__1::__hash_node_base.933"* [ %148, %145 ], [ %143, %141 ]
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %146, i64 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %147, align 8
  %149 = bitcast %"struct.std::__1::__hash_node_base.933"* %146 to i8*
  call void @_ZdlPv(i8* %149) #10
  %150 = icmp eq %"struct.std::__1::__hash_node_base.933"* %148, null
  br i1 %150, label %151, label %145

151:                                              ; preds = %145, %141
  %152 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %55, align 8
  store %"struct.std::__1::__hash_node_base.933"** null, %"struct.std::__1::__hash_node_base.933"*** %55, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.933"** %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = bitcast %"struct.std::__1::__hash_node_base.933"** %152 to i8*
  call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %151, %154
  br i1 %142, label %157, label %181

157:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  %158 = ptrtoint %"class.spvtools::opt::BasicBlock"* %119 to i64
  %159 = call i8* @_Znwm(i64 16) #10
  %160 = bitcast i8* %159 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8spvtools6reduce35RemoveSelectionReductionOpportunityE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %161 = getelementptr inbounds i8, i8* %159, i64 8
  %162 = bitcast i8* %161 to i64*
  store i64 %158, i64* %162, align 8
  %163 = ptrtoint i8* %159 to i64
  store i64 %163, i64* %57, align 8
  %164 = load %"class.std::__1::unique_ptr.917"*, %"class.std::__1::unique_ptr.917"** %39, align 8
  %165 = load %"class.std::__1::unique_ptr.917"*, %"class.std::__1::unique_ptr.917"** %40, align 8
  %166 = icmp ult %"class.std::__1::unique_ptr.917"* %164, %165
  br i1 %166, label %167, label %171

167:                                              ; preds = %157
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %58, align 8
  %168 = bitcast %"class.std::__1::unique_ptr.917"* %164 to i64*
  store i64 %163, i64* %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %164, i64 1
  %170 = ptrtoint %"class.std::__1::unique_ptr.917"* %169 to i64
  store i64 %170, i64* %59, align 8
  br label %172

171:                                              ; preds = %157
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools6reduce20ReductionOpportunityENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.915"* %0, %"class.std::__1::unique_ptr.917"* nonnull dereferenceable(8) %10) #11
  br label %172

172:                                              ; preds = %167, %171
  %173 = load %"class.spvtools::reduce::ReductionOpportunity"*, %"class.spvtools::reduce::ReductionOpportunity"** %58, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %58, align 8
  %174 = icmp eq %"class.spvtools::reduce::ReductionOpportunity"* %173, null
  br i1 %174, label %180, label %175

175:                                              ; preds = %172
  %176 = bitcast %"class.spvtools::reduce::ReductionOpportunity"* %173 to void (%"class.spvtools::reduce::ReductionOpportunity"*)***
  %177 = load void (%"class.spvtools::reduce::ReductionOpportunity"*)**, void (%"class.spvtools::reduce::ReductionOpportunity"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.spvtools::reduce::ReductionOpportunity"*)*, void (%"class.spvtools::reduce::ReductionOpportunity"*)** %177, i64 1
  %179 = load void (%"class.spvtools::reduce::ReductionOpportunity"*)*, void (%"class.spvtools::reduce::ReductionOpportunity"*)** %178, align 8
  call void %179(%"class.spvtools::reduce::ReductionOpportunity"* nonnull %173) #11
  br label %180

180:                                              ; preds = %175, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %181

181:                                              ; preds = %116, %122, %180, %156
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %117, i64 1
  %183 = icmp eq %"class.std::__1::unique_ptr.45"* %182, %111
  br i1 %183, label %113, label %116
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8spvtools6reduce26ReductionOpportunityFinder18GetTargetFunctionsEPNS_3opt9IRContextEj(%"class.std::__1::vector.950"* sret, %"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS_3opt9IRContextERKNS2_10BasicBlockEPNS2_11InstructionENSt3__113unordered_setIjNSA_4hashIjEENSA_8equal_toIjEENSA_9allocatorIjEEEE(%"class.spvtools::opt::IRContext"* nocapture, %"class.spvtools::opt::BasicBlock"* dereferenceable(136), %"class.spvtools::opt::Instruction"*, %"class.std::__1::unordered_set.928"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::unordered_set.928", align 8
  %7 = alloca %"class.std::__1::function.966", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.std::__1::function.966", align 8
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 0, i32* %5, align 4
  %11 = bitcast %"class.std::__1::unordered_set.928"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %6, i64 0, i32 0, i32 4, i64 0
  %15 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %6, i64 0, i32 0, i32 3
  %16 = bitcast %"class.std::__1::__compressed_pair.947"* %15 to i32*
  %17 = bitcast i8* %14 to i32*
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %16, align 8
  %18 = bitcast %"class.std::__1::function.966"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.std::__1::function.966", %"class.std::__1::function.966"* %7, i64 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.std::__1::function.966", %"class.std::__1::function.966"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS6_3opt9IRContextERKNS9_10BasicBlockEPNS9_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %19, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %20, align 8
  %21 = tail call i8* @_Znwm(i64 24) #10, !noalias !2
  %22 = bitcast i8* %21 to %"class.std::__1::unordered_set.928"**
  store %"class.std::__1::unordered_set.928"* %6, %"class.std::__1::unordered_set.928"** %22, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = bitcast i8* %23 to %"class.std::__1::unordered_set.928"**
  store %"class.std::__1::unordered_set.928"* %3, %"class.std::__1::unordered_set.928"** %24, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 16
  %26 = bitcast i8* %25 to i32**
  store i32* %5, i32** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::function.966", %"class.std::__1::function.966"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %27, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %1, %"class.std::__1::function.966"* nonnull dereferenceable(32) %7) #11
  %28 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %28, i64 0, i32 1
  %30 = load void (i8*)*, void (i8*)** %29, align 8
  %31 = icmp eq void (i8*)* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %4
  %33 = load i8*, i8** %27, align 8
  call void %30(i8* %33) #11
  br label %34

34:                                               ; preds = %4, %32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #11
  %35 = load i32, i32* %5, align 4
  %36 = icmp ult i32 %35, 2
  %37 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %13, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.933"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %34, %39
  %40 = phi %"struct.std::__1::__hash_node_base.933"* [ %42, %39 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %41, align 8
  %43 = bitcast %"struct.std::__1::__hash_node_base.933"* %40 to i8*
  call void @_ZdlPv(i8* %43) #10
  %44 = icmp eq %"struct.std::__1::__hash_node_base.933"* %42, null
  br i1 %44, label %45, label %39

45:                                               ; preds = %39, %34
  %46 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.933"** null, %"struct.std::__1::__hash_node_base.933"*** %12, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.933"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = bitcast %"struct.std::__1::__hash_node_base.933"** %46 to i8*
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  br i1 %36, label %51, label %244

51:                                               ; preds = %50
  %52 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 0) #11
  %53 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 16
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %73

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %58, align 8
  %60 = call i8* @_Znwm(i64 400) #10
  %61 = bitcast i8* %60 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %61, %"class.spvtools::opt::Module"* %59) #11
  %62 = ptrtoint i8* %60 to i64
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 15
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.278"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %64, align 8
  %66 = bitcast %"class.std::__1::unique_ptr.278"* %63 to i64*
  store i64 %62, i64* %66, align 8
  %67 = icmp eq %"class.spvtools::opt::CFG"* %65, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %57
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %65) #11
  %69 = bitcast %"class.spvtools::opt::CFG"* %65 to i8*
  call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %68, %57
  %71 = load i32, i32* %53, align 8
  %72 = or i32 %71, 16
  store i32 %72, i32* %53, align 8
  br label %73

73:                                               ; preds = %51, %70
  %74 = phi i32 [ %54, %51 ], [ %72, %70 ]
  %75 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %76 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %75, align 8
  %77 = zext i32 %52 to i64
  %78 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %76, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %129, label %81

81:                                               ; preds = %73
  %82 = call i64 @llvm.ctpop.i64(i64 %79) #11, !range !7
  %83 = icmp ugt i64 %82, 1
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = add i64 %79, 4294967295
  %86 = and i64 %85, %77
  br label %91

87:                                               ; preds = %81
  %88 = icmp ugt i64 %79, %77
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = urem i64 %77, %79
  br label %91

91:                                               ; preds = %89, %87, %84
  %92 = phi i64 [ %86, %84 ], [ %90, %89 ], [ %77, %87 ]
  %93 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %76, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.314"**, %"struct.std::__1::__hash_node_base.314"*** %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.314"*, %"struct.std::__1::__hash_node_base.314"** %94, i64 %92
  %96 = load %"struct.std::__1::__hash_node_base.314"*, %"struct.std::__1::__hash_node_base.314"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base.314"* %96, null
  br i1 %97, label %129, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.314", %"struct.std::__1::__hash_node_base.314"* %96, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.314"*, %"struct.std::__1::__hash_node_base.314"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.314"* %100, null
  br i1 %101, label %129, label %102

102:                                              ; preds = %98
  %103 = add i64 %79, -1
  br label %104

104:                                              ; preds = %125, %102
  %105 = phi %"struct.std::__1::__hash_node_base.314"* [ %100, %102 ], [ %127, %125 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.314", %"struct.std::__1::__hash_node_base.314"* %105, i64 1
  %107 = bitcast %"struct.std::__1::__hash_node_base.314"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, %77
  br i1 %109, label %120, label %110

110:                                              ; preds = %104
  br i1 %83, label %113, label %111

111:                                              ; preds = %110
  %112 = and i64 %108, %103
  br label %117

113:                                              ; preds = %110
  %114 = icmp ult i64 %108, %79
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = urem i64 %108, %79
  br label %117

117:                                              ; preds = %115, %113, %111
  %118 = phi i64 [ %112, %111 ], [ %116, %115 ], [ %108, %113 ]
  %119 = icmp eq i64 %118, %92
  br i1 %119, label %125, label %129

120:                                              ; preds = %104
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.314", %"struct.std::__1::__hash_node_base.314"* %105, i64 2
  %122 = bitcast %"struct.std::__1::__hash_node_base.314"* %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, %52
  br i1 %124, label %130, label %125

125:                                              ; preds = %120, %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.314", %"struct.std::__1::__hash_node_base.314"* %105, i64 0, i32 0
  %127 = load %"struct.std::__1::__hash_node_base.314"*, %"struct.std::__1::__hash_node_base.314"** %126, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.314"* %127, null
  br i1 %128, label %129, label %104

129:                                              ; preds = %125, %117, %98, %91, %73
  call void @abort() #12
  unreachable

130:                                              ; preds = %120
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.314", %"struct.std::__1::__hash_node_base.314"* %105, i64 3
  %132 = bitcast %"struct.std::__1::__hash_node_base.314"* %131 to i32**
  %133 = load i32*, i32** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.314", %"struct.std::__1::__hash_node_base.314"* %105, i64 4
  %135 = bitcast %"struct.std::__1::__hash_node_base.314"* %134 to i32**
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %133, %136
  br i1 %137, label %244, label %138

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 15
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.278"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr.278"* %140 to i64*
  %143 = bitcast %"class.std::__1::function.966"* %9 to i8*
  %144 = getelementptr inbounds %"class.std::__1::function.966", %"class.std::__1::function.966"* %9, i64 0, i32 0, i32 1, i32 0
  %145 = getelementptr inbounds %"class.std::__1::function.966", %"class.std::__1::function.966"* %9, i64 0, i32 0, i32 2
  %146 = getelementptr inbounds %"class.std::__1::function.966", %"class.std::__1::function.966"* %9, i64 0, i32 0, i32 0, i32 0
  br label %151

147:                                              ; preds = %240
  %148 = icmp eq i32* %243, %136
  br i1 %148, label %244, label %149

149:                                              ; preds = %147
  %150 = load i32, i32* %53, align 8
  br label %151

151:                                              ; preds = %149, %138
  %152 = phi i32 [ %74, %138 ], [ %150, %149 ]
  %153 = phi i32* [ %133, %138 ], [ %243, %149 ]
  %154 = load i32, i32* %153, align 4
  %155 = and i32 %152, 16
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %169

157:                                              ; preds = %151
  %158 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %139, align 8
  %159 = call i8* @_Znwm(i64 400) #10
  %160 = bitcast i8* %159 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %160, %"class.spvtools::opt::Module"* %158) #11
  %161 = ptrtoint i8* %159 to i64
  %162 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %141, align 8
  store i64 %161, i64* %142, align 8
  %163 = icmp eq %"class.spvtools::opt::CFG"* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %157
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %162) #11
  %165 = bitcast %"class.spvtools::opt::CFG"* %162 to i8*
  call void @_ZdlPv(i8* %165) #10
  br label %166

166:                                              ; preds = %164, %157
  %167 = load i32, i32* %53, align 8
  %168 = or i32 %167, 16
  store i32 %168, i32* %53, align 8
  br label %169

169:                                              ; preds = %151, %166
  %170 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %75, align 8
  %171 = zext i32 %154 to i64
  %172 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %170, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %173 = load i64, i64* %172, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %223, label %175

175:                                              ; preds = %169
  %176 = call i64 @llvm.ctpop.i64(i64 %173) #11, !range !7
  %177 = icmp ugt i64 %176, 1
  br i1 %177, label %181, label %178

178:                                              ; preds = %175
  %179 = add i64 %173, 4294967295
  %180 = and i64 %179, %171
  br label %185

181:                                              ; preds = %175
  %182 = icmp ugt i64 %173, %171
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = urem i64 %171, %173
  br label %185

185:                                              ; preds = %183, %181, %178
  %186 = phi i64 [ %180, %178 ], [ %184, %183 ], [ %171, %181 ]
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %170, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.338"**, %"struct.std::__1::__hash_node_base.338"*** %187, align 8
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node_base.338"*, %"struct.std::__1::__hash_node_base.338"** %188, i64 %186
  %190 = load %"struct.std::__1::__hash_node_base.338"*, %"struct.std::__1::__hash_node_base.338"** %189, align 8
  %191 = icmp eq %"struct.std::__1::__hash_node_base.338"* %190, null
  br i1 %191, label %223, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.338", %"struct.std::__1::__hash_node_base.338"* %190, i64 0, i32 0
  %194 = load %"struct.std::__1::__hash_node_base.338"*, %"struct.std::__1::__hash_node_base.338"** %193, align 8
  %195 = icmp eq %"struct.std::__1::__hash_node_base.338"* %194, null
  br i1 %195, label %223, label %196

196:                                              ; preds = %192
  %197 = add i64 %173, -1
  br label %198

198:                                              ; preds = %219, %196
  %199 = phi %"struct.std::__1::__hash_node_base.338"* [ %194, %196 ], [ %221, %219 ]
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base.338", %"struct.std::__1::__hash_node_base.338"* %199, i64 1
  %201 = bitcast %"struct.std::__1::__hash_node_base.338"* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %202, %171
  br i1 %203, label %214, label %204

204:                                              ; preds = %198
  br i1 %177, label %207, label %205

205:                                              ; preds = %204
  %206 = and i64 %202, %197
  br label %211

207:                                              ; preds = %204
  %208 = icmp ult i64 %202, %173
  br i1 %208, label %211, label %209

209:                                              ; preds = %207
  %210 = urem i64 %202, %173
  br label %211

211:                                              ; preds = %209, %207, %205
  %212 = phi i64 [ %206, %205 ], [ %210, %209 ], [ %202, %207 ]
  %213 = icmp eq i64 %212, %186
  br i1 %213, label %219, label %223

214:                                              ; preds = %198
  %215 = getelementptr inbounds %"struct.std::__1::__hash_node_base.338", %"struct.std::__1::__hash_node_base.338"* %199, i64 2
  %216 = bitcast %"struct.std::__1::__hash_node_base.338"* %215 to i32*
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, %154
  br i1 %218, label %224, label %219

219:                                              ; preds = %214, %211
  %220 = getelementptr inbounds %"struct.std::__1::__hash_node_base.338", %"struct.std::__1::__hash_node_base.338"* %199, i64 0, i32 0
  %221 = load %"struct.std::__1::__hash_node_base.338"*, %"struct.std::__1::__hash_node_base.338"** %220, align 8
  %222 = icmp eq %"struct.std::__1::__hash_node_base.338"* %221, null
  br i1 %222, label %223, label %198

223:                                              ; preds = %192, %185, %169, %219, %211
  call void @abort() #12
  unreachable

224:                                              ; preds = %214
  %225 = getelementptr inbounds %"struct.std::__1::__hash_node_base.338", %"struct.std::__1::__hash_node_base.338"* %199, i64 3
  %226 = bitcast %"struct.std::__1::__hash_node_base.338"* %225 to %"class.spvtools::opt::BasicBlock"**
  %227 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %226, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 0, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %143) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS6_3opt9IRContextERKNS9_10BasicBlockEPNS9_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %144, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %145, align 8
  %228 = call i8* @_Znwm(i64 24) #10, !noalias !8
  %229 = bitcast i8* %228 to i8**
  store i8* %8, i8** %229, align 8
  %230 = getelementptr inbounds i8, i8* %228, i64 8
  %231 = bitcast i8* %230 to i32*
  store i32 %52, i32* %231, align 8
  %232 = getelementptr inbounds i8, i8* %228, i64 16
  %233 = bitcast i8* %232 to %"class.std::__1::unordered_set.928"**
  store %"class.std::__1::unordered_set.928"* %3, %"class.std::__1::unordered_set.928"** %233, align 8
  store i8* %228, i8** %146, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %227, %"class.std::__1::function.966"* nonnull dereferenceable(32) %9) #11
  %234 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %145, align 8
  %235 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %234, i64 0, i32 1
  %236 = load void (i8*)*, void (i8*)** %235, align 8
  %237 = icmp eq void (i8*)* %236, null
  br i1 %237, label %240, label %238

238:                                              ; preds = %224
  %239 = load i8*, i8** %146, align 8
  call void %236(i8* %239) #11
  br label %240

240:                                              ; preds = %224, %238
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %143) #11
  %241 = load i8, i8* %8, align 1, !range !13
  %242 = icmp eq i8 %241, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  %243 = getelementptr inbounds i32, i32* %153, i64 1
  br i1 %242, label %147, label %244

244:                                              ; preds = %240, %147, %130, %50
  %245 = phi i1 [ false, %50 ], [ true, %130 ], [ false, %240 ], [ true, %147 ]
  ret i1 %245
}

declare void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.966"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools6reduce26ReductionOpportunityFinderD2Ev(%"class.spvtools::reduce::ReductionOpportunityFinder"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinderD0Ev(%"class.spvtools::reduce::RemoveSelectionReductionOpportunityFinder"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::reduce::RemoveSelectionReductionOpportunityFinder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.338"*, %"struct.std::__1::__hash_node_base.338"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.338"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.338"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.338", %"struct.std::__1::__hash_node_base.338"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.338"*, %"struct.std::__1::__hash_node_base.338"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.338"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  %10 = icmp eq %"struct.std::__1::__hash_node_base.338"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.338"**, %"struct.std::__1::__hash_node_base.338"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.338"** null, %"struct.std::__1::__hash_node_base.338"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.338"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.338"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.314"*, %"struct.std::__1::__hash_node_base.314"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.314"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.314"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.314", %"struct.std::__1::__hash_node_base.314"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.314"*, %"struct.std::__1::__hash_node_base.314"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.314", %"struct.std::__1::__hash_node_base.314"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.314"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.314", %"struct.std::__1::__hash_node_base.314"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.314"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.314"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  %36 = icmp eq %"struct.std::__1::__hash_node_base.314"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.314"**, %"struct.std::__1::__hash_node_base.314"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.314"** null, %"struct.std::__1::__hash_node_base.314"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.314"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.314"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !13
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #11
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !13
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !13
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #11
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !13
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #11
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #11
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !13
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #11
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #11
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !13
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !13
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #11
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !13
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #11
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #11
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.286"*, %"struct.std::__1::__hash_node_base.286"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.286"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.286"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.286", %"struct.std::__1::__hash_node_base.286"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.286"*, %"struct.std::__1::__hash_node_base.286"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.286", %"struct.std::__1::__hash_node_base.286"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.286"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.286", %"struct.std::__1::__hash_node_base.286"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.286"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #10
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.286"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #10
  %214 = icmp eq %"struct.std::__1::__hash_node_base.286"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.286"**, %"struct.std::__1::__hash_node_base.286"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.286"** null, %"struct.std::__1::__hash_node_base.286"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.286"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.286"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #10
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !13
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !13
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !13
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !13
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !13
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !13
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !13
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !13
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #11
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.19"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %38, align 8
  store %"class.std::__1::vector.6"* null, %"class.std::__1::vector.6"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.6"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.6"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !13
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !13
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !13
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !13
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #11
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %3, align 8
  store %"class.std::__1::vector.6"* null, %"class.std::__1::vector.6"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.6"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %3, align 8
  store %"class.std::__1::vector.6"* null, %"class.std::__1::vector.6"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.6"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.933"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.929"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !7
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.933"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.933"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.933"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.933"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.933"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #10, !noalias !14
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !14
  store i32 %58, i32* %57, align 4, !noalias !14
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !14
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.933"**
  store %"struct.std::__1::__hash_node_base.933"* null, %"struct.std::__1::__hash_node_base.933"** %61, align 8, !noalias !14
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !7
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #11
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.929"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #11, !range !7
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.933"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.933"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.933"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.933"* %104, %"struct.std::__1::__hash_node_base.933"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.933"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.933"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #11, !range !7
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.933"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.933"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.933"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.933"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.933"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.933"*, i8 } undef, %"struct.std::__1::__hash_node_base.933"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.933"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.933"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.929"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !7
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.929"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !7
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !7
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.929"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.929"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.929"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.933"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.933"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.935", %"class.std::__1::__bucket_list_deallocator.935"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.933"* null, %"struct.std::__1::__hash_node_base.933"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !17

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.933"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.933"* null, %"struct.std::__1::__hash_node_base.933"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.933"* null, %"struct.std::__1::__hash_node_base.933"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.933"* null, %"struct.std::__1::__hash_node_base.933"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.933"* null, %"struct.std::__1::__hash_node_base.933"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.933"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !7
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.933"* %36, %"struct.std::__1::__hash_node_base.933"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.933"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.933"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.933"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.933"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.933"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.933"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.933"* %82, %"struct.std::__1::__hash_node_base.933"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.933"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.933"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.933"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.933"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.933"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.933"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.933"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.933"* %80, %"struct.std::__1::__hash_node_base.933"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.933"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.933"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.929", %"class.std::__1::__hash_table.929"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.933"** null, %"struct.std::__1::__hash_node_base.933"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.933"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.933"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.935", %"class.std::__1::__bucket_list_deallocator.935"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools6reduce20ReductionOpportunityENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.915"*, %"class.std::__1::unique_ptr.917"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.915", %"class.std::__1::vector.915"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.917"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.915"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.915"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.915", %"class.std::__1::vector.915"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.917"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.917"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.917"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.917"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.917"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.917"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.917"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.915", %"class.std::__1::vector.915"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.917"*, %"class.std::__1::unique_ptr.917"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.917"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.917"*, %"class.std::__1::unique_ptr.917"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.917"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::reduce::ReductionOpportunity"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.917"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.917"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.917"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.917"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !19

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.917"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.917"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.917"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.917"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.917"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.917"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.917"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.917"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.917"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.917"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.917"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.917"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.917"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.917"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.917"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.917"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.917"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.917"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.917"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.917"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.917"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.917"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.917"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.917"*, %"class.std::__1::unique_ptr.917"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.917"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.917"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.917"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.917"*
  %138 = icmp eq %"class.std::__1::unique_ptr.917"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.917"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.917"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::reduce::ReductionOpportunity"*, %"class.spvtools::reduce::ReductionOpportunity"** %142, align 8
  store %"class.spvtools::reduce::ReductionOpportunity"* null, %"class.spvtools::reduce::ReductionOpportunity"** %142, align 8
  %144 = icmp eq %"class.spvtools::reduce::ReductionOpportunity"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.spvtools::reduce::ReductionOpportunity"* %143 to void (%"class.spvtools::reduce::ReductionOpportunity"*)***
  %147 = load void (%"class.spvtools::reduce::ReductionOpportunity"*)**, void (%"class.spvtools::reduce::ReductionOpportunity"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.spvtools::reduce::ReductionOpportunity"*)*, void (%"class.spvtools::reduce::ReductionOpportunity"*)** %147, i64 1
  %149 = load void (%"class.spvtools::reduce::ReductionOpportunity"*)*, void (%"class.spvtools::reduce::ReductionOpportunity"*)** %148, align 8
  tail call void %149(%"class.spvtools::reduce::ReductionOpportunity"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.917"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS6_3opt9IRContextERKNS9_10BasicBlockEPNS9_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func"**
  %5 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %4, align 8
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  store i32 %1, i32* %3, align 4
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::unordered_set.928"*, %"class.std::__1::unordered_set.928"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %61, label %13

13:                                               ; preds = %2
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #11, !range !7
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, 4294967295
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ugt i64 %11, %9
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %21, %19, %16
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.933"* %28, null
  br i1 %29, label %61, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %28, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.933"* %32, null
  br i1 %33, label %61, label %34

34:                                               ; preds = %30
  %35 = add i64 %11, -1
  br label %36

36:                                               ; preds = %57, %34
  %37 = phi %"struct.std::__1::__hash_node_base.933"* [ %32, %34 ], [ %59, %57 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %37, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.933"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %9
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  br i1 %15, label %45, label %43

43:                                               ; preds = %42
  %44 = and i64 %40, %35
  br label %49

45:                                               ; preds = %42
  %46 = icmp ult i64 %40, %11
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %40, %11
  br label %49

49:                                               ; preds = %47, %45, %43
  %50 = phi i64 [ %44, %43 ], [ %48, %47 ], [ %40, %45 ]
  %51 = icmp eq i64 %50, %24
  br i1 %51, label %57, label %61

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %37, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base.933"* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %124, label %57

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %37, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base.933"* %59, null
  br i1 %60, label %61, label %36

61:                                               ; preds = %57, %49, %30, %23, %2
  %62 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %8, i64 0, i32 0
  %63 = call { %"struct.std::__1::__hash_node_base.933"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.929"* %62, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #11
  %64 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %5, i64 0, i32 0, i32 1
  %65 = load %"class.std::__1::unordered_set.928"*, %"class.std::__1::unordered_set.928"** %64, align 8
  %66 = load i32, i32* %3, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %119, label %71

71:                                               ; preds = %61
  %72 = call i64 @llvm.ctpop.i64(i64 %69) #11, !range !7
  %73 = icmp ugt i64 %72, 1
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = add i64 %69, 4294967295
  %76 = and i64 %75, %67
  br label %81

77:                                               ; preds = %71
  %78 = icmp ugt i64 %69, %67
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = urem i64 %67, %69
  br label %81

81:                                               ; preds = %79, %77, %74
  %82 = phi i64 [ %76, %74 ], [ %80, %79 ], [ %67, %77 ]
  %83 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %84, i64 %82
  %86 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.933"* %86, null
  br i1 %87, label %119, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %86, i64 0, i32 0
  %90 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.933"* %90, null
  br i1 %91, label %119, label %92

92:                                               ; preds = %88
  %93 = add i64 %69, -1
  br label %94

94:                                               ; preds = %115, %92
  %95 = phi %"struct.std::__1::__hash_node_base.933"* [ %90, %92 ], [ %117, %115 ]
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %95, i64 1
  %97 = bitcast %"struct.std::__1::__hash_node_base.933"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, %67
  br i1 %99, label %110, label %100

100:                                              ; preds = %94
  br i1 %73, label %103, label %101

101:                                              ; preds = %100
  %102 = and i64 %98, %93
  br label %107

103:                                              ; preds = %100
  %104 = icmp ult i64 %98, %69
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = urem i64 %98, %69
  br label %107

107:                                              ; preds = %105, %103, %101
  %108 = phi i64 [ %102, %101 ], [ %106, %105 ], [ %98, %103 ]
  %109 = icmp eq i64 %108, %82
  br i1 %109, label %115, label %119

110:                                              ; preds = %94
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %95, i64 2
  %112 = bitcast %"struct.std::__1::__hash_node_base.933"* %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, %66
  br i1 %114, label %124, label %115

115:                                              ; preds = %110, %107
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %95, i64 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base.933"* %117, null
  br i1 %118, label %119, label %94

119:                                              ; preds = %115, %107, %88, %81, %61
  %120 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %5, i64 0, i32 0, i32 2
  %121 = load i32*, i32** %120, align 8
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  br label %124

124:                                              ; preds = %52, %110, %119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0FvjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #10, !noalias !20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0FvjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS6_3opt9IRContextERKNS9_10BasicBlockEPNS9_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #9 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1004"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1004"*, %"class.std::__1::__function::__default_alloc_func.1004"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1004", %"class.std::__1::__function::__default_alloc_func.1004"* %4, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %66, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1004", %"class.std::__1::__function::__default_alloc_func.1004"* %4, i64 0, i32 0, i32 2
  %10 = load %"class.std::__1::unordered_set.928"*, %"class.std::__1::unordered_set.928"** %9, align 8
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %63, label %15

15:                                               ; preds = %8
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #11, !range !7
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, 4294967295
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ugt i64 %13, %11
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %23, %21, %18
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %"class.std::__1::unordered_set.928", %"class.std::__1::unordered_set.928"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.933"**, %"struct.std::__1::__hash_node_base.933"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.933"* %30, null
  br i1 %31, label %63, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %30, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.933"* %34, null
  br i1 %35, label %63, label %36

36:                                               ; preds = %32
  %37 = add i64 %13, -1
  br label %38

38:                                               ; preds = %59, %36
  %39 = phi %"struct.std::__1::__hash_node_base.933"* [ %34, %36 ], [ %61, %59 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %39, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base.933"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %11
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  br i1 %17, label %47, label %45

45:                                               ; preds = %44
  %46 = and i64 %42, %37
  br label %51

47:                                               ; preds = %44
  %48 = icmp ult i64 %42, %13
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %42, %13
  br label %51

51:                                               ; preds = %49, %47, %45
  %52 = phi i64 [ %46, %45 ], [ %50, %49 ], [ %42, %47 ]
  %53 = icmp eq i64 %52, %26
  br i1 %53, label %59, label %63

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %39, i64 2
  %56 = bitcast %"struct.std::__1::__hash_node_base.933"* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %66, label %59

59:                                               ; preds = %54, %51
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.933", %"struct.std::__1::__hash_node_base.933"* %39, i64 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.933"*, %"struct.std::__1::__hash_node_base.933"** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.933"* %61, null
  br i1 %62, label %63, label %38

63:                                               ; preds = %59, %51, %32, %25, %8
  %64 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1004", %"class.std::__1::__function::__default_alloc_func.1004"* %4, i64 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  store i8 1, i8* %65, align 1
  br label %66

66:                                               ; preds = %54, %2, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #10, !noalias !25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!7 = !{i64 0, i64 65}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!11 = distinct !{!11, !12, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!13 = !{i8 0, i8 2}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !18}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!23 = distinct !{!23, !24, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_0FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!28 = distinct !{!28, !29, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools6reduce41RemoveSelectionReductionOpportunityFinder28CanOpSelectionMergeBeRemovedEPNS4_3opt9IRContextERKNS7_10BasicBlockEPNS7_11InstructionENS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
