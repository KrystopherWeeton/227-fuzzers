; ModuleID = '../../third_party/blink/public/mojom/authenticator_mojom_traits.cc'
source_filename = "../../third_party/blink/public/mojom/authenticator_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%"class.blink::mojom::internal::PublicKeyCredentialParameters_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32 }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.device::PublicKeyCredentialParams::CredentialInfo" = type { i32, i32 }
%"class.blink::mojom::internal::PublicKeyCredentialDescriptor_Data" = type { %"struct.mojo::internal::StructHeader", i32, [4 x i8], %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.0" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.3", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.1"*, %"class.mojo::ScopedHandleBase.1"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.1"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.5" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.14, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.16", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%"class.device::PublicKeyCredentialDescriptor" = type { i32, %"class.std::__1::vector.21", %"class.base::internal::flat_tree" }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { i8*, i8*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i8* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i8*, i8*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::mojom::internal::AuthenticatorSelectionCriteria_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, [4 x i8] }
%"class.device::AuthenticatorSelectionCriteria" = type { i32, i32, i32 }
%"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.35", %"struct.mojo::internal::Pointer.35", %"struct.mojo::internal::Pointer.36" }
%"struct.mojo::internal::Pointer.35" = type { i64 }
%"struct.mojo::internal::Pointer.36" = type { i64 }
%"struct.device::PublicKeyCredentialRpEntity" = type { %"class.std::__1::basic_string", %"class.absl::optional", %"class.absl::optional.43" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.42 }
%union.anon.42 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.43" = type { %"class.absl::optional_internal::optional_data.44" }
%"class.absl::optional_internal::optional_data.44" = type { %"class.absl::optional_internal::optional_data_base.45" }
%"class.absl::optional_internal::optional_data_base.45" = type { %"class.absl::optional_internal::optional_data_dtor_base.46" }
%"class.absl::optional_internal::optional_data_dtor_base.46" = type { i8, %union.anon.47 }
%union.anon.47 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GURL* }
%"class.mojo::internal::Array_Data.83" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.blink::mojom::PublicKeyCredentialRpEntityDataView" = type { %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"*, %"class.mojo::Message"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.url::mojom::internal::Url_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.35" }
%"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.35", %"struct.mojo::internal::Pointer.36", %"struct.mojo::internal::Pointer.35" }
%"class.device::PublicKeyCredentialUserEntity" = type { %"class.std::__1::vector.21", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.43" }
%"class.blink::mojom::PublicKeyCredentialUserEntityDataView" = type { %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"*, %"class.mojo::Message"* }
%"class.blink::mojom::internal::CableAuthentication_Data" = type { %"struct.mojo::internal::StructHeader", i8, [7 x i8], %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer" }
%"struct.device::CableDiscoveryData" = type { i32, %"class.absl::optional.51", %"class.absl::optional.57" }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"struct.device::CableDiscoveryData::V1Data" }
%"struct.device::CableDiscoveryData::V1Data" = type { %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array.56" }
%"struct.std::__1::array" = type { [16 x i8] }
%"struct.std::__1::array.56" = type { [32 x i8] }
%"class.absl::optional.57" = type { %"class.absl::optional_internal::optional_data.58" }
%"class.absl::optional_internal::optional_data.58" = type { %"class.absl::optional_internal::optional_data_base.59" }
%"class.absl::optional_internal::optional_data_base.59" = type { %"class.absl::optional_internal::optional_data_dtor_base.60" }
%"class.absl::optional_internal::optional_data_dtor_base.60" = type { i8, %union.anon.61 }
%union.anon.61 = type { %"class.std::__1::vector.21" }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.blink::mojom::CableAuthenticationDataView" = type { %"class.blink::mojom::internal::CableAuthentication_Data"*, %"class.mojo::Message"* }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"struct.std::__1::array" }
%"class.absl::optional.67" = type { %"class.absl::optional_internal::optional_data.68" }
%"class.absl::optional_internal::optional_data.68" = type { %"class.absl::optional_internal::optional_data_base.69" }
%"class.absl::optional_internal::optional_data_base.69" = type { %"class.absl::optional_internal::optional_data_dtor_base.70" }
%"class.absl::optional_internal::optional_data_dtor_base.70" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"struct.std::__1::array.56" }
%"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare" = type { i8 }

$_ZN5blink5mojom37PublicKeyCredentialUserEntityDataView6ReadIdINSt3__16vectorIhNS3_9allocatorIhEEEEEEbPT_ = comdat any

$_ZN4base8internal9flat_treeIN6device21FidoTransportProtocolENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPS3_EESF_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl = comdat any

$_ZN4mojo8internal11DeserializeINS_14StringDataViewERPNS0_10Array_DataIcEEN4absl8optionalINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_ = comdat any

$_ZN4mojo8internal11DeserializeINS_13ArrayDataViewIhEERPNS0_10Array_DataIhEEN4absl8optionalINSt3__16vectorIhNSA_9allocatorIhEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_ = comdat any

@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@switch.table._ZN4mojo10EnumTraitsIN5blink5mojom22AuthenticatorTransportEN6device21FidoTransportProtocolEE7ToMojomES5_ = private unnamed_addr constant [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 3], align 4
@switch.table._ZN4mojo10EnumTraitsIN5blink5mojom31AttestationConveyancePreferenceEN6device31AttestationConveyancePreferenceEE7ToMojomES5_ = private unnamed_addr constant [4 x i32] [i32 1, i32 2, i32 3, i32 3], align 4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN5blink5mojom22AuthenticatorTransportEN6device21FidoTransportProtocolEE7ToMojomES5_(i8 zeroext) local_unnamed_addr #0 align 2 {
  %2 = add i8 %0, -1
  %3 = icmp ult i8 %2, 5
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i8 %2 to i64
  %6 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN4mojo10EnumTraitsIN5blink5mojom22AuthenticatorTransportEN6device21FidoTransportProtocolEE7ToMojomES5_, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN5blink5mojom22AuthenticatorTransportEN6device21FidoTransportProtocolEE9FromMojomES3_PS5_(i32, i8* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 5
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = trunc i32 %0 to i8
  store i8 %5, i8* %1, align 1
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN5blink5mojom23PublicKeyCredentialTypeEN6device14CredentialTypeEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN5blink5mojom23PublicKeyCredentialTypeEN6device14CredentialTypeEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %0, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom37PublicKeyCredentialParametersDataViewEN6device25PublicKeyCredentialParams14CredentialInfoEE4ReadES3_PS6_(%"class.blink::mojom::internal::PublicKeyCredentialParameters_Data"*, %"struct.device::PublicKeyCredentialParams::CredentialInfo"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialParameters_Data", %"class.blink::mojom::internal::PublicKeyCredentialParameters_Data"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 1
  %5 = getelementptr inbounds %"struct.device::PublicKeyCredentialParams::CredentialInfo", %"struct.device::PublicKeyCredentialParams::CredentialInfo"* %1, i64 0, i32 1
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialParameters_Data", %"class.blink::mojom::internal::PublicKeyCredentialParameters_Data"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.device::PublicKeyCredentialParams::CredentialInfo", %"struct.device::PublicKeyCredentialParams::CredentialInfo"* %1, i64 0, i32 0
  store i32 0, i32* %10, align 4
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i1 [ true, %9 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom37PublicKeyCredentialDescriptorDataViewEN6device29PublicKeyCredentialDescriptorEE4ReadES3_PS5_(%"class.blink::mojom::internal::PublicKeyCredentialDescriptor_Data"*, %"class.mojo::Message"*, %"class.device::PublicKeyCredentialDescriptor"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.device::PublicKeyCredentialDescriptor", align 8
  %5 = alloca %"class.std::__1::vector.21", align 8
  %6 = alloca %"class.base::internal::flat_tree", align 8
  %7 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialDescriptor_Data", %"class.blink::mojom::internal::PublicKeyCredentialDescriptor_Data"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %119

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialDescriptor_Data", %"class.blink::mojom::internal::PublicKeyCredentialDescriptor_Data"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = bitcast %"struct.mojo::internal::Pointer"* %11 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %13
  br i1 %14, label %33, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds i8, i8* %16, i64 4
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 1
  %21 = zext i32 %20 to i64
  %22 = icmp eq i32 %20, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %17
  %24 = tail call i8* @_Znwm(i64 %21) #12
  %25 = ptrtoint i8* %24 to i64
  %26 = sub i64 %21, %25
  %27 = getelementptr i8, i8* %24, i64 %26
  %28 = ptrtoint i8* %27 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %24, i8 0, i64 %28, i1 false) #13
  %29 = getelementptr inbounds i8, i8* %24, i64 %21
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds i8, i8* %16, i64 8
  %32 = zext i32 %20 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 %31, i64 %32, i1 false) #13
  br label %33

33:                                               ; preds = %17, %23, %10
  %34 = phi i64 [ %25, %23 ], [ 0, %10 ], [ 0, %17 ]
  %35 = phi i64 [ %30, %23 ], [ 0, %10 ], [ 0, %17 ]
  %36 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialDescriptor_Data", %"class.blink::mojom::internal::PublicKeyCredentialDescriptor_Data"* %0, i64 0, i32 4
  %37 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %36, i64 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  %40 = bitcast %"struct.mojo::internal::Pointer.0"* %36 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 %38
  br i1 %39, label %70, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %41, i64 4
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 1
  %46 = zext i32 %45 to i64
  %47 = icmp eq i32 %45, 0
  br i1 %47, label %70, label %48

48:                                               ; preds = %42
  %49 = tail call i8* @_Znwm(i64 %46) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %46
  %51 = ptrtoint i8* %49 to i64
  %52 = sub i64 %46, %51
  %53 = getelementptr i8, i8* %49, i64 %52
  %54 = ptrtoint i8* %53 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 0, i64 %54, i1 false) #13
  %55 = ptrtoint i8* %50 to i64
  %56 = getelementptr inbounds i8, i8* %41, i64 8
  %57 = bitcast i8* %56 to i32*
  br label %58

58:                                               ; preds = %64, %48
  %59 = phi i64 [ 0, %48 ], [ %61, %64 ]
  %60 = getelementptr inbounds i32, i32* %57, i64 %59
  %61 = add nuw nsw i64 %59, 1
  %62 = load i32, i32* %60, align 4
  %63 = icmp ult i32 %62, 5
  br i1 %63, label %64, label %113

64:                                               ; preds = %58
  %65 = getelementptr inbounds i8, i8* %49, i64 %59
  %66 = trunc i32 %62 to i8
  store i8 %66, i8* %65, align 1
  %67 = load i32, i32* %44, align 1
  %68 = zext i32 %67 to i64
  %69 = icmp ult i64 %61, %68
  br i1 %69, label %58, label %70

70:                                               ; preds = %64, %42, %33
  %71 = phi i64 [ 0, %33 ], [ 0, %42 ], [ %51, %64 ]
  %72 = phi i64 [ 0, %33 ], [ 0, %42 ], [ %55, %64 ]
  %73 = bitcast %"class.device::PublicKeyCredentialDescriptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %73) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 56, i1 false)
  %74 = bitcast %"class.std::__1::vector.21"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #13
  %75 = sub i64 %35, %34
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %90, label %77

77:                                               ; preds = %70
  %78 = icmp slt i64 %75, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %77
  %80 = bitcast %"class.std::__1::vector.21"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %80) #14
  unreachable

81:                                               ; preds = %77
  %82 = tail call i8* @_Znwm(i64 %75) #12
  %83 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %5, i64 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %5, i64 0, i32 0, i32 0
  store i8* %82, i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %82, i64 %75
  %86 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %85, i8** %86, align 8
  %87 = inttoptr i64 %34 to i8*
  %88 = bitcast i8** %83 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %82, i8* align 1 %87, i64 %75, i1 false) #13
  %89 = ptrtoint i8* %85 to i64
  store i64 %89, i64* %88, align 8
  br label %90

90:                                               ; preds = %70, %81
  %91 = bitcast %"class.base::internal::flat_tree"* %6 to i64*
  store i64 %71, i64* %91, align 8
  %92 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %6, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast i8** %92 to i64*
  store i64 %72, i64* %93, align 8
  %94 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast i8** %94 to i64*
  store i64 %72, i64* %95, align 8
  %96 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %6, i64 0, i32 0, i32 0, i32 0
  %97 = inttoptr i64 %71 to i8*
  %98 = inttoptr i64 %72 to i8*
  call void @_ZN4base8internal9flat_treeIN6device21FidoTransportProtocolENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPS3_EESF_(%"class.base::internal::flat_tree"* nonnull %6, i8* %97, i8* %98) #13
  call void @_ZN6device29PublicKeyCredentialDescriptorC1ENS_14CredentialTypeENSt3__16vectorIhNS2_9allocatorIhEEEEN4base8internal9flat_treeINS_21FidoTransportProtocolENS7_8identityENS2_4lessIvEENS3_ISA_NS4_ISA_EEEEEE(%"class.device::PublicKeyCredentialDescriptor"* nonnull %4, i32 0, %"class.std::__1::vector.21"* nonnull %5, %"class.base::internal::flat_tree"* nonnull %6) #13
  %99 = load i8*, i8** %96, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %90
  %102 = ptrtoint i8* %99 to i64
  store i64 %102, i64* %93, align 8
  call void @_ZdlPv(i8* nonnull %99) #12
  br label %103

103:                                              ; preds = %90, %101
  %104 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %5, i64 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = icmp eq i8* %105, null
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = ptrtoint i8* %105 to i64
  %109 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %5, i64 0, i32 0, i32 1
  %110 = bitcast i8** %109 to i64*
  store i64 %108, i64* %110, align 8
  call void @_ZdlPv(i8* nonnull %105) #12
  br label %111

111:                                              ; preds = %103, %107
  %112 = call dereferenceable(56) %"class.device::PublicKeyCredentialDescriptor"* @_ZN6device29PublicKeyCredentialDescriptoraSERKS0_(%"class.device::PublicKeyCredentialDescriptor"* %2, %"class.device::PublicKeyCredentialDescriptor"* nonnull dereferenceable(56) %4) #13
  call void @_ZN6device29PublicKeyCredentialDescriptorD1Ev(%"class.device::PublicKeyCredentialDescriptor"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %73) #13
  br label %114

113:                                              ; preds = %58
  tail call void @_ZdlPv(i8* nonnull %49) #12
  br label %114

114:                                              ; preds = %111, %113
  %115 = phi i1 [ false, %113 ], [ true, %111 ]
  %116 = icmp eq i64 %34, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %114
  %118 = inttoptr i64 %34 to i8*
  call void @_ZdlPv(i8* nonnull %118) #12
  br label %119

119:                                              ; preds = %3, %114, %117
  %120 = phi i1 [ %115, %114 ], [ %115, %117 ], [ false, %3 ]
  ret i1 %120
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN6device29PublicKeyCredentialDescriptorC1ENS_14CredentialTypeENSt3__16vectorIhNS2_9allocatorIhEEEEN4base8internal9flat_treeINS_21FidoTransportProtocolENS7_8identityENS2_4lessIvEENS3_ISA_NS4_ISA_EEEEEE(%"class.device::PublicKeyCredentialDescriptor"*, i32, %"class.std::__1::vector.21"*, %"class.base::internal::flat_tree"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare dereferenceable(56) %"class.device::PublicKeyCredentialDescriptor"* @_ZN6device29PublicKeyCredentialDescriptoraSERKS0_(%"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"* dereferenceable(56)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6device29PublicKeyCredentialDescriptorD1Ev(%"class.device::PublicKeyCredentialDescriptor"*) unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN5blink5mojom23AuthenticatorAttachmentEN6device23AuthenticatorAttachmentEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  %4 = icmp eq i32 %0, 2
  %5 = select i1 %4, i32 2, i32 %3
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN5blink5mojom23AuthenticatorAttachmentEN6device23AuthenticatorAttachmentEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 3
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN5blink5mojom22ResidentKeyRequirementEN6device22ResidentKeyRequirementEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  %4 = icmp eq i32 %0, 2
  %5 = select i1 %4, i32 2, i32 %3
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN5blink5mojom22ResidentKeyRequirementEN6device22ResidentKeyRequirementEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 3
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN5blink5mojom27UserVerificationRequirementEN6device27UserVerificationRequirementEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  %4 = icmp eq i32 %0, 2
  %5 = select i1 %4, i32 2, i32 %3
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN5blink5mojom27UserVerificationRequirementEN6device27UserVerificationRequirementEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 3
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN5blink5mojom16LargeBlobSupportEN6device16LargeBlobSupportEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  %4 = icmp eq i32 %0, 2
  %5 = select i1 %4, i32 2, i32 %3
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN5blink5mojom16LargeBlobSupportEN6device16LargeBlobSupportEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 3
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom38AuthenticatorSelectionCriteriaDataViewEN6device30AuthenticatorSelectionCriteriaEE4ReadES3_PS5_(%"class.blink::mojom::internal::AuthenticatorSelectionCriteria_Data"*, %"class.device::AuthenticatorSelectionCriteria"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.device::AuthenticatorSelectionCriteria", align 4
  %4 = getelementptr inbounds %"class.blink::mojom::internal::AuthenticatorSelectionCriteria_Data", %"class.blink::mojom::internal::AuthenticatorSelectionCriteria_Data"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = icmp ult i32 %5, 3
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::mojom::internal::AuthenticatorSelectionCriteria_Data", %"class.blink::mojom::internal::AuthenticatorSelectionCriteria_Data"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 1
  %10 = icmp ult i32 %9, 3
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::mojom::internal::AuthenticatorSelectionCriteria_Data", %"class.blink::mojom::internal::AuthenticatorSelectionCriteria_Data"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 1
  %14 = icmp ult i32 %13, 3
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = bitcast %"class.device::AuthenticatorSelectionCriteria"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #13
  call void @_ZN6device30AuthenticatorSelectionCriteriaC1ENS_23AuthenticatorAttachmentENS_22ResidentKeyRequirementENS_27UserVerificationRequirementE(%"class.device::AuthenticatorSelectionCriteria"* nonnull %3, i32 %5, i32 %13, i32 %9) #13
  %17 = call dereferenceable(12) %"class.device::AuthenticatorSelectionCriteria"* @_ZN6device30AuthenticatorSelectionCriteriaaSEOS0_(%"class.device::AuthenticatorSelectionCriteria"* %1, %"class.device::AuthenticatorSelectionCriteria"* nonnull dereferenceable(12) %3) #13
  call void @_ZN6device30AuthenticatorSelectionCriteriaD1Ev(%"class.device::AuthenticatorSelectionCriteria"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #13
  br label %18

18:                                               ; preds = %11, %7, %2, %15
  %19 = phi i1 [ true, %15 ], [ false, %2 ], [ false, %7 ], [ false, %11 ]
  ret i1 %19
}

declare void @_ZN6device30AuthenticatorSelectionCriteriaC1ENS_23AuthenticatorAttachmentENS_22ResidentKeyRequirementENS_27UserVerificationRequirementE(%"class.device::AuthenticatorSelectionCriteria"*, i32, i32, i32) unnamed_addr #5

declare dereferenceable(12) %"class.device::AuthenticatorSelectionCriteria"* @_ZN6device30AuthenticatorSelectionCriteriaaSEOS0_(%"class.device::AuthenticatorSelectionCriteria"*, %"class.device::AuthenticatorSelectionCriteria"* dereferenceable(12)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6device30AuthenticatorSelectionCriteriaD1Ev(%"class.device::AuthenticatorSelectionCriteria"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom35PublicKeyCredentialRpEntityDataViewEN6device27PublicKeyCredentialRpEntityEE4ReadES3_PS5_(%"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"*, %"class.mojo::Message"*, %"struct.device::PublicKeyCredentialRpEntity"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.mojo::internal::Array_Data.83"*, align 8
  %5 = alloca %"class.blink::mojom::PublicKeyCredentialRpEntityDataView", align 8
  %6 = getelementptr inbounds %"class.blink::mojom::PublicKeyCredentialRpEntityDataView", %"class.blink::mojom::PublicKeyCredentialRpEntityDataView"* %5, i64 0, i32 0
  store %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"* %0, %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::PublicKeyCredentialRpEntityDataView", %"class.blink::mojom::PublicKeyCredentialRpEntityDataView"* %5, i64 0, i32 1
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %7, align 8
  %8 = getelementptr inbounds %"struct.device::PublicKeyCredentialRpEntity", %"struct.device::PublicKeyCredentialRpEntity"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data", %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.mojo::internal::Pointer.35", %"struct.mojo::internal::Pointer.35"* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  %13 = bitcast %"struct.mojo::internal::Pointer.35"* %9 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %11
  br i1 %12, label %60, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = getelementptr inbounds i8, i8* %14, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = zext i32 %19 to i64
  %21 = tail call i1 @llvm.is.constant.i64(i64 %20) #13
  %22 = icmp ult i32 %19, 23
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %42

24:                                               ; preds = %15
  %25 = bitcast %"struct.device::PublicKeyCredentialRpEntity"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.device::PublicKeyCredentialRpEntity", %"struct.device::PublicKeyCredentialRpEntity"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.device::PublicKeyCredentialRpEntity", %"struct.device::PublicKeyCredentialRpEntity"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  br label %36

33:                                               ; preds = %24
  %34 = trunc i32 %19 to i8
  store i8 %34, i8* %26, align 1
  %35 = bitcast %"struct.device::PublicKeyCredentialRpEntity"* %2 to i8*
  br label %36

36:                                               ; preds = %33, %29
  %37 = phi i8* [ %32, %29 ], [ %35, %33 ]
  %38 = icmp eq i32 %19, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %16, i64 %20, i1 false) #13
  br label %40

40:                                               ; preds = %39, %36
  %41 = getelementptr inbounds i8, i8* %37, i64 %20
  store i8 0, i8* %41, align 1
  br label %45

42:                                               ; preds = %15
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %8, i8* %16, i64 %20) #13
  %44 = bitcast %"struct.device::PublicKeyCredentialRpEntity"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %45

45:                                               ; preds = %42, %40
  %46 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %44, %42 ], [ %25, %40 ]
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"struct.device::PublicKeyCredentialRpEntity", %"struct.device::PublicKeyCredentialRpEntity"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast %"struct.device::PublicKeyCredentialRpEntity"* %2 to i8*
  %53 = select i1 %49, i8* %51, i8* %52
  %54 = getelementptr inbounds %"struct.device::PublicKeyCredentialRpEntity", %"struct.device::PublicKeyCredentialRpEntity"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = zext i8 %48 to i64
  %57 = select i1 %49, i64 %55, i64 %56
  %58 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %53, i64 %57) #13
  br i1 %58, label %60, label %59

59:                                               ; preds = %45
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #13
  br label %60

60:                                               ; preds = %59, %45, %3
  %61 = getelementptr inbounds %"struct.device::PublicKeyCredentialRpEntity", %"struct.device::PublicKeyCredentialRpEntity"* %2, i64 0, i32 1
  %62 = bitcast %"class.mojo::internal::Array_Data.83"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #13
  %63 = load %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"*, %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"** %6, align 8
  %64 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data", %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"* %63, i64 0, i32 2
  %65 = getelementptr inbounds %"struct.mojo::internal::Pointer.35", %"struct.mojo::internal::Pointer.35"* %64, i64 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %"struct.mojo::internal::Pointer.35"* %64 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  %70 = bitcast i8* %69 to %"class.mojo::internal::Array_Data.83"*
  %71 = select i1 %67, %"class.mojo::internal::Array_Data.83"* null, %"class.mojo::internal::Array_Data.83"* %70
  store %"class.mojo::internal::Array_Data.83"* %71, %"class.mojo::internal::Array_Data.83"** %4, align 8
  %72 = call zeroext i1 @_ZN4mojo8internal11DeserializeINS_14StringDataViewERPNS0_10Array_DataIcEEN4absl8optionalINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data.83"** nonnull dereferenceable(8) %4, %"class.absl::optional"* %61, %"class.mojo::Message"** dereferenceable(8) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #13
  br i1 %72, label %73, label %96

73:                                               ; preds = %60
  %74 = load %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"*, %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"** %6, align 8
  %75 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data", %"class.blink::mojom::internal::PublicKeyCredentialRpEntity_Data"* %74, i64 0, i32 3
  %76 = getelementptr inbounds %"struct.mojo::internal::Pointer.36", %"struct.mojo::internal::Pointer.36"* %75, i64 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %"struct.mojo::internal::Pointer.36"* %75 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 %77
  %81 = bitcast i8* %80 to %"class.url::mojom::internal::Url_Data"*
  %82 = getelementptr inbounds %"struct.device::PublicKeyCredentialRpEntity", %"struct.device::PublicKeyCredentialRpEntity"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %78, label %85, label %88

85:                                               ; preds = %73
  br i1 %84, label %95, label %86

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"struct.device::PublicKeyCredentialRpEntity", %"struct.device::PublicKeyCredentialRpEntity"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLD1Ev(%class.GURL* %87) #13
  store i8 0, i8* %82, align 8
  br label %95

88:                                               ; preds = %73
  br i1 %84, label %89, label %91

89:                                               ; preds = %88
  %90 = getelementptr inbounds %"struct.device::PublicKeyCredentialRpEntity", %"struct.device::PublicKeyCredentialRpEntity"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLC1Ev(%class.GURL* %90) #13
  store i8 1, i8* %82, align 8
  br label %91

91:                                               ; preds = %88, %89
  %92 = getelementptr inbounds %"struct.device::PublicKeyCredentialRpEntity", %"struct.device::PublicKeyCredentialRpEntity"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %93 = load %"class.mojo::Message"*, %"class.mojo::Message"** %7, align 8
  %94 = call zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom11UrlDataViewE4GURLE4ReadES3_PS4_(%"class.url::mojom::internal::Url_Data"* nonnull %81, %"class.mojo::Message"* %93, %class.GURL* %92) #13
  br i1 %94, label %95, label %96

95:                                               ; preds = %86, %85, %91
  br label %96

96:                                               ; preds = %60, %91, %95
  %97 = phi i1 [ true, %95 ], [ false, %91 ], [ false, %60 ]
  ret i1 %97
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom37PublicKeyCredentialUserEntityDataViewEN6device29PublicKeyCredentialUserEntityEE4ReadES3_PS5_(%"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"*, %"class.mojo::Message"*, %"class.device::PublicKeyCredentialUserEntity"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.mojo::internal::Array_Data.83"*, align 8
  %5 = alloca %"class.mojo::internal::Array_Data.83"*, align 8
  %6 = alloca %"class.blink::mojom::PublicKeyCredentialUserEntityDataView", align 8
  %7 = getelementptr inbounds %"class.blink::mojom::PublicKeyCredentialUserEntityDataView", %"class.blink::mojom::PublicKeyCredentialUserEntityDataView"* %6, i64 0, i32 0
  store %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"* %0, %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::PublicKeyCredentialUserEntityDataView", %"class.blink::mojom::PublicKeyCredentialUserEntityDataView"* %6, i64 0, i32 1
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %8, align 8
  %9 = getelementptr inbounds %"class.device::PublicKeyCredentialUserEntity", %"class.device::PublicKeyCredentialUserEntity"* %2, i64 0, i32 0
  %10 = call zeroext i1 @_ZN5blink5mojom37PublicKeyCredentialUserEntityDataView6ReadIdINSt3__16vectorIhNS3_9allocatorIhEEEEEEbPT_(%"class.blink::mojom::PublicKeyCredentialUserEntityDataView"* nonnull %6, %"class.std::__1::vector.21"* %9)
  br i1 %10, label %11, label %60

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.device::PublicKeyCredentialUserEntity", %"class.device::PublicKeyCredentialUserEntity"* %2, i64 0, i32 1
  %13 = bitcast %"class.mojo::internal::Array_Data.83"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %14 = load %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"*, %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"** %7, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data", %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"* %14, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.mojo::internal::Pointer.35", %"struct.mojo::internal::Pointer.35"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  %19 = bitcast %"struct.mojo::internal::Pointer.35"* %15 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %17
  %21 = bitcast i8* %20 to %"class.mojo::internal::Array_Data.83"*
  %22 = select i1 %18, %"class.mojo::internal::Array_Data.83"* null, %"class.mojo::internal::Array_Data.83"* %21
  store %"class.mojo::internal::Array_Data.83"* %22, %"class.mojo::internal::Array_Data.83"** %5, align 8
  %23 = call zeroext i1 @_ZN4mojo8internal11DeserializeINS_14StringDataViewERPNS0_10Array_DataIcEEN4absl8optionalINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data.83"** nonnull dereferenceable(8) %5, %"class.absl::optional"* %12, %"class.mojo::Message"** dereferenceable(8) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  br i1 %23, label %24, label %60

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.device::PublicKeyCredentialUserEntity", %"class.device::PublicKeyCredentialUserEntity"* %2, i64 0, i32 2
  %26 = bitcast %"class.mojo::internal::Array_Data.83"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  %27 = load %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"*, %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"** %7, align 8
  %28 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data", %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"* %27, i64 0, i32 4
  %29 = getelementptr inbounds %"struct.mojo::internal::Pointer.35", %"struct.mojo::internal::Pointer.35"* %28, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  %32 = bitcast %"struct.mojo::internal::Pointer.35"* %28 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %30
  %34 = bitcast i8* %33 to %"class.mojo::internal::Array_Data.83"*
  %35 = select i1 %31, %"class.mojo::internal::Array_Data.83"* null, %"class.mojo::internal::Array_Data.83"* %34
  store %"class.mojo::internal::Array_Data.83"* %35, %"class.mojo::internal::Array_Data.83"** %4, align 8
  %36 = call zeroext i1 @_ZN4mojo8internal11DeserializeINS_14StringDataViewERPNS0_10Array_DataIcEEN4absl8optionalINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data.83"** nonnull dereferenceable(8) %4, %"class.absl::optional"* %25, %"class.mojo::Message"** dereferenceable(8) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br i1 %36, label %37, label %60

37:                                               ; preds = %24
  %38 = load %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"*, %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"** %7, align 8
  %39 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data", %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"* %38, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.mojo::internal::Pointer.36", %"struct.mojo::internal::Pointer.36"* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  %43 = bitcast %"struct.mojo::internal::Pointer.36"* %39 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %41
  %45 = bitcast i8* %44 to %"class.url::mojom::internal::Url_Data"*
  %46 = getelementptr inbounds %"class.device::PublicKeyCredentialUserEntity", %"class.device::PublicKeyCredentialUserEntity"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %42, label %49, label %52

49:                                               ; preds = %37
  br i1 %48, label %59, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.device::PublicKeyCredentialUserEntity", %"class.device::PublicKeyCredentialUserEntity"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLD1Ev(%class.GURL* %51) #13
  store i8 0, i8* %46, align 8
  br label %59

52:                                               ; preds = %37
  br i1 %48, label %53, label %55

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.device::PublicKeyCredentialUserEntity", %"class.device::PublicKeyCredentialUserEntity"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLC1Ev(%class.GURL* %54) #13
  store i8 1, i8* %46, align 8
  br label %55

55:                                               ; preds = %52, %53
  %56 = getelementptr inbounds %"class.device::PublicKeyCredentialUserEntity", %"class.device::PublicKeyCredentialUserEntity"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %58 = call zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom11UrlDataViewE4GURLE4ReadES3_PS4_(%"class.url::mojom::internal::Url_Data"* nonnull %45, %"class.mojo::Message"* %57, %class.GURL* %56) #13
  br i1 %58, label %59, label %60

59:                                               ; preds = %50, %49, %55
  br label %60

60:                                               ; preds = %24, %11, %3, %55, %59
  %61 = phi i1 [ true, %59 ], [ false, %55 ], [ false, %3 ], [ false, %11 ], [ false, %24 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom37PublicKeyCredentialUserEntityDataView6ReadIdINSt3__16vectorIhNS3_9allocatorIhEEEEEEbPT_(%"class.blink::mojom::PublicKeyCredentialUserEntityDataView"*, %"class.std::__1::vector.21"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::PublicKeyCredentialUserEntityDataView", %"class.blink::mojom::PublicKeyCredentialUserEntityDataView"* %0, i64 0, i32 0
  %4 = load %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"*, %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data", %"class.blink::mojom::internal::PublicKeyCredentialUserEntity_Data"* %4, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = bitcast %"struct.mojo::internal::Pointer"* %5 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %7
  %11 = icmp eq i8* %10, null
  %12 = or i1 %8, %11
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector.21"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %1, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  br label %72

18:                                               ; preds = %2
  %19 = getelementptr inbounds i8, i8* %10, i64 4
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %1, i64 0, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.21"* %1 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %28, %22
  br i1 %29, label %48, label %30

30:                                               ; preds = %18
  %31 = icmp eq i32 %21, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = tail call i8* @_Znwm(i64 %22) #12
  %34 = getelementptr inbounds i8, i8* %33, i64 %22
  %35 = ptrtoint i8* %33 to i64
  %36 = sub i64 %22, %35
  %37 = getelementptr i8, i8* %33, i64 %36
  %38 = ptrtoint i8* %37 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %33, i8 0, i64 %38, i1 false) #13
  %39 = ptrtoint i8* %34 to i64
  br label %40

40:                                               ; preds = %32, %30
  %41 = phi i64 [ %39, %32 ], [ 0, %30 ]
  %42 = phi i64 [ %35, %32 ], [ 0, %30 ]
  store i64 %42, i64* %26, align 8
  store i64 %41, i64* %24, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast i8** %43 to i64*
  store i64 %41, i64* %44, align 8
  %45 = icmp eq i64 %27, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %40
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZdlPv(i8* nonnull %47) #12
  br label %48

48:                                               ; preds = %46, %40, %18
  %49 = load i32, i32* %20, align 1
  %50 = zext i32 %49 to i64
  %51 = icmp eq i32 %49, 0
  br i1 %51, label %72, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %1, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  %56 = getelementptr inbounds i8, i8* %10, i64 8
  br i1 %55, label %57, label %61

57:                                               ; preds = %52
  %58 = load i8, i8* %56, align 1
  store i8 %58, i8* null, align 536870912
  %59 = load i32, i32* %20, align 1
  %60 = icmp ugt i32 %59, 1
  br i1 %60, label %62, label %72

61:                                               ; preds = %52
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 1 %56, i64 %50, i1 false) #13
  br label %72

62:                                               ; preds = %57, %62
  %63 = phi i64 [ %67, %62 ], [ 1, %57 ]
  %64 = load i8*, i8** %53, align 8
  %65 = getelementptr inbounds i8, i8* %56, i64 %63
  %66 = load i8, i8* %65, align 1
  %67 = add nuw nsw i64 %63, 1
  %68 = getelementptr inbounds i8, i8* %64, i64 %63
  store i8 %66, i8* %68, align 1
  %69 = load i32, i32* %20, align 1
  %70 = zext i32 %69 to i64
  %71 = icmp ult i64 %67, %70
  br i1 %71, label %62, label %72

72:                                               ; preds = %62, %13, %48, %57, %61
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom27CableAuthenticationDataViewEN6device18CableDiscoveryDataEE4ReadES3_PS5_(%"class.blink::mojom::internal::CableAuthentication_Data"*, %"class.mojo::Message"*, %"struct.device::CableDiscoveryData"* nocapture) local_unnamed_addr #3 align 2 {
  %4 = bitcast %"class.blink::mojom::internal::CableAuthentication_Data"* %0 to i8*
  %5 = alloca %"class.mojo::internal::Array_Data"*, align 8
  %6 = alloca %"class.blink::mojom::CableAuthenticationDataView", align 8
  %7 = alloca %"class.absl::optional.62", align 1
  %8 = alloca %"class.absl::optional.62", align 1
  %9 = alloca %"class.absl::optional.67", align 1
  %10 = alloca %"class.absl::optional.57", align 8
  %11 = getelementptr inbounds %"class.blink::mojom::CableAuthenticationDataView", %"class.blink::mojom::CableAuthenticationDataView"* %6, i64 0, i32 0
  store %"class.blink::mojom::internal::CableAuthentication_Data"* %0, %"class.blink::mojom::internal::CableAuthentication_Data"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::CableAuthenticationDataView", %"class.blink::mojom::CableAuthenticationDataView"* %6, i64 0, i32 1
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::internal::CableAuthentication_Data", %"class.blink::mojom::internal::CableAuthentication_Data"* %0, i64 0, i32 1
  %14 = load i8, i8* %13, align 1
  switch i8 %14, label %140 [
    i8 1, label %15
    i8 2, label %78
  ]

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %18 = getelementptr inbounds i8, i8* %16, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %18, i8 -86, i64 16, i1 false)
  store i8 0, i8* %16, align 1
  %19 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %21, i8 -86, i64 16, i1 false)
  store i8 0, i8* %19, align 1
  %22 = getelementptr inbounds %"class.absl::optional.67", %"class.absl::optional.67"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 33, i8* nonnull %22) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %22, i8 0, i64 33, i1 false) #13
  %23 = getelementptr inbounds %"class.blink::mojom::internal::CableAuthentication_Data", %"class.blink::mojom::internal::CableAuthentication_Data"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %23, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %15
  store i8 0, i8* %16, align 1
  br label %77

28:                                               ; preds = %15
  %29 = bitcast %"struct.mojo::internal::Pointer"* %23 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %25
  %31 = getelementptr inbounds i8, i8* %16, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %31, i8 0, i64 16, i1 false) #13
  store i8 1, i8* %16, align 1
  %32 = getelementptr inbounds i8, i8* %30, i64 4
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 1
  %35 = icmp eq i32 %34, 16
  br i1 %35, label %36, label %77

36:                                               ; preds = %28
  %37 = add i64 %25, 24
  %38 = getelementptr i8, i8* %4, i64 %37
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %38, i64 16, i1 false)
  %39 = getelementptr inbounds %"class.blink::mojom::internal::CableAuthentication_Data", %"class.blink::mojom::internal::CableAuthentication_Data"* %0, i64 0, i32 4
  %40 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %36
  store i8 0, i8* %19, align 1
  br label %77

44:                                               ; preds = %36
  %45 = bitcast %"struct.mojo::internal::Pointer"* %39 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 %41
  %47 = getelementptr inbounds i8, i8* %19, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 0, i64 16, i1 false) #13
  store i8 1, i8* %19, align 1
  %48 = getelementptr inbounds i8, i8* %46, i64 4
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 1
  %51 = icmp eq i32 %50, 16
  br i1 %51, label %52, label %77

52:                                               ; preds = %44
  %53 = add i64 %41, 32
  %54 = getelementptr i8, i8* %4, i64 %53
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %54, i64 16, i1 false)
  %55 = getelementptr inbounds %"class.blink::mojom::internal::CableAuthentication_Data", %"class.blink::mojom::internal::CableAuthentication_Data"* %0, i64 0, i32 5
  %56 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %52
  store i8 0, i8* %22, align 1
  br label %77

60:                                               ; preds = %52
  %61 = bitcast %"struct.mojo::internal::Pointer"* %55 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 %57
  %63 = getelementptr inbounds i8, i8* %22, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %63, i8 0, i64 32, i1 false) #13
  store i8 1, i8* %22, align 1
  %64 = getelementptr inbounds i8, i8* %62, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  %67 = icmp eq i32 %66, 32
  br i1 %67, label %68, label %77

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.absl::optional.67", %"class.absl::optional.67"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %70 = add i64 %57, 40
  %71 = getelementptr i8, i8* %4, i64 %70
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %71, i64 32, i1 false)
  %72 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 0
  store i32 1, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %73, align 1
  %74 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %17, i64 16, i1 false)
  %75 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %75, i8* align 1 %20, i64 16, i1 false)
  %76 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %69, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %16) #13
  br label %140

77:                                               ; preds = %59, %60, %43, %44, %27, %28
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %16) #13
  br label %140

78:                                               ; preds = %3
  %79 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #13
  %80 = bitcast %"class.absl::optional.57"* %10 to i64*
  store i64 -6148914691236517206, i64* %80, align 8
  store i8 0, i8* %79, align 8
  %81 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast %union.anon.61* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #13
  %83 = bitcast %"class.mojo::internal::Array_Data"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  %84 = getelementptr inbounds %"class.blink::mojom::internal::CableAuthentication_Data", %"class.blink::mojom::internal::CableAuthentication_Data"* %0, i64 0, i32 6
  %85 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %84, i64 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  %88 = bitcast %"struct.mojo::internal::Pointer"* %84 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 %86
  %90 = bitcast i8* %89 to %"class.mojo::internal::Array_Data"*
  %91 = select i1 %87, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %90
  store %"class.mojo::internal::Array_Data"* %91, %"class.mojo::internal::Array_Data"** %5, align 8
  %92 = call zeroext i1 @_ZN4mojo8internal11DeserializeINS_13ArrayDataViewIhEERPNS0_10Array_DataIhEEN4absl8optionalINSt3__16vectorIhNSA_9allocatorIhEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data"** nonnull dereferenceable(8) %5, %"class.absl::optional.57"* nonnull %10, %"class.mojo::Message"** dereferenceable(8) %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  %93 = load i8, i8* %79, align 8
  %94 = icmp ne i8 %93, 0
  %95 = and i1 %92, %94
  br i1 %95, label %96, label %128

96:                                               ; preds = %78
  %97 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 0
  store i32 2, i32* %97, align 8
  %98 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %113, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = icmp eq i8* %104, null
  br i1 %105, label %111, label %106

106:                                              ; preds = %102
  %107 = ptrtoint i8* %104 to i64
  %108 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %109 = bitcast i8** %108 to i64*
  store i64 %107, i64* %109, align 8
  call void @_ZdlPv(i8* nonnull %104) #12
  %110 = load i8, i8* %79, align 8, !range !2
  br label %111

111:                                              ; preds = %106, %102
  %112 = phi i8 [ %110, %106 ], [ %93, %102 ]
  store i8 0, i8* %99, align 8
  br label %113

113:                                              ; preds = %96, %111
  %114 = phi i8 [ %93, %96 ], [ %112, %111 ]
  %115 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %116 = bitcast %"class.std::__1::vector.21"* %98 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 8
  %118 = bitcast %"class.std::__1::vector.21"* %115 to <2 x i64>*
  store <2 x i64> %117, <2 x i64>* %118, align 8
  %119 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %120 = bitcast i8** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.device::CableDiscoveryData", %"struct.device::CableDiscoveryData"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %123 = bitcast i8** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = bitcast %"class.std::__1::vector.21"* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %99, align 8
  %125 = icmp eq i8 %114, 0
  br i1 %125, label %127, label %126

126:                                              ; preds = %113
  store i8 0, i8* %79, align 8
  br label %127

127:                                              ; preds = %113, %126
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #13
  br label %140

128:                                              ; preds = %78
  %129 = icmp eq i8 %93, 0
  br i1 %129, label %139, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %138, label %134

134:                                              ; preds = %130
  %135 = ptrtoint i8* %132 to i64
  %136 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %137 = bitcast i8** %136 to i64*
  store i64 %135, i64* %137, align 8
  call void @_ZdlPv(i8* nonnull %132) #12
  br label %138

138:                                              ; preds = %134, %130
  store i8 0, i8* %79, align 8
  br label %139

139:                                              ; preds = %128, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #13
  br label %140

140:                                              ; preds = %68, %127, %3, %139, %77
  %141 = phi i1 [ false, %139 ], [ false, %77 ], [ false, %3 ], [ true, %127 ], [ true, %68 ]
  ret i1 %141
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN5blink5mojom31AttestationConveyancePreferenceEN6device31AttestationConveyancePreferenceEE7ToMojomES5_(i8 zeroext) local_unnamed_addr #0 align 2 {
  %2 = add i8 %0, -1
  %3 = icmp ult i8 %2, 4
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i8 %2 to i64
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN4mojo10EnumTraitsIN5blink5mojom31AttestationConveyancePreferenceEN6device31AttestationConveyancePreferenceEE7ToMojomES5_, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN5blink5mojom31AttestationConveyancePreferenceEN6device31AttestationConveyancePreferenceEE9FromMojomES3_PS5_(i32, i8* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 4
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = trunc i32 %0 to i8
  store i8 %5, i8* %1, align 1
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %7
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIN6device21FidoTransportProtocolENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPS3_EESF_(%"class.base::internal::flat_tree"*, i8*, i8*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare", align 1
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare", %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint i8* %1 to i64
  %8 = sub i64 %5, %7
  %9 = icmp sgt i64 %8, 128
  br i1 %9, label %10, label %17

10:                                               ; preds = %3, %14
  %11 = phi i64 [ %15, %14 ], [ %8, %3 ]
  %12 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %11, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #13
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = lshr i64 %11, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %10

17:                                               ; preds = %14, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i8* %1, i8* %2, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %8, i8* null, i64 0) #13
  br label %19

18:                                               ; preds = %10
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i8* %1, i8* %2, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %8, i8* nonnull %12, i64 %11) #13
  call void @_ZdlPv(i8* nonnull %12) #12
  br label %19

19:                                               ; preds = %17, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %20 = icmp eq i8* %1, %2
  br i1 %20, label %66, label %21

21:                                               ; preds = %19, %25
  %22 = phi i8* [ %23, %25 ], [ %1, %19 ]
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = icmp eq i8* %23, %2
  br i1 %24, label %66, label %25

25:                                               ; preds = %21
  %26 = load i8, i8* %22, align 1
  %27 = load i8, i8* %23, align 1
  %28 = icmp ult i8 %26, %27
  br i1 %28, label %21, label %29

29:                                               ; preds = %25
  %30 = icmp eq i8* %22, %2
  br i1 %30, label %66, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %22, i64 2
  %33 = icmp eq i8* %32, %2
  br i1 %33, label %53, label %34

34:                                               ; preds = %31
  %35 = ptrtoint i8* %22 to i64
  br label %36

36:                                               ; preds = %34, %46
  %37 = phi i8* [ %50, %46 ], [ %22, %34 ]
  %38 = phi i8* [ %48, %46 ], [ %32, %34 ]
  %39 = phi i64 [ %47, %46 ], [ %35, %34 ]
  %40 = load i8, i8* %37, align 1
  %41 = load i8, i8* %38, align 1
  %42 = icmp ult i8 %40, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %36
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = ptrtoint i8* %44 to i64
  store i8 %41, i8* %44, align 1
  br label %46

46:                                               ; preds = %43, %36
  %47 = phi i64 [ %39, %36 ], [ %45, %43 ]
  %48 = getelementptr inbounds i8, i8* %38, i64 1
  %49 = icmp eq i8* %48, %2
  %50 = inttoptr i64 %47 to i8*
  br i1 %49, label %51, label %36

51:                                               ; preds = %46
  %52 = inttoptr i64 %47 to i8*
  br label %53

53:                                               ; preds = %51, %31
  %54 = phi i8* [ %22, %31 ], [ %52, %51 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 1
  %56 = icmp eq i8* %55, %2
  br i1 %56, label %66, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %60, %5
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %57
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %2, i64 %61, i1 false) #13
  br label %64

64:                                               ; preds = %63, %57
  %65 = getelementptr inbounds i8, i8* %55, i64 %61
  store i8* %65, i8** %58, align 8
  br label %66

66:                                               ; preds = %21, %19, %29, %53, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i8*, i8*, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1), i64, i8*, i64) local_unnamed_addr #3 comdat {
  switch i64 %3, label %13 [
    i64 0, label %277
    i64 1, label %277
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds i8, i8* %1, i64 -1
  %9 = load i8, i8* %8, align 1
  %10 = load i8, i8* %0, align 1
  %11 = icmp ult i8 %9, %10
  br i1 %11, label %12, label %277

12:                                               ; preds = %7
  store i8 %9, i8* %0, align 1
  store i8 %10, i8* %8, align 1
  br label %277

13:                                               ; preds = %6
  %14 = icmp slt i64 %3, 129
  br i1 %14, label %15, label %35

15:                                               ; preds = %13
  %16 = icmp eq i8* %0, %1
  br i1 %16, label %277, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds i8, i8* %0, i64 1
  %19 = icmp eq i8* %18, %1
  br i1 %19, label %277, label %20

20:                                               ; preds = %17, %29
  %21 = phi i8* [ %31, %29 ], [ %18, %17 ]
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8* %21, %0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20, %33
  %25 = phi i8* [ %26, %33 ], [ %21, %20 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 -1
  %27 = load i8, i8* %26, align 1
  %28 = icmp ult i8 %22, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %33, %24, %20
  %30 = phi i8* [ %0, %20 ], [ %25, %24 ], [ %0, %33 ]
  store i8 %22, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %21, i64 1
  %32 = icmp eq i8* %31, %1
  br i1 %32, label %277, label %20

33:                                               ; preds = %24
  store i8 %27, i8* %25, align 1
  %34 = icmp eq i8* %26, %0
  br i1 %34, label %29, label %24

35:                                               ; preds = %13
  %36 = lshr i64 %3, 1
  %37 = getelementptr inbounds i8, i8* %0, i64 %36
  %38 = icmp sgt i64 %3, %5
  br i1 %38, label %275, label %39

39:                                               ; preds = %35
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i8* %0, i8* %37, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1) %2, i64 %36, i8* %4)
  %40 = sub nsw i64 %3, %36
  %41 = getelementptr inbounds i8, i8* %4, i64 %36
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i8* %37, i8* %1, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1) %2, i64 %40, i8* %41)
  %42 = getelementptr inbounds i8, i8* %4, i64 %3
  br label %143

43:                                               ; preds = %263
  %44 = ptrtoint i8* %264 to i64
  %45 = icmp eq i8* %264, %42
  br i1 %45, label %277, label %46

46:                                               ; preds = %43
  %47 = sub i64 %3, %44
  %48 = getelementptr i8, i8* %4, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %264, %54 ], [ %264, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %266, %54 ], [ %266, %46 ], [ %65, %141 ]
  br label %268

54:                                               ; preds = %46
  %55 = sub i64 %3, %44
  %56 = getelementptr i8, i8* %4, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %266, i64 %57
  %59 = icmp ult i8* %266, %42
  %60 = icmp ult i8* %264, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %264, i64 %63
  %65 = getelementptr i8, i8* %266, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %264, i64 %74
  %77 = getelementptr i8, i8* %266, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !3
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !3
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !6, !noalias !3
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !6, !noalias !3
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %264, i64 %86
  %88 = getelementptr i8, i8* %266, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !3
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !3
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !6, !noalias !3
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !6, !noalias !3
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %264, i64 %97
  %99 = getelementptr i8, i8* %266, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !3
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !3
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !6, !noalias !3
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !6, !noalias !3
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %264, i64 %108
  %110 = getelementptr i8, i8* %266, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !3
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !3
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !6, !noalias !3
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !6, !noalias !3
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !8

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %264, i64 %126
  %129 = getelementptr i8, i8* %266, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !3
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !3
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !6, !noalias !3
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !6, !noalias !3
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !10

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %277, label %51

143:                                              ; preds = %39, %263
  %144 = phi i8* [ %265, %263 ], [ %4, %39 ]
  %145 = phi i8* [ %264, %263 ], [ %41, %39 ]
  %146 = phi i8* [ %266, %263 ], [ %0, %39 ]
  %147 = icmp eq i8* %145, %42
  br i1 %147, label %148, label %255

148:                                              ; preds = %143
  %149 = ptrtoint i8* %144 to i64
  %150 = icmp eq i8* %144, %41
  br i1 %150, label %277, label %151

151:                                              ; preds = %148
  %152 = sub i64 %36, %149
  %153 = getelementptr i8, i8* %4, i64 %152
  %154 = ptrtoint i8* %153 to i64
  %155 = icmp ult i8* %153, inttoptr (i64 32 to i8*)
  br i1 %155, label %245, label %156

156:                                              ; preds = %151
  %157 = sub i64 %36, %149
  %158 = getelementptr i8, i8* %4, i64 %157
  %159 = ptrtoint i8* %158 to i64
  %160 = getelementptr i8, i8* %146, i64 %159
  %161 = icmp ult i8* %146, %41
  %162 = icmp ult i8* %144, %160
  %163 = and i1 %161, %162
  br i1 %163, label %245, label %164

164:                                              ; preds = %156
  %165 = and i64 %154, -32
  %166 = getelementptr i8, i8* %144, i64 %165
  %167 = getelementptr i8, i8* %146, i64 %165
  %168 = add i64 %165, -32
  %169 = lshr exact i64 %168, 5
  %170 = add nuw nsw i64 %169, 1
  %171 = and i64 %170, 3
  %172 = icmp ult i64 %168, 96
  br i1 %172, label %224, label %173

173:                                              ; preds = %164
  %174 = sub nsw i64 %170, %171
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i64 [ 0, %173 ], [ %221, %175 ]
  %177 = phi i64 [ %174, %173 ], [ %222, %175 ]
  %178 = getelementptr i8, i8* %144, i64 %176
  %179 = getelementptr i8, i8* %146, i64 %176
  %180 = bitcast i8* %178 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !12
  %182 = getelementptr i8, i8* %178, i64 16
  %183 = bitcast i8* %182 to <16 x i8>*
  %184 = load <16 x i8>, <16 x i8>* %183, align 1, !alias.scope !12
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %185, align 1, !alias.scope !15, !noalias !12
  %186 = getelementptr i8, i8* %179, i64 16
  %187 = bitcast i8* %186 to <16 x i8>*
  store <16 x i8> %184, <16 x i8>* %187, align 1, !alias.scope !15, !noalias !12
  %188 = or i64 %176, 32
  %189 = getelementptr i8, i8* %144, i64 %188
  %190 = getelementptr i8, i8* %146, i64 %188
  %191 = bitcast i8* %189 to <16 x i8>*
  %192 = load <16 x i8>, <16 x i8>* %191, align 1, !alias.scope !12
  %193 = getelementptr i8, i8* %189, i64 16
  %194 = bitcast i8* %193 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !12
  %196 = bitcast i8* %190 to <16 x i8>*
  store <16 x i8> %192, <16 x i8>* %196, align 1, !alias.scope !15, !noalias !12
  %197 = getelementptr i8, i8* %190, i64 16
  %198 = bitcast i8* %197 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %198, align 1, !alias.scope !15, !noalias !12
  %199 = or i64 %176, 64
  %200 = getelementptr i8, i8* %144, i64 %199
  %201 = getelementptr i8, i8* %146, i64 %199
  %202 = bitcast i8* %200 to <16 x i8>*
  %203 = load <16 x i8>, <16 x i8>* %202, align 1, !alias.scope !12
  %204 = getelementptr i8, i8* %200, i64 16
  %205 = bitcast i8* %204 to <16 x i8>*
  %206 = load <16 x i8>, <16 x i8>* %205, align 1, !alias.scope !12
  %207 = bitcast i8* %201 to <16 x i8>*
  store <16 x i8> %203, <16 x i8>* %207, align 1, !alias.scope !15, !noalias !12
  %208 = getelementptr i8, i8* %201, i64 16
  %209 = bitcast i8* %208 to <16 x i8>*
  store <16 x i8> %206, <16 x i8>* %209, align 1, !alias.scope !15, !noalias !12
  %210 = or i64 %176, 96
  %211 = getelementptr i8, i8* %144, i64 %210
  %212 = getelementptr i8, i8* %146, i64 %210
  %213 = bitcast i8* %211 to <16 x i8>*
  %214 = load <16 x i8>, <16 x i8>* %213, align 1, !alias.scope !12
  %215 = getelementptr i8, i8* %211, i64 16
  %216 = bitcast i8* %215 to <16 x i8>*
  %217 = load <16 x i8>, <16 x i8>* %216, align 1, !alias.scope !12
  %218 = bitcast i8* %212 to <16 x i8>*
  store <16 x i8> %214, <16 x i8>* %218, align 1, !alias.scope !15, !noalias !12
  %219 = getelementptr i8, i8* %212, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %217, <16 x i8>* %220, align 1, !alias.scope !15, !noalias !12
  %221 = add i64 %176, 128
  %222 = add i64 %177, -4
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %175, !llvm.loop !17

224:                                              ; preds = %175, %164
  %225 = phi i64 [ 0, %164 ], [ %221, %175 ]
  %226 = icmp eq i64 %171, 0
  br i1 %226, label %243, label %227

227:                                              ; preds = %224, %227
  %228 = phi i64 [ %240, %227 ], [ %225, %224 ]
  %229 = phi i64 [ %241, %227 ], [ %171, %224 ]
  %230 = getelementptr i8, i8* %144, i64 %228
  %231 = getelementptr i8, i8* %146, i64 %228
  %232 = bitcast i8* %230 to <16 x i8>*
  %233 = load <16 x i8>, <16 x i8>* %232, align 1, !alias.scope !12
  %234 = getelementptr i8, i8* %230, i64 16
  %235 = bitcast i8* %234 to <16 x i8>*
  %236 = load <16 x i8>, <16 x i8>* %235, align 1, !alias.scope !12
  %237 = bitcast i8* %231 to <16 x i8>*
  store <16 x i8> %233, <16 x i8>* %237, align 1, !alias.scope !15, !noalias !12
  %238 = getelementptr i8, i8* %231, i64 16
  %239 = bitcast i8* %238 to <16 x i8>*
  store <16 x i8> %236, <16 x i8>* %239, align 1, !alias.scope !15, !noalias !12
  %240 = add i64 %228, 32
  %241 = add i64 %229, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %227, !llvm.loop !18

243:                                              ; preds = %227, %224
  %244 = icmp eq i64 %165, %154
  br i1 %244, label %277, label %245

245:                                              ; preds = %243, %156, %151
  %246 = phi i8* [ %144, %156 ], [ %144, %151 ], [ %166, %243 ]
  %247 = phi i8* [ %146, %156 ], [ %146, %151 ], [ %167, %243 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i8* [ %252, %248 ], [ %246, %245 ]
  %250 = phi i8* [ %253, %248 ], [ %247, %245 ]
  %251 = load i8, i8* %249, align 1
  store i8 %251, i8* %250, align 1
  %252 = getelementptr inbounds i8, i8* %249, i64 1
  %253 = getelementptr inbounds i8, i8* %250, i64 1
  %254 = icmp eq i8* %252, %41
  br i1 %254, label %277, label %248, !llvm.loop !19

255:                                              ; preds = %143
  %256 = load i8, i8* %145, align 1
  %257 = load i8, i8* %144, align 1
  %258 = icmp ult i8 %256, %257
  br i1 %258, label %259, label %261

259:                                              ; preds = %255
  store i8 %256, i8* %146, align 1
  %260 = getelementptr inbounds i8, i8* %145, i64 1
  br label %263

261:                                              ; preds = %255
  store i8 %257, i8* %146, align 1
  %262 = getelementptr inbounds i8, i8* %144, i64 1
  br label %263

263:                                              ; preds = %261, %259
  %264 = phi i8* [ %260, %259 ], [ %145, %261 ]
  %265 = phi i8* [ %144, %259 ], [ %262, %261 ]
  %266 = getelementptr inbounds i8, i8* %146, i64 1
  %267 = icmp eq i8* %265, %41
  br i1 %267, label %43, label %143

268:                                              ; preds = %51, %268
  %269 = phi i8* [ %272, %268 ], [ %52, %51 ]
  %270 = phi i8* [ %273, %268 ], [ %53, %51 ]
  %271 = load i8, i8* %269, align 1
  store i8 %271, i8* %270, align 1
  %272 = getelementptr inbounds i8, i8* %269, i64 1
  %273 = getelementptr inbounds i8, i8* %270, i64 1
  %274 = icmp eq i8* %272, %42
  br i1 %274, label %277, label %268, !llvm.loop !20

275:                                              ; preds = %35
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i8* %0, i8* %37, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1) %2, i64 %36, i8* %4, i64 %5)
  %276 = sub nsw i64 %3, %36
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i8* %37, i8* %1, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1) %2, i64 %276, i8* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i8* %0, i8* %37, i8* %1, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1) %2, i64 %36, i64 %276, i8* %4, i64 %5)
  ret void

277:                                              ; preds = %268, %248, %29, %141, %243, %148, %43, %17, %15, %7, %12, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i8*, i8*, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1), i64, i8*) local_unnamed_addr #3 comdat {
  switch i64 %3, label %19 [
    i64 0, label %291
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i8, i8* %0, align 1
  store i8 %7, i8* %4, align 1
  br label %291

8:                                                ; preds = %5
  %9 = getelementptr inbounds i8, i8* %1, i64 -1
  %10 = load i8, i8* %9, align 1
  %11 = load i8, i8* %0, align 1
  %12 = icmp ult i8 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i8 %10, i8* %4, align 1
  %14 = getelementptr inbounds i8, i8* %4, i64 1
  %15 = load i8, i8* %0, align 1
  store i8 %15, i8* %14, align 1
  br label %291

16:                                               ; preds = %8
  store i8 %11, i8* %4, align 1
  %17 = getelementptr inbounds i8, i8* %4, i64 1
  %18 = load i8, i8* %9, align 1
  store i8 %18, i8* %17, align 1
  br label %291

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i8* %0, %1
  br i1 %22, label %291, label %23

23:                                               ; preds = %21
  %24 = load i8, i8* %0, align 1
  store i8 %24, i8* %4, align 1
  %25 = getelementptr inbounds i8, i8* %0, i64 1
  %26 = icmp eq i8* %25, %1
  br i1 %26, label %291, label %27

27:                                               ; preds = %23, %51
  %28 = phi i8 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i8* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i8* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  %32 = load i8, i8* %29, align 1
  %33 = icmp ult i8 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i8 %28, i8* %31, align 1
  %35 = icmp eq i8* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i8* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 -1
  %39 = load i8, i8* %29, align 1
  %40 = load i8, i8* %38, align 1
  %41 = icmp ult i8 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i8 %40, i8* %37, align 1
  %43 = icmp eq i8* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i8* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i8, i8* %29, align 1
  store i8 %46, i8* %45, align 1
  br label %48

47:                                               ; preds = %27
  store i8 %32, i8* %31, align 1
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i8, i8* %29, i64 1
  %50 = icmp eq i8* %49, %1
  br i1 %50, label %291, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %31, align 1
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i8* %0, i8* %55, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1) %2, i64 %54, i8* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i8, i8* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i8* %55, i8* %1, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1) %2, i64 %56, i8* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %166

59:                                               ; preds = %286, %53
  %60 = phi i8* [ %55, %53 ], [ %287, %286 ]
  %61 = phi i8* [ %4, %53 ], [ %289, %286 ]
  %62 = ptrtoint i8* %60 to i64
  %63 = icmp eq i8* %60, %1
  br i1 %63, label %291, label %64

64:                                               ; preds = %59
  %65 = ptrtoint i8* %1 to i64
  %66 = sub i64 %65, %62
  %67 = icmp ult i64 %66, 32
  br i1 %67, label %156, label %68

68:                                               ; preds = %64
  %69 = ptrtoint i8* %1 to i64
  %70 = sub i64 %69, %62
  %71 = getelementptr i8, i8* %61, i64 %70
  %72 = icmp ult i8* %61, %1
  %73 = icmp ult i8* %60, %71
  %74 = and i1 %72, %73
  br i1 %74, label %156, label %75

75:                                               ; preds = %68
  %76 = and i64 %66, -32
  %77 = getelementptr i8, i8* %61, i64 %76
  %78 = getelementptr i8, i8* %60, i64 %76
  %79 = add i64 %76, -32
  %80 = lshr exact i64 %79, 5
  %81 = add nuw nsw i64 %80, 1
  %82 = and i64 %81, 3
  %83 = icmp ult i64 %79, 96
  br i1 %83, label %135, label %84

84:                                               ; preds = %75
  %85 = sub nsw i64 %81, %82
  br label %86

86:                                               ; preds = %86, %84
  %87 = phi i64 [ 0, %84 ], [ %132, %86 ]
  %88 = phi i64 [ %85, %84 ], [ %133, %86 ]
  %89 = getelementptr i8, i8* %61, i64 %87
  %90 = getelementptr i8, i8* %60, i64 %87
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !21
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !21
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !24, !noalias !21
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !24, !noalias !21
  %99 = or i64 %87, 32
  %100 = getelementptr i8, i8* %61, i64 %99
  %101 = getelementptr i8, i8* %60, i64 %99
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !21
  %104 = getelementptr i8, i8* %101, i64 16
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !21
  %107 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %107, align 1, !alias.scope !24, !noalias !21
  %108 = getelementptr i8, i8* %100, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %109, align 1, !alias.scope !24, !noalias !21
  %110 = or i64 %87, 64
  %111 = getelementptr i8, i8* %61, i64 %110
  %112 = getelementptr i8, i8* %60, i64 %110
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !21
  %115 = getelementptr i8, i8* %112, i64 16
  %116 = bitcast i8* %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1, !alias.scope !21
  %118 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %118, align 1, !alias.scope !24, !noalias !21
  %119 = getelementptr i8, i8* %111, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %120, align 1, !alias.scope !24, !noalias !21
  %121 = or i64 %87, 96
  %122 = getelementptr i8, i8* %61, i64 %121
  %123 = getelementptr i8, i8* %60, i64 %121
  %124 = bitcast i8* %123 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 1, !alias.scope !21
  %126 = getelementptr i8, i8* %123, i64 16
  %127 = bitcast i8* %126 to <16 x i8>*
  %128 = load <16 x i8>, <16 x i8>* %127, align 1, !alias.scope !21
  %129 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %125, <16 x i8>* %129, align 1, !alias.scope !24, !noalias !21
  %130 = getelementptr i8, i8* %122, i64 16
  %131 = bitcast i8* %130 to <16 x i8>*
  store <16 x i8> %128, <16 x i8>* %131, align 1, !alias.scope !24, !noalias !21
  %132 = add i64 %87, 128
  %133 = add i64 %88, -4
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %86, !llvm.loop !26

135:                                              ; preds = %86, %75
  %136 = phi i64 [ 0, %75 ], [ %132, %86 ]
  %137 = icmp eq i64 %82, 0
  br i1 %137, label %154, label %138

138:                                              ; preds = %135, %138
  %139 = phi i64 [ %151, %138 ], [ %136, %135 ]
  %140 = phi i64 [ %152, %138 ], [ %82, %135 ]
  %141 = getelementptr i8, i8* %61, i64 %139
  %142 = getelementptr i8, i8* %60, i64 %139
  %143 = bitcast i8* %142 to <16 x i8>*
  %144 = load <16 x i8>, <16 x i8>* %143, align 1, !alias.scope !21
  %145 = getelementptr i8, i8* %142, i64 16
  %146 = bitcast i8* %145 to <16 x i8>*
  %147 = load <16 x i8>, <16 x i8>* %146, align 1, !alias.scope !21
  %148 = bitcast i8* %141 to <16 x i8>*
  store <16 x i8> %144, <16 x i8>* %148, align 1, !alias.scope !24, !noalias !21
  %149 = getelementptr i8, i8* %141, i64 16
  %150 = bitcast i8* %149 to <16 x i8>*
  store <16 x i8> %147, <16 x i8>* %150, align 1, !alias.scope !24, !noalias !21
  %151 = add i64 %139, 32
  %152 = add i64 %140, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %138, !llvm.loop !27

154:                                              ; preds = %138, %135
  %155 = icmp eq i64 %66, %76
  br i1 %155, label %291, label %156

156:                                              ; preds = %154, %68, %64
  %157 = phi i8* [ %61, %68 ], [ %61, %64 ], [ %77, %154 ]
  %158 = phi i8* [ %60, %68 ], [ %60, %64 ], [ %78, %154 ]
  br label %159

159:                                              ; preds = %156, %159
  %160 = phi i8* [ %164, %159 ], [ %157, %156 ]
  %161 = phi i8* [ %163, %159 ], [ %158, %156 ]
  %162 = load i8, i8* %161, align 1
  store i8 %162, i8* %160, align 1
  %163 = getelementptr inbounds i8, i8* %161, i64 1
  %164 = getelementptr inbounds i8, i8* %160, i64 1
  %165 = icmp eq i8* %163, %1
  br i1 %165, label %291, label %159, !llvm.loop !28

166:                                              ; preds = %53, %286
  %167 = phi i8* [ %289, %286 ], [ %4, %53 ]
  %168 = phi i8* [ %288, %286 ], [ %0, %53 ]
  %169 = phi i8* [ %287, %286 ], [ %55, %53 ]
  %170 = icmp eq i8* %169, %1
  br i1 %170, label %171, label %278

171:                                              ; preds = %166
  %172 = ptrtoint i8* %168 to i64
  %173 = icmp eq i8* %168, %55
  br i1 %173, label %291, label %174

174:                                              ; preds = %171
  %175 = sub i64 %54, %172
  %176 = getelementptr i8, i8* %0, i64 %175
  %177 = ptrtoint i8* %176 to i64
  %178 = icmp ult i8* %176, inttoptr (i64 32 to i8*)
  br i1 %178, label %268, label %179

179:                                              ; preds = %174
  %180 = sub i64 %54, %172
  %181 = getelementptr i8, i8* %0, i64 %180
  %182 = ptrtoint i8* %181 to i64
  %183 = getelementptr i8, i8* %167, i64 %182
  %184 = icmp ult i8* %167, %55
  %185 = icmp ult i8* %168, %183
  %186 = and i1 %184, %185
  br i1 %186, label %268, label %187

187:                                              ; preds = %179
  %188 = and i64 %177, -32
  %189 = getelementptr i8, i8* %167, i64 %188
  %190 = getelementptr i8, i8* %168, i64 %188
  %191 = add i64 %188, -32
  %192 = lshr exact i64 %191, 5
  %193 = add nuw nsw i64 %192, 1
  %194 = and i64 %193, 3
  %195 = icmp ult i64 %191, 96
  br i1 %195, label %247, label %196

196:                                              ; preds = %187
  %197 = sub nsw i64 %193, %194
  br label %198

198:                                              ; preds = %198, %196
  %199 = phi i64 [ 0, %196 ], [ %244, %198 ]
  %200 = phi i64 [ %197, %196 ], [ %245, %198 ]
  %201 = getelementptr i8, i8* %167, i64 %199
  %202 = getelementptr i8, i8* %168, i64 %199
  %203 = bitcast i8* %202 to <16 x i8>*
  %204 = load <16 x i8>, <16 x i8>* %203, align 1, !alias.scope !29
  %205 = getelementptr i8, i8* %202, i64 16
  %206 = bitcast i8* %205 to <16 x i8>*
  %207 = load <16 x i8>, <16 x i8>* %206, align 1, !alias.scope !29
  %208 = bitcast i8* %201 to <16 x i8>*
  store <16 x i8> %204, <16 x i8>* %208, align 1, !alias.scope !32, !noalias !29
  %209 = getelementptr i8, i8* %201, i64 16
  %210 = bitcast i8* %209 to <16 x i8>*
  store <16 x i8> %207, <16 x i8>* %210, align 1, !alias.scope !32, !noalias !29
  %211 = or i64 %199, 32
  %212 = getelementptr i8, i8* %167, i64 %211
  %213 = getelementptr i8, i8* %168, i64 %211
  %214 = bitcast i8* %213 to <16 x i8>*
  %215 = load <16 x i8>, <16 x i8>* %214, align 1, !alias.scope !29
  %216 = getelementptr i8, i8* %213, i64 16
  %217 = bitcast i8* %216 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !29
  %219 = bitcast i8* %212 to <16 x i8>*
  store <16 x i8> %215, <16 x i8>* %219, align 1, !alias.scope !32, !noalias !29
  %220 = getelementptr i8, i8* %212, i64 16
  %221 = bitcast i8* %220 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %221, align 1, !alias.scope !32, !noalias !29
  %222 = or i64 %199, 64
  %223 = getelementptr i8, i8* %167, i64 %222
  %224 = getelementptr i8, i8* %168, i64 %222
  %225 = bitcast i8* %224 to <16 x i8>*
  %226 = load <16 x i8>, <16 x i8>* %225, align 1, !alias.scope !29
  %227 = getelementptr i8, i8* %224, i64 16
  %228 = bitcast i8* %227 to <16 x i8>*
  %229 = load <16 x i8>, <16 x i8>* %228, align 1, !alias.scope !29
  %230 = bitcast i8* %223 to <16 x i8>*
  store <16 x i8> %226, <16 x i8>* %230, align 1, !alias.scope !32, !noalias !29
  %231 = getelementptr i8, i8* %223, i64 16
  %232 = bitcast i8* %231 to <16 x i8>*
  store <16 x i8> %229, <16 x i8>* %232, align 1, !alias.scope !32, !noalias !29
  %233 = or i64 %199, 96
  %234 = getelementptr i8, i8* %167, i64 %233
  %235 = getelementptr i8, i8* %168, i64 %233
  %236 = bitcast i8* %235 to <16 x i8>*
  %237 = load <16 x i8>, <16 x i8>* %236, align 1, !alias.scope !29
  %238 = getelementptr i8, i8* %235, i64 16
  %239 = bitcast i8* %238 to <16 x i8>*
  %240 = load <16 x i8>, <16 x i8>* %239, align 1, !alias.scope !29
  %241 = bitcast i8* %234 to <16 x i8>*
  store <16 x i8> %237, <16 x i8>* %241, align 1, !alias.scope !32, !noalias !29
  %242 = getelementptr i8, i8* %234, i64 16
  %243 = bitcast i8* %242 to <16 x i8>*
  store <16 x i8> %240, <16 x i8>* %243, align 1, !alias.scope !32, !noalias !29
  %244 = add i64 %199, 128
  %245 = add i64 %200, -4
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %198, !llvm.loop !34

247:                                              ; preds = %198, %187
  %248 = phi i64 [ 0, %187 ], [ %244, %198 ]
  %249 = icmp eq i64 %194, 0
  br i1 %249, label %266, label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %263, %250 ], [ %248, %247 ]
  %252 = phi i64 [ %264, %250 ], [ %194, %247 ]
  %253 = getelementptr i8, i8* %167, i64 %251
  %254 = getelementptr i8, i8* %168, i64 %251
  %255 = bitcast i8* %254 to <16 x i8>*
  %256 = load <16 x i8>, <16 x i8>* %255, align 1, !alias.scope !29
  %257 = getelementptr i8, i8* %254, i64 16
  %258 = bitcast i8* %257 to <16 x i8>*
  %259 = load <16 x i8>, <16 x i8>* %258, align 1, !alias.scope !29
  %260 = bitcast i8* %253 to <16 x i8>*
  store <16 x i8> %256, <16 x i8>* %260, align 1, !alias.scope !32, !noalias !29
  %261 = getelementptr i8, i8* %253, i64 16
  %262 = bitcast i8* %261 to <16 x i8>*
  store <16 x i8> %259, <16 x i8>* %262, align 1, !alias.scope !32, !noalias !29
  %263 = add i64 %251, 32
  %264 = add i64 %252, -1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %250, !llvm.loop !35

266:                                              ; preds = %250, %247
  %267 = icmp eq i64 %188, %177
  br i1 %267, label %291, label %268

268:                                              ; preds = %266, %179, %174
  %269 = phi i8* [ %167, %179 ], [ %167, %174 ], [ %189, %266 ]
  %270 = phi i8* [ %168, %179 ], [ %168, %174 ], [ %190, %266 ]
  br label %271

271:                                              ; preds = %268, %271
  %272 = phi i8* [ %276, %271 ], [ %269, %268 ]
  %273 = phi i8* [ %275, %271 ], [ %270, %268 ]
  %274 = load i8, i8* %273, align 1
  store i8 %274, i8* %272, align 1
  %275 = getelementptr inbounds i8, i8* %273, i64 1
  %276 = getelementptr inbounds i8, i8* %272, i64 1
  %277 = icmp eq i8* %275, %55
  br i1 %277, label %291, label %271, !llvm.loop !36

278:                                              ; preds = %166
  %279 = load i8, i8* %169, align 1
  %280 = load i8, i8* %168, align 1
  %281 = icmp ult i8 %279, %280
  br i1 %281, label %282, label %284

282:                                              ; preds = %278
  store i8 %279, i8* %167, align 1
  %283 = getelementptr inbounds i8, i8* %169, i64 1
  br label %286

284:                                              ; preds = %278
  store i8 %280, i8* %167, align 1
  %285 = getelementptr inbounds i8, i8* %168, i64 1
  br label %286

286:                                              ; preds = %284, %282
  %287 = phi i8* [ %283, %282 ], [ %169, %284 ]
  %288 = phi i8* [ %168, %282 ], [ %285, %284 ]
  %289 = getelementptr inbounds i8, i8* %167, i64 1
  %290 = icmp eq i8* %288, %55
  br i1 %290, label %59, label %166

291:                                              ; preds = %271, %159, %48, %266, %154, %171, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i8*, i8*, i8*, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1), i64, i64, i8*, i64) local_unnamed_addr #3 comdat {
  %9 = ptrtoint i8* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %662, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i8* %1 to i64
  %13 = ptrtoint i8* %0 to i64
  br label %14

14:                                               ; preds = %11, %655
  %15 = phi i8* [ %660, %655 ], [ %2, %11 ]
  %16 = phi i64 [ %659, %655 ], [ %4, %11 ]
  %17 = phi i64 [ %658, %655 ], [ %5, %11 ]
  %18 = phi i64 [ %657, %655 ], [ %12, %11 ]
  %19 = phi i64 [ %656, %655 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %662, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i8*
  %27 = load i8, i8* %26, align 1
  br label %389

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i8*
  %30 = inttoptr i64 %18 to i8*
  %31 = icmp sgt i64 %16, %17
  br i1 %31, label %131, label %32

32:                                               ; preds = %28
  %33 = icmp eq i8* %29, %30
  br i1 %33, label %662, label %34

34:                                               ; preds = %32
  %35 = sub i64 0, %19
  %36 = getelementptr i8, i8* %30, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = icmp ult i8* %36, inttoptr (i64 32 to i8*)
  br i1 %38, label %39, label %42

39:                                               ; preds = %129, %42, %34
  %40 = phi i8* [ %6, %42 ], [ %6, %34 ], [ %52, %129 ]
  %41 = phi i8* [ %29, %42 ], [ %29, %34 ], [ %53, %129 ]
  br label %257

42:                                               ; preds = %34
  %43 = sub i64 0, %19
  %44 = getelementptr i8, i8* %6, i64 %43
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr i8, i8* %30, i64 %45
  %47 = icmp ugt i8* %30, %6
  %48 = icmp ugt i8* %46, %29
  %49 = and i1 %47, %48
  br i1 %49, label %39, label %50

50:                                               ; preds = %42
  %51 = and i64 %37, -32
  %52 = getelementptr i8, i8* %6, i64 %51
  %53 = getelementptr i8, i8* %29, i64 %51
  %54 = add i64 %51, -32
  %55 = lshr exact i64 %54, 5
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp ult i64 %54, 96
  br i1 %58, label %110, label %59

59:                                               ; preds = %50
  %60 = sub nsw i64 %56, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %107, %61 ]
  %63 = phi i64 [ %60, %59 ], [ %108, %61 ]
  %64 = getelementptr i8, i8* %6, i64 %62
  %65 = getelementptr i8, i8* %29, i64 %62
  %66 = bitcast i8* %65 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 1, !alias.scope !37
  %68 = getelementptr i8, i8* %65, i64 16
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !37
  %71 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %67, <16 x i8>* %71, align 1, !alias.scope !40, !noalias !37
  %72 = getelementptr i8, i8* %64, i64 16
  %73 = bitcast i8* %72 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %73, align 1, !alias.scope !40, !noalias !37
  %74 = or i64 %62, 32
  %75 = getelementptr i8, i8* %6, i64 %74
  %76 = getelementptr i8, i8* %29, i64 %74
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1, !alias.scope !37
  %79 = getelementptr i8, i8* %76, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !37
  %82 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %82, align 1, !alias.scope !40, !noalias !37
  %83 = getelementptr i8, i8* %75, i64 16
  %84 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %84, align 1, !alias.scope !40, !noalias !37
  %85 = or i64 %62, 64
  %86 = getelementptr i8, i8* %6, i64 %85
  %87 = getelementptr i8, i8* %29, i64 %85
  %88 = bitcast i8* %87 to <16 x i8>*
  %89 = load <16 x i8>, <16 x i8>* %88, align 1, !alias.scope !37
  %90 = getelementptr i8, i8* %87, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !37
  %93 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %89, <16 x i8>* %93, align 1, !alias.scope !40, !noalias !37
  %94 = getelementptr i8, i8* %86, i64 16
  %95 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %95, align 1, !alias.scope !40, !noalias !37
  %96 = or i64 %62, 96
  %97 = getelementptr i8, i8* %6, i64 %96
  %98 = getelementptr i8, i8* %29, i64 %96
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !alias.scope !37
  %101 = getelementptr i8, i8* %98, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !37
  %104 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %104, align 1, !alias.scope !40, !noalias !37
  %105 = getelementptr i8, i8* %97, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %106, align 1, !alias.scope !40, !noalias !37
  %107 = add i64 %62, 128
  %108 = add i64 %63, -4
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %61, !llvm.loop !42

110:                                              ; preds = %61, %50
  %111 = phi i64 [ 0, %50 ], [ %107, %61 ]
  %112 = icmp eq i64 %57, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %126, %113 ], [ %111, %110 ]
  %115 = phi i64 [ %127, %113 ], [ %57, %110 ]
  %116 = getelementptr i8, i8* %6, i64 %114
  %117 = getelementptr i8, i8* %29, i64 %114
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1, !alias.scope !37
  %120 = getelementptr i8, i8* %117, i64 16
  %121 = bitcast i8* %120 to <16 x i8>*
  %122 = load <16 x i8>, <16 x i8>* %121, align 1, !alias.scope !37
  %123 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %119, <16 x i8>* %123, align 1, !alias.scope !40, !noalias !37
  %124 = getelementptr i8, i8* %116, i64 16
  %125 = bitcast i8* %124 to <16 x i8>*
  store <16 x i8> %122, <16 x i8>* %125, align 1, !alias.scope !40, !noalias !37
  %126 = add i64 %114, 32
  %127 = add i64 %115, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %113, !llvm.loop !43

129:                                              ; preds = %113, %110
  %130 = icmp eq i64 %51, %37
  br i1 %130, label %230, label %39

131:                                              ; preds = %28
  %132 = icmp eq i8* %15, %30
  br i1 %132, label %662, label %133

133:                                              ; preds = %131
  %134 = sub i64 0, %18
  %135 = getelementptr i8, i8* %15, i64 %134
  %136 = ptrtoint i8* %135 to i64
  %137 = icmp ult i8* %135, inttoptr (i64 32 to i8*)
  br i1 %137, label %138, label %141

138:                                              ; preds = %228, %141, %133
  %139 = phi i8* [ %6, %141 ], [ %6, %133 ], [ %151, %228 ]
  %140 = phi i8* [ %30, %141 ], [ %30, %133 ], [ %152, %228 ]
  br label %382

141:                                              ; preds = %133
  %142 = sub i64 0, %18
  %143 = getelementptr i8, i8* %6, i64 %142
  %144 = ptrtoint i8* %143 to i64
  %145 = getelementptr i8, i8* %15, i64 %144
  %146 = icmp ugt i8* %15, %6
  %147 = icmp ugt i8* %145, %30
  %148 = and i1 %146, %147
  br i1 %148, label %138, label %149

149:                                              ; preds = %141
  %150 = and i64 %136, -32
  %151 = getelementptr i8, i8* %6, i64 %150
  %152 = getelementptr i8, i8* %30, i64 %150
  %153 = add i64 %150, -32
  %154 = lshr exact i64 %153, 5
  %155 = add nuw nsw i64 %154, 1
  %156 = and i64 %155, 3
  %157 = icmp ult i64 %153, 96
  br i1 %157, label %209, label %158

158:                                              ; preds = %149
  %159 = sub nsw i64 %155, %156
  br label %160

160:                                              ; preds = %160, %158
  %161 = phi i64 [ 0, %158 ], [ %206, %160 ]
  %162 = phi i64 [ %159, %158 ], [ %207, %160 ]
  %163 = getelementptr i8, i8* %6, i64 %161
  %164 = getelementptr i8, i8* %30, i64 %161
  %165 = bitcast i8* %164 to <16 x i8>*
  %166 = load <16 x i8>, <16 x i8>* %165, align 1, !alias.scope !44
  %167 = getelementptr i8, i8* %164, i64 16
  %168 = bitcast i8* %167 to <16 x i8>*
  %169 = load <16 x i8>, <16 x i8>* %168, align 1, !alias.scope !44
  %170 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %166, <16 x i8>* %170, align 1, !alias.scope !47, !noalias !44
  %171 = getelementptr i8, i8* %163, i64 16
  %172 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %169, <16 x i8>* %172, align 1, !alias.scope !47, !noalias !44
  %173 = or i64 %161, 32
  %174 = getelementptr i8, i8* %6, i64 %173
  %175 = getelementptr i8, i8* %30, i64 %173
  %176 = bitcast i8* %175 to <16 x i8>*
  %177 = load <16 x i8>, <16 x i8>* %176, align 1, !alias.scope !44
  %178 = getelementptr i8, i8* %175, i64 16
  %179 = bitcast i8* %178 to <16 x i8>*
  %180 = load <16 x i8>, <16 x i8>* %179, align 1, !alias.scope !44
  %181 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %177, <16 x i8>* %181, align 1, !alias.scope !47, !noalias !44
  %182 = getelementptr i8, i8* %174, i64 16
  %183 = bitcast i8* %182 to <16 x i8>*
  store <16 x i8> %180, <16 x i8>* %183, align 1, !alias.scope !47, !noalias !44
  %184 = or i64 %161, 64
  %185 = getelementptr i8, i8* %6, i64 %184
  %186 = getelementptr i8, i8* %30, i64 %184
  %187 = bitcast i8* %186 to <16 x i8>*
  %188 = load <16 x i8>, <16 x i8>* %187, align 1, !alias.scope !44
  %189 = getelementptr i8, i8* %186, i64 16
  %190 = bitcast i8* %189 to <16 x i8>*
  %191 = load <16 x i8>, <16 x i8>* %190, align 1, !alias.scope !44
  %192 = bitcast i8* %185 to <16 x i8>*
  store <16 x i8> %188, <16 x i8>* %192, align 1, !alias.scope !47, !noalias !44
  %193 = getelementptr i8, i8* %185, i64 16
  %194 = bitcast i8* %193 to <16 x i8>*
  store <16 x i8> %191, <16 x i8>* %194, align 1, !alias.scope !47, !noalias !44
  %195 = or i64 %161, 96
  %196 = getelementptr i8, i8* %6, i64 %195
  %197 = getelementptr i8, i8* %30, i64 %195
  %198 = bitcast i8* %197 to <16 x i8>*
  %199 = load <16 x i8>, <16 x i8>* %198, align 1, !alias.scope !44
  %200 = getelementptr i8, i8* %197, i64 16
  %201 = bitcast i8* %200 to <16 x i8>*
  %202 = load <16 x i8>, <16 x i8>* %201, align 1, !alias.scope !44
  %203 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %199, <16 x i8>* %203, align 1, !alias.scope !47, !noalias !44
  %204 = getelementptr i8, i8* %196, i64 16
  %205 = bitcast i8* %204 to <16 x i8>*
  store <16 x i8> %202, <16 x i8>* %205, align 1, !alias.scope !47, !noalias !44
  %206 = add i64 %161, 128
  %207 = add i64 %162, -4
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %160, !llvm.loop !49

209:                                              ; preds = %160, %149
  %210 = phi i64 [ 0, %149 ], [ %206, %160 ]
  %211 = icmp eq i64 %156, 0
  br i1 %211, label %228, label %212

212:                                              ; preds = %209, %212
  %213 = phi i64 [ %225, %212 ], [ %210, %209 ]
  %214 = phi i64 [ %226, %212 ], [ %156, %209 ]
  %215 = getelementptr i8, i8* %6, i64 %213
  %216 = getelementptr i8, i8* %30, i64 %213
  %217 = bitcast i8* %216 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !44
  %219 = getelementptr i8, i8* %216, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !44
  %222 = bitcast i8* %215 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !47, !noalias !44
  %223 = getelementptr i8, i8* %215, i64 16
  %224 = bitcast i8* %223 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %224, align 1, !alias.scope !47, !noalias !44
  %225 = add i64 %213, 32
  %226 = add i64 %214, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %212, !llvm.loop !50

228:                                              ; preds = %212, %209
  %229 = icmp eq i64 %150, %136
  br i1 %229, label %264, label %138

230:                                              ; preds = %257, %129
  %231 = phi i8* [ %52, %129 ], [ %262, %257 ]
  %232 = icmp eq i8* %231, %6
  br i1 %232, label %662, label %233

233:                                              ; preds = %230, %252
  %234 = phi i8* [ %254, %252 ], [ %6, %230 ]
  %235 = phi i8* [ %255, %252 ], [ %29, %230 ]
  %236 = phi i8* [ %253, %252 ], [ %30, %230 ]
  %237 = icmp eq i8* %236, %15
  br i1 %237, label %238, label %244

238:                                              ; preds = %233
  %239 = ptrtoint i8* %231 to i64
  %240 = ptrtoint i8* %234 to i64
  %241 = sub i64 %239, %240
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %662, label %243

243:                                              ; preds = %238
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %235, i8* align 1 %234, i64 %241, i1 false) #13
  br label %662

244:                                              ; preds = %233
  %245 = load i8, i8* %236, align 1
  %246 = load i8, i8* %234, align 1
  %247 = icmp ult i8 %245, %246
  br i1 %247, label %248, label %250

248:                                              ; preds = %244
  store i8 %245, i8* %235, align 1
  %249 = getelementptr inbounds i8, i8* %236, i64 1
  br label %252

250:                                              ; preds = %244
  store i8 %246, i8* %235, align 1
  %251 = getelementptr inbounds i8, i8* %234, i64 1
  br label %252

252:                                              ; preds = %250, %248
  %253 = phi i8* [ %249, %248 ], [ %236, %250 ]
  %254 = phi i8* [ %234, %248 ], [ %251, %250 ]
  %255 = getelementptr inbounds i8, i8* %235, i64 1
  %256 = icmp eq i8* %254, %231
  br i1 %256, label %662, label %233

257:                                              ; preds = %39, %257
  %258 = phi i8* [ %262, %257 ], [ %40, %39 ]
  %259 = phi i8* [ %261, %257 ], [ %41, %39 ]
  %260 = load i8, i8* %259, align 1
  store i8 %260, i8* %258, align 1
  %261 = getelementptr inbounds i8, i8* %259, i64 1
  %262 = getelementptr inbounds i8, i8* %258, i64 1
  %263 = icmp eq i8* %261, %30
  br i1 %263, label %230, label %257, !llvm.loop !51

264:                                              ; preds = %382, %228
  %265 = phi i8* [ %151, %228 ], [ %387, %382 ]
  %266 = icmp eq i8* %265, %6
  br i1 %266, label %662, label %267

267:                                              ; preds = %264, %371
  %268 = phi i8* [ %377, %371 ], [ %15, %264 ]
  %269 = phi i8* [ %380, %371 ], [ %265, %264 ]
  %270 = phi i8* [ %379, %371 ], [ %30, %264 ]
  %271 = icmp eq i8* %270, %29
  br i1 %271, label %272, label %371

272:                                              ; preds = %267
  %273 = sub i64 0, %9
  %274 = getelementptr i8, i8* %269, i64 %273
  %275 = ptrtoint i8* %274 to i64
  %276 = icmp ult i8* %274, inttoptr (i64 16 to i8*)
  br i1 %276, label %361, label %277

277:                                              ; preds = %272
  %278 = ptrtoint i8* %269 to i64
  %279 = ptrtoint i8* %6 to i64
  %280 = sub i64 %279, %278
  %281 = getelementptr i8, i8* %268, i64 %280
  %282 = icmp ult i8* %281, %269
  %283 = icmp ugt i8* %268, %6
  %284 = and i1 %282, %283
  br i1 %284, label %361, label %285

285:                                              ; preds = %277
  %286 = and i64 %275, -16
  %287 = sub i64 0, %286
  %288 = getelementptr i8, i8* %269, i64 %287
  %289 = sub i64 0, %286
  %290 = getelementptr i8, i8* %268, i64 %289
  %291 = add i64 %286, -16
  %292 = lshr exact i64 %291, 4
  %293 = add nuw nsw i64 %292, 1
  %294 = and i64 %293, 3
  %295 = icmp ult i64 %291, 48
  br i1 %295, label %340, label %296

296:                                              ; preds = %285
  %297 = sub nsw i64 %293, %294
  %298 = getelementptr inbounds i8, i8* %269, i64 -16
  %299 = getelementptr inbounds i8, i8* %268, i64 -16
  %300 = getelementptr inbounds i8, i8* %269, i64 -16
  %301 = getelementptr inbounds i8, i8* %268, i64 -16
  %302 = getelementptr inbounds i8, i8* %269, i64 -16
  %303 = getelementptr inbounds i8, i8* %268, i64 -16
  %304 = getelementptr inbounds i8, i8* %269, i64 -16
  %305 = getelementptr inbounds i8, i8* %268, i64 -16
  br label %306

306:                                              ; preds = %306, %296
  %307 = phi i64 [ 0, %296 ], [ %337, %306 ]
  %308 = phi i64 [ %297, %296 ], [ %338, %306 ]
  %309 = sub i64 0, %307
  %310 = sub i64 0, %307
  %311 = getelementptr inbounds i8, i8* %298, i64 %309
  %312 = bitcast i8* %311 to <2 x i64>*
  %313 = load <2 x i64>, <2 x i64>* %312, align 1, !alias.scope !52
  %314 = getelementptr inbounds i8, i8* %299, i64 %310
  %315 = bitcast i8* %314 to <2 x i64>*
  store <2 x i64> %313, <2 x i64>* %315, align 1, !alias.scope !55, !noalias !52
  %316 = sub nuw nsw i64 -16, %307
  %317 = sub nuw nsw i64 -16, %307
  %318 = getelementptr inbounds i8, i8* %300, i64 %316
  %319 = bitcast i8* %318 to <2 x i64>*
  %320 = load <2 x i64>, <2 x i64>* %319, align 1, !alias.scope !52
  %321 = getelementptr inbounds i8, i8* %301, i64 %317
  %322 = bitcast i8* %321 to <2 x i64>*
  store <2 x i64> %320, <2 x i64>* %322, align 1, !alias.scope !55, !noalias !52
  %323 = sub nuw nsw i64 -32, %307
  %324 = sub nuw nsw i64 -32, %307
  %325 = getelementptr inbounds i8, i8* %302, i64 %323
  %326 = bitcast i8* %325 to <2 x i64>*
  %327 = load <2 x i64>, <2 x i64>* %326, align 1, !alias.scope !52
  %328 = getelementptr inbounds i8, i8* %303, i64 %324
  %329 = bitcast i8* %328 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %329, align 1, !alias.scope !55, !noalias !52
  %330 = sub nuw nsw i64 -48, %307
  %331 = sub nuw nsw i64 -48, %307
  %332 = getelementptr inbounds i8, i8* %304, i64 %330
  %333 = bitcast i8* %332 to <2 x i64>*
  %334 = load <2 x i64>, <2 x i64>* %333, align 1, !alias.scope !52
  %335 = getelementptr inbounds i8, i8* %305, i64 %331
  %336 = bitcast i8* %335 to <2 x i64>*
  store <2 x i64> %334, <2 x i64>* %336, align 1, !alias.scope !55, !noalias !52
  %337 = add i64 %307, 64
  %338 = add i64 %308, -4
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %306, !llvm.loop !57

340:                                              ; preds = %306, %285
  %341 = phi i64 [ 0, %285 ], [ %337, %306 ]
  %342 = icmp eq i64 %294, 0
  br i1 %342, label %359, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds i8, i8* %269, i64 -16
  %345 = getelementptr inbounds i8, i8* %268, i64 -16
  br label %346

346:                                              ; preds = %346, %343
  %347 = phi i64 [ %341, %343 ], [ %356, %346 ]
  %348 = phi i64 [ %294, %343 ], [ %357, %346 ]
  %349 = sub i64 0, %347
  %350 = sub i64 0, %347
  %351 = getelementptr inbounds i8, i8* %344, i64 %349
  %352 = bitcast i8* %351 to <2 x i64>*
  %353 = load <2 x i64>, <2 x i64>* %352, align 1, !alias.scope !52
  %354 = getelementptr inbounds i8, i8* %345, i64 %350
  %355 = bitcast i8* %354 to <2 x i64>*
  store <2 x i64> %353, <2 x i64>* %355, align 1, !alias.scope !55, !noalias !52
  %356 = add i64 %347, 16
  %357 = add i64 %348, -1
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %346, !llvm.loop !58

359:                                              ; preds = %346, %340
  %360 = icmp eq i64 %286, %275
  br i1 %360, label %662, label %361

361:                                              ; preds = %359, %277, %272
  %362 = phi i8* [ %269, %277 ], [ %269, %272 ], [ %288, %359 ]
  %363 = phi i8* [ %268, %277 ], [ %268, %272 ], [ %290, %359 ]
  br label %364

364:                                              ; preds = %361, %364
  %365 = phi i8* [ %367, %364 ], [ %362, %361 ]
  %366 = phi i8* [ %369, %364 ], [ %363, %361 ]
  %367 = getelementptr inbounds i8, i8* %365, i64 -1
  %368 = load i8, i8* %367, align 1
  %369 = getelementptr inbounds i8, i8* %366, i64 -1
  store i8 %368, i8* %369, align 1
  %370 = icmp eq i8* %367, %6
  br i1 %370, label %662, label %364, !llvm.loop !59

371:                                              ; preds = %267
  %372 = getelementptr inbounds i8, i8* %270, i64 -1
  %373 = getelementptr inbounds i8, i8* %269, i64 -1
  %374 = load i8, i8* %373, align 1
  %375 = load i8, i8* %372, align 1
  %376 = icmp ult i8 %374, %375
  %377 = getelementptr inbounds i8, i8* %268, i64 -1
  %378 = select i1 %376, i8 %375, i8 %374
  %379 = select i1 %376, i8* %372, i8* %270
  %380 = select i1 %376, i8* %269, i8* %373
  store i8 %378, i8* %377, align 1
  %381 = icmp eq i8* %380, %6
  br i1 %381, label %662, label %267

382:                                              ; preds = %138, %382
  %383 = phi i8* [ %387, %382 ], [ %139, %138 ]
  %384 = phi i8* [ %386, %382 ], [ %140, %138 ]
  %385 = load i8, i8* %384, align 1
  store i8 %385, i8* %383, align 1
  %386 = getelementptr inbounds i8, i8* %384, i64 1
  %387 = getelementptr inbounds i8, i8* %383, i64 1
  %388 = icmp eq i8* %386, %15
  br i1 %388, label %264, label %382, !llvm.loop !60

389:                                              ; preds = %25, %395
  %390 = phi i64 [ %16, %25 ], [ %398, %395 ]
  %391 = phi i64 [ %19, %25 ], [ %397, %395 ]
  %392 = inttoptr i64 %391 to i8*
  %393 = load i8, i8* %392, align 1
  %394 = icmp ult i8 %27, %393
  br i1 %394, label %400, label %395

395:                                              ; preds = %389
  %396 = getelementptr inbounds i8, i8* %392, i64 1
  %397 = ptrtoint i8* %396 to i64
  %398 = add nsw i64 %390, -1
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %662, label %389

400:                                              ; preds = %389
  %401 = inttoptr i64 %391 to i8*
  %402 = icmp slt i64 %390, %17
  br i1 %402, label %403, label %428

403:                                              ; preds = %400
  %404 = sdiv i64 %17, 2
  %405 = getelementptr inbounds i8, i8* %26, i64 %404
  %406 = ptrtoint i8* %405 to i64
  %407 = sub i64 %18, %391
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %424, label %409

409:                                              ; preds = %403
  %410 = load i8, i8* %405, align 1
  br label %411

411:                                              ; preds = %411, %409
  %412 = phi i8* [ %401, %409 ], [ %422, %411 ]
  %413 = phi i64 [ %407, %409 ], [ %421, %411 ]
  %414 = lshr i64 %413, 1
  %415 = getelementptr inbounds i8, i8* %412, i64 %414
  %416 = load i8, i8* %415, align 1
  %417 = icmp ult i8 %410, %416
  %418 = getelementptr inbounds i8, i8* %415, i64 1
  %419 = xor i64 %414, -1
  %420 = add i64 %413, %419
  %421 = select i1 %417, i64 %414, i64 %420
  %422 = select i1 %417, i8* %412, i8* %418
  %423 = icmp eq i64 %421, 0
  br i1 %423, label %424, label %411

424:                                              ; preds = %411, %403
  %425 = phi i8* [ %401, %403 ], [ %422, %411 ]
  %426 = ptrtoint i8* %425 to i64
  %427 = sub i64 %426, %391
  br label %459

428:                                              ; preds = %400
  %429 = icmp eq i64 %390, 1
  br i1 %429, label %430, label %433

430:                                              ; preds = %428
  %431 = inttoptr i64 %18 to i8*
  %432 = inttoptr i64 %391 to i8*
  store i8 %27, i8* %432, align 1
  store i8 %393, i8* %431, align 1
  br label %662

433:                                              ; preds = %428
  %434 = sdiv i64 %390, 2
  %435 = getelementptr inbounds i8, i8* %401, i64 %434
  %436 = ptrtoint i8* %435 to i64
  %437 = ptrtoint i8* %15 to i64
  %438 = sub i64 %437, %18
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %455, label %440

440:                                              ; preds = %433
  %441 = load i8, i8* %435, align 1
  br label %442

442:                                              ; preds = %442, %440
  %443 = phi i8* [ %26, %440 ], [ %453, %442 ]
  %444 = phi i64 [ %438, %440 ], [ %452, %442 ]
  %445 = lshr i64 %444, 1
  %446 = getelementptr inbounds i8, i8* %443, i64 %445
  %447 = load i8, i8* %446, align 1
  %448 = icmp ult i8 %447, %441
  %449 = getelementptr inbounds i8, i8* %446, i64 1
  %450 = xor i64 %445, -1
  %451 = add i64 %444, %450
  %452 = select i1 %448, i64 %451, i64 %445
  %453 = select i1 %448, i8* %449, i8* %443
  %454 = icmp eq i64 %452, 0
  br i1 %454, label %455, label %442

455:                                              ; preds = %442, %433
  %456 = phi i8* [ %26, %433 ], [ %453, %442 ]
  %457 = ptrtoint i8* %456 to i64
  %458 = sub i64 %457, %18
  br label %459

459:                                              ; preds = %455, %424
  %460 = phi i64 [ %426, %424 ], [ %436, %455 ]
  %461 = phi i64 [ %406, %424 ], [ %457, %455 ]
  %462 = phi i64 [ %404, %424 ], [ %458, %455 ]
  %463 = phi i64 [ %427, %424 ], [ %434, %455 ]
  %464 = sub nsw i64 %390, %463
  %465 = sub nsw i64 %17, %462
  %466 = inttoptr i64 %460 to i8*
  %467 = inttoptr i64 %461 to i8*
  %468 = icmp eq i8* %466, %26
  br i1 %468, label %647, label %469

469:                                              ; preds = %459
  %470 = icmp eq i8* %26, %467
  br i1 %470, label %647, label %471

471:                                              ; preds = %469
  %472 = getelementptr inbounds i8, i8* %466, i64 1
  %473 = icmp eq i8* %472, %26
  br i1 %473, label %474, label %481

474:                                              ; preds = %471
  %475 = load i8, i8* %466, align 1
  %476 = sub i64 %461, %18
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %479, label %478

478:                                              ; preds = %474
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %466, i8* align 1 %26, i64 %476, i1 false) #13
  br label %479

479:                                              ; preds = %478, %474
  %480 = getelementptr inbounds i8, i8* %466, i64 %476
  store i8 %475, i8* %480, align 1
  br label %647

481:                                              ; preds = %471
  %482 = getelementptr inbounds i8, i8* %26, i64 1
  %483 = icmp eq i8* %482, %467
  br i1 %483, label %484, label %495

484:                                              ; preds = %481
  %485 = getelementptr inbounds i8, i8* %467, i64 -1
  %486 = load i8, i8* %485, align 1
  %487 = ptrtoint i8* %485 to i64
  %488 = sub i64 %487, %460
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %493, label %490

490:                                              ; preds = %484
  %491 = sub i64 0, %488
  %492 = getelementptr inbounds i8, i8* %467, i64 %491
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %492, i8* align 1 %466, i64 %488, i1 false) #13
  br label %493

493:                                              ; preds = %490, %484
  %494 = phi i8* [ %492, %490 ], [ %467, %484 ]
  store i8 %486, i8* %466, align 1
  br label %647

495:                                              ; preds = %481
  %496 = sub i64 %18, %460
  %497 = sub i64 %461, %18
  %498 = icmp eq i64 %496, %497
  br i1 %498, label %499, label %593

499:                                              ; preds = %495
  %500 = load i8, i8* %466, align 1
  store i8 %27, i8* %466, align 1
  store i8 %500, i8* %26, align 1
  %501 = getelementptr inbounds i8, i8* %466, i64 1
  %502 = getelementptr inbounds i8, i8* %26, i64 1
  %503 = icmp eq i8* %501, %26
  br i1 %503, label %647, label %504

504:                                              ; preds = %499
  %505 = getelementptr i8, i8* %26, i64 -1
  %506 = sub i64 0, %460
  %507 = getelementptr i8, i8* %505, i64 %506
  %508 = ptrtoint i8* %507 to i64
  %509 = icmp ult i8* %507, inttoptr (i64 32 to i8*)
  br i1 %509, label %582, label %510

510:                                              ; preds = %504
  %511 = and i64 %508, -32
  %512 = getelementptr i8, i8* %502, i64 %511
  %513 = getelementptr i8, i8* %501, i64 %511
  %514 = add i64 %511, -32
  %515 = lshr exact i64 %514, 5
  %516 = add nuw nsw i64 %515, 1
  %517 = and i64 %516, 1
  %518 = icmp eq i64 %514, 0
  br i1 %518, label %560, label %519

519:                                              ; preds = %510
  %520 = sub nuw nsw i64 %516, %517
  br label %521

521:                                              ; preds = %521, %519
  %522 = phi i64 [ 0, %519 ], [ %557, %521 ]
  %523 = phi i64 [ %520, %519 ], [ %558, %521 ]
  %524 = getelementptr i8, i8* %502, i64 %522
  %525 = getelementptr i8, i8* %501, i64 %522
  %526 = bitcast i8* %524 to <16 x i8>*
  %527 = load <16 x i8>, <16 x i8>* %526, align 1, !alias.scope !61
  %528 = getelementptr i8, i8* %524, i64 16
  %529 = bitcast i8* %528 to <16 x i8>*
  %530 = load <16 x i8>, <16 x i8>* %529, align 1, !alias.scope !61
  %531 = bitcast i8* %525 to <16 x i8>*
  %532 = load <16 x i8>, <16 x i8>* %531, align 1, !alias.scope !64, !noalias !61
  %533 = getelementptr i8, i8* %525, i64 16
  %534 = bitcast i8* %533 to <16 x i8>*
  %535 = load <16 x i8>, <16 x i8>* %534, align 1, !alias.scope !64, !noalias !61
  %536 = bitcast i8* %525 to <16 x i8>*
  store <16 x i8> %527, <16 x i8>* %536, align 1, !alias.scope !64, !noalias !61
  %537 = bitcast i8* %533 to <16 x i8>*
  store <16 x i8> %530, <16 x i8>* %537, align 1, !alias.scope !64, !noalias !61
  %538 = bitcast i8* %524 to <16 x i8>*
  store <16 x i8> %532, <16 x i8>* %538, align 1, !alias.scope !61
  %539 = bitcast i8* %528 to <16 x i8>*
  store <16 x i8> %535, <16 x i8>* %539, align 1, !alias.scope !61
  %540 = or i64 %522, 32
  %541 = getelementptr i8, i8* %502, i64 %540
  %542 = getelementptr i8, i8* %501, i64 %540
  %543 = bitcast i8* %541 to <16 x i8>*
  %544 = load <16 x i8>, <16 x i8>* %543, align 1, !alias.scope !61
  %545 = getelementptr i8, i8* %541, i64 16
  %546 = bitcast i8* %545 to <16 x i8>*
  %547 = load <16 x i8>, <16 x i8>* %546, align 1, !alias.scope !61
  %548 = bitcast i8* %542 to <16 x i8>*
  %549 = load <16 x i8>, <16 x i8>* %548, align 1, !alias.scope !64, !noalias !61
  %550 = getelementptr i8, i8* %542, i64 16
  %551 = bitcast i8* %550 to <16 x i8>*
  %552 = load <16 x i8>, <16 x i8>* %551, align 1, !alias.scope !64, !noalias !61
  %553 = bitcast i8* %542 to <16 x i8>*
  store <16 x i8> %544, <16 x i8>* %553, align 1, !alias.scope !64, !noalias !61
  %554 = bitcast i8* %550 to <16 x i8>*
  store <16 x i8> %547, <16 x i8>* %554, align 1, !alias.scope !64, !noalias !61
  %555 = bitcast i8* %541 to <16 x i8>*
  store <16 x i8> %549, <16 x i8>* %555, align 1, !alias.scope !61
  %556 = bitcast i8* %545 to <16 x i8>*
  store <16 x i8> %552, <16 x i8>* %556, align 1, !alias.scope !61
  %557 = add i64 %522, 64
  %558 = add i64 %523, -2
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %560, label %521, !llvm.loop !66

560:                                              ; preds = %521, %510
  %561 = phi i64 [ 0, %510 ], [ %557, %521 ]
  %562 = icmp eq i64 %517, 0
  br i1 %562, label %580, label %563

563:                                              ; preds = %560
  %564 = getelementptr i8, i8* %502, i64 %561
  %565 = getelementptr i8, i8* %501, i64 %561
  %566 = bitcast i8* %564 to <16 x i8>*
  %567 = load <16 x i8>, <16 x i8>* %566, align 1, !alias.scope !61
  %568 = getelementptr i8, i8* %564, i64 16
  %569 = bitcast i8* %568 to <16 x i8>*
  %570 = load <16 x i8>, <16 x i8>* %569, align 1, !alias.scope !61
  %571 = bitcast i8* %565 to <16 x i8>*
  %572 = load <16 x i8>, <16 x i8>* %571, align 1, !alias.scope !64, !noalias !61
  %573 = getelementptr i8, i8* %565, i64 16
  %574 = bitcast i8* %573 to <16 x i8>*
  %575 = load <16 x i8>, <16 x i8>* %574, align 1, !alias.scope !64, !noalias !61
  %576 = bitcast i8* %565 to <16 x i8>*
  store <16 x i8> %567, <16 x i8>* %576, align 1, !alias.scope !64, !noalias !61
  %577 = bitcast i8* %573 to <16 x i8>*
  store <16 x i8> %570, <16 x i8>* %577, align 1, !alias.scope !64, !noalias !61
  %578 = bitcast i8* %564 to <16 x i8>*
  store <16 x i8> %572, <16 x i8>* %578, align 1, !alias.scope !61
  %579 = bitcast i8* %568 to <16 x i8>*
  store <16 x i8> %575, <16 x i8>* %579, align 1, !alias.scope !61
  br label %580

580:                                              ; preds = %560, %563
  %581 = icmp eq i64 %511, %508
  br i1 %581, label %647, label %582

582:                                              ; preds = %580, %504
  %583 = phi i8* [ %502, %504 ], [ %512, %580 ]
  %584 = phi i8* [ %501, %504 ], [ %513, %580 ]
  br label %585

585:                                              ; preds = %582, %585
  %586 = phi i8* [ %591, %585 ], [ %583, %582 ]
  %587 = phi i8* [ %590, %585 ], [ %584, %582 ]
  %588 = load i8, i8* %586, align 1
  %589 = load i8, i8* %587, align 1
  store i8 %588, i8* %587, align 1
  store i8 %589, i8* %586, align 1
  %590 = getelementptr inbounds i8, i8* %587, i64 1
  %591 = getelementptr inbounds i8, i8* %586, i64 1
  %592 = icmp eq i8* %590, %26
  br i1 %592, label %647, label %585, !llvm.loop !67

593:                                              ; preds = %495, %593
  %594 = phi i64 [ %596, %593 ], [ %497, %495 ]
  %595 = phi i64 [ %594, %593 ], [ %496, %495 ]
  %596 = srem i64 %595, %594
  %597 = icmp eq i64 %596, 0
  br i1 %597, label %598, label %593

598:                                              ; preds = %593
  %599 = icmp eq i64 %594, 0
  br i1 %599, label %624, label %600

600:                                              ; preds = %598
  %601 = getelementptr inbounds i8, i8* %466, i64 %594
  %602 = and i64 %594, 1
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %621, label %604

604:                                              ; preds = %600
  %605 = getelementptr inbounds i8, i8* %601, i64 -1
  %606 = load i8, i8* %605, align 1
  %607 = getelementptr inbounds i8, i8* %605, i64 %496
  br label %608

608:                                              ; preds = %608, %604
  %609 = phi i8* [ %605, %604 ], [ %610, %608 ]
  %610 = phi i8* [ %607, %604 ], [ %618, %608 ]
  %611 = ptrtoint i8* %610 to i64
  %612 = load i8, i8* %610, align 1
  store i8 %612, i8* %609, align 1
  %613 = sub i64 %461, %611
  %614 = icmp slt i64 %496, %613
  %615 = getelementptr inbounds i8, i8* %610, i64 %496
  %616 = sub nsw i64 %496, %613
  %617 = getelementptr inbounds i8, i8* %466, i64 %616
  %618 = select i1 %614, i8* %615, i8* %617
  %619 = icmp eq i8* %618, %605
  br i1 %619, label %620, label %608

620:                                              ; preds = %608
  store i8 %606, i8* %610, align 1
  br label %621

621:                                              ; preds = %620, %600
  %622 = phi i8* [ %605, %620 ], [ %601, %600 ]
  %623 = icmp eq i64 %594, 1
  br i1 %623, label %624, label %626

624:                                              ; preds = %621, %675, %598
  %625 = getelementptr inbounds i8, i8* %466, i64 %497
  br label %647

626:                                              ; preds = %621, %675
  %627 = phi i8* [ %644, %675 ], [ %622, %621 ]
  %628 = getelementptr inbounds i8, i8* %627, i64 -1
  %629 = load i8, i8* %628, align 1
  %630 = getelementptr inbounds i8, i8* %628, i64 %496
  br label %631

631:                                              ; preds = %631, %626
  %632 = phi i8* [ %628, %626 ], [ %633, %631 ]
  %633 = phi i8* [ %630, %626 ], [ %641, %631 ]
  %634 = ptrtoint i8* %633 to i64
  %635 = load i8, i8* %633, align 1
  store i8 %635, i8* %632, align 1
  %636 = sub i64 %461, %634
  %637 = icmp slt i64 %496, %636
  %638 = getelementptr inbounds i8, i8* %633, i64 %496
  %639 = sub nsw i64 %496, %636
  %640 = getelementptr inbounds i8, i8* %466, i64 %639
  %641 = select i1 %637, i8* %638, i8* %640
  %642 = icmp eq i8* %641, %628
  br i1 %642, label %643, label %631

643:                                              ; preds = %631
  store i8 %629, i8* %633, align 1
  %644 = getelementptr inbounds i8, i8* %627, i64 -2
  %645 = load i8, i8* %644, align 1
  %646 = getelementptr inbounds i8, i8* %644, i64 %496
  br label %663

647:                                              ; preds = %585, %499, %580, %459, %469, %479, %493, %624
  %648 = phi i8* [ %466, %469 ], [ %467, %459 ], [ %480, %479 ], [ %494, %493 ], [ %625, %624 ], [ %26, %580 ], [ %26, %499 ], [ %26, %585 ]
  %649 = add nsw i64 %463, %462
  %650 = add nsw i64 %464, %465
  %651 = icmp slt i64 %649, %650
  br i1 %651, label %652, label %654

652:                                              ; preds = %647
  %653 = ptrtoint i8* %648 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i8* %401, i8* %466, i8* %648, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1) %3, i64 %463, i64 %462, i8* %6, i64 %7)
  br label %655

654:                                              ; preds = %647
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN6device21FidoTransportProtocolENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i8* %648, i8* %467, i8* %15, %"struct.base::internal::flat_tree<device::FidoTransportProtocol, base::identity, std::__1::less<void>, std::__1::vector<device::FidoTransportProtocol, std::__1::allocator<device::FidoTransportProtocol> > >::value_compare"* dereferenceable(1) %3, i64 %464, i64 %465, i8* %6, i64 %7)
  br label %655

655:                                              ; preds = %652, %654
  %656 = phi i64 [ %653, %652 ], [ %391, %654 ]
  %657 = phi i64 [ %461, %652 ], [ %460, %654 ]
  %658 = phi i64 [ %465, %652 ], [ %462, %654 ]
  %659 = phi i64 [ %464, %652 ], [ %463, %654 ]
  %660 = phi i8* [ %15, %652 ], [ %648, %654 ]
  %661 = icmp eq i64 %658, 0
  br i1 %661, label %662, label %14

662:                                              ; preds = %655, %23, %395, %252, %371, %364, %359, %8, %430, %264, %243, %238, %230, %131, %32
  ret void

663:                                              ; preds = %663, %643
  %664 = phi i8* [ %644, %643 ], [ %665, %663 ]
  %665 = phi i8* [ %646, %643 ], [ %673, %663 ]
  %666 = ptrtoint i8* %665 to i64
  %667 = load i8, i8* %665, align 1
  store i8 %667, i8* %664, align 1
  %668 = sub i64 %461, %666
  %669 = icmp slt i64 %496, %668
  %670 = getelementptr inbounds i8, i8* %665, i64 %496
  %671 = sub nsw i64 %496, %668
  %672 = getelementptr inbounds i8, i8* %466, i64 %671
  %673 = select i1 %669, i8* %670, i8* %672
  %674 = icmp eq i8* %673, %644
  br i1 %674, label %675, label %663

675:                                              ; preds = %663
  store i8 %645, i8* %665, align 1
  %676 = icmp eq i8* %644, %466
  br i1 %676, label %624, label %626
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #11

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal11DeserializeINS_14StringDataViewERPNS0_10Array_DataIcEEN4absl8optionalINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data.83"** dereferenceable(8), %"class.absl::optional"*, %"class.mojo::Message"** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = load %"class.mojo::internal::Array_Data.83"*, %"class.mojo::internal::Array_Data.83"** %0, align 8
  %5 = icmp eq %"class.mojo::internal::Array_Data.83"* %4, null
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %5, label %9, label %20

9:                                                ; preds = %3
  br i1 %8, label %74, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %16, %10
  store i8 0, i8* %6, align 8
  br label %74

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %8, label %22, label %27

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %6, align 8
  %24 = load %"class.mojo::internal::Array_Data.83"*, %"class.mojo::internal::Array_Data.83"** %0, align 8
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = icmp eq %"class.mojo::internal::Array_Data.83"* %24, null
  br i1 %26, label %74, label %27

27:                                               ; preds = %20, %22
  %28 = phi %"class.std::__1::basic_string"* [ %25, %22 ], [ %21, %20 ]
  %29 = phi %"class.mojo::internal::Array_Data.83"* [ %24, %22 ], [ %4, %20 ]
  %30 = getelementptr inbounds %"class.mojo::internal::Array_Data.83", %"class.mojo::internal::Array_Data.83"* %29, i64 1
  %31 = bitcast %"class.mojo::internal::Array_Data.83"* %30 to i8*
  %32 = getelementptr inbounds %"class.mojo::internal::Array_Data.83", %"class.mojo::internal::Array_Data.83"* %29, i64 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 1
  %34 = zext i32 %33 to i64
  %35 = tail call i1 @llvm.is.constant.i64(i64 %34) #13
  %36 = icmp ult i32 %33, 23
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %56

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %44, align 8
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  br label %50

47:                                               ; preds = %38
  %48 = trunc i32 %33 to i8
  store i8 %48, i8* %40, align 1
  %49 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  br label %50

50:                                               ; preds = %47, %43
  %51 = phi i8* [ %46, %43 ], [ %49, %47 ]
  %52 = icmp eq i32 %33, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %31, i64 %34, i1 false) #13
  br label %54

54:                                               ; preds = %53, %50
  %55 = getelementptr inbounds i8, i8* %51, i64 %34
  store i8 0, i8* %55, align 1
  br label %59

56:                                               ; preds = %27
  %57 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %31, i64 %34) #13
  %58 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %59

59:                                               ; preds = %56, %54
  %60 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %58, %56 ], [ %39, %54 ]
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %67 = select i1 %63, i8* %65, i8* %66
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = zext i8 %62 to i64
  %71 = select i1 %63, i64 %69, i64 %70
  %72 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %67, i64 %71) #13
  br i1 %72, label %74, label %73

73:                                               ; preds = %59
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #13
  br label %74

74:                                               ; preds = %73, %59, %22, %19, %9
  ret i1 true
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #6

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #5

declare zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom11UrlDataViewE4GURLE4ReadES3_PS4_(%"class.url::mojom::internal::Url_Data"*, %"class.mojo::Message"*, %class.GURL*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal11DeserializeINS_13ArrayDataViewIhEERPNS0_10Array_DataIhEEN4absl8optionalINSt3__16vectorIhNSA_9allocatorIhEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data"** dereferenceable(8), %"class.absl::optional.57"*, %"class.mojo::Message"** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = load %"class.mojo::internal::Array_Data"*, %"class.mojo::internal::Array_Data"** %0, align 8
  %5 = icmp eq %"class.mojo::internal::Array_Data"* %4, null
  %6 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %5, label %9, label %19

9:                                                ; preds = %3
  br i1 %8, label %87, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  tail call void @_ZdlPv(i8* nonnull %12) #12
  br label %18

18:                                               ; preds = %14, %10
  store i8 0, i8* %6, align 8
  br label %87

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %8, label %21, label %31

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.21"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %6, align 8
  %23 = load %"class.mojo::internal::Array_Data"*, %"class.mojo::internal::Array_Data"** %0, align 8
  %24 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = icmp eq %"class.mojo::internal::Array_Data"* %23, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %21
  %27 = bitcast %"class.std::__1::vector.21"* %24 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %30 = bitcast i8** %29 to i64*
  store i64 %28, i64* %30, align 8
  br label %87

31:                                               ; preds = %19, %21
  %32 = phi %"class.std::__1::vector.21"* [ %24, %21 ], [ %20, %19 ]
  %33 = phi %"class.mojo::internal::Array_Data"* [ %23, %21 ], [ %4, %19 ]
  %34 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %33, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.21"* %32 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, %36
  br i1 %43, label %62, label %44

44:                                               ; preds = %31
  %45 = icmp eq i32 %35, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %44
  %47 = tail call i8* @_Znwm(i64 %36) #12
  %48 = getelementptr inbounds i8, i8* %47, i64 %36
  %49 = ptrtoint i8* %47 to i64
  %50 = sub i64 %36, %49
  %51 = getelementptr i8, i8* %47, i64 %50
  %52 = ptrtoint i8* %51 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %47, i8 0, i64 %52, i1 false) #13
  %53 = ptrtoint i8* %48 to i64
  br label %54

54:                                               ; preds = %46, %44
  %55 = phi i64 [ %53, %46 ], [ 0, %44 ]
  %56 = phi i64 [ %49, %46 ], [ 0, %44 ]
  store i64 %56, i64* %40, align 8
  store i64 %55, i64* %38, align 8
  %57 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast i8** %57 to i64*
  store i64 %55, i64* %58, align 8
  %59 = icmp eq i64 %41, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %41 to i8*
  tail call void @_ZdlPv(i8* nonnull %61) #12
  br label %62

62:                                               ; preds = %60, %54, %31
  %63 = load i32, i32* %34, align 1
  %64 = zext i32 %63 to i64
  %65 = icmp eq i32 %63, 0
  br i1 %65, label %87, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.absl::optional.57", %"class.absl::optional.57"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  %70 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %33, i64 1
  %71 = bitcast %"class.mojo::internal::Array_Data"* %70 to i8*
  br i1 %69, label %72, label %76

72:                                               ; preds = %66
  %73 = load i8, i8* %71, align 1
  store i8 %73, i8* null, align 536870912
  %74 = load i32, i32* %34, align 1
  %75 = icmp ugt i32 %74, 1
  br i1 %75, label %77, label %87

76:                                               ; preds = %66
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* align 1 %71, i64 %64, i1 false) #13
  br label %87

77:                                               ; preds = %72, %77
  %78 = phi i64 [ %82, %77 ], [ 1, %72 ]
  %79 = load i8*, i8** %67, align 8
  %80 = getelementptr inbounds i8, i8* %71, i64 %78
  %81 = load i8, i8* %80, align 1
  %82 = add nuw nsw i64 %78, 1
  %83 = getelementptr inbounds i8, i8* %79, i64 %78
  store i8 %81, i8* %83, align 1
  %84 = load i32, i32* %34, align 1
  %85 = zext i32 %84 to i64
  %86 = icmp ult i64 %82, %85
  br i1 %86, label %77, label %87

87:                                               ; preds = %77, %76, %72, %62, %26, %18, %9
  ret i1 true
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !9}
!18 = distinct !{!18, !11}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !11}
!36 = distinct !{!36, !9}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !11}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !9}
!50 = distinct !{!50, !11}
!51 = distinct !{!51, !9}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !9}
!58 = distinct !{!58, !11}
!59 = distinct !{!59, !9}
!60 = distinct !{!60, !9}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !9}
!67 = distinct !{!67, !9}
