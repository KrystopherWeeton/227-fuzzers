; ModuleID = '../../v8/src/trap-handler/handler-inside-posix.cc'
source_filename = "../../v8/src/trap-handler/handler-inside-posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon }
%union.anon = type { %struct.anon.2, [80 x i8] }
%struct.anon.2 = type { i32, i32, i32, i64, i64 }
%struct.__sigset_t = type { [16 x i64] }
%"class.v8::internal::trap_handler::SigUnmaskStack" = type { %struct.__sigset_t }

@_ZN2v88internal12trap_handler21g_thread_in_wasm_codeE = external thread_local global i32, align 4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12trap_handler23IsKernelGeneratedSignalEP9siginfo_t(%struct.siginfo_t* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12trap_handler15TryHandleSignalEiP9siginfo_tPv(i32, %struct.siginfo_t* nocapture readonly, i8* nocapture) local_unnamed_addr #1 {
  %4 = alloca %struct.__sigset_t, align 8
  %5 = alloca %struct.__sigset_t, align 8
  %6 = alloca %"class.v8::internal::trap_handler::SigUnmaskStack", align 8
  %7 = alloca i64, align 8
  br i1 icmp ne (void ()* @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE, void ()* null), label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE() #6
  br label %9

9:                                                ; preds = %3, %8
  %10 = load i32, i32* @_ZN2v88internal12trap_handler21g_thread_in_wasm_codeE, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %9
  br i1 icmp ne (void ()* @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE, void ()* null), label %13, label %14

13:                                               ; preds = %12
  tail call void @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE() #6
  br label %14

14:                                               ; preds = %12, %13
  store i32 0, i32* @_ZN2v88internal12trap_handler21g_thread_in_wasm_codeE, align 4
  %15 = icmp eq i32 %0, 11
  br i1 %15, label %16, label %40

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %40

20:                                               ; preds = %16
  %21 = bitcast %struct.__sigset_t* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %21) #6
  %22 = call i32 @sigemptyset(%struct.__sigset_t* nonnull %5) #6
  %23 = call i32 @sigaddset(%struct.__sigset_t* nonnull %5, i32 11) #6
  %24 = bitcast %"class.v8::internal::trap_handler::SigUnmaskStack"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %24) #6
  %25 = bitcast %struct.__sigset_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %25)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %21, i64 128, i1 false)
  %26 = getelementptr inbounds %"class.v8::internal::trap_handler::SigUnmaskStack", %"class.v8::internal::trap_handler::SigUnmaskStack"* %6, i64 0, i32 0
  %27 = call i32 @pthread_sigmask(i32 1, %struct.__sigset_t* nonnull %4, %struct.__sigset_t* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %25)
  %28 = getelementptr inbounds i8, i8* %2, i64 168
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #6
  store i64 0, i64* %7, align 8
  %32 = call zeroext i1 @_ZN2v88internal12trap_handler17TryFindLandingPadEmPm(i64 %30, i64* nonnull %7) #6
  br i1 %32, label %33, label %37

33:                                               ; preds = %20
  %34 = load i64, i64* %7, align 8
  store i64 %34, i64* %29, align 8
  br i1 icmp ne (void ()* @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE, void ()* null), label %35, label %36

35:                                               ; preds = %33
  call void @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE() #6
  br label %36

36:                                               ; preds = %33, %35
  store i32 1, i32* @_ZN2v88internal12trap_handler21g_thread_in_wasm_codeE, align 4
  br label %37

37:                                               ; preds = %20, %36
  %38 = phi i1 [ true, %36 ], [ false, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #6
  %39 = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* nonnull %26, %struct.__sigset_t* null) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %21) #6
  ret i1 %38

40:                                               ; preds = %9, %14, %16
  ret i1 false
}

define weak_odr hidden i32* @_ZTWN2v88internal12trap_handler21g_thread_in_wasm_codeE() local_unnamed_addr #2 {
  br i1 icmp ne (void ()* @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE, void ()* null), label %1, label %2

1:                                                ; preds = %0
  tail call void @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE()
  br label %2

2:                                                ; preds = %1, %0
  ret i32* @_ZN2v88internal12trap_handler21g_thread_in_wasm_codeE
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare i32 @sigemptyset(%struct.__sigset_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @sigaddset(%struct.__sigset_t*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZN2v88internal12trap_handler17TryFindLandingPadEmPm(i64, i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12trap_handler12HandleSignalEiP9siginfo_tPv(i32, %struct.siginfo_t* nocapture readonly, i8* nocapture) local_unnamed_addr #5 {
  %4 = tail call zeroext i1 @_ZN2v88internal12trap_handler15TryHandleSignalEiP9siginfo_tPv(i32 %0, %struct.siginfo_t* %1, i8* %2)
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  tail call void @_ZN2v88internal12trap_handler17RemoveTrapHandlerEv() #6
  %6 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @raise(i32 %0) #6
  br label %11

11:                                               ; preds = %5, %9, %3
  ret void
}

declare void @_ZN2v88internal12trap_handler17RemoveTrapHandlerEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @raise(i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_sigmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) local_unnamed_addr #4

declare extern_weak void @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE() #2

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
