; ModuleID = '../../net/tools/huffman_trie/huffman/huffman_builder.cc'
source_filename = "../../net/tools/huffman_trie/huffman/huffman_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::nothrow_t" = type { i8 }
%"class.net::huffman_trie::HuffmanBuilder" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__tree_node.46" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.45", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.45" = type { %"struct.std::__1::pair.40" }
%"struct.std::__1::pair.40" = type { i8, i32 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* }
%"class.net::huffman_trie::(anonymous namespace)::HuffmanNode" = type { i8, i32, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.24" }
%"struct.std::__1::pair.24" = type { i8, %"struct.net::huffman_trie::HuffmanRepresentation" }
%"struct.net::huffman_trie::HuffmanRepresentation" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIhjEENS_19__map_value_compareIhS2_NS_4lessIhEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN3net12huffman_trie14HuffmanBuilderC1Ev = hidden unnamed_addr alias void (%"class.net::huffman_trie::HuffmanBuilder"*), void (%"class.net::huffman_trie::HuffmanBuilder"*)* @_ZN3net12huffman_trie14HuffmanBuilderC2Ev
@_ZN3net12huffman_trie14HuffmanBuilderD1Ev = hidden unnamed_addr alias void (%"class.net::huffman_trie::HuffmanBuilder"*), void (%"class.net::huffman_trie::HuffmanBuilder"*)* @_ZN3net12huffman_trie14HuffmanBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie14HuffmanBuilderC2Ev(%"class.net::huffman_trie::HuffmanBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie14HuffmanBuilderD2Ev(%"class.net::huffman_trie::HuffmanBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.46"**
  %5 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhjEENS_19__map_value_compareIhS2_NS_4lessIhEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node.46"* %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie14HuffmanBuilder11RecordUsageEh(%"class.net::huffman_trie::HuffmanBuilder"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = and i8 %1, 127
  %4 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.46"**
  %6 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.46"* %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %32, %8
  %11 = phi %"class.std::__1::__tree_node.46"* [ %35, %32 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %34, %32 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %11, i64 0, i32 1, i32 0, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp ult i8 %3, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %11, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %11, i64 0, i32 0, i32 0
  br label %38

22:                                               ; preds = %10
  %23 = icmp ult i8 %14, %3
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %11, i64 0, i32 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %11, i64 0, i32 0, i32 0
  br label %38

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %11, i64 0, i32 0, i32 0
  br label %38

32:                                               ; preds = %24, %16
  %33 = phi %"class.std::__1::__tree_node_base"* [ %18, %16 ], [ %26, %24 ]
  %34 = phi %"class.std::__1::__tree_node_base"** [ %17, %16 ], [ %25, %24 ]
  %35 = bitcast %"class.std::__1::__tree_node_base"* %33 to %"class.std::__1::__tree_node.46"*
  br label %10

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %38

38:                                               ; preds = %36, %30, %28, %20
  %39 = phi %"class.std::__1::__tree_end_node"* [ %4, %36 ], [ %21, %20 ], [ %29, %28 ], [ %31, %30 ]
  %40 = phi %"class.std::__1::__tree_node_base"** [ %37, %36 ], [ %17, %20 ], [ %25, %28 ], [ %12, %30 ]
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node.46"**
  %42 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node.46"* %42, null
  br i1 %43, label %44, label %70

44:                                               ; preds = %38
  %45 = tail call i8* @_Znwm(i64 40) #10, !noalias !2
  %46 = getelementptr inbounds i8, i8* %45, i64 28
  store i8 %3, i8* %46, align 4, !noalias !2
  %47 = getelementptr inbounds i8, i8* %45, i64 32
  %48 = bitcast i8* %47 to i32*
  store i32 0, i32* %48, align 4, !noalias !2
  %49 = bitcast i8* %45 to %"class.std::__1::__tree_node.46"*
  %50 = bitcast i8* %45 to %"class.std::__1::__tree_node_base"*
  %51 = getelementptr inbounds i8, i8* %45, i64 16
  %52 = bitcast i8* %51 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"** %52, align 8
  %53 = bitcast %"class.std::__1::__tree_node_base"** %40 to i8**
  store i8* %45, i8** %53, align 8
  %54 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %44
  %60 = ptrtoint %"class.std::__1::__tree_node_base"* %57 to i64
  %61 = bitcast %"class.net::huffman_trie::HuffmanBuilder"* %0 to i64*
  store i64 %60, i64* %61, align 8
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  br label %63

63:                                               ; preds = %59, %44
  %64 = phi %"class.std::__1::__tree_node_base"* [ %50, %44 ], [ %62, %59 ]
  %65 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %66, %"class.std::__1::__tree_node_base"* %64) #9
  %67 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  br label %70

70:                                               ; preds = %38, %63
  %71 = phi %"class.std::__1::__tree_node.46"* [ %49, %63 ], [ %42, %38 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %71, i64 0, i32 1, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %72, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie14HuffmanBuilder7ToTableEv(%"class.std::__1::map.4"* noalias sret, %"class.net::huffman_trie::HuffmanBuilder"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %4, align 8
  %8 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = tail call fastcc %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* @_ZN3net12huffman_trie14HuffmanBuilder9BuildTreeEv(%"class.net::huffman_trie::HuffmanBuilder"* %1)
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %10, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %9, align 8
  tail call fastcc void @_ZN3net12huffman_trie14HuffmanBuilder11TreeToTableEPNS0_12_GLOBAL__N_111HuffmanNodeEjjPNSt3__13mapIhNS0_21HuffmanRepresentationENS5_4lessIhEENS5_9allocatorINS5_4pairIKhS7_EEEEEE(%"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %10, i32 0, i32 0, %"class.std::__1::map.4"* %0)
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* @_ZN3net12huffman_trie14HuffmanBuilder9BuildTreeEv(%"class.net::huffman_trie::HuffmanBuilder"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, align 8
  %7 = alloca i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, align 8
  %8 = alloca %"class.std::__1::unique_ptr", align 8
  %9 = alloca %"class.std::__1::unique_ptr", align 8
  %10 = alloca %"class.std::__1::vector.31", align 8
  %11 = alloca %"class.std::__1::unique_ptr", align 8
  %12 = alloca %"class.std::__1::unique_ptr", align 8
  %13 = alloca %"class.std::__1::unique_ptr", align 8
  %14 = alloca %"class.std::__1::unique_ptr", align 8
  %15 = alloca %"class.std::__1::unique_ptr", align 8
  %16 = bitcast %"class.std::__1::vector.31"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %10, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %10, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #9
  %20 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr"** %19 to i64*
  %23 = bitcast %"class.std::__1::vector.31"* %10 to i64*
  %24 = icmp eq i64 %21, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %1
  %26 = icmp ugt i64 %21, 2305843009213693951
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  tail call void @abort() #11
  unreachable

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::unique_ptr"** %18 to i64*
  %30 = shl i64 %21, 3
  %31 = tail call i8* @_Znwm(i64 %30) #10
  %32 = ptrtoint i8* %31 to i64
  %33 = bitcast i8* %31 to %"class.std::__1::unique_ptr"*
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 %21
  %35 = ptrtoint %"class.std::__1::unique_ptr"* %34 to i64
  store i64 %32, i64* %23, align 8
  store i64 %32, i64* %29, align 8
  store i64 %35, i64* %22, align 8
  br label %36

36:                                               ; preds = %28, %1
  %37 = phi i64 [ 0, %1 ], [ %32, %28 ]
  %38 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.net::huffman_trie::HuffmanBuilder", %"class.net::huffman_trie::HuffmanBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %41 = icmp eq %"class.std::__1::__tree_end_node"* %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::unique_ptr"** %18 to i64*
  br label %55

44:                                               ; preds = %36
  %45 = bitcast %"class.std::__1::unique_ptr"* %11 to i8*
  %46 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  %47 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr"* %11 to i8**
  br label %71

51:                                               ; preds = %111
  %52 = bitcast %"class.std::__1::unique_ptr"** %18 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = load i64, i64* %23, align 8
  br label %55

55:                                               ; preds = %42, %51
  %56 = phi i64* [ %43, %42 ], [ %52, %51 ]
  %57 = phi i64 [ %37, %42 ], [ %54, %51 ]
  %58 = phi i64 [ %37, %42 ], [ %53, %51 ]
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = icmp ult i64 %60, 2
  %62 = inttoptr i64 %57 to %"class.std::__1::unique_ptr"*
  %63 = inttoptr i64 %58 to %"class.std::__1::unique_ptr"*
  br i1 %61, label %64, label %122

64:                                               ; preds = %55
  %65 = bitcast %"class.std::__1::unique_ptr"* %12 to i8*
  %66 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %67 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr"* %12 to i8**
  br label %114

71:                                               ; preds = %44, %111
  %72 = phi %"class.std::__1::__tree_end_node"* [ %39, %44 ], [ %112, %111 ]
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node.46"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %73, i64 0, i32 1, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 4
  %76 = bitcast %"class.std::__1::__tree_end_node"* %75 to i32*
  %77 = call i8* @_Znwm(i64 24) #10
  %78 = load i8, i8* %74, align 1
  %79 = load i32, i32* %76, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  store i8 %78, i8* %77, align 8
  %80 = getelementptr inbounds i8, i8* %77, i64 4
  %81 = bitcast i8* %80 to i32*
  store i32 %79, i32* %81, align 4
  %82 = getelementptr inbounds i8, i8* %77, i64 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %48, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %49, align 8
  %83 = bitcast i8* %82 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %83, align 8
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %9) #9
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  store i8* %77, i8** %50, align 8
  call fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE9push_backEOS8_(%"class.std::__1::vector.31"* nonnull %10, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %11)
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 1, i32 0
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node_base"* %85, null
  br i1 %86, label %87, label %95

87:                                               ; preds = %71
  %88 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node_base"*
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 2
  %90 = bitcast %"class.std::__1::__tree_end_node"* %89 to %"class.std::__1::__tree_end_node"**
  %91 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 0, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, %88
  br i1 %94, label %111, label %102

95:                                               ; preds = %71, %95
  %96 = phi %"class.std::__1::__tree_node_base"* [ %98, %95 ], [ %85, %71 ]
  %97 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %100, label %95

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %96, i64 0, i32 0
  br label %111

102:                                              ; preds = %87, %102
  %103 = phi %"class.std::__1::__tree_end_node"** [ %106, %102 ], [ %90, %87 ]
  %104 = bitcast %"class.std::__1::__tree_end_node"** %103 to %"class.std::__1::__tree_node_base"**
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 2
  %107 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %107, i64 0, i32 0
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, %105
  br i1 %110, label %111, label %102

111:                                              ; preds = %102, %87, %100
  %112 = phi %"class.std::__1::__tree_end_node"* [ %101, %100 ], [ %91, %87 ], [ %107, %102 ]
  %113 = icmp eq %"class.std::__1::__tree_end_node"* %112, %40
  br i1 %113, label %51, label %71

114:                                              ; preds = %64, %177
  %115 = phi %"class.std::__1::unique_ptr"* [ %63, %64 ], [ %192, %177 ]
  %116 = phi %"class.std::__1::unique_ptr"* [ %62, %64 ], [ %191, %177 ]
  %117 = phi i8 [ 0, %64 ], [ %183, %177 ]
  %118 = icmp eq %"class.std::__1::unique_ptr"* %116, %115
  br i1 %118, label %177, label %167

119:                                              ; preds = %177
  %120 = inttoptr i64 %185 to %"class.std::__1::unique_ptr"*
  %121 = inttoptr i64 %184 to %"class.std::__1::unique_ptr"*
  br label %122

122:                                              ; preds = %119, %55
  %123 = phi i64 [ %57, %55 ], [ %185, %119 ]
  %124 = phi %"class.std::__1::unique_ptr"* [ %62, %55 ], [ %120, %119 ]
  %125 = phi %"class.std::__1::unique_ptr"* [ %63, %55 ], [ %121, %119 ]
  %126 = bitcast i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126)
  %127 = ptrtoint %"class.std::__1::unique_ptr"* %125 to i64
  store i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)* @_ZN3net12huffman_trie12_GLOBAL__N_112CompareNodesERKNSt3__110unique_ptrINS1_11HuffmanNodeENS2_14default_deleteIS4_EEEES9_, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %7, align 8
  %128 = sub i64 %127, %123
  %129 = ashr exact i64 %128, 3
  %130 = icmp sgt i64 %128, 0
  br i1 %130, label %131, label %142

131:                                              ; preds = %122
  %132 = icmp slt i64 %129, 1152921504606846975
  %133 = select i1 %132, i64 %129, i64 1152921504606846975
  br label %134

134:                                              ; preds = %139, %131
  %135 = phi i64 [ %140, %139 ], [ %133, %131 ]
  %136 = shl i64 %135, 3
  %137 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %136, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #9
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %143

139:                                              ; preds = %134
  %140 = lshr i64 %135, 1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %134

142:                                              ; preds = %139, %122
  call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %124, %"class.std::__1::unique_ptr"* %125, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** nonnull dereferenceable(8) %7, i64 %129, %"class.std::__1::unique_ptr"* null, i64 0) #9
  br label %145

143:                                              ; preds = %134
  %144 = bitcast i8* %137 to %"class.std::__1::unique_ptr"*
  call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %124, %"class.std::__1::unique_ptr"* %125, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** nonnull dereferenceable(8) %7, i64 %129, %"class.std::__1::unique_ptr"* nonnull %144, i64 %135) #9
  call void @_ZdlPv(i8* nonnull %137) #10
  br label %145

145:                                              ; preds = %142, %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126)
  %146 = load i64, i64* %56, align 8
  %147 = load i64, i64* %23, align 8
  %148 = sub i64 %146, %147
  %149 = ashr exact i64 %148, 3
  %150 = icmp ugt i64 %149, 1
  %151 = inttoptr i64 %147 to %"class.std::__1::unique_ptr"*
  br i1 %150, label %152, label %295

152:                                              ; preds = %145
  %153 = bitcast %"class.std::__1::unique_ptr"* %13 to i8*
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %156 = bitcast %"class.std::__1::unique_ptr"* %14 to i8*
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %158 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %159 = bitcast %"class.std::__1::unique_ptr"* %15 to i8*
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  %162 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %165 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  %166 = bitcast i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %6 to i8*
  br label %193

167:                                              ; preds = %114, %167
  %168 = phi %"class.std::__1::unique_ptr"* [ %174, %167 ], [ %116, %114 ]
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %169, align 8
  %171 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %170, i64 0, i32 0
  %172 = load i8, i8* %171, align 8
  %173 = icmp eq i8 %172, %117
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 1
  %175 = icmp eq %"class.std::__1::unique_ptr"* %174, %115
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %167

177:                                              ; preds = %167, %114
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #9
  %178 = call i8* @_Znwm(i64 24) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  store i8 %117, i8* %178, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 4
  %180 = bitcast i8* %179 to i32*
  store i32 0, i32* %180, align 4
  %181 = getelementptr inbounds i8, i8* %178, i64 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %68, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %69, align 8
  %182 = bitcast i8* %181 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %182, align 8
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %5) #9
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  store i8* %178, i8** %70, align 8
  call fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE9push_backEOS8_(%"class.std::__1::vector.31"* nonnull %10, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %12)
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #9
  %183 = add nuw nsw i8 %117, 1
  %184 = load i64, i64* %56, align 8
  %185 = load i64, i64* %23, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 3
  %188 = icmp ult i64 %187, 2
  %189 = icmp ult i8 %183, 2
  %190 = and i1 %189, %188
  %191 = inttoptr i64 %185 to %"class.std::__1::unique_ptr"*
  %192 = inttoptr i64 %184 to %"class.std::__1::unique_ptr"*
  br i1 %190, label %114, label %119

193:                                              ; preds = %152, %286
  %194 = phi %"class.std::__1::unique_ptr"* [ %151, %152 ], [ %292, %286 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #9
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* inttoptr (i64 -6148914691236517206 to %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*), %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %154, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %194, i64 0, i32 0, i32 0, i32 0
  %196 = bitcast %"class.std::__1::unique_ptr"* %194 to i64*
  %197 = load i64, i64* %196, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %195, align 8
  store i64 %197, i64* %155, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #9
  %198 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %198, i64 1
  %200 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %199, i64 0, i32 0, i32 0, i32 0
  %201 = bitcast %"class.std::__1::unique_ptr"* %199 to i64*
  %202 = load i64, i64* %201, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %200, align 8
  store i64 %202, i64* %158, align 8
  %203 = inttoptr i64 %197 to %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*
  %204 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %203, i64 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = inttoptr i64 %202 to %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*
  %207 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %206, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #9
  %209 = call i8* @_Znwm(i64 24) #10
  %210 = add i32 %208, %205
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %154, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %157, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162)
  store i8 0, i8* %209, align 8
  %211 = getelementptr inbounds i8, i8* %209, i64 4
  %212 = bitcast i8* %211 to i32*
  store i32 %210, i32* %212, align 4
  %213 = getelementptr inbounds i8, i8* %209, i64 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %163, align 8
  %214 = bitcast i8* %213 to i64*
  store i64 %197, i64* %214, align 8
  %215 = getelementptr inbounds i8, i8* %209, i64 16
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %164, align 8
  %216 = bitcast i8* %215 to i64*
  store i64 %202, i64* %216, align 8
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %3) #9
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162)
  %217 = ptrtoint i8* %209 to i64
  store i64 %217, i64* %165, align 8
  %218 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %219 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %218, i64 1
  %220 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %221 = icmp eq %"class.std::__1::unique_ptr"* %219, %220
  br i1 %221, label %243, label %222

222:                                              ; preds = %193, %236
  %223 = phi %"class.std::__1::unique_ptr"* [ %238, %236 ], [ %218, %193 ]
  %224 = phi %"class.std::__1::unique_ptr"* [ %237, %236 ], [ %219, %193 ]
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %224, i64 0, i32 0, i32 0, i32 0
  %226 = bitcast %"class.std::__1::unique_ptr"* %224 to i64*
  %227 = load i64, i64* %226, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %225, align 8
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %223, i64 0, i32 0, i32 0, i32 0
  %229 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %228, align 8
  %230 = bitcast %"class.std::__1::unique_ptr"* %223 to i64*
  store i64 %227, i64* %230, align 8
  %231 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %229, null
  br i1 %231, label %236, label %232

232:                                              ; preds = %222
  %233 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %229, i64 0, i32 3
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %233) #9
  %234 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %229, i64 0, i32 2
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %234) #9
  %235 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %229, i64 0, i32 0
  call void @_ZdlPv(i8* %235) #10
  br label %236

236:                                              ; preds = %232, %222
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %224, i64 1
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %223, i64 1
  %239 = icmp eq %"class.std::__1::unique_ptr"* %237, %220
  br i1 %239, label %240, label %222

240:                                              ; preds = %236
  %241 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %242 = icmp eq %"class.std::__1::unique_ptr"* %241, %238
  br i1 %242, label %252, label %243

243:                                              ; preds = %240, %193
  %244 = phi %"class.std::__1::unique_ptr"* [ %238, %240 ], [ %218, %193 ]
  %245 = phi %"class.std::__1::unique_ptr"* [ %241, %240 ], [ %219, %193 ]
  br label %246

246:                                              ; preds = %246, %243
  %247 = phi %"class.std::__1::unique_ptr"* [ %248, %246 ], [ %245, %243 ]
  %248 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %247, i64 -1
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %248) #9
  %249 = icmp eq %"class.std::__1::unique_ptr"* %248, %244
  br i1 %249, label %250, label %246

250:                                              ; preds = %246
  %251 = load i64, i64* %165, align 8
  br label %252

252:                                              ; preds = %250, %240
  %253 = phi i64 [ %217, %240 ], [ %251, %250 ]
  %254 = phi %"class.std::__1::unique_ptr"* [ %238, %240 ], [ %244, %250 ]
  store %"class.std::__1::unique_ptr"* %254, %"class.std::__1::unique_ptr"** %18, align 8
  %255 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %160, align 8
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %255, i64 0, i32 0, i32 0, i32 0
  %257 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %256, align 8
  %258 = bitcast %"class.std::__1::unique_ptr"* %255 to i64*
  store i64 %253, i64* %258, align 8
  %259 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %257, null
  br i1 %259, label %264, label %260

260:                                              ; preds = %252
  %261 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %257, i64 0, i32 3
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %261) #9
  %262 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %257, i64 0, i32 2
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %262) #9
  %263 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %257, i64 0, i32 0
  call void @_ZdlPv(i8* %263) #10
  br label %264

264:                                              ; preds = %252, %260
  %265 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %266 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166)
  %267 = ptrtoint %"class.std::__1::unique_ptr"* %265 to i64
  %268 = ptrtoint %"class.std::__1::unique_ptr"* %266 to i64
  store i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)* @_ZN3net12huffman_trie12_GLOBAL__N_112CompareNodesERKNSt3__110unique_ptrINS1_11HuffmanNodeENS2_14default_deleteIS4_EEEES9_, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %6, align 8
  %269 = sub i64 %268, %267
  %270 = ashr exact i64 %269, 3
  %271 = icmp sgt i64 %269, 0
  br i1 %271, label %272, label %283

272:                                              ; preds = %264
  %273 = icmp slt i64 %270, 1152921504606846975
  %274 = select i1 %273, i64 %270, i64 1152921504606846975
  br label %275

275:                                              ; preds = %280, %272
  %276 = phi i64 [ %281, %280 ], [ %274, %272 ]
  %277 = shl i64 %276, 3
  %278 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %277, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #9
  %279 = icmp eq i8* %278, null
  br i1 %279, label %280, label %284

280:                                              ; preds = %275
  %281 = lshr i64 %276, 1
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %275

283:                                              ; preds = %280, %264
  call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %265, %"class.std::__1::unique_ptr"* %266, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** nonnull dereferenceable(8) %6, i64 %270, %"class.std::__1::unique_ptr"* null, i64 0) #9
  br label %286

284:                                              ; preds = %275
  %285 = bitcast i8* %278 to %"class.std::__1::unique_ptr"*
  call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %265, %"class.std::__1::unique_ptr"* %266, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** nonnull dereferenceable(8) %6, i64 %270, %"class.std::__1::unique_ptr"* nonnull %285, i64 %276) #9
  call void @_ZdlPv(i8* nonnull %278) #10
  br label %286

286:                                              ; preds = %283, %284
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166)
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #9
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #9
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #9
  %287 = load i64, i64* %56, align 8
  %288 = load i64, i64* %23, align 8
  %289 = sub i64 %287, %288
  %290 = ashr exact i64 %289, 3
  %291 = icmp ugt i64 %290, 1
  %292 = inttoptr i64 %288 to %"class.std::__1::unique_ptr"*
  br i1 %291, label %193, label %293

293:                                              ; preds = %286
  %294 = inttoptr i64 %288 to %"class.std::__1::unique_ptr"*
  br label %295

295:                                              ; preds = %293, %145
  %296 = phi %"class.std::__1::unique_ptr"* [ %151, %145 ], [ %294, %293 ]
  %297 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %296, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %297, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %297, align 8
  %299 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %300 = icmp eq %"class.std::__1::unique_ptr"* %299, null
  br i1 %300, label %314, label %301

301:                                              ; preds = %295
  %302 = bitcast %"class.std::__1::unique_ptr"* %299 to i8*
  %303 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %304 = icmp eq %"class.std::__1::unique_ptr"* %303, %299
  br i1 %304, label %312, label %305

305:                                              ; preds = %301, %305
  %306 = phi %"class.std::__1::unique_ptr"* [ %307, %305 ], [ %303, %301 ]
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %306, i64 -1
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %307) #9
  %308 = icmp eq %"class.std::__1::unique_ptr"* %307, %299
  br i1 %308, label %309, label %305

309:                                              ; preds = %305
  %310 = bitcast %"class.std::__1::vector.31"* %10 to i8**
  %311 = load i8*, i8** %310, align 8
  br label %312

312:                                              ; preds = %309, %301
  %313 = phi i8* [ %311, %309 ], [ %302, %301 ]
  store %"class.std::__1::unique_ptr"* %299, %"class.std::__1::unique_ptr"** %18, align 8
  call void @_ZdlPv(i8* %313) #10
  br label %314

314:                                              ; preds = %295, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  ret %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %298
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12huffman_trie14HuffmanBuilder11TreeToTableEPNS0_12_GLOBAL__N_111HuffmanNodeEjjPNSt3__13mapIhNS0_21HuffmanRepresentationENS5_4lessIhEENS5_9allocatorINS5_4pairIKhS7_EEEEEE(%"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* nocapture readonly, i32, i32, %"class.std::__1::map.4"*) unnamed_addr #0 align 2 {
  br label %5

5:                                                ; preds = %88, %4
  %6 = phi %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* [ %0, %4 ], [ %92, %88 ]
  %7 = phi i32 [ %1, %4 ], [ %93, %88 ]
  %8 = phi i32 [ %2, %4 ], [ %90, %88 ]
  %9 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %9, align 8
  %11 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %10, null
  br i1 %11, label %12, label %88

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %13, align 8
  %15 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %14, null
  br i1 %15, label %16, label %88

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %6, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = zext i32 %8 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %7 to i64
  %22 = or i64 %20, %21
  %23 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node"**
  %25 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node"* %25, null
  br i1 %26, label %55, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %51, %27
  %30 = phi %"class.std::__1::__tree_node"* [ %54, %51 ], [ %25, %27 ]
  %31 = phi %"class.std::__1::__tree_node_base"** [ %53, %51 ], [ %28, %27 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 1, i32 0, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp ult i8 %18, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %51

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 0, i32 0
  br label %57

41:                                               ; preds = %29
  %42 = icmp ult i8 %33, %18
  br i1 %42, label %43, label %49

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 0, i32 0
  br label %57

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 0, i32 0
  br label %57

51:                                               ; preds = %43, %35
  %52 = phi %"class.std::__1::__tree_node_base"* [ %37, %35 ], [ %45, %43 ]
  %53 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %44, %43 ]
  %54 = bitcast %"class.std::__1::__tree_node_base"* %52 to %"class.std::__1::__tree_node"*
  br label %29

55:                                               ; preds = %16
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  br label %57

57:                                               ; preds = %55, %49, %47, %39
  %58 = phi %"class.std::__1::__tree_end_node"* [ %23, %55 ], [ %40, %39 ], [ %48, %47 ], [ %50, %49 ]
  %59 = phi %"class.std::__1::__tree_node_base"** [ %56, %55 ], [ %36, %39 ], [ %44, %47 ], [ %31, %49 ]
  %60 = bitcast %"class.std::__1::__tree_node_base"** %59 to %"class.std::__1::__tree_node"**
  %61 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node"* %61, null
  br i1 %62, label %63, label %94

63:                                               ; preds = %57
  %64 = tail call i8* @_Znwm(i64 40) #10, !noalias !5
  %65 = getelementptr inbounds i8, i8* %64, i64 28
  store i8 %18, i8* %65, align 4, !noalias !5
  %66 = getelementptr inbounds i8, i8* %64, i64 32
  %67 = bitcast i8* %66 to i64*
  store i64 %22, i64* %67, align 4, !noalias !5
  %68 = bitcast i8* %64 to %"class.std::__1::__tree_node_base"*
  %69 = getelementptr inbounds i8, i8* %64, i64 16
  %70 = bitcast i8* %69 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %58, %"class.std::__1::__tree_end_node"** %70, align 8
  %71 = bitcast %"class.std::__1::__tree_node_base"** %59 to i8**
  store i8* %64, i8** %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %3, i64 0, i32 0, i32 0
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %63
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %75 to i64
  %79 = bitcast %"class.std::__1::map.4"* %3 to i64*
  store i64 %78, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %81

81:                                               ; preds = %77, %63
  %82 = phi %"class.std::__1::__tree_node_base"* [ %68, %63 ], [ %80, %77 ]
  %83 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %84, %"class.std::__1::__tree_node_base"* %82) #9
  %85 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %85, align 8
  br label %94

88:                                               ; preds = %5, %12
  %89 = shl i32 %7, 1
  %90 = add i32 %8, 1
  tail call fastcc void @_ZN3net12huffman_trie14HuffmanBuilder11TreeToTableEPNS0_12_GLOBAL__N_111HuffmanNodeEjjPNSt3__13mapIhNS0_21HuffmanRepresentationENS5_4lessIhEENS5_9allocatorINS5_4pairIKhS7_EEEEEE(%"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %10, i32 %89, i32 %90, %"class.std::__1::map.4"* %3)
  %91 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %91, align 8
  %93 = or i32 %89, 1
  br label %5

94:                                               ; preds = %81, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %2, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %2, align 8
  %4 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %3, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %6) #9
  %7 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %3, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %7) #9
  %8 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %3, i64 0, i32 0
  tail call void @_ZdlPv(i8* %8) #10
  ret void

9:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12huffman_trie14HuffmanBuilder8ToVectorEv(%"class.std::__1::vector"* noalias sret, %"class.net::huffman_trie::HuffmanBuilder"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #9
  %5 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = tail call fastcc %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* @_ZN3net12huffman_trie14HuffmanBuilder9BuildTreeEv(%"class.net::huffman_trie::HuffmanBuilder"* %1)
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %7, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %6, align 8
  %8 = tail call fastcc i32 @_ZN3net12huffman_trie14HuffmanBuilder13WriteToVectorEPNS0_12_GLOBAL__N_111HuffmanNodeEPNSt3__16vectorIhNS5_9allocatorIhEEEE(%"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %7, %"class.std::__1::vector"* %0)
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3net12huffman_trie14HuffmanBuilder13WriteToVectorEPNS0_12_GLOBAL__N_111HuffmanNodeEPNSt3__16vectorIhNS5_9allocatorIhEEEE(%"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* nocapture readonly, %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %3, align 8
  %5 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %5, align 8
  %7 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %9, align 8
  %11 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %4, i64 0, i32 0
  %14 = load i8, i8* %13, align 8
  %15 = or i8 %14, -128
  %16 = zext i8 %15 to i32
  br label %20

17:                                               ; preds = %2, %8
  %18 = tail call fastcc i32 @_ZN3net12huffman_trie14HuffmanBuilder13WriteToVectorEPNS0_12_GLOBAL__N_111HuffmanNodeEPNSt3__16vectorIhNS5_9allocatorIhEEEE(%"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %4, %"class.std::__1::vector"* %1)
  %19 = lshr i32 %18, 1
  br label %20

20:                                               ; preds = %17, %12
  %21 = phi i32 [ %19, %17 ], [ %16, %12 ]
  %22 = trunc i32 %21 to i8
  %23 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %23, align 8
  %25 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %24, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %25, align 8
  %27 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %26, null
  br i1 %27, label %28, label %37

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %29, align 8
  %31 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %30, null
  br i1 %31, label %32, label %37

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %24, i64 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = or i8 %34, -128
  %36 = zext i8 %35 to i32
  br label %40

37:                                               ; preds = %20, %28
  %38 = tail call fastcc i32 @_ZN3net12huffman_trie14HuffmanBuilder13WriteToVectorEPNS0_12_GLOBAL__N_111HuffmanNodeEPNSt3__16vectorIhNS5_9allocatorIhEEEE(%"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %24, %"class.std::__1::vector"* %1)
  %39 = lshr i32 %38, 1
  br label %40

40:                                               ; preds = %37, %32
  %41 = phi i32 [ %39, %37 ], [ %36, %32 ]
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector"* %1 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = trunc i64 %48 to i32
  %50 = inttoptr i64 %45 to i8*
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, %50
  %54 = ptrtoint i8* %52 to i64
  br i1 %53, label %58, label %55

55:                                               ; preds = %40
  store i8 %22, i8* %50, align 1
  %56 = getelementptr inbounds i8, i8* %50, i64 1
  %57 = ptrtoint i8* %56 to i64
  store i64 %57, i64* %44, align 8
  br label %99

58:                                               ; preds = %40
  %59 = add i64 %48, 1
  %60 = icmp slt i64 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = bitcast %"class.std::__1::vector"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #11
  unreachable

63:                                               ; preds = %58
  %64 = bitcast i8** %51 to i64*
  %65 = sub i64 %54, %47
  %66 = icmp ult i64 %65, 4611686018427387903
  br i1 %66, label %67, label %72

67:                                               ; preds = %63
  %68 = shl i64 %65, 1
  %69 = icmp ult i64 %68, %59
  %70 = select i1 %69, i64 %59, i64 %68
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %63
  %73 = phi i64 [ %70, %67 ], [ 9223372036854775807, %63 ]
  %74 = tail call i8* @_Znwm(i64 %73) #10
  br label %75

75:                                               ; preds = %72, %67
  %76 = phi i64 [ %73, %72 ], [ 0, %67 ]
  %77 = phi i8* [ %74, %72 ], [ null, %67 ]
  %78 = getelementptr inbounds i8, i8* %77, i64 %48
  %79 = getelementptr inbounds i8, i8* %77, i64 %76
  %80 = ptrtoint i8* %79 to i64
  store i8 %22, i8* %78, align 1
  %81 = getelementptr inbounds i8, i8* %78, i64 1
  %82 = ptrtoint i8* %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = load i64, i64* %44, align 8
  %86 = ptrtoint i8* %84 to i64
  %87 = sub i64 %85, %86
  %88 = sub i64 0, %87
  %89 = getelementptr inbounds i8, i8* %78, i64 %88
  %90 = ptrtoint i8* %89 to i64
  %91 = icmp sgt i64 %87, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %75
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %89, i8* align 1 %84, i64 %87, i1 false) #9
  %93 = load i8*, i8** %83, align 8
  br label %94

94:                                               ; preds = %92, %75
  %95 = phi i8* [ %84, %75 ], [ %93, %92 ]
  store i64 %90, i64* %46, align 8
  store i64 %82, i64* %44, align 8
  store i64 %80, i64* %64, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  tail call void @_ZdlPv(i8* nonnull %95) #10
  %98 = load i8*, i8** %43, align 8
  br label %99

99:                                               ; preds = %55, %94, %97
  %100 = phi i8* [ %56, %55 ], [ %81, %94 ], [ %98, %97 ]
  %101 = load i8*, i8** %51, align 8
  %102 = icmp eq i8* %100, %101
  br i1 %102, label %106, label %103

103:                                              ; preds = %99
  store i8 %42, i8* %100, align 1
  %104 = getelementptr inbounds i8, i8* %100, i64 1
  %105 = ptrtoint i8* %104 to i64
  store i64 %105, i64* %44, align 8
  br label %148

106:                                              ; preds = %99
  %107 = ptrtoint i8* %101 to i64
  %108 = load i64, i64* %46, align 8
  %109 = sub i64 %107, %108
  %110 = add i64 %109, 1
  %111 = icmp slt i64 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %106
  %113 = bitcast %"class.std::__1::vector"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %113) #11
  unreachable

114:                                              ; preds = %106
  %115 = bitcast i8** %51 to i64*
  %116 = icmp ult i64 %109, 4611686018427387903
  br i1 %116, label %117, label %122

117:                                              ; preds = %114
  %118 = shl i64 %109, 1
  %119 = icmp ult i64 %118, %110
  %120 = select i1 %119, i64 %110, i64 %118
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %117, %114
  %123 = phi i64 [ %120, %117 ], [ 9223372036854775807, %114 ]
  %124 = tail call i8* @_Znwm(i64 %123) #10
  br label %125

125:                                              ; preds = %122, %117
  %126 = phi i64 [ %123, %122 ], [ 0, %117 ]
  %127 = phi i8* [ %124, %122 ], [ null, %117 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 %109
  %129 = getelementptr inbounds i8, i8* %127, i64 %126
  %130 = ptrtoint i8* %129 to i64
  store i8 %42, i8* %128, align 1
  %131 = getelementptr inbounds i8, i8* %128, i64 1
  %132 = ptrtoint i8* %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = load i64, i64* %44, align 8
  %136 = ptrtoint i8* %134 to i64
  %137 = sub i64 %135, %136
  %138 = sub i64 0, %137
  %139 = getelementptr inbounds i8, i8* %128, i64 %138
  %140 = ptrtoint i8* %139 to i64
  %141 = icmp sgt i64 %137, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %125
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %139, i8* align 1 %134, i64 %137, i1 false) #9
  %143 = load i8*, i8** %133, align 8
  br label %144

144:                                              ; preds = %142, %125
  %145 = phi i8* [ %134, %125 ], [ %143, %142 ]
  store i64 %140, i64* %46, align 8
  store i64 %132, i64* %44, align 8
  store i64 %130, i64* %115, align 8
  %146 = icmp eq i8* %145, null
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  tail call void @_ZdlPv(i8* nonnull %145) #10
  br label %148

148:                                              ; preds = %103, %144, %147
  ret i32 %49
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE9push_backEOS8_(%"class.std::__1::vector.31"*, %"class.std::__1::unique_ptr"* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp ult %"class.std::__1::unique_ptr"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %6 to i64
  br i1 %7, label %9, label %17

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %10, align 8
  %13 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %15 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %16 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  store i64 %15, i64* %16, align 8
  br label %159

17:                                               ; preds = %2
  %18 = ptrtoint %"class.std::__1::unique_ptr"* %4 to i64
  %19 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %20 = bitcast %"class.std::__1::vector.31"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #11
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  %30 = sub i64 %8, %21
  %31 = ashr exact i64 %30, 3
  %32 = icmp ult i64 %31, 1152921504606846975
  br i1 %32, label %33, label %41

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 2
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = icmp ugt i64 %36, 2305843009213693951
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #11
  unreachable

41:                                               ; preds = %38, %28
  %42 = phi i64 [ %36, %38 ], [ 2305843009213693951, %28 ]
  %43 = shl i64 %42, 3
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"class.std::__1::unique_ptr"*
  br label %46

46:                                               ; preds = %41, %33
  %47 = phi i64 [ %42, %41 ], [ 0, %33 ]
  %48 = phi %"class.std::__1::unique_ptr"* [ %45, %41 ], [ null, %33 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 %23
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 %47
  %51 = ptrtoint %"class.std::__1::unique_ptr"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %54 = load i64, i64* %53, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %52, align 8
  %55 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 1
  %57 = ptrtoint %"class.std::__1::unique_ptr"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %58, align 8
  %60 = ptrtoint %"class.std::__1::unique_ptr"* %59 to i64
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %62 = icmp eq %"class.std::__1::unique_ptr"* %61, %59
  br i1 %62, label %144, label %63

63:                                               ; preds = %46
  %64 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1, i32 0, i32 0, i32 0
  %65 = ptrtoint %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %64 to i64
  %66 = sub i64 %65, %60
  %67 = lshr i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 7
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %83, label %71

71:                                               ; preds = %63, %71
  %72 = phi %"class.std::__1::unique_ptr"* [ %75, %71 ], [ %49, %63 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %76, %71 ], [ %61, %63 ]
  %74 = phi i64 [ %81, %71 ], [ %69, %63 ]
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %72, i64 -1
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %73, i64 -1
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::unique_ptr"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %77, align 8
  %80 = bitcast %"class.std::__1::unique_ptr"* %75 to i64*
  store i64 %79, i64* %80, align 8
  %81 = add i64 %74, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %71, !llvm.loop !9

83:                                               ; preds = %71, %63
  %84 = phi %"class.std::__1::unique_ptr"* [ undef, %63 ], [ %75, %71 ]
  %85 = phi %"class.std::__1::unique_ptr"* [ %49, %63 ], [ %75, %71 ]
  %86 = phi %"class.std::__1::unique_ptr"* [ %61, %63 ], [ %76, %71 ]
  %87 = icmp ult i64 %66, 56
  br i1 %87, label %140, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.std::__1::unique_ptr"* [ %133, %88 ], [ %85, %83 ]
  %90 = phi %"class.std::__1::unique_ptr"* [ %134, %88 ], [ %86, %83 ]
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -1
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -2
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -2
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -3
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -3
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -4
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -4
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -5
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -6
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -6
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -7
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -7
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -8
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %135, align 8
  %138 = bitcast %"class.std::__1::unique_ptr"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = icmp eq %"class.std::__1::unique_ptr"* %134, %59
  br i1 %139, label %140, label %88

140:                                              ; preds = %88, %83
  %141 = phi %"class.std::__1::unique_ptr"* [ %84, %83 ], [ %133, %88 ]
  %142 = load i64, i64* %20, align 8
  %143 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %144

144:                                              ; preds = %46, %140
  %145 = phi %"class.std::__1::unique_ptr"* [ %143, %140 ], [ %59, %46 ]
  %146 = phi %"class.std::__1::unique_ptr"* [ %141, %140 ], [ %49, %46 ]
  %147 = phi i64 [ %142, %140 ], [ %60, %46 ]
  %148 = ptrtoint %"class.std::__1::unique_ptr"* %146 to i64
  store i64 %148, i64* %20, align 8
  store i64 %57, i64* %19, align 8
  store i64 %51, i64* %29, align 8
  %149 = inttoptr i64 %147 to %"class.std::__1::unique_ptr"*
  %150 = icmp eq %"class.std::__1::unique_ptr"* %145, %149
  br i1 %150, label %155, label %151

151:                                              ; preds = %144, %151
  %152 = phi %"class.std::__1::unique_ptr"* [ %153, %151 ], [ %145, %144 ]
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %152, i64 -1
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %153) #9
  %154 = icmp eq %"class.std::__1::unique_ptr"* %153, %149
  br i1 %154, label %155, label %151

155:                                              ; preds = %151, %144
  %156 = icmp eq i64 %147, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = inttoptr i64 %147 to i8*
  tail call void @_ZdlPv(i8* %158) #10
  br label %159

159:                                              ; preds = %157, %155, %9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN3net12huffman_trie12_GLOBAL__N_112CompareNodesERKNSt3__110unique_ptrINS1_11HuffmanNodeENS2_14default_deleteIS4_EEEES9_(%"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8), %"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8)) #7 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %3, align 8
  %5 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %7, align 8
  %9 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %6, %10
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, %"class.std::__1::unique_ptr"*, i64) unnamed_addr #0 {
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  switch i64 %3, label %17 [
    i64 0, label %171
    i64 1, label %171
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %11 = tail call zeroext i1 %9(%"class.std::__1::unique_ptr"* dereferenceable(8) %10, %"class.std::__1::unique_ptr"* dereferenceable(8) %0) #9
  br i1 %11, label %12, label %171

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  br label %171

17:                                               ; preds = %6
  %18 = icmp slt i64 %3, 1
  br i1 %18, label %19, label %70

19:                                               ; preds = %17
  %20 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %20, label %171, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %23 = icmp eq %"class.std::__1::unique_ptr"* %22, %1
  br i1 %23, label %171, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  br label %28

28:                                               ; preds = %53, %24
  %29 = phi %"class.std::__1::unique_ptr"* [ %22, %24 ], [ %54, %53 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  %32 = load i64, i64* %31, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %30, align 8
  store i64 %32, i64* %27, align 8
  %33 = icmp eq %"class.std::__1::unique_ptr"* %29, %0
  br i1 %33, label %42, label %34

34:                                               ; preds = %28, %68
  %35 = phi %"class.std::__1::unique_ptr"* [ %37, %68 ], [ %29, %28 ]
  %36 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 -1
  %38 = call zeroext i1 %36(%"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7, %"class.std::__1::unique_ptr"* dereferenceable(8) %37) #9
  br i1 %38, label %56, label %39

39:                                               ; preds = %68, %34
  %40 = phi %"class.std::__1::unique_ptr"* [ %35, %34 ], [ %0, %68 ]
  %41 = load i64, i64* %27, align 8
  br label %42

42:                                               ; preds = %39, %28
  %43 = phi i64 [ %32, %28 ], [ %41, %39 ]
  %44 = phi %"class.std::__1::unique_ptr"* [ %0, %28 ], [ %40, %39 ]
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %26, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  store i64 %43, i64* %47, align 8
  %48 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %46, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %46, i64 0, i32 3
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %50) #9
  %51 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %46, i64 0, i32 2
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %51) #9
  %52 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %52) #10
  br label %53

53:                                               ; preds = %49, %42
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 1
  %55 = icmp eq %"class.std::__1::unique_ptr"* %54, %1
  br i1 %55, label %171, label %28

56:                                               ; preds = %34
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  %59 = load i64, i64* %58, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %57, align 8
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %60, align 8
  %62 = bitcast %"class.std::__1::unique_ptr"* %35 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %61, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %61, i64 0, i32 3
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %65) #9
  %66 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %61, i64 0, i32 2
  call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %66) #9
  %67 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %61, i64 0, i32 0
  call void @_ZdlPv(i8* %67) #10
  br label %68

68:                                               ; preds = %64, %56
  %69 = icmp eq %"class.std::__1::unique_ptr"* %37, %0
  br i1 %69, label %39, label %34

70:                                               ; preds = %17
  %71 = lshr i64 %3, 1
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %71
  %73 = icmp sgt i64 %3, %5
  br i1 %73, label %169, label %74

74:                                               ; preds = %70
  tail call fastcc void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %72, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %71, %"class.std::__1::unique_ptr"* %4)
  %75 = sub nsw i64 %3, %71
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %71
  tail call fastcc void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(%"class.std::__1::unique_ptr"* %72, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %75, %"class.std::__1::unique_ptr"* %76)
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %3
  br label %80

78:                                               ; preds = %136
  %79 = icmp eq %"class.std::__1::unique_ptr"* %137, %77
  br i1 %79, label %159, label %141

80:                                               ; preds = %74, %136
  %81 = phi %"class.std::__1::unique_ptr"* [ %138, %136 ], [ %4, %74 ]
  %82 = phi %"class.std::__1::unique_ptr"* [ %137, %136 ], [ %76, %74 ]
  %83 = phi %"class.std::__1::unique_ptr"* [ %139, %136 ], [ %0, %74 ]
  %84 = icmp eq %"class.std::__1::unique_ptr"* %82, %77
  br i1 %84, label %85, label %105

85:                                               ; preds = %80
  %86 = icmp eq %"class.std::__1::unique_ptr"* %81, %76
  br i1 %86, label %159, label %87

87:                                               ; preds = %85, %101
  %88 = phi %"class.std::__1::unique_ptr"* [ %102, %101 ], [ %81, %85 ]
  %89 = phi %"class.std::__1::unique_ptr"* [ %103, %101 ], [ %83, %85 ]
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr"* %88 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %90, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %93, align 8
  %95 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  store i64 %92, i64* %95, align 8
  %96 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %94, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %87
  %98 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %94, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %98) #9
  %99 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %94, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %99) #9
  %100 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %94, i64 0, i32 0
  tail call void @_ZdlPv(i8* %100) #10
  br label %101

101:                                              ; preds = %97, %87
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 1
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 1
  %104 = icmp eq %"class.std::__1::unique_ptr"* %102, %76
  br i1 %104, label %159, label %87

105:                                              ; preds = %80
  %106 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %107 = tail call zeroext i1 %106(%"class.std::__1::unique_ptr"* dereferenceable(8) %82, %"class.std::__1::unique_ptr"* dereferenceable(8) %81) #9
  br i1 %107, label %108, label %122

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr"* %82 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %109, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %111, i64* %114, align 8
  %115 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %113, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %113, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %117) #9
  %118 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %113, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %118) #9
  %119 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %113, i64 0, i32 0
  tail call void @_ZdlPv(i8* %119) #10
  br label %120

120:                                              ; preds = %116, %108
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 1
  br label %136

122:                                              ; preds = %105
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %81 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %123, align 8
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %126, align 8
  %128 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %125, i64* %128, align 8
  %129 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %127, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %127, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %131) #9
  %132 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %127, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %132) #9
  %133 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %127, i64 0, i32 0
  tail call void @_ZdlPv(i8* %133) #10
  br label %134

134:                                              ; preds = %130, %122
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 1
  br label %136

136:                                              ; preds = %134, %120
  %137 = phi %"class.std::__1::unique_ptr"* [ %121, %120 ], [ %82, %134 ]
  %138 = phi %"class.std::__1::unique_ptr"* [ %81, %120 ], [ %135, %134 ]
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 1
  %140 = icmp eq %"class.std::__1::unique_ptr"* %138, %76
  br i1 %140, label %78, label %80

141:                                              ; preds = %78, %155
  %142 = phi %"class.std::__1::unique_ptr"* [ %156, %155 ], [ %137, %78 ]
  %143 = phi %"class.std::__1::unique_ptr"* [ %157, %155 ], [ %139, %78 ]
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %142, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr"* %142 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %144, align 8
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %143, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %147, align 8
  %149 = bitcast %"class.std::__1::unique_ptr"* %143 to i64*
  store i64 %146, i64* %149, align 8
  %150 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %148, null
  br i1 %150, label %155, label %151

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %148, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %152) #9
  %153 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %148, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %153) #9
  %154 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %148, i64 0, i32 0
  tail call void @_ZdlPv(i8* %154) #10
  br label %155

155:                                              ; preds = %151, %141
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %142, i64 1
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %143, i64 1
  %158 = icmp eq %"class.std::__1::unique_ptr"* %156, %77
  br i1 %158, label %159, label %141

159:                                              ; preds = %155, %101, %78, %85
  %160 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  %161 = icmp eq i64 %3, 0
  %162 = or i1 %161, %160
  br i1 %162, label %171, label %163

163:                                              ; preds = %159, %163
  %164 = phi i64 [ %166, %163 ], [ 0, %159 ]
  %165 = phi %"class.std::__1::unique_ptr"* [ %167, %163 ], [ %4, %159 ]
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %165) #9
  %166 = add nuw i64 %164, 1
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %165, i64 1
  %168 = icmp eq i64 %166, %3
  br i1 %168, label %171, label %163

169:                                              ; preds = %70
  tail call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %72, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %71, %"class.std::__1::unique_ptr"* %4, i64 %5)
  %170 = sub nsw i64 %3, %71
  tail call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %72, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %170, %"class.std::__1::unique_ptr"* %4, i64 %5)
  tail call fastcc void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %72, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %71, i64 %170, %"class.std::__1::unique_ptr"* %4, i64 %5)
  br label %171

171:                                              ; preds = %163, %53, %159, %21, %19, %169, %8, %12, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, %"class.std::__1::unique_ptr"*) unnamed_addr #0 {
  switch i64 %3, label %35 [
    i64 0, label %292
    i64 1, label %6
    i64 2, label %11
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %9, i64* %10, align 8
  br label %292

11:                                               ; preds = %5
  %12 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %14 = tail call zeroext i1 %12(%"class.std::__1::unique_ptr"* dereferenceable(8) %13, %"class.std::__1::unique_ptr"* dereferenceable(8) %0) #9
  br i1 %14, label %15, label %25

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %16, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %21, align 8
  %24 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 %23, i64* %24, align 8
  br label %292

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %26, align 8
  %29 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %33 = load i64, i64* %32, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %31, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %30 to i64*
  store i64 %33, i64* %34, align 8
  br label %292

35:                                               ; preds = %5
  %36 = icmp slt i64 %3, 9
  br i1 %36, label %37, label %100

37:                                               ; preds = %35
  %38 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %38, label %292, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %45 = icmp eq %"class.std::__1::unique_ptr"* %44, %1
  br i1 %45, label %292, label %46

46:                                               ; preds = %39, %97
  %47 = phi %"class.std::__1::unique_ptr"* [ %98, %97 ], [ %44, %39 ]
  %48 = phi %"class.std::__1::unique_ptr"* [ %49, %97 ], [ %4, %39 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 1
  %50 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %51 = tail call zeroext i1 %50(%"class.std::__1::unique_ptr"* dereferenceable(8) %47, %"class.std::__1::unique_ptr"* dereferenceable(8) %48) #9
  br i1 %51, label %52, label %92

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  %55 = load i64, i64* %54, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %53, align 8
  %56 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %55, i64* %56, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr"* %48, %4
  br i1 %57, label %79, label %58

58:                                               ; preds = %52, %77
  %59 = phi %"class.std::__1::unique_ptr"* [ %61, %77 ], [ %48, %52 ]
  %60 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -1
  %62 = tail call zeroext i1 %60(%"class.std::__1::unique_ptr"* dereferenceable(8) %47, %"class.std::__1::unique_ptr"* dereferenceable(8) %61) #9
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  br label %79

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %66, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %69, align 8
  %71 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  store i64 %68, i64* %71, align 8
  %72 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %70, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %70, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %74) #9
  %75 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %70, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %75) #9
  %76 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %70, i64 0, i32 0
  tail call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %73, %65
  %78 = icmp eq %"class.std::__1::unique_ptr"* %61, %4
  br i1 %78, label %79, label %58

79:                                               ; preds = %77, %63, %52
  %80 = phi i64* [ %43, %52 ], [ %64, %63 ], [ %43, %77 ]
  %81 = phi %"class.std::__1::unique_ptr"* [ %4, %52 ], [ %59, %63 ], [ %4, %77 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %82, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %85, align 8
  store i64 %84, i64* %80, align 8
  %87 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %86, null
  br i1 %87, label %97, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %86, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %89) #9
  %90 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %86, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %90) #9
  %91 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %86, i64 0, i32 0
  tail call void @_ZdlPv(i8* %91) #10
  br label %97

92:                                               ; preds = %46
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %95, i64* %96, align 8
  br label %97

97:                                               ; preds = %92, %88, %79
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 1
  %99 = icmp eq %"class.std::__1::unique_ptr"* %98, %1
  br i1 %99, label %292, label %46

100:                                              ; preds = %35
  %101 = lshr i64 %3, 1
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %101
  tail call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %102, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %101, %"class.std::__1::unique_ptr"* %4, i64 %101)
  %103 = sub nsw i64 %3, %101
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %101
  tail call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %102, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %103, %"class.std::__1::unique_ptr"* %104, i64 %103)
  %105 = icmp eq i64 %101, 0
  br i1 %105, label %106, label %187

106:                                              ; preds = %287, %100
  %107 = phi %"class.std::__1::unique_ptr"* [ %102, %100 ], [ %288, %287 ]
  %108 = phi %"class.std::__1::unique_ptr"* [ %4, %100 ], [ %290, %287 ]
  %109 = icmp eq %"class.std::__1::unique_ptr"* %107, %1
  br i1 %109, label %292, label %110

110:                                              ; preds = %106
  %111 = ptrtoint %"class.std::__1::unique_ptr"* %107 to i64
  %112 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %113 = ptrtoint %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %112 to i64
  %114 = sub i64 %113, %111
  %115 = lshr i64 %114, 3
  %116 = add nuw nsw i64 %115, 1
  %117 = and i64 %116, 7
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %131, label %119

119:                                              ; preds = %110, %119
  %120 = phi %"class.std::__1::unique_ptr"* [ %128, %119 ], [ %108, %110 ]
  %121 = phi %"class.std::__1::unique_ptr"* [ %127, %119 ], [ %107, %110 ]
  %122 = phi i64 [ %129, %119 ], [ %117, %110 ]
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %120 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 1
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %120, i64 1
  %129 = add i64 %122, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %119, !llvm.loop !11

131:                                              ; preds = %119, %110
  %132 = phi %"class.std::__1::unique_ptr"* [ %108, %110 ], [ %128, %119 ]
  %133 = phi %"class.std::__1::unique_ptr"* [ %107, %110 ], [ %127, %119 ]
  %134 = icmp ult i64 %114, 56
  br i1 %134, label %292, label %135

135:                                              ; preds = %131, %135
  %136 = phi %"class.std::__1::unique_ptr"* [ %185, %135 ], [ %132, %131 ]
  %137 = phi %"class.std::__1::unique_ptr"* [ %184, %135 ], [ %133, %131 ]
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 1
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 1
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %142, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr"* %142 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %144, align 8
  %147 = bitcast %"class.std::__1::unique_ptr"* %143 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 2
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 2
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %148, i64 0, i32 0, i32 0, i32 0
  %151 = bitcast %"class.std::__1::unique_ptr"* %148 to i64*
  %152 = load i64, i64* %151, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %150, align 8
  %153 = bitcast %"class.std::__1::unique_ptr"* %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 3
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 3
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 0, i32 0, i32 0, i32 0
  %157 = bitcast %"class.std::__1::unique_ptr"* %154 to i64*
  %158 = load i64, i64* %157, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %156, align 8
  %159 = bitcast %"class.std::__1::unique_ptr"* %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 4
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 4
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 0, i32 0, i32 0, i32 0
  %163 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  %164 = load i64, i64* %163, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %162, align 8
  %165 = bitcast %"class.std::__1::unique_ptr"* %161 to i64*
  store i64 %164, i64* %165, align 8
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 5
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 5
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %166, i64 0, i32 0, i32 0, i32 0
  %169 = bitcast %"class.std::__1::unique_ptr"* %166 to i64*
  %170 = load i64, i64* %169, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %168, align 8
  %171 = bitcast %"class.std::__1::unique_ptr"* %167 to i64*
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 6
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 6
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %172, i64 0, i32 0, i32 0, i32 0
  %175 = bitcast %"class.std::__1::unique_ptr"* %172 to i64*
  %176 = load i64, i64* %175, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %174, align 8
  %177 = bitcast %"class.std::__1::unique_ptr"* %173 to i64*
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 7
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 7
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %178, i64 0, i32 0, i32 0, i32 0
  %181 = bitcast %"class.std::__1::unique_ptr"* %178 to i64*
  %182 = load i64, i64* %181, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %180, align 8
  %183 = bitcast %"class.std::__1::unique_ptr"* %179 to i64*
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 8
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 8
  %186 = icmp eq %"class.std::__1::unique_ptr"* %184, %1
  br i1 %186, label %292, label %135

187:                                              ; preds = %100, %287
  %188 = phi %"class.std::__1::unique_ptr"* [ %290, %287 ], [ %4, %100 ]
  %189 = phi %"class.std::__1::unique_ptr"* [ %289, %287 ], [ %0, %100 ]
  %190 = phi %"class.std::__1::unique_ptr"* [ %288, %287 ], [ %102, %100 ]
  %191 = icmp eq %"class.std::__1::unique_ptr"* %190, %1
  br i1 %191, label %192, label %272

192:                                              ; preds = %187
  %193 = icmp eq %"class.std::__1::unique_ptr"* %189, %102
  br i1 %193, label %292, label %194

194:                                              ; preds = %192
  %195 = ptrtoint %"class.std::__1::unique_ptr"* %189 to i64
  %196 = add nsw i64 %101, -1
  %197 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %196, i32 0, i32 0, i32 0
  %198 = ptrtoint %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %197 to i64
  %199 = sub i64 %198, %195
  %200 = lshr i64 %199, 3
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 7
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %216, label %204

204:                                              ; preds = %194, %204
  %205 = phi %"class.std::__1::unique_ptr"* [ %213, %204 ], [ %188, %194 ]
  %206 = phi %"class.std::__1::unique_ptr"* [ %212, %204 ], [ %189, %194 ]
  %207 = phi i64 [ %214, %204 ], [ %202, %194 ]
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %206, i64 0, i32 0, i32 0, i32 0
  %209 = bitcast %"class.std::__1::unique_ptr"* %206 to i64*
  %210 = load i64, i64* %209, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %208, align 8
  %211 = bitcast %"class.std::__1::unique_ptr"* %205 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %206, i64 1
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %205, i64 1
  %214 = add i64 %207, -1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %204, !llvm.loop !12

216:                                              ; preds = %204, %194
  %217 = phi %"class.std::__1::unique_ptr"* [ %188, %194 ], [ %213, %204 ]
  %218 = phi %"class.std::__1::unique_ptr"* [ %189, %194 ], [ %212, %204 ]
  %219 = icmp ult i64 %199, 56
  br i1 %219, label %292, label %220

220:                                              ; preds = %216, %220
  %221 = phi %"class.std::__1::unique_ptr"* [ %270, %220 ], [ %217, %216 ]
  %222 = phi %"class.std::__1::unique_ptr"* [ %269, %220 ], [ %218, %216 ]
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 0, i32 0, i32 0, i32 0
  %224 = bitcast %"class.std::__1::unique_ptr"* %222 to i64*
  %225 = load i64, i64* %224, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %223, align 8
  %226 = bitcast %"class.std::__1::unique_ptr"* %221 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 1
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 1
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %227, i64 0, i32 0, i32 0, i32 0
  %230 = bitcast %"class.std::__1::unique_ptr"* %227 to i64*
  %231 = load i64, i64* %230, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %229, align 8
  %232 = bitcast %"class.std::__1::unique_ptr"* %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 2
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 2
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %233, i64 0, i32 0, i32 0, i32 0
  %236 = bitcast %"class.std::__1::unique_ptr"* %233 to i64*
  %237 = load i64, i64* %236, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %235, align 8
  %238 = bitcast %"class.std::__1::unique_ptr"* %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 3
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 3
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %239, i64 0, i32 0, i32 0, i32 0
  %242 = bitcast %"class.std::__1::unique_ptr"* %239 to i64*
  %243 = load i64, i64* %242, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %241, align 8
  %244 = bitcast %"class.std::__1::unique_ptr"* %240 to i64*
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 4
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 4
  %247 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %245, i64 0, i32 0, i32 0, i32 0
  %248 = bitcast %"class.std::__1::unique_ptr"* %245 to i64*
  %249 = load i64, i64* %248, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %247, align 8
  %250 = bitcast %"class.std::__1::unique_ptr"* %246 to i64*
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 5
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 5
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %251, i64 0, i32 0, i32 0, i32 0
  %254 = bitcast %"class.std::__1::unique_ptr"* %251 to i64*
  %255 = load i64, i64* %254, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %253, align 8
  %256 = bitcast %"class.std::__1::unique_ptr"* %252 to i64*
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 6
  %258 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 6
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %257, i64 0, i32 0, i32 0, i32 0
  %260 = bitcast %"class.std::__1::unique_ptr"* %257 to i64*
  %261 = load i64, i64* %260, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %259, align 8
  %262 = bitcast %"class.std::__1::unique_ptr"* %258 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 7
  %264 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 7
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %263, i64 0, i32 0, i32 0, i32 0
  %266 = bitcast %"class.std::__1::unique_ptr"* %263 to i64*
  %267 = load i64, i64* %266, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %265, align 8
  %268 = bitcast %"class.std::__1::unique_ptr"* %264 to i64*
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 8
  %270 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 8
  %271 = icmp eq %"class.std::__1::unique_ptr"* %269, %102
  br i1 %271, label %292, label %220

272:                                              ; preds = %187
  %273 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %274 = tail call zeroext i1 %273(%"class.std::__1::unique_ptr"* dereferenceable(8) %190, %"class.std::__1::unique_ptr"* dereferenceable(8) %189) #9
  br i1 %274, label %275, label %281

275:                                              ; preds = %272
  %276 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %190, i64 0, i32 0, i32 0, i32 0
  %277 = bitcast %"class.std::__1::unique_ptr"* %190 to i64*
  %278 = load i64, i64* %277, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %276, align 8
  %279 = bitcast %"class.std::__1::unique_ptr"* %188 to i64*
  store i64 %278, i64* %279, align 8
  %280 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %190, i64 1
  br label %287

281:                                              ; preds = %272
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %189, i64 0, i32 0, i32 0, i32 0
  %283 = bitcast %"class.std::__1::unique_ptr"* %189 to i64*
  %284 = load i64, i64* %283, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %282, align 8
  %285 = bitcast %"class.std::__1::unique_ptr"* %188 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %189, i64 1
  br label %287

287:                                              ; preds = %281, %275
  %288 = phi %"class.std::__1::unique_ptr"* [ %280, %275 ], [ %190, %281 ]
  %289 = phi %"class.std::__1::unique_ptr"* [ %189, %275 ], [ %286, %281 ]
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %188, i64 1
  %291 = icmp eq %"class.std::__1::unique_ptr"* %289, %102
  br i1 %291, label %106, label %187

292:                                              ; preds = %216, %220, %131, %135, %97, %192, %106, %39, %37, %25, %15, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** readonly dereferenceable(8), i64, i64, %"class.std::__1::unique_ptr"*, i64) unnamed_addr #0 {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %558, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %12 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  br label %13

13:                                               ; preds = %10, %551
  %14 = phi %"class.std::__1::unique_ptr"* [ %556, %551 ], [ %2, %10 ]
  %15 = phi i64 [ %555, %551 ], [ %4, %10 ]
  %16 = phi i64 [ %554, %551 ], [ %5, %10 ]
  %17 = phi i64 [ %553, %551 ], [ %11, %10 ]
  %18 = phi i64 [ %552, %551 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %26

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %558, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"class.std::__1::unique_ptr"*
  br label %335

26:                                               ; preds = %13
  %27 = inttoptr i64 %18 to %"class.std::__1::unique_ptr"*
  %28 = inttoptr i64 %17 to %"class.std::__1::unique_ptr"*
  %29 = icmp sgt i64 %15, %16
  br i1 %29, label %63, label %30

30:                                               ; preds = %26
  %31 = icmp eq %"class.std::__1::unique_ptr"* %27, %28
  br i1 %31, label %558, label %32

32:                                               ; preds = %30
  %33 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 -1, i32 0, i32 0, i32 0
  %34 = ptrtoint %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %33 to i64
  %35 = sub i64 %34, %18
  %36 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 -1, i32 0, i32 0, i32 0
  %37 = bitcast %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %36 to i8*
  %38 = sub i64 0, %18
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = ptrtoint i8* %39 to i64
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %57, label %45

45:                                               ; preds = %32, %45
  %46 = phi %"class.std::__1::unique_ptr"* [ %54, %45 ], [ %6, %32 ]
  %47 = phi %"class.std::__1::unique_ptr"* [ %53, %45 ], [ %27, %32 ]
  %48 = phi i64 [ %55, %45 ], [ %43, %32 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  %51 = load i64, i64* %50, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %49, align 8
  %52 = bitcast %"class.std::__1::unique_ptr"* %46 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 1
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 1
  %55 = add i64 %48, -1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %45, !llvm.loop !13

57:                                               ; preds = %45, %32
  %58 = phi %"class.std::__1::unique_ptr"* [ undef, %32 ], [ %46, %45 ]
  %59 = phi %"class.std::__1::unique_ptr"* [ undef, %32 ], [ %54, %45 ]
  %60 = phi %"class.std::__1::unique_ptr"* [ %6, %32 ], [ %54, %45 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %27, %32 ], [ %53, %45 ]
  %62 = icmp ult i8* %39, inttoptr (i64 56 to i8*)
  br i1 %62, label %95, label %160

63:                                               ; preds = %26
  %64 = icmp eq %"class.std::__1::unique_ptr"* %14, %28
  br i1 %64, label %558, label %65

65:                                               ; preds = %63
  %66 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 -1, i32 0, i32 0, i32 0
  %67 = ptrtoint %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %66 to i64
  %68 = sub i64 %67, %17
  %69 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 -1, i32 0, i32 0, i32 0
  %70 = bitcast %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %69 to i8*
  %71 = sub i64 0, %17
  %72 = getelementptr i8, i8* %70, i64 %71
  %73 = ptrtoint i8* %72 to i64
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %90, label %78

78:                                               ; preds = %65, %78
  %79 = phi %"class.std::__1::unique_ptr"* [ %87, %78 ], [ %6, %65 ]
  %80 = phi %"class.std::__1::unique_ptr"* [ %86, %78 ], [ %28, %65 ]
  %81 = phi i64 [ %88, %78 ], [ %76, %65 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %82, align 8
  %85 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 1
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %79, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %78, !llvm.loop !14

90:                                               ; preds = %78, %65
  %91 = phi %"class.std::__1::unique_ptr"* [ undef, %65 ], [ %87, %78 ]
  %92 = phi %"class.std::__1::unique_ptr"* [ %6, %65 ], [ %87, %78 ]
  %93 = phi %"class.std::__1::unique_ptr"* [ %28, %65 ], [ %86, %78 ]
  %94 = icmp ult i8* %72, inttoptr (i64 56 to i8*)
  br i1 %94, label %212, label %274

95:                                               ; preds = %160, %57
  %96 = phi %"class.std::__1::unique_ptr"* [ %58, %57 ], [ %204, %160 ]
  %97 = phi %"class.std::__1::unique_ptr"* [ %59, %57 ], [ %210, %160 ]
  %98 = lshr i64 %35, 3
  %99 = add nuw nsw i64 %98, 1
  %100 = icmp eq %"class.std::__1::unique_ptr"* %97, %6
  br i1 %100, label %326, label %101

101:                                              ; preds = %95, %155
  %102 = phi %"class.std::__1::unique_ptr"* [ %157, %155 ], [ %6, %95 ]
  %103 = phi %"class.std::__1::unique_ptr"* [ %158, %155 ], [ %27, %95 ]
  %104 = phi %"class.std::__1::unique_ptr"* [ %156, %155 ], [ %28, %95 ]
  %105 = icmp eq %"class.std::__1::unique_ptr"* %104, %14
  br i1 %105, label %106, label %124

106:                                              ; preds = %101, %120
  %107 = phi %"class.std::__1::unique_ptr"* [ %122, %120 ], [ %103, %101 ]
  %108 = phi %"class.std::__1::unique_ptr"* [ %121, %120 ], [ %102, %101 ]
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr"* %108 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %109, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %107, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %107 to i64*
  store i64 %111, i64* %114, align 8
  %115 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %113, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %106
  %117 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %113, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %117) #9
  %118 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %113, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %118) #9
  %119 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %113, i64 0, i32 0
  tail call void @_ZdlPv(i8* %119) #10
  br label %120

120:                                              ; preds = %116, %106
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %108, i64 1
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %107, i64 1
  %123 = icmp eq %"class.std::__1::unique_ptr"* %108, %96
  br i1 %123, label %326, label %106

124:                                              ; preds = %101
  %125 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %126 = tail call zeroext i1 %125(%"class.std::__1::unique_ptr"* dereferenceable(8) %104, %"class.std::__1::unique_ptr"* dereferenceable(8) %102) #9
  br i1 %126, label %127, label %141

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %129 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %130 = load i64, i64* %129, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %128, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %131, align 8
  %133 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %130, i64* %133, align 8
  %134 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %132, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %132, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %136) #9
  %137 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %132, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %137) #9
  %138 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %132, i64 0, i32 0
  tail call void @_ZdlPv(i8* %138) #10
  br label %139

139:                                              ; preds = %135, %127
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 1
  br label %155

141:                                              ; preds = %124
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr"* %102 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %142, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 0, i32 0, i32 0, i32 0
  %146 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %145, align 8
  %147 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %144, i64* %147, align 8
  %148 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %146, null
  br i1 %148, label %153, label %149

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %146, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %150) #9
  %151 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %146, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %151) #9
  %152 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %146, i64 0, i32 0
  tail call void @_ZdlPv(i8* %152) #10
  br label %153

153:                                              ; preds = %149, %141
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 1
  br label %155

155:                                              ; preds = %153, %139
  %156 = phi %"class.std::__1::unique_ptr"* [ %140, %139 ], [ %104, %153 ]
  %157 = phi %"class.std::__1::unique_ptr"* [ %102, %139 ], [ %154, %153 ]
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 1
  %159 = icmp eq %"class.std::__1::unique_ptr"* %157, %97
  br i1 %159, label %326, label %101

160:                                              ; preds = %57, %160
  %161 = phi %"class.std::__1::unique_ptr"* [ %210, %160 ], [ %60, %57 ]
  %162 = phi %"class.std::__1::unique_ptr"* [ %209, %160 ], [ %61, %57 ]
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 0, i32 0, i32 0, i32 0
  %164 = bitcast %"class.std::__1::unique_ptr"* %162 to i64*
  %165 = load i64, i64* %164, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %163, align 8
  %166 = bitcast %"class.std::__1::unique_ptr"* %161 to i64*
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 1
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 1
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %167, i64 0, i32 0, i32 0, i32 0
  %170 = bitcast %"class.std::__1::unique_ptr"* %167 to i64*
  %171 = load i64, i64* %170, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %169, align 8
  %172 = bitcast %"class.std::__1::unique_ptr"* %168 to i64*
  store i64 %171, i64* %172, align 8
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 2
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 2
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %173, i64 0, i32 0, i32 0, i32 0
  %176 = bitcast %"class.std::__1::unique_ptr"* %173 to i64*
  %177 = load i64, i64* %176, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %175, align 8
  %178 = bitcast %"class.std::__1::unique_ptr"* %174 to i64*
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 3
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 3
  %181 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %179, i64 0, i32 0, i32 0, i32 0
  %182 = bitcast %"class.std::__1::unique_ptr"* %179 to i64*
  %183 = load i64, i64* %182, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %181, align 8
  %184 = bitcast %"class.std::__1::unique_ptr"* %180 to i64*
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 4
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 4
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %185, i64 0, i32 0, i32 0, i32 0
  %188 = bitcast %"class.std::__1::unique_ptr"* %185 to i64*
  %189 = load i64, i64* %188, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %187, align 8
  %190 = bitcast %"class.std::__1::unique_ptr"* %186 to i64*
  store i64 %189, i64* %190, align 8
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 5
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 5
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %191, i64 0, i32 0, i32 0, i32 0
  %194 = bitcast %"class.std::__1::unique_ptr"* %191 to i64*
  %195 = load i64, i64* %194, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %193, align 8
  %196 = bitcast %"class.std::__1::unique_ptr"* %192 to i64*
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 6
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 6
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %197, i64 0, i32 0, i32 0, i32 0
  %200 = bitcast %"class.std::__1::unique_ptr"* %197 to i64*
  %201 = load i64, i64* %200, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %199, align 8
  %202 = bitcast %"class.std::__1::unique_ptr"* %198 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 7
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 7
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %203, i64 0, i32 0, i32 0, i32 0
  %206 = bitcast %"class.std::__1::unique_ptr"* %203 to i64*
  %207 = load i64, i64* %206, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %205, align 8
  %208 = bitcast %"class.std::__1::unique_ptr"* %204 to i64*
  store i64 %207, i64* %208, align 8
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 8
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 8
  %211 = icmp eq %"class.std::__1::unique_ptr"* %209, %28
  br i1 %211, label %95, label %160

212:                                              ; preds = %274, %90
  %213 = phi %"class.std::__1::unique_ptr"* [ %91, %90 ], [ %324, %274 ]
  %214 = lshr i64 %68, 3
  %215 = add nuw nsw i64 %214, 1
  %216 = icmp eq %"class.std::__1::unique_ptr"* %213, %6
  br i1 %216, label %326, label %217

217:                                              ; preds = %212, %270
  %218 = phi %"class.std::__1::unique_ptr"* [ %245, %270 ], [ %14, %212 ]
  %219 = phi %"class.std::__1::unique_ptr"* [ %272, %270 ], [ %213, %212 ]
  %220 = phi %"class.std::__1::unique_ptr"* [ %271, %270 ], [ %28, %212 ]
  %221 = icmp eq %"class.std::__1::unique_ptr"* %220, %27
  br i1 %221, label %222, label %240

222:                                              ; preds = %217, %238
  %223 = phi %"class.std::__1::unique_ptr"* [ %225, %238 ], [ %219, %217 ]
  %224 = phi %"class.std::__1::unique_ptr"* [ %226, %238 ], [ %218, %217 ]
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %223, i64 -1
  %226 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %224, i64 -1
  %227 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %225, i64 0, i32 0, i32 0, i32 0
  %228 = bitcast %"class.std::__1::unique_ptr"* %225 to i64*
  %229 = load i64, i64* %228, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %227, align 8
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %226, i64 0, i32 0, i32 0, i32 0
  %231 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %230, align 8
  %232 = bitcast %"class.std::__1::unique_ptr"* %226 to i64*
  store i64 %229, i64* %232, align 8
  %233 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %231, null
  br i1 %233, label %238, label %234

234:                                              ; preds = %222
  %235 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %231, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %235) #9
  %236 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %231, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %236) #9
  %237 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %231, i64 0, i32 0
  tail call void @_ZdlPv(i8* %237) #10
  br label %238

238:                                              ; preds = %234, %222
  %239 = icmp eq %"class.std::__1::unique_ptr"* %225, %6
  br i1 %239, label %326, label %222

240:                                              ; preds = %217
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 -1
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %219, i64 -1
  %243 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %244 = tail call zeroext i1 %243(%"class.std::__1::unique_ptr"* dereferenceable(8) %242, %"class.std::__1::unique_ptr"* dereferenceable(8) %241) #9
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %218, i64 -1
  br i1 %244, label %246, label %258

246:                                              ; preds = %240
  %247 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %241, i64 0, i32 0, i32 0, i32 0
  %248 = bitcast %"class.std::__1::unique_ptr"* %241 to i64*
  %249 = load i64, i64* %248, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %247, align 8
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %245, i64 0, i32 0, i32 0, i32 0
  %251 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %250, align 8
  %252 = bitcast %"class.std::__1::unique_ptr"* %245 to i64*
  store i64 %249, i64* %252, align 8
  %253 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %251, null
  br i1 %253, label %270, label %254

254:                                              ; preds = %246
  %255 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %251, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %255) #9
  %256 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %251, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %256) #9
  %257 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %251, i64 0, i32 0
  tail call void @_ZdlPv(i8* %257) #10
  br label %270

258:                                              ; preds = %240
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %242, i64 0, i32 0, i32 0, i32 0
  %260 = bitcast %"class.std::__1::unique_ptr"* %242 to i64*
  %261 = load i64, i64* %260, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %259, align 8
  %262 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %245, i64 0, i32 0, i32 0, i32 0
  %263 = load %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"*, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %262, align 8
  %264 = bitcast %"class.std::__1::unique_ptr"* %245 to i64*
  store i64 %261, i64* %264, align 8
  %265 = icmp eq %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %263, null
  br i1 %265, label %270, label %266

266:                                              ; preds = %258
  %267 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %263, i64 0, i32 3
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %267) #9
  %268 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %263, i64 0, i32 2
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %268) #9
  %269 = getelementptr inbounds %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode", %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* %263, i64 0, i32 0
  tail call void @_ZdlPv(i8* %269) #10
  br label %270

270:                                              ; preds = %266, %258, %254, %246
  %271 = phi %"class.std::__1::unique_ptr"* [ %241, %246 ], [ %241, %254 ], [ %220, %258 ], [ %220, %266 ]
  %272 = phi %"class.std::__1::unique_ptr"* [ %219, %246 ], [ %219, %254 ], [ %242, %258 ], [ %242, %266 ]
  %273 = icmp eq %"class.std::__1::unique_ptr"* %272, %6
  br i1 %273, label %326, label %217

274:                                              ; preds = %90, %274
  %275 = phi %"class.std::__1::unique_ptr"* [ %324, %274 ], [ %92, %90 ]
  %276 = phi %"class.std::__1::unique_ptr"* [ %323, %274 ], [ %93, %90 ]
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 0, i32 0, i32 0, i32 0
  %278 = bitcast %"class.std::__1::unique_ptr"* %276 to i64*
  %279 = load i64, i64* %278, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %277, align 8
  %280 = bitcast %"class.std::__1::unique_ptr"* %275 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 1
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %275, i64 1
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 0, i32 0, i32 0, i32 0
  %284 = bitcast %"class.std::__1::unique_ptr"* %281 to i64*
  %285 = load i64, i64* %284, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %283, align 8
  %286 = bitcast %"class.std::__1::unique_ptr"* %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 2
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %275, i64 2
  %289 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %287, i64 0, i32 0, i32 0, i32 0
  %290 = bitcast %"class.std::__1::unique_ptr"* %287 to i64*
  %291 = load i64, i64* %290, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %289, align 8
  %292 = bitcast %"class.std::__1::unique_ptr"* %288 to i64*
  store i64 %291, i64* %292, align 8
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 3
  %294 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %275, i64 3
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %293, i64 0, i32 0, i32 0, i32 0
  %296 = bitcast %"class.std::__1::unique_ptr"* %293 to i64*
  %297 = load i64, i64* %296, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %295, align 8
  %298 = bitcast %"class.std::__1::unique_ptr"* %294 to i64*
  store i64 %297, i64* %298, align 8
  %299 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 4
  %300 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %275, i64 4
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %299, i64 0, i32 0, i32 0, i32 0
  %302 = bitcast %"class.std::__1::unique_ptr"* %299 to i64*
  %303 = load i64, i64* %302, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %301, align 8
  %304 = bitcast %"class.std::__1::unique_ptr"* %300 to i64*
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 5
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %275, i64 5
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %305, i64 0, i32 0, i32 0, i32 0
  %308 = bitcast %"class.std::__1::unique_ptr"* %305 to i64*
  %309 = load i64, i64* %308, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %307, align 8
  %310 = bitcast %"class.std::__1::unique_ptr"* %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 6
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %275, i64 6
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %311, i64 0, i32 0, i32 0, i32 0
  %314 = bitcast %"class.std::__1::unique_ptr"* %311 to i64*
  %315 = load i64, i64* %314, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %313, align 8
  %316 = bitcast %"class.std::__1::unique_ptr"* %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 7
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %275, i64 7
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %317, i64 0, i32 0, i32 0, i32 0
  %320 = bitcast %"class.std::__1::unique_ptr"* %317 to i64*
  %321 = load i64, i64* %320, align 8
  store %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"* null, %"class.net::huffman_trie::(anonymous namespace)::HuffmanNode"** %319, align 8
  %322 = bitcast %"class.std::__1::unique_ptr"* %318 to i64*
  store i64 %321, i64* %322, align 8
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %276, i64 8
  %324 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %275, i64 8
  %325 = icmp eq %"class.std::__1::unique_ptr"* %323, %14
  br i1 %325, label %212, label %274

326:                                              ; preds = %155, %120, %270, %238, %212, %95
  %327 = phi i64 [ %99, %95 ], [ %215, %212 ], [ %215, %238 ], [ %215, %270 ], [ %99, %120 ], [ %99, %155 ]
  %328 = icmp eq %"class.std::__1::unique_ptr"* %6, null
  br i1 %328, label %558, label %329

329:                                              ; preds = %326, %329
  %330 = phi i64 [ %332, %329 ], [ 0, %326 ]
  %331 = phi %"class.std::__1::unique_ptr"* [ %333, %329 ], [ %6, %326 ]
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS4_EEED2Ev(%"class.std::__1::unique_ptr"* %331) #9
  %332 = add nuw nsw i64 %330, 1
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %331, i64 1
  %334 = icmp eq i64 %332, %327
  br i1 %334, label %558, label %329

335:                                              ; preds = %24, %341
  %336 = phi i64 [ %15, %24 ], [ %344, %341 ]
  %337 = phi i64 [ %18, %24 ], [ %343, %341 ]
  %338 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %339 = inttoptr i64 %337 to %"class.std::__1::unique_ptr"*
  %340 = tail call zeroext i1 %338(%"class.std::__1::unique_ptr"* dereferenceable(8) %25, %"class.std::__1::unique_ptr"* dereferenceable(8) %339) #9
  br i1 %340, label %346, label %341

341:                                              ; preds = %335
  %342 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %339, i64 1
  %343 = ptrtoint %"class.std::__1::unique_ptr"* %342 to i64
  %344 = add nsw i64 %336, -1
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %558, label %335

346:                                              ; preds = %335
  %347 = inttoptr i64 %337 to %"class.std::__1::unique_ptr"*
  %348 = icmp slt i64 %336, %16
  br i1 %348, label %349, label %375

349:                                              ; preds = %346
  %350 = sdiv i64 %16, 2
  %351 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 %350
  %352 = ptrtoint %"class.std::__1::unique_ptr"* %351 to i64
  %353 = sub i64 %17, %337
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %370, label %355

355:                                              ; preds = %349
  %356 = ashr exact i64 %353, 3
  br label %357

357:                                              ; preds = %357, %355
  %358 = phi %"class.std::__1::unique_ptr"* [ %368, %357 ], [ %347, %355 ]
  %359 = phi i64 [ %367, %357 ], [ %356, %355 ]
  %360 = lshr i64 %359, 1
  %361 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %358, i64 %360
  %362 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %363 = tail call zeroext i1 %362(%"class.std::__1::unique_ptr"* dereferenceable(8) %351, %"class.std::__1::unique_ptr"* dereferenceable(8) %361) #9
  %364 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %361, i64 1
  %365 = xor i64 %360, -1
  %366 = add i64 %359, %365
  %367 = select i1 %363, i64 %360, i64 %366
  %368 = select i1 %363, %"class.std::__1::unique_ptr"* %358, %"class.std::__1::unique_ptr"* %364
  %369 = icmp eq i64 %367, 0
  br i1 %369, label %370, label %357

370:                                              ; preds = %357, %349
  %371 = phi %"class.std::__1::unique_ptr"* [ %347, %349 ], [ %368, %357 ]
  %372 = ptrtoint %"class.std::__1::unique_ptr"* %371 to i64
  %373 = sub i64 %372, %337
  %374 = ashr exact i64 %373, 3
  br label %409

375:                                              ; preds = %346
  %376 = icmp eq i64 %336, 1
  br i1 %376, label %377, label %382

377:                                              ; preds = %375
  %378 = inttoptr i64 %337 to i64*
  %379 = load i64, i64* %378, align 8
  %380 = inttoptr i64 %17 to i64*
  %381 = load i64, i64* %380, align 8
  store i64 %381, i64* %378, align 8
  store i64 %379, i64* %380, align 8
  br label %558

382:                                              ; preds = %375
  %383 = sdiv i64 %336, 2
  %384 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %347, i64 %383
  %385 = ptrtoint %"class.std::__1::unique_ptr"* %384 to i64
  %386 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %387 = sub i64 %386, %17
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %404, label %389

389:                                              ; preds = %382
  %390 = ashr exact i64 %387, 3
  br label %391

391:                                              ; preds = %391, %389
  %392 = phi %"class.std::__1::unique_ptr"* [ %402, %391 ], [ %25, %389 ]
  %393 = phi i64 [ %401, %391 ], [ %390, %389 ]
  %394 = lshr i64 %393, 1
  %395 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %392, i64 %394
  %396 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %397 = tail call zeroext i1 %396(%"class.std::__1::unique_ptr"* dereferenceable(8) %395, %"class.std::__1::unique_ptr"* dereferenceable(8) %384) #9
  %398 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %395, i64 1
  %399 = xor i64 %394, -1
  %400 = add i64 %393, %399
  %401 = select i1 %397, i64 %400, i64 %394
  %402 = select i1 %397, %"class.std::__1::unique_ptr"* %398, %"class.std::__1::unique_ptr"* %392
  %403 = icmp eq i64 %401, 0
  br i1 %403, label %404, label %391

404:                                              ; preds = %391, %382
  %405 = phi %"class.std::__1::unique_ptr"* [ %25, %382 ], [ %402, %391 ]
  %406 = ptrtoint %"class.std::__1::unique_ptr"* %405 to i64
  %407 = sub i64 %406, %17
  %408 = ashr exact i64 %407, 3
  br label %409

409:                                              ; preds = %404, %370
  %410 = phi i64 [ %372, %370 ], [ %385, %404 ]
  %411 = phi i64 [ %352, %370 ], [ %406, %404 ]
  %412 = phi i64 [ %350, %370 ], [ %408, %404 ]
  %413 = phi i64 [ %374, %370 ], [ %383, %404 ]
  %414 = sub nsw i64 %336, %413
  %415 = sub nsw i64 %16, %412
  %416 = inttoptr i64 %410 to %"class.std::__1::unique_ptr"*
  %417 = inttoptr i64 %411 to %"class.std::__1::unique_ptr"*
  %418 = icmp eq %"class.std::__1::unique_ptr"* %416, %25
  br i1 %418, label %543, label %419

419:                                              ; preds = %409
  %420 = icmp eq %"class.std::__1::unique_ptr"* %25, %417
  br i1 %420, label %543, label %421

421:                                              ; preds = %419
  %422 = inttoptr i64 %410 to i64*
  %423 = load i64, i64* %422, align 8
  %424 = inttoptr i64 %17 to i64*
  %425 = load i64, i64* %424, align 8
  store i64 %425, i64* %422, align 8
  store i64 %423, i64* %424, align 8
  %426 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %416, i64 1
  %427 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %428 = icmp eq %"class.std::__1::unique_ptr"* %427, %417
  br i1 %428, label %517, label %429

429:                                              ; preds = %421
  %430 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %417, i64 -2
  %431 = bitcast %"class.std::__1::unique_ptr"* %430 to i8*
  %432 = sub i64 0, %17
  %433 = getelementptr i8, i8* %431, i64 %432
  %434 = ptrtoint i8* %433 to i64
  %435 = lshr i64 %434, 3
  %436 = add nuw nsw i64 %435, 1
  %437 = and i64 %436, 3
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %459, label %439

439:                                              ; preds = %429, %439
  %440 = phi %"class.std::__1::unique_ptr"* [ %454, %439 ], [ %25, %429 ]
  %441 = phi %"class.std::__1::unique_ptr"* [ %453, %439 ], [ %427, %429 ]
  %442 = phi %"class.std::__1::unique_ptr"* [ %452, %439 ], [ %426, %429 ]
  %443 = phi i64 [ %447, %439 ], [ %17, %429 ]
  %444 = phi i64 [ %455, %439 ], [ %437, %429 ]
  %445 = ptrtoint %"class.std::__1::unique_ptr"* %441 to i64
  %446 = icmp eq %"class.std::__1::unique_ptr"* %442, %440
  %447 = select i1 %446, i64 %445, i64 %443
  %448 = bitcast %"class.std::__1::unique_ptr"* %442 to i64*
  %449 = load i64, i64* %448, align 8
  %450 = bitcast %"class.std::__1::unique_ptr"* %441 to i64*
  %451 = load i64, i64* %450, align 8
  store i64 %451, i64* %448, align 8
  store i64 %449, i64* %450, align 8
  %452 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %442, i64 1
  %453 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %441, i64 1
  %454 = inttoptr i64 %447 to %"class.std::__1::unique_ptr"*
  %455 = add i64 %444, -1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %439, !llvm.loop !15

457:                                              ; preds = %439
  %458 = inttoptr i64 %447 to %"class.std::__1::unique_ptr"*
  br label %459

459:                                              ; preds = %429, %457
  %460 = phi i64 [ undef, %429 ], [ %447, %457 ]
  %461 = phi %"class.std::__1::unique_ptr"* [ undef, %429 ], [ %452, %457 ]
  %462 = phi %"class.std::__1::unique_ptr"* [ %25, %429 ], [ %458, %457 ]
  %463 = phi %"class.std::__1::unique_ptr"* [ %427, %429 ], [ %453, %457 ]
  %464 = phi %"class.std::__1::unique_ptr"* [ %426, %429 ], [ %452, %457 ]
  %465 = phi i64 [ %17, %429 ], [ %447, %457 ]
  %466 = icmp ult i8* %433, inttoptr (i64 24 to i8*)
  br i1 %466, label %513, label %467

467:                                              ; preds = %459, %467
  %468 = phi %"class.std::__1::unique_ptr"* [ %512, %467 ], [ %462, %459 ]
  %469 = phi %"class.std::__1::unique_ptr"* [ %510, %467 ], [ %463, %459 ]
  %470 = phi %"class.std::__1::unique_ptr"* [ %509, %467 ], [ %464, %459 ]
  %471 = phi i64 [ %504, %467 ], [ %465, %459 ]
  %472 = ptrtoint %"class.std::__1::unique_ptr"* %469 to i64
  %473 = icmp eq %"class.std::__1::unique_ptr"* %470, %468
  %474 = select i1 %473, i64 %472, i64 %471
  %475 = bitcast %"class.std::__1::unique_ptr"* %470 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = bitcast %"class.std::__1::unique_ptr"* %469 to i64*
  %478 = load i64, i64* %477, align 8
  store i64 %478, i64* %475, align 8
  store i64 %476, i64* %477, align 8
  %479 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %470, i64 1
  %480 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %469, i64 1
  %481 = inttoptr i64 %474 to %"class.std::__1::unique_ptr"*
  %482 = ptrtoint %"class.std::__1::unique_ptr"* %480 to i64
  %483 = icmp eq %"class.std::__1::unique_ptr"* %479, %481
  %484 = select i1 %483, i64 %482, i64 %474
  %485 = bitcast %"class.std::__1::unique_ptr"* %479 to i64*
  %486 = load i64, i64* %485, align 8
  %487 = bitcast %"class.std::__1::unique_ptr"* %480 to i64*
  %488 = load i64, i64* %487, align 8
  store i64 %488, i64* %485, align 8
  store i64 %486, i64* %487, align 8
  %489 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %470, i64 2
  %490 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %469, i64 2
  %491 = inttoptr i64 %484 to %"class.std::__1::unique_ptr"*
  %492 = ptrtoint %"class.std::__1::unique_ptr"* %490 to i64
  %493 = icmp eq %"class.std::__1::unique_ptr"* %489, %491
  %494 = select i1 %493, i64 %492, i64 %484
  %495 = bitcast %"class.std::__1::unique_ptr"* %489 to i64*
  %496 = load i64, i64* %495, align 8
  %497 = bitcast %"class.std::__1::unique_ptr"* %490 to i64*
  %498 = load i64, i64* %497, align 8
  store i64 %498, i64* %495, align 8
  store i64 %496, i64* %497, align 8
  %499 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %470, i64 3
  %500 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %469, i64 3
  %501 = inttoptr i64 %494 to %"class.std::__1::unique_ptr"*
  %502 = ptrtoint %"class.std::__1::unique_ptr"* %500 to i64
  %503 = icmp eq %"class.std::__1::unique_ptr"* %499, %501
  %504 = select i1 %503, i64 %502, i64 %494
  %505 = bitcast %"class.std::__1::unique_ptr"* %499 to i64*
  %506 = load i64, i64* %505, align 8
  %507 = bitcast %"class.std::__1::unique_ptr"* %500 to i64*
  %508 = load i64, i64* %507, align 8
  store i64 %508, i64* %505, align 8
  store i64 %506, i64* %507, align 8
  %509 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %470, i64 4
  %510 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %469, i64 4
  %511 = icmp eq %"class.std::__1::unique_ptr"* %510, %417
  %512 = inttoptr i64 %504 to %"class.std::__1::unique_ptr"*
  br i1 %511, label %513, label %467

513:                                              ; preds = %467, %459
  %514 = phi i64 [ %460, %459 ], [ %504, %467 ]
  %515 = phi %"class.std::__1::unique_ptr"* [ %461, %459 ], [ %509, %467 ]
  %516 = inttoptr i64 %514 to %"class.std::__1::unique_ptr"*
  br label %517

517:                                              ; preds = %513, %421
  %518 = phi i64 [ %17, %421 ], [ %514, %513 ]
  %519 = phi %"class.std::__1::unique_ptr"* [ %426, %421 ], [ %515, %513 ]
  %520 = phi %"class.std::__1::unique_ptr"* [ %25, %421 ], [ %516, %513 ]
  %521 = icmp eq %"class.std::__1::unique_ptr"* %519, %520
  br i1 %521, label %543, label %522

522:                                              ; preds = %517, %540
  %523 = phi i64 [ %542, %540 ], [ %518, %517 ]
  %524 = phi %"class.std::__1::unique_ptr"* [ %535, %540 ], [ %519, %517 ]
  %525 = phi i64 [ %541, %540 ], [ %518, %517 ]
  %526 = inttoptr i64 %523 to %"class.std::__1::unique_ptr"*
  br label %527

527:                                              ; preds = %522, %539
  %528 = phi %"class.std::__1::unique_ptr"* [ %535, %539 ], [ %524, %522 ]
  %529 = phi i64 [ %523, %539 ], [ %525, %522 ]
  %530 = inttoptr i64 %529 to %"class.std::__1::unique_ptr"*
  %531 = bitcast %"class.std::__1::unique_ptr"* %528 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = inttoptr i64 %529 to i64*
  %534 = load i64, i64* %533, align 8
  store i64 %534, i64* %531, align 8
  store i64 %532, i64* %533, align 8
  %535 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %528, i64 1
  %536 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %530, i64 1
  %537 = icmp eq %"class.std::__1::unique_ptr"* %536, %417
  %538 = icmp eq %"class.std::__1::unique_ptr"* %535, %526
  br i1 %537, label %539, label %540

539:                                              ; preds = %527
  br i1 %538, label %543, label %527

540:                                              ; preds = %527
  %541 = ptrtoint %"class.std::__1::unique_ptr"* %536 to i64
  %542 = select i1 %538, i64 %541, i64 %523
  br label %522

543:                                              ; preds = %539, %409, %419, %517
  %544 = phi %"class.std::__1::unique_ptr"* [ %416, %419 ], [ %417, %409 ], [ %519, %517 ], [ %519, %539 ]
  %545 = add nsw i64 %413, %412
  %546 = add nsw i64 %414, %415
  %547 = icmp slt i64 %545, %546
  br i1 %547, label %548, label %550

548:                                              ; preds = %543
  %549 = ptrtoint %"class.std::__1::unique_ptr"* %544 to i64
  tail call fastcc void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %347, %"class.std::__1::unique_ptr"* %416, %"class.std::__1::unique_ptr"* %544, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3, i64 %413, i64 %412, %"class.std::__1::unique_ptr"* %6, i64 %7)
  br label %551

550:                                              ; preds = %543
  tail call fastcc void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12huffman_trie12_GLOBAL__N_111HuffmanNodeENS_14default_deleteIS5_EEEESA_ENS_11__wrap_iterIPS8_EEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(%"class.std::__1::unique_ptr"* %544, %"class.std::__1::unique_ptr"* %417, %"class.std::__1::unique_ptr"* %14, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3, i64 %414, i64 %415, %"class.std::__1::unique_ptr"* %6, i64 %7)
  br label %551

551:                                              ; preds = %548, %550
  %552 = phi i64 [ %549, %548 ], [ %337, %550 ]
  %553 = phi i64 [ %411, %548 ], [ %410, %550 ]
  %554 = phi i64 [ %415, %548 ], [ %412, %550 ]
  %555 = phi i64 [ %414, %548 ], [ %413, %550 ]
  %556 = phi %"class.std::__1::unique_ptr"* [ %14, %548 ], [ %544, %550 ]
  %557 = icmp eq i64 %554, 0
  br i1 %557, label %558, label %13

558:                                              ; preds = %551, %22, %341, %329, %8, %377, %326, %63, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIhjEENS_19__map_value_compareIhS2_NS_4lessIhEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.46"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.46"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.46"* %1 to %"class.std::__1::__tree_node.46"**
  %6 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhjEENS_19__map_value_compareIhS2_NS_4lessIhEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.46"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.46"**
  %9 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhjEENS_19__map_value_compareIhS2_NS_4lessIhEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.46"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node.46"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIhjEENS_19__map_value_compareIhS2_NS_4lessIhEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOhEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIhjEENS_19__map_value_compareIhS2_NS_4lessIhEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOhEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIhN3net12huffman_trie21HuffmanRepresentationEEENS_19__map_value_compareIhS5_NS_4lessIhEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJNS_4pairIhS4_EEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISJ_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIhN3net12huffman_trie21HuffmanRepresentationEEENS_19__map_value_compareIhS5_NS_4lessIhEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJNS_4pairIhS4_EEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISJ_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !10}
