; ModuleID = '../../skia/ext/skia_utils_base.cc'
source_filename = "../../skia/ext/skia_utils_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::PickleIterator" = type { i8*, i64, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.SkFontConfigInterface::FontIdentity" = type <{ i32, i32, %class.SkString, %class.SkFontStyle, [4 x i8] }>
%class.SkFontStyle = type { i32 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%class.SkBitmap = type { %class.sk_sp.1, %class.SkPixmap, %class.sk_sp.8 }
%class.sk_sp.1 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2, i32, i32 }
%class.sk_sp.2 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.8 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4skia12ReadSkStringEPN4base14PickleIteratorEP8SkString(%"class.base::PickleIterator"*, %class.SkString*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  store i32 -1431655766, i32* %3, align 4
  %6 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %7 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* %0, i8** nonnull %4, i32* nonnull %3) #5
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = icmp eq %class.SkString* %1, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %8
  %11 = load i8*, i8** %4, align 8
  %12 = load i32, i32* %3, align 4
  %13 = sext i32 %12 to i64
  call void @_ZN8SkString3setEPKcm(%class.SkString* nonnull %1, i8* %11, i64 %13) #5
  br label %14

14:                                               ; preds = %10, %8, %2
  %15 = phi i1 [ false, %2 ], [ true, %8 ], [ true, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  ret i1 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"*, i8**, i32*) local_unnamed_addr #2

declare void @_ZN8SkString3setEPKcm(%class.SkString*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4skia18ReadSkFontIdentityEPN4base14PickleIteratorEPN21SkFontConfigInterface12FontIdentityE(%"class.base::PickleIterator"*, %"struct.SkFontConfigInterface::FontIdentity"*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  store i32 -1431655766, i32* %3, align 4
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  store i32 -1431655766, i32* %4, align 4
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  store i32 -1431655766, i32* %5, align 4
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %11 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* %0, i32* nonnull %3) #5
  br i1 %11, label %12, label %27

12:                                               ; preds = %2
  %13 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* %0, i32* nonnull %4) #5
  br i1 %13, label %14, label %27

14:                                               ; preds = %12
  %15 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* %0, i8** nonnull %6, i32* nonnull %5) #5
  br i1 %15, label %16, label %27

16:                                               ; preds = %14
  %17 = icmp eq %"struct.SkFontConfigInterface::FontIdentity"* %1, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %16
  %19 = load i32, i32* %3, align 4
  %20 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %1, i64 0, i32 0
  store i32 %19, i32* %20, align 8
  %21 = load i32, i32* %4, align 4
  %22 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %1, i64 0, i32 1
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %1, i64 0, i32 2
  %24 = load i8*, i8** %6, align 8
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  call void @_ZN8SkString3setEPKcm(%class.SkString* %23, i8* %24, i64 %26) #5
  br label %27

27:                                               ; preds = %18, %16, %2, %12, %14
  %28 = phi i1 [ false, %14 ], [ false, %12 ], [ false, %2 ], [ true, %16 ], [ true, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i1 %28
}

declare zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4skia15ReadSkFontStyleEPN4base14PickleIteratorEP11SkFontStyle(%"class.base::PickleIterator"*, %class.SkFontStyle*) local_unnamed_addr #0 {
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #5
  store i16 -21846, i16* %3, align 2
  %7 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #5
  store i16 -21846, i16* %4, align 2
  %8 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8) #5
  store i16 -21846, i16* %5, align 2
  %9 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt16EPt(%"class.base::PickleIterator"* %0, i16* nonnull %3) #5
  br i1 %9, label %10, label %40

10:                                               ; preds = %2
  %11 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt16EPt(%"class.base::PickleIterator"* %0, i16* nonnull %4) #5
  br i1 %11, label %12, label %40

12:                                               ; preds = %10
  %13 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt16EPt(%"class.base::PickleIterator"* %0, i16* nonnull %5) #5
  br i1 %13, label %14, label %40

14:                                               ; preds = %12
  %15 = icmp eq %class.SkFontStyle* %1, null
  br i1 %15, label %40, label %16

16:                                               ; preds = %14
  %17 = load i16, i16* %3, align 2
  %18 = zext i16 %17 to i32
  %19 = load i16, i16* %4, align 2
  %20 = zext i16 %19 to i32
  %21 = load i16, i16* %5, align 2
  %22 = zext i16 %21 to i32
  %23 = icmp ult i32 %18, 1000
  %24 = select i1 %23, i32 %18, i32 1000
  %25 = icmp sgt i32 %24, 0
  %26 = select i1 %25, i32 %24, i32 0
  %27 = icmp ult i32 %20, 9
  %28 = select i1 %27, i32 %20, i32 9
  %29 = icmp sgt i32 %28, 1
  %30 = select i1 %29, i32 %28, i32 1
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %26
  %33 = icmp ult i32 %22, 2
  %34 = select i1 %33, i32 %22, i32 2
  %35 = icmp sgt i32 %34, 0
  %36 = select i1 %35, i32 %34, i32 0
  %37 = shl nuw nsw i32 %36, 24
  %38 = or i32 %32, %37
  %39 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %1, i64 0, i32 0
  store i32 %38, i32* %39, align 4
  br label %40

40:                                               ; preds = %16, %14, %2, %10, %12
  %41 = phi i1 [ false, %12 ], [ false, %10 ], [ false, %2 ], [ true, %14 ], [ true, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #5
  ret i1 %41
}

declare zeroext i1 @_ZN4base14PickleIterator10ReadUInt16EPt(%"class.base::PickleIterator"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia13WriteSkStringEPN4base6PickleERK8SkString(%"class.base::Pickle"*, %class.SkString* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %4 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %4, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %4, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  tail call void @_ZN4base6Pickle9WriteDataEPKci(%"class.base::Pickle"* %0, i8* %5, i32 %7) #5
  ret void
}

declare void @_ZN4base6Pickle9WriteDataEPKci(%"class.base::Pickle"*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia19WriteSkFontIdentityEPN4base6PickleERKN21SkFontConfigInterface12FontIdentityE(%"class.base::Pickle"*, %"struct.SkFontConfigInterface::FontIdentity"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7)
  store i32 %6, i32* %4, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %0, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7)
  %8 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  store i32 %9, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %0, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  %11 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %1, i64 0, i32 2, i32 0, i32 0
  %12 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %11, align 8
  %13 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %12, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %12, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  call void @_ZN4base6Pickle9WriteDataEPKci(%"class.base::Pickle"* %0, i8* %13, i32 %15) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia16WriteSkFontStyleEPN4base6PickleE11SkFontStyle(%"class.base::Pickle"*, i32) local_unnamed_addr #0 {
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = trunc i32 %1 to i16
  %7 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7)
  store i16 %6, i16* %4, align 2
  call void @_ZN4base6Pickle16WriteBytesStaticILm2EEEvPKv(%"class.base::Pickle"* %0, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7)
  %8 = lshr i32 %1, 16
  %9 = trunc i32 %8 to i16
  %10 = and i16 %9, 255
  %11 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11)
  store i16 %10, i16* %3, align 2
  call void @_ZN4base6Pickle16WriteBytesStaticILm2EEEvPKv(%"class.base::Pickle"* %0, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11)
  %12 = lshr i32 %1, 24
  %13 = trunc i32 %12 to i16
  %14 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %14)
  store i16 %13, i16* %5, align 2
  call void @_ZN4base6Pickle16WriteBytesStaticILm2EEEvPKv(%"class.base::Pickle"* %0, i8* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %14)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4skia27SkBitmapToN32OpaqueOrPremulERK8SkBitmapPS0_(%class.SkBitmap* dereferenceable(56), %class.SkBitmap*) local_unnamed_addr #0 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %27

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %27

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %27

20:                                               ; preds = %12, %16
  %21 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %22 = load %class.SkPixelRef*, %class.SkPixelRef** %21, align 8
  %23 = icmp eq %class.SkPixelRef* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %25) #5
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #5
  %26 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %1, %class.SkBitmap* nonnull dereferenceable(56) %3) #5
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %25) #5
  br label %105

27:                                               ; preds = %20, %16, %8, %2
  %28 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2
  %29 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %28, i64 0, i32 0
  %35 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %34) #5
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %36, %33
  %38 = icmp ult i64 %37, 2147483648
  %39 = select i1 %38, i64 %37, i64 0
  %40 = icmp eq i64 %30, %39
  %41 = load i32, i32* %5, align 8
  %42 = icmp eq i32 %41, 6
  %43 = and i1 %40, %42
  br i1 %43, label %44, label %51

44:                                               ; preds = %27
  %45 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, -1
  %48 = icmp ult i32 %47, 2
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %1, %class.SkBitmap* dereferenceable(56) %0) #5
  br label %105

51:                                               ; preds = %44, %27
  %52 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #5
  %53 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %56 = bitcast %struct.SkISize* %55 to i64*
  %57 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false)
  %58 = load i64, i64* %56, align 8, !noalias !2
  %59 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 2
  %60 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %28, i64 0, i32 0, i32 0, i32 0
  %61 = load %class.SkColorSpace*, %class.SkColorSpace** %60, align 8, !noalias !5
  %62 = icmp eq %class.SkColorSpace* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %51
  %64 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 1 monotonic, !noalias !5
  %66 = ptrtoint %class.SkColorSpace* %61 to i64
  %67 = load i32, i32* %59, align 4
  %68 = icmp eq i32 %67, 1
  %69 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 1 monotonic, !noalias !10
  %71 = select i1 %68, i64 4294967302, i64 8589934598
  %72 = bitcast %struct.SkImageInfo* %4 to i64*
  store i64 %66, i64* %72, align 8, !alias.scope !17
  %73 = bitcast i32* %54 to i64*
  store i64 %71, i64* %73, align 8, !alias.scope !17
  %74 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %75 = bitcast %struct.SkISize* %74 to i64*
  store i64 %58, i64* %75, align 8, !alias.scope !17
  %76 = atomicrmw add i32* %69, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %89

78:                                               ; preds = %63
  %79 = bitcast %class.SkColorSpace* %61 to i8*
  tail call void @_ZdlPv(i8* %79) #6
  br label %89

80:                                               ; preds = %51
  %81 = ptrtoint %class.SkColorSpace* %61 to i64
  %82 = load i32, i32* %59, align 4
  %83 = icmp eq i32 %82, 1
  %84 = select i1 %83, i64 4294967302, i64 8589934598
  %85 = bitcast %struct.SkImageInfo* %4 to i64*
  store i64 %81, i64* %85, align 8, !alias.scope !17
  %86 = bitcast i32* %54 to i64*
  store i64 %84, i64* %86, align 8, !alias.scope !17
  %87 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %88 = bitcast %struct.SkISize* %87 to i64*
  store i64 %58, i64* %88, align 8, !alias.scope !17
  br label %89

89:                                               ; preds = %80, %63, %78
  %90 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* %1, %struct.SkImageInfo* nonnull dereferenceable(24) %4, i64 0) #5
  br i1 %90, label %91, label %94

91:                                               ; preds = %89
  %92 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1
  %93 = call zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap* %0, %class.SkPixmap* dereferenceable(40) %92, i32 0, i32 0) #5
  br label %94

94:                                               ; preds = %91, %89
  %95 = phi i1 [ false, %89 ], [ %93, %91 ]
  %96 = load %class.SkColorSpace*, %class.SkColorSpace** %53, align 8
  %97 = icmp eq %class.SkColorSpace* %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = bitcast %class.SkColorSpace* %96 to i8*
  call void @_ZdlPv(i8* %103) #6
  br label %104

104:                                              ; preds = %94, %98, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #5
  br label %105

105:                                              ; preds = %49, %104, %24
  %106 = phi i1 [ true, %24 ], [ true, %49 ], [ %95, %104 ]
  ret i1 %106
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

declare void @_ZN4base6Pickle16WriteBytesStaticILm2EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!4 = distinct !{!4, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!5 = !{!6, !8, !3}
!6 = distinct !{!6, !7, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!8 = distinct !{!8, !9, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!9 = distinct !{!9, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!10 = !{!11, !13, !15}
!11 = distinct !{!11, !12, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!12 = distinct !{!12, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!13 = distinct !{!13, !14, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!14 = distinct !{!14, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!15 = distinct !{!15, !16, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!16 = distinct !{!16, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!19 = distinct !{!19, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
