; ModuleID = '../../ui/gfx/linux/native_pixmap_dmabuf.cc'
source_filename = "../../ui/gfx/linux/native_pixmap_dmabuf.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::NativePixmapDmaBuf" = type { %"class.gfx::NativePixmap.base", %"class.gfx::Size", i32, %"struct.gfx::NativePixmapHandle" }
%"class.gfx::NativePixmap.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gfx::NativePixmapPlane"* }
%"class.gfx::Rect" = type opaque
%"class.gfx::RectF" = type opaque
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"*, %"class.std::__1::__compressed_pair.4" }
%"class.gfx::GpuFence" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.gfx::GpuFence"* }

@_ZTVN3gfx18NativePixmapDmaBufE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.gfx::NativePixmapDmaBuf"*)* @_ZNK3gfx18NativePixmapDmaBuf17AreDmaBufFdsValidEv to i8*), i8* bitcast (i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)* @_ZNK3gfx18NativePixmapDmaBuf11GetDmaBufFdEm to i8*), i8* bitcast (i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)* @_ZNK3gfx18NativePixmapDmaBuf14GetDmaBufPitchEm to i8*), i8* bitcast (i64 (%"class.gfx::NativePixmapDmaBuf"*, i64)* @_ZNK3gfx18NativePixmapDmaBuf15GetDmaBufOffsetEm to i8*), i8* bitcast (i64 (%"class.gfx::NativePixmapDmaBuf"*, i64)* @_ZNK3gfx18NativePixmapDmaBuf18GetDmaBufPlaneSizeEm to i8*), i8* bitcast (i64 (%"class.gfx::NativePixmapDmaBuf"*)* @_ZNK3gfx18NativePixmapDmaBuf17GetNumberOfPlanesEv to i8*), i8* bitcast (i32 (%"class.gfx::NativePixmapDmaBuf"*)* @_ZNK3gfx18NativePixmapDmaBuf15GetBufferFormatEv to i8*), i8* bitcast (i64 (%"class.gfx::NativePixmapDmaBuf"*)* @_ZNK3gfx18NativePixmapDmaBuf23GetBufferFormatModifierEv to i8*), i8* bitcast (i64 (%"class.gfx::NativePixmapDmaBuf"*)* @_ZNK3gfx18NativePixmapDmaBuf13GetBufferSizeEv to i8*), i8* bitcast (i32 (%"class.gfx::NativePixmapDmaBuf"*)* @_ZNK3gfx18NativePixmapDmaBuf11GetUniqueIdEv to i8*), i8* bitcast (i1 (%"class.gfx::NativePixmapDmaBuf"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"*)* @_ZN3gfx18NativePixmapDmaBuf20ScheduleOverlayPlaneEjiNS_16OverlayTransformERKNS_4RectERKNS_5RectFEbNSt3__16vectorINS_8GpuFenceENS8_9allocatorISA_EEEESD_ to i8*), i8* bitcast (void (%"struct.gfx::NativePixmapHandle"*, %"class.gfx::NativePixmapDmaBuf"*)* @_ZN3gfx18NativePixmapDmaBuf12ExportHandleEv to i8*), i8* bitcast (void (%"class.gfx::NativePixmapDmaBuf"*)* @_ZN3gfx18NativePixmapDmaBufD2Ev to i8*), i8* bitcast (void (%"class.gfx::NativePixmapDmaBuf"*)* @_ZN3gfx18NativePixmapDmaBufD0Ev to i8*)] }, align 8

@_ZN3gfx18NativePixmapDmaBufC1ERKNS_4SizeENS_12BufferFormatENS_18NativePixmapHandleE = hidden unnamed_addr alias void (%"class.gfx::NativePixmapDmaBuf"*, %"class.gfx::Size"*, i32, %"struct.gfx::NativePixmapHandle"*), void (%"class.gfx::NativePixmapDmaBuf"*, %"class.gfx::Size"*, i32, %"struct.gfx::NativePixmapHandle"*)* @_ZN3gfx18NativePixmapDmaBufC2ERKNS_4SizeENS_12BufferFormatENS_18NativePixmapHandleE
@_ZN3gfx18NativePixmapDmaBufD1Ev = hidden unnamed_addr alias void (%"class.gfx::NativePixmapDmaBuf"*), void (%"class.gfx::NativePixmapDmaBuf"*)* @_ZN3gfx18NativePixmapDmaBufD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18NativePixmapDmaBufC2ERKNS_4SizeENS_12BufferFormatENS_18NativePixmapHandleE(%"class.gfx::NativePixmapDmaBuf"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, %"struct.gfx::NativePixmapHandle"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN3gfx18NativePixmapDmaBufE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 1
  %8 = bitcast %"class.gfx::Size"* %1 to i64*
  %9 = bitcast %"class.gfx::Size"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 2
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3
  tail call void @_ZN3gfx18NativePixmapHandleC1EOS0_(%"struct.gfx::NativePixmapHandle"* %12, %"struct.gfx::NativePixmapHandle"* dereferenceable(32) %3) #7
  ret void
}

declare void @_ZN3gfx18NativePixmapHandleC1EOS0_(%"struct.gfx::NativePixmapHandle"*, %"struct.gfx::NativePixmapHandle"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18NativePixmapDmaBufD2Ev(%"class.gfx::NativePixmapDmaBuf"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN3gfx18NativePixmapDmaBufE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3
  tail call void @_ZN3gfx18NativePixmapHandleD1Ev(%"struct.gfx::NativePixmapHandle"* %3) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx18NativePixmapHandleD1Ev(%"struct.gfx::NativePixmapHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18NativePixmapDmaBufD0Ev(%"class.gfx::NativePixmapDmaBuf"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN3gfx18NativePixmapDmaBufE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3
  tail call void @_ZN3gfx18NativePixmapHandleD1Ev(%"struct.gfx::NativePixmapHandle"* %3) #7
  %4 = bitcast %"class.gfx::NativePixmapDmaBuf"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx18NativePixmapDmaBuf17AreDmaBufFdsValidEv(%"class.gfx::NativePixmapDmaBuf"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %5 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %4, align 8
  %6 = icmp eq %"struct.gfx::NativePixmapPlane"* %3, %5
  br i1 %6, label %15, label %9

7:                                                ; preds = %9
  %8 = icmp eq %"struct.gfx::NativePixmapPlane"* %14, %5
  br i1 %8, label %15, label %9

9:                                                ; preds = %1, %7
  %10 = phi %"struct.gfx::NativePixmapPlane"* [ %14, %7 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %10, i64 0, i32 3, i32 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, -1
  %14 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %10, i64 1
  br i1 %13, label %15, label %7

15:                                               ; preds = %7, %9, %1
  %16 = phi i1 [ false, %1 ], [ true, %7 ], [ false, %9 ]
  ret i1 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gfx18NativePixmapDmaBuf11GetDmaBufFdEm(%"class.gfx::NativePixmapDmaBuf"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %3, align 8
  %5 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %4, i64 %1, i32 3, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gfx18NativePixmapDmaBuf14GetDmaBufPitchEm(%"class.gfx::NativePixmapDmaBuf"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %3, align 8
  %5 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %4, i64 %1, i32 0
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx18NativePixmapDmaBuf15GetDmaBufOffsetEm(%"class.gfx::NativePixmapDmaBuf"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %3, align 8
  %5 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %4, i64 %1, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx18NativePixmapDmaBuf18GetDmaBufPlaneSizeEm(%"class.gfx::NativePixmapDmaBuf"* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %3, align 8
  %5 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %4, i64 %1, i32 2
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx18NativePixmapDmaBuf23GetBufferFormatModifierEv(%"class.gfx::NativePixmapDmaBuf"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gfx18NativePixmapDmaBuf15GetBufferFormatEv(%"class.gfx::NativePixmapDmaBuf"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx18NativePixmapDmaBuf17GetNumberOfPlanesEv(%"class.gfx::NativePixmapDmaBuf"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3, i32 0
  %3 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %4 = bitcast %"struct.gfx::NativePixmapPlane"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx18NativePixmapDmaBuf13GetBufferSizeEv(%"class.gfx::NativePixmapDmaBuf"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %0, i64 0, i32 1
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3gfx18NativePixmapDmaBuf11GetUniqueIdEv(%"class.gfx::NativePixmapDmaBuf"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3gfx18NativePixmapDmaBuf20ScheduleOverlayPlaneEjiNS_16OverlayTransformERKNS_4RectERKNS_5RectFEbNSt3__16vectorINS_8GpuFenceENS8_9allocatorISA_EEEESD_(%"class.gfx::NativePixmapDmaBuf"* nocapture readnone, i32, i32, i32, %"class.gfx::Rect"* nocapture readnone, %"class.gfx::RectF"* nocapture readnone, i1 zeroext, %"class.std::__1::vector.2"* nocapture readnone, %"class.std::__1::vector.2"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18NativePixmapDmaBuf12ExportHandleEv(%"struct.gfx::NativePixmapHandle"* noalias sret, %"class.gfx::NativePixmapDmaBuf"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::NativePixmapDmaBuf", %"class.gfx::NativePixmapDmaBuf"* %1, i64 0, i32 3
  tail call void @_ZN3gfx17CloneHandleForIPCERKNS_18NativePixmapHandleE(%"struct.gfx::NativePixmapHandle"* sret %0, %"struct.gfx::NativePixmapHandle"* dereferenceable(32) %3) #7
  ret void
}

declare void @_ZN3gfx17CloneHandleForIPCERKNS_18NativePixmapHandleE(%"struct.gfx::NativePixmapHandle"* sret, %"struct.gfx::NativePixmapHandle"* dereferenceable(32)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
