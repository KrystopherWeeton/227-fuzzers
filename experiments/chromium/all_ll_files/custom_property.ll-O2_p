; ModuleID = '../../third_party/blink/renderer/core/css/properties/longhands/custom_property.cc'
source_filename = "../../third_party/blink/renderer/core/css/properties/longhands/custom_property.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.154", i32, [4 x i8], %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.331", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.270", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__cxx_atomic_impl.193" }
%"struct.std::__1::__cxx_atomic_impl.193" = type { %"struct.std::__1::__cxx_atomic_base_impl.194" }
%"struct.std::__1::__cxx_atomic_base_impl.194" = type { i64 }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::Worklist.236"* }
%"class.blink::Worklist.236" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::Worklist.243"* }
%"class.blink::Worklist.243" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.250", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.264", [4 x i8] }>
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252", %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { i64 }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { float }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.273", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.282" }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299" }
%"class.WTF::VectorBufferBase.299" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.312" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.222"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.229"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.580" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.330 }
%class.scoped_refptr.330 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__cxx_atomic_impl.333" }
%"struct.std::__1::__cxx_atomic_impl.333" = type { %"struct.std::__1::__cxx_atomic_base_impl.334" }
%"struct.std::__1::__cxx_atomic_base_impl.334" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::CustomProperty" = type { %"class.blink::Variable.base", %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Variable.base" = type { %"class.blink::Longhand.base" }
%"class.blink::Longhand.base" = type { %"class.blink::CSSProperty.base" }
%"class.blink::CSSProperty.base" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8 }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member.1", %class.scoped_refptr.5, %"class.WTF::Vector.16", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%class.scoped_refptr.5 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted", %"class.WTF::Vector.6", %"class.WTF::Vector.11", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18" }
%"class.WTF::VectorBufferBase.18" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.102", %"class.WTF::Vector.102", i8, i32, %"class.blink::Member.113", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.123", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.127", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.133", %"class.blink::Member.135", %"class.blink::Member.92", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.138", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.46", %"class.blink::Member.347", %"class.blink::Member.46", %"class.blink::Member.46", %"class.blink::Member.46", %"class.blink::UserActionElementSet", %"class.blink::Member.356", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.363", i16, i8, %"class.blink::Member.370", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::TextLinkColors", %"class.blink::Member.378", i8, [7 x i8], %"class.blink::HeapHashMap.380", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.46", %"class.WTF::Vector.387", %"class.blink::Member.392", %"class.blink::Member.394", i8, %"class.blink::Member.46", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.396", %"class.blink::HeapVector.398", %"class.std::__1::unique_ptr.406", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.412", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.425", %"class.WTF::Vector.427", i8, i8, %"class.std::__1::unique_ptr.432", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.438", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.446", i8, i32, %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.454", %"class.WTF::HashMap.456", %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.33", %"class.blink::Member.33", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.469", i8, i32, %"class.blink::Member.476", %"class.blink::Member.478", i32, %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::Member.493", %"class.std::__1::unique_ptr.495", i64, %"class.std::__1::unique_ptr.501", i32, i32, %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::Member.520", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.522", %"class.WTF::Vector.524", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.529", %"class.blink::Member.536", %"class.std::__1::unique_ptr.538", %"class.blink::Member.544", i8, i8, %"class.WTF::String", %"class.blink::Member.546", i8, [7 x i8], %"class.blink::HeapHashMap.548", %"class.blink::HeapObserverSet", %"class.blink::Member.562", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.564", i32, i8, i8, %"class.blink::WeakMember.566", %"class.blink::Member.567" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.23", %"class.blink::Member.23" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::Member.27" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.25", %"class.blink::Member.35", %"class.blink::Member.35", %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::Member.79", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.84", %"class.blink::HeapVector.86" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.42" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.46", i32, %"class.blink::HeapVector" }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.81" }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::HeapHashMap.83"* }
%"class.blink::HeapHashMap.83" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.86" = type { %"class.WTF::Vector.89" }
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.blink::Member.92"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.95" }
%"class.blink::HeapHashMap.95" = type { %"class.WTF::HashMap.98" }
%"class.WTF::HashMap.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ %"struct.WTF::KeyValuePair.101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.101" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.106" }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl.109" }
%"struct.std::__1::__cxx_atomic_impl.109" = type { %"struct.std::__1::__cxx_atomic_base_impl.110" }
%"struct.std::__1::__cxx_atomic_base_impl.110" = type { i32 }
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.585", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.626", i32, i8, [3 x i8], %"class.blink::HeapVector.628", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.636", %"class.blink::Member.638", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.647", %"class.blink::Member.653", %"class.blink::Member.655", i8, [7 x i8] }>
%"class.blink::Supplementable.585" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.586" }
%"class.blink::HeapHashMap.586" = type { %"class.WTF::HashMap.589" }
%"class.WTF::HashMap.589" = type { %"class.WTF::HashTable.590" }
%"class.WTF::HashTable.590" = type <{ %"struct.WTF::KeyValuePair.592"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.592" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.601" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.593" }
%"class.blink::HeapObserverSet.593" = type { i32, [4 x i8], %"class.blink::HeapHashSet.594" }
%"class.blink::HeapHashSet.594" = type { %"class.WTF::HashSet.597" }
%"class.WTF::HashSet.597" = type { %"class.WTF::HashTable.598" }
%"class.WTF::HashTable.598" = type <{ %"class.blink::WeakMember.600"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.600" = type opaque
%"class.blink::Supplementable.601" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.602" }
%"class.blink::HeapHashMap.602" = type { %"class.WTF::HashMap.605" }
%"class.WTF::HashMap.605" = type { %"class.WTF::HashTable.606" }
%"class.WTF::HashTable.606" = type <{ %"struct.WTF::KeyValuePair.608"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.608" = type { i8*, %"class.blink::Member.1358" }
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1360" }
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.609, %"class.std::__1::unique_ptr.610", %"class.std::__1::unique_ptr.610", %"class.std::__1::unique_ptr.616", %"class.std::__1::unique_ptr.616", %"class.blink::Member.115", i32, [4 x i8], %"class.WTF::HashSet.622", i32, i32 }
%class.scoped_refptr.609 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.622" = type { %"class.WTF::HashTable.623" }
%"class.WTF::HashTable.623" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.628" = type { %"class.WTF::Vector.631" }
%"class.WTF::Vector.631" = type { %"class.WTF::VectorBuffer.632" }
%"class.WTF::VectorBuffer.632" = type { %"class.WTF::VectorBufferBase.633" }
%"class.WTF::VectorBufferBase.633" = type { %"class.blink::Member.634"*, i32, i32 }
%"class.blink::Member.634" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.640", i32, i32 }
%"class.blink::HeapHashMap.640" = type { %"class.WTF::HashMap.643" }
%"class.WTF::HashMap.643" = type { %"class.WTF::HashTable.644" }
%"class.WTF::HashTable.644" = type <{ %"struct.WTF::KeyValuePair.646"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.646" = type opaque
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.125" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.137 }
%class.scoped_refptr.137 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.138" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.141 }
%class.scoped_refptr.141 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.142", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.142" = type { %"class.base::RefCounted.143" }
%"class.base::RefCounted.143" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.146" }
%"class.blink::HeapHashMap.146" = type { %"class.WTF::HashMap.149" }
%"class.WTF::HashMap.149" = type { %"class.WTF::HashTable.150" }
%"class.WTF::HashTable.150" = type <{ %"struct.WTF::KeyValuePair.152"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.152" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.349" }
%"class.blink::HeapHashMap.349" = type { %"class.WTF::HashMap.352" }
%"class.WTF::HashMap.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"struct.WTF::KeyValuePair.355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.355" = type opaque
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.360" }
%"class.WTF::HashTable.360" = type <{ %"class.blink::WeakMember.362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.362" = type opaque
%"class.blink::HeapHashSet.363" = type { %"class.WTF::HashSet.366" }
%"class.WTF::HashSet.366" = type { %"class.WTF::HashTable.367" }
%"class.WTF::HashTable.367" = type <{ %"class.blink::WeakMember.369"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.369" = type opaque
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.380" = type { %"class.WTF::HashMap.383" }
%"class.WTF::HashMap.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"struct.WTF::KeyValuePair.386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.386" = type opaque
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.51" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.49", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.49" = type { %"class.base::RefCounted.50" }
%"class.base::RefCounted.50" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.55", %"class.blink::Member.57", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.55" = type { %"class.WTF::SingleThreadedBitField.56" }
%"class.WTF::SingleThreadedBitField.56" = type { i32 }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.61 }
%class.scoped_refptr.61 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.62", %"class.WTF::AtomicString", %"class.WTF::Vector.64" }
%"class.WTF::RefCounted.62" = type { %"class.base::RefCounted.63" }
%"class.base::RefCounted.63" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66", [32 x i8] }
%"class.WTF::VectorBufferBase.66" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.398" = type { %"class.WTF::Vector.401" }
%"class.WTF::Vector.401" = type { %"class.WTF::VectorBuffer.402" }
%"class.WTF::VectorBuffer.402" = type { %"class.WTF::VectorBufferBase.403" }
%"class.WTF::VectorBufferBase.403" = type { %"class.blink::Member.404"*, i32, i32 }
%"class.blink::Member.404" = type opaque
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.412" = type { %"class.WTF::HashSet.415" }
%"class.WTF::HashSet.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"class.blink::WeakMember.418"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.418" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.419", i32, [4 x i8] }>
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"struct.std::__1::pair.422"*, i32, i32 }
%"struct.std::__1::pair.422" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.71" }
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.blink::Member.46"*, i32, i32 }
%"class.blink::HeapVector.438" = type { %"class.WTF::Vector.441" }
%"class.WTF::Vector.441" = type { %"class.WTF::VectorBuffer.442" }
%"class.WTF::VectorBuffer.442" = type { %"class.WTF::VectorBufferBase.443" }
%"class.WTF::VectorBufferBase.443" = type { %"class.blink::Member.444"*, i32, i32 }
%"class.blink::Member.444" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.33" }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.456" = type { %"class.WTF::HashTable.457" }
%"class.WTF::HashTable.457" = type <{ %"struct.WTF::KeyValuePair.460"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.460" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.346", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.337, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.337 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.338" }>
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.339 }
%class.scoped_refptr.339 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.340", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.340" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.341" }
%"struct.std::__1::atomic.341" = type { %"struct.std::__1::__atomic_base.342" }
%"struct.std::__1::__atomic_base.342" = type { %"struct.std::__1::__atomic_base.343" }
%"struct.std::__1::__atomic_base.343" = type { %"struct.std::__1::__cxx_atomic_impl.344" }
%"struct.std::__1::__cxx_atomic_impl.344" = type { %"struct.std::__1::__cxx_atomic_base_impl.345" }
%"struct.std::__1::__cxx_atomic_base_impl.345" = type { i8 }
%"class.blink::WeakMember.346" = type { %"class.blink::MemberBase.34" }
%"class.blink::HeapHashSet.469" = type { %"class.WTF::HashSet.472" }
%"class.WTF::HashSet.472" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"class.blink::Member.475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.475" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type { %"class.blink::HeapHashMap.486", %"class.blink::HeapHashMap.486", i64 }
%"class.blink::HeapHashMap.486" = type { %"class.WTF::HashMap.489" }
%"class.WTF::HashMap.489" = type { %"class.WTF::HashTable.490" }
%"class.WTF::HashTable.490" = type <{ %"struct.WTF::KeyValuePair.492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.492" = type { %"class.WTF::AtomicString", %"class.blink::Member.1392" }
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.504", %"class.WTF::HashSet.504", %"class.WTF::HashSet.504", %"class.WTF::HashSet.504", %"class.WTF::HashSet.504", %"class.WTF::HashSet.504", i32, [4 x i8], %"class.WTF::HashMap.508", %"class.WTF::HashMap.508", %"class.WTF::HashMap.508", %"class.WTF::HashMap.508", %"class.WTF::HashMap.508", %"class.WTF::HashMap.508", %"class.WTF::HashMap.508", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"struct.WTF::KeyValuePair.512"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.512" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.524" = type { %"class.WTF::VectorBuffer.525" }
%"class.WTF::VectorBuffer.525" = type { %"class.WTF::VectorBufferBase.526" }
%"class.WTF::VectorBufferBase.526" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.529" = type { %"class.WTF::HashMap.532" }
%"class.WTF::HashMap.532" = type { %"class.WTF::HashTable.533" }
%"class.WTF::HashTable.533" = type <{ %"struct.WTF::KeyValuePair.535"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.535" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.548" = type { %"class.WTF::HashMap.551" }
%"class.WTF::HashMap.551" = type { %"class.WTF::HashTable.552" }
%"class.WTF::HashTable.552" = type <{ %"struct.WTF::KeyValuePair.554"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.554" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.555" }
%"class.blink::HeapHashSet.555" = type { %"class.WTF::HashSet.558" }
%"class.WTF::HashSet.558" = type { %"class.WTF::HashTable.559" }
%"class.WTF::HashTable.559" = type <{ %"class.blink::WeakMember.561"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.561" = type opaque
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.33", %"class.blink::HeapHashSet.571", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.578", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.571" = type { %"class.WTF::HashSet.574" }
%"class.WTF::HashSet.574" = type { %"class.WTF::HashTable.575" }
%"class.WTF::HashTable.575" = type <{ %"class.blink::Member.577"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.577" = type opaque
%"class.blink::HeapTaskRunnerTimer.578" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.579", { i64, i64 } }
%"class.blink::WeakMember.579" = type { %"class.blink::MemberBase.565" }
%"class.blink::WeakMember.566" = type { %"class.blink::MemberBase.24" }
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.1099, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.657, %class.scoped_refptr.657, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.657, i32, [4 x i8] }>
%class.scoped_refptr.1099 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1084", %"class.std::__1::unique_ptr.1086" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.725", %"class.blink::DataRef.805", %"class.blink::DataRef.809", %"class.blink::DataRef.1004", %"class.blink::DataRef.1067", %"class.blink::DataRef.1071", %"class.blink::DataRef.1075", %"class.blink::DataRef.1079", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.658 }
%class.scoped_refptr.658 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.659", %"class.blink::DataRef.661", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.659" = type { %"class.base::RefCounted.660" }
%"class.base::RefCounted.660" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.661" = type { %class.scoped_refptr.662 }
%class.scoped_refptr.662 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.663", %"class.blink::Font" }
%"class.WTF::RefCounted.663" = type { %"class.base::RefCounted.664" }
%"class.base::RefCounted.664" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.698 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.666, %class.scoped_refptr.674, %class.scoped_refptr.684, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.697 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.665 }
%class.scoped_refptr.665 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1352", [4 x i8] }>
%"class.WTF::RefCounted.1352" = type { %"class.base::RefCounted.1353" }
%"class.base::RefCounted.1353" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.666 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.672", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.667" }
%"class.WTF::Vector.667" = type { %"class.WTF::VectorBuffer.668" }
%"class.WTF::VectorBuffer.668" = type { %"class.WTF::VectorBufferBase.669" }
%"class.WTF::VectorBufferBase.669" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.672" = type { %"class.base::RefCounted.673" }
%"class.base::RefCounted.673" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.674 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.675", %"class.WTF::RefCounted.682", [4 x i8] }>
%"class.blink::FontSettings.675" = type { %"class.WTF::Vector.676" }
%"class.WTF::Vector.676" = type { %"class.WTF::VectorBuffer.677" }
%"class.WTF::VectorBuffer.677" = type { %"class.WTF::VectorBufferBase.678" }
%"class.WTF::VectorBufferBase.678" = type { %"class.blink::FontTagValuePair.679"*, i32, i32 }
%"class.blink::FontTagValuePair.679" = type { i32, float }
%"class.WTF::RefCounted.682" = type { %"class.base::RefCounted.683" }
%"class.base::RefCounted.683" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.684 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.685", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.694, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.685" = type { %"class.base::RefCounted.686" }
%"class.base::RefCounted.686" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.689 }
%union.anon.689 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.694 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.695", [4 x i8] }>
%"class.WTF::RefCounted.695" = type { %"class.base::RefCounted.696" }
%"class.base::RefCounted.696" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.697 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.698 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.699", %"class.WTF::Vector.701", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.699" = type { %"class.base::RefCounted.700" }
%"class.base::RefCounted.700" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703", [8 x i8] }
%"class.WTF::VectorBufferBase.703" = type { %class.scoped_refptr.704*, i32, i32 }
%class.scoped_refptr.704 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.705", [4 x i8] }>
%"class.WTF::RefCounted.705" = type { %"class.base::RefCounted.706" }
%"class.base::RefCounted.706" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.711", %class.scoped_refptr.718, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.705" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.709 }
%union.anon.709 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.710, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.106" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.106" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.341" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.710 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.714, %class.scoped_refptr.714 }
%class.scoped_refptr.714 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.718 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.719", [4 x i8] }>
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.721" }
%"class.blink::PersistentBase.721" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.722" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.722" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.724, i8, i8, i8, i8 }>
%union.anon.724 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.725" = type { %class.scoped_refptr.726 }
%class.scoped_refptr.726 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.727", [4 x i8], %"class.blink::DataRef.729", %"class.blink::DataRef.770", %"class.WTF::Vector.774", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.778, %class.scoped_refptr.787, %"class.blink::Persistent.795", %"class.blink::Persistent.797", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.727" = type { %"class.base::RefCounted.728" }
%"class.base::RefCounted.728" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.729" = type { %class.scoped_refptr.730 }
%class.scoped_refptr.730 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.731", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.733, %class.scoped_refptr.740, %"class.blink::Persistent.757", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.733 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.734", %"class.WTF::Vector.735" }
%"class.base::RefCountedThreadSafe.734" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.735" = type { %"class.WTF::VectorBuffer.736" }
%"class.WTF::VectorBuffer.736" = type { %"class.WTF::VectorBufferBase.737" }
%"class.WTF::VectorBufferBase.737" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.740 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.741", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.741" = type { %"class.base::RefCounted.742" }
%"class.base::RefCounted.742" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.743", %"class.blink::Persistent.748" }
%"class.WTF::HashMap.743" = type { %"class.WTF::HashTable.744" }
%"class.WTF::HashTable.744" = type <{ %"struct.WTF::KeyValuePair.747"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.747" = type { %"class.WTF::AtomicString", %class.scoped_refptr.5 }
%"class.blink::Persistent.748" = type { %"class.blink::PersistentBase.749" }
%"class.blink::PersistentBase.749" = type { %"class.blink::HeapHashMap.750"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.750" = type { %"class.WTF::HashMap.753" }
%"class.WTF::HashMap.753" = type { %"class.WTF::HashTable.754" }
%"class.WTF::HashTable.754" = type <{ %"struct.WTF::KeyValuePair.756"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.756" = type opaque
%"class.blink::Persistent.757" = type { %"class.blink::PersistentBase.758" }
%"class.blink::PersistentBase.758" = type { %"class.blink::HeapVector.759"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.759" = type { %"class.WTF::Vector.762" }
%"class.WTF::Vector.762" = type { %"class.WTF::VectorBuffer.763" }
%"class.WTF::VectorBuffer.763" = type { %"class.WTF::VectorBufferBase.764" }
%"class.WTF::VectorBufferBase.764" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.765", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.770" = type { %class.scoped_refptr.771 }
%class.scoped_refptr.771 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.772", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.772" = type { %"class.base::RefCounted.773" }
%"class.base::RefCounted.773" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.774" = type { %"class.WTF::VectorBuffer.775" }
%"class.WTF::VectorBuffer.775" = type { %"class.WTF::VectorBufferBase.66" }
%class.scoped_refptr.778 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.779", %"class.WTF::Vector.781" }
%"class.WTF::RefCounted.779" = type { %"class.base::RefCounted.780" }
%"class.base::RefCounted.780" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.781" = type { %"class.WTF::VectorBuffer.782" }
%"class.WTF::VectorBuffer.782" = type { %"class.WTF::VectorBufferBase.783" }
%"class.WTF::VectorBufferBase.783" = type { %"struct.std::__1::pair.784"*, i32, i32 }
%"struct.std::__1::pair.784" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.787 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.788", [4 x i8], %"class.WTF::Vector.790" }
%"class.WTF::RefCounted.788" = type { %"class.base::RefCounted.789" }
%"class.base::RefCounted.789" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.790" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.792", [28 x i8] }>
%"class.WTF::VectorBufferBase.792" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.795" = type { %"class.blink::PersistentBase.796" }
%"class.blink::PersistentBase.796" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.797" = type { %"class.blink::PersistentBase.798" }
%"class.blink::PersistentBase.798" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.801", %"class.blink::Member.803" }
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.805" = type { %class.scoped_refptr.806 }
%class.scoped_refptr.806 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.807", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.807" = type { %"class.base::RefCounted.808" }
%"class.base::RefCounted.808" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.809" = type { %class.scoped_refptr.810 }
%class.scoped_refptr.810 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.811", [4 x i8], %"class.blink::DataRef.813", %"class.blink::DataRef.879", %"class.blink::TransformOperations", %class.scoped_refptr.787, %"class.blink::Persistent.998", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.813" = type { %class.scoped_refptr.814 }
%class.scoped_refptr.814 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.815", [4 x i8], %"class.blink::DataRef.817", %"class.blink::Persistent.855", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.815" = type { %"class.base::RefCounted.816" }
%"class.base::RefCounted.816" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.817" = type { %class.scoped_refptr.818 }
%class.scoped_refptr.818 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.819", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.837, %class.scoped_refptr.840, %class.scoped_refptr.843, %class.scoped_refptr.846, %class.scoped_refptr.847, %class.scoped_refptr.848, %"class.blink::Persistent.855", %"class.blink::Persistent.870", %"class.absl::optional.874", %"class.absl::optional.874", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.819" = type { %"class.base::RefCounted.820" }
%"class.base::RefCounted.820" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.821", %"class.std::__1::unique_ptr.826" }
%"class.WTF::Vector.821" = type { %"class.WTF::VectorBuffer.822" }
%"class.WTF::VectorBuffer.822" = type { %"class.WTF::VectorBufferBase.823" }
%"class.WTF::VectorBufferBase.823" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.829", %"class.WTF::Vector.821", i32, i32 }
%"class.WTF::Vector.829" = type { %"class.WTF::VectorBuffer.830" }
%"class.WTF::VectorBuffer.830" = type { %"class.WTF::VectorBufferBase.831" }
%"class.WTF::VectorBufferBase.831" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.837 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.838", [4 x i8] }>
%"class.WTF::RefCounted.838" = type { %"class.base::RefCounted.839" }
%"class.base::RefCounted.839" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.840 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.841", [4 x i8] }>
%"class.WTF::RefCounted.841" = type { %"class.base::RefCounted.842" }
%"class.base::RefCounted.842" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.843 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.844" }>
%"class.WTF::RefCounted.844" = type { %"class.base::RefCounted.845" }
%"class.base::RefCounted.845" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.846 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.847 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.848 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.849", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.849" = type { %"class.base::RefCounted.850" }
%"class.base::RefCounted.850" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.851" }
%"class.blink::DataRef.851" = type { %class.scoped_refptr.852 }
%class.scoped_refptr.852 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.795", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.853" }
%"class.WTF::RefCounted.853" = type { %"class.base::RefCounted.854" }
%"class.base::RefCounted.854" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.870" = type { %"class.blink::PersistentBase.871" }
%"class.blink::PersistentBase.871" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.840, %"class.blink::Member.765", i32, [4 x i8] }>
%"class.absl::optional.874" = type { %"class.absl::optional_internal::optional_data.875" }
%"class.absl::optional_internal::optional_data.875" = type { %"class.absl::optional_internal::optional_data_base.876" }
%"class.absl::optional_internal::optional_data_base.876" = type { %"class.absl::optional_internal::optional_data_dtor_base.877" }
%"class.absl::optional_internal::optional_data_dtor_base.877" = type { i8, [3 x i8], %union.anon.878 }
%union.anon.878 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.855" = type { %"class.blink::PersistentBase.856" }
%"class.blink::PersistentBase.856" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.859" }
%"class.blink::HeapVector.859" = type { %"class.WTF::Vector.862" }
%"class.WTF::Vector.862" = type { %"class.WTF::VectorBuffer.863" }
%"class.WTF::VectorBuffer.863" = type { %"class.WTF::VectorBufferBase.864" }
%"class.WTF::VectorBufferBase.864" = type { %"class.blink::Member.865"*, i32, i32 }
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.879" = type { %class.scoped_refptr.880 }
%class.scoped_refptr.880 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.881", %"class.blink::DataRef.883", %"class.blink::DataRef.887", %"class.blink::DataRef.896", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.915", %"class.std::__1::unique_ptr.926", %"class.std::__1::unique_ptr.964", %"class.std::__1::unique_ptr.975", %"class.std::__1::unique_ptr.986", %"class.WTF::Vector.6", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.881" = type { %"class.base::RefCounted.882" }
%"class.base::RefCounted.882" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.883" = type { %class.scoped_refptr.884 }
%class.scoped_refptr.884 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.885", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.885" = type { %"class.base::RefCounted.886" }
%"class.base::RefCounted.886" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.887" = type { %class.scoped_refptr.888 }
%class.scoped_refptr.888 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.889", [4 x i8], %"class.WTF::Vector.891", i8, [7 x i8] }>
%"class.WTF::RefCounted.889" = type { %"class.base::RefCounted.890" }
%"class.base::RefCounted.890" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.891" = type { %"class.WTF::VectorBuffer.892" }
%"class.WTF::VectorBuffer.892" = type { %"class.WTF::VectorBufferBase.893" }
%"class.WTF::VectorBufferBase.893" = type { i32*, i32, i32 }
%"class.blink::DataRef.896" = type { %class.scoped_refptr.897 }
%class.scoped_refptr.897 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.898", [4 x i8], %"class.WTF::HashMap.900", %"class.WTF::HashMap.900", %"class.WTF::HashMap.900", %"class.WTF::HashMap.900", %"class.WTF::HashMap.900", %"class.WTF::HashMap.900", %"class.WTF::HashMap.905", %"class.WTF::HashMap.905", %"class.WTF::HashMap.905", %"class.WTF::HashMap.905", %"class.WTF::HashMap.910", %"class.WTF::Vector.821", %"class.WTF::Vector.821", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.898" = type { %"class.base::RefCounted.899" }
%"class.base::RefCounted.899" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.900" = type { %"class.WTF::HashTable.901" }
%"class.WTF::HashTable.901" = type <{ %"struct.WTF::KeyValuePair.904"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.904" = type { %"class.WTF::String", %"class.WTF::Vector.1394" }
%"class.WTF::Vector.1394" = type { %"class.WTF::VectorBuffer.1395" }
%"class.WTF::VectorBuffer.1395" = type { %"class.WTF::VectorBufferBase.1396" }
%"class.WTF::VectorBufferBase.1396" = type { i64*, i32, i32 }
%"class.WTF::HashMap.905" = type { %"class.WTF::HashTable.906" }
%"class.WTF::HashTable.906" = type <{ %"struct.WTF::KeyValuePair.909"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.909" = type { i64, %"class.WTF::Vector.6" }
%"class.WTF::HashMap.910" = type { %"class.WTF::HashTable.911" }
%"class.WTF::HashTable.911" = type <{ %"struct.WTF::KeyValuePair.914"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.914" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.915" = type { %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.918" }
%"class.WTF::HashMap.918" = type { %"class.WTF::HashTable.919" }
%"class.WTF::HashTable.919" = type <{ %"struct.WTF::KeyValuePair.922"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.922" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1399", %"class.absl::optional.1399", %"class.absl::optional.1399" }
%"class.absl::optional.1399" = type { %"class.absl::optional_internal::optional_data.1400" }
%"class.absl::optional_internal::optional_data.1400" = type { %"class.absl::optional_internal::optional_data_base.1401" }
%"class.absl::optional_internal::optional_data_base.1401" = type { %"class.absl::optional_internal::optional_data_dtor_base.1402" }
%"class.absl::optional_internal::optional_data_dtor_base.1402" = type { i8, %union.anon.1403 }
%union.anon.1403 = type { i32 }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.774", %"class.WTF::Vector.941", %"class.WTF::Vector.929", %"class.WTF::Vector.946", %"class.WTF::Vector.951", %"class.WTF::Vector.956" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.929", %"class.WTF::Vector.929", %"class.WTF::Vector.934" }
%"class.WTF::Vector.934" = type { %"class.WTF::VectorBuffer.935" }
%"class.WTF::VectorBuffer.935" = type { %"class.WTF::VectorBufferBase.936" }
%"class.WTF::VectorBufferBase.936" = type { %class.scoped_refptr.937*, i32, i32 }
%class.scoped_refptr.937 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.938" }
%"class.base::RefCountedThreadSafe.938" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.941" = type { %"class.WTF::VectorBuffer.942" }
%"class.WTF::VectorBuffer.942" = type { %"class.WTF::VectorBufferBase.943" }
%"class.WTF::VectorBufferBase.943" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.929" = type { %"class.WTF::VectorBuffer.930" }
%"class.WTF::VectorBuffer.930" = type { %"class.WTF::VectorBufferBase.931" }
%"class.WTF::VectorBufferBase.931" = type { double*, i32, i32 }
%"class.WTF::Vector.946" = type { %"class.WTF::VectorBuffer.947" }
%"class.WTF::VectorBuffer.947" = type { %"class.WTF::VectorBufferBase.948" }
%"class.WTF::VectorBufferBase.948" = type { i32*, i32, i32 }
%"class.WTF::Vector.951" = type { %"class.WTF::VectorBuffer.952" }
%"class.WTF::VectorBuffer.952" = type { %"class.WTF::VectorBufferBase.953" }
%"class.WTF::VectorBufferBase.953" = type { i32*, i32, i32 }
%"class.WTF::Vector.956" = type { %"class.WTF::VectorBuffer.957" }
%"class.WTF::VectorBuffer.957" = type { %"class.WTF::VectorBufferBase.958" }
%"class.WTF::VectorBufferBase.958" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.964" = type { %"class.std::__1::__compressed_pair.965" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.967" }
%"class.WTF::Vector.967" = type { %"class.WTF::VectorBuffer.968" }
%"class.WTF::VectorBuffer.968" = type { %"class.WTF::VectorBufferBase.969" }
%"class.WTF::VectorBufferBase.969" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.978" }
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980" }
%"class.WTF::VectorBufferBase.980" = type { %"class.blink::Persistent.795"*, i32, i32 }
%"class.std::__1::unique_ptr.986" = type { %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.795", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.992" }
%"class.WTF::Vector.992" = type { %"class.WTF::VectorBuffer.993" }
%"class.WTF::VectorBuffer.993" = type { %"class.WTF::VectorBufferBase.994" }
%"class.WTF::VectorBufferBase.994" = type { %class.scoped_refptr.995*, i32, i32 }
%class.scoped_refptr.995 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.844", [4 x i8] }>
%"class.blink::Persistent.998" = type { %"class.blink::PersistentBase.999" }
%"class.blink::PersistentBase.999" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1002" }
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1004" = type { %class.scoped_refptr.1005 }
%class.scoped_refptr.1005 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1006", [4 x i8], %"class.blink::DataRef.1008", %"class.blink::DataRef.1012", %"class.blink::DataRef.1029", %"class.blink::DataRef.1047", %"class.blink::DataRef.1059", %"class.blink::DataRef.1063", %class.scoped_refptr.1033, i32, [4 x i8] }>
%"class.WTF::RefCounted.1006" = type { %"class.base::RefCounted.1007" }
%"class.base::RefCounted.1007" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1008" = type { %class.scoped_refptr.1009 }
%class.scoped_refptr.1009 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1010", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1010" = type { %"class.base::RefCounted.1011" }
%"class.base::RefCounted.1011" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1012" = type { %class.scoped_refptr.1013 }
%class.scoped_refptr.1013 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1014", %class.scoped_refptr.1016, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1014" = type { %"class.base::RefCounted.1015" }
%"class.base::RefCounted.1015" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1016 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1017", %"class.std::__1::unique_ptr.1023", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.841" }>
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.1029" = type { %class.scoped_refptr.1030 }
%class.scoped_refptr.1030 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1031", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1031" = type { %"class.base::RefCounted.1032" }
%"class.base::RefCounted.1032" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1033, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1047" = type { %class.scoped_refptr.1048 }
%class.scoped_refptr.1048 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1049", [4 x i8], %class.scoped_refptr.1051, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1049" = type { %"class.base::RefCounted.1050" }
%"class.base::RefCounted.1050" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1051 = type { %"class.base::RefCountedData.1052"* }
%"class.base::RefCountedData.1052" = type { %"class.base::RefCountedThreadSafe.1053", %"class.WTF::Vector.1054" }
%"class.base::RefCountedThreadSafe.1053" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1054" = type { %"class.WTF::VectorBuffer.1055" }
%"class.WTF::VectorBuffer.1055" = type { %"class.WTF::VectorBufferBase.1056" }
%"class.WTF::VectorBufferBase.1056" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1059" = type { %class.scoped_refptr.1060 }
%class.scoped_refptr.1060 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1061", %class.scoped_refptr.1033, %class.scoped_refptr.1033, %class.scoped_refptr.1033 }
%"class.WTF::RefCounted.1061" = type { %"class.base::RefCounted.1062" }
%"class.base::RefCounted.1062" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1063" = type { %class.scoped_refptr.1064 }
%class.scoped_refptr.1064 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1065", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1065" = type { %"class.base::RefCounted.1066" }
%"class.base::RefCounted.1066" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1033 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1034", %"class.blink::Persistent.1036", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1034" = type { %"class.base::RefCounted.1035" }
%"class.base::RefCounted.1035" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1036" = type { %"class.blink::PersistentBase.1037" }
%"class.blink::PersistentBase.1037" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.46", %"class.blink::HeapHashMap.1040" }
%"class.blink::HeapHashMap.1040" = type { %"class.WTF::HashMap.1043" }
%"class.WTF::HashMap.1043" = type { %"class.WTF::HashTable.1044" }
%"class.WTF::HashTable.1044" = type <{ %"struct.WTF::KeyValuePair.1046"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1046" = type opaque
%"class.blink::DataRef.1067" = type { %class.scoped_refptr.1068 }
%class.scoped_refptr.1068 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1069", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1069" = type { %"class.base::RefCounted.1070" }
%"class.base::RefCounted.1070" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1071" = type { %class.scoped_refptr.1072 }
%class.scoped_refptr.1072 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1073", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1073" = type { %"class.base::RefCounted.1074" }
%"class.base::RefCounted.1074" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1075" = type { %class.scoped_refptr.1076 }
%class.scoped_refptr.1076 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1077", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1077" = type { %"class.base::RefCounted.1078" }
%"class.base::RefCounted.1078" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1079" = type { %class.scoped_refptr.1080 }
%class.scoped_refptr.1080 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1081", %class.scoped_refptr.1083 }
%"class.WTF::RefCounted.1081" = type { %"class.base::RefCounted.1082" }
%"class.base::RefCounted.1082" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1083 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1350", %"class.blink::StyleVariables", %class.scoped_refptr.1083 }
%"class.WTF::RefCounted.1350" = type { %"class.base::RefCounted.1351" }
%"class.base::RefCounted.1351" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1084" = type { %"class.base::RefCounted.1085" }
%"class.base::RefCounted.1085" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1089" }
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.WTF::Vector.1092"* }
%"class.WTF::Vector.1092" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.657 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.1100", %"class.WTF::Vector.1256", %"class.blink::HeapHashSet.1261", %"class.WTF::Vector.1256", %"class.blink::HeapVector.1268", %"class.blink::HeapVector.1275", %"class.blink::HeapHashMap.1282", %"class.WTF::HashSet.1289", %"class.WTF::HashSet.1289", %"class.blink::HeapHashMap.1293", %"class.blink::HeapHashMap.1293", %"class.blink::HeapHashMap.1293", %"class.blink::HeapHashMap.1293" }
%"class.blink::HeapVector.1100" = type { %"class.WTF::Vector.1103" }
%"class.WTF::Vector.1103" = type { %"class.WTF::VectorBuffer.1104" }
%"class.WTF::VectorBuffer.1104" = type { %"class.WTF::VectorBufferBase.1105" }
%"class.WTF::VectorBufferBase.1105" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.1106", %"struct.blink::Timing", %"class.blink::Member.1183", i32, %"class.blink::Member.1195", %"class.WTF::Vector.956" }
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.1129", i8, %"class.absl::optional.1110", %"class.absl::optional.1178" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1108", %"struct.blink::Timing", %"class.blink::Member.1115", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.1110", %"class.absl::optional.1124", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.1119", %"class.absl::optional.1119", i8, i8, i8, %"class.absl::optional.1110", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1119" = type { %"class.absl::optional_internal::optional_data.1120" }
%"class.absl::optional_internal::optional_data.1120" = type { %"class.absl::optional_internal::optional_data_base.1121" }
%"class.absl::optional_internal::optional_data_base.1121" = type { %"class.absl::optional_internal::optional_data_dtor_base.1122" }
%"class.absl::optional_internal::optional_data_dtor_base.1122" = type { i8, %union.anon.1123 }
%union.anon.1123 = type { double }
%"class.absl::optional.1124" = type { %"class.absl::optional_internal::optional_data.1125" }
%"class.absl::optional_internal::optional_data.1125" = type { %"class.absl::optional_internal::optional_data_base.1126" }
%"class.absl::optional_internal::optional_data_base.1126" = type { %"class.absl::optional_internal::optional_data_dtor_base.1127" }
%"class.absl::optional_internal::optional_data_dtor_base.1127" = type { i8, %union.anon.1128 }
%union.anon.1128 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.1133", %"class.blink::Member.1141", %"class.blink::Member.1166", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.937, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.1133" = type { %"class.WTF::Vector.1136" }
%"class.WTF::Vector.1136" = type { %"class.WTF::VectorBuffer.1137" }
%"class.WTF::VectorBuffer.1137" = type { %"class.WTF::VectorBufferBase.1138" }
%"class.WTF::VectorBufferBase.1138" = type { %"class.blink::Member.1139"*, i32, i32 }
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.1119", %"class.absl::optional.1372", %class.scoped_refptr.937 }
%"class.absl::optional.1372" = type { %"class.absl::optional_internal::optional_data.1373" }
%"class.absl::optional_internal::optional_data.1373" = type { %"class.absl::optional_internal::optional_data_base.1374" }
%"class.absl::optional_internal::optional_data_base.1374" = type { %"class.absl::optional_internal::optional_data_dtor_base.1375" }
%"class.absl::optional_internal::optional_data_dtor_base.1375" = type { i8, %union.anon.1376 }
%union.anon.1376 = type { i32 }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::HeapHashMap.1143"* }
%"class.blink::HeapHashMap.1143" = type { %"class.WTF::HashMap.1146" }
%"class.WTF::HashMap.1146" = type { %"class.WTF::HashTable.1147" }
%"class.WTF::HashTable.1147" = type <{ %"struct.WTF::KeyValuePair.1149"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1149" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1151" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.1150, %"class.WTF::AtomicString" }
%union.anon.1150 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.1155" }
%"class.blink::HeapVector.1155" = type { %"class.WTF::Vector.1158" }
%"class.WTF::Vector.1158" = type { %"class.WTF::VectorBuffer.1159" }
%"class.WTF::VectorBuffer.1159" = type { %"class.WTF::VectorBufferBase.1160" }
%"class.WTF::VectorBufferBase.1160" = type { %"class.blink::Member.1161"*, i32, i32 }
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.937, i32, [4 x i8] }>
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.1170" }
%"class.blink::HeapVector.1170" = type { %"class.WTF::Vector.1173" }
%"class.WTF::Vector.1173" = type { %"class.WTF::VectorBuffer.1174" }
%"class.WTF::VectorBuffer.1174" = type { %"class.WTF::VectorBufferBase.1175" }
%"class.WTF::VectorBufferBase.1175" = type { %"class.blink::Member.1176"*, i32, i32 }
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1365", %class.scoped_refptr.937, double, double, double, double }
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.1110" = type { %"class.absl::optional_internal::optional_data.1111" }
%"class.absl::optional_internal::optional_data.1111" = type { %"class.absl::optional_internal::optional_data_base.1112" }
%"class.absl::optional_internal::optional_data_base.1112" = type { %"class.absl::optional_internal::optional_data_dtor_base.1113" }
%"class.absl::optional_internal::optional_data_dtor_base.1113" = type { i8, %union.anon.1114 }
%union.anon.1114 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1178" = type { %"class.absl::optional_internal::optional_data.1179" }
%"class.absl::optional_internal::optional_data.1179" = type { %"class.absl::optional_internal::optional_data_base.1180" }
%"class.absl::optional_internal::optional_data_base.1180" = type { %"class.absl::optional_internal::optional_data_dtor_base.1181" }
%"class.absl::optional_internal::optional_data_dtor_base.1181" = type { i8, %union.anon.1182 }
%union.anon.1182 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.1110", i32, [4 x i8], %class.scoped_refptr.937, i16, [6 x i8] }>
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1187", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.1187" = type { %"class.WTF::Vector.1190" }
%"class.WTF::Vector.1190" = type { %"class.WTF::VectorBuffer.1191" }
%"class.WTF::VectorBuffer.1191" = type { %"class.WTF::VectorBufferBase.1192" }
%"class.WTF::VectorBufferBase.1192" = type { %"class.blink::Member.1193"*, i32, i32 }
%"class.blink::Member.1193" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.33", i32, [4 x i8], %"class.blink::HeapHashSet.1197", %"class.blink::HeapHashSet.1205", %"class.std::__1::unique_ptr.1212", %"class.absl::optional.1245" }
%"class.blink::HeapHashSet.1197" = type { %"class.WTF::HashSet.1200" }
%"class.WTF::HashSet.1200" = type { %"class.WTF::HashTable.1201" }
%"class.WTF::HashTable.1201" = type <{ %"class.blink::Member.1203"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1203" = type { %"class.blink::MemberBase.1204" }
%"class.blink::MemberBase.1204" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.1119", %"class.absl::optional.1110", %"class.absl::optional.1110", %"class.absl::optional.1178", %"class.absl::optional.1110", i8, [3 x i8], i32, %"class.blink::Member.1327", %"class.blink::Member.1327", %"class.blink::Member.1329", %"class.blink::Member.33", %"class.blink::Member.1195", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1331", %"class.blink::Member.1331", %"class.blink::Member.1331", %"class.std::__1::unique_ptr.1333", i8, [3 x i8], i32, %"class.blink::Member.1339", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1318" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1306" }
%"class.blink::HeapVector.1306" = type { %"class.WTF::Vector.1309" }
%"class.WTF::Vector.1309" = type { %"class.WTF::VectorBuffer.1310" }
%"class.WTF::VectorBuffer.1310" = type { %"class.WTF::VectorBufferBase.1311", [32 x i8] }
%"class.WTF::VectorBufferBase.1311" = type { %"struct.std::__1::pair.1312"*, i32, i32 }
%"struct.std::__1::pair.1312" = type { %"class.WTF::AtomicString", %"class.blink::Member.1313" }
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::HeapVector.1315"* }
%"class.blink::HeapVector.1315" = type opaque
%"class.std::__1::unique_ptr.1318" = type { %"class.std::__1::__compressed_pair.1319" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"class.WTF::Vector.1321"* }
%"class.WTF::Vector.1321" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1325" }
%"class.blink::WeakMember.1325" = type { %"class.blink::MemberBase.1326" }
%"class.blink::MemberBase.1326" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1327" = type { %"class.blink::MemberBase.1328" }
%"class.blink::MemberBase.1328" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1329" = type { %"class.blink::MemberBase.1330" }
%"class.blink::MemberBase.1330" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1333" = type { %"class.std::__1::__compressed_pair.1334" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1335" }
%"struct.std::__1::__compressed_pair_elem.1335" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.1119", %"class.absl::optional.1119", double, i8, i32 }
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1343", %"class.std::__1::unique_ptr.1344", %"class.blink::Member.1203" }
%"class.blink::ThreadState::PrefinalizerRegistration.1343" = type { i8 }
%"class.std::__1::unique_ptr.1344" = type { %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.1205" = type { %"class.WTF::HashSet.1208" }
%"class.WTF::HashSet.1208" = type { %"class.WTF::HashTable.1209" }
%"class.WTF::HashTable.1209" = type <{ %"class.blink::WeakMember.1211"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1211" = type opaque
%"class.std::__1::unique_ptr.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.1215 }
%class.scoped_refptr.1215 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.1216", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.1216" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.1217" }
%"class.std::__1::__hash_table.1217" = type <{ %"class.std::__1::unique_ptr.1218", %"class.std::__1::__compressed_pair.1228", %"class.std::__1::__compressed_pair.1233", %"class.std::__1::__compressed_pair.1237", [4 x i8] }>
%"class.std::__1::unique_ptr.1218" = type { %"class.std::__1::__compressed_pair.1219" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220", %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"struct.std::__1::__hash_node_base.1221"** }
%"struct.std::__1::__hash_node_base.1221" = type { %"struct.std::__1::__hash_node_base.1221"* }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.std::__1::__bucket_list_deallocator.1223" }
%"class.std::__1::__bucket_list_deallocator.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"struct.std::__1::__hash_node_base.1221" }
%"class.std::__1::__compressed_pair.1233" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.1245" = type { %"class.absl::optional_internal::optional_data.1246" }
%"class.absl::optional_internal::optional_data.1246" = type { %"class.absl::optional_internal::optional_data_base.1247" }
%"class.absl::optional_internal::optional_data_base.1247" = type { %"class.absl::optional_internal::optional_data_dtor_base.1248" }
%"class.absl::optional_internal::optional_data_dtor_base.1248" = type { i8, %union.anon.1249 }
%union.anon.1249 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.1250" }
%"class.absl::optional.1250" = type { %"class.absl::optional_internal::optional_data.1251" }
%"class.absl::optional_internal::optional_data.1251" = type { %"class.absl::optional_internal::optional_data_base.1252" }
%"class.absl::optional_internal::optional_data_base.1252" = type { %"class.absl::optional_internal::optional_data_dtor_base.1253" }
%"class.absl::optional_internal::optional_data_dtor_base.1253" = type { i8, %union.anon.1254 }
%union.anon.1254 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.1261" = type { %"class.WTF::HashSet.1264" }
%"class.WTF::HashSet.1264" = type { %"class.WTF::HashTable.1265" }
%"class.WTF::HashTable.1265" = type <{ %"class.blink::Member.1267"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1377" }
%"class.blink::MemberBase.1377" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.1256" = type { %"class.WTF::VectorBuffer.1257" }
%"class.WTF::VectorBuffer.1257" = type { %"class.WTF::VectorBufferBase.1258" }
%"class.WTF::VectorBufferBase.1258" = type { i32*, i32, i32 }
%"class.blink::HeapVector.1268" = type { %"class.WTF::Vector.1271" }
%"class.WTF::Vector.1271" = type { %"class.WTF::VectorBuffer.1272" }
%"class.WTF::VectorBuffer.1272" = type { %"class.WTF::VectorBufferBase.1273" }
%"class.WTF::VectorBufferBase.1273" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.1203", %"class.blink::Member.1106", %"struct.blink::Timing", %"class.blink::Member.1183", i32, %"class.blink::Member.1195", %"class.WTF::Vector.956" }
%"class.blink::HeapVector.1275" = type { %"class.WTF::Vector.1278" }
%"class.WTF::Vector.1278" = type { %"class.WTF::VectorBuffer.1279" }
%"class.WTF::VectorBuffer.1279" = type { %"class.WTF::VectorBufferBase.1280" }
%"class.WTF::VectorBufferBase.1280" = type { %"class.blink::Member.1203"*, i32, i32 }
%"class.blink::HeapHashMap.1282" = type { %"class.WTF::HashMap.1285" }
%"class.WTF::HashMap.1285" = type { %"class.WTF::HashTable.1286" }
%"class.WTF::HashTable.1286" = type <{ %"struct.WTF::KeyValuePair.1288"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1288" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1388" }
%"class.blink::Member.1388" = type { %"class.blink::MemberBase.1389" }
%"class.blink::MemberBase.1389" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.657, %class.scoped_refptr.657, %class.scoped_refptr.657, double, %"class.blink::Member.1106" }
%"class.WTF::HashSet.1289" = type { %"class.WTF::HashTable.1290" }
%"class.WTF::HashTable.1290" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1293" = type { %"class.WTF::HashMap.1296" }
%"class.WTF::HashMap.1296" = type { %"class.WTF::HashTable.1297" }
%"class.WTF::HashTable.1297" = type <{ %"struct.WTF::KeyValuePair.1299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1299" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1378" }
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"class.blink::HeapVector.1380"* }
%"class.blink::HeapVector.1380" = type { %"class.WTF::Vector.1383" }
%"class.WTF::Vector.1383" = type { %"class.WTF::VectorBuffer.1384" }
%"class.WTF::VectorBuffer.1384" = type { %"class.WTF::VectorBufferBase.1385", [8 x i8] }
%"class.WTF::VectorBufferBase.1385" = type { %"class.blink::Member.1365"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.1300", %"class.WTF::HashSet.1300", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.1300" = type { %"class.WTF::HashTable.1301" }
%"class.WTF::HashTable.1301" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::CSSParserLocalContext" = type { i8, i8, i32, i32 }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.blink::Longhand" = type { %"class.blink::CSSProperty.base", [7 x i8] }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.141, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.1356", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::Document"* }
%"struct.blink::CSSTokenizedValue" = type { %"class.blink::CSSParserTokenRange", %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSCustomPropertyDeclaration" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.5, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Variable" = type { %"class.blink::Longhand.base", [7 x i8] }
%"class.blink::ScopedCSSValue" = type { %"class.blink::CSSValue"*, %"class.blink::TreeScope"* }
%"class.blink::CSSInitialValue" = type { %"class.blink::CSSValue" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink21CSSUnresolvedProperty8ExposureEv = comdat any

$_ZNK5blink21CSSUnresolvedProperty8ExposureEPKNS_16ExecutionContextE = comdat any

$_ZNK5blink11CSSProperty18IsResolvedPropertyEv = comdat any

$_ZNK5blink8Variable15GetPropertyNameEv = comdat any

$_ZNK5blink21CSSUnresolvedProperty17GetJSPropertyNameEv = comdat any

$_ZNK5blink8Variable15IsAffectedByAllEv = comdat any

$_ZNK5blink11CSSProperty25IsLayoutDependentPropertyEv = comdat any

$_ZNK5blink11CSSProperty17IsLayoutDependentEPKNS_13ComputedStyleEPNS_12LayoutObjectE = comdat any

$_ZNK5blink11CSSProperty29ResolveDirectionAwarePropertyENS_13TextDirectionENS_11WritingModeE = comdat any

$_ZNK5blink11CSSProperty53IsInSameLogicalPropertyGroupWithDifferentMappingLogicENS_13CSSPropertyIDE = comdat any

$_ZNK5blink11CSSProperty18GetVisitedPropertyEv = comdat any

$_ZNK5blink11CSSProperty20GetUnvisitedPropertyEv = comdat any

$_ZNK5blink11CSSProperty12SurrogateForENS_13TextDirectionENS_11WritingModeE = comdat any

$_ZNK5blink8Longhand10ApplyValueERNS_18StyleResolverStateERKNS_14ScopedCSSValueE = comdat any

$_ZNK5blink8Longhand22ColorIncludingFallbackEbRKNS_13ComputedStyleE = comdat any

$_ZNK5blink8Longhand12InitialValueEv = comdat any

$_ZNK3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink14CustomPropertyE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.blink::CSSUnresolvedProperty"*)* @_ZNK5blink21CSSUnresolvedProperty8ExposureEv to i8*), i8* bitcast (i32 (%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink21CSSUnresolvedProperty8ExposureEPKNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty18IsResolvedPropertyEv to i8*), i8* bitcast (i8* (%"class.blink::Variable"*)* @_ZNK5blink8Variable15GetPropertyNameEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)* @_ZNK5blink14CustomProperty27GetPropertyNameAtomicStringEv to i8*), i8* bitcast (i8* (%"class.blink::CSSUnresolvedProperty"*)* @_ZNK5blink21CSSUnresolvedProperty17GetJSPropertyNameEv to i8*), i8* bitcast ({ i32, %"class.WTF::StringImpl"* } (%"class.blink::CustomProperty"*)* @_ZNK5blink14CustomProperty18GetCSSPropertyNameEv to i8*), i8* bitcast (i1 (%"class.blink::Variable"*)* @_ZNK5blink8Variable15IsAffectedByAllEv to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty25IsLayoutDependentPropertyEv to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11CSSProperty17IsLayoutDependentEPKNS_13ComputedStyleEPNS_12LayoutObjectE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink14CustomProperty33CSSValueFromComputedStyleInternalERKNS_13ComputedStyleEPKNS_12LayoutObjectEb to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)* @_ZNK5blink11CSSProperty29ResolveDirectionAwarePropertyENS_13TextDirectionENS_11WritingModeE to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*, i32)* @_ZNK5blink11CSSProperty53IsInSameLogicalPropertyGroupWithDifferentMappingLogicENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty18GetVisitedPropertyEv to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty20GetUnvisitedPropertyEv to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)* @_ZNK5blink11CSSProperty12SurrogateForENS_13TextDirectionENS_11WritingModeE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)* @_ZNK5blink14CustomProperty16ParseSingleValueERNS_19CSSParserTokenRangeERKNS_16CSSParserContextERKNS_21CSSParserLocalContextE to i8*), i8* bitcast (void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink14CustomProperty12ApplyInitialERNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink14CustomProperty12ApplyInheritERNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::ScopedCSSValue"*)* @_ZNK5blink8Longhand10ApplyValueERNS_18StyleResolverStateERKNS_14ScopedCSSValueE to i8*), i8* bitcast (void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)* @_ZNK5blink14CustomProperty10ApplyValueERNS_18StyleResolverStateERKNS_8CSSValueE to i8*), i8* bitcast (i32 (%"class.blink::Longhand"*, i1, %"class.blink::ComputedStyle"*)* @_ZNK5blink8Longhand22ColorIncludingFallbackEbRKNS_13ComputedStyleE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::Longhand"*)* @_ZNK5blink8Longhand12InitialValueEv to i8*)] }, align 8
@.str = private unnamed_addr constant [9 x i8] c"variable\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink14CustomPropertyC1ERKN3WTF12AtomicStringERKNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::CustomProperty"*, %"class.WTF::AtomicString"*, %"class.blink::Document"*), void (%"class.blink::CustomProperty"*, %"class.WTF::AtomicString"*, %"class.blink::Document"*)* @_ZN5blink14CustomPropertyC2ERKN3WTF12AtomicStringERKNS_8DocumentE
@_ZN5blink14CustomPropertyC1ERKN3WTF12AtomicStringEPKNS_16PropertyRegistryE = hidden unnamed_addr alias void (%"class.blink::CustomProperty"*, %"class.WTF::AtomicString"*, %"class.blink::PropertyRegistry"*), void (%"class.blink::CustomProperty"*, %"class.WTF::AtomicString"*, %"class.blink::PropertyRegistry"*)* @_ZN5blink14CustomPropertyC2ERKN3WTF12AtomicStringEPKNS_16PropertyRegistryE
@_ZN5blink14CustomPropertyC1ERKN3WTF12AtomicStringEPKNS_20PropertyRegistrationE = hidden unnamed_addr alias void (%"class.blink::CustomProperty"*, %"class.WTF::AtomicString"*, %"class.blink::PropertyRegistration"*), void (%"class.blink::CustomProperty"*, %"class.WTF::AtomicString"*, %"class.blink::PropertyRegistration"*)* @_ZN5blink14CustomPropertyC2ERKN3WTF12AtomicStringEPKNS_20PropertyRegistrationE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14CustomPropertyC2ERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CustomProperty"* nocapture, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %2) #9
  %5 = tail call %"class.blink::PropertyRegistration"* @_ZN5blink20PropertyRegistration4FromEPKNS_16ExecutionContextERKN3WTF12AtomicStringE(%"class.blink::ExecutionContext"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %1) #9
  %6 = icmp eq %"class.blink::PropertyRegistration"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %5, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 1315880, i32 1315944
  br label %12

12:                                               ; preds = %7, %3
  %13 = phi i32 [ %11, %7 ], [ 1315944, %3 ]
  %14 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #9
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %27
  tail call void @llvm.trap() #9
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %39

39:                                               ; preds = %12, %22, %37
  %40 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::PropertyRegistration"* %5, %"class.blink::PropertyRegistration"** %40, align 8
  ret void
}

declare %"class.blink::PropertyRegistration"* @_ZN5blink20PropertyRegistration4FromEPKNS_16ExecutionContextERKN3WTF12AtomicStringE(%"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14CustomPropertyC2ERKN3WTF12AtomicStringEPKNS_20PropertyRegistrationE(%"class.blink::CustomProperty"* nocapture, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::PropertyRegistration"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::PropertyRegistration"* %2, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %2, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %8, i32 1315880, i32 1315944
  br label %10

10:                                               ; preds = %3, %5
  %11 = phi i32 [ %9, %5 ], [ 1315944, %3 ]
  %12 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %11, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #9
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %25
  tail call void @llvm.trap() #9
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %10, %20, %35
  %38 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::PropertyRegistration"* %2, %"class.blink::PropertyRegistration"** %38, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14CustomPropertyC2ERKN3WTF12AtomicStringEPKNS_16PropertyRegistryE(%"class.blink::CustomProperty"* nocapture, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::PropertyRegistry"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::PropertyRegistry"* %2, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = tail call %"class.blink::PropertyRegistration"* @_ZNK5blink16PropertyRegistry12RegistrationERKN3WTF12AtomicStringE(%"class.blink::PropertyRegistry"* nonnull %2, %"class.WTF::AtomicString"* dereferenceable(8) %1) #9
  %7 = icmp eq %"class.blink::PropertyRegistration"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %6, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 1315880, i32 1315944
  br label %13

13:                                               ; preds = %3, %8, %5
  %14 = phi %"class.blink::PropertyRegistration"* [ %6, %8 ], [ null, %5 ], [ null, %3 ]
  %15 = phi i32 [ %12, %8 ], [ 1315944, %5 ], [ 1315944, %3 ]
  %16 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %15, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %22, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #9
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %29
  tail call void @llvm.trap() #9
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %13, %24, %39
  %42 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::PropertyRegistration"* %14, %"class.blink::PropertyRegistration"** %42, align 8
  ret void
}

declare %"class.blink::PropertyRegistration"* @_ZNK5blink16PropertyRegistry12RegistrationERKN3WTF12AtomicStringE(%"class.blink::PropertyRegistry"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink14CustomProperty27GetPropertyNameAtomicStringEv(%"class.blink::CustomProperty"* readnone) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden { i32, %"class.WTF::StringImpl"* } @_ZNK5blink14CustomProperty18GetCSSPropertyNameEv(%"class.blink::CustomProperty"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #9
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #9
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  %23 = insertvalue { i32, %"class.WTF::StringImpl"* } { i32 1, %"class.WTF::StringImpl"* undef }, %"class.WTF::StringImpl"* %3, 1
  ret { i32, %"class.WTF::StringImpl"* } %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14CustomProperty12ApplyInitialERNS_18StyleResolverStateE(%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 64
  %6 = icmp ne i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %7, align 8
  %9 = icmp eq %"class.blink::PropertyRegistration"* %8, null
  %10 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  br i1 %9, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN5blink13ComputedStyle15SetVariableDataERKN3WTF12AtomicStringE13scoped_refptrINS_15CSSVariableDataEEb(%"class.blink::ComputedStyle"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %12, %"class.blink::CSSVariableData"* null, i1 zeroext %6) #9
  br label %25

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %8, i64 0, i32 4, i32 0
  %16 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %15, align 8
  %17 = icmp eq %"class.blink::CSSVariableData"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %16, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #9
  br label %20

20:                                               ; preds = %14, %18
  tail call void @_ZN5blink13ComputedStyle15SetVariableDataERKN3WTF12AtomicStringE13scoped_refptrINS_15CSSVariableDataEEb(%"class.blink::ComputedStyle"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %12, %"class.blink::CSSVariableData"* %16, i1 zeroext %6) #9
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %22 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %7, align 8
  %23 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %22, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %23, align 8
  tail call void @_ZN5blink13ComputedStyle16SetVariableValueERKN3WTF12AtomicStringEPKNS_8CSSValueEb(%"class.blink::ComputedStyle"* %21, %"class.WTF::AtomicString"* dereferenceable(8) %12, %"class.blink::CSSValue"* %24, i1 zeroext %6) #9
  br label %25

25:                                               ; preds = %20, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink13ComputedStyle15SetVariableDataERKN3WTF12AtomicStringE13scoped_refptrINS_15CSSVariableDataEEb(%"class.blink::ComputedStyle"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::CSSVariableData"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink13ComputedStyle16SetVariableValueERKN3WTF12AtomicStringEPKNS_8CSSValueEb(%"class.blink::ComputedStyle"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::CSSValue"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14CustomProperty12ApplyInheritERNS_18StyleResolverStateE(%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 64
  %6 = icmp ne i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 4, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  %10 = tail call %"class.blink::CSSVariableData"* @_ZNK5blink13ComputedStyle15GetVariableDataERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"* %8, %"class.WTF::AtomicString"* dereferenceable(8) %9, i1 zeroext %6) #9
  %11 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = icmp eq %"class.blink::CSSVariableData"* %10, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %10, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #9
  br label %16

16:                                               ; preds = %2, %14
  tail call void @_ZN5blink13ComputedStyle15SetVariableDataERKN3WTF12AtomicStringE13scoped_refptrINS_15CSSVariableDataEEb(%"class.blink::ComputedStyle"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %9, %"class.blink::CSSVariableData"* %10, i1 zeroext %6) #9
  %17 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %17, align 8
  %19 = icmp eq %"class.blink::PropertyRegistration"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %22 = tail call %"class.blink::CSSValue"* @_ZNK5blink13ComputedStyle16GetVariableValueERKN3WTF12AtomicStringE(%"class.blink::ComputedStyle"* %21, %"class.WTF::AtomicString"* dereferenceable(8) %9) #9
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  tail call void @_ZN5blink13ComputedStyle16SetVariableValueERKN3WTF12AtomicStringEPKNS_8CSSValueEb(%"class.blink::ComputedStyle"* %23, %"class.WTF::AtomicString"* dereferenceable(8) %9, %"class.blink::CSSValue"* %22, i1 zeroext %6) #9
  br label %24

24:                                               ; preds = %16, %20
  ret void
}

declare %"class.blink::CSSVariableData"* @_ZNK5blink13ComputedStyle15GetVariableDataERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZNK5blink13ComputedStyle16GetVariableValueERKN3WTF12AtomicStringE(%"class.blink::ComputedStyle"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14CustomProperty10ApplyValueERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserLocalContext", align 8
  %5 = alloca %"class.blink::CSSParserLocalContext", align 4
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = or i8 %8, 1
  %10 = icmp eq i8 %9, 47
  br i1 %10, label %11, label %54

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %12, align 8
  %14 = icmp eq %"class.blink::PropertyRegistration"* %13, null
  br i1 %14, label %39, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %13, i64 0, i32 0, i32 0
  %21 = tail call dereferenceable(24) %"class.blink::CSSSyntaxComponent"* @_ZNK3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 0) #9
  %22 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %15, %19
  %26 = bitcast %"class.blink::CustomProperty"* %0 to %"class.blink::Longhand"*
  %27 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 64
  %30 = icmp eq i32 %29, 0
  %31 = bitcast %"class.blink::CustomProperty"* %0 to void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)***
  %32 = load void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)**, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)*** %31, align 8
  br i1 %30, label %36, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)** %32, i64 18
  %35 = load void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)** %34, align 8
  tail call void %35(%"class.blink::Longhand"* %26, %"class.blink::StyleResolverState"* dereferenceable(600) %1) #9
  br label %176

36:                                               ; preds = %25
  %37 = getelementptr inbounds void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)** %32, i64 17
  %38 = load void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)** %37, align 8
  tail call void %38(%"class.blink::Longhand"* %26, %"class.blink::StyleResolverState"* dereferenceable(600) %1) #9
  br label %176

39:                                               ; preds = %11, %19
  %40 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 64
  %46 = icmp ne i32 %45, 0
  tail call void @_ZN5blink13ComputedStyle15SetVariableDataERKN3WTF12AtomicStringE13scoped_refptrINS_15CSSVariableDataEEb(%"class.blink::ComputedStyle"* %41, %"class.WTF::AtomicString"* dereferenceable(8) %42, %"class.blink::CSSVariableData"* null, i1 zeroext %46) #9
  %47 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %12, align 8
  %48 = icmp eq %"class.blink::PropertyRegistration"* %47, null
  br i1 %48, label %176, label %49

49:                                               ; preds = %39
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %51 = load i32, i32* %43, align 4
  %52 = and i32 %51, 64
  %53 = icmp ne i32 %52, 0
  tail call void @_ZN5blink13ComputedStyle16SetVariableValueERKN3WTF12AtomicStringEPKNS_8CSSValueEb(%"class.blink::ComputedStyle"* %50, %"class.WTF::AtomicString"* dereferenceable(8) %42, %"class.blink::CSSValue"* null, i1 zeroext %53) #9
  br label %176

54:                                               ; preds = %3
  %55 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 64
  %58 = icmp ne i32 %57, 0
  %59 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 8
  %60 = bitcast %"class.blink::CSSValue"* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 2
  br i1 %62, label %70, label %63

63:                                               ; preds = %54
  %64 = icmp eq i32 %61, 749
  %65 = xor i1 %58, true
  %66 = and i1 %64, %65
  %67 = icmp eq i32 %61, 1
  br i1 %67, label %69, label %68

68:                                               ; preds = %63
  br i1 %66, label %70, label %75

69:                                               ; preds = %63
  br i1 %66, label %70, label %77

70:                                               ; preds = %54, %68, %69
  %71 = bitcast %"class.blink::CustomProperty"* %0 to void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)***
  %72 = load void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)**, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)** %72, i64 17
  %74 = load void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)** %73, align 8
  tail call void %74(%"class.blink::CustomProperty"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %1) #9
  br label %176

75:                                               ; preds = %68
  %76 = and i1 %64, %58
  br i1 %76, label %77, label %82

77:                                               ; preds = %69, %75
  %78 = bitcast %"class.blink::CustomProperty"* %0 to void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)***
  %79 = load void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)**, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)** %79, i64 18
  %81 = load void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)** %80, align 8
  tail call void %81(%"class.blink::CustomProperty"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %1) #9
  br label %176

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 5, i32 1
  %84 = bitcast i8* %83 to %"class.blink::CSSVariableData"**
  %85 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %84, align 8
  %86 = ptrtoint %"class.blink::CSSVariableData"* %85 to i64
  %87 = icmp eq %"class.blink::CSSVariableData"* %85, null
  br i1 %87, label %88, label %91

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %90 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %89, align 8
  br label %95

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %92) #9
  %93 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %93, align 8
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %92) #9
  br label %95

95:                                               ; preds = %88, %91
  %96 = phi %"class.blink::ComputedStyle"* [ %90, %88 ], [ %94, %91 ]
  %97 = phi %"class.blink::ComputedStyle"** [ %89, %88 ], [ %93, %91 ]
  %98 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  tail call void @_ZN5blink13ComputedStyle15SetVariableDataERKN3WTF12AtomicStringE13scoped_refptrINS_15CSSVariableDataEEb(%"class.blink::ComputedStyle"* %96, %"class.WTF::AtomicString"* dereferenceable(8) %98, %"class.blink::CSSVariableData"* %85, i1 zeroext %58) #9
  %99 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %99, align 8
  %101 = icmp eq %"class.blink::PropertyRegistration"* %100, null
  br i1 %101, label %166, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 1
  %104 = load %"class.blink::Document"*, %"class.blink::Document"** %103, align 8
  %105 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %104) #9
  %106 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %105, i64 0, i32 6, i32 11
  %107 = load i32, i32* %106, align 8
  %108 = tail call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 %107) #9
  %109 = getelementptr inbounds %"class.blink::CSSParserLocalContext", %"class.blink::CSSParserLocalContext"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %109) #9
  %110 = getelementptr inbounds %"class.blink::CSSParserLocalContext", %"class.blink::CSSParserLocalContext"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %110) #9
  call void @_ZN5blink21CSSParserLocalContextC1Ev(%"class.blink::CSSParserLocalContext"* nonnull %5) #9
  %111 = call { i64, i32 } @_ZNK5blink21CSSParserLocalContext16WithVariableModeENS0_12VariableModeE(%"class.blink::CSSParserLocalContext"* nonnull %5, i32 0) #9
  %112 = extractvalue { i64, i32 } %111, 0
  %113 = extractvalue { i64, i32 } %111, 1
  %114 = bitcast %"class.blink::CSSParserLocalContext"* %4 to i64*
  store i64 %112, i64* %114, align 8
  %115 = getelementptr inbounds %"class.blink::CSSParserLocalContext", %"class.blink::CSSParserLocalContext"* %4, i64 0, i32 3
  store i32 %113, i32* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %110) #9
  %116 = bitcast %"class.blink::CSSParserTokenRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #9
  %117 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 0
  %118 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  %119 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %85, i64 0, i32 2, i32 0, i32 0, i32 0
  %120 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %85, i64 0, i32 2, i32 0, i32 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %120, i64 %123
  store %"class.blink::CSSParserToken"* %120, %"class.blink::CSSParserToken"** %117, align 8
  store %"class.blink::CSSParserToken"* %124, %"class.blink::CSSParserToken"** %118, align 8
  %125 = bitcast %"class.blink::CustomProperty"* %0 to %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)***
  %126 = load %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)**, %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)*, %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)** %126, i64 16
  %128 = load %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)*, %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)** %127, align 8
  %129 = call %"class.blink::CSSValue"* %128(%"class.blink::CustomProperty"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %108, %"class.blink::CSSParserLocalContext"* nonnull dereferenceable(12) %4) #9
  %130 = icmp eq %"class.blink::CSSValue"* %129, null
  br i1 %130, label %131, label %140

131:                                              ; preds = %102
  %132 = bitcast %"class.blink::CustomProperty"* %0 to void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)***
  %133 = load void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)**, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*** %132, align 8
  br i1 %58, label %134, label %137

134:                                              ; preds = %131
  %135 = getelementptr inbounds void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)** %133, i64 18
  %136 = load void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)** %135, align 8
  call void %136(%"class.blink::CustomProperty"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %1) #9
  br label %163

137:                                              ; preds = %131
  %138 = getelementptr inbounds void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)** %133, i64 17
  %139 = load void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::CustomProperty"*, %"class.blink::StyleResolverState"*)** %138, align 8
  call void %139(%"class.blink::CustomProperty"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %1) #9
  br label %163

140:                                              ; preds = %102
  %141 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %85, i64 0, i32 8
  %142 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %85, i64 0, i32 9
  %143 = call dereferenceable(3) %"class.blink::CSSValue"* @_ZN5blink21StyleBuilderConverter30ConvertRegisteredPropertyValueERKNS_18StyleResolverStateERKNS_8CSSValueERKN3WTF6StringERKNS7_12TextEncodingE(%"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* nonnull dereferenceable(3) %129, %"class.WTF::String"* dereferenceable(8) %141, %"class.WTF::TextEncoding"* dereferenceable(8) %142) #9
  %144 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %85, i64 0, i32 4
  %145 = load i8, i8* %144, align 8, !range !2
  %146 = icmp ne i8 %145, 0
  %147 = call %"class.blink::CSSVariableData"* @_ZN5blink21StyleBuilderConverter37ConvertRegisteredPropertyVariableDataERKNS_8CSSValueEb(%"class.blink::CSSValue"* dereferenceable(3) %143, i1 zeroext %146) #9
  %148 = ptrtoint %"class.blink::CSSVariableData"* %147 to i64
  br i1 %87, label %156, label %149

149:                                              ; preds = %140
  %150 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %85, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %150) #9
  %151 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %156

154:                                              ; preds = %149
  call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %85) #9
  %155 = bitcast %"class.blink::CSSVariableData"* %85 to i8*
  call void @free(i8* %155) #9
  br label %156

156:                                              ; preds = %140, %149, %154
  %157 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %97, align 8
  %158 = icmp eq %"class.blink::CSSVariableData"* %147, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %147, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %160) #9
  br label %161

161:                                              ; preds = %156, %159
  call void @_ZN5blink13ComputedStyle15SetVariableDataERKN3WTF12AtomicStringE13scoped_refptrINS_15CSSVariableDataEEb(%"class.blink::ComputedStyle"* %157, %"class.WTF::AtomicString"* dereferenceable(8) %98, %"class.blink::CSSVariableData"* %147, i1 zeroext %58) #9
  %162 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %97, align 8
  call void @_ZN5blink13ComputedStyle16SetVariableValueERKN3WTF12AtomicStringEPKNS_8CSSValueEb(%"class.blink::ComputedStyle"* %162, %"class.WTF::AtomicString"* dereferenceable(8) %98, %"class.blink::CSSValue"* %143, i1 zeroext %58) #9
  br label %163

163:                                              ; preds = %134, %137, %161
  %164 = phi i64 [ %86, %134 ], [ %86, %137 ], [ %148, %161 ]
  %165 = inttoptr i64 %164 to %"class.blink::CSSVariableData"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %109) #9
  br label %166

166:                                              ; preds = %95, %163
  %167 = phi %"class.blink::CSSVariableData"* [ %165, %163 ], [ %85, %95 ]
  %168 = icmp eq %"class.blink::CSSVariableData"* %167, null
  br i1 %168, label %176, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %167, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %170) #9
  %171 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %167, i64 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %169
  call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %167) #9
  %175 = bitcast %"class.blink::CSSVariableData"* %167 to i8*
  call void @free(i8* %175) #9
  br label %176

176:                                              ; preds = %39, %49, %70, %77, %33, %36, %166, %169, %174
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14CustomProperty25SupportsGuaranteedInvalidEv(%"class.blink::CustomProperty"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %2, align 8
  %4 = icmp eq %"class.blink::PropertyRegistration"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %3, i64 0, i32 0, i32 0
  %11 = tail call dereferenceable(24) %"class.blink::CSSSyntaxComponent"* @_ZNK3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 0) #9
  %12 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br label %15

15:                                               ; preds = %1, %9, %5
  %16 = phi i1 [ true, %1 ], [ false, %5 ], [ %14, %9 ]
  ret i1 %16
}

declare %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32) local_unnamed_addr #1

declare void @_ZN5blink21CSSParserLocalContextC1Ev(%"class.blink::CSSParserLocalContext"*) unnamed_addr #1

declare { i64, i32 } @_ZNK5blink21CSSParserLocalContext16WithVariableModeENS0_12VariableModeE(%"class.blink::CSSParserLocalContext"*, i32) local_unnamed_addr #1

declare dereferenceable(3) %"class.blink::CSSValue"* @_ZN5blink21StyleBuilderConverter30ConvertRegisteredPropertyValueERKNS_18StyleResolverStateERKNS_8CSSValueERKN3WTF6StringERKNS7_12TextEncodingE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3), %"class.WTF::String"* dereferenceable(8), %"class.WTF::TextEncoding"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::CSSVariableData"* @_ZN5blink21StyleBuilderConverter37ConvertRegisteredPropertyVariableDataERKNS_8CSSValueEb(%"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink14CustomProperty16ParseSingleValueERNS_19CSSParserTokenRangeERKNS_16CSSParserContextERKNS_21CSSParserLocalContextE(%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"* nocapture readonly dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), %"class.blink::CSSParserLocalContext"* dereferenceable(12)) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::CSSTokenizedValue", align 16
  %6 = alloca %"struct.blink::CSSTokenizedValue", align 16
  %7 = alloca %"struct.blink::CSSTokenizedValue", align 8
  %8 = tail call i32 @_ZNK5blink21CSSParserLocalContext15GetVariableModeEv(%"class.blink::CSSParserLocalContext"* %3) #9
  switch i32 %8, label %75 [
    i32 0, label %9
    i32 1, label %34
    i32 2, label %48
  ]

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %11 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %13 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %14, align 8
  %16 = icmp eq %"class.blink::PropertyRegistration"* %15, null
  br i1 %16, label %17, label %30

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  %19 = bitcast %"struct.blink::CSSTokenizedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 0, i32 0
  store %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"** %20, align 8
  %21 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 0, i32 1
  store %"class.blink::CSSParserToken"* %13, %"class.blink::CSSParserToken"** %21, align 8
  %22 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 1, i32 2
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 1, i32 1
  store i8* null, i8** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = tail call zeroext i1 @_ZNK5blink21CSSParserLocalContext18IsAnimationTaintedEv(%"class.blink::CSSParserLocalContext"* %3) #9
  %28 = call %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* dereferenceable(8) %18, %"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %7, i1 zeroext %27, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #9
  %29 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %28, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #9
  br label %76

30:                                               ; preds = %9
  %31 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %15, i64 0, i32 0
  %32 = tail call zeroext i1 @_ZNK5blink21CSSParserLocalContext18IsAnimationTaintedEv(%"class.blink::CSSParserLocalContext"* %3) #9
  %33 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSSyntaxDefinition5ParseENS_19CSSParserTokenRangeERKNS_16CSSParserContextEb(%"class.blink::CSSSyntaxDefinition"* %31, %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"* %13, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i1 zeroext %32) #9
  br label %76

34:                                               ; preds = %4
  %35 = bitcast %"class.blink::CSSParserTokenRange"* %1 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  %37 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  %38 = bitcast %"struct.blink::CSSTokenizedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #9
  %39 = bitcast %"struct.blink::CSSTokenizedValue"* %6 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %39, align 16
  %40 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 1, i32 2
  store i32 0, i32* %41, align 16
  %42 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 1, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %40 to i64*
  store i64 %43, i64* %44, align 16
  %45 = tail call zeroext i1 @_ZNK5blink21CSSParserLocalContext18IsAnimationTaintedEv(%"class.blink::CSSParserLocalContext"* %3) #9
  %46 = call %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* dereferenceable(8) %37, %"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %6, i1 zeroext %45, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #9
  %47 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %46, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #9
  br label %76

48:                                               ; preds = %4
  %49 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %49, align 8
  %51 = icmp eq %"class.blink::PropertyRegistration"* %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %54 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %56 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %50, i64 0, i32 0
  %58 = tail call zeroext i1 @_ZNK5blink21CSSParserLocalContext18IsAnimationTaintedEv(%"class.blink::CSSParserLocalContext"* %3) #9
  %59 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSSyntaxDefinition5ParseENS_19CSSParserTokenRangeERKNS_16CSSParserContextEb(%"class.blink::CSSSyntaxDefinition"* %57, %"class.blink::CSSParserToken"* %56, %"class.blink::CSSParserToken"* %54, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i1 zeroext %58) #9
  %60 = icmp eq %"class.blink::CSSValue"* %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %52
  %62 = bitcast %"class.blink::CSSParserTokenRange"* %1 to <2 x i64>*
  %63 = load <2 x i64>, <2 x i64>* %62, align 8
  %64 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  %65 = bitcast %"struct.blink::CSSTokenizedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #9
  %66 = bitcast %"struct.blink::CSSTokenizedValue"* %5 to <2 x i64>*
  store <2 x i64> %63, <2 x i64>* %66, align 16
  %67 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %5, i64 0, i32 1
  %68 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %5, i64 0, i32 1, i32 2
  store i32 0, i32* %68, align 16
  %69 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %5, i64 0, i32 1, i32 1
  store i8* null, i8** %69, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %67 to i64*
  store i64 %70, i64* %71, align 16
  %72 = call zeroext i1 @_ZNK5blink21CSSParserLocalContext18IsAnimationTaintedEv(%"class.blink::CSSParserLocalContext"* %3) #9
  %73 = call %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* dereferenceable(8) %64, %"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %5, i1 zeroext %72, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #9
  %74 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %73, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #9
  br label %76

75:                                               ; preds = %4
  unreachable

76:                                               ; preds = %30, %17, %52, %61, %34
  %77 = phi %"class.blink::CSSValue"* [ %74, %61 ], [ %47, %34 ], [ null, %52 ], [ %33, %30 ], [ %29, %17 ]
  ret %"class.blink::CSSValue"* %77
}

declare i32 @_ZNK5blink21CSSParserLocalContext15GetVariableModeEv(%"class.blink::CSSParserLocalContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink14CustomProperty10ParseTypedENS_19CSSParserTokenRangeERKNS_16CSSParserContextERKNS_21CSSParserLocalContextE(%"class.blink::CustomProperty"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserContext"* dereferenceable(176), %"class.blink::CSSParserLocalContext"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::CSSTokenizedValue", align 8
  %7 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %7, align 8
  %9 = icmp eq %"class.blink::PropertyRegistration"* %8, null
  br i1 %9, label %10, label %23

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  %12 = bitcast %"struct.blink::CSSTokenizedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 0, i32 0
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %13, align 8
  %14 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 0, i32 1
  store %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserToken"** %14, align 8
  %15 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 1, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 1, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %18, i64* %19, align 8
  %20 = tail call zeroext i1 @_ZNK5blink21CSSParserLocalContext18IsAnimationTaintedEv(%"class.blink::CSSParserLocalContext"* %4) #9
  %21 = call %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* dereferenceable(8) %11, %"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %6, i1 zeroext %20, %"class.blink::CSSParserContext"* dereferenceable(176) %3) #9
  %22 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %21, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  br label %27

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %8, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZNK5blink21CSSParserLocalContext18IsAnimationTaintedEv(%"class.blink::CSSParserLocalContext"* %4) #9
  %26 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSSyntaxDefinition5ParseENS_19CSSParserTokenRangeERKNS_16CSSParserContextEb(%"class.blink::CSSSyntaxDefinition"* %24, %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserContext"* dereferenceable(176) %3, i1 zeroext %25) #9
  br label %27

27:                                               ; preds = %23, %10
  %28 = phi %"class.blink::CSSValue"* [ %26, %23 ], [ %22, %10 ]
  ret %"class.blink::CSSValue"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink14CustomProperty12ParseUntypedENS_19CSSParserTokenRangeERKNS_16CSSParserContextERKNS_21CSSParserLocalContextE(%"class.blink::CustomProperty"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserContext"* dereferenceable(176), %"class.blink::CSSParserLocalContext"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::CSSTokenizedValue", align 8
  %7 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  %8 = bitcast %"struct.blink::CSSTokenizedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 0, i32 0
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %9, align 8
  %10 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 0, i32 1
  store %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserToken"** %10, align 8
  %11 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 1, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %6, i64 0, i32 1, i32 1
  store i8* null, i8** %13, align 8
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = tail call zeroext i1 @_ZNK5blink21CSSParserLocalContext18IsAnimationTaintedEv(%"class.blink::CSSParserLocalContext"* %4) #9
  %17 = call %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* dereferenceable(8) %7, %"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %6, i1 zeroext %16, %"class.blink::CSSParserContext"* dereferenceable(176) %3) #9
  %18 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %17, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #9
  ret %"class.blink::CSSValue"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink14CustomProperty33CSSValueFromComputedStyleInternalERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CustomProperty"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutObject"* nocapture readnone, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %5, align 8
  %7 = icmp eq %"class.blink::PropertyRegistration"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 64
  %13 = icmp ne i32 %12, 0
  %14 = tail call %"class.blink::CSSValue"* @_ZNK5blink13ComputedStyle16GetVariableValueERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %9, i1 zeroext %13) #9
  %15 = icmp eq %"class.blink::CSSValue"* %14, null
  br i1 %15, label %16, label %64

16:                                               ; preds = %4, %8
  %17 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 64
  %21 = icmp ne i32 %20, 0
  %22 = tail call %"class.blink::CSSVariableData"* @_ZNK5blink13ComputedStyle15GetVariableDataERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %17, i1 zeroext %21) #9
  %23 = icmp eq %"class.blink::CSSVariableData"* %22, null
  br i1 %23, label %64, label %24

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64 32) #9
  %26 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %26) #9
  %27 = ptrtoint %"class.blink::CSSVariableData"* %22 to i64
  store i8 0, i8* %25, align 1
  %28 = getelementptr inbounds i8, i8* %25, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = and i8 %29, -8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds i8, i8* %25, i64 2
  store i8 43, i8* %31, align 1
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds i8, i8* %25, i64 8
  %35 = bitcast i8* %34 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #9
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %42
  tail call void @llvm.trap() #9
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %24, %37, %52
  %55 = getelementptr inbounds i8, i8* %25, i64 16
  %56 = bitcast i8* %55 to i64*
  store i64 %27, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %25, i64 24
  %58 = bitcast i8* %57 to i32*
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %25, i64 -4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = or i16 %61, 1
  store atomic i16 %62, i16* %60 release, align 2
  %63 = bitcast i8* %25 to %"class.blink::CSSValue"*
  br label %64

64:                                               ; preds = %54, %16, %8
  %65 = phi %"class.blink::CSSValue"* [ %14, %8 ], [ %63, %54 ], [ null, %16 ]
  ret %"class.blink::CSSValue"* %65
}

declare %"class.blink::CSSValue"* @_ZNK5blink13ComputedStyle16GetVariableValueERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

declare %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* dereferenceable(8), %"struct.blink::CSSTokenizedValue"* dereferenceable(40), i1 zeroext, %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink21CSSParserLocalContext18IsAnimationTaintedEv(%"class.blink::CSSParserLocalContext"*) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSSyntaxDefinition5ParseENS_19CSSParserTokenRangeERKNS_16CSSParserContextEb(%"class.blink::CSSSyntaxDefinition"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserContext"* dereferenceable(176), i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14CustomProperty15HasInitialValueEv(%"class.blink::CustomProperty"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %2, align 8
  %4 = icmp eq %"class.blink::PropertyRegistration"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %3, i64 0, i32 4, i32 0
  %7 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %6, align 8
  %8 = icmp ne %"class.blink::CSSVariableData"* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ %8, %5 ], [ false, %1 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21CSSUnresolvedProperty8ExposureEv(%"class.blink::CSSUnresolvedProperty"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21CSSUnresolvedProperty8ExposureEPKNS_16ExecutionContextE(%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::CSSUnresolvedProperty"* %0 to i32 (%"class.blink::CSSUnresolvedProperty"*)***
  %4 = load i32 (%"class.blink::CSSUnresolvedProperty"*)**, i32 (%"class.blink::CSSUnresolvedProperty"*)*** %3, align 8
  %5 = load i32 (%"class.blink::CSSUnresolvedProperty"*)*, i32 (%"class.blink::CSSUnresolvedProperty"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::CSSUnresolvedProperty"* %0) #9
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty18IsResolvedPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink8Variable15GetPropertyNameEv(%"class.blink::Variable"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink21CSSUnresolvedProperty17GetJSPropertyNameEv(%"class.blink::CSSUnresolvedProperty"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Variable15IsAffectedByAllEv(%"class.blink::Variable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty25IsLayoutDependentPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty17IsLayoutDependentEPKNS_13ComputedStyleEPNS_12LayoutObjectE(%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty29ResolveDirectionAwarePropertyENS_13TextDirectionENS_11WritingModeE(%"class.blink::CSSProperty"*, i8 zeroext, i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty53IsInSameLogicalPropertyGroupWithDifferentMappingLogicENS_13CSSPropertyIDE(%"class.blink::CSSProperty"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty18GetVisitedPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty20GetUnvisitedPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty12SurrogateForENS_13TextDirectionENS_11WritingModeE(%"class.blink::CSSProperty"*, i8 zeroext, i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8Longhand10ApplyValueERNS_18StyleResolverStateERKNS_14ScopedCSSValueE(%"class.blink::Longhand"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::ScopedCSSValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %2, i64 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = bitcast %"class.blink::Longhand"* %0 to void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)***
  %7 = load void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)**, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)*, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)** %7, i64 20
  %9 = load void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)*, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)** %8, align 8
  tail call void %9(%"class.blink::Longhand"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8Longhand22ColorIncludingFallbackEbRKNS_13ComputedStyleE(%"class.blink::Longhand"*, i1 zeroext, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink8Longhand12InitialValueEv(%"class.blink::Longhand"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call %"class.blink::CSSInitialValue"* @_ZN5blink15CSSInitialValue6CreateEv() #9
  %3 = getelementptr inbounds %"class.blink::CSSInitialValue", %"class.blink::CSSInitialValue"* %2, i64 0, i32 0
  ret %"class.blink::CSSValue"* %3
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSSyntaxComponent"* @_ZNK3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %24, i64 %25
  ret %"class.blink::CSSSyntaxComponent"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare %"class.blink::CSSInitialValue"* @_ZN5blink15CSSInitialValue6CreateEv() local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #9
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !4

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #9
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !4

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !3

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #9
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.6"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #9
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #9
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
