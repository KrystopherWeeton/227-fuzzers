; ModuleID = '../../ui/base/pointer/pointer_device_linux.cc'
source_filename = "../../ui/base/pointer/pointer_device_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::DeviceDataManager" = type { %"class.ui::DeviceHotplugEventObserver", %"class.std::__1::vector", %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.6", i8, [7 x i8], %"class.base::ObserverList", i8, i8, %"class.base::flat_map" }
%"class.ui::DeviceHotplugEventObserver" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"*, %"class.std::__1::__compressed_pair.1" }
%"struct.ui::TouchscreenDevice" = type { %"struct.ui::InputDevice.base", %"class.gfx::Size", i32, i8, i8, i64 }
%"struct.ui::InputDevice.base" = type <{ i32 (...)**, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8], %"class.base::FilePath", i16, i16, i16 }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.ui::TouchscreenDevice"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"*, %"class.std::__1::__compressed_pair.8" }
%"struct.ui::InputDevice" = type <{ i32 (...)**, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8], %"class.base::FilePath", i16, i16, i16, [2 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.ui::InputDevice"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.13", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.15" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.22" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::pair"* }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui24GetAvailablePointerTypesEv() local_unnamed_addr #0 {
  %1 = tail call %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() #3
  %2 = tail call dereferenceable(24) %"class.std::__1::vector.6"* @_ZNK2ui17DeviceDataManager18GetTouchpadDevicesEv(%"class.ui::DeviceDataManager"* %1) #3
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 1
  %6 = load %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"** %5, align 8
  %7 = icmp eq %"struct.ui::InputDevice"* %4, %6
  br i1 %7, label %16, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"struct.ui::InputDevice"* %15, %6
  br i1 %9, label %16, label %10

10:                                               ; preds = %0, %8
  %11 = phi %"struct.ui::InputDevice"* [ %15, %8 ], [ %4, %0 ]
  %12 = getelementptr inbounds %"struct.ui::InputDevice", %"struct.ui::InputDevice"* %11, i64 0, i32 5
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"struct.ui::InputDevice", %"struct.ui::InputDevice"* %11, i64 1
  br i1 %14, label %8, label %31

16:                                               ; preds = %8, %0
  %17 = tail call dereferenceable(24) %"class.std::__1::vector.6"* @_ZNK2ui17DeviceDataManager15GetMouseDevicesEv(%"class.ui::DeviceDataManager"* %1) #3
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %17, i64 0, i32 0, i32 0
  %19 = load %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %17, i64 0, i32 0, i32 1
  %21 = load %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"** %20, align 8
  %22 = icmp eq %"struct.ui::InputDevice"* %19, %21
  br i1 %22, label %31, label %25

23:                                               ; preds = %25
  %24 = icmp eq %"struct.ui::InputDevice"* %30, %21
  br i1 %24, label %31, label %25

25:                                               ; preds = %16, %23
  %26 = phi %"struct.ui::InputDevice"* [ %30, %23 ], [ %19, %16 ]
  %27 = getelementptr inbounds %"struct.ui::InputDevice", %"struct.ui::InputDevice"* %26, i64 0, i32 5
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = getelementptr inbounds %"struct.ui::InputDevice", %"struct.ui::InputDevice"* %26, i64 1
  br i1 %29, label %23, label %31

31:                                               ; preds = %10, %25, %23, %16
  %32 = phi i32 [ 0, %16 ], [ 4, %25 ], [ 0, %23 ], [ 4, %10 ]
  %33 = tail call %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() #3
  %34 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK2ui17DeviceDataManager21GetTouchscreenDevicesEv(%"class.ui::DeviceDataManager"* %33) #3
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 0, i32 0, i32 0
  %36 = load %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 0, i32 0, i32 1
  %38 = load %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"** %37, align 8
  %39 = icmp eq %"struct.ui::TouchscreenDevice"* %36, %38
  %40 = or i32 %32, 2
  %41 = select i1 %39, i32 %32, i32 %40
  %42 = icmp eq i32 %41, 0
  %43 = select i1 %42, i32 1, i32 %41
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui22GetAvailableHoverTypesEv() local_unnamed_addr #0 {
  %1 = tail call %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() #3
  %2 = tail call dereferenceable(24) %"class.std::__1::vector.6"* @_ZNK2ui17DeviceDataManager18GetTouchpadDevicesEv(%"class.ui::DeviceDataManager"* %1) #3
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 1
  %6 = load %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"** %5, align 8
  %7 = icmp eq %"struct.ui::InputDevice"* %4, %6
  br i1 %7, label %16, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"struct.ui::InputDevice"* %15, %6
  br i1 %9, label %16, label %10

10:                                               ; preds = %0, %8
  %11 = phi %"struct.ui::InputDevice"* [ %15, %8 ], [ %4, %0 ]
  %12 = getelementptr inbounds %"struct.ui::InputDevice", %"struct.ui::InputDevice"* %11, i64 0, i32 5
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"struct.ui::InputDevice", %"struct.ui::InputDevice"* %11, i64 1
  br i1 %14, label %8, label %31

16:                                               ; preds = %8, %0
  %17 = tail call dereferenceable(24) %"class.std::__1::vector.6"* @_ZNK2ui17DeviceDataManager15GetMouseDevicesEv(%"class.ui::DeviceDataManager"* %1) #3
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %17, i64 0, i32 0, i32 0
  %19 = load %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %17, i64 0, i32 0, i32 1
  %21 = load %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"** %20, align 8
  %22 = icmp eq %"struct.ui::InputDevice"* %19, %21
  br i1 %22, label %31, label %25

23:                                               ; preds = %25
  %24 = icmp eq %"struct.ui::InputDevice"* %30, %21
  br i1 %24, label %31, label %25

25:                                               ; preds = %16, %23
  %26 = phi %"struct.ui::InputDevice"* [ %30, %23 ], [ %19, %16 ]
  %27 = getelementptr inbounds %"struct.ui::InputDevice", %"struct.ui::InputDevice"* %26, i64 0, i32 5
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = getelementptr inbounds %"struct.ui::InputDevice", %"struct.ui::InputDevice"* %26, i64 1
  br i1 %29, label %23, label %31

31:                                               ; preds = %10, %25, %23, %16
  %32 = phi i32 [ 1, %16 ], [ 2, %25 ], [ 1, %23 ], [ 2, %10 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui27GetTouchScreensAvailabilityEv() local_unnamed_addr #0 {
  %1 = tail call %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() #3
  %2 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK2ui17DeviceDataManager21GetTouchscreenDevicesEv(%"class.ui::DeviceDataManager"* %1) #3
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %6 = load %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"** %5, align 8
  %7 = icmp eq %"struct.ui::TouchscreenDevice"* %4, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %0
  %9 = tail call %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() #3
  %10 = tail call zeroext i1 @_ZNK2ui17DeviceDataManager22AreTouchscreensEnabledEv(%"class.ui::DeviceDataManager"* %9) #3
  %11 = select i1 %10, i32 1, i32 2
  br label %12

12:                                               ; preds = %0, %8
  %13 = phi i32 [ %11, %8 ], [ 0, %0 ]
  ret i32 %13
}

declare %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui17DeviceDataManager22AreTouchscreensEnabledEv(%"class.ui::DeviceDataManager"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui14MaxTouchPointsEv() local_unnamed_addr #0 {
  %1 = tail call %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() #3
  %2 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK2ui17DeviceDataManager21GetTouchscreenDevicesEv(%"class.ui::DeviceDataManager"* %1) #3
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %6 = load %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"** %5, align 8
  %7 = icmp eq %"struct.ui::TouchscreenDevice"* %4, %6
  br i1 %7, label %35, label %8

8:                                                ; preds = %0
  %9 = ptrtoint %"struct.ui::TouchscreenDevice"* %4 to i64
  %10 = getelementptr %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %6, i64 -1, i32 0, i32 0
  %11 = ptrtoint i32 (...)*** %10 to i64
  %12 = sub i64 %11, %9
  %13 = lshr i64 %12, 7
  %14 = add nuw nsw i64 %13, 1
  %15 = and i64 %14, 7
  %16 = icmp ult i64 %12, 896
  br i1 %16, label %19, label %17

17:                                               ; preds = %8
  %18 = sub nsw i64 %14, %15
  br label %37

19:                                               ; preds = %37, %8
  %20 = phi i32 [ undef, %8 ], [ %72, %37 ]
  %21 = phi i32 [ 0, %8 ], [ %72, %37 ]
  %22 = phi %"struct.ui::TouchscreenDevice"* [ %4, %8 ], [ %73, %37 ]
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %19, %24
  %25 = phi i32 [ %31, %24 ], [ %21, %19 ]
  %26 = phi %"struct.ui::TouchscreenDevice"* [ %32, %24 ], [ %22, %19 ]
  %27 = phi i64 [ %33, %24 ], [ %15, %19 ]
  %28 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %26, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, %25
  %31 = select i1 %30, i32 %29, i32 %25
  %32 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %26, i64 1
  %33 = add i64 %27, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %24, !llvm.loop !3

35:                                               ; preds = %19, %24, %0
  %36 = phi i32 [ 0, %0 ], [ %20, %19 ], [ %31, %24 ]
  ret i32 %36

37:                                               ; preds = %37, %17
  %38 = phi i32 [ 0, %17 ], [ %72, %37 ]
  %39 = phi %"struct.ui::TouchscreenDevice"* [ %4, %17 ], [ %73, %37 ]
  %40 = phi i64 [ %18, %17 ], [ %74, %37 ]
  %41 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %39, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, %38
  %44 = select i1 %43, i32 %42, i32 %38
  %45 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %39, i64 1, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, %44
  %48 = select i1 %47, i32 %46, i32 %44
  %49 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %39, i64 2, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, %48
  %52 = select i1 %51, i32 %50, i32 %48
  %53 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %39, i64 3, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp sgt i32 %54, %52
  %56 = select i1 %55, i32 %54, i32 %52
  %57 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %39, i64 4, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = icmp sgt i32 %58, %56
  %60 = select i1 %59, i32 %58, i32 %56
  %61 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %39, i64 5, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp sgt i32 %62, %60
  %64 = select i1 %63, i32 %62, i32 %60
  %65 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %39, i64 6, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = icmp sgt i32 %66, %64
  %68 = select i1 %67, i32 %66, i32 %64
  %69 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %39, i64 7, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = icmp sgt i32 %70, %68
  %72 = select i1 %71, i32 %70, i32 %68
  %73 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %39, i64 8
  %74 = add i64 %40, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %19, label %37
}

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK2ui17DeviceDataManager21GetTouchscreenDevicesEv(%"class.ui::DeviceDataManager"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2ui21GetPrimaryPointerTypeEi(i32) local_unnamed_addr #2 {
  %2 = and i32 %0, 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = and i32 %0, 2
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 1, i32 2
  br label %8

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 4, %1 ], [ %7, %4 ]
  ret i32 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2ui19GetPrimaryHoverTypeEi(i32) local_unnamed_addr #2 {
  %2 = and i32 %0, 2
  %3 = icmp eq i32 %2, 0
  %4 = select i1 %3, i32 1, i32 2
  ret i32 %4
}

declare dereferenceable(24) %"class.std::__1::vector.6"* @_ZNK2ui17DeviceDataManager18GetTouchpadDevicesEv(%"class.ui::DeviceDataManager"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector.6"* @_ZNK2ui17DeviceDataManager15GetMouseDevicesEv(%"class.ui::DeviceDataManager"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
