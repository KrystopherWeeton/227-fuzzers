; ModuleID = '../../media/learning/impl/random_number_generator.cc'
source_filename = "../../media/learning/impl/random_number_generator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.media::BaseRandomNumberGenerator" = type { %"class.media::RandomNumberGenerator" }
%"class.media::RandomNumberGenerator" = type { i32 (...)** }
%"class.media::HasRandomNumberGenerator" = type { %"class.media::RandomNumberGenerator"* }

$_ZN5media21RandomNumberGeneratorD2Ev = comdat any

$_ZN5media25BaseRandomNumberGeneratorD0Ev = comdat any

$_ZN5media25BaseRandomNumberGenerator8GenerateEv = comdat any

$_ZTVN5media25BaseRandomNumberGeneratorE = comdat any

@_ZZN5media21RandomNumberGenerator7DefaultEvE3rng = internal unnamed_addr global %"class.media::BaseRandomNumberGenerator"* null, align 8
@_ZTVN5media25BaseRandomNumberGeneratorE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::RandomNumberGenerator"*)* @_ZN5media21RandomNumberGeneratorD2Ev to i8*), i8* bitcast (void (%"class.media::BaseRandomNumberGenerator"*)* @_ZN5media25BaseRandomNumberGeneratorD0Ev to i8*), i8* bitcast (i64 (%"class.media::BaseRandomNumberGenerator"*)* @_ZN5media25BaseRandomNumberGenerator8GenerateEv to i8*)] }, comdat, align 8

@_ZN5media24HasRandomNumberGeneratorC1EPNS_21RandomNumberGeneratorE = hidden unnamed_addr alias void (%"class.media::HasRandomNumberGenerator"*, %"class.media::RandomNumberGenerator"*), void (%"class.media::HasRandomNumberGenerator"*, %"class.media::RandomNumberGenerator"*)* @_ZN5media24HasRandomNumberGeneratorC2EPNS_21RandomNumberGeneratorE
@_ZN5media24HasRandomNumberGeneratorD1Ev = hidden unnamed_addr alias void (%"class.media::HasRandomNumberGenerator"*), void (%"class.media::HasRandomNumberGenerator"*)* @_ZN5media24HasRandomNumberGeneratorD2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.media::RandomNumberGenerator"* @_ZN5media21RandomNumberGenerator7DefaultEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.media::BaseRandomNumberGenerator"*, %"class.media::BaseRandomNumberGenerator"** @_ZZN5media21RandomNumberGenerator7DefaultEvE3rng, align 8
  %2 = icmp eq %"class.media::BaseRandomNumberGenerator"* %1, null
  %3 = getelementptr inbounds %"class.media::BaseRandomNumberGenerator", %"class.media::BaseRandomNumberGenerator"* %1, i64 0, i32 0
  br i1 %2, label %4, label %8

4:                                                ; preds = %0
  %5 = tail call i8* @_Znwm(i64 8) #7
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media25BaseRandomNumberGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i8* %5, i8** bitcast (%"class.media::BaseRandomNumberGenerator"** @_ZZN5media21RandomNumberGenerator7DefaultEvE3rng to i8**), align 8
  %7 = bitcast i8* %5 to %"class.media::RandomNumberGenerator"*
  br label %8

8:                                                ; preds = %0, %4
  %9 = phi %"class.media::RandomNumberGenerator"* [ %3, %0 ], [ %7, %4 ]
  ret %"class.media::RandomNumberGenerator"* %9
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media21RandomNumberGenerator8GenerateEm(%"class.media::RandomNumberGenerator"*, i64) local_unnamed_addr #2 align 2 {
  %3 = urem i64 -1, %1
  %4 = sub nuw i64 -2, %3
  %5 = bitcast %"class.media::RandomNumberGenerator"* %0 to i64 (%"class.media::RandomNumberGenerator"*)***
  br label %6

6:                                                ; preds = %6, %2
  %7 = load i64 (%"class.media::RandomNumberGenerator"*)**, i64 (%"class.media::RandomNumberGenerator"*)*** %5, align 8
  %8 = getelementptr inbounds i64 (%"class.media::RandomNumberGenerator"*)*, i64 (%"class.media::RandomNumberGenerator"*)** %7, i64 2
  %9 = load i64 (%"class.media::RandomNumberGenerator"*)*, i64 (%"class.media::RandomNumberGenerator"*)** %8, align 8
  %10 = tail call i64 %9(%"class.media::RandomNumberGenerator"* %0) #8
  %11 = icmp ugt i64 %10, %4
  br i1 %11, label %6, label %12

12:                                               ; preds = %6
  %13 = urem i64 %10, %1
  ret i64 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5media21RandomNumberGenerator14GenerateDoubleEd(%"class.media::RandomNumberGenerator"*, double) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.media::RandomNumberGenerator"* %0 to i64 (%"class.media::RandomNumberGenerator"*)***
  %4 = load i64 (%"class.media::RandomNumberGenerator"*)**, i64 (%"class.media::RandomNumberGenerator"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.media::RandomNumberGenerator"*)*, i64 (%"class.media::RandomNumberGenerator"*)** %4, i64 2
  %6 = load i64 (%"class.media::RandomNumberGenerator"*)*, i64 (%"class.media::RandomNumberGenerator"*)** %5, align 8
  %7 = tail call i64 %6(%"class.media::RandomNumberGenerator"* %0) #8
  %8 = tail call double @_ZN4base27BitsToOpenEndedUnitIntervalEm(i64 %7) #8
  %9 = fmul double %8, %1
  ret double %9
}

declare double @_ZN4base27BitsToOpenEndedUnitIntervalEm(i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5media24HasRandomNumberGeneratorC2EPNS_21RandomNumberGeneratorE(%"class.media::HasRandomNumberGenerator"* nocapture, %"class.media::RandomNumberGenerator"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::HasRandomNumberGenerator", %"class.media::HasRandomNumberGenerator"* %0, i64 0, i32 0
  %4 = icmp eq %"class.media::RandomNumberGenerator"* %1, null
  br i1 %4, label %5, label %13

5:                                                ; preds = %2
  %6 = load %"class.media::BaseRandomNumberGenerator"*, %"class.media::BaseRandomNumberGenerator"** @_ZZN5media21RandomNumberGenerator7DefaultEvE3rng, align 8
  %7 = icmp eq %"class.media::BaseRandomNumberGenerator"* %6, null
  %8 = getelementptr inbounds %"class.media::BaseRandomNumberGenerator", %"class.media::BaseRandomNumberGenerator"* %6, i64 0, i32 0
  br i1 %7, label %9, label %13

9:                                                ; preds = %5
  %10 = tail call i8* @_Znwm(i64 8) #7
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media25BaseRandomNumberGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  store i8* %10, i8** bitcast (%"class.media::BaseRandomNumberGenerator"** @_ZZN5media21RandomNumberGenerator7DefaultEvE3rng to i8**), align 8
  %12 = bitcast i8* %10 to %"class.media::RandomNumberGenerator"*
  br label %13

13:                                               ; preds = %9, %5, %2
  %14 = phi %"class.media::RandomNumberGenerator"* [ %1, %2 ], [ %8, %5 ], [ %12, %9 ]
  store %"class.media::RandomNumberGenerator"* %14, %"class.media::RandomNumberGenerator"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media24HasRandomNumberGeneratorD2Ev(%"class.media::HasRandomNumberGenerator"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media24HasRandomNumberGenerator34SetRandomNumberGeneratorForTestingEPNS_21RandomNumberGeneratorE(%"class.media::HasRandomNumberGenerator"* nocapture, %"class.media::RandomNumberGenerator"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.media::HasRandomNumberGenerator", %"class.media::HasRandomNumberGenerator"* %0, i64 0, i32 0
  store %"class.media::RandomNumberGenerator"* %1, %"class.media::RandomNumberGenerator"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media21RandomNumberGeneratorD2Ev(%"class.media::RandomNumberGenerator"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media25BaseRandomNumberGeneratorD0Ev(%"class.media::BaseRandomNumberGenerator"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.media::BaseRandomNumberGenerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5media25BaseRandomNumberGenerator8GenerateEv(%"class.media::BaseRandomNumberGenerator"*) unnamed_addr #2 comdat align 2 {
  %2 = tail call i64 @_ZN4base10RandUint64Ev() #8
  ret i64 %2
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i64 @_ZN4base10RandUint64Ev() local_unnamed_addr #3

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
