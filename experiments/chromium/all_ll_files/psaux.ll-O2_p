; ModuleID = '../../third_party/freetype/src/src/psaux/psaux.c'
source_filename = "../../third_party/freetype/src/src/psaux/psaux.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PS_TableRec_ = type { i8*, i64, i64, i64, i32, i32, i8**, i32*, %struct.FT_MemoryRec_*, %struct.PS_Table_FuncsRec_ }
%struct.PS_Table_FuncsRec_ = type { {}*, void (%struct.PS_TableRec_*)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, void (%struct.PS_TableRec_*)* }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.PS_ParserRec_ = type { i8*, i8*, i8*, i32, %struct.FT_MemoryRec_*, %struct.PS_Parser_FuncsRec_ }
%struct.PS_Parser_FuncsRec_ = type { {}*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*, i32)*, i32 (%struct.PS_ParserRec_*, i8*, i64, i64*, i8)*, i32 (%struct.PS_ParserRec_*, i32, i16*)*, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)* }
%struct.T1_TokenRec_ = type { i8*, i8*, i32 }
%struct.T1_FieldRec_ = type { i8*, i32, i32, void (%struct.FT_FaceRec_*, i8*)*, i32, i8, i32, i32, i32 }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.PS_Builder_ = type { %struct.FT_MemoryRec_*, %struct.FT_FaceRec_*, %struct.CFF_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64*, i64*, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_BBox_*, i8, i8, i8, i8, i8, %struct.PS_Builder_FuncsRec_ }
%struct.CFF_GlyphSlotRec_ = type { %struct.FT_GlyphSlotRec_, i8, i8, i64, i64 }
%struct.PS_Builder_FuncsRec_ = type { {}*, void (%struct.PS_Builder_*)* }
%struct.T1_BuilderRec_ = type { %struct.FT_MemoryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64, i64, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_BBox_, i32, i8, i8, i8, i8*, i8*, %struct.T1_Builder_FuncsRec_ }
%struct.T1_Builder_FuncsRec_ = type { {}*, void (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i32)*, void (%struct.T1_BuilderRec_*, i64, i64, i8)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, i32 (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, void (%struct.T1_BuilderRec_*)* }
%struct.T1_DecoderRec_ = type { %struct.T1_BuilderRec_, [512 x i64], i64*, [17 x %struct.T1_Decoder_ZoneRec_], %struct.T1_Decoder_ZoneRec_*, %struct.FT_Service_PsCMapsRec_*, i32, i8**, i32, i32, i8**, i32*, %struct.FT_HashRec_*, %struct.FT_Matrix_, %struct.FT_Vector_, i32, i32, [7 x %struct.FT_Vector_], %struct.PS_BlendRec_*, i32, i32 (%struct.T1_DecoderRec_*, i32)*, %struct.T1_Decoder_FuncsRec_, i64*, i32, i8, %struct.FT_Generic_ }
%struct.T1_Decoder_ZoneRec_ = type { i8*, i8*, i8* }
%struct.FT_Service_PsCMapsRec_ = type { i32 (i8*)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)*, i32 (%struct.PS_UnicodesRec_*, i32)*, i32 (%struct.PS_UnicodesRec_*, i32*)*, i8* (i32)*, i8* (i32)*, i16*, i16* }
%struct.PS_UnicodesRec_ = type { %struct.FT_CMapRec_, i32, %struct.PS_UniMap_* }
%struct.FT_CMapRec_ = type { %struct.FT_CharMapRec_, %struct.FT_CMap_ClassRec_* }
%struct.FT_CMap_ClassRec_ = type { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }
%struct.PS_UniMap_ = type { i32, i32 }
%struct.FT_HashRec_ = type { i32, i32, i32, i64 (%union.FT_Hashkey_*)*, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)*, %struct.FT_HashnodeRec_** }
%union.FT_Hashkey_ = type { i8* }
%struct.FT_HashnodeRec_ = type { %union.FT_Hashkey_, i64 }
%struct.T1_Decoder_FuncsRec_ = type { {}*, void (%struct.T1_DecoderRec_*)*, i32 (%struct.T1_DecoderRec_*, i8*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* }
%struct.PS_BlendRec_ = type { i32, i32, [4 x i8*], [16 x i64*], [4 x %struct.PS_DesignMap_], i64*, i64*, [17 x %struct.PS_FontInfoRec_*], [17 x %struct.PS_PrivateRec_*], i64, [17 x %struct.FT_BBox_*], [16 x i32], i32 }
%struct.PS_DesignMap_ = type { i8, i64*, i64* }
%struct.PS_FontInfoRec_ = type { i8*, i8*, i8*, i8*, i8*, i64, i8, i16, i16 }
%struct.PS_PrivateRec_ = type { i32, i32, i8, i8, i8, i8, [14 x i16], [10 x i16], [14 x i16], [10 x i16], i64, i32, i32, [1 x i16], [1 x i16], i8, i8, i8, i8, [13 x i16], [13 x i16], i64, i64, i64, [2 x i16] }
%struct.PS_Decoder_ = type { %struct.PS_Builder_, [49 x i64], i64*, [17 x %struct.PS_Decoder_Zone_], %struct.PS_Decoder_Zone_*, i32, i32, [7 x %struct.FT_Vector_], %struct.CFF_FontRec_*, %struct.CFF_SubFontRec_*, %struct.FT_Generic_*, i64*, i8, i32, i32, i32, i32, i32, i8**, i8**, i8**, i32, i32, i8, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*, %struct.FT_Service_PsCMapsRec_*, i32, i32*, %struct.FT_HashRec_*, %struct.FT_Matrix_, %struct.FT_Vector_, %struct.PS_BlendRec_*, i64*, i32 }
%struct.PS_Decoder_Zone_ = type { i8*, i8*, i8* }
%struct.CFF_FontRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_StreamRec_*, %struct.FT_MemoryRec_*, i64, i32, i32, i8, i8, i8, i32, i8, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_EncodingRec_, %struct.CFF_CharsetRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, i8*, i8**, i32, i8**, i8*, i64, %struct.CFF_SubFontRec_, i32, [256 x %struct.CFF_SubFontRec_*], %struct.CFF_FDSelectRec_, %struct.PSHinter_Interface_*, %struct.FT_Service_PsCMapsRec_*, i8*, %struct.PS_FontInfoRec_*, i8*, i8*, %struct.FT_Generic_, %struct.CFF_VStoreRec_, %struct.PS_FontExtraRec_* }
%struct.CFF_EncodingRec_ = type { i32, i64, i32, [256 x i16], [256 x i16] }
%struct.CFF_CharsetRec_ = type { i32, i64, i16*, i16*, i32, i32 }
%struct.CFF_IndexRec_ = type { %struct.FT_StreamRec_*, i64, i32, i32, i8, i64, i64, i64*, i8* }
%struct.CFF_SubFontRec_ = type { %struct.CFF_FontRecDictRec_, %struct.CFF_PrivateRec_, %struct.CFF_BlendRec_, i32, i64*, i8*, i8*, i32, i32, %struct.CFF_IndexRec_, i8**, i32 }
%struct.CFF_FontRecDictRec_ = type { i32, i32, i32, i32, i32, i32, i8, i64, i64, i64, i32, i32, %struct.FT_Matrix_, i8, i64, %struct.FT_Vector_, i64, %struct.FT_BBox_, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i16, i16, i64, i32 }
%struct.CFF_PrivateRec_ = type { i8, i8, i8, i8, [14 x i64], [10 x i64], [14 x i64], [10 x i64], i64, i64, i64, i64, i64, i8, i8, [13 x i64], [13 x i64], i8, i64, i32, i32, i64, i64, i64, i64, i64, i32, %struct.CFF_SubFontRec_* }
%struct.CFF_BlendRec_ = type { i8, i8, %struct.CFF_FontRec_*, i32, i32, i64*, i32, i32* }
%struct.CFF_FDSelectRec_ = type { i8, i32, i8*, i32, i32, i32, i8 }
%struct.PSHinter_Interface_ = type { %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T1_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T2_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)* }
%struct.PSH_Globals_FuncsRec_ = type { i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)*, void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)*, void (%struct.PSH_GlobalsRec_*)* }
%struct.PSH_GlobalsRec_ = type opaque
%struct.T1_Hints_FuncsRec_ = type { %struct.T1_HintsRec_*, void (%struct.T1_HintsRec_*)*, i32 (%struct.T1_HintsRec_*, i32)*, void (%struct.T1_HintsRec_*, i32, i64*)*, void (%struct.T1_HintsRec_*, i32, i64*)*, void (%struct.T1_HintsRec_*, i32)*, i32 (%struct.T1_HintsRec_*, %struct.FT_Outline_*, %struct.PSH_GlobalsRec_*, i32)* }
%struct.T1_HintsRec_ = type opaque
%struct.T2_Hints_FuncsRec_ = type { %struct.T2_HintsRec_*, void (%struct.T2_HintsRec_*)*, i32 (%struct.T2_HintsRec_*, i32)*, void (%struct.T2_HintsRec_*, i32, i32, i64*)*, void (%struct.T2_HintsRec_*, i32, i32, i8*)*, void (%struct.T2_HintsRec_*, i32, i8*)*, i32 (%struct.T2_HintsRec_*, %struct.FT_Outline_*, %struct.PSH_GlobalsRec_*, i32)* }
%struct.T2_HintsRec_ = type opaque
%struct.CFF_VStoreRec_ = type { i32, %struct.CFF_VarData_*, i16, i32, %struct.CFF_VarRegion_* }
%struct.CFF_VarData_ = type { i32, i32* }
%struct.CFF_VarRegion_ = type { %struct.CFF_AxisCoords_* }
%struct.CFF_AxisCoords_ = type { i64, i64, i64 }
%struct.PS_FontExtraRec_ = type { i16 }
%struct.TT_FaceRec_ = type { %struct.FT_FaceRec_, %struct.TTC_HeaderRec_, i64, i16, %struct.TT_TableRec_*, %struct.TT_Header_, %struct.TT_HoriHeader_, %struct.TT_MaxProfile_, i8, %struct.TT_VertHeader_, i16, %struct.TT_NameTableRec_, %struct.TT_OS2_, %struct.TT_Postscript_, i8*, i64, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_LoaderRec_*, i32, i64, i32)*, void (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i8*, i8*, i8*, i8*, i8*, %struct.TT_Gasp_, %struct.TT_PCLT_, i64, %struct.TT_SBit_ScaleRec_*, %struct.TT_Post_NamesRec_, %struct.FT_Palette_Data_, i16, %struct.FT_Color_*, i8, %struct.FT_Color_, i64, i8*, i64, i8*, i64, i32*, i32 (i8*)*, %struct.FT_Generic_, i8*, i64, i64, i8, i8, %struct.GX_BlendRec_*, i32, i8*, i32, i64, i64, i64, i8*, i8*, i64, i32, i64, i8*, i8*, i64, i32, i32, i32*, i8*, i64, i32, i32, i32, i64, i64, i64, i64, i8*, i8* }
%struct.TTC_HeaderRec_ = type { i64, i64, i64, i64* }
%struct.TT_TableRec_ = type { i64, i64, i64, i64 }
%struct.TT_Header_ = type { i64, i64, i64, i64, i16, i16, [2 x i64], [2 x i64], i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_HoriHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_MaxProfile_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_VertHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_NameTableRec_ = type { i16, i32, i32, %struct.TT_NameRec_*, i32, %struct.TT_LangTagRec_*, %struct.FT_StreamRec_* }
%struct.TT_NameRec_ = type { i16, i16, i16, i16, i16, i64, i8* }
%struct.TT_LangTagRec_ = type { i16, i64, i8* }
%struct.TT_OS2_ = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [10 x i8], i64, i64, i64, i64, [4 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i64, i64, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_Postscript_ = type { i64, i64, i16, i16, i64, i64, i64, i64, i64 }
%struct.TT_LoaderRec_ = type { %struct.TT_FaceRec_*, %struct.TT_SizeRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, i64, i32, %struct.FT_StreamRec_*, i32, i16, %struct.FT_BBox_, i32, i32, i32, i8, %struct.FT_Vector_, %struct.FT_Vector_, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, %struct.TT_ExecContextRec_*, i8*, i64, i8*, i32, i32, %struct.FT_Vector_, %struct.FT_Vector_, i8*, i8*, %struct.FT_ListRec_ }
%struct.TT_SizeRec_ = type opaque
%struct.TT_GlyphZoneRec_ = type { %struct.FT_MemoryRec_*, i16, i16, i16, i16, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*, i16*, i16 }
%struct.TT_ExecContextRec_ = type opaque
%struct.TT_Gasp_ = type { i16, i16, %struct.TT_GaspRangeRec_* }
%struct.TT_GaspRangeRec_ = type { i16, i16 }
%struct.TT_PCLT_ = type { i64, i64, i16, i16, i16, i16, i16, i16, [16 x i8], [8 x i8], [6 x i8], i8, i8, i8, i8 }
%struct.TT_SBit_ScaleRec_ = type { %struct.TT_SBit_LineMetricsRec_, %struct.TT_SBit_LineMetricsRec_, i8, i8, i8, i8 }
%struct.TT_SBit_LineMetricsRec_ = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.TT_Post_NamesRec_ = type { i8, %union.anon }
%union.anon = type { %struct.TT_Post_20Rec_ }
%struct.TT_Post_20Rec_ = type { i16, i16, i16*, i8** }
%struct.FT_Palette_Data_ = type { i16, i16*, i16*, i16, i16* }
%struct.FT_Color_ = type { i8, i8, i8, i8 }
%struct.GX_BlendRec_ = type opaque
%struct.AFM_Parser_FuncsRec_ = type { i32 (%struct.AFM_ParserRec_*, %struct.FT_MemoryRec_*, i8*, i8*)*, void (%struct.AFM_ParserRec_*)*, i32 (%struct.AFM_ParserRec_*)* }
%struct.AFM_ParserRec_ = type { %struct.FT_MemoryRec_*, %struct.AFM_StreamRec_*, %struct.AFM_FontInfoRec_*, i32 (i8*, i64, i8*)*, i8* }
%struct.AFM_StreamRec_ = type { i8*, i8*, i8*, i32 }
%struct.AFM_FontInfoRec_ = type { i8, %struct.FT_BBox_, i64, i64, %struct.AFM_TrackKernRec_*, i32, %struct.AFM_KernPairRec_*, i32 }
%struct.AFM_TrackKernRec_ = type { i32, i64, i64, i64, i64 }
%struct.AFM_KernPairRec_ = type { i32, i32, i32, i32 }
%struct.T1_CMap_ClassesRec_ = type { %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_* }
%struct.CFF_Builder_ = type { %struct.FT_MemoryRec_*, %struct.TT_FaceRec_*, %struct.CFF_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64, i64, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_BBox_, i8, i8, i8, i8, i8*, i8*, %struct.CFF_Builder_FuncsRec_ }
%struct.CFF_Builder_FuncsRec_ = type { {}*, void (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i32)*, void (%struct.CFF_Builder_*, i64, i64, i8)*, i32 (%struct.CFF_Builder_*, i64, i64)*, i32 (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i64, i64)*, void (%struct.CFF_Builder_*)* }
%struct.CFF_SizeRec_ = type { %struct.FT_SizeRec_, i64 }
%struct.CFF_Decoder_FuncsRec_ = type { void (%struct.CFF_Decoder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8, i32, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*)*, i32 (%struct.CFF_Decoder_*, %struct.CFF_SizeRec_*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* }
%struct.CFF_Decoder_ = type { %struct.CFF_Builder_, %struct.CFF_FontRec_*, [49 x i64], i64*, [17 x %struct.CFF_Decoder_Zone_], %struct.CFF_Decoder_Zone_*, i32, i32, [7 x %struct.FT_Vector_], i64, i64, i8, i8, i32, [32 x i64], i32, i32, i32, i32, i8**, i8**, i8**, i32, i32, i8, %struct.CFF_SubFontRec_*, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)* }
%struct.CFF_Decoder_Zone_ = type { i8*, i8*, i8* }
%struct.PSAux_ServiceRec_ = type { %struct.PS_Table_FuncsRec_*, %struct.PS_Parser_FuncsRec_*, %struct.T1_Builder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_*, void (i8*, i64, i16)*, i32 (i32)*, void (%struct.PS_Decoder_*, i8*, i8)*, void (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*, %struct.CFF_SubFontRec_*)*, %struct.T1_CMap_ClassesRec_*, %struct.AFM_Parser_FuncsRec_*, %struct.CFF_Decoder_FuncsRec_* }
%struct.CF2_BufferRec_ = type { i32*, i8*, i8*, i8* }
%struct.CF2_Matrix_ = type { i32, i32, i32, i32, i32, i32 }
%struct.CF2_FontRec_ = type { %struct.FT_MemoryRec_*, i32, i8, i8, i32, %struct.CF2_Matrix_, %struct.CF2_Matrix_, %struct.CF2_Matrix_, i32, %struct.CFF_BlendRec_, i32, i32, i64*, i32, i32, i32, %struct.CF2_OutlineRec_, %struct.PS_Decoder_*, %struct.CFF_SubFontRec_*, i8, i8, i8, [8 x i32], i32, i32, i32, i32, i8, %struct.CF2_BluesRec_, %struct.FT_Service_CFFLoadRec_* }
%struct.CF2_OutlineRec_ = type { %struct.CF2_OutlineCallbacksRec_, %struct.PS_Decoder_* }
%struct.CF2_OutlineCallbacksRec_ = type { void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*, void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*, void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*, void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*, i32, %struct.FT_MemoryRec_*, i32* }
%struct.CF2_CallbackParamsRec_ = type { %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_, i32 }
%struct.CF2_BluesRec_ = type { i32, i32, i8, i8, i32, i32, i32, i32, %struct.CF2_HintRec_, %struct.CF2_HintRec_, [12 x %struct.CF2_BlueRec_] }
%struct.CF2_HintRec_ = type { i32, i64, i32, i32, i32 }
%struct.CF2_BlueRec_ = type { i32, i32, i32, i32, i8 }
%struct.FT_Service_CFFLoadRec_ = type { i16 (i32)*, i32 (%struct.CFF_FontRec_*, %struct.CFF_SubFontRec_*, i32, i64*)*, i8 (%struct.CFF_FDSelectRec_*, i32)*, i8 (%struct.CFF_BlendRec_*, i32, i32, i64*)*, i32 (%struct.CFF_BlendRec_*, i32, i32, i64*)* }
%struct.PS_DriverRec_ = type { %struct.FT_DriverRec_, i32, i8, [8 x i32], i32 }
%struct.FT_Service_MultiMastersRec_ = type { i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)*, void (%struct.FT_FaceRec_*)* }
%struct.FT_Multi_Master_ = type { i32, i32, [4 x %struct.FT_MM_Axis_] }
%struct.FT_MM_Axis_ = type { i8*, i64, i64 }
%struct.FT_MM_Var_ = type { i32, i32, i32, %struct.FT_Var_Axis_*, %struct.FT_Var_Named_Style_* }
%struct.FT_Var_Axis_ = type { i8*, i64, i64, i64, i64, i32 }
%struct.FT_Var_Named_Style_ = type { i64*, i32, i32 }
%struct.AFM_ValueRec_ = type { i32, %union.anon.0 }
%union.anon.0 = type { i8* }
%struct.CFF_InternalRec_ = type { %struct.PSH_GlobalsRec_*, [256 x %struct.PSH_GlobalsRec_*] }
%struct.T1_CMapStdRec_ = type { %struct.FT_CMapRec_, i16*, i8* (i32)*, i32, i8** }
%struct.T1_FaceRec_ = type { %struct.FT_FaceRec_, %struct.T1_FontRec_, i8*, i8*, i8*, [2 x %struct.FT_CharMapRec_], [2 x %struct.FT_CharMapRec_*], %struct.PS_BlendRec_*, i32, i32, i32, i64*, i8* }
%struct.T1_FontRec_ = type { %struct.PS_FontInfoRec_, %struct.PS_FontExtraRec_, %struct.PS_PrivateRec_, i8*, i32, %struct.T1_EncodingRecRec_, i8*, i8*, i8*, i32, i8**, i32*, %struct.FT_HashRec_*, i32, i8**, i8**, i32*, i8, i8, %struct.FT_Matrix_, %struct.FT_Vector_, %struct.FT_BBox_, i64, i64 }
%struct.T1_EncodingRecRec_ = type { i32, i32, i32, i16*, i8** }
%struct.T1_CMapCustomRec_ = type { %struct.FT_CMapRec_, i32, i32, i16* }
%struct.CF2_ArrStackRec_ = type { %struct.FT_MemoryRec_*, i32*, i64, i64, i64, i64, i8* }
%struct.CF2_HintMaskRec_ = type { i32*, i8, i8, i64, i64, [12 x i8] }
%struct.CF2_GlyphPathRec_ = type { %struct.CF2_FontRec_*, %struct.CF2_OutlineCallbacksRec_*, %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_, %struct.CF2_ArrStackRec_, i32, i32, i32, %struct.FT_Vector_, i8, i8, i8, i8, %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_*, %struct.CF2_HintMaskRec_*, i32, %struct.CF2_BluesRec_*, i32, i32, i32, i32, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_, i8, i32, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_ }
%struct.CF2_HintMapRec_ = type { %struct.CF2_FontRec_*, %struct.CF2_HintMapRec_*, %struct.CF2_ArrStackRec_*, i8, i8, i32, i32, i32, [192 x %struct.CF2_HintRec_] }
%struct.CF2_StackRec_ = type { %struct.FT_MemoryRec_*, i32*, %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_*, i32 }
%struct.CF2_StackNumber_ = type { %union.anon.1, i32 }
%union.anon.1 = type { i32 }
%struct.CF2_StemHintRec_ = type { i8, i32, i32, i32, i32 }
%struct.CF2_HintMoveRec_ = type { i64, i32 }

@ps_table_funcs = hidden constant { i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, void (%struct.PS_TableRec_*)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, void (%struct.PS_TableRec_*)* } { i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)* @ps_table_new, void (%struct.PS_TableRec_*)* @ps_table_done, i32 (%struct.PS_TableRec_*, i32, i8*, i32)* @ps_table_add, void (%struct.PS_TableRec_*)* @ps_table_release }, align 8
@ps_parser_funcs = hidden constant { void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*, i32)*, i32 (%struct.PS_ParserRec_*, i8*, i64, i64*, i8)*, i32 (%struct.PS_ParserRec_*, i32, i16*)*, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)* } { void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)* @ps_parser_init, void (%struct.PS_ParserRec_*)* @ps_parser_done, void (%struct.PS_ParserRec_*)* @ps_parser_skip_spaces, void (%struct.PS_ParserRec_*)* @ps_parser_skip_PS_token, i64 (%struct.PS_ParserRec_*)* @ps_parser_to_int, i64 (%struct.PS_ParserRec_*, i32)* @ps_parser_to_fixed, i32 (%struct.PS_ParserRec_*, i8*, i64, i64*, i8)* @ps_parser_to_bytes, i32 (%struct.PS_ParserRec_*, i32, i16*)* @ps_parser_to_coord_array, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)* @ps_parser_to_fixed_array, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*)* @ps_parser_to_token, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)* @ps_parser_to_token_array, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)* @ps_parser_load_field, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)* @ps_parser_load_field_table }, align 8
@ps_builder_funcs = hidden local_unnamed_addr constant { void (%struct.PS_Builder_*, i8*, i8)*, void (%struct.PS_Builder_*)* } { void (%struct.PS_Builder_*, i8*, i8)* @ps_builder_init, void (%struct.PS_Builder_*)* @ps_builder_done }, align 8
@t1_builder_funcs = hidden constant { void (%struct.T1_BuilderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8)*, void (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i32)*, void (%struct.T1_BuilderRec_*, i64, i64, i8)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, i32 (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, void (%struct.T1_BuilderRec_*)* } { void (%struct.T1_BuilderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8)* @t1_builder_init, void (%struct.T1_BuilderRec_*)* @t1_builder_done, i32 (%struct.T1_BuilderRec_*, i32)* @t1_builder_check_points, void (%struct.T1_BuilderRec_*, i64, i64, i8)* @t1_builder_add_point, i32 (%struct.T1_BuilderRec_*, i64, i64)* @t1_builder_add_point1, i32 (%struct.T1_BuilderRec_*)* @t1_builder_add_contour, i32 (%struct.T1_BuilderRec_*, i64, i64)* @t1_builder_start_point, void (%struct.T1_BuilderRec_*)* @t1_builder_close_contour }, align 8
@t1_decoder_funcs = hidden constant { i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)*, void (%struct.T1_DecoderRec_*)*, i32 (%struct.T1_DecoderRec_*, i8*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* } { i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)* @t1_decoder_init, void (%struct.T1_DecoderRec_*)* @t1_decoder_done, i32 (%struct.T1_DecoderRec_*, i8*, i32)* @t1_decoder_parse_metrics, i32 (%struct.PS_Decoder_*, i8*, i64)* @cf2_decoder_parse_charstrings }, align 8
@afm_parser_funcs = hidden constant %struct.AFM_Parser_FuncsRec_ { i32 (%struct.AFM_ParserRec_*, %struct.FT_MemoryRec_*, i8*, i8*)* @afm_parser_init, void (%struct.AFM_ParserRec_*)* @afm_parser_done, i32 (%struct.AFM_ParserRec_*)* @afm_parser_parse }, align 8
@t1_cmap_standard_class_rec = hidden constant %struct.FT_CMap_ClassRec_ { i64 56, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.T1_CMapStdRec_*, i8*)* @t1_cmap_standard_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* bitcast (void (%struct.T1_CMapStdRec_*)* @t1_cmap_std_done to void (%struct.FT_CMapRec_*)*), i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.T1_CMapStdRec_*, i32)* @t1_cmap_std_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.T1_CMapStdRec_*, i32*)* @t1_cmap_std_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, align 8
@t1_cmap_expert_class_rec = hidden constant %struct.FT_CMap_ClassRec_ { i64 56, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.T1_CMapStdRec_*, i8*)* @t1_cmap_expert_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* bitcast (void (%struct.T1_CMapStdRec_*)* @t1_cmap_std_done to void (%struct.FT_CMapRec_*)*), i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.T1_CMapStdRec_*, i32)* @t1_cmap_std_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.T1_CMapStdRec_*, i32*)* @t1_cmap_std_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, align 8
@t1_cmap_custom_class_rec = hidden constant %struct.FT_CMap_ClassRec_ { i64 40, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.T1_CMapCustomRec_*, i8*)* @t1_cmap_custom_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* bitcast (void (%struct.T1_CMapCustomRec_*)* @t1_cmap_custom_done to void (%struct.FT_CMapRec_*)*), i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.T1_CMapCustomRec_*, i32)* @t1_cmap_custom_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.T1_CMapCustomRec_*, i32*)* @t1_cmap_custom_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, align 8
@t1_cmap_unicode_class_rec = hidden constant %struct.FT_CMap_ClassRec_ { i64 40, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.PS_UnicodesRec_*, i8*)* @t1_cmap_unicode_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* bitcast (void (%struct.PS_UnicodesRec_*)* @t1_cmap_unicode_done to void (%struct.FT_CMapRec_*)*), i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.PS_UnicodesRec_*, i32)* @t1_cmap_unicode_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.PS_UnicodesRec_*, i32*)* @t1_cmap_unicode_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, align 8
@t1_cmap_classes = hidden constant %struct.T1_CMap_ClassesRec_ { %struct.FT_CMap_ClassRec_* @t1_cmap_standard_class_rec, %struct.FT_CMap_ClassRec_* @t1_cmap_expert_class_rec, %struct.FT_CMap_ClassRec_* @t1_cmap_custom_class_rec, %struct.FT_CMap_ClassRec_* @t1_cmap_unicode_class_rec }, align 8
@cff_builder_funcs = hidden local_unnamed_addr constant { void (%struct.CFF_Builder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8)*, void (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i32)*, void (%struct.CFF_Builder_*, i64, i64, i8)*, i32 (%struct.CFF_Builder_*, i64, i64)*, i32 (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i64, i64)*, void (%struct.CFF_Builder_*)* } { void (%struct.CFF_Builder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8)* @cff_builder_init, void (%struct.CFF_Builder_*)* @cff_builder_done, i32 (%struct.CFF_Builder_*, i32)* @cff_check_points, void (%struct.CFF_Builder_*, i64, i64, i8)* @cff_builder_add_point, i32 (%struct.CFF_Builder_*, i64, i64)* @cff_builder_add_point1, i32 (%struct.CFF_Builder_*)* @cff_builder_add_contour, i32 (%struct.CFF_Builder_*, i64, i64)* @cff_builder_start_point, void (%struct.CFF_Builder_*)* @cff_builder_close_contour }, align 8
@cff_decoder_funcs = hidden constant %struct.CFF_Decoder_FuncsRec_ { void (%struct.CFF_Decoder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8, i32, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*)* @cff_decoder_init, i32 (%struct.CFF_Decoder_*, %struct.CFF_SizeRec_*, i32)* @cff_decoder_prepare, i32 (%struct.PS_Decoder_*, i8*, i64)* @cf2_decoder_parse_charstrings }, align 8
@.str = private unnamed_addr constant [6 x i8] c"psaux\00", align 1
@psaux_interface = internal constant %struct.PSAux_ServiceRec_ { %struct.PS_Table_FuncsRec_* bitcast ({ i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, void (%struct.PS_TableRec_*)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, void (%struct.PS_TableRec_*)* }* @ps_table_funcs to %struct.PS_Table_FuncsRec_*), %struct.PS_Parser_FuncsRec_* bitcast ({ void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*, i32)*, i32 (%struct.PS_ParserRec_*, i8*, i64, i64*, i8)*, i32 (%struct.PS_ParserRec_*, i32, i16*)*, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)* }* @ps_parser_funcs to %struct.PS_Parser_FuncsRec_*), %struct.T1_Builder_FuncsRec_* bitcast ({ void (%struct.T1_BuilderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8)*, void (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i32)*, void (%struct.T1_BuilderRec_*, i64, i64, i8)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, i32 (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, void (%struct.T1_BuilderRec_*)* }* @t1_builder_funcs to %struct.T1_Builder_FuncsRec_*), %struct.T1_Decoder_FuncsRec_* bitcast ({ i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)*, void (%struct.T1_DecoderRec_*)*, i32 (%struct.T1_DecoderRec_*, i8*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* }* @t1_decoder_funcs to %struct.T1_Decoder_FuncsRec_*), void (i8*, i64, i16)* @t1_decrypt, i32 (i32)* @cff_random, void (%struct.PS_Decoder_*, i8*, i8)* @ps_decoder_init, void (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*, %struct.CFF_SubFontRec_*)* @t1_make_subfont, %struct.T1_CMap_ClassesRec_* @t1_cmap_classes, %struct.AFM_Parser_FuncsRec_* @afm_parser_funcs, %struct.CFF_Decoder_FuncsRec_* @cff_decoder_funcs }, align 8
@psaux_module_class = hidden local_unnamed_addr constant %struct.FT_Module_Class_ { i64 0, i64 24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i64 131072, i64 131072, i8* bitcast (%struct.PSAux_ServiceRec_* @psaux_interface to i8*), i32 (%struct.FT_ModuleRec_*)* null, void (%struct.FT_ModuleRec_*)* null, i8* (%struct.FT_ModuleRec_*, i8*)* null }, align 8
@.str.1 = private unnamed_addr constant [17 x i8] c"StartFontMetrics\00", align 1
@afm_key_table = internal unnamed_addr constant [74 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i32 0, i32 0)], align 16
@.str.2 = private unnamed_addr constant [9 x i8] c"Ascender\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"AxisLabel\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"AxisType\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"BlendAxisTypes\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"BlendDesignMap\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"BlendDesignPositions\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"CC\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"CH\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"CapHeight\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"CharWidth\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"CharacterSet\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"Characters\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"Descender\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"EncodingScheme\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"EndAxis\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"EndCharMetrics\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"EndComposites\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"EndDirection\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"EndFontMetrics\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"EndKernData\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"EndKernPairs\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"EndTrackKern\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"EscChar\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"FamilyName\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"FontBBox\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"FontName\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"FullName\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"IsBaseFont\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"IsCIDFont\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"IsFixedPitch\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"IsFixedV\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"ItalicAngle\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"KP\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"KPH\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"KPX\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"KPY\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"MappingScheme\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"MetricsSets\00", align 1
@.str.43 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"Notice\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"PCC\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"StartAxis\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"StartCharMetrics\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"StartComposites\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"StartDirection\00", align 1
@.str.50 = private unnamed_addr constant [14 x i8] c"StartKernData\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"StartKernPairs\00", align 1
@.str.52 = private unnamed_addr constant [16 x i8] c"StartKernPairs0\00", align 1
@.str.53 = private unnamed_addr constant [16 x i8] c"StartKernPairs1\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"StartTrackKern\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"StdHW\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"StdVW\00", align 1
@.str.57 = private unnamed_addr constant [10 x i8] c"TrackKern\00", align 1
@.str.58 = private unnamed_addr constant [18 x i8] c"UnderlinePosition\00", align 1
@.str.59 = private unnamed_addr constant [19 x i8] c"UnderlineThickness\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"VV\00", align 1
@.str.61 = private unnamed_addr constant [8 x i8] c"VVector\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"Version\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"W0\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"W0X\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"W0Y\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"W1\00", align 1
@.str.68 = private unnamed_addr constant [4 x i8] c"W1X\00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c"W1Y\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"WX\00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c"WY\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"Weight\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"WeightVector\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"XHeight\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@ft_char_table = internal unnamed_addr constant [128 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\00\01\02\03\04\05\06\07\08\09\FF\FF\FF\FF\FF\FF\FF\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#\FF\FF\FF\FF\FF\FF\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#\FF\FF\FF\FF\FF", align 16
@t1_args_count = internal unnamed_addr constant [27 x i32] [i32 0, i32 0, i32 2, i32 5, i32 4, i32 0, i32 1, i32 1, i32 4, i32 2, i32 2, i32 6, i32 4, i32 1, i32 1, i32 0, i32 2, i32 6, i32 2, i32 6, i32 2, i32 -1, i32 1, i32 0, i32 0, i32 2, i32 2], align 16
@.str.76 = private unnamed_addr constant [17 x i8] c"postscript-cmaps\00", align 1
@cf2_interpT2CharString.readFromStack = internal constant [12 x i8] c"\01\00\01\01\01\00\01\00\01\00\01\00", align 1
@cf2_interpT2CharString.readFromStack.77 = internal constant [12 x i8] c"\01\01\01\01\01\01\01\01\01\01\01\01", align 1
@cf2_interpT2CharString.readFromStack.78 = internal constant [12 x i8] c"\01\01\01\01\01\00\01\00\01\01\01\00", align 1
@cf2_interpT2CharString.readFromStack.79 = internal constant [12 x i8] c"\01\01\01\01\01\01\01\01\01\01\00\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal i32 @ps_table_new(%struct.PS_TableRec_* nocapture, i32, %struct.FT_MemoryRec_*) #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  store i32 -1431655766, i32* %4, align 4
  %6 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 8
  store %struct.FT_MemoryRec_* %2, %struct.FT_MemoryRec_** %6, align 8
  %7 = sext i32 %1 to i64
  %8 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %2, i64 8, i64 0, i64 %7, i8* null, i32* nonnull %4) #11
  %9 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 6
  %10 = bitcast i8*** %9 to i8**
  store i8* %8, i8** %10, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %3
  %14 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %2, i64 4, i64 0, i64 %7, i8* null, i32* nonnull %4) #11
  %15 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 7
  %16 = bitcast i32** %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = load i32, i32* %4, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 4
  store i32 %1, i32* %20, align 8
  %21 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 3
  store i64 3735928559, i64* %21, align 8
  %22 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 5
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 9
  %24 = bitcast %struct.PS_Table_FuncsRec_* %23 to i8*
  %25 = bitcast %struct.PS_TableRec_* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 bitcast ({ i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, void (%struct.PS_TableRec_*)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, void (%struct.PS_TableRec_*)* }* @ps_table_funcs to i8*), i64 32, i1 false)
  br label %29

26:                                               ; preds = %3, %13
  %27 = load i8*, i8** %10, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %2, i8* %27) #11
  store i8** null, i8*** %9, align 8
  %28 = load i32, i32* %4, align 4
  br label %29

29:                                               ; preds = %19, %26
  %30 = phi i32 [ 0, %19 ], [ %28, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define internal void @ps_table_done(%struct.PS_TableRec_* nocapture) #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 8
  %4 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %3, align 8
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  store i32 -1431655766, i32* %2, align 4
  %6 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %40, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %4, i64 %11, i32* nonnull %2) #11
  store i8* %12, i8** %6, align 8
  %13 = load i32, i32* %2, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %40

15:                                               ; preds = %9
  %16 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* nonnull align 1 %7, i64 %16, i1 false)
  %17 = bitcast %struct.PS_TableRec_* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint i8* %7 to i64
  %20 = sub i64 %18, %19
  %21 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 6
  %22 = load i8**, i8*** %21, align 8
  %23 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8*, i8** %22, i64 %25
  %27 = icmp sgt i32 %24, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %15, %34
  %29 = phi i8** [ %35, %34 ], [ %22, %15 ]
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds i8, i8* %30, i64 %20
  store i8* %33, i8** %29, align 8
  br label %34

34:                                               ; preds = %32, %28
  %35 = getelementptr inbounds i8*, i8** %29, i64 1
  %36 = icmp ult i8** %35, %26
  br i1 %36, label %28, label %37

37:                                               ; preds = %34, %15
  %38 = load i64, i64* %10, align 8
  %39 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 2
  store i64 %38, i64* %39, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %4, i8* nonnull %7) #11
  br label %40

40:                                               ; preds = %9, %1, %37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ps_table_add(%struct.PS_TableRec_* nocapture, i32, i8*, i32) #0 {
  %5 = alloca i32, align 4
  %6 = icmp slt i32 %1, 0
  br i1 %6, label %94, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, %1
  br i1 %10, label %11, label %94

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i32 %3 to i64
  %15 = add i64 %13, %14
  %16 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %15, %17
  br i1 %18, label %19, label %72

19:                                               ; preds = %11
  %20 = bitcast %struct.PS_TableRec_* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = ptrtoint i8* %2 to i64
  %23 = sub i64 %22, %21
  %24 = icmp sgt i64 %23, -1
  %25 = icmp ult i64 %23, %17
  %26 = and i1 %24, %25
  %27 = inttoptr i64 %21 to i8*
  br label %28

28:                                               ; preds = %19, %28
  %29 = phi i64 [ %17, %19 ], [ %33, %28 ]
  %30 = lshr i64 %29, 2
  %31 = add i64 %29, 1024
  %32 = add i64 %31, %30
  %33 = and i64 %32, -1024
  %34 = icmp ult i64 %33, %15
  br i1 %34, label %28, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 0
  %37 = select i1 %26, i64 %23, i64 -1
  %38 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 8
  %39 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %38, align 8
  %40 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #11
  store i32 -1431655766, i32* %5, align 4
  %41 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %39, i64 %33, i32* nonnull %5) #11
  store i8* %41, i8** %36, align 8
  %42 = load i32, i32* %5, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %71

44:                                               ; preds = %35
  %45 = icmp eq i64 %21, 0
  br i1 %45, label %66, label %46

46:                                               ; preds = %44
  %47 = load i64, i64* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* nonnull align 1 %27, i64 %47, i1 false) #11
  %48 = load i64, i64* %20, align 8
  %49 = sub i64 %48, %21
  %50 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 6
  %51 = load i8**, i8*** %50, align 8
  %52 = load i32, i32* %8, align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8*, i8** %51, i64 %53
  %55 = icmp sgt i32 %52, 0
  br i1 %55, label %56, label %65

56:                                               ; preds = %46, %62
  %57 = phi i8** [ %63, %62 ], [ %51, %46 ]
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds i8, i8* %58, i64 %49
  store i8* %61, i8** %57, align 8
  br label %62

62:                                               ; preds = %60, %56
  %63 = getelementptr inbounds i8*, i8** %57, i64 1
  %64 = icmp ult i8** %63, %54
  br i1 %64, label %56, label %65

65:                                               ; preds = %62, %46
  call void @ft_mem_free(%struct.FT_MemoryRec_* %39, i8* nonnull %27) #11
  br label %66

66:                                               ; preds = %44, %65
  store i64 %33, i64* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #11
  %67 = icmp sgt i64 %37, -1
  br i1 %67, label %68, label %72

68:                                               ; preds = %66
  %69 = load i8*, i8** %36, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 %37
  br label %72

71:                                               ; preds = %35
  store i8* %27, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #11
  br label %94

72:                                               ; preds = %66, %68, %11
  %73 = phi i8* [ %2, %11 ], [ %2, %66 ], [ %70, %68 ]
  %74 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %72
  %78 = load i64, i64* %12, align 8
  %79 = getelementptr inbounds i8, i8* %75, i64 %78
  br label %80

80:                                               ; preds = %72, %77
  %81 = phi i8* [ %79, %77 ], [ null, %72 ]
  %82 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 6
  %83 = load i8**, i8*** %82, align 8
  %84 = sext i32 %1 to i64
  %85 = getelementptr inbounds i8*, i8** %83, i64 %84
  store i8* %81, i8** %85, align 8
  %86 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 7
  %87 = load i32*, i32** %86, align 8
  %88 = getelementptr inbounds i32, i32* %87, i64 %84
  store i32 %3, i32* %88, align 4
  %89 = load i8*, i8** %74, align 8
  %90 = load i64, i64* %12, align 8
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %91, i8* align 1 %73, i64 %14, i1 false)
  %92 = load i64, i64* %12, align 8
  %93 = add i64 %92, %14
  store i64 %93, i64* %12, align 8
  br label %94

94:                                               ; preds = %71, %4, %7, %80
  %95 = phi i32 [ 0, %80 ], [ %42, %71 ], [ 6, %7 ], [ 6, %4 ]
  ret i32 %95
}

; Function Attrs: nounwind ssp uwtable
define internal void @ps_table_release(%struct.PS_TableRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 8
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 3735928559
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %9) #11
  store i8* null, i8** %8, align 8
  %10 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 6
  %11 = bitcast i8*** %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %12) #11
  store i8** null, i8*** %10, align 8
  %13 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %0, i64 0, i32 7
  %14 = bitcast i32** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %15) #11
  store i32* null, i32** %13, align 8
  store i64 0, i64* %4, align 8
  br label %16

16:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @ps_parser_init(%struct.PS_ParserRec_* nocapture, i8*, i8*, %struct.FT_MemoryRec_*) #0 {
  %5 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 3
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 1
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  store i8* %2, i8** %7, align 8
  %8 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 0
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 4
  store %struct.FT_MemoryRec_* %3, %struct.FT_MemoryRec_** %9, align 8
  %10 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 5
  %11 = bitcast %struct.PS_Parser_FuncsRec_* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 bitcast ({ void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*, i32)*, i32 (%struct.PS_ParserRec_*, i8*, i64, i64*, i8)*, i32 (%struct.PS_ParserRec_*, i32, i16*)*, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)* }* @ps_parser_funcs to i8*), i64 104, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @ps_parser_done(%struct.PS_ParserRec_* nocapture) #1 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @ps_parser_skip_spaces(%struct.PS_ParserRec_* nocapture) #2 {
  %2 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp ugt i8* %3, %6
  br i1 %7, label %8, label %27

8:                                                ; preds = %1, %20
  %9 = phi i8* [ %22, %20 ], [ %6, %1 ]
  %10 = phi i64 [ %23, %20 ], [ %5, %1 ]
  %11 = load i8, i8* %9, align 1
  switch i8 %11, label %27 [
    i8 32, label %20
    i8 13, label %20
    i8 10, label %20
    i8 9, label %20
    i8 12, label %20
    i8 0, label %20
    i8 37, label %14
  ]

12:                                               ; preds = %17
  %13 = load i8, i8* %18, align 1
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi i8 [ %13, %12 ], [ %11, %8 ]
  %16 = phi i8* [ %18, %12 ], [ %9, %8 ]
  switch i8 %15, label %17 [
    i8 13, label %20
    i8 10, label %20
  ]

17:                                               ; preds = %14
  %18 = getelementptr inbounds i8, i8* %16, i64 1
  %19 = icmp eq i8* %18, %3
  br i1 %19, label %20, label %12

20:                                               ; preds = %17, %14, %14, %8, %8, %8, %8, %8, %8
  %21 = phi i8* [ %9, %8 ], [ %9, %8 ], [ %9, %8 ], [ %9, %8 ], [ %9, %8 ], [ %9, %8 ], [ %16, %14 ], [ %16, %14 ], [ %3, %17 ]
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  %23 = ptrtoint i8* %22 to i64
  %24 = icmp ult i8* %22, %3
  br i1 %24, label %8, label %25

25:                                               ; preds = %20
  %26 = ptrtoint i8* %22 to i64
  br label %27

27:                                               ; preds = %8, %25, %1
  %28 = phi i64 [ %5, %1 ], [ %26, %25 ], [ %10, %8 ]
  store i64 %28, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @ps_parser_skip_PS_token(%struct.PS_ParserRec_* nocapture) #0 {
  %2 = alloca i8*, align 8
  %3 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 0
  %5 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8** %2 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = inttoptr i64 %6 to i8*
  %11 = icmp ugt i8* %9, %10
  br i1 %11, label %12, label %31

12:                                               ; preds = %1, %24
  %13 = phi i8* [ %26, %24 ], [ %10, %1 ]
  %14 = phi i64 [ %27, %24 ], [ %6, %1 ]
  %15 = load i8, i8* %13, align 1
  switch i8 %15, label %31 [
    i8 32, label %24
    i8 13, label %24
    i8 10, label %24
    i8 9, label %24
    i8 12, label %24
    i8 0, label %24
    i8 37, label %18
  ]

16:                                               ; preds = %21
  %17 = load i8, i8* %22, align 1
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i8 [ %17, %16 ], [ %15, %12 ]
  %20 = phi i8* [ %22, %16 ], [ %13, %12 ]
  switch i8 %19, label %21 [
    i8 13, label %24
    i8 10, label %24
  ]

21:                                               ; preds = %18
  %22 = getelementptr inbounds i8, i8* %20, i64 1
  %23 = icmp eq i8* %22, %9
  br i1 %23, label %24, label %16

24:                                               ; preds = %21, %18, %18, %12, %12, %12, %12, %12, %12
  %25 = phi i8* [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %20, %18 ], [ %20, %18 ], [ %9, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = ptrtoint i8* %26 to i64
  %28 = icmp ult i8* %26, %9
  br i1 %28, label %12, label %29

29:                                               ; preds = %24
  %30 = ptrtoint i8* %26 to i64
  br label %31

31:                                               ; preds = %12, %29, %1
  %32 = phi i64 [ %6, %1 ], [ %30, %29 ], [ %14, %12 ]
  store i64 %32, i64* %7, align 8
  %33 = inttoptr i64 %32 to i8*
  %34 = icmp ugt i8* %9, %33
  br i1 %34, label %35, label %127

35:                                               ; preds = %31
  %36 = load i8, i8* %33, align 1
  switch i8 %36, label %101 [
    i8 91, label %37
    i8 93, label %37
    i8 123, label %39
    i8 40, label %41
    i8 60, label %43
    i8 62, label %91
    i8 47, label %99
  ]

37:                                               ; preds = %35, %35
  %38 = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %38, i8** %2, align 8
  br label %127

39:                                               ; preds = %35
  %40 = call fastcc i32 @skip_procedure(i8** nonnull %2, i8* %9)
  br label %127

41:                                               ; preds = %35
  %42 = call fastcc i32 @skip_literal_string(i8** nonnull %2, i8* %9)
  br label %127

43:                                               ; preds = %35
  %44 = getelementptr inbounds i8, i8* %33, i64 1
  %45 = icmp ult i8* %44, %9
  br i1 %45, label %46, label %79

46:                                               ; preds = %43
  %47 = load i8, i8* %44, align 1
  %48 = icmp eq i8 %47, 60
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %50, i8** %2, align 8
  br label %127

51:                                               ; preds = %46, %66
  %52 = phi i8* [ %67, %66 ], [ %44, %46 ]
  %53 = load i8, i8* %52, align 1
  switch i8 %53, label %68 [
    i8 32, label %62
    i8 13, label %62
    i8 10, label %62
    i8 9, label %62
    i8 12, label %62
    i8 0, label %62
    i8 37, label %56
  ]

54:                                               ; preds = %59
  %55 = load i8, i8* %60, align 1
  br label %56

56:                                               ; preds = %51, %54
  %57 = phi i8 [ %55, %54 ], [ %53, %51 ]
  %58 = phi i8* [ %60, %54 ], [ %52, %51 ]
  switch i8 %57, label %59 [
    i8 13, label %62
    i8 10, label %62
  ]

59:                                               ; preds = %56
  %60 = getelementptr inbounds i8, i8* %58, i64 1
  %61 = icmp eq i8* %60, %9
  br i1 %61, label %62, label %54

62:                                               ; preds = %59, %56, %56, %51, %51, %51, %51, %51, %51
  %63 = phi i8* [ %52, %51 ], [ %52, %51 ], [ %52, %51 ], [ %52, %51 ], [ %52, %51 ], [ %52, %51 ], [ %9, %59 ], [ %58, %56 ], [ %58, %56 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  %65 = icmp ult i8* %64, %9
  br i1 %65, label %66, label %68

66:                                               ; preds = %62, %75
  %67 = phi i8* [ %64, %62 ], [ %76, %75 ]
  br label %51

68:                                               ; preds = %51, %62
  %69 = phi i8* [ %64, %62 ], [ %52, %51 ]
  %70 = icmp ugt i8* %9, %69
  br i1 %70, label %71, label %79

71:                                               ; preds = %68
  %72 = load i8, i8* %69, align 1
  %73 = add i8 %72, -48
  %74 = icmp ult i8 %73, 10
  br i1 %74, label %75, label %78

75:                                               ; preds = %78, %78, %78, %78, %78, %78, %78, %78, %78, %78, %78, %78, %71
  %76 = getelementptr inbounds i8, i8* %69, i64 1
  %77 = icmp ult i8* %76, %9
  br i1 %77, label %66, label %79

78:                                               ; preds = %71
  switch i8 %72, label %79 [
    i8 102, label %75
    i8 101, label %75
    i8 100, label %75
    i8 99, label %75
    i8 98, label %75
    i8 97, label %75
    i8 70, label %75
    i8 69, label %75
    i8 68, label %75
    i8 67, label %75
    i8 66, label %75
    i8 65, label %75
  ]

79:                                               ; preds = %68, %78, %75, %43
  %80 = phi i8* [ %44, %43 ], [ %69, %68 ], [ %69, %78 ], [ %76, %75 ]
  %81 = icmp ugt i8* %9, %80
  br i1 %81, label %82, label %85

82:                                               ; preds = %79
  %83 = load i8, i8* %80, align 1
  %84 = icmp eq i8 %83, 62
  br i1 %84, label %85, label %87

85:                                               ; preds = %82, %79
  %86 = getelementptr inbounds i8, i8* %80, i64 1
  br label %87

87:                                               ; preds = %82, %85
  %88 = phi i8* [ %86, %85 ], [ %80, %82 ]
  %89 = phi i32 [ 0, %85 ], [ 3, %82 ]
  %90 = ptrtoint i8* %88 to i64
  store i64 %90, i64* %7, align 8
  br label %127

91:                                               ; preds = %35
  %92 = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %92, i8** %2, align 8
  %93 = icmp ult i8* %92, %9
  br i1 %93, label %94, label %127

94:                                               ; preds = %91
  %95 = load i8, i8* %92, align 1
  %96 = icmp eq i8 %95, 62
  br i1 %96, label %97, label %127

97:                                               ; preds = %94
  %98 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %98, i8** %2, align 8
  br label %127

99:                                               ; preds = %35
  %100 = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %100, i8** %2, align 8
  br label %101

101:                                              ; preds = %35, %99
  %102 = phi i8* [ %33, %35 ], [ %100, %99 ]
  %103 = icmp ult i8* %102, %9
  br i1 %103, label %104, label %127

104:                                              ; preds = %101, %107
  %105 = phi i8* [ %108, %107 ], [ %102, %101 ]
  %106 = load i8, i8* %105, align 1
  switch i8 %106, label %107 [
    i8 32, label %111
    i8 13, label %112
    i8 10, label %113
    i8 9, label %114
    i8 12, label %115
    i8 0, label %116
    i8 47, label %117
    i8 40, label %118
    i8 41, label %119
    i8 60, label %120
    i8 62, label %121
    i8 91, label %122
    i8 93, label %123
    i8 123, label %124
    i8 125, label %125
    i8 37, label %126
  ]

107:                                              ; preds = %104
  %108 = getelementptr inbounds i8, i8* %105, i64 1
  %109 = icmp eq i8* %108, %9
  br i1 %109, label %110, label %104

110:                                              ; preds = %107
  store i8* %9, i8** %2, align 8
  br label %127

111:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

112:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

113:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

114:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

115:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

116:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

117:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

118:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

119:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

120:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

121:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

122:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

123:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

124:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

125:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

126:                                              ; preds = %104
  store i8* %105, i8** %2, align 8
  br label %127

127:                                              ; preds = %101, %110, %111, %112, %113, %114, %115, %116, %117, %118, %119, %120, %121, %122, %123, %124, %125, %126, %91, %94, %31, %49, %87, %97, %41, %39, %37
  %128 = phi i32 [ 0, %31 ], [ 0, %37 ], [ %40, %39 ], [ %42, %41 ], [ 0, %49 ], [ %89, %87 ], [ 0, %97 ], [ 3, %94 ], [ 3, %91 ], [ 0, %126 ], [ 0, %125 ], [ 0, %124 ], [ 0, %123 ], [ 0, %122 ], [ 0, %121 ], [ 0, %120 ], [ 0, %119 ], [ 0, %118 ], [ 0, %117 ], [ 0, %116 ], [ 0, %115 ], [ 0, %114 ], [ 0, %113 ], [ 0, %112 ], [ 0, %111 ], [ 0, %110 ], [ 0, %101 ]
  %129 = load i8*, i8** %2, align 8
  %130 = icmp ult i8* %129, %9
  br i1 %130, label %131, label %135

131:                                              ; preds = %127
  %132 = load i8*, i8** %4, align 8
  %133 = icmp eq i8* %129, %132
  %134 = select i1 %133, i32 3, i32 %128
  br label %135

135:                                              ; preds = %131, %127
  %136 = phi i32 [ %128, %127 ], [ %134, %131 ]
  %137 = icmp ugt i8* %129, %9
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  store i8* %9, i8** %2, align 8
  br label %139

139:                                              ; preds = %138, %135
  %140 = phi i8* [ %9, %138 ], [ %129, %135 ]
  %141 = ptrtoint i8* %140 to i64
  %142 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 3
  store i32 %136, i32* %142, align 8
  store i64 %141, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @ps_parser_to_int(%struct.PS_ParserRec_* nocapture) #0 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp ugt i8* %4, %7
  br i1 %8, label %9, label %28

9:                                                ; preds = %1, %21
  %10 = phi i8* [ %23, %21 ], [ %7, %1 ]
  %11 = phi i64 [ %24, %21 ], [ %6, %1 ]
  %12 = load i8, i8* %10, align 1
  switch i8 %12, label %28 [
    i8 32, label %21
    i8 13, label %21
    i8 10, label %21
    i8 9, label %21
    i8 12, label %21
    i8 0, label %21
    i8 37, label %15
  ]

13:                                               ; preds = %18
  %14 = load i8, i8* %19, align 1
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi i8 [ %14, %13 ], [ %12, %9 ]
  %17 = phi i8* [ %19, %13 ], [ %10, %9 ]
  switch i8 %16, label %18 [
    i8 13, label %21
    i8 10, label %21
  ]

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %17, i64 1
  %20 = icmp eq i8* %19, %4
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %15, %15, %9, %9, %9, %9, %9, %9
  %22 = phi i8* [ %10, %9 ], [ %10, %9 ], [ %10, %9 ], [ %10, %9 ], [ %10, %9 ], [ %10, %9 ], [ %4, %18 ], [ %17, %15 ], [ %17, %15 ]
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = ptrtoint i8* %23 to i64
  %25 = icmp ult i8* %23, %4
  br i1 %25, label %9, label %26

26:                                               ; preds = %21
  %27 = ptrtoint i8* %23 to i64
  br label %28

28:                                               ; preds = %9, %26, %1
  %29 = phi i64 [ %6, %1 ], [ %27, %26 ], [ %11, %9 ]
  store i64 %29, i64* %5, align 8
  %30 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = inttoptr i64 %29 to i8*
  store i8* %31, i8** %2, align 8
  %32 = icmp ugt i8* %4, %31
  br i1 %32, label %33, label %110

33:                                               ; preds = %28
  %34 = load i8, i8* %31, align 1
  switch i8 %34, label %42 [
    i8 45, label %35
    i8 43, label %35
  ]

35:                                               ; preds = %33, %33
  %36 = getelementptr inbounds i8, i8* %31, i64 1
  %37 = icmp eq i8* %36, %4
  br i1 %37, label %110, label %38

38:                                               ; preds = %35
  %39 = icmp eq i8 %34, 45
  %40 = zext i1 %39 to i8
  %41 = load i8, i8* %36, align 1
  switch i8 %41, label %42 [
    i8 45, label %110
    i8 43, label %110
  ]

42:                                               ; preds = %38, %33
  %43 = phi i8 [ %34, %33 ], [ %41, %38 ]
  %44 = phi i8* [ %31, %33 ], [ %36, %38 ]
  %45 = phi i8 [ 0, %33 ], [ %40, %38 ]
  %46 = icmp ult i8* %44, %4
  br i1 %46, label %48, label %47

47:                                               ; preds = %42
  store i8* %44, i8** %2, align 8
  br label %85

48:                                               ; preds = %42, %78
  %49 = phi i8 [ %79, %78 ], [ %43, %42 ]
  %50 = phi i8 [ %75, %78 ], [ 0, %42 ]
  %51 = phi i64 [ %74, %78 ], [ 0, %42 ]
  %52 = phi i8* [ %76, %78 ], [ %44, %42 ]
  switch i8 %49, label %53 [
    i8 32, label %80
    i8 13, label %80
    i8 10, label %80
    i8 9, label %80
    i8 12, label %80
    i8 0, label %80
  ]

53:                                               ; preds = %48
  %54 = icmp slt i8 %49, 0
  br i1 %54, label %80, label %55

55:                                               ; preds = %53
  %56 = and i8 %49, 127
  %57 = zext i8 %56 to i64
  %58 = getelementptr inbounds [128 x i8], [128 x i8]* @ft_char_table, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %55
  %62 = sext i8 %59 to i64
  %63 = icmp slt i8 %59, 10
  br i1 %63, label %64, label %80

64:                                               ; preds = %61
  %65 = icmp sgt i64 %51, 214748364
  br i1 %65, label %73, label %66

66:                                               ; preds = %64
  %67 = icmp eq i64 %51, 214748364
  %68 = icmp sgt i8 %59, 7
  %69 = and i1 %67, %68
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = mul nsw i64 %51, 10
  %72 = add nsw i64 %71, %62
  br label %73

73:                                               ; preds = %70, %66, %64
  %74 = phi i64 [ %72, %70 ], [ %51, %64 ], [ 214748364, %66 ]
  %75 = phi i8 [ %50, %70 ], [ 1, %64 ], [ 1, %66 ]
  %76 = getelementptr inbounds i8, i8* %52, i64 1
  %77 = icmp eq i8* %76, %4
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = load i8, i8* %76, align 1
  br label %48

80:                                               ; preds = %73, %61, %55, %53, %48, %48, %48, %48, %48, %48
  %81 = phi i8* [ %4, %73 ], [ %52, %48 ], [ %52, %48 ], [ %52, %48 ], [ %52, %48 ], [ %52, %48 ], [ %52, %48 ], [ %52, %53 ], [ %52, %61 ], [ %52, %55 ]
  %82 = phi i64 [ %74, %73 ], [ %51, %48 ], [ %51, %48 ], [ %51, %48 ], [ %51, %48 ], [ %51, %48 ], [ %51, %48 ], [ %51, %53 ], [ %51, %61 ], [ %51, %55 ]
  %83 = phi i8 [ %75, %73 ], [ %50, %48 ], [ %50, %48 ], [ %50, %48 ], [ %50, %48 ], [ %50, %48 ], [ %50, %48 ], [ %50, %53 ], [ %50, %61 ], [ %50, %55 ]
  store i8* %81, i8** %2, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %80, %47
  %86 = phi i8* [ %44, %47 ], [ %81, %80 ]
  %87 = phi i64 [ 0, %47 ], [ %82, %80 ]
  br label %88

88:                                               ; preds = %80, %85
  %89 = phi i8* [ %86, %85 ], [ %81, %80 ]
  %90 = phi i64 [ %87, %85 ], [ 2147483647, %80 ]
  %91 = icmp eq i8 %45, 0
  %92 = sub nsw i64 0, %90
  %93 = select i1 %91, i64 %90, i64 %92
  %94 = icmp eq i8* %89, %31
  %95 = ptrtoint i8* %89 to i64
  br i1 %94, label %110, label %96

96:                                               ; preds = %88
  %97 = icmp ult i8* %89, %4
  br i1 %97, label %98, label %107

98:                                               ; preds = %96
  %99 = load i8, i8* %89, align 1
  %100 = icmp eq i8 %99, 35
  br i1 %100, label %101, label %107

101:                                              ; preds = %98
  %102 = getelementptr inbounds i8, i8* %89, i64 1
  store i8* %102, i8** %2, align 8
  %103 = call fastcc i64 @PS_Conv_Strtol(i8** nonnull %2, i8* %4, i64 %93) #11
  %104 = load i8*, i8** %2, align 8
  %105 = icmp eq i8* %104, %102
  %106 = ptrtoint i8* %104 to i64
  br i1 %105, label %110, label %107

107:                                              ; preds = %101, %98, %96
  %108 = phi i64 [ %106, %101 ], [ %95, %98 ], [ %95, %96 ]
  %109 = phi i64 [ %103, %101 ], [ %93, %98 ], [ %93, %96 ]
  store i64 %108, i64* %5, align 8
  br label %110

110:                                              ; preds = %35, %28, %38, %38, %88, %101, %107
  %111 = phi i64 [ %109, %107 ], [ 0, %88 ], [ 0, %101 ], [ 0, %38 ], [ 0, %38 ], [ 0, %28 ], [ 0, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  ret i64 %111
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @ps_parser_to_fixed(%struct.PS_ParserRec_* nocapture, i32) #0 {
  %3 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp ugt i8* %4, %7
  br i1 %8, label %9, label %28

9:                                                ; preds = %2, %21
  %10 = phi i8* [ %23, %21 ], [ %7, %2 ]
  %11 = phi i64 [ %24, %21 ], [ %6, %2 ]
  %12 = load i8, i8* %10, align 1
  switch i8 %12, label %28 [
    i8 32, label %21
    i8 13, label %21
    i8 10, label %21
    i8 9, label %21
    i8 12, label %21
    i8 0, label %21
    i8 37, label %15
  ]

13:                                               ; preds = %18
  %14 = load i8, i8* %19, align 1
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi i8 [ %14, %13 ], [ %12, %9 ]
  %17 = phi i8* [ %19, %13 ], [ %10, %9 ]
  switch i8 %16, label %18 [
    i8 13, label %21
    i8 10, label %21
  ]

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %17, i64 1
  %20 = icmp eq i8* %19, %4
  br i1 %20, label %21, label %13

21:                                               ; preds = %18, %15, %15, %9, %9, %9, %9, %9, %9
  %22 = phi i8* [ %10, %9 ], [ %10, %9 ], [ %10, %9 ], [ %10, %9 ], [ %10, %9 ], [ %10, %9 ], [ %4, %18 ], [ %17, %15 ], [ %17, %15 ]
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = ptrtoint i8* %23 to i64
  %25 = icmp ult i8* %23, %4
  br i1 %25, label %9, label %26

26:                                               ; preds = %21
  %27 = ptrtoint i8* %23 to i64
  br label %28

28:                                               ; preds = %9, %26, %2
  %29 = phi i64 [ %6, %2 ], [ %27, %26 ], [ %11, %9 ]
  store i64 %29, i64* %5, align 8
  %30 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 0
  %31 = sext i32 %1 to i64
  %32 = tail call fastcc i64 @PS_Conv_ToFixed(i8** %30, i8* %4, i64 %31)
  ret i64 %32
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ps_parser_to_bytes(%struct.PS_ParserRec_* nocapture, i8* nocapture, i64, i64* nocapture, i8 zeroext) #0 {
  %6 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp ugt i8* %7, %10
  br i1 %11, label %12, label %31

12:                                               ; preds = %5, %24
  %13 = phi i8* [ %26, %24 ], [ %10, %5 ]
  %14 = phi i64 [ %27, %24 ], [ %9, %5 ]
  %15 = load i8, i8* %13, align 1
  switch i8 %15, label %31 [
    i8 32, label %24
    i8 13, label %24
    i8 10, label %24
    i8 9, label %24
    i8 12, label %24
    i8 0, label %24
    i8 37, label %18
  ]

16:                                               ; preds = %21
  %17 = load i8, i8* %22, align 1
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i8 [ %17, %16 ], [ %15, %12 ]
  %20 = phi i8* [ %22, %16 ], [ %13, %12 ]
  switch i8 %19, label %21 [
    i8 13, label %24
    i8 10, label %24
  ]

21:                                               ; preds = %18
  %22 = getelementptr inbounds i8, i8* %20, i64 1
  %23 = icmp eq i8* %22, %7
  br i1 %23, label %24, label %16

24:                                               ; preds = %21, %18, %18, %12, %12, %12, %12, %12, %12
  %25 = phi i8* [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %7, %21 ], [ %20, %18 ], [ %20, %18 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = ptrtoint i8* %26 to i64
  %28 = icmp ult i8* %26, %7
  br i1 %28, label %12, label %29

29:                                               ; preds = %24
  %30 = ptrtoint i8* %26 to i64
  br label %31

31:                                               ; preds = %12, %29, %5
  %32 = phi i64 [ %9, %5 ], [ %30, %29 ], [ %14, %12 ]
  store i64 %32, i64* %8, align 8
  %33 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 0
  %34 = inttoptr i64 %32 to i8*
  %35 = icmp ugt i8* %7, %34
  br i1 %35, label %36, label %174

36:                                               ; preds = %31
  %37 = icmp eq i8 %4, 0
  br i1 %37, label %115, label %38

38:                                               ; preds = %36
  %39 = load i8, i8* %34, align 1
  %40 = icmp eq i8 %39, 60
  br i1 %40, label %41, label %174

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %34, i64 1
  %43 = ptrtoint i8* %42 to i64
  %44 = shl i64 %2, 1
  %45 = icmp ult i8* %42, %7
  br i1 %45, label %46, label %103

46:                                               ; preds = %41
  %47 = ptrtoint i8* %7 to i64
  %48 = sub i64 %47, %43
  %49 = and i64 %48, 4294967295
  %50 = icmp ugt i64 %44, %49
  %51 = select i1 %50, i64 %49, i64 %44
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %98, label %53

53:                                               ; preds = %46, %79
  %54 = phi i64 [ %83, %79 ], [ 0, %46 ]
  %55 = phi i32 [ %81, %79 ], [ 1, %46 ]
  %56 = phi i32 [ %80, %79 ], [ 0, %46 ]
  %57 = phi i32 [ %82, %79 ], [ 0, %46 ]
  %58 = getelementptr inbounds i8, i8* %42, i64 %54
  %59 = load i8, i8* %58, align 1
  switch i8 %59, label %60 [
    i8 32, label %79
    i8 13, label %79
    i8 12, label %79
    i8 10, label %79
    i8 9, label %79
    i8 0, label %79
  ]

60:                                               ; preds = %53
  %61 = icmp slt i8 %59, 0
  br i1 %61, label %87, label %62

62:                                               ; preds = %60
  %63 = and i8 %59, 127
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds [128 x i8], [128 x i8]* @ft_char_table, i64 0, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = icmp ugt i8 %66, 15
  br i1 %67, label %87, label %68

68:                                               ; preds = %62
  %69 = sext i8 %66 to i32
  %70 = shl i32 %55, 4
  %71 = or i32 %70, %69
  %72 = and i32 %71, 256
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %68
  %75 = trunc i32 %71 to i8
  %76 = add i32 %56, 1
  %77 = zext i32 %56 to i64
  %78 = getelementptr inbounds i8, i8* %1, i64 %77
  store i8 %75, i8* %78, align 1
  br label %79

79:                                               ; preds = %74, %68, %53, %53, %53, %53, %53, %53
  %80 = phi i32 [ %56, %68 ], [ %76, %74 ], [ %56, %53 ], [ %56, %53 ], [ %56, %53 ], [ %56, %53 ], [ %56, %53 ], [ %56, %53 ]
  %81 = phi i32 [ %71, %68 ], [ 1, %74 ], [ %55, %53 ], [ %55, %53 ], [ %55, %53 ], [ %55, %53 ], [ %55, %53 ], [ %55, %53 ]
  %82 = add i32 %57, 1
  %83 = zext i32 %82 to i64
  %84 = icmp ugt i64 %51, %83
  br i1 %84, label %53, label %85

85:                                               ; preds = %79
  %86 = zext i32 %82 to i64
  br label %87

87:                                               ; preds = %62, %60, %85
  %88 = phi i32 [ %80, %85 ], [ %56, %60 ], [ %56, %62 ]
  %89 = phi i32 [ %81, %85 ], [ %55, %60 ], [ %55, %62 ]
  %90 = phi i64 [ %86, %85 ], [ %54, %60 ], [ %54, %62 ]
  %91 = icmp eq i32 %89, 1
  br i1 %91, label %98, label %92

92:                                               ; preds = %87
  %93 = trunc i32 %89 to i8
  %94 = shl i8 %93, 4
  %95 = add i32 %88, 1
  %96 = zext i32 %88 to i64
  %97 = getelementptr inbounds i8, i8* %1, i64 %96
  store i8 %94, i8* %97, align 1
  br label %98

98:                                               ; preds = %92, %87, %46
  %99 = phi i64 [ %90, %92 ], [ %90, %87 ], [ 0, %46 ]
  %100 = phi i32 [ %95, %92 ], [ %88, %87 ], [ 0, %46 ]
  %101 = getelementptr inbounds i8, i8* %42, i64 %99
  %102 = ptrtoint i8* %101 to i64
  br label %103

103:                                              ; preds = %98, %41
  %104 = phi i64 [ %102, %98 ], [ %43, %41 ]
  %105 = phi i32 [ %100, %98 ], [ 0, %41 ]
  %106 = zext i32 %105 to i64
  store i64 %106, i64* %3, align 8
  store i64 %104, i64* %8, align 8
  %107 = inttoptr i64 %104 to i8*
  %108 = load i8*, i8** %6, align 8
  %109 = icmp ugt i8* %108, %107
  br i1 %109, label %110, label %113

110:                                              ; preds = %103
  %111 = load i8, i8* %107, align 1
  %112 = icmp eq i8 %111, 62
  br i1 %112, label %113, label %174

113:                                              ; preds = %110, %103
  %114 = getelementptr inbounds i8, i8* %107, i64 1
  store i8* %114, i8** %33, align 8
  br label %174

115:                                              ; preds = %36
  %116 = shl i64 %2, 1
  %117 = ptrtoint i8* %7 to i64
  %118 = sub i64 %117, %32
  %119 = and i64 %118, 4294967295
  %120 = icmp ugt i64 %116, %119
  %121 = select i1 %120, i64 %119, i64 %116
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %168, label %123

123:                                              ; preds = %115, %149
  %124 = phi i64 [ %153, %149 ], [ 0, %115 ]
  %125 = phi i32 [ %151, %149 ], [ 1, %115 ]
  %126 = phi i32 [ %150, %149 ], [ 0, %115 ]
  %127 = phi i32 [ %152, %149 ], [ 0, %115 ]
  %128 = getelementptr inbounds i8, i8* %34, i64 %124
  %129 = load i8, i8* %128, align 1
  switch i8 %129, label %130 [
    i8 32, label %149
    i8 13, label %149
    i8 12, label %149
    i8 10, label %149
    i8 9, label %149
    i8 0, label %149
  ]

130:                                              ; preds = %123
  %131 = icmp slt i8 %129, 0
  br i1 %131, label %157, label %132

132:                                              ; preds = %130
  %133 = and i8 %129, 127
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [128 x i8], [128 x i8]* @ft_char_table, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = icmp ugt i8 %136, 15
  br i1 %137, label %157, label %138

138:                                              ; preds = %132
  %139 = sext i8 %136 to i32
  %140 = shl i32 %125, 4
  %141 = or i32 %140, %139
  %142 = and i32 %141, 256
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %138
  %145 = trunc i32 %141 to i8
  %146 = add i32 %126, 1
  %147 = zext i32 %126 to i64
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  store i8 %145, i8* %148, align 1
  br label %149

149:                                              ; preds = %144, %138, %123, %123, %123, %123, %123, %123
  %150 = phi i32 [ %126, %138 ], [ %146, %144 ], [ %126, %123 ], [ %126, %123 ], [ %126, %123 ], [ %126, %123 ], [ %126, %123 ], [ %126, %123 ]
  %151 = phi i32 [ %141, %138 ], [ 1, %144 ], [ %125, %123 ], [ %125, %123 ], [ %125, %123 ], [ %125, %123 ], [ %125, %123 ], [ %125, %123 ]
  %152 = add i32 %127, 1
  %153 = zext i32 %152 to i64
  %154 = icmp ugt i64 %121, %153
  br i1 %154, label %123, label %155

155:                                              ; preds = %149
  %156 = zext i32 %152 to i64
  br label %157

157:                                              ; preds = %132, %130, %155
  %158 = phi i32 [ %150, %155 ], [ %126, %130 ], [ %126, %132 ]
  %159 = phi i32 [ %151, %155 ], [ %125, %130 ], [ %125, %132 ]
  %160 = phi i64 [ %156, %155 ], [ %124, %130 ], [ %124, %132 ]
  %161 = icmp eq i32 %159, 1
  br i1 %161, label %168, label %162

162:                                              ; preds = %157
  %163 = trunc i32 %159 to i8
  %164 = shl i8 %163, 4
  %165 = add i32 %158, 1
  %166 = zext i32 %158 to i64
  %167 = getelementptr inbounds i8, i8* %1, i64 %166
  store i8 %164, i8* %167, align 1
  br label %168

168:                                              ; preds = %115, %157, %162
  %169 = phi i64 [ %160, %162 ], [ %160, %157 ], [ 0, %115 ]
  %170 = phi i32 [ %165, %162 ], [ %158, %157 ], [ 0, %115 ]
  %171 = getelementptr inbounds i8, i8* %34, i64 %169
  %172 = ptrtoint i8* %171 to i64
  %173 = zext i32 %170 to i64
  store i64 %173, i64* %3, align 8
  store i64 %172, i64* %8, align 8
  br label %174

174:                                              ; preds = %110, %168, %38, %31, %113
  %175 = phi i32 [ 0, %31 ], [ 0, %113 ], [ 3, %38 ], [ 0, %168 ], [ 3, %110 ]
  ret i32 %175
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ps_parser_to_coord_array(%struct.PS_ParserRec_* nocapture, i32, i16*) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i16, align 2
  %6 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp ugt i8* %7, %10
  br i1 %11, label %12, label %31

12:                                               ; preds = %3, %24
  %13 = phi i8* [ %26, %24 ], [ %10, %3 ]
  %14 = phi i64 [ %27, %24 ], [ %9, %3 ]
  %15 = load i8, i8* %13, align 1
  switch i8 %15, label %31 [
    i8 32, label %24
    i8 13, label %24
    i8 10, label %24
    i8 9, label %24
    i8 12, label %24
    i8 0, label %24
    i8 37, label %18
  ]

16:                                               ; preds = %21
  %17 = load i8, i8* %22, align 1
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i8 [ %17, %16 ], [ %15, %12 ]
  %20 = phi i8* [ %22, %16 ], [ %13, %12 ]
  switch i8 %19, label %21 [
    i8 13, label %24
    i8 10, label %24
  ]

21:                                               ; preds = %18
  %22 = getelementptr inbounds i8, i8* %20, i64 1
  %23 = icmp eq i8* %22, %7
  br i1 %23, label %24, label %16

24:                                               ; preds = %21, %18, %18, %12, %12, %12, %12, %12, %12
  %25 = phi i8* [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %7, %21 ], [ %20, %18 ], [ %20, %18 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = ptrtoint i8* %26 to i64
  %28 = icmp ult i8* %26, %7
  br i1 %28, label %12, label %29

29:                                               ; preds = %24
  %30 = ptrtoint i8* %26 to i64
  br label %31

31:                                               ; preds = %12, %29, %3
  %32 = phi i64 [ %9, %3 ], [ %30, %29 ], [ %14, %12 ]
  store i64 %32, i64* %8, align 8
  %33 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = inttoptr i64 %32 to i8*
  store i8* %34, i8** %4, align 8
  %35 = icmp ugt i8* %7, %34
  br i1 %35, label %36, label %122

36:                                               ; preds = %31
  %37 = load i8, i8* %34, align 1
  %38 = icmp eq i8 %37, 123
  %39 = select i1 %38, i8 125, i8 0
  %40 = icmp eq i8 %37, 91
  %41 = select i1 %40, i8 93, i8 %39
  %42 = icmp ne i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %36
  %44 = getelementptr inbounds i8, i8* %34, i64 1
  store i8* %44, i8** %4, align 8
  %45 = ptrtoint i8* %44 to i64
  br label %46

46:                                               ; preds = %43, %36
  %47 = phi i64 [ %45, %43 ], [ %32, %36 ]
  %48 = phi i8* [ %44, %43 ], [ %34, %36 ]
  %49 = icmp ult i8* %48, %7
  br i1 %49, label %50, label %122

50:                                               ; preds = %46
  %51 = bitcast i8** %4 to i64*
  %52 = icmp ne i16* %2, null
  %53 = xor i1 %52, true
  %54 = sext i32 %1 to i64
  %55 = bitcast i16* %5 to i8*
  br label %56

56:                                               ; preds = %117, %50
  %57 = phi i64 [ %47, %50 ], [ %104, %117 ]
  %58 = phi i64 [ 0, %50 ], [ %106, %117 ]
  %59 = phi i32 [ 0, %50 ], [ %107, %117 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %55)
  store i16 -21846, i16* %5, align 2
  %60 = inttoptr i64 %57 to i8*
  %61 = icmp ugt i8* %7, %60
  br i1 %61, label %62, label %81

62:                                               ; preds = %56, %74
  %63 = phi i8* [ %76, %74 ], [ %60, %56 ]
  %64 = phi i64 [ %77, %74 ], [ %57, %56 ]
  %65 = load i8, i8* %63, align 1
  switch i8 %65, label %81 [
    i8 32, label %74
    i8 13, label %74
    i8 10, label %74
    i8 9, label %74
    i8 12, label %74
    i8 0, label %74
    i8 37, label %68
  ]

66:                                               ; preds = %71
  %67 = load i8, i8* %72, align 1
  br label %68

68:                                               ; preds = %62, %66
  %69 = phi i8 [ %67, %66 ], [ %65, %62 ]
  %70 = phi i8* [ %72, %66 ], [ %63, %62 ]
  switch i8 %69, label %71 [
    i8 13, label %74
    i8 10, label %74
  ]

71:                                               ; preds = %68
  %72 = getelementptr inbounds i8, i8* %70, i64 1
  %73 = icmp eq i8* %72, %7
  br i1 %73, label %74, label %66

74:                                               ; preds = %71, %68, %68, %62, %62, %62, %62, %62, %62
  %75 = phi i8* [ %63, %62 ], [ %63, %62 ], [ %63, %62 ], [ %63, %62 ], [ %63, %62 ], [ %63, %62 ], [ %7, %71 ], [ %70, %68 ], [ %70, %68 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 1
  %77 = ptrtoint i8* %76 to i64
  %78 = icmp ult i8* %76, %7
  br i1 %78, label %62, label %79

79:                                               ; preds = %74
  %80 = ptrtoint i8* %76 to i64
  br label %81

81:                                               ; preds = %62, %79, %56
  %82 = phi i64 [ %57, %56 ], [ %80, %79 ], [ %64, %62 ]
  store i64 %82, i64* %51, align 8
  %83 = inttoptr i64 %82 to i8*
  %84 = icmp ugt i8* %7, %83
  br i1 %84, label %85, label %110

85:                                               ; preds = %81
  %86 = load i8, i8* %83, align 1
  %87 = icmp eq i8 %86, %41
  br i1 %87, label %88, label %93

88:                                               ; preds = %85
  %89 = inttoptr i64 %82 to i8*
  %90 = trunc i64 %58 to i32
  %91 = getelementptr inbounds i8, i8* %89, i64 1
  store i8* %91, i8** %4, align 8
  %92 = ptrtoint i8* %91 to i64
  br label %114

93:                                               ; preds = %85
  %94 = icmp slt i64 %58, %54
  %95 = or i1 %94, %53
  br i1 %95, label %96, label %108

96:                                               ; preds = %93
  %97 = call fastcc i64 @PS_Conv_ToFixed(i8** nonnull %4, i8* %7, i64 0) #11
  %98 = lshr i64 %97, 16
  %99 = trunc i64 %98 to i16
  %100 = getelementptr inbounds i16, i16* %2, i64 %58
  %101 = select i1 %52, i16* %100, i16* %5
  store i16 %99, i16* %101, align 2
  %102 = load i8*, i8** %4, align 8
  %103 = icmp eq i8* %102, %83
  %104 = ptrtoint i8* %102 to i64
  br i1 %103, label %114, label %105

105:                                              ; preds = %96
  %106 = add nuw i64 %58, 1
  %107 = add nuw nsw i32 %59, 1
  br i1 %42, label %117, label %112

108:                                              ; preds = %93
  %109 = trunc i64 %58 to i32
  br label %114

110:                                              ; preds = %81
  %111 = trunc i64 %58 to i32
  br label %114

112:                                              ; preds = %105
  %113 = ptrtoint i8* %102 to i64
  br label %114

114:                                              ; preds = %96, %112, %110, %108, %88
  %115 = phi i64 [ %92, %88 ], [ %82, %108 ], [ %82, %110 ], [ %113, %112 ], [ %82, %96 ]
  %116 = phi i32 [ %90, %88 ], [ %109, %108 ], [ %111, %110 ], [ %107, %112 ], [ -1, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %55)
  br label %122

117:                                              ; preds = %105
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %55)
  %118 = icmp ult i8* %102, %7
  br i1 %118, label %56, label %119

119:                                              ; preds = %117
  %120 = ptrtoint i8* %102 to i64
  %121 = trunc i64 %106 to i32
  br label %122

122:                                              ; preds = %31, %46, %114, %119
  %123 = phi i64 [ %32, %31 ], [ %115, %114 ], [ %47, %46 ], [ %120, %119 ]
  %124 = phi i32 [ 0, %31 ], [ %116, %114 ], [ 0, %46 ], [ %121, %119 ]
  store i64 %123, i64* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  ret i32 %124
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ps_parser_to_fixed_array(%struct.PS_ParserRec_* nocapture, i32, i64*, i32) #0 {
  %5 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = inttoptr i64 %8 to i8*
  %10 = icmp ugt i8* %6, %9
  br i1 %10, label %11, label %30

11:                                               ; preds = %4, %23
  %12 = phi i8* [ %25, %23 ], [ %9, %4 ]
  %13 = phi i64 [ %26, %23 ], [ %8, %4 ]
  %14 = load i8, i8* %12, align 1
  switch i8 %14, label %30 [
    i8 32, label %23
    i8 13, label %23
    i8 10, label %23
    i8 9, label %23
    i8 12, label %23
    i8 0, label %23
    i8 37, label %17
  ]

15:                                               ; preds = %20
  %16 = load i8, i8* %21, align 1
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi i8 [ %16, %15 ], [ %14, %11 ]
  %19 = phi i8* [ %21, %15 ], [ %12, %11 ]
  switch i8 %18, label %20 [
    i8 13, label %23
    i8 10, label %23
  ]

20:                                               ; preds = %17
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  %22 = icmp eq i8* %21, %6
  br i1 %22, label %23, label %15

23:                                               ; preds = %20, %17, %17, %11, %11, %11, %11, %11, %11
  %24 = phi i8* [ %12, %11 ], [ %12, %11 ], [ %12, %11 ], [ %12, %11 ], [ %12, %11 ], [ %12, %11 ], [ %6, %20 ], [ %19, %17 ], [ %19, %17 ]
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  %26 = ptrtoint i8* %25 to i64
  %27 = icmp ult i8* %25, %6
  br i1 %27, label %11, label %28

28:                                               ; preds = %23
  %29 = ptrtoint i8* %25 to i64
  br label %30

30:                                               ; preds = %11, %28, %4
  %31 = phi i64 [ %8, %4 ], [ %29, %28 ], [ %13, %11 ]
  store i64 %31, i64* %7, align 8
  %32 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 0
  %33 = tail call fastcc i32 @ps_tofixedarray(i8** %32, i8* %6, i32 %1, i64* %2, i32 %3)
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define internal void @ps_parser_to_token(%struct.PS_ParserRec_* nocapture, %struct.T1_TokenRec_* nocapture) #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %5 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %1, i64 0, i32 2
  %6 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %1, i64 0, i32 0
  %7 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %1, i64 0, i32 1
  %8 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %9 = bitcast %struct.T1_TokenRec_* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false)
  %10 = load i8*, i8** %8, align 8
  %11 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = inttoptr i64 %12 to i8*
  %14 = icmp ugt i8* %10, %13
  br i1 %14, label %15, label %34

15:                                               ; preds = %2, %27
  %16 = phi i8* [ %29, %27 ], [ %13, %2 ]
  %17 = phi i64 [ %30, %27 ], [ %12, %2 ]
  %18 = load i8, i8* %16, align 1
  switch i8 %18, label %34 [
    i8 32, label %27
    i8 13, label %27
    i8 10, label %27
    i8 9, label %27
    i8 12, label %27
    i8 0, label %27
    i8 37, label %21
  ]

19:                                               ; preds = %24
  %20 = load i8, i8* %25, align 1
  br label %21

21:                                               ; preds = %15, %19
  %22 = phi i8 [ %20, %19 ], [ %18, %15 ]
  %23 = phi i8* [ %25, %19 ], [ %16, %15 ]
  switch i8 %22, label %24 [
    i8 13, label %27
    i8 10, label %27
  ]

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %23, i64 1
  %26 = icmp eq i8* %25, %10
  br i1 %26, label %27, label %19

27:                                               ; preds = %24, %21, %21, %15, %15, %15, %15, %15, %15
  %28 = phi i8* [ %16, %15 ], [ %16, %15 ], [ %16, %15 ], [ %16, %15 ], [ %16, %15 ], [ %16, %15 ], [ %10, %24 ], [ %23, %21 ], [ %23, %21 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 1
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp ult i8* %29, %10
  br i1 %31, label %15, label %32

32:                                               ; preds = %27
  %33 = ptrtoint i8* %29 to i64
  br label %34

34:                                               ; preds = %15, %32, %2
  %35 = phi i64 [ %12, %2 ], [ %33, %32 ], [ %17, %15 ]
  store i64 %35, i64* %11, align 8
  %36 = inttoptr i64 %35 to i8*
  store i8* %36, i8** %3, align 8
  %37 = icmp ugt i8* %10, %36
  br i1 %37, label %38, label %154

38:                                               ; preds = %34
  %39 = load i8, i8* %36, align 1
  switch i8 %39, label %133 [
    i8 40, label %40
    i8 123, label %49
    i8 91, label %58
  ]

40:                                               ; preds = %38
  store i32 2, i32* %5, align 8
  %41 = bitcast %struct.T1_TokenRec_* %1 to i64*
  store i64 %35, i64* %41, align 8
  %42 = call fastcc i32 @skip_literal_string(i8** nonnull %3, i8* %10)
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %145

44:                                               ; preds = %40
  %45 = bitcast i8** %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast i8** %7 to i64*
  store i64 %46, i64* %47, align 8
  %48 = inttoptr i64 %46 to i8*
  br label %147

49:                                               ; preds = %38
  store i32 3, i32* %5, align 8
  %50 = bitcast %struct.T1_TokenRec_* %1 to i64*
  store i64 %35, i64* %50, align 8
  %51 = call fastcc i32 @skip_procedure(i8** nonnull %3, i8* %10)
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %145

53:                                               ; preds = %49
  %54 = bitcast i8** %3 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast i8** %7 to i64*
  store i64 %55, i64* %56, align 8
  %57 = inttoptr i64 %55 to i8*
  br label %147

58:                                               ; preds = %38
  store i32 3, i32* %5, align 8
  %59 = getelementptr inbounds i8, i8* %36, i64 1
  store i8* %59, i8** %3, align 8
  store i8* %36, i8** %6, align 8
  %60 = ptrtoint i8* %59 to i64
  store i64 %60, i64* %11, align 8
  %61 = load i8*, i8** %8, align 8
  %62 = icmp ugt i8* %61, %59
  br i1 %62, label %63, label %82

63:                                               ; preds = %58, %75
  %64 = phi i8* [ %77, %75 ], [ %59, %58 ]
  %65 = phi i64 [ %78, %75 ], [ %60, %58 ]
  %66 = load i8, i8* %64, align 1
  switch i8 %66, label %82 [
    i8 32, label %75
    i8 13, label %75
    i8 10, label %75
    i8 9, label %75
    i8 12, label %75
    i8 0, label %75
    i8 37, label %69
  ]

67:                                               ; preds = %72
  %68 = load i8, i8* %73, align 1
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi i8 [ %68, %67 ], [ %66, %63 ]
  %71 = phi i8* [ %73, %67 ], [ %64, %63 ]
  switch i8 %70, label %72 [
    i8 13, label %75
    i8 10, label %75
  ]

72:                                               ; preds = %69
  %73 = getelementptr inbounds i8, i8* %71, i64 1
  %74 = icmp eq i8* %73, %61
  br i1 %74, label %75, label %67

75:                                               ; preds = %72, %69, %69, %63, %63, %63, %63, %63, %63
  %76 = phi i8* [ %64, %63 ], [ %64, %63 ], [ %64, %63 ], [ %64, %63 ], [ %64, %63 ], [ %64, %63 ], [ %61, %72 ], [ %71, %69 ], [ %71, %69 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 1
  %78 = ptrtoint i8* %77 to i64
  %79 = icmp ult i8* %77, %61
  br i1 %79, label %63, label %80

80:                                               ; preds = %75
  %81 = ptrtoint i8* %77 to i64
  br label %82

82:                                               ; preds = %63, %80, %58
  %83 = phi i64 [ %60, %58 ], [ %81, %80 ], [ %65, %63 ]
  %84 = bitcast i8** %3 to i64*
  store i64 %83, i64* %11, align 8
  store i64 %83, i64* %84, align 8
  %85 = inttoptr i64 %83 to i8*
  %86 = icmp ugt i8* %10, %85
  br i1 %86, label %87, label %145

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 3
  br label %89

89:                                               ; preds = %87, %129
  %90 = phi i64 [ %83, %87 ], [ %130, %129 ]
  %91 = phi i8* [ %85, %87 ], [ %131, %129 ]
  %92 = phi i32 [ 1, %87 ], [ %105, %129 ]
  %93 = load i32, i32* %88, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %145

95:                                               ; preds = %89
  %96 = load i8, i8* %91, align 1
  switch i8 %96, label %104 [
    i8 91, label %97
    i8 93, label %99
  ]

97:                                               ; preds = %95
  %98 = add nsw i32 %92, 1
  br label %104

99:                                               ; preds = %95
  %100 = add nsw i32 %92, -1
  %101 = icmp slt i32 %92, 2
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = getelementptr inbounds i8, i8* %91, i64 1
  store i8* %103, i8** %3, align 8
  store i8* %103, i8** %7, align 8
  br label %147

104:                                              ; preds = %95, %99, %97
  %105 = phi i32 [ %98, %97 ], [ %100, %99 ], [ %92, %95 ]
  store i64 %90, i64* %11, align 8
  tail call void @ps_parser_skip_PS_token(%struct.PS_ParserRec_* %0)
  %106 = load i8*, i8** %8, align 8
  %107 = load i64, i64* %11, align 8
  %108 = inttoptr i64 %107 to i8*
  %109 = icmp ugt i8* %106, %108
  br i1 %109, label %110, label %129

110:                                              ; preds = %104, %122
  %111 = phi i8* [ %124, %122 ], [ %108, %104 ]
  %112 = phi i64 [ %125, %122 ], [ %107, %104 ]
  %113 = load i8, i8* %111, align 1
  switch i8 %113, label %129 [
    i8 32, label %122
    i8 13, label %122
    i8 10, label %122
    i8 9, label %122
    i8 12, label %122
    i8 0, label %122
    i8 37, label %116
  ]

114:                                              ; preds = %119
  %115 = load i8, i8* %120, align 1
  br label %116

116:                                              ; preds = %110, %114
  %117 = phi i8 [ %115, %114 ], [ %113, %110 ]
  %118 = phi i8* [ %120, %114 ], [ %111, %110 ]
  switch i8 %117, label %119 [
    i8 13, label %122
    i8 10, label %122
  ]

119:                                              ; preds = %116
  %120 = getelementptr inbounds i8, i8* %118, i64 1
  %121 = icmp eq i8* %120, %106
  br i1 %121, label %122, label %114

122:                                              ; preds = %119, %116, %116, %110, %110, %110, %110, %110, %110
  %123 = phi i8* [ %111, %110 ], [ %111, %110 ], [ %111, %110 ], [ %111, %110 ], [ %111, %110 ], [ %111, %110 ], [ %106, %119 ], [ %118, %116 ], [ %118, %116 ]
  %124 = getelementptr inbounds i8, i8* %123, i64 1
  %125 = ptrtoint i8* %124 to i64
  %126 = icmp ult i8* %124, %106
  br i1 %126, label %110, label %127

127:                                              ; preds = %122
  %128 = ptrtoint i8* %124 to i64
  br label %129

129:                                              ; preds = %110, %127, %104
  %130 = phi i64 [ %107, %104 ], [ %128, %127 ], [ %112, %110 ]
  store i64 %130, i64* %11, align 8
  store i64 %130, i64* %84, align 8
  %131 = inttoptr i64 %130 to i8*
  %132 = icmp ugt i8* %10, %131
  br i1 %132, label %89, label %145

133:                                              ; preds = %38
  store i8* %36, i8** %6, align 8
  %134 = load i8, i8* %36, align 1
  %135 = icmp eq i8 %134, 47
  %136 = select i1 %135, i32 4, i32 1
  store i32 %136, i32* %5, align 8
  tail call void @ps_parser_skip_PS_token(%struct.PS_ParserRec_* %0)
  %137 = load i64, i64* %11, align 8
  %138 = bitcast i8** %3 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %133
  %143 = bitcast i8** %7 to i64*
  store i64 %137, i64* %143, align 8
  %144 = inttoptr i64 %137 to i8*
  br label %147

145:                                              ; preds = %89, %129, %82, %40, %49, %133
  %146 = load i8*, i8** %7, align 8
  br label %147

147:                                              ; preds = %145, %142, %102, %53, %44
  %148 = phi i8* [ %146, %145 ], [ %144, %142 ], [ %103, %102 ], [ %57, %53 ], [ %48, %44 ]
  %149 = icmp eq i8* %148, null
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  store i8* null, i8** %6, align 8
  store i32 0, i32* %5, align 8
  br label %151

151:                                              ; preds = %147, %150
  %152 = bitcast i8** %3 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %11, align 8
  br label %154

154:                                              ; preds = %34, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @ps_parser_to_token_array(%struct.PS_ParserRec_* nocapture, %struct.T1_TokenRec_*, i32, i32* nocapture) #0 {
  %5 = alloca %struct.T1_TokenRec_, align 8
  %6 = alloca %struct.T1_TokenRec_, align 8
  %7 = bitcast %struct.T1_TokenRec_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  store i32 -1, i32* %3, align 4
  call void @ps_parser_to_token(%struct.PS_ParserRec_* %0, %struct.T1_TokenRec_* nonnull %5)
  %8 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %5, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %11, label %53

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 0
  %13 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i32 %2 to i64
  %19 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %1, i64 %18
  %20 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %5, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %22, i8** %12, align 8
  %23 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %5, i64 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 -1
  store i8* %25, i8** %15, align 8
  %26 = icmp ult i8* %22, %25
  br i1 %26, label %27, label %46

27:                                               ; preds = %11
  %28 = bitcast %struct.T1_TokenRec_* %6 to i8*
  %29 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %6, i64 0, i32 2
  %30 = icmp ne %struct.T1_TokenRec_* %1, null
  br label %31

31:                                               ; preds = %27, %41
  %32 = phi %struct.T1_TokenRec_* [ %1, %27 ], [ %42, %41 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @ps_parser_to_token(%struct.PS_ParserRec_* %0, %struct.T1_TokenRec_* nonnull %6)
  %33 = load i32, i32* %29, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br label %46

36:                                               ; preds = %31
  %37 = icmp ult %struct.T1_TokenRec_* %32, %19
  %38 = and i1 %30, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = bitcast %struct.T1_TokenRec_* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %28, i64 24, i1 false)
  br label %41

41:                                               ; preds = %39, %36
  %42 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %32, i64 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  %43 = load i8*, i8** %12, align 8
  %44 = load i8*, i8** %15, align 8
  %45 = icmp ult i8* %43, %44
  br i1 %45, label %31, label %46

46:                                               ; preds = %41, %11, %35
  %47 = phi %struct.T1_TokenRec_* [ %32, %35 ], [ %1, %11 ], [ %42, %41 ]
  %48 = ptrtoint %struct.T1_TokenRec_* %47 to i64
  %49 = ptrtoint %struct.T1_TokenRec_* %1 to i64
  %50 = sub i64 %48, %49
  %51 = sdiv exact i64 %50, 24
  %52 = trunc i64 %51 to i32
  store i32 %52, i32* %3, align 4
  store i64 %14, i64* %13, align 8
  store i64 %17, i64* %16, align 8
  br label %53

53:                                               ; preds = %46, %4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ps_parser_load_field(%struct.PS_ParserRec_* nocapture, %struct.T1_FieldRec_* nocapture readonly, i8** nocapture readonly, i32, i64* nocapture readnone) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca %struct.T1_TokenRec_, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.T1_TokenRec_, align 8
  %11 = alloca [4 x i64], align 16
  %12 = bitcast %struct.T1_TokenRec_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %14 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 -1431655766, i32* %9, align 4
  call void @ps_parser_to_token(%struct.PS_ParserRec_* %0, %struct.T1_TokenRec_* nonnull %7)
  %15 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %7, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %383, label %18

18:                                               ; preds = %5
  %19 = bitcast %struct.T1_TokenRec_* %7 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast i8** %8 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %7, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 7
  %27 = inttoptr i64 %20 to i8*
  br i1 %26, label %28, label %41

28:                                               ; preds = %18
  %29 = bitcast %struct.T1_TokenRec_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %30 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 0
  %31 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i8, i8* %27, i64 1
  store i8* %36, i8** %30, align 8
  %37 = getelementptr inbounds i8, i8* %23, i64 -1
  store i8* %37, i8** %33, align 8
  call void @ps_parser_to_token(%struct.PS_ParserRec_* %0, %struct.T1_TokenRec_* nonnull %10)
  store i64 %32, i64* %31, align 8
  store i64 %35, i64* %34, align 8
  %38 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %10, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  br i1 %40, label %43, label %52

41:                                               ; preds = %18
  %42 = icmp eq i32 %16, 3
  br i1 %42, label %43, label %52

43:                                               ; preds = %28, %41
  %44 = phi i32 [ 8, %28 ], [ %25, %41 ]
  %45 = phi i32 [ 1, %28 ], [ %3, %41 ]
  %46 = icmp eq i32 %3, 0
  br i1 %46, label %383, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds i8, i8* %27, i64 1
  store i8* %48, i8** %8, align 8
  %49 = getelementptr inbounds i8, i8* %23, i64 -1
  %50 = ptrtoint i8* %48 to i64
  %51 = icmp eq i32 %45, 0
  br i1 %51, label %382, label %52

52:                                               ; preds = %41, %28, %47
  %53 = phi i8* [ %49, %47 ], [ %23, %28 ], [ %23, %41 ]
  %54 = phi i32 [ %45, %47 ], [ 1, %28 ], [ 1, %41 ]
  %55 = phi i32 [ %44, %47 ], [ 7, %28 ], [ %25, %41 ]
  %56 = phi i64 [ 1, %47 ], [ 0, %28 ], [ 0, %41 ]
  %57 = phi i64 [ %50, %47 ], [ %20, %28 ], [ %20, %41 ]
  %58 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %1, i64 0, i32 4
  %59 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 4
  %60 = shl i32 %3, 2
  %61 = zext i32 %60 to i64
  %62 = icmp eq i32 %3, 0
  %63 = shl i32 %3, 1
  %64 = mul i32 %3, 3
  %65 = bitcast [4 x i64]* %11 to i8*
  %66 = getelementptr inbounds [4 x i64], [4 x i64]* %11, i64 0, i64 0
  %67 = getelementptr inbounds [4 x i64], [4 x i64]* %11, i64 0, i64 1
  %68 = getelementptr inbounds [4 x i64], [4 x i64]* %11, i64 0, i64 2
  %69 = getelementptr inbounds [4 x i64], [4 x i64]* %11, i64 0, i64 3
  %70 = ptrtoint i8* %53 to i64
  %71 = bitcast i8** %6 to i8*
  %72 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %1, i64 0, i32 5
  %73 = zext i32 %3 to i64
  %74 = shl i32 %3, 1
  %75 = zext i32 %74 to i64
  %76 = zext i32 %64 to i64
  %77 = bitcast [4 x i64]* %11 to i8*
  br label %78

78:                                               ; preds = %379, %52
  %79 = phi i64 [ %57, %52 ], [ %381, %379 ]
  %80 = phi i64 [ %56, %52 ], [ %380, %379 ]
  %81 = phi i32 [ %54, %52 ], [ %377, %379 ]
  %82 = getelementptr inbounds i8*, i8** %2, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %58, align 8
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = inttoptr i64 %79 to i8*
  %88 = icmp ugt i8* %53, %87
  br i1 %88, label %89, label %108

89:                                               ; preds = %78, %101
  %90 = phi i8* [ %103, %101 ], [ %87, %78 ]
  %91 = phi i64 [ %104, %101 ], [ %79, %78 ]
  %92 = load i8, i8* %90, align 1
  switch i8 %92, label %108 [
    i8 32, label %101
    i8 13, label %101
    i8 10, label %101
    i8 9, label %101
    i8 12, label %101
    i8 0, label %101
    i8 37, label %95
  ]

93:                                               ; preds = %98
  %94 = load i8, i8* %99, align 1
  br label %95

95:                                               ; preds = %89, %93
  %96 = phi i8 [ %94, %93 ], [ %92, %89 ]
  %97 = phi i8* [ %99, %93 ], [ %90, %89 ]
  switch i8 %96, label %98 [
    i8 13, label %101
    i8 10, label %101
  ]

98:                                               ; preds = %95
  %99 = getelementptr inbounds i8, i8* %97, i64 1
  %100 = icmp eq i8* %99, %53
  br i1 %100, label %101, label %93

101:                                              ; preds = %98, %95, %95, %89, %89, %89, %89, %89, %89
  %102 = phi i8* [ %90, %89 ], [ %90, %89 ], [ %90, %89 ], [ %90, %89 ], [ %90, %89 ], [ %90, %89 ], [ %97, %95 ], [ %97, %95 ], [ %53, %98 ]
  %103 = getelementptr inbounds i8, i8* %102, i64 1
  %104 = ptrtoint i8* %103 to i64
  %105 = icmp ult i8* %103, %53
  br i1 %105, label %89, label %106

106:                                              ; preds = %101
  %107 = ptrtoint i8* %103 to i64
  br label %108

108:                                              ; preds = %89, %106, %78
  %109 = phi i64 [ %79, %78 ], [ %107, %106 ], [ %91, %89 ]
  store i64 %109, i64* %21, align 8
  %110 = inttoptr i64 %109 to i8*
  switch i32 %55, label %383 [
    i32 1, label %111
    i32 3, label %155
    i32 4, label %157
    i32 2, label %159
    i32 5, label %253
    i32 6, label %253
    i32 7, label %282
    i32 8, label %302
  ]

111:                                              ; preds = %108
  %112 = getelementptr inbounds i8, i8* %110, i64 3
  %113 = icmp ult i8* %112, %53
  br i1 %113, label %114, label %130

114:                                              ; preds = %111
  %115 = load i8, i8* %110, align 1
  %116 = icmp eq i8 %115, 116
  br i1 %116, label %117, label %130

117:                                              ; preds = %114
  %118 = getelementptr inbounds i8, i8* %110, i64 1
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 114
  br i1 %120, label %121, label %130

121:                                              ; preds = %117
  %122 = getelementptr inbounds i8, i8* %110, i64 2
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, 117
  br i1 %124, label %125, label %130

125:                                              ; preds = %121
  %126 = load i8, i8* %112, align 1
  %127 = icmp eq i8 %126, 101
  br i1 %127, label %128, label %130

128:                                              ; preds = %125
  %129 = getelementptr inbounds i8, i8* %110, i64 5
  br label %152

130:                                              ; preds = %125, %121, %117, %114, %111
  %131 = getelementptr inbounds i8, i8* %110, i64 4
  %132 = icmp ult i8* %131, %53
  br i1 %132, label %133, label %152

133:                                              ; preds = %130
  %134 = load i8, i8* %110, align 1
  %135 = icmp eq i8 %134, 102
  br i1 %135, label %136, label %152

136:                                              ; preds = %133
  %137 = getelementptr inbounds i8, i8* %110, i64 1
  %138 = load i8, i8* %137, align 1
  %139 = icmp eq i8 %138, 97
  br i1 %139, label %140, label %152

140:                                              ; preds = %136
  %141 = getelementptr inbounds i8, i8* %110, i64 2
  %142 = load i8, i8* %141, align 1
  %143 = icmp eq i8 %142, 108
  br i1 %143, label %144, label %152

144:                                              ; preds = %140
  %145 = load i8, i8* %112, align 1
  %146 = icmp eq i8 %145, 115
  br i1 %146, label %147, label %152

147:                                              ; preds = %144
  %148 = load i8, i8* %131, align 1
  %149 = icmp eq i8 %148, 101
  %150 = getelementptr inbounds i8, i8* %110, i64 6
  %151 = select i1 %149, i8* %150, i8* %110
  br label %152

152:                                              ; preds = %128, %130, %133, %136, %140, %144, %147
  %153 = phi i8* [ %129, %128 ], [ %110, %144 ], [ %110, %140 ], [ %110, %136 ], [ %110, %133 ], [ %110, %130 ], [ %151, %147 ]
  %154 = phi i64 [ 1, %128 ], [ 0, %144 ], [ 0, %140 ], [ 0, %136 ], [ 0, %133 ], [ 0, %130 ], [ 0, %147 ]
  store i8* %153, i8** %8, align 8
  br label %240

155:                                              ; preds = %108
  %156 = call fastcc i64 @PS_Conv_ToFixed(i8** nonnull %8, i8* %53, i64 0)
  br label %240

157:                                              ; preds = %108
  %158 = call fastcc i64 @PS_Conv_ToFixed(i8** nonnull %8, i8* %53, i64 3)
  br label %240

159:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  store i8* %110, i8** %6, align 8
  %160 = icmp ugt i8* %53, %110
  br i1 %160, label %161, label %238

161:                                              ; preds = %159
  %162 = load i8, i8* %110, align 1
  switch i8 %162, label %170 [
    i8 45, label %163
    i8 43, label %163
  ]

163:                                              ; preds = %161, %161
  %164 = getelementptr inbounds i8, i8* %110, i64 1
  %165 = icmp eq i8* %164, %53
  br i1 %165, label %238, label %166

166:                                              ; preds = %163
  %167 = icmp eq i8 %162, 45
  %168 = zext i1 %167 to i8
  %169 = load i8, i8* %164, align 1
  switch i8 %169, label %170 [
    i8 45, label %238
    i8 43, label %238
  ]

170:                                              ; preds = %166, %161
  %171 = phi i8 [ %162, %161 ], [ %169, %166 ]
  %172 = phi i8* [ %110, %161 ], [ %164, %166 ]
  %173 = phi i8 [ 0, %161 ], [ %168, %166 ]
  %174 = icmp ult i8* %172, %53
  br i1 %174, label %176, label %175

175:                                              ; preds = %170
  store i8* %172, i8** %6, align 8
  br label %213

176:                                              ; preds = %170, %206
  %177 = phi i8 [ %207, %206 ], [ %171, %170 ]
  %178 = phi i8 [ %203, %206 ], [ 0, %170 ]
  %179 = phi i64 [ %202, %206 ], [ 0, %170 ]
  %180 = phi i8* [ %204, %206 ], [ %172, %170 ]
  switch i8 %177, label %181 [
    i8 32, label %208
    i8 13, label %208
    i8 10, label %208
    i8 9, label %208
    i8 12, label %208
    i8 0, label %208
  ]

181:                                              ; preds = %176
  %182 = icmp slt i8 %177, 0
  br i1 %182, label %208, label %183

183:                                              ; preds = %181
  %184 = and i8 %177, 127
  %185 = zext i8 %184 to i64
  %186 = getelementptr inbounds [128 x i8], [128 x i8]* @ft_char_table, i64 0, i64 %185
  %187 = load i8, i8* %186, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %208, label %189

189:                                              ; preds = %183
  %190 = sext i8 %187 to i64
  %191 = icmp slt i8 %187, 10
  br i1 %191, label %192, label %208

192:                                              ; preds = %189
  %193 = icmp sgt i64 %179, 214748364
  br i1 %193, label %201, label %194

194:                                              ; preds = %192
  %195 = icmp eq i64 %179, 214748364
  %196 = icmp sgt i8 %187, 7
  %197 = and i1 %195, %196
  br i1 %197, label %201, label %198

198:                                              ; preds = %194
  %199 = mul nsw i64 %179, 10
  %200 = add nsw i64 %199, %190
  br label %201

201:                                              ; preds = %198, %194, %192
  %202 = phi i64 [ %200, %198 ], [ %179, %192 ], [ 214748364, %194 ]
  %203 = phi i8 [ %178, %198 ], [ 1, %192 ], [ 1, %194 ]
  %204 = getelementptr inbounds i8, i8* %180, i64 1
  %205 = icmp eq i8* %204, %53
  br i1 %205, label %208, label %206

206:                                              ; preds = %201
  %207 = load i8, i8* %204, align 1
  br label %176

208:                                              ; preds = %201, %189, %183, %181, %176, %176, %176, %176, %176, %176
  %209 = phi i8* [ %53, %201 ], [ %180, %176 ], [ %180, %176 ], [ %180, %176 ], [ %180, %176 ], [ %180, %176 ], [ %180, %176 ], [ %180, %181 ], [ %180, %189 ], [ %180, %183 ]
  %210 = phi i64 [ %202, %201 ], [ %179, %176 ], [ %179, %176 ], [ %179, %176 ], [ %179, %176 ], [ %179, %176 ], [ %179, %176 ], [ %179, %181 ], [ %179, %189 ], [ %179, %183 ]
  %211 = phi i8 [ %203, %201 ], [ %178, %176 ], [ %178, %176 ], [ %178, %176 ], [ %178, %176 ], [ %178, %176 ], [ %178, %176 ], [ %178, %181 ], [ %178, %189 ], [ %178, %183 ]
  store i8* %209, i8** %6, align 8
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %208, %175
  %214 = phi i8* [ %172, %175 ], [ %209, %208 ]
  %215 = phi i64 [ 0, %175 ], [ %210, %208 ]
  br label %216

216:                                              ; preds = %208, %213
  %217 = phi i8* [ %214, %213 ], [ %209, %208 ]
  %218 = phi i64 [ %215, %213 ], [ 2147483647, %208 ]
  %219 = icmp eq i8 %173, 0
  %220 = sub nsw i64 0, %218
  %221 = select i1 %219, i64 %218, i64 %220
  %222 = icmp eq i8* %217, %110
  %223 = ptrtoint i8* %217 to i64
  br i1 %222, label %238, label %224

224:                                              ; preds = %216
  %225 = icmp ult i8* %217, %53
  br i1 %225, label %226, label %235

226:                                              ; preds = %224
  %227 = load i8, i8* %217, align 1
  %228 = icmp eq i8 %227, 35
  br i1 %228, label %229, label %235

229:                                              ; preds = %226
  %230 = getelementptr inbounds i8, i8* %217, i64 1
  store i8* %230, i8** %6, align 8
  %231 = call fastcc i64 @PS_Conv_Strtol(i8** nonnull %6, i8* %53, i64 %221) #11
  %232 = load i8*, i8** %6, align 8
  %233 = icmp eq i8* %232, %230
  %234 = ptrtoint i8* %232 to i64
  br i1 %233, label %238, label %235

235:                                              ; preds = %229, %226, %224
  %236 = phi i64 [ %234, %229 ], [ %223, %226 ], [ %223, %224 ]
  %237 = phi i64 [ %231, %229 ], [ %221, %226 ], [ %221, %224 ]
  store i64 %236, i64* %21, align 8
  br label %238

238:                                              ; preds = %163, %159, %166, %166, %216, %229, %235
  %239 = phi i64 [ %237, %235 ], [ 0, %216 ], [ 0, %229 ], [ 0, %166 ], [ 0, %166 ], [ 0, %159 ], [ 0, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %240

240:                                              ; preds = %238, %157, %155, %152
  %241 = phi i64 [ %239, %238 ], [ %158, %157 ], [ %156, %155 ], [ %154, %152 ]
  %242 = load i8, i8* %72, align 4
  switch i8 %242, label %251 [
    i8 1, label %243
    i8 2, label %245
    i8 4, label %248
  ]

243:                                              ; preds = %240
  %244 = trunc i64 %241 to i8
  store i8 %244, i8* %86, align 1
  br label %376

245:                                              ; preds = %240
  %246 = trunc i64 %241 to i16
  %247 = bitcast i8* %86 to i16*
  store i16 %246, i16* %247, align 2
  br label %376

248:                                              ; preds = %240
  %249 = trunc i64 %241 to i32
  %250 = bitcast i8* %86 to i32*
  store i32 %249, i32* %250, align 4
  br label %376

251:                                              ; preds = %240
  %252 = bitcast i8* %86 to i64*
  store i64 %241, i64* %252, align 8
  br label %376

253:                                              ; preds = %108, %108
  %254 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %59, align 8
  %255 = sub i64 %70, %109
  %256 = trunc i64 %255 to i32
  %257 = icmp ugt i8* %53, %110
  br i1 %257, label %258, label %376

258:                                              ; preds = %253
  switch i32 %16, label %265 [
    i32 4, label %259
    i32 2, label %262
  ]

259:                                              ; preds = %258
  %260 = add i32 %256, -1
  %261 = getelementptr inbounds i8, i8* %110, i64 1
  store i8* %261, i8** %8, align 8
  br label %266

262:                                              ; preds = %258
  %263 = getelementptr inbounds i8, i8* %110, i64 1
  store i8* %263, i8** %8, align 8
  %264 = add i32 %256, -2
  br label %266

265:                                              ; preds = %258
  store i32 3, i32* %9, align 4
  br label %384

266:                                              ; preds = %262, %259
  %267 = phi i8* [ %261, %259 ], [ %263, %262 ]
  %268 = phi i32 [ %260, %259 ], [ %264, %262 ]
  %269 = bitcast i8* %86 to i8**
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %273, label %272

272:                                              ; preds = %266
  call void @ft_mem_free(%struct.FT_MemoryRec_* %254, i8* nonnull %270) #11
  store i8* null, i8** %269, align 8
  br label %273

273:                                              ; preds = %266, %272
  %274 = add i32 %268, 1
  %275 = zext i32 %274 to i64
  %276 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %254, i64 %275, i32* nonnull %9) #11
  %277 = load i32, i32* %9, align 4
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %384

279:                                              ; preds = %273
  %280 = zext i32 %268 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %276, i8* align 1 %267, i64 %280, i1 false)
  %281 = getelementptr inbounds i8, i8* %276, i64 %280
  store i8 0, i8* %281, align 1
  store i8* %276, i8** %269, align 8
  br label %376

282:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %77, i8 -86, i64 32, i1 false)
  %283 = call fastcc i32 @ps_tofixedarray(i8** nonnull %8, i8* %53, i32 4, i64* nonnull %66, i32 0)
  %284 = icmp slt i32 %283, 4
  br i1 %284, label %301, label %285

285:                                              ; preds = %282
  %286 = load i64, i64* %66, align 16
  %287 = call i64 @FT_RoundFix(i64 %286) #11
  %288 = bitcast i8* %86 to i64*
  store i64 %287, i64* %288, align 8
  %289 = load i64, i64* %67, align 8
  %290 = call i64 @FT_RoundFix(i64 %289) #11
  %291 = getelementptr inbounds i8, i8* %86, i64 8
  %292 = bitcast i8* %291 to i64*
  store i64 %290, i64* %292, align 8
  %293 = load i64, i64* %68, align 16
  %294 = call i64 @FT_RoundFix(i64 %293) #11
  %295 = getelementptr inbounds i8, i8* %86, i64 16
  %296 = bitcast i8* %295 to i64*
  store i64 %294, i64* %296, align 8
  %297 = load i64, i64* %69, align 8
  %298 = call i64 @FT_RoundFix(i64 %297) #11
  %299 = getelementptr inbounds i8, i8* %86, i64 24
  %300 = bitcast i8* %299 to i64*
  store i64 %298, i64* %300, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #11
  br label %376

301:                                              ; preds = %282
  store i32 3, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #11
  br label %384

302:                                              ; preds = %108
  %303 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %59, align 8
  %304 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %303, i64 8, i64 0, i64 %61, i8* null, i32* nonnull %9) #11
  %305 = bitcast i8* %304 to i64*
  %306 = load i32, i32* %9, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %384

308:                                              ; preds = %302
  %309 = call fastcc i32 @ps_tofixedarray(i8** nonnull %8, i8* %53, i32 %3, i64* %305, i32 0)
  %310 = icmp slt i32 %309, 0
  %311 = icmp ult i32 %309, %3
  %312 = or i1 %310, %311
  br i1 %312, label %313, label %315

313:                                              ; preds = %439, %409, %338, %308
  store i32 3, i32* %9, align 4
  call void @ft_mem_free(%struct.FT_MemoryRec_* %303, i8* %304) #11
  %314 = load i32, i32* %9, align 4
  br label %384

315:                                              ; preds = %308
  %316 = load i64, i64* %21, align 8
  %317 = inttoptr i64 %316 to i8*
  %318 = icmp ugt i8* %53, %317
  br i1 %318, label %319, label %338

319:                                              ; preds = %315, %331
  %320 = phi i8* [ %333, %331 ], [ %317, %315 ]
  %321 = phi i64 [ %334, %331 ], [ %316, %315 ]
  %322 = load i8, i8* %320, align 1
  switch i8 %322, label %338 [
    i8 32, label %331
    i8 13, label %331
    i8 10, label %331
    i8 9, label %331
    i8 12, label %331
    i8 0, label %331
    i8 37, label %325
  ]

323:                                              ; preds = %328
  %324 = load i8, i8* %329, align 1
  br label %325

325:                                              ; preds = %319, %323
  %326 = phi i8 [ %324, %323 ], [ %322, %319 ]
  %327 = phi i8* [ %329, %323 ], [ %320, %319 ]
  switch i8 %326, label %328 [
    i8 13, label %331
    i8 10, label %331
  ]

328:                                              ; preds = %325
  %329 = getelementptr inbounds i8, i8* %327, i64 1
  %330 = icmp eq i8* %329, %53
  br i1 %330, label %331, label %323

331:                                              ; preds = %328, %325, %325, %319, %319, %319, %319, %319, %319
  %332 = phi i8* [ %320, %319 ], [ %320, %319 ], [ %320, %319 ], [ %320, %319 ], [ %320, %319 ], [ %320, %319 ], [ %327, %325 ], [ %327, %325 ], [ %53, %328 ]
  %333 = getelementptr inbounds i8, i8* %332, i64 1
  %334 = ptrtoint i8* %333 to i64
  %335 = icmp ult i8* %333, %53
  br i1 %335, label %319, label %336

336:                                              ; preds = %331
  %337 = ptrtoint i8* %333 to i64
  br label %338

338:                                              ; preds = %319, %336, %315
  %339 = phi i64 [ %316, %315 ], [ %337, %336 ], [ %321, %319 ]
  store i64 %339, i64* %21, align 8
  %340 = getelementptr inbounds i64, i64* %305, i64 %73
  %341 = call fastcc i32 @ps_tofixedarray(i8** nonnull %8, i8* %53, i32 %3, i64* %340, i32 0)
  %342 = icmp slt i32 %341, 0
  %343 = icmp ult i32 %341, %3
  %344 = or i1 %342, %343
  br i1 %344, label %313, label %386

345:                                              ; preds = %469, %345
  %346 = phi i64 [ %373, %345 ], [ 0, %469 ]
  %347 = getelementptr inbounds i8*, i8** %2, i64 %346
  %348 = bitcast i8** %347 to %struct.FT_BBox_**
  %349 = load %struct.FT_BBox_*, %struct.FT_BBox_** %348, align 8
  %350 = getelementptr inbounds i64, i64* %305, i64 %346
  %351 = load i64, i64* %350, align 8
  %352 = call i64 @FT_RoundFix(i64 %351) #11
  %353 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %349, i64 0, i32 0
  store i64 %352, i64* %353, align 8
  %354 = trunc i64 %346 to i32
  %355 = add i32 %354, %3
  %356 = zext i32 %355 to i64
  %357 = getelementptr inbounds i64, i64* %305, i64 %356
  %358 = load i64, i64* %357, align 8
  %359 = call i64 @FT_RoundFix(i64 %358) #11
  %360 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %349, i64 0, i32 1
  store i64 %359, i64* %360, align 8
  %361 = add i32 %63, %354
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds i64, i64* %305, i64 %362
  %364 = load i64, i64* %363, align 8
  %365 = call i64 @FT_RoundFix(i64 %364) #11
  %366 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %349, i64 0, i32 2
  store i64 %365, i64* %366, align 8
  %367 = add i32 %64, %354
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds i64, i64* %305, i64 %368
  %370 = load i64, i64* %369, align 8
  %371 = call i64 @FT_RoundFix(i64 %370) #11
  %372 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %349, i64 0, i32 3
  store i64 %371, i64* %372, align 8
  %373 = add nuw nsw i64 %346, 1
  %374 = icmp eq i64 %373, %73
  br i1 %374, label %375, label %345

375:                                              ; preds = %345, %469
  call void @ft_mem_free(%struct.FT_MemoryRec_* %303, i8* %304) #11
  br label %376

376:                                              ; preds = %375, %285, %279, %253, %243, %245, %248, %251
  %377 = add i32 %81, -1
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %382, label %379

379:                                              ; preds = %376
  %380 = add nuw nsw i64 %80, 1
  %381 = load i64, i64* %21, align 8
  br label %78

382:                                              ; preds = %376, %47
  store i32 0, i32* %9, align 4
  br label %384

383:                                              ; preds = %108, %5, %43
  store i32 3, i32* %9, align 4
  br label %384

384:                                              ; preds = %302, %273, %313, %265, %301, %382, %383
  %385 = phi i32 [ %314, %313 ], [ 3, %265 ], [ 3, %301 ], [ 0, %382 ], [ 3, %383 ], [ %306, %302 ], [ %277, %273 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  ret i32 %385

386:                                              ; preds = %338
  %387 = load i64, i64* %21, align 8
  %388 = inttoptr i64 %387 to i8*
  %389 = icmp ugt i8* %53, %388
  br i1 %389, label %390, label %409

390:                                              ; preds = %386, %402
  %391 = phi i8* [ %404, %402 ], [ %388, %386 ]
  %392 = phi i64 [ %405, %402 ], [ %387, %386 ]
  %393 = load i8, i8* %391, align 1
  switch i8 %393, label %409 [
    i8 32, label %402
    i8 13, label %402
    i8 10, label %402
    i8 9, label %402
    i8 12, label %402
    i8 0, label %402
    i8 37, label %394
  ]

394:                                              ; preds = %390, %400
  %395 = phi i8 [ %401, %400 ], [ %393, %390 ]
  %396 = phi i8* [ %398, %400 ], [ %391, %390 ]
  switch i8 %395, label %397 [
    i8 13, label %402
    i8 10, label %402
  ]

397:                                              ; preds = %394
  %398 = getelementptr inbounds i8, i8* %396, i64 1
  %399 = icmp eq i8* %398, %53
  br i1 %399, label %402, label %400

400:                                              ; preds = %397
  %401 = load i8, i8* %398, align 1
  br label %394

402:                                              ; preds = %394, %394, %397, %390, %390, %390, %390, %390, %390
  %403 = phi i8* [ %391, %390 ], [ %391, %390 ], [ %391, %390 ], [ %391, %390 ], [ %391, %390 ], [ %391, %390 ], [ %396, %394 ], [ %396, %394 ], [ %53, %397 ]
  %404 = getelementptr inbounds i8, i8* %403, i64 1
  %405 = ptrtoint i8* %404 to i64
  %406 = icmp ult i8* %404, %53
  br i1 %406, label %390, label %407

407:                                              ; preds = %402
  %408 = ptrtoint i8* %404 to i64
  br label %409

409:                                              ; preds = %390, %407, %386
  %410 = phi i64 [ %387, %386 ], [ %408, %407 ], [ %392, %390 ]
  store i64 %410, i64* %21, align 8
  %411 = getelementptr inbounds i64, i64* %305, i64 %75
  %412 = call fastcc i32 @ps_tofixedarray(i8** nonnull %8, i8* %53, i32 %3, i64* %411, i32 0)
  %413 = icmp slt i32 %412, 0
  %414 = icmp ult i32 %412, %3
  %415 = or i1 %413, %414
  br i1 %415, label %313, label %416

416:                                              ; preds = %409
  %417 = load i64, i64* %21, align 8
  %418 = inttoptr i64 %417 to i8*
  %419 = icmp ugt i8* %53, %418
  br i1 %419, label %420, label %439

420:                                              ; preds = %416, %432
  %421 = phi i8* [ %434, %432 ], [ %418, %416 ]
  %422 = phi i64 [ %435, %432 ], [ %417, %416 ]
  %423 = load i8, i8* %421, align 1
  switch i8 %423, label %439 [
    i8 32, label %432
    i8 13, label %432
    i8 10, label %432
    i8 9, label %432
    i8 12, label %432
    i8 0, label %432
    i8 37, label %424
  ]

424:                                              ; preds = %420, %430
  %425 = phi i8 [ %431, %430 ], [ %423, %420 ]
  %426 = phi i8* [ %428, %430 ], [ %421, %420 ]
  switch i8 %425, label %427 [
    i8 13, label %432
    i8 10, label %432
  ]

427:                                              ; preds = %424
  %428 = getelementptr inbounds i8, i8* %426, i64 1
  %429 = icmp eq i8* %428, %53
  br i1 %429, label %432, label %430

430:                                              ; preds = %427
  %431 = load i8, i8* %428, align 1
  br label %424

432:                                              ; preds = %424, %424, %427, %420, %420, %420, %420, %420, %420
  %433 = phi i8* [ %421, %420 ], [ %421, %420 ], [ %421, %420 ], [ %421, %420 ], [ %421, %420 ], [ %421, %420 ], [ %426, %424 ], [ %426, %424 ], [ %53, %427 ]
  %434 = getelementptr inbounds i8, i8* %433, i64 1
  %435 = ptrtoint i8* %434 to i64
  %436 = icmp ult i8* %434, %53
  br i1 %436, label %420, label %437

437:                                              ; preds = %432
  %438 = ptrtoint i8* %434 to i64
  br label %439

439:                                              ; preds = %420, %437, %416
  %440 = phi i64 [ %417, %416 ], [ %438, %437 ], [ %422, %420 ]
  store i64 %440, i64* %21, align 8
  %441 = getelementptr inbounds i64, i64* %305, i64 %76
  %442 = call fastcc i32 @ps_tofixedarray(i8** nonnull %8, i8* %53, i32 %3, i64* %441, i32 0)
  %443 = icmp slt i32 %442, 0
  %444 = icmp ult i32 %442, %3
  %445 = or i1 %443, %444
  br i1 %445, label %313, label %446

446:                                              ; preds = %439
  %447 = load i64, i64* %21, align 8
  %448 = inttoptr i64 %447 to i8*
  %449 = icmp ugt i8* %53, %448
  br i1 %449, label %450, label %469

450:                                              ; preds = %446, %462
  %451 = phi i8* [ %464, %462 ], [ %448, %446 ]
  %452 = phi i64 [ %465, %462 ], [ %447, %446 ]
  %453 = load i8, i8* %451, align 1
  switch i8 %453, label %469 [
    i8 32, label %462
    i8 13, label %462
    i8 10, label %462
    i8 9, label %462
    i8 12, label %462
    i8 0, label %462
    i8 37, label %454
  ]

454:                                              ; preds = %450, %460
  %455 = phi i8 [ %461, %460 ], [ %453, %450 ]
  %456 = phi i8* [ %458, %460 ], [ %451, %450 ]
  switch i8 %455, label %457 [
    i8 13, label %462
    i8 10, label %462
  ]

457:                                              ; preds = %454
  %458 = getelementptr inbounds i8, i8* %456, i64 1
  %459 = icmp eq i8* %458, %53
  br i1 %459, label %462, label %460

460:                                              ; preds = %457
  %461 = load i8, i8* %458, align 1
  br label %454

462:                                              ; preds = %454, %454, %457, %450, %450, %450, %450, %450, %450
  %463 = phi i8* [ %451, %450 ], [ %451, %450 ], [ %451, %450 ], [ %451, %450 ], [ %451, %450 ], [ %451, %450 ], [ %456, %454 ], [ %456, %454 ], [ %53, %457 ]
  %464 = getelementptr inbounds i8, i8* %463, i64 1
  %465 = ptrtoint i8* %464 to i64
  %466 = icmp ult i8* %464, %53
  br i1 %466, label %450, label %467

467:                                              ; preds = %462
  %468 = ptrtoint i8* %464 to i64
  br label %469

469:                                              ; preds = %450, %467, %446
  %470 = phi i64 [ %447, %446 ], [ %468, %467 ], [ %452, %450 ]
  store i64 %470, i64* %21, align 8
  br i1 %62, label %375, label %345
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ps_parser_load_field_table(%struct.PS_ParserRec_* nocapture, %struct.T1_FieldRec_* nocapture readonly, i8** nocapture readonly, i32, i64* nocapture readnone) #0 {
  %6 = alloca %struct.T1_TokenRec_, align 8
  %7 = alloca %struct.T1_TokenRec_, align 8
  %8 = alloca [32 x %struct.T1_TokenRec_], align 16
  %9 = alloca %struct.T1_FieldRec_, align 8
  %10 = bitcast [32 x %struct.T1_TokenRec_]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 768, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 768, i1 false)
  %11 = bitcast %struct.T1_FieldRec_* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #11
  %12 = bitcast %struct.T1_FieldRec_* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 48, i1 false)
  %13 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %9, i64 0, i32 2
  store i32 2, i32* %13, align 4
  %14 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %17 [
    i32 10, label %16
    i32 7, label %16
  ]

16:                                               ; preds = %5, %5
  store i32 3, i32* %13, align 4
  br label %17

17:                                               ; preds = %5, %16
  %18 = getelementptr inbounds [32 x %struct.T1_TokenRec_], [32 x %struct.T1_TokenRec_]* %8, i64 0, i64 0
  %19 = bitcast %struct.T1_TokenRec_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false) #11
  call void @ps_parser_to_token(%struct.PS_ParserRec_* %0, %struct.T1_TokenRec_* nonnull %6) #11
  %20 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %6, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %24, label %23

23:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  br label %105

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 0
  %26 = bitcast %struct.PS_ParserRec_* %0 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.PS_ParserRec_, %struct.PS_ParserRec_* %0, i64 0, i32 2
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds [32 x %struct.T1_TokenRec_], [32 x %struct.T1_TokenRec_]* %8, i64 0, i64 32
  %32 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %34, i8** %25, align 8
  %35 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %6, i64 0, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 -1
  store i8* %37, i8** %28, align 8
  %38 = icmp ult i8* %34, %37
  br i1 %38, label %39, label %56

39:                                               ; preds = %24
  %40 = bitcast %struct.T1_TokenRec_* %7 to i8*
  %41 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %7, i64 0, i32 2
  br label %42

42:                                               ; preds = %51, %39
  %43 = phi %struct.T1_TokenRec_* [ %18, %39 ], [ %52, %51 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false) #11
  call void @ps_parser_to_token(%struct.PS_ParserRec_* %0, %struct.T1_TokenRec_* nonnull %7) #11
  %44 = load i32, i32* %41, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  br label %56

47:                                               ; preds = %42
  %48 = icmp ult %struct.T1_TokenRec_* %43, %31
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = bitcast %struct.T1_TokenRec_* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %40, i64 24, i1 false) #11
  br label %51

51:                                               ; preds = %49, %47
  %52 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %43, i64 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  %53 = load i8*, i8** %25, align 8
  %54 = load i8*, i8** %28, align 8
  %55 = icmp ult i8* %53, %54
  br i1 %55, label %42, label %56

56:                                               ; preds = %51, %24, %46
  %57 = phi %struct.T1_TokenRec_* [ %43, %46 ], [ %18, %24 ], [ %52, %51 ]
  %58 = ptrtoint %struct.T1_TokenRec_* %57 to i64
  %59 = ptrtoint [32 x %struct.T1_TokenRec_]* %8 to i64
  %60 = sub i64 %58, %59
  %61 = sdiv exact i64 %60, 24
  %62 = trunc i64 %61 to i32
  store i64 %27, i64* %26, align 8
  store i64 %30, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %105, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %1, i64 0, i32 6
  %66 = load i32, i32* %65, align 8
  %67 = icmp ult i32 %66, %62
  %68 = select i1 %67, i32 %66, i32 %62
  %69 = load i32, i32* %14, align 4
  %70 = icmp eq i32 %69, 7
  br i1 %70, label %80, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %1, i64 0, i32 7
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = trunc i32 %68 to i8
  %77 = load i8*, i8** %2, align 8
  %78 = zext i32 %73 to i64
  %79 = getelementptr inbounds i8, i8* %77, i64 %78
  store i8 %76, i8* %79, align 1
  br label %80

80:                                               ; preds = %71, %64, %75
  %81 = icmp sgt i32 %68, 0
  br i1 %81, label %82, label %103

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %9, i64 0, i32 5
  %84 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %9, i64 0, i32 4
  br label %85

85:                                               ; preds = %82, %95
  %86 = phi %struct.T1_TokenRec_* [ %18, %82 ], [ %101, %95 ]
  %87 = phi i32 [ %68, %82 ], [ %100, %95 ]
  %88 = bitcast %struct.T1_TokenRec_* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %26, align 8
  %90 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %86, i64 0, i32 1
  %91 = bitcast i8** %90 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %29, align 8
  %93 = call i32 @ps_parser_load_field(%struct.PS_ParserRec_* %0, %struct.T1_FieldRec_* nonnull %9, i8** %2, i32 %3, i64* null)
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %103

95:                                               ; preds = %85
  %96 = load i8, i8* %83, align 4
  %97 = zext i8 %96 to i32
  %98 = load i32, i32* %84, align 8
  %99 = add i32 %98, %97
  store i32 %99, i32* %84, align 8
  %100 = add nsw i32 %87, -1
  %101 = getelementptr inbounds %struct.T1_TokenRec_, %struct.T1_TokenRec_* %86, i64 1
  %102 = icmp sgt i32 %100, 0
  br i1 %102, label %85, label %103

103:                                              ; preds = %95, %85, %80
  %104 = phi i32 [ 0, %80 ], [ %93, %85 ], [ 0, %95 ]
  store i64 %27, i64* %26, align 8
  store i64 %30, i64* %29, align 8
  br label %105

105:                                              ; preds = %23, %56, %103
  %106 = phi i32 [ %104, %103 ], [ 162, %56 ], [ 162, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 768, i8* nonnull %10) #11
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define internal void @ps_builder_init(%struct.PS_Builder_*, i8*, i8 zeroext) #0 {
  %4 = bitcast %struct.PS_Builder_* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 112, i1 false)
  %5 = icmp eq i8 %2, 0
  %6 = bitcast i8* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %struct.PS_Builder_* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 8
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 1
  %13 = bitcast %struct.FT_FaceRec_** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 2
  %18 = bitcast %struct.CFF_GlyphSlotRec_** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %1, i64 24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 3
  %23 = bitcast %struct.FT_GlyphLoaderRec_** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %1, i64 32
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 4
  %28 = bitcast %struct.FT_Outline_** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %1, i64 40
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 5
  %33 = bitcast %struct.FT_Outline_** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 6
  %35 = insertelement <2 x i8*> undef, i8* %1, i32 0
  %36 = shufflevector <2 x i8*> %35, <2 x i8*> undef, <2 x i32> zeroinitializer
  %37 = getelementptr i8, <2 x i8*> %36, <2 x i64> <i64 48, i64 56>
  %38 = bitcast i64** %34 to <2 x i8*>*
  store <2 x i8*> %37, <2 x i8*>* %38, align 8
  %39 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 8
  %40 = getelementptr i8, <2 x i8*> %36, <2 x i64> <i64 64, i64 80>
  %41 = bitcast %struct.FT_Vector_** %39 to <2 x i8*>*
  store <2 x i8*> %40, <2 x i8*>* %41, align 8
  %42 = getelementptr inbounds i8, i8* %1, i64 96
  %43 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 10
  %44 = bitcast %struct.FT_BBox_** %43 to i8**
  store i8* %42, i8** %44, align 8
  br i1 %5, label %51, label %45

45:                                               ; preds = %3
  %46 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 11
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds i8, i8* %1, i64 132
  %48 = load i8, i8* %47, align 4
  %49 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 12
  store i8 %48, i8* %49, align 1
  %50 = getelementptr inbounds i8, i8* %1, i64 133
  br label %59

51:                                               ; preds = %3
  %52 = getelementptr inbounds i8, i8* %1, i64 128
  %53 = load i8, i8* %52, align 8
  %54 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 11
  store i8 %53, i8* %54, align 8
  %55 = getelementptr inbounds i8, i8* %1, i64 129
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 12
  store i8 %56, i8* %57, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 130
  br label %59

59:                                               ; preds = %51, %45
  %60 = phi i8* [ %58, %51 ], [ %50, %45 ]
  %61 = phi i64 [ 131, %51 ], [ 134, %45 ]
  %62 = load i8, i8* %60, align 1
  %63 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 13
  store i8 %62, i8* %63, align 2
  %64 = getelementptr inbounds i8, i8* %1, i64 %61
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 14
  store i8 %65, i8* %66, align 1
  %67 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 15
  store i8 %2, i8* %67, align 4
  %68 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 16
  %69 = bitcast %struct.PS_Builder_FuncsRec_* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 bitcast ({ void (%struct.PS_Builder_*, i8*, i8)*, void (%struct.PS_Builder_*)* }* @ps_builder_funcs to i8*), i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @ps_builder_done(%struct.PS_Builder_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 2
  %3 = load %struct.CFF_GlyphSlotRec_*, %struct.CFF_GlyphSlotRec_** %2, align 8
  %4 = icmp eq %struct.CFF_GlyphSlotRec_* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.CFF_GlyphSlotRec_, %struct.CFF_GlyphSlotRec_* %3, i64 0, i32 0, i32 13
  %7 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 4
  %8 = bitcast %struct.FT_Outline_** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %struct.FT_Outline_* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %9, i64 40, i1 false)
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @t1_builder_init(%struct.T1_BuilderRec_* nocapture, %struct.FT_FaceRec_*, %struct.FT_SizeRec_* nocapture readonly, %struct.FT_GlyphSlotRec_*, i8 zeroext) #0 {
  %6 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 11
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 12
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 1
  store %struct.FT_FaceRec_* %1, %struct.FT_FaceRec_** %8, align 8
  %9 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 2
  store %struct.FT_GlyphSlotRec_* %3, %struct.FT_GlyphSlotRec_** %9, align 8
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 25
  %11 = bitcast %struct.FT_MemoryRec_** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.T1_BuilderRec_* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %struct.FT_GlyphSlotRec_* %3, null
  br i1 %14, label %39, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 21
  %17 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %17, i64 0, i32 0
  %19 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %18, align 8
  %20 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 3
  store %struct.FT_GlyphLoaderRec_* %19, %struct.FT_GlyphLoaderRec_** %20, align 8
  %21 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %19, i64 0, i32 5, i32 0
  %22 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 4
  store %struct.FT_Outline_* %21, %struct.FT_Outline_** %22, align 8
  %23 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %19, i64 0, i32 6, i32 0
  %24 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 5
  store %struct.FT_Outline_* %23, %struct.FT_Outline_** %24, align 8
  tail call void @FT_GlyphLoader_Rewind(%struct.FT_GlyphLoaderRec_* %19) #11
  %25 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %2, i64 0, i32 3
  %26 = bitcast %struct.FT_Size_InternalRec_** %25 to i64**
  %27 = load i64*, i64** %26, align 8
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 16
  %30 = bitcast i8** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 15
  store i8* null, i8** %31, align 8
  %32 = icmp eq i8 %4, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %15
  %34 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %16, align 8
  %35 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %34, i64 0, i32 5
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast i8** %31 to i64*
  store i64 %37, i64* %38, align 8
  br label %39

39:                                               ; preds = %33, %15, %5
  %40 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 6
  %41 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 17
  %42 = bitcast %struct.T1_Builder_FuncsRec_* %41 to i8*
  %43 = bitcast i64* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 48, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 bitcast ({ void (%struct.T1_BuilderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8)*, void (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i32)*, void (%struct.T1_BuilderRec_*, i64, i64, i8)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, i32 (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, void (%struct.T1_BuilderRec_*)* }* @t1_builder_funcs to i8*), i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @t1_builder_done(%struct.T1_BuilderRec_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 2
  %3 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %2, align 8
  %4 = icmp eq %struct.FT_GlyphSlotRec_* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 13
  %7 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 4
  %8 = bitcast %struct.FT_Outline_** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %struct.FT_Outline_* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %9, i64 40, i1 false)
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_builder_check_points(%struct.T1_BuilderRec_* nocapture readonly, i32) #0 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 3
  %6 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %6, i64 0, i32 5, i32 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = sext i16 %8 to i32
  %10 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %6, i64 0, i32 6, i32 0, i32 1
  %11 = load i16, i16* %10, align 2
  %12 = sext i16 %11 to i32
  %13 = add i32 %9, %1
  %14 = add i32 %13, %12
  %15 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %6, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ugt i32 %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %4
  %19 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %6, i32 %1, i32 0) #11
  br label %20

20:                                               ; preds = %4, %2, %18
  %21 = phi i32 [ %19, %18 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define internal void @t1_builder_add_point(%struct.T1_BuilderRec_* nocapture readonly, i64, i64, i8 zeroext) #0 {
  %5 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 5
  %6 = load %struct.FT_Outline_*, %struct.FT_Outline_** %5, align 8
  %7 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 12
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %6, i64 0, i32 2
  %12 = load %struct.FT_Vector_*, %struct.FT_Vector_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %6, i64 0, i32 1
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i64
  %16 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %6, i64 0, i32 3
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %15
  %19 = tail call i64 @FT_RoundFix(i64 %1) #11
  %20 = ashr i64 %19, 16
  %21 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 %15, i32 0
  store i64 %20, i64* %21, align 8
  %22 = tail call i64 @FT_RoundFix(i64 %2) #11
  %23 = ashr i64 %22, 16
  %24 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 %15, i32 1
  store i64 %23, i64* %24, align 8
  %25 = icmp eq i8 %3, 0
  %26 = select i1 %25, i8 2, i8 1
  store i8 %26, i8* %18, align 1
  br label %27

27:                                               ; preds = %4, %10
  %28 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %6, i64 0, i32 1
  %29 = load i16, i16* %28, align 2
  %30 = add i16 %29, 1
  store i16 %30, i16* %28, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_builder_add_point1(%struct.T1_BuilderRec_* nocapture readonly, i64, i64) #0 {
  %4 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 3
  %5 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %5, i64 0, i32 5, i32 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = sext i16 %7 to i32
  %9 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %5, i64 0, i32 6, i32 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = sext i16 %10 to i32
  %12 = add nsw i32 %8, 1
  %13 = add nsw i32 %12, %11
  %14 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %5, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ugt i32 %13, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %5, i32 1, i32 0) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %45

20:                                               ; preds = %3, %17
  %21 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 5
  %22 = load %struct.FT_Outline_*, %struct.FT_Outline_** %21, align 8
  %23 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 12
  %24 = load i8, i8* %23, align 4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %41, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %22, i64 0, i32 2
  %28 = load %struct.FT_Vector_*, %struct.FT_Vector_** %27, align 8
  %29 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %22, i64 0, i32 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %22, i64 0, i32 3
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  %35 = tail call i64 @FT_RoundFix(i64 %1) #11
  %36 = ashr i64 %35, 16
  %37 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %28, i64 %31, i32 0
  store i64 %36, i64* %37, align 8
  %38 = tail call i64 @FT_RoundFix(i64 %2) #11
  %39 = ashr i64 %38, 16
  %40 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %28, i64 %31, i32 1
  store i64 %39, i64* %40, align 8
  store i8 1, i8* %34, align 1
  br label %41

41:                                               ; preds = %20, %26
  %42 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %22, i64 0, i32 1
  %43 = load i16, i16* %42, align 2
  %44 = add i16 %43, 1
  store i16 %44, i16* %42, align 2
  br label %45

45:                                               ; preds = %17, %41
  %46 = phi i32 [ %18, %17 ], [ 0, %41 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_builder_add_contour(%struct.T1_BuilderRec_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 5
  %3 = load %struct.FT_Outline_*, %struct.FT_Outline_** %2, align 8
  %4 = icmp eq %struct.FT_Outline_* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 12
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 0
  %11 = load i16, i16* %10, align 8
  %12 = add i16 %11, 1
  store i16 %12, i16* %10, align 8
  br label %47

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 3
  %15 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %14, align 8
  %16 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %15, i64 0, i32 5, i32 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = sext i16 %17 to i32
  %19 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %15, i64 0, i32 6, i32 0, i32 0
  %20 = load i16, i16* %19, align 8
  %21 = sext i16 %20 to i32
  %22 = add nsw i32 %18, 1
  %23 = add nsw i32 %22, %21
  %24 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %15, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %23, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %13
  %28 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %15, i32 0, i32 1) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %47

30:                                               ; preds = %13, %27
  %31 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 0
  %32 = load i16, i16* %31, align 8
  %33 = icmp sgt i16 %32, 0
  br i1 %33, label %34, label %44

34:                                               ; preds = %30
  %35 = sext i16 %32 to i64
  %36 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %37 = load i16, i16* %36, align 2
  %38 = add i16 %37, -1
  %39 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %40 = load i16*, i16** %39, align 8
  %41 = add nsw i64 %35, -1
  %42 = getelementptr inbounds i16, i16* %40, i64 %41
  store i16 %38, i16* %42, align 2
  %43 = load i16, i16* %31, align 8
  br label %44

44:                                               ; preds = %34, %30
  %45 = phi i16 [ %43, %34 ], [ %32, %30 ]
  %46 = add i16 %45, 1
  store i16 %46, i16* %31, align 8
  br label %47

47:                                               ; preds = %44, %27, %1, %9
  %48 = phi i32 [ 0, %9 ], [ 3, %1 ], [ %28, %27 ], [ 0, %44 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_builder_start_point(%struct.T1_BuilderRec_* nocapture, i64, i64) #0 {
  %4 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %93, label %7

7:                                                ; preds = %3
  store i32 3, i32* %4, align 8
  %8 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 5
  %9 = load %struct.FT_Outline_*, %struct.FT_Outline_** %8, align 8
  %10 = icmp eq %struct.FT_Outline_* %9, null
  br i1 %10, label %93, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 12
  %13 = load i8, i8* %12, align 4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 0
  br label %47

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 3
  %19 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %18, align 8
  %20 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %19, i64 0, i32 5, i32 0, i32 0
  %21 = load i16, i16* %20, align 8
  %22 = sext i16 %21 to i32
  %23 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %19, i64 0, i32 6, i32 0, i32 0
  %24 = load i16, i16* %23, align 8
  %25 = sext i16 %24 to i32
  %26 = add nsw i32 %22, 1
  %27 = add nsw i32 %26, %25
  %28 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %19, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %27, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %19, i32 0, i32 1) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %93

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 0
  %36 = load i16, i16* %35, align 8
  %37 = icmp sgt i16 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %34
  %39 = sext i16 %36 to i64
  %40 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 1
  %41 = load i16, i16* %40, align 2
  %42 = add i16 %41, -1
  %43 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 4
  %44 = load i16*, i16** %43, align 8
  %45 = add nsw i64 %39, -1
  %46 = getelementptr inbounds i16, i16* %44, i64 %45
  store i16 %42, i16* %46, align 2
  br label %47

47:                                               ; preds = %15, %38
  %48 = phi i16* [ %35, %38 ], [ %16, %15 ]
  %49 = load i16, i16* %48, align 8
  br label %50

50:                                               ; preds = %47, %34
  %51 = phi i16 [ %36, %34 ], [ %49, %47 ]
  %52 = phi i16* [ %35, %34 ], [ %48, %47 ]
  %53 = add i16 %51, 1
  store i16 %53, i16* %52, align 8
  %54 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 3
  %55 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %54, align 8
  %56 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %55, i64 0, i32 5, i32 0, i32 1
  %57 = load i16, i16* %56, align 2
  %58 = sext i16 %57 to i32
  %59 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %55, i64 0, i32 6, i32 0, i32 1
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i32
  %62 = add nsw i32 %58, 1
  %63 = add nsw i32 %62, %61
  %64 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %55, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp ugt i32 %63, %65
  br i1 %66, label %67, label %70

67:                                               ; preds = %50
  %68 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %55, i32 1, i32 0) #11
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %93

70:                                               ; preds = %67, %50
  %71 = load %struct.FT_Outline_*, %struct.FT_Outline_** %8, align 8
  %72 = load i8, i8* %12, align 4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %71, i64 0, i32 2
  %76 = load %struct.FT_Vector_*, %struct.FT_Vector_** %75, align 8
  %77 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %71, i64 0, i32 1
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i64
  %80 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %71, i64 0, i32 3
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %79
  %83 = tail call i64 @FT_RoundFix(i64 %1) #11
  %84 = ashr i64 %83, 16
  %85 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 %79, i32 0
  store i64 %84, i64* %85, align 8
  %86 = tail call i64 @FT_RoundFix(i64 %2) #11
  %87 = ashr i64 %86, 16
  %88 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 %79, i32 1
  store i64 %87, i64* %88, align 8
  store i8 1, i8* %82, align 1
  br label %89

89:                                               ; preds = %74, %70
  %90 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %71, i64 0, i32 1
  %91 = load i16, i16* %90, align 2
  %92 = add i16 %91, 1
  store i16 %92, i16* %90, align 2
  br label %93

93:                                               ; preds = %89, %67, %31, %7, %3
  %94 = phi i32 [ 0, %3 ], [ 3, %7 ], [ %32, %31 ], [ %68, %67 ], [ 0, %89 ]
  ret i32 %94
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @t1_builder_close_contour(%struct.T1_BuilderRec_* nocapture readonly) #2 {
  %2 = getelementptr inbounds %struct.T1_BuilderRec_, %struct.T1_BuilderRec_* %0, i64 0, i32 5
  %3 = load %struct.FT_Outline_*, %struct.FT_Outline_** %2, align 8
  %4 = icmp eq %struct.FT_Outline_* %3, null
  br i1 %4, label %80, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 0
  %7 = load i16, i16* %6, align 8
  %8 = icmp slt i16 %7, 2
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = sext i16 %7 to i64
  %11 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %12 = load i16*, i16** %11, align 8
  %13 = add nsw i64 %10, -2
  %14 = getelementptr inbounds i16, i16* %12, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = sext i16 %15 to i32
  %17 = add nsw i32 %16, 1
  br label %23

18:                                               ; preds = %5
  %19 = icmp eq i16 %7, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %22 = load i16, i16* %21, align 2
  br label %31

23:                                               ; preds = %9, %18
  %24 = phi i32 [ %17, %9 ], [ 0, %18 ]
  %25 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = icmp eq i32 %24, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = add i16 %7, -1
  store i16 %30, i16* %6, align 8
  br label %80

31:                                               ; preds = %20, %23
  %32 = phi i16 [ %22, %20 ], [ %26, %23 ]
  %33 = phi i32 [ 0, %20 ], [ %24, %23 ]
  %34 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %35 = icmp sgt i16 %32, 1
  br i1 %35, label %36, label %63

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 2
  %38 = load %struct.FT_Vector_*, %struct.FT_Vector_** %37, align 8
  %39 = sext i32 %33 to i64
  %40 = sext i16 %32 to i64
  %41 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %38, i64 %40
  %42 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %41, i64 -1
  %43 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 3
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %40
  %46 = getelementptr inbounds i8, i8* %45, i64 -1
  %47 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %38, i64 %39, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %42, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  br i1 %51, label %52, label %63

52:                                               ; preds = %36
  %53 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %38, i64 %39, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %42, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %54, %56
  br i1 %57, label %58, label %63

58:                                               ; preds = %52
  %59 = load i8, i8* %46, align 1
  %60 = icmp eq i8 %59, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = add nsw i16 %32, -1
  store i16 %62, i16* %34, align 2
  br label %63

63:                                               ; preds = %36, %52, %61, %58, %31
  %64 = phi i16 [ %32, %36 ], [ %32, %52 ], [ %62, %61 ], [ %32, %58 ], [ %32, %31 ]
  %65 = sext i16 %7 to i64
  %66 = icmp sgt i16 %7, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %63
  %68 = sext i16 %64 to i32
  %69 = add nsw i32 %68, -1
  %70 = icmp eq i32 %33, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %67
  %72 = add nsw i16 %7, -1
  store i16 %72, i16* %6, align 8
  %73 = add i16 %64, -1
  store i16 %73, i16* %34, align 2
  br label %80

74:                                               ; preds = %67
  %75 = trunc i32 %69 to i16
  %76 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %77 = load i16*, i16** %76, align 8
  %78 = add nsw i64 %65, -1
  %79 = getelementptr inbounds i16, i16* %77, i64 %78
  store i16 %75, i16* %79, align 2
  br label %80

80:                                               ; preds = %63, %74, %71, %1, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_decoder_init(%struct.T1_DecoderRec_* nocapture, %struct.FT_FaceRec_*, %struct.FT_SizeRec_* nocapture readonly, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8 zeroext, i32, i32 (%struct.T1_DecoderRec_*, i32)*) #0 {
  %10 = bitcast %struct.T1_DecoderRec_* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 5048, i1 false)
  %11 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 24
  %12 = bitcast %struct.FT_DriverRec_** %11 to %struct.FT_ModuleRec_**
  %13 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %12, align 8
  %14 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %13, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76, i64 0, i64 0), i8 zeroext 1) #11
  %15 = icmp eq i8* %14, null
  br i1 %15, label %67, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 5
  %18 = bitcast %struct.FT_Service_PsCMapsRec_** %17 to i8**
  store i8* %14, i8** %18, align 8
  %19 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 11
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 12
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 1
  store %struct.FT_FaceRec_* %1, %struct.FT_FaceRec_** %21, align 8
  %22 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 2
  store %struct.FT_GlyphSlotRec_* %3, %struct.FT_GlyphSlotRec_** %22, align 8
  %23 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 25
  %24 = bitcast %struct.FT_MemoryRec_** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %struct.T1_DecoderRec_* %0 to i64*
  store i64 %25, i64* %26, align 8
  %27 = icmp eq %struct.FT_GlyphSlotRec_* %3, null
  br i1 %27, label %52, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 21
  %30 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %29, align 8
  %31 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %30, i64 0, i32 0
  %32 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %31, align 8
  %33 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 3
  store %struct.FT_GlyphLoaderRec_* %32, %struct.FT_GlyphLoaderRec_** %33, align 8
  %34 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %32, i64 0, i32 5, i32 0
  %35 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 4
  store %struct.FT_Outline_* %34, %struct.FT_Outline_** %35, align 8
  %36 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %32, i64 0, i32 6, i32 0
  %37 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 5
  store %struct.FT_Outline_* %36, %struct.FT_Outline_** %37, align 8
  tail call void @FT_GlyphLoader_Rewind(%struct.FT_GlyphLoaderRec_* %32) #11
  %38 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %2, i64 0, i32 3
  %39 = bitcast %struct.FT_Size_InternalRec_** %38 to i64**
  %40 = load i64*, i64** %39, align 8
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 16
  %43 = bitcast i8** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 15
  store i8* null, i8** %44, align 8
  %45 = icmp eq i8 %6, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %28
  %47 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %29, align 8
  %48 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %47, i64 0, i32 5
  %49 = bitcast i8** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast i8** %44 to i64*
  store i64 %50, i64* %51, align 8
  br label %52

52:                                               ; preds = %16, %28, %46
  %53 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 6
  %54 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 17
  %55 = bitcast %struct.T1_Builder_FuncsRec_* %54 to i8*
  %56 = bitcast i64* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 48, i1 false) #11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 bitcast ({ void (%struct.T1_BuilderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8)*, void (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i32)*, void (%struct.T1_BuilderRec_*, i64, i64, i8)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, i32 (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, void (%struct.T1_BuilderRec_*)* }* @t1_builder_funcs to i8*), i64 64, i1 false) #11
  %57 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 6
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 7
  store i8** %4, i8*** %61, align 8
  %62 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 19
  store i32 %7, i32* %62, align 8
  %63 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 18
  store %struct.PS_BlendRec_* %5, %struct.PS_BlendRec_** %63, align 8
  %64 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 20
  store i32 (%struct.T1_DecoderRec_*, i32)* %8, i32 (%struct.T1_DecoderRec_*, i32)** %64, align 8
  %65 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 21
  %66 = bitcast %struct.T1_Decoder_FuncsRec_* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 bitcast ({ i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)*, void (%struct.T1_DecoderRec_*)*, i32 (%struct.T1_DecoderRec_*, i8*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* }* @t1_decoder_funcs to i8*), i64 32, i1 false)
  br label %67

67:                                               ; preds = %9, %52
  %68 = phi i32 [ 0, %52 ], [ 7, %9 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define internal void @t1_decoder_done(%struct.T1_DecoderRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 0
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 2
  %5 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %4, align 8
  %6 = icmp eq %struct.FT_GlyphSlotRec_* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %5, i64 0, i32 13
  %9 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 4
  %10 = bitcast %struct.FT_Outline_** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast %struct.FT_Outline_* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %11, i64 40, i1 false) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 25, i32 1
  %15 = load void (i8*)*, void (i8*)** %14, align 8
  %16 = icmp eq void (i8*)* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 25, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void %15(i8* %19) #11
  %20 = load i8*, i8** %18, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %20) #11
  store i8* null, i8** %18, align 8
  br label %21

21:                                               ; preds = %13, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_decoder_parse_metrics(%struct.T1_DecoderRec_*, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 1, i64 0
  %5 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 2
  store i64* %4, i64** %5, align 8
  %6 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 0
  %7 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 4
  store %struct.T1_Decoder_ZoneRec_* %6, %struct.T1_Decoder_ZoneRec_** %7, align 8
  %8 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 11
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 0, i32 1
  store i8* %1, i8** %9, align 8
  %10 = zext i32 %2 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 0, i32 2
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %struct.T1_Decoder_ZoneRec_, %struct.T1_Decoder_ZoneRec_* %6, i64 0, i32 0
  store i8* %1, i8** %13, align 8
  %14 = icmp eq i32 %2, 0
  br i1 %14, label %233, label %15

15:                                               ; preds = %3
  %16 = ptrtoint i64* %4 to i64
  %17 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 12
  %18 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 9
  %19 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 10
  %20 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 11
  %21 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 8
  br label %22

22:                                               ; preds = %15, %226
  %23 = phi i64* [ %4, %15 ], [ %227, %226 ]
  %24 = phi i8 [ 0, %15 ], [ %231, %226 ]
  %25 = phi i8* [ %11, %15 ], [ %230, %226 ]
  %26 = phi i8* [ %1, %15 ], [ %229, %226 ]
  %27 = phi i64 [ 0, %15 ], [ %228, %226 ]
  %28 = getelementptr inbounds i8, i8* %26, i64 1
  %29 = load i8, i8* %26, align 1
  switch i8 %29, label %65 [
    i8 1, label %233
    i8 3, label %233
    i8 4, label %233
    i8 5, label %233
    i8 6, label %233
    i8 7, label %233
    i8 8, label %233
    i8 9, label %233
    i8 14, label %233
    i8 15, label %233
    i8 21, label %233
    i8 22, label %233
    i8 30, label %233
    i8 31, label %233
    i8 10, label %96
    i8 11, label %30
    i8 13, label %31
    i8 12, label %32
    i8 -1, label %37
  ]

30:                                               ; preds = %22
  br label %96

31:                                               ; preds = %22
  br label %96

32:                                               ; preds = %22
  %33 = icmp ult i8* %28, %25
  br i1 %33, label %34, label %233

34:                                               ; preds = %32
  %35 = getelementptr inbounds i8, i8* %26, i64 2
  %36 = load i8, i8* %28, align 1
  switch i8 %36, label %233 [
    i8 7, label %96
    i8 12, label %110
  ]

37:                                               ; preds = %22
  %38 = getelementptr inbounds i8, i8* %26, i64 5
  %39 = icmp ugt i8* %38, %25
  br i1 %39, label %233, label %40

40:                                               ; preds = %37
  %41 = load i8, i8* %28, align 1
  %42 = zext i8 %41 to i32
  %43 = shl nuw i32 %42, 24
  %44 = getelementptr inbounds i8, i8* %26, i64 2
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw nsw i32 %46, 16
  %48 = or i32 %47, %43
  %49 = getelementptr inbounds i8, i8* %26, i64 3
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = or i32 %48, %52
  %54 = getelementptr inbounds i8, i8* %26, i64 4
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = or i32 %53, %56
  %58 = add i32 %57, 32000
  %59 = icmp ugt i32 %58, 64000
  %60 = icmp ne i8 %24, 0
  br i1 %59, label %61, label %62

61:                                               ; preds = %40
  br i1 %60, label %233, label %100

62:                                               ; preds = %40
  %63 = shl i32 %57, 16
  %64 = select i1 %60, i32 %57, i32 %63
  br label %100

65:                                               ; preds = %22
  %66 = zext i8 %29 to i32
  %67 = icmp ugt i8 %29, 31
  br i1 %67, label %68, label %233

68:                                               ; preds = %65
  %69 = icmp ult i8 %29, -9
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = add nsw i32 %66, -139
  br label %90

72:                                               ; preds = %68
  %73 = getelementptr inbounds i8, i8* %26, i64 2
  %74 = icmp ugt i8* %73, %25
  br i1 %74, label %233, label %75

75:                                               ; preds = %72
  %76 = icmp ult i8 %29, -5
  %77 = shl nuw nsw i32 %66, 8
  br i1 %76, label %78, label %84

78:                                               ; preds = %75
  %79 = add nsw i32 %77, -63232
  %80 = load i8, i8* %28, align 1
  %81 = zext i8 %80 to i32
  %82 = or i32 %79, %81
  %83 = add nsw i32 %82, 108
  br label %90

84:                                               ; preds = %75
  %85 = add nsw i32 %77, -64256
  %86 = load i8, i8* %28, align 1
  %87 = zext i8 %86 to i32
  %88 = or i32 %85, %87
  %89 = sub nsw i32 -108, %88
  br label %90

90:                                               ; preds = %78, %84, %70
  %91 = phi i8* [ %28, %70 ], [ %73, %78 ], [ %73, %84 ]
  %92 = phi i32 [ %71, %70 ], [ %83, %78 ], [ %89, %84 ]
  %93 = icmp eq i8 %24, 0
  %94 = shl i32 %92, 16
  %95 = select i1 %93, i32 %94, i32 %92
  br label %100

96:                                               ; preds = %34, %22, %31, %30
  %97 = phi i8* [ %28, %31 ], [ %28, %30 ], [ %28, %22 ], [ %35, %34 ]
  %98 = phi i32 [ 2, %31 ], [ 24, %30 ], [ 22, %22 ], [ 4, %34 ]
  %99 = icmp eq i8 %24, 0
  br i1 %99, label %110, label %233

100:                                              ; preds = %61, %62, %90
  %101 = phi i8* [ %38, %61 ], [ %38, %62 ], [ %91, %90 ]
  %102 = phi i8 [ 1, %61 ], [ %24, %62 ], [ %24, %90 ]
  %103 = phi i32 [ %57, %61 ], [ %64, %62 ], [ %95, %90 ]
  %104 = ptrtoint i64* %23 to i64
  %105 = sub i64 %104, %16
  %106 = icmp sgt i64 %105, 4088
  br i1 %106, label %233, label %107

107:                                              ; preds = %100
  %108 = sext i32 %103 to i64
  %109 = getelementptr inbounds i64, i64* %23, i64 1
  store i64 %108, i64* %23, align 8
  br label %226

110:                                              ; preds = %96, %34
  %111 = phi i8* [ %35, %34 ], [ %97, %96 ]
  %112 = phi i32 [ 20, %34 ], [ %98, %96 ]
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds [27 x i32], [27 x i32]* @t1_args_count, i64 0, i64 %113
  %115 = load i32, i32* %114, align 8
  %116 = ptrtoint i64* %23 to i64
  %117 = sub i64 %116, %16
  %118 = ashr exact i64 %117, 3
  %119 = sext i32 %115 to i64
  %120 = icmp slt i64 %118, %119
  br i1 %120, label %233, label %121

121:                                              ; preds = %110
  %122 = sub nsw i64 0, %119
  %123 = getelementptr inbounds i64, i64* %23, i64 %122
  %124 = add nsw i32 %112, -2
  %125 = lshr exact i32 %124, 1
  switch i32 %125, label %233 [
    i32 0, label %126
    i32 1, label %135
    i32 9, label %151
    i32 10, label %156
    i32 11, label %217
  ]

126:                                              ; preds = %121
  store i32 1, i32* %8, align 8
  %127 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 8, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = load i64, i64* %123, align 8
  %130 = add i64 %129, %128
  store i64 %130, i64* %127, align 8
  %131 = getelementptr inbounds i64, i64* %123, i64 1
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 9, i32 0
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 9, i32 1
  store i64 0, i64* %134, align 8
  br label %233

135:                                              ; preds = %121
  store i32 1, i32* %8, align 8
  %136 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 8, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = load i64, i64* %123, align 8
  %139 = add i64 %138, %137
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 8, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds i64, i64* %123, i64 1
  %143 = load i64, i64* %142, align 8
  %144 = add i64 %143, %141
  store i64 %144, i64* %140, align 8
  %145 = getelementptr inbounds i64, i64* %123, i64 2
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 9, i32 0
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds i64, i64* %123, i64 3
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 9, i32 1
  store i64 %149, i64* %150, align 8
  br label %233

151:                                              ; preds = %121
  %152 = load i64, i64* %123, align 8
  %153 = getelementptr inbounds i64, i64* %123, i64 1
  %154 = load i64, i64* %153, align 8
  %155 = tail call i64 @FT_DivFix(i64 %152, i64 %154) #11
  store i64 %155, i64* %123, align 8
  br label %226

156:                                              ; preds = %121
  %157 = load i64, i64* %123, align 8
  %158 = trunc i64 %157 to i32
  %159 = ashr i32 %158, 16
  %160 = load %struct.FT_HashRec_*, %struct.FT_HashRec_** %17, align 8
  %161 = icmp eq %struct.FT_HashRec_* %160, null
  br i1 %161, label %168, label %162

162:                                              ; preds = %156
  %163 = tail call i64* @ft_hash_num_lookup(i32 %159, %struct.FT_HashRec_* nonnull %160) #11
  %164 = icmp eq i64* %163, null
  br i1 %164, label %233, label %165

165:                                              ; preds = %162
  %166 = load i64, i64* %163, align 8
  %167 = trunc i64 %166 to i32
  br label %168

168:                                              ; preds = %165, %156
  %169 = phi i32 [ %159, %156 ], [ %167, %165 ]
  %170 = icmp slt i32 %169, 0
  br i1 %170, label %233, label %171

171:                                              ; preds = %168
  %172 = load i32, i32* %18, align 4
  %173 = icmp sge i32 %169, %172
  %174 = mul nuw i64 %27, 24
  %175 = icmp sgt i64 %174, 360
  %176 = or i1 %175, %173
  br i1 %176, label %233, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 %27, i32 0
  store i8* %111, i8** %178, align 8
  %179 = add nsw i64 %27, 1
  %180 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 %179
  %181 = load i8**, i8*** %19, align 8
  %182 = sext i32 %169 to i64
  %183 = getelementptr inbounds i8*, i8** %181, i64 %182
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 %179, i32 1
  store i8* %184, i8** %185, align 8
  %186 = load i32*, i32** %20, align 8
  %187 = icmp eq i32* %186, null
  br i1 %187, label %194, label %188

188:                                              ; preds = %177
  %189 = getelementptr inbounds i32, i32* %186, i64 %182
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds i8, i8* %184, i64 %191
  %193 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 %179, i32 2
  store i8* %192, i8** %193, align 8
  br label %208

194:                                              ; preds = %177
  %195 = load i32, i32* %21, align 8
  %196 = icmp sgt i32 %195, 0
  %197 = select i1 %196, i32 %195, i32 0
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds i8, i8* %184, i64 %198
  store i8* %199, i8** %185, align 8
  %200 = load i8**, i8*** %19, align 8
  %201 = add nuw nsw i32 %169, 1
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i8*, i8** %200, i64 %202
  %204 = bitcast i8** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 %179, i32 2
  %207 = bitcast i8** %206 to i64*
  store i64 %205, i64* %207, align 8
  br label %208

208:                                              ; preds = %194, %188
  %209 = phi i8* [ %199, %194 ], [ %184, %188 ]
  %210 = ptrtoint i8* %209 to i64
  %211 = bitcast %struct.T1_Decoder_ZoneRec_* %180 to i64*
  store i64 %210, i64* %211, align 8
  %212 = icmp eq i8* %209, null
  br i1 %212, label %233, label %213

213:                                              ; preds = %208
  store %struct.T1_Decoder_ZoneRec_* %180, %struct.T1_Decoder_ZoneRec_** %7, align 8
  %214 = load i8*, i8** %185, align 8
  %215 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 %179, i32 2
  %216 = load i8*, i8** %215, align 8
  br label %226

217:                                              ; preds = %121
  %218 = icmp slt i64 %27, 1
  br i1 %218, label %233, label %219

219:                                              ; preds = %217
  %220 = add nsw i64 %27, -1
  %221 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 %220
  %222 = getelementptr inbounds %struct.T1_Decoder_ZoneRec_, %struct.T1_Decoder_ZoneRec_* %221, i64 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 3, i64 %220, i32 2
  %225 = load i8*, i8** %224, align 8
  store %struct.T1_Decoder_ZoneRec_* %221, %struct.T1_Decoder_ZoneRec_** %7, align 8
  br label %226

226:                                              ; preds = %213, %219, %151, %107
  %227 = phi i64* [ %109, %107 ], [ %123, %219 ], [ %123, %213 ], [ %153, %151 ]
  %228 = phi i64 [ %27, %107 ], [ %220, %219 ], [ %179, %213 ], [ %27, %151 ]
  %229 = phi i8* [ %101, %107 ], [ %223, %219 ], [ %214, %213 ], [ %111, %151 ]
  %230 = phi i8* [ %25, %107 ], [ %225, %219 ], [ %216, %213 ], [ %25, %151 ]
  %231 = phi i8 [ %102, %107 ], [ %24, %219 ], [ %24, %213 ], [ 0, %151 ]
  store i64* %227, i64** %5, align 8
  %232 = icmp ult i8* %229, %230
  br i1 %232, label %22, label %233

233:                                              ; preds = %100, %96, %65, %72, %61, %37, %34, %32, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %226, %110, %121, %217, %171, %168, %208, %162, %3, %135, %126
  %234 = phi i32 [ 0, %126 ], [ 0, %135 ], [ 160, %3 ], [ 160, %100 ], [ 160, %96 ], [ 160, %65 ], [ 160, %72 ], [ 160, %61 ], [ 160, %37 ], [ 160, %34 ], [ 160, %32 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %22 ], [ 160, %226 ], [ 161, %110 ], [ 160, %121 ], [ 160, %217 ], [ 160, %171 ], [ 160, %168 ], [ 160, %208 ], [ 160, %162 ]
  ret i32 %234
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cf2_decoder_parse_charstrings(%struct.PS_Decoder_*, i8*, i64) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i64*, align 8
  %6 = alloca %struct.FT_Vector_, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.CF2_BufferRec_, align 8
  %10 = alloca %struct.CF2_Matrix_, align 4
  %11 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 0, i32* %8, align 4
  %12 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 15
  %13 = load i8, i8* %12, align 4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 9
  %17 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %16, align 8
  %18 = icmp eq %struct.CFF_SubFontRec_* %17, null
  br i1 %18, label %727, label %19

19:                                               ; preds = %15, %3
  %20 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 0
  %21 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %20, align 8
  %22 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 10
  %23 = load %struct.FT_Generic_*, %struct.FT_Generic_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_Generic_, %struct.FT_Generic_* %23, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast i8* %25 to %struct.CF2_FontRec_*
  %27 = icmp eq i8* %25, null
  br i1 %27, label %28, label %57

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.FT_Generic_, %struct.FT_Generic_* %23, i64 0, i32 1
  store void (i8*)* @cf2_free_instance, void (i8*)** %29, align 8
  %30 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %21, i64 656, i32* nonnull %8) #11
  %31 = load %struct.FT_Generic_*, %struct.FT_Generic_** %22, align 8
  %32 = getelementptr inbounds %struct.FT_Generic_, %struct.FT_Generic_* %31, i64 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = load i32, i32* %8, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %727

35:                                               ; preds = %28
  %36 = bitcast %struct.FT_Generic_** %22 to %struct.CF2_FontRec_***
  %37 = load %struct.CF2_FontRec_**, %struct.CF2_FontRec_*** %36, align 8
  %38 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %37, align 8
  %39 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %38, i64 0, i32 0
  store %struct.FT_MemoryRec_* %21, %struct.FT_MemoryRec_** %39, align 8
  br i1 %14, label %40, label %48

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 8
  %42 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %41, align 8
  %43 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %42, i64 0, i32 32
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %38, i64 0, i32 29
  %47 = bitcast %struct.FT_Service_CFFLoadRec_** %46 to i64*
  store i64 %45, i64* %47, align 8
  br label %48

48:                                               ; preds = %35, %40
  %49 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %38, i64 0, i32 1
  %50 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %38, i64 0, i32 16, i32 0, i32 2
  %51 = bitcast void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)** %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 48, i1 false) #11
  %52 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %38, i64 0, i32 16, i32 0, i32 5
  store %struct.FT_MemoryRec_* %21, %struct.FT_MemoryRec_** %52, align 8
  %53 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %38, i64 0, i32 16, i32 0, i32 6
  store i32* %49, i32** %53, align 8
  %54 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %38, i64 0, i32 16, i32 0, i32 0
  %55 = bitcast void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)** %54 to <2 x void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*>*
  store <2 x void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*> <void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)* @cf2_builder_moveTo, void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)* @cf2_builder_lineTo>, <2 x void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*>* %55, align 8
  %56 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %38, i64 0, i32 16, i32 0, i32 3
  store void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)* @cf2_builder_cubeTo, void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)** %56, align 8
  br label %57

57:                                               ; preds = %19, %48
  %58 = phi %struct.CF2_FontRec_* [ %26, %19 ], [ %38, %48 ]
  %59 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 17
  store %struct.PS_Decoder_* %0, %struct.PS_Decoder_** %59, align 8
  %60 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 16, i32 1
  store %struct.PS_Decoder_* %0, %struct.PS_Decoder_** %60, align 8
  %61 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 1
  %62 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %61, align 8
  %63 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %62, i64 0, i32 24
  %64 = bitcast %struct.FT_DriverRec_** %63 to %struct.PS_DriverRec_**
  %65 = load %struct.PS_DriverRec_*, %struct.PS_DriverRec_** %64, align 8
  %66 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %65, i64 0, i32 2
  %67 = load i8, i8* %66, align 4
  %68 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %62, i64 0, i32 30
  %69 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %68, align 8
  %70 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %69, i64 0, i32 5
  %71 = load i8, i8* %70, align 8
  %72 = bitcast %struct.CF2_BufferRec_* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #11
  %73 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %9, i64 0, i32 1
  %74 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %9, i64 0, i32 2
  %75 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %9, i64 0, i32 3
  %76 = bitcast %struct.CF2_Matrix_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #11
  %77 = getelementptr inbounds %struct.CF2_Matrix_, %struct.CF2_Matrix_* %10, i64 0, i32 0
  %78 = getelementptr inbounds %struct.CF2_Matrix_, %struct.CF2_Matrix_* %10, i64 0, i32 3
  %79 = bitcast %struct.CF2_BufferRec_* %9 to i64*
  store i64 0, i64* %79, align 8
  store i8* %1, i8** %75, align 8
  store i8* %1, i8** %73, align 8
  %80 = icmp eq i8* %1, null
  %81 = getelementptr inbounds i8, i8* %1, i64 %2
  %82 = select i1 %80, i8* null, i8* %81
  store i8* %82, i8** %74, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %76, i8 0, i64 24, i1 false)
  %83 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 2
  %84 = load %struct.CFF_GlyphSlotRec_*, %struct.CFF_GlyphSlotRec_** %83, align 8
  %85 = getelementptr inbounds %struct.CFF_GlyphSlotRec_, %struct.CFF_GlyphSlotRec_* %84, i64 0, i32 1
  %86 = load i8, i8* %85, align 8
  %87 = getelementptr inbounds %struct.CFF_GlyphSlotRec_, %struct.CFF_GlyphSlotRec_* %84, i64 0, i32 2
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %86, 0
  br i1 %89, label %101, label %90

90:                                               ; preds = %57
  %91 = getelementptr inbounds %struct.CFF_GlyphSlotRec_, %struct.CFF_GlyphSlotRec_* %84, i64 0, i32 3
  %92 = load i64, i64* %91, align 8
  %93 = trunc i64 %92 to i32
  %94 = add i32 %93, 32
  %95 = sdiv i32 %94, 64
  store i32 %95, i32* %77, align 4
  %96 = getelementptr inbounds %struct.CFF_GlyphSlotRec_, %struct.CFF_GlyphSlotRec_* %84, i64 0, i32 4
  %97 = load i64, i64* %96, align 8
  %98 = trunc i64 %97 to i32
  %99 = add i32 %98, 32
  %100 = sdiv i32 %99, 64
  br label %102

101:                                              ; preds = %57
  store i32 1024, i32* %77, align 4
  br label %102

102:                                              ; preds = %90, %101
  %103 = phi i32 [ 1024, %101 ], [ %95, %90 ]
  %104 = phi i32 [ 1024, %101 ], [ %100, %90 ]
  store i32 %104, i32* %78, align 4
  br i1 %14, label %105, label %109

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %62, i64 4, i32 28
  %107 = bitcast %struct.FT_Generic_* %106 to i8*
  %108 = load i8, i8* %107, align 8
  br label %109

109:                                              ; preds = %102, %105
  %110 = phi i8 [ %108, %105 ], [ 0, %102 ]
  %111 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 3
  store i8 %110, i8* %111, align 1
  %112 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 2
  store i8 %13, i8* %112, align 4
  %113 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 4
  %114 = xor i1 %89, true
  %115 = zext i1 %114 to i32
  store i32 %115, i32* %113, align 8
  %116 = icmp eq i8 %88, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %109
  %118 = icmp eq i8 %71, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %117
  %120 = icmp sgt i8 %71, -1
  %121 = icmp ne i8 %67, 0
  %122 = or i1 %121, %120
  br i1 %122, label %125, label %123

123:                                              ; preds = %117, %119
  %124 = or i32 %115, 2
  store i32 %124, i32* %113, align 8
  br label %125

125:                                              ; preds = %109, %119, %123
  %126 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %65, i64 0, i32 3, i64 0
  %127 = load i32, i32* %126, align 8
  %128 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 22, i64 0
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %65, i64 0, i32 3, i64 1
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 22, i64 1
  store i32 %130, i32* %131, align 4
  %132 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %65, i64 0, i32 3, i64 2
  %133 = load i32, i32* %132, align 8
  %134 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 22, i64 2
  store i32 %133, i32* %134, align 4
  %135 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %65, i64 0, i32 3, i64 3
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 22, i64 3
  store i32 %136, i32* %137, align 4
  %138 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %65, i64 0, i32 3, i64 4
  %139 = load i32, i32* %138, align 8
  %140 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 22, i64 4
  store i32 %139, i32* %140, align 4
  %141 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %65, i64 0, i32 3, i64 5
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 22, i64 5
  store i32 %142, i32* %143, align 4
  %144 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %65, i64 0, i32 3, i64 6
  %145 = load i32, i32* %144, align 8
  %146 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 22, i64 6
  store i32 %145, i32* %146, align 4
  %147 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %65, i64 0, i32 3, i64 7
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 22, i64 7
  store i32 %148, i32* %149, align 4
  %150 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %61, align 8
  %151 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %150, i64 0, i32 13
  %152 = load i16, i16* %151, align 8
  %153 = zext i16 %152 to i32
  %154 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 13
  store i32 %153, i32* %154, align 8
  br i1 %116, label %171, label %155

155:                                              ; preds = %125
  %156 = icmp slt i32 %103, 1
  %157 = icmp slt i32 %104, 1
  %158 = or i1 %157, %156
  br i1 %158, label %725, label %159

159:                                              ; preds = %155
  %160 = icmp slt i16 %152, 0
  br i1 %160, label %725, label %161

161:                                              ; preds = %159
  %162 = shl nuw i32 %153, 16
  %163 = sext i32 %162 to i64
  %164 = call i64 @FT_DivFix(i64 131072000, i64 %163) #11
  %165 = trunc i64 %164 to i32
  %166 = icmp sgt i32 %103, %165
  %167 = icmp sgt i32 %104, %165
  %168 = or i1 %166, %167
  br i1 %168, label %725, label %169

169:                                              ; preds = %161
  %170 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %59, align 8
  br label %171

171:                                              ; preds = %169, %125
  %172 = phi %struct.PS_Decoder_* [ %170, %169 ], [ %0, %125 ]
  %173 = bitcast %struct.FT_Vector_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #11
  %174 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174) #11
  store i32 0, i32* %7, align 4
  %175 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 14
  %176 = bitcast %struct.FT_Vector_* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 0, i64 16, i1 false)
  %177 = load i32, i32* %175, align 4
  %178 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 15
  %179 = load i32, i32* %178, align 8
  %180 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180) #11
  store i32 0, i32* %4, align 4
  %181 = bitcast i64** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #11
  store i64* null, i64** %5, align 8
  %182 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 1
  store i32 0, i32* %182, align 8
  %183 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %172, i64 0, i32 9
  %184 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %183, align 8
  %185 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 18
  %186 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %185, align 8
  %187 = icmp eq %struct.CFF_SubFontRec_* %186, %184
  br i1 %187, label %189, label %188

188:                                              ; preds = %171
  store %struct.CFF_SubFontRec_* %184, %struct.CFF_SubFontRec_** %185, align 8
  br label %189

189:                                              ; preds = %188, %171
  %190 = phi i8 [ 1, %188 ], [ 0, %171 ]
  %191 = load i8, i8* %112, align 4
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %245

193:                                              ; preds = %189
  %194 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %172, i64 0, i32 8
  %195 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %194, align 8
  %196 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %195, i64 0, i32 37, i32 0
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %245, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 29
  %201 = load %struct.FT_Service_CFFLoadRec_*, %struct.FT_Service_CFFLoadRec_** %200, align 8
  %202 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %172, i64 0, i32 0, i32 1
  %203 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %202, align 8
  %204 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %203, i64 3, i32 21
  %205 = bitcast %struct.FT_GlyphSlotRec_** %204 to %struct.FT_Service_MultiMastersRec_**
  %206 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %205, align 8
  %207 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %206, i64 0, i32 10
  %208 = load i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)*, i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)** %207, align 8
  %209 = call i32 %208(%struct.FT_FaceRec_* %203, i32* nonnull %4, i64** null, i64** nonnull %5, %struct.FT_MM_Var_** null) #11
  store i32 %209, i32* %182, align 8
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %212, label %211

211:                                              ; preds = %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180) #11
  br label %711

212:                                              ; preds = %199
  %213 = getelementptr inbounds %struct.FT_Service_CFFLoadRec_, %struct.FT_Service_CFFLoadRec_* %201, i64 0, i32 3
  %214 = load i8 (%struct.CFF_BlendRec_*, i32, i32, i64*)*, i8 (%struct.CFF_BlendRec_*, i32, i32, i64*)** %213, align 8
  %215 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %184, i64 0, i32 2
  %216 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %184, i64 0, i32 1, i32 26
  %217 = load i32, i32* %216, align 8
  %218 = load i32, i32* %4, align 4
  %219 = load i64*, i64** %5, align 8
  %220 = call zeroext i8 %214(%struct.CFF_BlendRec_* %215, i32 %217, i32 %218, i64* %219) #11
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %229, label %222

222:                                              ; preds = %212
  %223 = getelementptr inbounds %struct.FT_Service_CFFLoadRec_, %struct.FT_Service_CFFLoadRec_* %201, i64 0, i32 1
  %224 = load i32 (%struct.CFF_FontRec_*, %struct.CFF_SubFontRec_*, i32, i64*)*, i32 (%struct.CFF_FontRec_*, %struct.CFF_SubFontRec_*, i32, i64*)** %223, align 8
  %225 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %194, align 8
  %226 = load i32, i32* %4, align 4
  %227 = load i64*, i64** %5, align 8
  %228 = call i32 %224(%struct.CFF_FontRec_* %225, %struct.CFF_SubFontRec_* %184, i32 %226, i64* %227) #11
  br label %229

229:                                              ; preds = %222, %212
  %230 = phi i8 [ 1, %222 ], [ %190, %212 ]
  %231 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %184, i64 0, i32 2, i32 2
  %232 = bitcast %struct.CFF_FontRec_** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 9, i32 2
  %235 = bitcast %struct.CFF_FontRec_** %234 to i64*
  store i64 %233, i64* %235, align 8
  %236 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 9, i32 1
  store i8 0, i8* %236, align 1
  %237 = load i32, i32* %216, align 8
  %238 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 10
  store i32 %237, i32* %238, align 8
  %239 = load i32, i32* %4, align 4
  %240 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 11
  store i32 %239, i32* %240, align 4
  %241 = bitcast i64** %5 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 12
  %244 = bitcast i64** %243 to i64*
  store i64 %242, i64* %244, align 8
  br label %245

245:                                              ; preds = %229, %193, %189
  %246 = phi i8 [ %190, %189 ], [ %190, %193 ], [ %230, %229 ]
  %247 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %172, i64 0, i32 0, i32 1
  %248 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %247, align 8
  %249 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %248, i64 0, i32 22
  %250 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %249, align 8
  %251 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %250, i64 0, i32 2, i32 1
  %252 = load i16, i16* %251, align 2
  %253 = zext i16 %252 to i32
  %254 = shl nuw i32 %253, 16
  %255 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 8
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %256, %254
  br i1 %257, label %259, label %258

258:                                              ; preds = %245
  store i32 %254, i32* %255, align 4
  br label %259

259:                                              ; preds = %258, %245
  %260 = phi i8 [ 1, %258 ], [ %246, %245 ]
  %261 = load i32, i32* %113, align 8
  %262 = trunc i32 %261 to i8
  %263 = and i8 %262, 1
  %264 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 19
  store i8 %263, i8* %264, align 8
  %265 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 5
  %266 = bitcast %struct.CF2_Matrix_* %265 to i8*
  %267 = call i32 @bcmp(i8* nonnull %76, i8* %266, i64 16) #11
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %276, label %269

269:                                              ; preds = %259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %266, i8* nonnull align 4 %76, i64 16, i1 false) #11
  %270 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 5, i32 5
  store i32 0, i32* %270, align 4
  %271 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 5, i32 4
  store i32 0, i32* %271, align 4
  %272 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 6
  %273 = bitcast %struct.CF2_Matrix_* %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %273, i8* nonnull align 4 %76, i64 24, i1 false) #11
  %274 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 7, i32 0
  %275 = bitcast i32* %274 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 0, i32 0, i32 65536>, <4 x i32>* %275, align 4
  br label %276

276:                                              ; preds = %269, %259
  %277 = phi i8 [ 1, %269 ], [ %260, %259 ]
  %278 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 21
  %279 = load i8, i8* %278, align 2
  %280 = zext i8 %279 to i32
  %281 = and i32 %261, 2
  %282 = icmp eq i32 %281, %280
  br i1 %282, label %286, label %283

283:                                              ; preds = %276
  %284 = lshr exact i32 %281, 1
  %285 = trunc i32 %284 to i8
  store i8 %285, i8* %278, align 2
  br label %288

286:                                              ; preds = %276
  %287 = icmp eq i8 %277, 0
  br i1 %287, label %681, label %288

288:                                              ; preds = %286, %283
  %289 = load i32, i32* %154, align 8
  %290 = icmp eq i32 %289, 0
  %291 = select i1 %290, i32 1000, i32 %289
  %292 = icmp sgt i32 %254, 262144
  %293 = select i1 %292, i32 %254, i32 262144
  %294 = sdiv i32 65536000, %291
  %295 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %183, align 8
  %296 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %295, i64 0, i32 1, i32 12
  %297 = load i64, i64* %296, align 8
  %298 = trunc i64 %297 to i32
  %299 = shl i32 %298, 16
  %300 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 23
  store i32 %299, i32* %300, align 4
  %301 = icmp slt i32 %299, 1
  br i1 %301, label %302, label %306

302:                                              ; preds = %288
  %303 = sext i32 %294 to i64
  %304 = call i64 @FT_DivFix(i64 4915200, i64 %303) #11
  %305 = trunc i64 %304 to i32
  store i32 %305, i32* %300, align 4
  br label %306

306:                                              ; preds = %302, %288
  %307 = phi i32 [ %305, %302 ], [ %299, %288 ]
  %308 = icmp sgt i32 %177, 0
  br i1 %308, label %309, label %327

309:                                              ; preds = %306
  %310 = sext i32 %177 to i64
  %311 = shl i32 %291, 16
  %312 = sext i32 %311 to i64
  %313 = zext i32 %293 to i64
  %314 = call i64 @FT_DivFix(i64 %312, i64 %313) #11
  %315 = icmp slt i64 %314, %310
  br i1 %315, label %318, label %316

316:                                              ; preds = %309
  %317 = call i64 @FT_DivFix(i64 %312, i64 %313) #11
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i64 [ %317, %316 ], [ %310, %309 ]
  %320 = trunc i64 %319 to i32
  %321 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 25
  store i32 0, i32* %321, align 4
  %322 = icmp eq i32 %320, 0
  %323 = icmp slt i32 %294, 655
  %324 = or i1 %323, %322
  br i1 %324, label %330, label %325

325:                                              ; preds = %318
  %326 = sdiv i32 %320, 2
  store i32 %326, i32* %321, align 4
  br label %330

327:                                              ; preds = %306
  %328 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 25
  %329 = load i8, i8* %278, align 2
  call fastcc void @cf2_computeDarkening(i32 %294, i32 %293, i32 %307, i32* %328, i32 0, i8 zeroext %329, i32* %128) #11
  br label %330

330:                                              ; preds = %327, %325, %318
  %331 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %183, align 8
  %332 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %331, i64 0, i32 1, i32 11
  %333 = load i64, i64* %332, align 8
  %334 = trunc i64 %333 to i16
  %335 = icmp sgt i16 %334, 0
  br i1 %335, label %336, label %341

336:                                              ; preds = %330
  %337 = trunc i64 %333 to i32
  %338 = load i32, i32* %300, align 4
  %339 = shl i32 %337, 17
  %340 = icmp sgt i32 %338, %339
  br i1 %340, label %342, label %341

341:                                              ; preds = %336, %330
  br label %342

342:                                              ; preds = %336, %341
  %343 = phi i64 [ 7208960, %341 ], [ 4915200, %336 ]
  %344 = sext i32 %294 to i64
  %345 = call i64 @FT_DivFix(i64 %343, i64 %344) #11
  %346 = trunc i64 %345 to i32
  %347 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 24
  store i32 %346, i32* %347, align 8
  %348 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 26
  %349 = load i8, i8* %278, align 2
  call fastcc void @cf2_computeDarkening(i32 %294, i32 %293, i32 %346, i32* %348, i32 %179, i8 zeroext %349, i32* %128) #11
  %350 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 25
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %357

353:                                              ; preds = %342
  %354 = load i32, i32* %348, align 8
  %355 = icmp ne i32 %354, 0
  %356 = zext i1 %355 to i8
  br label %357

357:                                              ; preds = %353, %342
  %358 = phi i8 [ 1, %342 ], [ %356, %353 ]
  %359 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 20
  store i8 %358, i8* %359, align 1
  %360 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 27
  store i8 0, i8* %360, align 4
  %361 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28
  %362 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %59, align 8
  %363 = bitcast %struct.CF2_BluesRec_* %361 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %363, i8 0, i64 336, i1 false) #11
  %364 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 6, i32 3
  %365 = load i32, i32* %364, align 4
  %366 = getelementptr inbounds %struct.CF2_BluesRec_, %struct.CF2_BluesRec_* %361, i64 0, i32 0
  store i32 %365, i32* %366, align 8
  %367 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 4
  %368 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 5
  %369 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 6
  %370 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %362, i64 0, i32 9
  %371 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %370, align 8
  %372 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %371, i64 0, i32 1, i32 8
  %373 = load i64, i64* %372, align 8
  %374 = call i64 @FT_DivFix(i64 %373, i64 65536000) #11
  %375 = trunc i64 %374 to i32
  store i32 %375, i32* %367, align 4
  %376 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %370, align 8
  %377 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %376, i64 0, i32 1, i32 9
  %378 = load i64, i64* %377, align 8
  %379 = trunc i64 %378 to i32
  %380 = shl i32 %379, 16
  store i32 %380, i32* %368, align 4
  %381 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %370, align 8
  %382 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %381, i64 0, i32 1, i32 10
  %383 = load i64, i64* %382, align 8
  %384 = trunc i64 %383 to i32
  %385 = shl i32 %384, 16
  store i32 %385, i32* %369, align 4
  %386 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %370, align 8
  %387 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 0
  %388 = load i8, i8* %387, align 8
  %389 = zext i8 %388 to i64
  %390 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 4, i64 0
  %391 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 1
  %392 = load i8, i8* %391, align 1
  %393 = zext i8 %392 to i64
  %394 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 2
  %395 = load i8, i8* %394, align 2
  %396 = zext i8 %395 to i64
  %397 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 3
  %398 = load i8, i8* %397, align 1
  %399 = zext i8 %398 to i64
  %400 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 20
  %401 = load i32, i32* %400, align 4
  %402 = icmp eq i32 %401, 1
  br i1 %402, label %403, label %457

403:                                              ; preds = %357
  switch i8 %388, label %459 [
    i8 0, label %423
    i8 4, label %404
  ]

404:                                              ; preds = %403
  %405 = load i64, i64* %390, align 8
  %406 = trunc i64 %405 to i16
  %407 = icmp slt i16 %406, -120
  br i1 %407, label %408, label %459

408:                                              ; preds = %404
  %409 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 4, i64 1
  %410 = load i64, i64* %409, align 8
  %411 = trunc i64 %410 to i16
  %412 = icmp slt i16 %411, -120
  br i1 %412, label %413, label %459

413:                                              ; preds = %408
  %414 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 4, i64 2
  %415 = load i64, i64* %414, align 8
  %416 = trunc i64 %415 to i16
  %417 = icmp sgt i16 %416, 880
  br i1 %417, label %418, label %459

418:                                              ; preds = %413
  %419 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 4, i64 3
  %420 = load i64, i64* %419, align 8
  %421 = trunc i64 %420 to i16
  %422 = icmp sgt i16 %421, 880
  br i1 %422, label %423, label %459

423:                                              ; preds = %418, %403
  %424 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 9, i32 2
  store i32 -7864321, i32* %424, align 8
  %425 = load i32, i32* %366, align 8
  %426 = sext i32 %425 to i64
  %427 = mul nsw i64 %426, -7864321
  %428 = ashr i64 %427, 63
  %429 = add nsw i64 %427, 32768
  %430 = add nsw i64 %429, %428
  %431 = lshr i64 %430, 16
  %432 = trunc i64 %431 to i32
  %433 = add i32 %432, 32768
  %434 = and i32 %433, -65536
  %435 = add nsw i32 %434, -32768
  %436 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 9, i32 3
  store i32 %435, i32* %436, align 4
  %437 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 9, i32 4
  store i32 %425, i32* %437, align 8
  %438 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 9, i32 0
  store i32 49, i32* %438, align 8
  %439 = load i32, i32* %348, align 8
  %440 = shl nsw i32 %439, 1
  %441 = add nsw i32 %440, 57671681
  %442 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 8, i32 2
  store i32 %441, i32* %442, align 8
  %443 = sext i32 %441 to i64
  %444 = mul nsw i64 %443, %426
  %445 = ashr i64 %444, 63
  %446 = add nsw i64 %444, 32768
  %447 = add nsw i64 %446, %445
  %448 = lshr i64 %447, 16
  %449 = trunc i64 %448 to i32
  %450 = add i32 %449, 32768
  %451 = and i32 %450, -65536
  %452 = or i32 %451, 32768
  %453 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 8, i32 3
  store i32 %452, i32* %453, align 4
  %454 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 8, i32 4
  store i32 %425, i32* %454, align 8
  %455 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 8, i32 0
  store i32 50, i32* %455, align 8
  %456 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 3
  store i8 1, i8* %456, align 1
  br label %681

457:                                              ; preds = %357
  %458 = icmp eq i8 %388, 0
  br i1 %458, label %462, label %459

459:                                              ; preds = %457, %418, %413, %408, %404, %403
  %460 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 1
  %461 = load i32, i32* %460, align 4
  br label %468

462:                                              ; preds = %501, %457
  %463 = phi i32 [ 0, %457 ], [ %503, %501 ]
  %464 = icmp eq i8 %392, 0
  br i1 %464, label %535, label %465

465:                                              ; preds = %462
  %466 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 1
  %467 = load i32, i32* %466, align 4
  br label %506

468:                                              ; preds = %501, %459
  %469 = phi i32 [ %461, %459 ], [ %502, %501 ]
  %470 = phi i64 [ 0, %459 ], [ %504, %501 ]
  %471 = phi i32 [ 0, %459 ], [ %503, %501 ]
  %472 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 4, i64 %470
  %473 = load i64, i64* %472, align 8
  %474 = trunc i64 %473 to i32
  %475 = shl i32 %474, 16
  %476 = zext i32 %469 to i64
  %477 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %476, i32 0
  store i32 %475, i32* %477, align 4
  %478 = or i64 %470, 1
  %479 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 4, i64 %478
  %480 = load i64, i64* %479, align 8
  %481 = trunc i64 %480 to i32
  %482 = shl i32 %481, 16
  %483 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %476, i32 1
  store i32 %482, i32* %483, align 4
  %484 = sub i32 %482, %475
  %485 = icmp slt i32 %484, 0
  br i1 %485, label %501, label %486

486:                                              ; preds = %468
  %487 = icmp sgt i32 %484, %471
  %488 = select i1 %487, i32 %484, i32 %471
  %489 = icmp eq i64 %470, 0
  br i1 %489, label %495, label %490

490:                                              ; preds = %486
  %491 = load i32, i32* %348, align 8
  %492 = shl i32 %491, 1
  %493 = add nsw i32 %492, %482
  store i32 %493, i32* %483, align 4
  %494 = add nsw i32 %492, %475
  store i32 %494, i32* %477, align 4
  br label %495

495:                                              ; preds = %490, %486
  %496 = phi i8 [ 0, %490 ], [ 1, %486 ]
  %497 = phi i32 [ %494, %490 ], [ %482, %486 ]
  %498 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %476, i32 4
  store i8 %496, i8* %498, align 4
  %499 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %476, i32 2
  store i32 %497, i32* %499, align 4
  %500 = add i32 %469, 1
  store i32 %500, i32* %460, align 4
  br label %501

501:                                              ; preds = %495, %468
  %502 = phi i32 [ %469, %468 ], [ %500, %495 ]
  %503 = phi i32 [ %471, %468 ], [ %488, %495 ]
  %504 = add nuw nsw i64 %470, 2
  %505 = icmp ult i64 %504, %389
  br i1 %505, label %468, label %462

506:                                              ; preds = %530, %465
  %507 = phi i32 [ %467, %465 ], [ %531, %530 ]
  %508 = phi i64 [ 0, %465 ], [ %533, %530 ]
  %509 = phi i32 [ %463, %465 ], [ %532, %530 ]
  %510 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 5, i64 %508
  %511 = load i64, i64* %510, align 8
  %512 = trunc i64 %511 to i32
  %513 = shl i32 %512, 16
  %514 = zext i32 %507 to i64
  %515 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %514, i32 0
  store i32 %513, i32* %515, align 4
  %516 = or i64 %508, 1
  %517 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 5, i64 %516
  %518 = load i64, i64* %517, align 8
  %519 = trunc i64 %518 to i32
  %520 = shl i32 %519, 16
  %521 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %514, i32 1
  store i32 %520, i32* %521, align 4
  %522 = sub i32 %520, %513
  %523 = icmp slt i32 %522, 0
  br i1 %523, label %530, label %524

524:                                              ; preds = %506
  %525 = icmp sgt i32 %522, %509
  %526 = select i1 %525, i32 %522, i32 %509
  %527 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %514, i32 4
  store i8 1, i8* %527, align 4
  %528 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %514, i32 2
  store i32 %520, i32* %528, align 4
  %529 = add i32 %507, 1
  store i32 %529, i32* %466, align 4
  br label %530

530:                                              ; preds = %524, %506
  %531 = phi i32 [ %507, %506 ], [ %529, %524 ]
  %532 = phi i32 [ %509, %506 ], [ %526, %524 ]
  %533 = add nuw nsw i64 %508, 2
  %534 = icmp ult i64 %533, %393
  br i1 %534, label %506, label %535

535:                                              ; preds = %530, %462
  %536 = phi i32 [ %463, %462 ], [ %532, %530 ]
  %537 = load i32, i32* %366, align 8
  %538 = sext i32 %537 to i64
  %539 = call i64 @FT_DivFix(i64 65536, i64 %538) #11
  %540 = trunc i64 %539 to i32
  %541 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 1
  %542 = load i32, i32* %541, align 4
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %620, label %544

544:                                              ; preds = %535
  %545 = icmp eq i8 %398, 0
  %546 = icmp ugt i8 %395, 1
  %547 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 6, i64 1
  %548 = icmp ugt i8 %395, 2
  %549 = zext i32 %542 to i64
  br label %550

550:                                              ; preds = %617, %544
  %551 = phi i64 [ 0, %544 ], [ %618, %617 ]
  %552 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %551, i32 2
  %553 = load i32, i32* %552, align 4
  %554 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %551, i32 4
  %555 = load i8, i8* %554, align 4
  %556 = icmp eq i8 %555, 0
  br i1 %556, label %558, label %557

557:                                              ; preds = %550
  br i1 %545, label %580, label %559

558:                                              ; preds = %550
  br i1 %548, label %594, label %617

559:                                              ; preds = %557, %576
  %560 = phi i32 [ %577, %576 ], [ 2147483647, %557 ]
  %561 = phi i64 [ %578, %576 ], [ 0, %557 ]
  %562 = or i64 %561, 1
  %563 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 7, i64 %562
  %564 = load i64, i64* %563, align 8
  %565 = trunc i64 %564 to i32
  %566 = shl i32 %565, 16
  %567 = sub i32 %553, %566
  %568 = icmp slt i32 %567, 0
  %569 = sub i32 0, %567
  %570 = select i1 %568, i32 %569, i32 %567
  %571 = icmp slt i32 %570, %560
  %572 = icmp slt i32 %570, %540
  %573 = and i1 %571, %572
  br i1 %573, label %574, label %576

574:                                              ; preds = %559
  store i32 %566, i32* %552, align 4
  %575 = icmp eq i32 %570, 0
  br i1 %575, label %580, label %576

576:                                              ; preds = %574, %559
  %577 = phi i32 [ %570, %574 ], [ %560, %559 ]
  %578 = add nuw nsw i64 %561, 2
  %579 = icmp ult i64 %578, %399
  br i1 %579, label %559, label %580

580:                                              ; preds = %576, %574, %557
  %581 = phi i32 [ 2147483647, %557 ], [ %577, %576 ], [ 0, %574 ]
  br i1 %546, label %582, label %617

582:                                              ; preds = %580
  %583 = load i64, i64* %547, align 8
  %584 = trunc i64 %583 to i32
  %585 = shl i32 %584, 16
  %586 = sub i32 %553, %585
  %587 = icmp slt i32 %586, 0
  %588 = sub i32 0, %586
  %589 = select i1 %587, i32 %588, i32 %586
  %590 = icmp slt i32 %589, %581
  %591 = icmp slt i32 %589, %540
  %592 = and i1 %590, %591
  br i1 %592, label %593, label %617

593:                                              ; preds = %582
  store i32 %585, i32* %552, align 4
  br label %617

594:                                              ; preds = %558, %613
  %595 = phi i32 [ %614, %613 ], [ 2147483647, %558 ]
  %596 = phi i64 [ %615, %613 ], [ 2, %558 ]
  %597 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %386, i64 0, i32 1, i32 6, i64 %596
  %598 = load i64, i64* %597, align 8
  %599 = trunc i64 %598 to i32
  %600 = shl i32 %599, 16
  %601 = load i32, i32* %348, align 8
  %602 = shl nsw i32 %601, 1
  %603 = add nsw i32 %600, %602
  %604 = sub i32 %553, %603
  %605 = icmp slt i32 %604, 0
  %606 = sub i32 0, %604
  %607 = select i1 %605, i32 %606, i32 %604
  %608 = icmp slt i32 %607, %595
  %609 = icmp slt i32 %607, %540
  %610 = and i1 %608, %609
  br i1 %610, label %611, label %613

611:                                              ; preds = %594
  store i32 %603, i32* %552, align 4
  %612 = icmp eq i32 %607, 0
  br i1 %612, label %617, label %613

613:                                              ; preds = %611, %594
  %614 = phi i32 [ %607, %611 ], [ %595, %594 ]
  %615 = add nuw nsw i64 %596, 2
  %616 = icmp ult i64 %615, %396
  br i1 %616, label %594, label %617

617:                                              ; preds = %613, %611, %593, %582, %580, %558
  %618 = add nuw nsw i64 %551, 1
  %619 = icmp eq i64 %618, %549
  br i1 %619, label %620, label %550

620:                                              ; preds = %617, %535
  %621 = icmp sgt i32 %536, 0
  br i1 %621, label %622, label %631

622:                                              ; preds = %620
  %623 = load i32, i32* %367, align 4
  %624 = sext i32 %623 to i64
  %625 = sext i32 %536 to i64
  %626 = call i64 @FT_DivFix(i64 65536, i64 %625) #11
  %627 = icmp slt i64 %626, %624
  br i1 %627, label %628, label %631

628:                                              ; preds = %622
  %629 = call i64 @FT_DivFix(i64 65536, i64 %625) #11
  %630 = trunc i64 %629 to i32
  store i32 %630, i32* %367, align 4
  br label %631

631:                                              ; preds = %628, %622, %620
  %632 = load i32, i32* %366, align 8
  %633 = load i32, i32* %367, align 4
  %634 = icmp slt i32 %632, %633
  br i1 %634, label %635, label %645

635:                                              ; preds = %631
  %636 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 2
  store i8 1, i8* %636, align 8
  %637 = sext i32 %632 to i64
  %638 = sext i32 %633 to i64
  %639 = call i64 @FT_MulDiv(i64 39322, i64 %637, i64 %638) #11
  %640 = trunc i64 %639 to i32
  %641 = sub i32 39322, %640
  %642 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 7
  %643 = icmp slt i32 %641, 32767
  %644 = select i1 %643, i32 %641, i32 32767
  store i32 %644, i32* %642, align 8
  br label %645

645:                                              ; preds = %635, %631
  %646 = load i8, i8* %278, align 2
  %647 = icmp eq i8 %646, 0
  br i1 %647, label %650, label %648

648:                                              ; preds = %645
  %649 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 7
  store i32 0, i32* %649, align 8
  br label %650

650:                                              ; preds = %648, %645
  %651 = load i32, i32* %541, align 4
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %681, label %653

653:                                              ; preds = %650
  %654 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 7
  %655 = load i32, i32* %366, align 8
  %656 = load i32, i32* %654, align 8
  %657 = sext i32 %655 to i64
  %658 = zext i32 %651 to i64
  %659 = sub i32 0, %656
  br label %660

660:                                              ; preds = %660, %653
  %661 = phi i64 [ 0, %653 ], [ %679, %660 ]
  %662 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %661, i32 4
  %663 = load i8, i8* %662, align 4
  %664 = icmp eq i8 %663, 0
  %665 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %661, i32 2
  %666 = load i32, i32* %665, align 4
  %667 = sext i32 %666 to i64
  %668 = mul nsw i64 %667, %657
  %669 = ashr i64 %668, 63
  %670 = add nsw i64 %668, 32768
  %671 = add nsw i64 %670, %669
  %672 = lshr i64 %671, 16
  %673 = trunc i64 %672 to i32
  %674 = select i1 %664, i32 %656, i32 %659
  %675 = add i32 %674, 32768
  %676 = add i32 %675, %673
  %677 = and i32 %676, -65536
  %678 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 28, i32 10, i64 %661, i32 3
  store i32 %677, i32* %678, align 4
  %679 = add nuw nsw i64 %661, 1
  %680 = icmp eq i64 %679, %658
  br i1 %680, label %681, label %660

681:                                              ; preds = %660, %650, %423, %286
  %682 = load i32, i32* %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180) #11
  %683 = icmp eq i32 %682, 0
  br i1 %683, label %684, label %711

684:                                              ; preds = %681
  %685 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 27
  store i8 0, i8* %685, align 4
  %686 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 20
  %687 = load i8, i8* %686, align 1
  %688 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 16, i32 0, i32 4
  %689 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %58, i64 0, i32 16, i32 0
  br label %690

690:                                              ; preds = %702, %684
  %691 = phi i8 [ %687, %684 ], [ 0, %702 ]
  %692 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %60, align 8
  store i32 0, i32* %688, align 8
  %693 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %692, i64 0, i32 0, i32 3
  %694 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %693, align 8
  call void @FT_GlyphLoader_Rewind(%struct.FT_GlyphLoaderRec_* %694) #11
  call fastcc void @cf2_interpT2CharString(%struct.CF2_FontRec_* %58, %struct.CF2_BufferRec_* nonnull %9, %struct.CF2_OutlineCallbacksRec_* %689, %struct.FT_Vector_* nonnull %6, i8 zeroext 0, i32 0, i32 0, i32* nonnull %7) #11
  %695 = load i32, i32* %182, align 8
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %711

697:                                              ; preds = %690
  %698 = icmp eq i8 %691, 0
  br i1 %698, label %703, label %699

699:                                              ; preds = %697
  %700 = load i32, i32* %688, align 8
  %701 = icmp sgt i32 %700, -1
  br i1 %701, label %703, label %702

702:                                              ; preds = %699
  store i8 1, i8* %685, align 4
  br label %690

703:                                              ; preds = %697, %699
  %704 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %60, align 8
  %705 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %704, i64 0, i32 0
  call fastcc void @ps_builder_close_contour(%struct.PS_Builder_* %705) #11
  %706 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %704, i64 0, i32 0, i32 3
  %707 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %706, align 8
  call void @FT_GlyphLoader_Add(%struct.FT_GlyphLoaderRec_* %707) #11
  %708 = load i32, i32* %182, align 4
  %709 = load i32, i32* %7, align 4
  %710 = icmp eq i32 %708, 0
  br i1 %710, label %712, label %711

711:                                              ; preds = %690, %703, %681, %211
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #11
  br label %725

712:                                              ; preds = %703
  store i32 0, i32* %182, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #11
  %713 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %60, align 8
  %714 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %713, i64 0, i32 0, i32 15
  %715 = load i8, i8* %714, align 4
  %716 = icmp eq i8 %715, 0
  br i1 %716, label %717, label %725

717:                                              ; preds = %712
  %718 = add i32 %709, 32768
  %719 = lshr i32 %718, 16
  %720 = zext i32 %719 to i64
  %721 = shl nuw i64 %720, 48
  %722 = ashr exact i64 %721, 48
  %723 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %713, i64 0, i32 11
  %724 = load i64*, i64** %723, align 8
  store i64 %722, i64* %724, align 8
  br label %725

725:                                              ; preds = %161, %159, %155, %717, %712, %711
  %726 = phi i32 [ 3, %711 ], [ 0, %712 ], [ 0, %717 ], [ 164, %161 ], [ 164, %159 ], [ 36, %155 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #11
  br label %727

727:                                              ; preds = %28, %15, %725
  %728 = phi i32 [ %726, %725 ], [ 8, %15 ], [ 64, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  ret i32 %728
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @afm_parser_init(%struct.AFM_ParserRec_* nocapture, %struct.FT_MemoryRec_*, i8*, i8*) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  store i32 -1431655766, i32* %5, align 4
  %7 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %1, i64 32, i32* nonnull %5) #11
  %8 = load i32, i32* %5, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %23

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %11 to i8**
  store i8* %2, i8** %12, align 8
  %13 = bitcast i8* %7 to i8**
  store i8* %2, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  %15 = bitcast i8* %14 to i8**
  store i8* %3, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 24
  %17 = bitcast i8* %16 to i32*
  store i32 2, i32* %17, align 8
  %18 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 0
  store %struct.FT_MemoryRec_* %1, %struct.FT_MemoryRec_** %18, align 8
  %19 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 1
  %20 = bitcast %struct.AFM_StreamRec_** %19 to i8**
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 2
  %22 = bitcast %struct.AFM_FontInfoRec_** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  br label %23

23:                                               ; preds = %4, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal void @afm_parser_done(%struct.AFM_ParserRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 0
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 1
  %5 = bitcast %struct.AFM_StreamRec_** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %6) #11
  store %struct.AFM_StreamRec_* null, %struct.AFM_StreamRec_** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @afm_parser_parse(%struct.AFM_ParserRec_* nocapture readonly) #0 {
  %2 = alloca %struct.AFM_ValueRec_, align 8
  %3 = alloca i32, align 4
  %4 = alloca [4 x %struct.AFM_ValueRec_], align 16
  %5 = alloca %struct.AFM_ValueRec_, align 8
  %6 = alloca i32, align 4
  %7 = alloca [5 x %struct.AFM_ValueRec_], align 16
  %8 = alloca %struct.AFM_ValueRec_, align 8
  %9 = alloca %struct.AFM_ValueRec_, align 8
  %10 = alloca [4 x %struct.AFM_ValueRec_], align 16
  %11 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 0
  %12 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %11, align 8
  %13 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 2
  %14 = load %struct.AFM_FontInfoRec_*, %struct.AFM_FontInfoRec_** %13, align 8
  %15 = icmp eq %struct.AFM_FontInfoRec_* %14, null
  br i1 %15, label %691, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 1
  %18 = load %struct.AFM_StreamRec_*, %struct.AFM_StreamRec_** %17, align 8
  %19 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %18, i64 0, i32 3
  %20 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %18, i64 0, i32 0
  %21 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %18, i64 0, i32 2
  %22 = load i32, i32* %19, align 8
  %23 = icmp sgt i32 %22, 1
  br i1 %23, label %38, label %24

24:                                               ; preds = %16
  tail call fastcc void @afm_stream_skip_spaces(%struct.AFM_StreamRec_* %18) #11
  %25 = load i32, i32* %19, align 8
  %26 = icmp sgt i32 %25, 1
  br i1 %26, label %38, label %27

27:                                               ; preds = %24
  %28 = load i8*, i8** %20, align 8
  %29 = load i8*, i8** %21, align 8
  br label %30

30:                                               ; preds = %33, %27
  %31 = phi i8* [ %34, %33 ], [ %28, %27 ]
  %32 = icmp ult i8* %31, %29
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = getelementptr inbounds i8, i8* %31, i64 1
  store i8* %34, i8** %20, align 8
  %35 = load i8, i8* %31, align 1
  switch i8 %35, label %30 [
    i8 13, label %36
    i8 10, label %36
    i8 26, label %37
  ]

36:                                               ; preds = %33, %33
  store i32 2, i32* %19, align 8
  br label %38

37:                                               ; preds = %33, %30
  store i32 3, i32* %19, align 8
  br label %38

38:                                               ; preds = %16, %24, %36, %37
  br label %39

39:                                               ; preds = %38, %42
  store i32 0, i32* %19, align 8
  %40 = tail call fastcc i8* @afm_stream_read_one(%struct.AFM_StreamRec_* %18) #11
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  %43 = load i32, i32* %19, align 8
  %44 = icmp eq i32 %43, 2
  br i1 %44, label %39, label %691

45:                                               ; preds = %39
  %46 = bitcast %struct.AFM_StreamRec_* %18 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = ptrtoint i8* %40 to i64
  %49 = xor i64 %48, -1
  %50 = add i64 %47, %49
  %51 = icmp eq i64 %50, 16
  br i1 %51, label %52, label %691

52:                                               ; preds = %45
  %53 = tail call i32 @strncmp(i8* nonnull %40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 16) #12
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %691

55:                                               ; preds = %52
  %56 = bitcast [4 x %struct.AFM_ValueRec_]* %10 to i8*
  %57 = bitcast %struct.AFM_ValueRec_* %8 to i8*
  %58 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %8, i64 0, i32 0
  %59 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %8, i64 0, i32 1
  %60 = bitcast %union.anon.0* %59 to i32*
  %61 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %10, i64 0, i64 0
  %62 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %10, i64 0, i64 0, i32 0
  %63 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %10, i64 0, i64 0, i32 1
  %64 = bitcast %union.anon.0* %63 to i64*
  %65 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 3
  %66 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 2
  %67 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %10, i64 0, i64 1, i32 0
  %68 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %10, i64 0, i64 2, i32 0
  %69 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %10, i64 0, i64 3, i32 0
  %70 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 1, i32 0
  %71 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %10, i64 0, i64 1, i32 1
  %72 = bitcast %union.anon.0* %71 to i64*
  %73 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 1, i32 1
  %74 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %10, i64 0, i64 2, i32 1
  %75 = bitcast %union.anon.0* %74 to i64*
  %76 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 1, i32 2
  %77 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %10, i64 0, i64 3, i32 1
  %78 = bitcast %union.anon.0* %77 to i64*
  %79 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 1, i32 3
  %80 = bitcast %union.anon.0* %63 to i8*
  %81 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 0
  %82 = bitcast %struct.AFM_ValueRec_* %9 to i8*
  %83 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %9, i64 0, i32 0
  %84 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %9, i64 0, i32 1
  %85 = bitcast %union.anon.0* %84 to i32*
  br label %86

86:                                               ; preds = %55, %677
  %87 = phi i32 [ %678, %677 ], [ 160, %55 ]
  %88 = load %struct.AFM_StreamRec_*, %struct.AFM_StreamRec_** %17, align 8
  %89 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %88, i64 0, i32 3
  %90 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %88, i64 0, i32 0
  %91 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %88, i64 0, i32 2
  %92 = load i32, i32* %89, align 8
  %93 = icmp sgt i32 %92, 1
  br i1 %93, label %108, label %94

94:                                               ; preds = %86
  tail call fastcc void @afm_stream_skip_spaces(%struct.AFM_StreamRec_* %88) #11
  %95 = load i32, i32* %89, align 8
  %96 = icmp sgt i32 %95, 1
  br i1 %96, label %108, label %97

97:                                               ; preds = %94
  %98 = load i8*, i8** %90, align 8
  %99 = load i8*, i8** %91, align 8
  br label %100

100:                                              ; preds = %103, %97
  %101 = phi i8* [ %104, %103 ], [ %98, %97 ]
  %102 = icmp ult i8* %101, %99
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = getelementptr inbounds i8, i8* %101, i64 1
  store i8* %104, i8** %90, align 8
  %105 = load i8, i8* %101, align 1
  switch i8 %105, label %100 [
    i8 13, label %106
    i8 10, label %106
    i8 26, label %107
  ]

106:                                              ; preds = %103, %103
  store i32 2, i32* %89, align 8
  br label %108

107:                                              ; preds = %103, %100
  store i32 3, i32* %89, align 8
  br label %108

108:                                              ; preds = %86, %94, %106, %107
  br label %109

109:                                              ; preds = %108, %112
  store i32 0, i32* %89, align 8
  %110 = tail call fastcc i8* @afm_stream_read_one(%struct.AFM_StreamRec_* %88) #11
  %111 = icmp eq i8* %110, null
  br i1 %111, label %112, label %115

112:                                              ; preds = %109
  %113 = load i32, i32* %89, align 8
  %114 = icmp eq i32 %113, 2
  br i1 %114, label %109, label %681

115:                                              ; preds = %109
  %116 = bitcast %struct.AFM_StreamRec_* %88 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = ptrtoint i8* %110 to i64
  %119 = xor i64 %118, -1
  %120 = add i64 %117, %119
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 -86, i64 64, i1 false)
  %121 = load i8, i8* %110, align 1
  br label %122

122:                                              ; preds = %702, %115
  %123 = phi i64 [ 0, %115 ], [ %703, %702 ]
  %124 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %123
  %125 = load i8*, i8** %124, align 16
  %126 = load i8, i8* %125, align 1
  %127 = icmp eq i8 %126, %121
  br i1 %127, label %128, label %145

128:                                              ; preds = %145, %122
  %129 = phi i64 [ %123, %122 ], [ %146, %145 ]
  %130 = phi i8* [ %125, %122 ], [ %148, %145 ]
  %131 = and i64 %129, 4294967295
  br label %132

132:                                              ; preds = %128, %140
  %133 = phi i64 [ %131, %128 ], [ %138, %140 ]
  %134 = phi i8* [ %130, %128 ], [ %142, %140 ]
  %135 = tail call i32 @strncmp(i8* %134, i8* nonnull %110, i64 %120) #12
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %151, label %137

137:                                              ; preds = %132
  %138 = add nuw nsw i64 %133, 1
  %139 = icmp eq i64 %138, 74
  br i1 %139, label %677, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %138
  %142 = load i8*, i8** %141, align 8
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, %121
  br i1 %144, label %132, label %677

145:                                              ; preds = %122
  %146 = or i64 %123, 1
  %147 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %146
  %148 = load i8*, i8** %147, align 8
  %149 = load i8, i8* %148, align 1
  %150 = icmp eq i8 %149, %121
  br i1 %150, label %128, label %702

151:                                              ; preds = %132
  %152 = trunc i64 %133 to i32
  switch i32 %152, label %677 [
    i32 40, label %153
    i32 30, label %161
    i32 26, label %166
    i32 0, label %174
    i32 14, label %179
    i32 45, label %184
    i32 49, label %293
    i32 20, label %676
  ]

153:                                              ; preds = %151
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 16, i1 false) #11
  store i32 3, i32* %83, align 8
  %154 = call fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* %0, %struct.AFM_ValueRec_* nonnull %9, i32 1) #11
  %155 = icmp eq i32 %154, 1
  br i1 %155, label %157, label %156

156:                                              ; preds = %153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #11
  br label %679

157:                                              ; preds = %153
  %158 = load i32, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #11
  %159 = and i32 %158, -3
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %677, label %679

161:                                              ; preds = %151
  store i32 4, i32* %62, align 16
  %162 = call fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* %0, %struct.AFM_ValueRec_* nonnull %61, i32 1)
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %679

164:                                              ; preds = %161
  %165 = load i8, i8* %80, align 8
  store i8 %165, i8* %81, align 8
  br label %677

166:                                              ; preds = %151
  store i32 2, i32* %62, align 16
  store i32 2, i32* %67, align 16
  store i32 2, i32* %68, align 16
  store i32 2, i32* %69, align 16
  %167 = call fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* %0, %struct.AFM_ValueRec_* nonnull %61, i32 4)
  %168 = icmp eq i32 %167, 4
  br i1 %168, label %169, label %679

169:                                              ; preds = %166
  %170 = load i64, i64* %64, align 8
  store i64 %170, i64* %70, align 8
  %171 = load i64, i64* %72, align 8
  store i64 %171, i64* %73, align 8
  %172 = load i64, i64* %75, align 8
  store i64 %172, i64* %76, align 8
  %173 = load i64, i64* %78, align 8
  store i64 %173, i64* %79, align 8
  br label %677

174:                                              ; preds = %151
  store i32 2, i32* %62, align 16
  %175 = call fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* %0, %struct.AFM_ValueRec_* nonnull %61, i32 1)
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %679

177:                                              ; preds = %174
  %178 = load i64, i64* %64, align 8
  store i64 %178, i64* %66, align 8
  br label %677

179:                                              ; preds = %151
  store i32 2, i32* %62, align 16
  %180 = call fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* %0, %struct.AFM_ValueRec_* nonnull %61, i32 1)
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %679

182:                                              ; preds = %179
  %183 = load i64, i64* %64, align 8
  store i64 %183, i64* %65, align 8
  br label %677

184:                                              ; preds = %151
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 16, i1 false) #11
  store i32 3, i32* %58, align 8
  %185 = call fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* %0, %struct.AFM_ValueRec_* nonnull %8, i32 1) #11
  %186 = icmp eq i32 %185, 1
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #11
  br label %679

188:                                              ; preds = %184
  %189 = load i32, i32* %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #11
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %192, %188
  br label %224

192:                                              ; preds = %218
  %193 = icmp sgt i32 %196, 0
  br i1 %193, label %194, label %191

194:                                              ; preds = %188, %192
  %195 = phi i32 [ %196, %192 ], [ %189, %188 ]
  %196 = add nsw i32 %195, -1
  %197 = load %struct.AFM_StreamRec_*, %struct.AFM_StreamRec_** %17, align 8
  %198 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %197, i64 0, i32 3
  %199 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %197, i64 0, i32 0
  %200 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %197, i64 0, i32 2
  %201 = load i32, i32* %198, align 8
  %202 = icmp sgt i32 %201, 1
  br i1 %202, label %217, label %203

203:                                              ; preds = %194
  tail call fastcc void @afm_stream_skip_spaces(%struct.AFM_StreamRec_* %197) #11
  %204 = load i32, i32* %198, align 8
  %205 = icmp sgt i32 %204, 1
  br i1 %205, label %217, label %206

206:                                              ; preds = %203
  %207 = load i8*, i8** %199, align 8
  %208 = load i8*, i8** %200, align 8
  br label %209

209:                                              ; preds = %212, %206
  %210 = phi i8* [ %213, %212 ], [ %207, %206 ]
  %211 = icmp ult i8* %210, %208
  br i1 %211, label %212, label %216

212:                                              ; preds = %209
  %213 = getelementptr inbounds i8, i8* %210, i64 1
  store i8* %213, i8** %199, align 8
  %214 = load i8, i8* %210, align 1
  switch i8 %214, label %209 [
    i8 13, label %215
    i8 10, label %215
    i8 26, label %216
  ]

215:                                              ; preds = %212, %212
  store i32 2, i32* %198, align 8
  br label %217

216:                                              ; preds = %212, %209
  store i32 3, i32* %198, align 8
  br label %217

217:                                              ; preds = %216, %215, %203, %194
  br label %218

218:                                              ; preds = %217, %221
  store i32 0, i32* %198, align 8
  %219 = tail call fastcc i8* @afm_stream_read_one(%struct.AFM_StreamRec_* %197) #11
  %220 = icmp eq i8* %219, null
  br i1 %220, label %221, label %192

221:                                              ; preds = %218
  %222 = load i32, i32* %198, align 8
  %223 = icmp eq i32 %222, 2
  br i1 %223, label %218, label %292

224:                                              ; preds = %191, %290
  %225 = load %struct.AFM_StreamRec_*, %struct.AFM_StreamRec_** %17, align 8
  %226 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %225, i64 0, i32 3
  %227 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %225, i64 0, i32 0
  %228 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %225, i64 0, i32 2
  %229 = load i32, i32* %226, align 8
  %230 = icmp sgt i32 %229, 1
  br i1 %230, label %245, label %231

231:                                              ; preds = %224
  tail call fastcc void @afm_stream_skip_spaces(%struct.AFM_StreamRec_* %225) #11
  %232 = load i32, i32* %226, align 8
  %233 = icmp sgt i32 %232, 1
  br i1 %233, label %245, label %234

234:                                              ; preds = %231
  %235 = load i8*, i8** %227, align 8
  %236 = load i8*, i8** %228, align 8
  br label %237

237:                                              ; preds = %240, %234
  %238 = phi i8* [ %241, %240 ], [ %235, %234 ]
  %239 = icmp ult i8* %238, %236
  br i1 %239, label %240, label %244

240:                                              ; preds = %237
  %241 = getelementptr inbounds i8, i8* %238, i64 1
  store i8* %241, i8** %227, align 8
  %242 = load i8, i8* %238, align 1
  switch i8 %242, label %237 [
    i8 13, label %243
    i8 10, label %243
    i8 26, label %244
  ]

243:                                              ; preds = %240, %240
  store i32 2, i32* %226, align 8
  br label %245

244:                                              ; preds = %240, %237
  store i32 3, i32* %226, align 8
  br label %245

245:                                              ; preds = %244, %243, %231, %224
  br label %246

246:                                              ; preds = %245, %249
  store i32 0, i32* %226, align 8
  %247 = tail call fastcc i8* @afm_stream_read_one(%struct.AFM_StreamRec_* %225) #11
  %248 = icmp eq i8* %247, null
  br i1 %248, label %249, label %252

249:                                              ; preds = %246
  %250 = load i32, i32* %226, align 8
  %251 = icmp eq i32 %250, 2
  br i1 %251, label %246, label %292

252:                                              ; preds = %246
  %253 = bitcast %struct.AFM_StreamRec_* %225 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = ptrtoint i8* %247 to i64
  %256 = xor i64 %255, -1
  %257 = add i64 %254, %256
  %258 = load i8, i8* %247, align 1
  br label %259

259:                                              ; preds = %705, %252
  %260 = phi i64 [ 0, %252 ], [ %706, %705 ]
  %261 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %260
  %262 = load i8*, i8** %261, align 16
  %263 = load i8, i8* %262, align 1
  %264 = icmp eq i8 %263, %258
  br i1 %264, label %265, label %282

265:                                              ; preds = %282, %259
  %266 = phi i64 [ %260, %259 ], [ %283, %282 ]
  %267 = phi i8* [ %262, %259 ], [ %285, %282 ]
  %268 = and i64 %266, 4294967295
  br label %269

269:                                              ; preds = %277, %265
  %270 = phi i64 [ %268, %265 ], [ %275, %277 ]
  %271 = phi i8* [ %267, %265 ], [ %279, %277 ]
  %272 = tail call i32 @strncmp(i8* %271, i8* nonnull %247, i64 %257) #12
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %288, label %274

274:                                              ; preds = %269
  %275 = add nuw nsw i64 %270, 1
  %276 = icmp eq i64 %275, 74
  br i1 %276, label %290, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %275
  %279 = load i8*, i8** %278, align 8
  %280 = load i8, i8* %279, align 1
  %281 = icmp eq i8 %280, %258
  br i1 %281, label %269, label %290

282:                                              ; preds = %259
  %283 = or i64 %260, 1
  %284 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %283
  %285 = load i8*, i8** %284, align 8
  %286 = load i8, i8* %285, align 1
  %287 = icmp eq i8 %286, %258
  br i1 %287, label %265, label %705

288:                                              ; preds = %269
  %289 = trunc i64 %270 to i32
  br label %290

290:                                              ; preds = %705, %277, %274, %288
  %291 = phi i32 [ %289, %288 ], [ 75, %274 ], [ 75, %277 ], [ 75, %705 ]
  switch i32 %291, label %224 [
    i32 20, label %677
    i32 17, label %677
  ]

292:                                              ; preds = %221, %249
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #11
  br label %691

293:                                              ; preds = %151
  %294 = bitcast %struct.AFM_ValueRec_* %2 to i8*
  %295 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %2, i64 0, i32 0
  %296 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %2, i64 0, i32 1
  %297 = bitcast %union.anon.0* %296 to i32*
  %298 = bitcast i32* %3 to i8*
  %299 = bitcast [4 x %struct.AFM_ValueRec_]* %4 to i8*
  %300 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %4, i64 0, i64 0
  %301 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %4, i64 0, i64 0, i32 0
  %302 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %4, i64 0, i64 1, i32 0
  %303 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %4, i64 0, i64 2, i32 0
  %304 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %4, i64 0, i64 3, i32 0
  %305 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %4, i64 0, i64 0, i32 1
  %306 = bitcast %union.anon.0* %305 to i32*
  %307 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %4, i64 0, i64 1, i32 1
  %308 = bitcast %union.anon.0* %307 to i32*
  %309 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %4, i64 0, i64 2, i32 1
  %310 = bitcast %union.anon.0* %309 to i32*
  %311 = getelementptr inbounds [4 x %struct.AFM_ValueRec_], [4 x %struct.AFM_ValueRec_]* %4, i64 0, i64 3, i32 1
  %312 = bitcast %union.anon.0* %311 to i32*
  %313 = bitcast %struct.AFM_ValueRec_* %5 to i8*
  %314 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %5, i64 0, i32 0
  %315 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %5, i64 0, i32 1
  %316 = bitcast %union.anon.0* %315 to i32*
  %317 = bitcast i32* %6 to i8*
  %318 = bitcast [5 x %struct.AFM_ValueRec_]* %7 to i8*
  %319 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 0
  %320 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 0, i32 0
  %321 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 1, i32 0
  %322 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 2, i32 0
  %323 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 3, i32 0
  %324 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 4, i32 0
  %325 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 0, i32 1
  %326 = bitcast %union.anon.0* %325 to i32*
  %327 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 1, i32 1
  %328 = bitcast %union.anon.0* %327 to i64*
  %329 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 2, i32 1
  %330 = bitcast %union.anon.0* %329 to i64*
  %331 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 3, i32 1
  %332 = bitcast %union.anon.0* %331 to i64*
  %333 = getelementptr inbounds [5 x %struct.AFM_ValueRec_], [5 x %struct.AFM_ValueRec_]* %7, i64 0, i64 4, i32 1
  %334 = bitcast %union.anon.0* %333 to i64*
  br label %335

335:                                              ; preds = %535, %293
  %336 = phi i32 [ 1, %535 ], [ 0, %293 ]
  %337 = phi i32 [ %339, %535 ], [ 0, %293 ]
  br label %338

338:                                              ; preds = %335, %672
  %339 = phi i32 [ %337, %335 ], [ 1, %672 ]
  br label %340

340:                                              ; preds = %406, %338
  %341 = load %struct.AFM_StreamRec_*, %struct.AFM_StreamRec_** %17, align 8
  %342 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %341, i64 0, i32 3
  %343 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %341, i64 0, i32 0
  %344 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %341, i64 0, i32 2
  %345 = load i32, i32* %342, align 8
  %346 = icmp sgt i32 %345, 1
  br i1 %346, label %361, label %347

347:                                              ; preds = %340
  call fastcc void @afm_stream_skip_spaces(%struct.AFM_StreamRec_* %341) #11
  %348 = load i32, i32* %342, align 8
  %349 = icmp sgt i32 %348, 1
  br i1 %349, label %361, label %350

350:                                              ; preds = %347
  %351 = load i8*, i8** %343, align 8
  %352 = load i8*, i8** %344, align 8
  br label %353

353:                                              ; preds = %356, %350
  %354 = phi i8* [ %357, %356 ], [ %351, %350 ]
  %355 = icmp ult i8* %354, %352
  br i1 %355, label %356, label %360

356:                                              ; preds = %353
  %357 = getelementptr inbounds i8, i8* %354, i64 1
  store i8* %357, i8** %343, align 8
  %358 = load i8, i8* %354, align 1
  switch i8 %358, label %353 [
    i8 13, label %359
    i8 10, label %359
    i8 26, label %360
  ]

359:                                              ; preds = %356, %356
  store i32 2, i32* %342, align 8
  br label %361

360:                                              ; preds = %356, %353
  store i32 3, i32* %342, align 8
  br label %361

361:                                              ; preds = %360, %359, %347, %340
  br label %362

362:                                              ; preds = %361, %365
  store i32 0, i32* %342, align 8
  %363 = call fastcc i8* @afm_stream_read_one(%struct.AFM_StreamRec_* %341) #11
  %364 = icmp eq i8* %363, null
  br i1 %364, label %365, label %368

365:                                              ; preds = %362
  %366 = load i32, i32* %342, align 8
  %367 = icmp eq i32 %366, 2
  br i1 %367, label %362, label %679

368:                                              ; preds = %362
  %369 = bitcast %struct.AFM_StreamRec_* %341 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = ptrtoint i8* %363 to i64
  %372 = xor i64 %371, -1
  %373 = add i64 %370, %372
  %374 = load i8, i8* %363, align 1
  br label %375

375:                                              ; preds = %693, %368
  %376 = phi i64 [ 0, %368 ], [ %694, %693 ]
  %377 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %376
  %378 = load i8*, i8** %377, align 16
  %379 = load i8, i8* %378, align 1
  %380 = icmp eq i8 %379, %374
  br i1 %380, label %381, label %398

381:                                              ; preds = %398, %375
  %382 = phi i64 [ %376, %375 ], [ %399, %398 ]
  %383 = phi i8* [ %378, %375 ], [ %401, %398 ]
  %384 = and i64 %382, 4294967295
  br label %385

385:                                              ; preds = %393, %381
  %386 = phi i64 [ %384, %381 ], [ %391, %393 ]
  %387 = phi i8* [ %383, %381 ], [ %395, %393 ]
  %388 = call i32 @strncmp(i8* %387, i8* nonnull %363, i64 %373) #12
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %404, label %390

390:                                              ; preds = %385
  %391 = add nuw nsw i64 %386, 1
  %392 = icmp eq i64 %391, 74
  br i1 %392, label %406, label %393

393:                                              ; preds = %390
  %394 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %391
  %395 = load i8*, i8** %394, align 8
  %396 = load i8, i8* %395, align 1
  %397 = icmp eq i8 %396, %374
  br i1 %397, label %385, label %406

398:                                              ; preds = %375
  %399 = or i64 %376, 1
  %400 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %399
  %401 = load i8*, i8** %400, align 8
  %402 = load i8, i8* %401, align 1
  %403 = icmp eq i8 %402, %374
  br i1 %403, label %381, label %693

404:                                              ; preds = %385
  %405 = trunc i64 %386 to i32
  switch i32 %405, label %679 [
    i32 53, label %407
    i32 50, label %536
    i32 51, label %536
    i32 21, label %676
    i32 20, label %676
    i32 75, label %406
  ]

406:                                              ; preds = %693, %390, %393, %404
  br label %340

407:                                              ; preds = %404
  %408 = icmp eq i32 %336, 0
  br i1 %408, label %409, label %679

409:                                              ; preds = %407
  %410 = load %struct.AFM_FontInfoRec_*, %struct.AFM_FontInfoRec_** %13, align 8
  %411 = load %struct.AFM_StreamRec_*, %struct.AFM_StreamRec_** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %313, i8 -86, i64 16, i1 false) #11
  store i32 3, i32* %314, align 8
  %412 = call fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* %0, %struct.AFM_ValueRec_* nonnull %5, i32 1) #11
  %413 = icmp eq i32 %412, 1
  br i1 %413, label %415, label %414

414:                                              ; preds = %409
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #11
  br label %679

415:                                              ; preds = %409
  %416 = load i32, i32* %316, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #11
  %417 = icmp slt i32 %416, 0
  br i1 %417, label %679, label %418

418:                                              ; preds = %415
  %419 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %410, i64 0, i32 5
  store i32 %416, i32* %419, align 8
  %420 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %411, i64 0, i32 2
  %421 = bitcast i8** %420 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = bitcast %struct.AFM_StreamRec_* %411 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = sub i64 %422, %424
  %426 = sdiv i64 %425, 20
  %427 = zext i32 %416 to i64
  %428 = icmp slt i64 %426, %427
  br i1 %428, label %679, label %429

429:                                              ; preds = %418
  %430 = icmp eq i32 %416, 0
  br i1 %430, label %438, label %431

431:                                              ; preds = %429
  %432 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %317) #11
  store i32 -1431655766, i32* %6, align 4
  %433 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %432, i64 40, i64 0, i64 %427, i8* null, i32* nonnull %6) #11
  %434 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %410, i64 0, i32 4
  %435 = bitcast %struct.AFM_TrackKernRec_** %434 to i8**
  store i8* %433, i8** %435, align 8
  %436 = load i32, i32* %6, align 4
  %437 = icmp eq i32 %436, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %317) #11
  br i1 %437, label %438, label %679

438:                                              ; preds = %431, %429
  %439 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %410, i64 0, i32 4
  br label %440

440:                                              ; preds = %533, %438
  %441 = phi i32 [ -1, %438 ], [ %534, %533 ]
  %442 = load %struct.AFM_StreamRec_*, %struct.AFM_StreamRec_** %17, align 8
  %443 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %442, i64 0, i32 3
  %444 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %442, i64 0, i32 0
  %445 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %442, i64 0, i32 2
  %446 = load i32, i32* %443, align 8
  %447 = icmp sgt i32 %446, 1
  br i1 %447, label %462, label %448

448:                                              ; preds = %440
  call fastcc void @afm_stream_skip_spaces(%struct.AFM_StreamRec_* %442) #11
  %449 = load i32, i32* %443, align 8
  %450 = icmp sgt i32 %449, 1
  br i1 %450, label %462, label %451

451:                                              ; preds = %448
  %452 = load i8*, i8** %444, align 8
  %453 = load i8*, i8** %445, align 8
  br label %454

454:                                              ; preds = %457, %451
  %455 = phi i8* [ %458, %457 ], [ %452, %451 ]
  %456 = icmp ult i8* %455, %453
  br i1 %456, label %457, label %461

457:                                              ; preds = %454
  %458 = getelementptr inbounds i8, i8* %455, i64 1
  store i8* %458, i8** %444, align 8
  %459 = load i8, i8* %455, align 1
  switch i8 %459, label %454 [
    i8 13, label %460
    i8 10, label %460
    i8 26, label %461
  ]

460:                                              ; preds = %457, %457
  store i32 2, i32* %443, align 8
  br label %462

461:                                              ; preds = %457, %454
  store i32 3, i32* %443, align 8
  br label %462

462:                                              ; preds = %461, %460, %448, %440
  br label %463

463:                                              ; preds = %462, %466
  store i32 0, i32* %443, align 8
  %464 = call fastcc i8* @afm_stream_read_one(%struct.AFM_StreamRec_* %442) #11
  %465 = icmp eq i8* %464, null
  br i1 %465, label %466, label %469

466:                                              ; preds = %463
  %467 = load i32, i32* %443, align 8
  %468 = icmp eq i32 %467, 2
  br i1 %468, label %463, label %679

469:                                              ; preds = %463
  %470 = bitcast %struct.AFM_StreamRec_* %442 to i64*
  %471 = load i64, i64* %470, align 8
  %472 = ptrtoint i8* %464 to i64
  %473 = xor i64 %472, -1
  %474 = add i64 %471, %473
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %318) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %318, i8 -86, i64 80, i1 false) #11
  %475 = load i8, i8* %464, align 1
  br label %476

476:                                              ; preds = %699, %469
  %477 = phi i64 [ 0, %469 ], [ %700, %699 ]
  %478 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %477
  %479 = load i8*, i8** %478, align 16
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, %475
  br i1 %481, label %482, label %499

482:                                              ; preds = %499, %476
  %483 = phi i64 [ %477, %476 ], [ %500, %499 ]
  %484 = phi i8* [ %479, %476 ], [ %502, %499 ]
  %485 = and i64 %483, 4294967295
  br label %486

486:                                              ; preds = %494, %482
  %487 = phi i64 [ %485, %482 ], [ %492, %494 ]
  %488 = phi i8* [ %484, %482 ], [ %496, %494 ]
  %489 = call i32 @strncmp(i8* %488, i8* nonnull %464, i64 %474) #12
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %505, label %491

491:                                              ; preds = %486
  %492 = add nuw nsw i64 %487, 1
  %493 = icmp eq i64 %492, 74
  br i1 %493, label %533, label %494

494:                                              ; preds = %491
  %495 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %492
  %496 = load i8*, i8** %495, align 8
  %497 = load i8, i8* %496, align 1
  %498 = icmp eq i8 %497, %475
  br i1 %498, label %486, label %533

499:                                              ; preds = %476
  %500 = or i64 %477, 1
  %501 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %500
  %502 = load i8*, i8** %501, align 8
  %503 = load i8, i8* %502, align 1
  %504 = icmp eq i8 %503, %475
  br i1 %504, label %482, label %699

505:                                              ; preds = %486
  %506 = trunc i64 %487 to i32
  switch i32 %506, label %532 [
    i32 56, label %507
    i32 23, label %527
    i32 21, label %527
    i32 20, label %527
    i32 75, label %533
  ]

507:                                              ; preds = %505
  %508 = add nsw i32 %441, 1
  %509 = load i32, i32* %419, align 8
  %510 = icmp slt i32 %508, %509
  br i1 %510, label %511, label %532

511:                                              ; preds = %507
  %512 = load %struct.AFM_TrackKernRec_*, %struct.AFM_TrackKernRec_** %439, align 8
  %513 = sext i32 %508 to i64
  store i32 3, i32* %320, align 16
  store i32 2, i32* %321, align 16
  store i32 2, i32* %322, align 16
  store i32 2, i32* %323, align 16
  store i32 2, i32* %324, align 16
  %514 = call fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* %0, %struct.AFM_ValueRec_* nonnull %319, i32 5) #11
  %515 = icmp eq i32 %514, 5
  br i1 %515, label %516, label %532

516:                                              ; preds = %511
  %517 = load i32, i32* %326, align 8
  %518 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %512, i64 %513, i32 0
  store i32 %517, i32* %518, align 8
  %519 = load i64, i64* %328, align 8
  %520 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %512, i64 %513, i32 1
  store i64 %519, i64* %520, align 8
  %521 = load i64, i64* %330, align 8
  %522 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %512, i64 %513, i32 2
  store i64 %521, i64* %522, align 8
  %523 = load i64, i64* %332, align 8
  %524 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %512, i64 %513, i32 3
  store i64 %523, i64* %524, align 8
  %525 = load i64, i64* %334, align 8
  %526 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %512, i64 %513, i32 4
  store i64 %525, i64* %526, align 8
  br label %533

527:                                              ; preds = %505, %505, %505
  %528 = add nsw i32 %441, 1
  %529 = load i32, i32* %419, align 8
  %530 = icmp eq i32 %528, %529
  br i1 %530, label %535, label %531

531:                                              ; preds = %527
  store i32 %528, i32* %419, align 8
  br label %535

532:                                              ; preds = %511, %507, %505
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %318) #11
  br label %679

533:                                              ; preds = %699, %494, %491, %516, %505
  %534 = phi i32 [ %441, %505 ], [ %508, %516 ], [ %441, %491 ], [ %441, %494 ], [ %441, %699 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %318) #11
  br label %440

535:                                              ; preds = %531, %527
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %318) #11
  br label %335

536:                                              ; preds = %404, %404
  %537 = icmp eq i32 %339, 0
  br i1 %537, label %538, label %679

538:                                              ; preds = %536
  %539 = load %struct.AFM_FontInfoRec_*, %struct.AFM_FontInfoRec_** %13, align 8
  %540 = load %struct.AFM_StreamRec_*, %struct.AFM_StreamRec_** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %294) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %294, i8 -86, i64 16, i1 false) #11
  store i32 3, i32* %295, align 8
  %541 = call fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* %0, %struct.AFM_ValueRec_* nonnull %2, i32 1) #11
  %542 = icmp eq i32 %541, 1
  br i1 %542, label %544, label %543

543:                                              ; preds = %538
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %294) #11
  br label %679

544:                                              ; preds = %538
  %545 = load i32, i32* %297, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %294) #11
  %546 = icmp slt i32 %545, 0
  br i1 %546, label %679, label %547

547:                                              ; preds = %544
  %548 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %539, i64 0, i32 7
  store i32 %545, i32* %548, align 8
  %549 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %540, i64 0, i32 2
  %550 = bitcast i8** %549 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = bitcast %struct.AFM_StreamRec_* %540 to i64*
  %553 = load i64, i64* %552, align 8
  %554 = sub i64 %551, %553
  %555 = sdiv i64 %554, 10
  %556 = zext i32 %545 to i64
  %557 = icmp slt i64 %555, %556
  br i1 %557, label %679, label %558

558:                                              ; preds = %547
  %559 = icmp eq i32 %545, 0
  br i1 %559, label %567, label %560

560:                                              ; preds = %558
  %561 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %298) #11
  store i32 -1431655766, i32* %3, align 4
  %562 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %561, i64 16, i64 0, i64 %556, i8* null, i32* nonnull %3) #11
  %563 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %539, i64 0, i32 6
  %564 = bitcast %struct.AFM_KernPairRec_** %563 to i8**
  store i8* %562, i8** %564, align 8
  %565 = load i32, i32* %3, align 4
  %566 = icmp eq i32 %565, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %298) #11
  br i1 %566, label %567, label %679

567:                                              ; preds = %560, %558
  %568 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %539, i64 0, i32 6
  br label %569

569:                                              ; preds = %661, %567
  %570 = phi i32 [ %640, %661 ], [ -1, %567 ]
  br label %571

571:                                              ; preds = %637, %569
  %572 = load %struct.AFM_StreamRec_*, %struct.AFM_StreamRec_** %17, align 8
  %573 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %572, i64 0, i32 3
  %574 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %572, i64 0, i32 0
  %575 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %572, i64 0, i32 2
  %576 = load i32, i32* %573, align 8
  %577 = icmp sgt i32 %576, 1
  br i1 %577, label %592, label %578

578:                                              ; preds = %571
  call fastcc void @afm_stream_skip_spaces(%struct.AFM_StreamRec_* %572) #11
  %579 = load i32, i32* %573, align 8
  %580 = icmp sgt i32 %579, 1
  br i1 %580, label %592, label %581

581:                                              ; preds = %578
  %582 = load i8*, i8** %574, align 8
  %583 = load i8*, i8** %575, align 8
  br label %584

584:                                              ; preds = %587, %581
  %585 = phi i8* [ %588, %587 ], [ %582, %581 ]
  %586 = icmp ult i8* %585, %583
  br i1 %586, label %587, label %591

587:                                              ; preds = %584
  %588 = getelementptr inbounds i8, i8* %585, i64 1
  store i8* %588, i8** %574, align 8
  %589 = load i8, i8* %585, align 1
  switch i8 %589, label %584 [
    i8 13, label %590
    i8 10, label %590
    i8 26, label %591
  ]

590:                                              ; preds = %587, %587
  store i32 2, i32* %573, align 8
  br label %592

591:                                              ; preds = %587, %584
  store i32 3, i32* %573, align 8
  br label %592

592:                                              ; preds = %591, %590, %578, %571
  br label %593

593:                                              ; preds = %592, %596
  store i32 0, i32* %573, align 8
  %594 = call fastcc i8* @afm_stream_read_one(%struct.AFM_StreamRec_* %572) #11
  %595 = icmp eq i8* %594, null
  br i1 %595, label %596, label %599

596:                                              ; preds = %593
  %597 = load i32, i32* %573, align 8
  %598 = icmp eq i32 %597, 2
  br i1 %598, label %593, label %679

599:                                              ; preds = %593
  %600 = bitcast %struct.AFM_StreamRec_* %572 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = ptrtoint i8* %594 to i64
  %603 = xor i64 %602, -1
  %604 = add i64 %601, %603
  %605 = load i8, i8* %594, align 1
  br label %606

606:                                              ; preds = %696, %599
  %607 = phi i64 [ 0, %599 ], [ %697, %696 ]
  %608 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %607
  %609 = load i8*, i8** %608, align 16
  %610 = load i8, i8* %609, align 1
  %611 = icmp eq i8 %610, %605
  br i1 %611, label %612, label %629

612:                                              ; preds = %629, %606
  %613 = phi i64 [ %607, %606 ], [ %630, %629 ]
  %614 = phi i8* [ %609, %606 ], [ %632, %629 ]
  %615 = and i64 %613, 4294967295
  br label %616

616:                                              ; preds = %624, %612
  %617 = phi i64 [ %615, %612 ], [ %622, %624 ]
  %618 = phi i8* [ %614, %612 ], [ %626, %624 ]
  %619 = call i32 @strncmp(i8* %618, i8* nonnull %594, i64 %604) #12
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %635, label %621

621:                                              ; preds = %616
  %622 = add nuw nsw i64 %617, 1
  %623 = icmp eq i64 %622, 74
  br i1 %623, label %637, label %624

624:                                              ; preds = %621
  %625 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %622
  %626 = load i8*, i8** %625, align 8
  %627 = load i8, i8* %626, align 1
  %628 = icmp eq i8 %627, %605
  br i1 %628, label %616, label %637

629:                                              ; preds = %606
  %630 = or i64 %607, 1
  %631 = getelementptr inbounds [74 x i8*], [74 x i8*]* @afm_key_table, i64 0, i64 %630
  %632 = load i8*, i8** %631, align 8
  %633 = load i8, i8* %632, align 1
  %634 = icmp eq i8 %633, %605
  br i1 %634, label %612, label %696

635:                                              ; preds = %616
  %636 = trunc i64 %617 to i32
  switch i32 %636, label %679 [
    i32 34, label %638
    i32 36, label %638
    i32 37, label %638
    i32 22, label %667
    i32 21, label %667
    i32 20, label %667
    i32 75, label %637
  ]

637:                                              ; preds = %696, %621, %624, %635
  br label %571

638:                                              ; preds = %635, %635, %635
  %639 = trunc i64 %617 to i32
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %299) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %299, i8 -86, i64 64, i1 false) #11
  %640 = add nsw i32 %570, 1
  %641 = load i32, i32* %548, align 8
  %642 = icmp slt i32 %640, %641
  br i1 %642, label %643, label %666

643:                                              ; preds = %638
  %644 = load %struct.AFM_KernPairRec_*, %struct.AFM_KernPairRec_** %568, align 8
  %645 = sext i32 %640 to i64
  store i32 5, i32* %301, align 16
  store i32 5, i32* %302, align 16
  store i32 3, i32* %303, align 16
  store i32 3, i32* %304, align 16
  %646 = call fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* %0, %struct.AFM_ValueRec_* nonnull %300, i32 4) #11
  %647 = icmp slt i32 %646, 3
  br i1 %647, label %666, label %648

648:                                              ; preds = %643
  %649 = load i32, i32* %306, align 8
  %650 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %644, i64 %645, i32 0
  store i32 %649, i32* %650, align 4
  %651 = load i32, i32* %308, align 8
  %652 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %644, i64 %645, i32 1
  store i32 %651, i32* %652, align 4
  %653 = icmp eq i32 %639, 37
  %654 = load i32, i32* %310, align 8
  br i1 %653, label %661, label %655

655:                                              ; preds = %648
  %656 = icmp eq i32 %639, 34
  %657 = icmp eq i32 %646, 4
  %658 = and i1 %656, %657
  %659 = load i32, i32* %312, align 8
  %660 = select i1 %658, i32 %659, i32 0
  br label %661

661:                                              ; preds = %655, %648
  %662 = phi i32 [ %654, %655 ], [ 0, %648 ]
  %663 = phi i32 [ %660, %655 ], [ %654, %648 ]
  %664 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %644, i64 %645, i32 2
  store i32 %662, i32* %664, align 4
  %665 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %644, i64 %645, i32 3
  store i32 %663, i32* %665, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %299) #11
  br label %569

666:                                              ; preds = %643, %638
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %299) #11
  br label %679

667:                                              ; preds = %635, %635, %635
  %668 = add nsw i32 %570, 1
  %669 = load i32, i32* %548, align 8
  %670 = icmp eq i32 %668, %669
  br i1 %670, label %672, label %671

671:                                              ; preds = %667
  store i32 %668, i32* %548, align 8
  br label %672

672:                                              ; preds = %671, %667
  %673 = bitcast %struct.AFM_KernPairRec_** %568 to i8**
  %674 = load i8*, i8** %673, align 8
  %675 = zext i32 %668 to i64
  call void @qsort(i8* %674, i64 %675, i64 16, i32 (i8*, i8*)* nonnull @afm_compare_kern_pairs) #11
  br label %338

676:                                              ; preds = %151, %404, %404
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #11
  br label %691

677:                                              ; preds = %702, %140, %137, %290, %290, %164, %169, %177, %182, %151, %157
  %678 = phi i32 [ %87, %151 ], [ %87, %182 ], [ %87, %177 ], [ %87, %169 ], [ %87, %164 ], [ %87, %157 ], [ 0, %290 ], [ 0, %290 ], [ %87, %137 ], [ %87, %140 ], [ %87, %702 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #11
  br label %86

679:                                              ; preds = %179, %174, %166, %161, %157, %560, %547, %544, %536, %404, %431, %418, %415, %407, %365, %635, %596, %466, %543, %666, %532, %414, %156, %187
  %680 = phi i32 [ %87, %187 ], [ %87, %156 ], [ 160, %414 ], [ 160, %532 ], [ 160, %666 ], [ 160, %543 ], [ 160, %466 ], [ 160, %596 ], [ 160, %635 ], [ 160, %365 ], [ 160, %404 ], [ 160, %544 ], [ 160, %547 ], [ %565, %560 ], [ 160, %536 ], [ 160, %407 ], [ %436, %431 ], [ 160, %418 ], [ 160, %415 ], [ %87, %179 ], [ %87, %174 ], [ %87, %166 ], [ %87, %161 ], [ 7, %157 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #11
  br label %681

681:                                              ; preds = %112, %679
  %682 = phi i32 [ %680, %679 ], [ %87, %112 ]
  %683 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 4
  %684 = bitcast %struct.AFM_TrackKernRec_** %683 to i8**
  %685 = load i8*, i8** %684, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %12, i8* %685) #11
  store %struct.AFM_TrackKernRec_* null, %struct.AFM_TrackKernRec_** %683, align 8
  %686 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 5
  store i32 0, i32* %686, align 8
  %687 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 6
  %688 = bitcast %struct.AFM_KernPairRec_** %687 to i8**
  %689 = load i8*, i8** %688, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %12, i8* %689) #11
  store %struct.AFM_KernPairRec_* null, %struct.AFM_KernPairRec_** %687, align 8
  %690 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %14, i64 0, i32 7
  store i32 0, i32* %690, align 8
  store i8 0, i8* %81, align 8
  br label %691

691:                                              ; preds = %42, %45, %292, %676, %52, %1, %681
  %692 = phi i32 [ %682, %681 ], [ 6, %1 ], [ 2, %52 ], [ 2, %45 ], [ 0, %676 ], [ 160, %292 ], [ 2, %42 ]
  ret i32 %692

693:                                              ; preds = %398
  %694 = add nuw nsw i64 %376, 2
  %695 = icmp eq i64 %694, 74
  br i1 %695, label %406, label %375

696:                                              ; preds = %629
  %697 = add nuw nsw i64 %607, 2
  %698 = icmp eq i64 %697, 74
  br i1 %698, label %637, label %606

699:                                              ; preds = %499
  %700 = add nuw nsw i64 %477, 2
  %701 = icmp eq i64 %700, 74
  br i1 %701, label %533, label %476

702:                                              ; preds = %145
  %703 = add nuw nsw i64 %123, 2
  %704 = icmp eq i64 %703, 74
  br i1 %704, label %677, label %122

705:                                              ; preds = %282
  %706 = add nuw nsw i64 %260, 2
  %707 = icmp eq i64 %706, 74
  br i1 %707, label %290, label %259
}

; Function Attrs: nounwind ssp uwtable
define internal void @cff_builder_init(%struct.CFF_Builder_* nocapture, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_* readonly, %struct.CFF_GlyphSlotRec_*, i8 zeroext) #0 {
  %6 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 11
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 12
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 1
  store %struct.TT_FaceRec_* %1, %struct.TT_FaceRec_** %8, align 8
  %9 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 2
  store %struct.CFF_GlyphSlotRec_* %3, %struct.CFF_GlyphSlotRec_** %9, align 8
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 25
  %11 = bitcast %struct.FT_MemoryRec_** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.CFF_Builder_* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %struct.CFF_GlyphSlotRec_* %3, null
  br i1 %14, label %46, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.CFF_GlyphSlotRec_, %struct.CFF_GlyphSlotRec_* %3, i64 0, i32 0, i32 21
  %17 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %17, i64 0, i32 0
  %19 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %18, align 8
  %20 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 3
  store %struct.FT_GlyphLoaderRec_* %19, %struct.FT_GlyphLoaderRec_** %20, align 8
  %21 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %19, i64 0, i32 5, i32 0
  %22 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 4
  store %struct.FT_Outline_* %21, %struct.FT_Outline_** %22, align 8
  %23 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %19, i64 0, i32 6, i32 0
  %24 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 5
  store %struct.FT_Outline_* %23, %struct.FT_Outline_** %24, align 8
  tail call void @FT_GlyphLoader_Rewind(%struct.FT_GlyphLoaderRec_* %19) #11
  %25 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 16
  %26 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 15
  %27 = icmp ne i8 %4, 0
  %28 = icmp ne %struct.CFF_SizeRec_* %2, null
  %29 = and i1 %28, %27
  %30 = bitcast i8** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false)
  br i1 %29, label %31, label %46

31:                                               ; preds = %15
  %32 = getelementptr inbounds %struct.CFF_SizeRec_, %struct.CFF_SizeRec_* %2, i64 0, i32 0, i32 3
  %33 = bitcast %struct.FT_Size_InternalRec_** %32 to %struct.CFF_InternalRec_***
  %34 = load %struct.CFF_InternalRec_**, %struct.CFF_InternalRec_*** %33, align 8
  %35 = load %struct.CFF_InternalRec_*, %struct.CFF_InternalRec_** %34, align 8
  %36 = icmp eq %struct.CFF_InternalRec_* %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %31
  %38 = bitcast %struct.CFF_InternalRec_* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast i8** %25 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %16, align 8
  %42 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %41, i64 0, i32 5
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast i8** %26 to i64*
  store i64 %44, i64* %45, align 8
  br label %46

46:                                               ; preds = %15, %31, %37, %5
  %47 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 6
  %48 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 17
  %49 = bitcast %struct.CFF_Builder_FuncsRec_* %48 to i8*
  %50 = bitcast i64* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 48, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 bitcast ({ void (%struct.CFF_Builder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8)*, void (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i32)*, void (%struct.CFF_Builder_*, i64, i64, i8)*, i32 (%struct.CFF_Builder_*, i64, i64)*, i32 (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i64, i64)*, void (%struct.CFF_Builder_*)* }* @cff_builder_funcs to i8*), i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @cff_builder_done(%struct.CFF_Builder_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 2
  %3 = load %struct.CFF_GlyphSlotRec_*, %struct.CFF_GlyphSlotRec_** %2, align 8
  %4 = icmp eq %struct.CFF_GlyphSlotRec_* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.CFF_GlyphSlotRec_, %struct.CFF_GlyphSlotRec_* %3, i64 0, i32 0, i32 13
  %7 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 4
  %8 = bitcast %struct.FT_Outline_** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %struct.FT_Outline_* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %9, i64 40, i1 false)
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_check_points(%struct.CFF_Builder_* nocapture readonly, i32) #0 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 3
  %6 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %6, i64 0, i32 5, i32 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = sext i16 %8 to i32
  %10 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %6, i64 0, i32 6, i32 0, i32 1
  %11 = load i16, i16* %10, align 2
  %12 = sext i16 %11 to i32
  %13 = add i32 %9, %1
  %14 = add i32 %13, %12
  %15 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %6, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ugt i32 %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %4
  %19 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %6, i32 %1, i32 0) #11
  br label %20

20:                                               ; preds = %4, %2, %18
  %21 = phi i32 [ %19, %18 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @cff_builder_add_point(%struct.CFF_Builder_* nocapture readonly, i64, i64, i8 zeroext) #2 {
  %5 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 5
  %6 = load %struct.FT_Outline_*, %struct.FT_Outline_** %5, align 8
  %7 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 12
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %6, i64 0, i32 2
  %12 = load %struct.FT_Vector_*, %struct.FT_Vector_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %6, i64 0, i32 1
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i64
  %16 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %6, i64 0, i32 3
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %15
  %19 = ashr i64 %1, 10
  %20 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 %15, i32 0
  store i64 %19, i64* %20, align 8
  %21 = ashr i64 %2, 10
  %22 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 %15, i32 1
  store i64 %21, i64* %22, align 8
  %23 = icmp eq i8 %3, 0
  %24 = select i1 %23, i8 2, i8 1
  store i8 %24, i8* %18, align 1
  br label %25

25:                                               ; preds = %4, %10
  %26 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %6, i64 0, i32 1
  %27 = load i16, i16* %26, align 2
  %28 = add i16 %27, 1
  store i16 %28, i16* %26, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_builder_add_point1(%struct.CFF_Builder_* nocapture readonly, i64, i64) #0 {
  %4 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 3
  %5 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %5, i64 0, i32 5, i32 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = sext i16 %7 to i32
  %9 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %5, i64 0, i32 6, i32 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = sext i16 %10 to i32
  %12 = add nsw i32 %8, 1
  %13 = add nsw i32 %12, %11
  %14 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %5, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ugt i32 %13, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %5, i32 1, i32 0) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %43

20:                                               ; preds = %3, %17
  %21 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 5
  %22 = load %struct.FT_Outline_*, %struct.FT_Outline_** %21, align 8
  %23 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 12
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %39, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %22, i64 0, i32 2
  %28 = load %struct.FT_Vector_*, %struct.FT_Vector_** %27, align 8
  %29 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %22, i64 0, i32 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i64
  %32 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %22, i64 0, i32 3
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  %35 = ashr i64 %1, 10
  %36 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %28, i64 %31, i32 0
  store i64 %35, i64* %36, align 8
  %37 = ashr i64 %2, 10
  %38 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %28, i64 %31, i32 1
  store i64 %37, i64* %38, align 8
  store i8 1, i8* %34, align 1
  br label %39

39:                                               ; preds = %20, %26
  %40 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %22, i64 0, i32 1
  %41 = load i16, i16* %40, align 2
  %42 = add i16 %41, 1
  store i16 %42, i16* %40, align 2
  br label %43

43:                                               ; preds = %17, %39
  %44 = phi i32 [ %18, %17 ], [ 0, %39 ]
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_builder_add_contour(%struct.CFF_Builder_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 5
  %3 = load %struct.FT_Outline_*, %struct.FT_Outline_** %2, align 8
  %4 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 12
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 0
  br label %39

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 3
  %11 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %11, i64 0, i32 5, i32 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = sext i16 %13 to i32
  %15 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %11, i64 0, i32 6, i32 0, i32 0
  %16 = load i16, i16* %15, align 8
  %17 = sext i16 %16 to i32
  %18 = add nsw i32 %14, 1
  %19 = add nsw i32 %18, %17
  %20 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %11, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp ugt i32 %19, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %9
  %24 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %11, i32 0, i32 1) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %46

26:                                               ; preds = %9, %23
  %27 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 0
  %28 = load i16, i16* %27, align 8
  %29 = icmp sgt i16 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = sext i16 %28 to i64
  %32 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %33 = load i16, i16* %32, align 2
  %34 = add i16 %33, -1
  %35 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %36 = load i16*, i16** %35, align 8
  %37 = add nsw i64 %31, -1
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  store i16 %34, i16* %38, align 2
  br label %39

39:                                               ; preds = %7, %30
  %40 = phi i16* [ %27, %30 ], [ %8, %7 ]
  %41 = load i16, i16* %40, align 8
  br label %42

42:                                               ; preds = %39, %26
  %43 = phi i16 [ %28, %26 ], [ %41, %39 ]
  %44 = phi i16* [ %27, %26 ], [ %40, %39 ]
  %45 = add i16 %43, 1
  store i16 %45, i16* %44, align 8
  br label %46

46:                                               ; preds = %42, %23
  %47 = phi i32 [ %24, %23 ], [ 0, %42 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_builder_start_point(%struct.CFF_Builder_* nocapture, i64, i64) #0 {
  %4 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 11
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %89

7:                                                ; preds = %3
  store i8 1, i8* %4, align 8
  %8 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 5
  %9 = load %struct.FT_Outline_*, %struct.FT_Outline_** %8, align 8
  %10 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 12
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 0
  br label %45

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 3
  %17 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load i16, i16* %18, align 8
  %20 = sext i16 %19 to i32
  %21 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %17, i64 0, i32 6, i32 0, i32 0
  %22 = load i16, i16* %21, align 8
  %23 = sext i16 %22 to i32
  %24 = add nsw i32 %20, 1
  %25 = add nsw i32 %24, %23
  %26 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %17, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %25, %27
  br i1 %28, label %29, label %32

29:                                               ; preds = %15
  %30 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %17, i32 0, i32 1) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %89

32:                                               ; preds = %29, %15
  %33 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 0
  %34 = load i16, i16* %33, align 8
  %35 = icmp sgt i16 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %32
  %37 = sext i16 %34 to i64
  %38 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 1
  %39 = load i16, i16* %38, align 2
  %40 = add i16 %39, -1
  %41 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 4
  %42 = load i16*, i16** %41, align 8
  %43 = add nsw i64 %37, -1
  %44 = getelementptr inbounds i16, i16* %42, i64 %43
  store i16 %40, i16* %44, align 2
  br label %45

45:                                               ; preds = %13, %36
  %46 = phi i16* [ %33, %36 ], [ %14, %13 ]
  %47 = load i16, i16* %46, align 8
  br label %48

48:                                               ; preds = %45, %32
  %49 = phi i16 [ %34, %32 ], [ %47, %45 ]
  %50 = phi i16* [ %33, %32 ], [ %46, %45 ]
  %51 = add i16 %49, 1
  store i16 %51, i16* %50, align 8
  %52 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 3
  %53 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %52, align 8
  %54 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %53, i64 0, i32 5, i32 0, i32 1
  %55 = load i16, i16* %54, align 2
  %56 = sext i16 %55 to i32
  %57 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %53, i64 0, i32 6, i32 0, i32 1
  %58 = load i16, i16* %57, align 2
  %59 = sext i16 %58 to i32
  %60 = add nsw i32 %56, 1
  %61 = add nsw i32 %60, %59
  %62 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %53, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp ugt i32 %61, %63
  br i1 %64, label %65, label %68

65:                                               ; preds = %48
  %66 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %53, i32 1, i32 0) #11
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %89

68:                                               ; preds = %65, %48
  %69 = load %struct.FT_Outline_*, %struct.FT_Outline_** %8, align 8
  %70 = load i8, i8* %10, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %85, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %69, i64 0, i32 2
  %74 = load %struct.FT_Vector_*, %struct.FT_Vector_** %73, align 8
  %75 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %69, i64 0, i32 1
  %76 = load i16, i16* %75, align 2
  %77 = sext i16 %76 to i64
  %78 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %69, i64 0, i32 3
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 %77
  %81 = ashr i64 %1, 10
  %82 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %74, i64 %77, i32 0
  store i64 %81, i64* %82, align 8
  %83 = ashr i64 %2, 10
  %84 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %74, i64 %77, i32 1
  store i64 %83, i64* %84, align 8
  store i8 1, i8* %80, align 1
  br label %85

85:                                               ; preds = %72, %68
  %86 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %69, i64 0, i32 1
  %87 = load i16, i16* %86, align 2
  %88 = add i16 %87, 1
  store i16 %88, i16* %86, align 2
  br label %89

89:                                               ; preds = %85, %65, %29, %3
  %90 = phi i32 [ 0, %3 ], [ %30, %29 ], [ %66, %65 ], [ 0, %85 ]
  ret i32 %90
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @cff_builder_close_contour(%struct.CFF_Builder_* nocapture readonly) #2 {
  %2 = getelementptr inbounds %struct.CFF_Builder_, %struct.CFF_Builder_* %0, i64 0, i32 5
  %3 = load %struct.FT_Outline_*, %struct.FT_Outline_** %2, align 8
  %4 = icmp eq %struct.FT_Outline_* %3, null
  br i1 %4, label %80, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 0
  %7 = load i16, i16* %6, align 8
  %8 = icmp slt i16 %7, 2
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = sext i16 %7 to i64
  %11 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %12 = load i16*, i16** %11, align 8
  %13 = add nsw i64 %10, -2
  %14 = getelementptr inbounds i16, i16* %12, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = sext i16 %15 to i32
  %17 = add nsw i32 %16, 1
  br label %23

18:                                               ; preds = %5
  %19 = icmp eq i16 %7, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %22 = load i16, i16* %21, align 2
  br label %31

23:                                               ; preds = %9, %18
  %24 = phi i32 [ %17, %9 ], [ 0, %18 ]
  %25 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = icmp eq i32 %24, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = add i16 %7, -1
  store i16 %30, i16* %6, align 8
  br label %80

31:                                               ; preds = %20, %23
  %32 = phi i16 [ %22, %20 ], [ %26, %23 ]
  %33 = phi i32 [ 0, %20 ], [ %24, %23 ]
  %34 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %35 = icmp sgt i16 %32, 1
  br i1 %35, label %36, label %63

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 2
  %38 = load %struct.FT_Vector_*, %struct.FT_Vector_** %37, align 8
  %39 = sext i32 %33 to i64
  %40 = sext i16 %32 to i64
  %41 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %38, i64 %40
  %42 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %41, i64 -1
  %43 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 3
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %40
  %46 = getelementptr inbounds i8, i8* %45, i64 -1
  %47 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %38, i64 %39, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %42, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  br i1 %51, label %52, label %63

52:                                               ; preds = %36
  %53 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %38, i64 %39, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %42, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %54, %56
  br i1 %57, label %58, label %63

58:                                               ; preds = %52
  %59 = load i8, i8* %46, align 1
  %60 = icmp eq i8 %59, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = add nsw i16 %32, -1
  store i16 %62, i16* %34, align 2
  br label %63

63:                                               ; preds = %36, %52, %61, %58, %31
  %64 = phi i16 [ %32, %36 ], [ %32, %52 ], [ %62, %61 ], [ %32, %58 ], [ %32, %31 ]
  %65 = sext i16 %7 to i64
  %66 = icmp sgt i16 %7, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %63
  %68 = sext i16 %64 to i32
  %69 = add nsw i32 %68, -1
  %70 = icmp eq i32 %33, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %67
  %72 = add nsw i16 %7, -1
  store i16 %72, i16* %6, align 8
  %73 = add i16 %64, -1
  store i16 %73, i16* %34, align 2
  br label %80

74:                                               ; preds = %67
  %75 = trunc i32 %69 to i16
  %76 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %77 = load i16*, i16** %76, align 8
  %78 = add nsw i64 %65, -1
  %79 = getelementptr inbounds i16, i16* %77, i64 %78
  store i16 %75, i16* %79, align 2
  br label %80

80:                                               ; preds = %63, %74, %71, %1, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @cff_decoder_init(%struct.CFF_Decoder_* nocapture, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_* readonly, %struct.CFF_GlyphSlotRec_*, i8 zeroext, i32, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*) #0 {
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 44, i32 0
  %10 = bitcast i8** %9 to %struct.CFF_FontRec_**
  %11 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %10, align 8
  %12 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 12
  %13 = bitcast %struct.CFF_Decoder_* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 1520, i1 false)
  store i8 1, i8* %12, align 1
  %14 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 1
  store %struct.TT_FaceRec_* %1, %struct.TT_FaceRec_** %14, align 8
  %15 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 2
  store %struct.CFF_GlyphSlotRec_* %3, %struct.CFF_GlyphSlotRec_** %15, align 8
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 25
  %17 = bitcast %struct.FT_MemoryRec_** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %struct.CFF_Decoder_* %0 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %struct.CFF_GlyphSlotRec_* %3, null
  br i1 %20, label %52, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %struct.CFF_GlyphSlotRec_, %struct.CFF_GlyphSlotRec_* %3, i64 0, i32 0, i32 21
  %23 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %23, i64 0, i32 0
  %25 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %24, align 8
  %26 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 3
  store %struct.FT_GlyphLoaderRec_* %25, %struct.FT_GlyphLoaderRec_** %26, align 8
  %27 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %25, i64 0, i32 5, i32 0
  %28 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 4
  store %struct.FT_Outline_* %27, %struct.FT_Outline_** %28, align 8
  %29 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %25, i64 0, i32 6, i32 0
  %30 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 5
  store %struct.FT_Outline_* %29, %struct.FT_Outline_** %30, align 8
  tail call void @FT_GlyphLoader_Rewind(%struct.FT_GlyphLoaderRec_* %25) #11
  %31 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 16
  %32 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 15
  %33 = icmp ne i8 %4, 0
  %34 = icmp ne %struct.CFF_SizeRec_* %2, null
  %35 = and i1 %34, %33
  %36 = bitcast i8** %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #11
  br i1 %35, label %37, label %52

37:                                               ; preds = %21
  %38 = getelementptr inbounds %struct.CFF_SizeRec_, %struct.CFF_SizeRec_* %2, i64 0, i32 0, i32 3
  %39 = bitcast %struct.FT_Size_InternalRec_** %38 to %struct.CFF_InternalRec_***
  %40 = load %struct.CFF_InternalRec_**, %struct.CFF_InternalRec_*** %39, align 8
  %41 = load %struct.CFF_InternalRec_*, %struct.CFF_InternalRec_** %40, align 8
  %42 = icmp eq %struct.CFF_InternalRec_* %41, null
  br i1 %42, label %52, label %43

43:                                               ; preds = %37
  %44 = bitcast %struct.CFF_InternalRec_* %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast i8** %31 to i64*
  store i64 %45, i64* %46, align 8
  %47 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %22, align 8
  %48 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %47, i64 0, i32 5
  %49 = bitcast i8** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast i8** %32 to i64*
  store i64 %50, i64* %51, align 8
  br label %52

52:                                               ; preds = %8, %21, %37, %43
  %53 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 6
  %54 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 17
  %55 = bitcast %struct.CFF_Builder_FuncsRec_* %54 to i8*
  %56 = bitcast i64* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 48, i1 false) #11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 bitcast ({ void (%struct.CFF_Builder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8)*, void (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i32)*, void (%struct.CFF_Builder_*, i64, i64, i8)*, i32 (%struct.CFF_Builder_*, i64, i64)*, i32 (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i64, i64)*, void (%struct.CFF_Builder_*)* }* @cff_builder_funcs to i8*), i64 64, i1 false) #11
  %57 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 1
  store %struct.CFF_FontRec_* %11, %struct.CFF_FontRec_** %57, align 8
  %58 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %11, i64 0, i32 13, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 16
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %11, i64 0, i32 21
  %62 = bitcast i8*** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 20
  %65 = bitcast i8*** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %11, i64 0, i32 26, i32 0, i32 11
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %74, label %69

69:                                               ; preds = %52
  %70 = icmp ult i32 %59, 1240
  br i1 %70, label %74, label %71

71:                                               ; preds = %69
  %72 = icmp ult i32 %59, 33900
  %73 = select i1 %72, i32 1131, i32 32768
  br label %74

74:                                               ; preds = %52, %69, %71
  %75 = phi i32 [ 0, %52 ], [ 107, %69 ], [ %73, %71 ]
  %76 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 18
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 23
  store i32 %5, i32* %77, align 4
  %78 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 26
  store i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)* %6, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)** %78, align 8
  %79 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 27
  store void (%struct.TT_FaceRec_*, i8**, i64)* %7, void (%struct.TT_FaceRec_*, i8**, i64)** %79, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cff_decoder_prepare(%struct.CFF_Decoder_* nocapture, %struct.CFF_SizeRec_* readonly, i32) #0 {
  %4 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 1
  %5 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %4, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %5, i64 0, i32 44, i32 0
  %7 = bitcast i8** %6 to %struct.CFF_FontRec_**
  %8 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %7, align 8
  %9 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 26
  %10 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 27
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %43, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 32
  %15 = bitcast i8** %14 to %struct.FT_Service_CFFLoadRec_**
  %16 = load %struct.FT_Service_CFFLoadRec_*, %struct.FT_Service_CFFLoadRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Service_CFFLoadRec_, %struct.FT_Service_CFFLoadRec_* %16, i64 0, i32 2
  %18 = load i8 (%struct.CFF_FDSelectRec_*, i32)*, i8 (%struct.CFF_FDSelectRec_*, i32)** %17, align 8
  %19 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 29
  %20 = tail call zeroext i8 %18(%struct.CFF_FDSelectRec_* %19, i32 %2) #11
  %21 = zext i8 %20 to i32
  %22 = load i32, i32* %10, align 8
  %23 = icmp ugt i32 %22, %21
  br i1 %23, label %24, label %73

24:                                               ; preds = %13
  %25 = zext i8 %20 to i64
  %26 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %8, i64 0, i32 28, i64 %25
  %27 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %26, align 8
  %28 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 15
  %29 = load i8*, i8** %28, align 8
  %30 = icmp ne i8* %29, null
  %31 = icmp ne %struct.CFF_SizeRec_* %1, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.CFF_SizeRec_, %struct.CFF_SizeRec_* %1, i64 0, i32 0, i32 3
  %35 = bitcast %struct.FT_Size_InternalRec_** %34 to %struct.CFF_InternalRec_***
  %36 = load %struct.CFF_InternalRec_**, %struct.CFF_InternalRec_*** %35, align 8
  %37 = load %struct.CFF_InternalRec_*, %struct.CFF_InternalRec_** %36, align 8
  %38 = getelementptr inbounds %struct.CFF_InternalRec_, %struct.CFF_InternalRec_* %37, i64 0, i32 1, i64 %25
  %39 = bitcast %struct.PSH_GlobalsRec_** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 0, i32 16
  %42 = bitcast i8** %41 to i64*
  store i64 %40, i64* %42, align 8
  br label %43

43:                                               ; preds = %24, %33, %3
  %44 = phi %struct.CFF_SubFontRec_* [ %9, %3 ], [ %27, %33 ], [ %27, %24 ]
  %45 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %44, i64 0, i32 9, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 15
  store i32 %46, i32* %47, align 8
  %48 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %44, i64 0, i32 10
  %49 = bitcast i8*** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 19
  %52 = bitcast i8*** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 1
  %54 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %53, align 8
  %55 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %54, i64 0, i32 26, i32 0, i32 11
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %63, label %58

58:                                               ; preds = %43
  %59 = icmp ult i32 %46, 1240
  br i1 %59, label %63, label %60

60:                                               ; preds = %58
  %61 = icmp ult i32 %46, 33900
  %62 = select i1 %61, i32 1131, i32 32768
  br label %63

63:                                               ; preds = %43, %58, %60
  %64 = phi i32 [ 0, %43 ], [ 107, %58 ], [ %62, %60 ]
  %65 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 17
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %44, i64 0, i32 1, i32 24
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 9
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %44, i64 0, i32 1, i32 25
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 10
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %struct.CFF_Decoder_, %struct.CFF_Decoder_* %0, i64 0, i32 25
  store %struct.CFF_SubFontRec_* %44, %struct.CFF_SubFontRec_** %72, align 8
  br label %73

73:                                               ; preds = %13, %63
  %74 = phi i32 [ 0, %63 ], [ 3, %13 ]
  ret i32 %74
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @t1_cmap_standard_init(%struct.T1_CMapStdRec_* nocapture, i8* nocapture readnone) #2 {
  %3 = bitcast %struct.T1_CMapStdRec_* %0 to %struct.T1_FaceRec_**
  %4 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 2
  %6 = bitcast i8** %5 to %struct.FT_Service_PsCMapsRec_**
  %7 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %6, align 8
  %8 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 1, i32 13
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 3
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 1, i32 14
  %12 = bitcast i8*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 4
  %15 = bitcast i8*** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %7, i64 0, i32 5
  %17 = bitcast i8* (i32)** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 2
  %20 = bitcast i8* (i32)** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %7, i64 0, i32 6
  %22 = bitcast i16** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 1
  %25 = bitcast i16** %24 to i64*
  store i64 %23, i64* %25, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @t1_cmap_std_done(%struct.T1_CMapStdRec_* nocapture) #3 {
  %2 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 4
  store i8** null, i8*** %2, align 8
  %3 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 1
  %4 = bitcast i16** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_cmap_std_char_index(%struct.T1_CMapStdRec_* nocapture readonly, i32) #0 {
  %3 = icmp ult i32 %1, 256
  br i1 %3, label %4, label %38

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 1
  %6 = load i16*, i16** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds i16, i16* %6, i64 %7
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 2
  %12 = load i8* (i32)*, i8* (i32)** %11, align 8
  %13 = tail call i8* %12(i32 %10) #11
  %14 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %38, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 4
  %19 = load i8**, i8*** %18, align 8
  %20 = zext i32 %15 to i64
  br label %21

21:                                               ; preds = %17, %33
  %22 = phi i64 [ 0, %17 ], [ %34, %33 ]
  %23 = getelementptr inbounds i8*, i8** %19, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = load i8, i8* %24, align 1
  %28 = load i8, i8* %13, align 1
  %29 = icmp eq i8 %27, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = tail call i32 @strcmp(i8* nonnull %24, i8* %13) #12
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %26, %30, %21
  %34 = add nuw nsw i64 %22, 1
  %35 = icmp ult i64 %34, %20
  br i1 %35, label %21, label %38

36:                                               ; preds = %30
  %37 = trunc i64 %22 to i32
  br label %38

38:                                               ; preds = %33, %36, %4, %2
  %39 = phi i32 [ 0, %2 ], [ 0, %4 ], [ %37, %36 ], [ 0, %33 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_cmap_std_char_next(%struct.T1_CMapStdRec_* nocapture readonly, i32* nocapture) #0 {
  %3 = load i32, i32* %1, align 4
  %4 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 1
  %5 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 2
  %6 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 3
  %7 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 4
  br label %8

8:                                                ; preds = %42, %2
  %9 = phi i32 [ %3, %2 ], [ %10, %42 ]
  %10 = add i32 %9, 1
  %11 = icmp ult i32 %10, 256
  br i1 %11, label %12, label %45

12:                                               ; preds = %8
  %13 = load i16*, i16** %4, align 8
  %14 = zext i32 %10 to i64
  %15 = getelementptr inbounds i16, i16* %13, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = load i8* (i32)*, i8* (i32)** %5, align 8
  %19 = tail call i8* %18(i32 %17) #11
  %20 = load i32, i32* %6, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %42, label %22

22:                                               ; preds = %12
  %23 = load i8**, i8*** %7, align 8
  %24 = zext i32 %20 to i64
  br label %25

25:                                               ; preds = %37, %22
  %26 = phi i64 [ 0, %22 ], [ %38, %37 ]
  %27 = getelementptr inbounds i8*, i8** %23, i64 %26
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %25
  %31 = load i8, i8* %28, align 1
  %32 = load i8, i8* %19, align 1
  %33 = icmp eq i8 %31, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = tail call i32 @strcmp(i8* nonnull %28, i8* %19) #12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34, %30, %25
  %38 = add nuw nsw i64 %26, 1
  %39 = icmp eq i64 %38, %24
  br i1 %39, label %42, label %25

40:                                               ; preds = %34
  %41 = trunc i64 %26 to i32
  br label %42

42:                                               ; preds = %37, %12, %40
  %43 = phi i32 [ 0, %12 ], [ %41, %40 ], [ 0, %37 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %8, label %45

45:                                               ; preds = %8, %42
  %46 = phi i32 [ %43, %42 ], [ 0, %8 ]
  %47 = phi i32 [ %10, %42 ], [ 0, %8 ]
  store i32 %47, i32* %1, align 4
  ret i32 %46
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @t1_cmap_expert_init(%struct.T1_CMapStdRec_* nocapture, i8* nocapture readnone) #2 {
  %3 = bitcast %struct.T1_CMapStdRec_* %0 to %struct.T1_FaceRec_**
  %4 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 2
  %6 = bitcast i8** %5 to %struct.FT_Service_PsCMapsRec_**
  %7 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %6, align 8
  %8 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 1, i32 13
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 3
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 1, i32 14
  %12 = bitcast i8*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 4
  %15 = bitcast i8*** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %7, i64 0, i32 5
  %17 = bitcast i8* (i32)** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 2
  %20 = bitcast i8* (i32)** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %7, i64 0, i32 7
  %22 = bitcast i16** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.T1_CMapStdRec_, %struct.T1_CMapStdRec_* %0, i64 0, i32 1
  %25 = bitcast i16** %24 to i64*
  store i64 %23, i64* %25, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @t1_cmap_custom_init(%struct.T1_CMapCustomRec_* nocapture, i8* nocapture readnone) #2 {
  %3 = bitcast %struct.T1_CMapCustomRec_* %0 to %struct.T1_FaceRec_**
  %4 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 1, i32 5, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.T1_CMapCustomRec_, %struct.T1_CMapCustomRec_* %0, i64 0, i32 1
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 1, i32 5, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = sub i32 %9, %6
  %11 = getelementptr inbounds %struct.T1_CMapCustomRec_, %struct.T1_CMapCustomRec_* %0, i64 0, i32 2
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 1, i32 5, i32 3
  %13 = bitcast i16** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.T1_CMapCustomRec_, %struct.T1_CMapCustomRec_* %0, i64 0, i32 3
  %16 = bitcast i16** %15 to i64*
  store i64 %14, i64* %16, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @t1_cmap_custom_done(%struct.T1_CMapCustomRec_* nocapture) #3 {
  %2 = getelementptr inbounds %struct.T1_CMapCustomRec_, %struct.T1_CMapCustomRec_* %0, i64 0, i32 1
  %3 = bitcast i32* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @t1_cmap_custom_char_index(%struct.T1_CMapCustomRec_* nocapture readonly, i32) #4 {
  %3 = getelementptr inbounds %struct.T1_CMapCustomRec_, %struct.T1_CMapCustomRec_* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.T1_CMapCustomRec_, %struct.T1_CMapCustomRec_* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %4
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.T1_CMapCustomRec_, %struct.T1_CMapCustomRec_* %0, i64 0, i32 3
  %13 = load i16*, i16** %12, align 8
  %14 = zext i32 %1 to i64
  %15 = getelementptr inbounds i16, i16* %13, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  br label %18

18:                                               ; preds = %2, %11, %6
  %19 = phi i32 [ %17, %11 ], [ 0, %6 ], [ 0, %2 ]
  ret i32 %19
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @t1_cmap_custom_char_next(%struct.T1_CMapCustomRec_* nocapture readonly, i32* nocapture) #2 {
  %3 = load i32, i32* %1, align 4
  %4 = add i32 %3, 1
  %5 = getelementptr inbounds %struct.T1_CMapCustomRec_, %struct.T1_CMapCustomRec_* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %4, %6
  %8 = select i1 %7, i32 %6, i32 %4
  %9 = getelementptr inbounds %struct.T1_CMapCustomRec_, %struct.T1_CMapCustomRec_* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, %6
  %12 = icmp ult i32 %8, %11
  br i1 %12, label %13, label %29

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.T1_CMapCustomRec_, %struct.T1_CMapCustomRec_* %0, i64 0, i32 3
  %15 = load i16*, i16** %14, align 8
  %16 = zext i32 %8 to i64
  %17 = zext i32 %11 to i64
  br label %18

18:                                               ; preds = %13, %23
  %19 = phi i64 [ %16, %13 ], [ %24, %23 ]
  %20 = getelementptr inbounds i16, i16* %15, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp ult i64 %24, %17
  br i1 %25, label %18, label %29

26:                                               ; preds = %18
  %27 = trunc i64 %19 to i32
  %28 = zext i16 %21 to i32
  br label %29

29:                                               ; preds = %23, %26, %2
  %30 = phi i32 [ %28, %26 ], [ 0, %2 ], [ 0, %23 ]
  %31 = phi i32 [ %27, %26 ], [ 0, %2 ], [ 0, %23 ]
  store i32 %31, i32* %1, align 4
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_cmap_unicode_init(%struct.PS_UnicodesRec_*, i8* nocapture readnone) #0 {
  %3 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 3, i32 4
  %6 = bitcast i64* %5 to %struct.FT_Service_PsCMapsRec_**
  %7 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %7, i64 0, i32 1
  %9 = load i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)** %8, align 8
  %10 = icmp eq i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 25
  %13 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 2, i32 17
  %15 = bitcast i16* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = bitcast %struct.FT_FaceRec_* %4 to i8*
  %18 = tail call i32 %9(%struct.FT_MemoryRec_* %13, %struct.PS_UnicodesRec_* %0, i32 %16, i8* (i8*, i32)* bitcast (i8* (%struct.T1_FaceRec_*, i32)* @psaux_get_glyph_name to i8* (i8*, i32)*), void (i8*, i8*)* null, i8* %17) #11
  br label %19

19:                                               ; preds = %2, %11
  %20 = phi i32 [ %18, %11 ], [ 7, %2 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal void @t1_cmap_unicode_done(%struct.PS_UnicodesRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 0, i32 25
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 2
  %7 = bitcast %struct.PS_UniMap_** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %8) #11
  store %struct.PS_UniMap_* null, %struct.PS_UniMap_** %6, align 8
  %9 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 1
  store i32 0, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_cmap_unicode_char_index(%struct.PS_UnicodesRec_*, i32) #0 {
  %3 = bitcast %struct.PS_UnicodesRec_* %0 to %struct.T1_FaceRec_**
  %4 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 2
  %6 = bitcast i8** %5 to %struct.FT_Service_PsCMapsRec_**
  %7 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %7, i64 0, i32 2
  %9 = load i32 (%struct.PS_UnicodesRec_*, i32)*, i32 (%struct.PS_UnicodesRec_*, i32)** %8, align 8
  %10 = tail call i32 %9(%struct.PS_UnicodesRec_* %0, i32 %1) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_cmap_unicode_char_next(%struct.PS_UnicodesRec_*, i32*) #0 {
  %3 = bitcast %struct.PS_UnicodesRec_* %0 to %struct.T1_FaceRec_**
  %4 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %4, i64 0, i32 2
  %6 = bitcast i8** %5 to %struct.FT_Service_PsCMapsRec_**
  %7 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %7, i64 0, i32 3
  %9 = load i32 (%struct.PS_UnicodesRec_*, i32*)*, i32 (%struct.PS_UnicodesRec_*, i32*)** %8, align 8
  %10 = tail call i32 %9(%struct.PS_UnicodesRec_* %0, i32* %1) #11
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare hidden i8* @ft_mem_alloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @afm_parser_read_vals(%struct.AFM_ParserRec_* nocapture readonly, %struct.AFM_ValueRec_* nocapture, i32) unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 1
  %8 = load %struct.AFM_StreamRec_*, %struct.AFM_StreamRec_** %7, align 8
  %9 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %184

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %8, i64 0, i32 3
  %13 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %8, i64 0, i32 0
  %14 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %8, i64 0, i32 2
  %15 = bitcast %struct.AFM_StreamRec_* %8 to i64*
  %16 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 3
  %17 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 4
  %18 = bitcast i8** %4 to i8*
  %19 = bitcast i8** %5 to i64*
  %20 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %0, i64 0, i32 0
  %21 = bitcast i32* %6 to i8*
  %22 = zext i32 %2 to i64
  br label %23

23:                                               ; preds = %178, %11
  %24 = phi i64 [ 0, %11 ], [ %179, %178 ]
  %25 = phi i32 [ 0, %11 ], [ %180, %178 ]
  %26 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %1, i64 %24, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %46

29:                                               ; preds = %23
  call fastcc void @afm_stream_skip_spaces(%struct.AFM_StreamRec_* %8) #11
  %30 = load i32, i32* %12, align 8
  %31 = icmp sgt i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = trunc i64 %24 to i32
  store i8* null, i8** %5, align 8
  br label %184

34:                                               ; preds = %29
  %35 = load i8*, i8** %13, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 -1
  %37 = load i8*, i8** %14, align 8
  br label %38

38:                                               ; preds = %41, %34
  %39 = phi i8* [ %42, %41 ], [ %35, %34 ]
  %40 = icmp ult i8* %39, %37
  br i1 %40, label %41, label %45

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  store i8* %42, i8** %13, align 8
  %43 = load i8, i8* %39, align 1
  switch i8 %43, label %38 [
    i8 13, label %44
    i8 10, label %44
    i8 26, label %45
  ]

44:                                               ; preds = %41, %41
  store i32 2, i32* %12, align 8
  br label %48

45:                                               ; preds = %41, %38
  store i32 3, i32* %12, align 8
  br label %48

46:                                               ; preds = %23
  %47 = call fastcc i8* @afm_stream_read_one(%struct.AFM_StreamRec_* %8)
  br label %48

48:                                               ; preds = %45, %44, %46
  %49 = phi i8* [ %47, %46 ], [ %36, %45 ], [ %36, %44 ]
  store i8* %49, i8** %5, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %182, label %51

51:                                               ; preds = %48
  %52 = load i64, i64* %15, align 8
  %53 = ptrtoint i8* %49 to i64
  %54 = sub i64 %52, %53
  %55 = add nsw i64 %54, -1
  %56 = load i32, i32* %26, align 8
  switch i32 %56, label %178 [
    i32 0, label %57
    i32 1, label %57
    i32 2, label %67
    i32 3, label %72
    i32 4, label %157
    i32 5, label %167
  ]

57:                                               ; preds = %51, %51
  %58 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #11
  store i32 -1431655766, i32* %6, align 4
  %59 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %58, i64 %54, i32* nonnull %6) #11
  %60 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %1, i64 %24, i32 1, i32 0
  store i8* %59, i8** %60, align 8
  %61 = load i32, i32* %6, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* nonnull align 1 %49, i64 %55, i1 false)
  %64 = load i8*, i8** %60, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 %55
  store i8 0, i8* %65, align 1
  br label %66

66:                                               ; preds = %57, %63
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #11
  br label %178

67:                                               ; preds = %51
  %68 = getelementptr inbounds i8, i8* %49, i64 %55
  %69 = call fastcc i64 @PS_Conv_ToFixed(i8** nonnull %5, i8* %68, i64 0)
  %70 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %1, i64 %24, i32 1
  %71 = bitcast %union.anon.0* %70 to i64*
  store i64 %69, i64* %71, align 8
  br label %178

72:                                               ; preds = %51
  %73 = getelementptr inbounds i8, i8* %49, i64 %55
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  store i8* %49, i8** %4, align 8
  %74 = icmp slt i64 %54, 2
  br i1 %74, label %152, label %75

75:                                               ; preds = %72
  %76 = load i8, i8* %49, align 1
  switch i8 %76, label %84 [
    i8 45, label %77
    i8 43, label %77
  ]

77:                                               ; preds = %75, %75
  %78 = getelementptr inbounds i8, i8* %49, i64 1
  %79 = icmp eq i64 %55, 1
  br i1 %79, label %152, label %80

80:                                               ; preds = %77
  %81 = icmp eq i8 %76, 45
  %82 = zext i1 %81 to i8
  %83 = load i8, i8* %78, align 1
  switch i8 %83, label %84 [
    i8 45, label %152
    i8 43, label %152
  ]

84:                                               ; preds = %80, %75
  %85 = phi i8 [ %76, %75 ], [ %83, %80 ]
  %86 = phi i8* [ %49, %75 ], [ %78, %80 ]
  %87 = phi i8 [ 0, %75 ], [ %82, %80 ]
  %88 = icmp ult i8* %86, %73
  br i1 %88, label %90, label %89

89:                                               ; preds = %84
  store i8* %86, i8** %4, align 8
  br label %127

90:                                               ; preds = %84, %120
  %91 = phi i8 [ %121, %120 ], [ %85, %84 ]
  %92 = phi i8 [ %117, %120 ], [ 0, %84 ]
  %93 = phi i64 [ %116, %120 ], [ 0, %84 ]
  %94 = phi i8* [ %118, %120 ], [ %86, %84 ]
  switch i8 %91, label %95 [
    i8 32, label %122
    i8 13, label %122
    i8 10, label %122
    i8 9, label %122
    i8 12, label %122
    i8 0, label %122
  ]

95:                                               ; preds = %90
  %96 = icmp slt i8 %91, 0
  br i1 %96, label %122, label %97

97:                                               ; preds = %95
  %98 = and i8 %91, 127
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [128 x i8], [128 x i8]* @ft_char_table, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %122, label %103

103:                                              ; preds = %97
  %104 = sext i8 %101 to i64
  %105 = icmp slt i8 %101, 10
  br i1 %105, label %106, label %122

106:                                              ; preds = %103
  %107 = icmp sgt i64 %93, 214748364
  br i1 %107, label %115, label %108

108:                                              ; preds = %106
  %109 = icmp eq i64 %93, 214748364
  %110 = icmp sgt i8 %101, 7
  %111 = and i1 %109, %110
  br i1 %111, label %115, label %112

112:                                              ; preds = %108
  %113 = mul nsw i64 %93, 10
  %114 = add nsw i64 %113, %104
  br label %115

115:                                              ; preds = %112, %108, %106
  %116 = phi i64 [ %114, %112 ], [ %93, %106 ], [ 214748364, %108 ]
  %117 = phi i8 [ %92, %112 ], [ 1, %106 ], [ 1, %108 ]
  %118 = getelementptr inbounds i8, i8* %94, i64 1
  %119 = icmp eq i8* %118, %73
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  %121 = load i8, i8* %118, align 1
  br label %90

122:                                              ; preds = %115, %103, %97, %95, %90, %90, %90, %90, %90, %90
  %123 = phi i8* [ %73, %115 ], [ %94, %90 ], [ %94, %90 ], [ %94, %90 ], [ %94, %90 ], [ %94, %90 ], [ %94, %90 ], [ %94, %95 ], [ %94, %103 ], [ %94, %97 ]
  %124 = phi i64 [ %116, %115 ], [ %93, %90 ], [ %93, %90 ], [ %93, %90 ], [ %93, %90 ], [ %93, %90 ], [ %93, %90 ], [ %93, %95 ], [ %93, %103 ], [ %93, %97 ]
  %125 = phi i8 [ %117, %115 ], [ %92, %90 ], [ %92, %90 ], [ %92, %90 ], [ %92, %90 ], [ %92, %90 ], [ %92, %90 ], [ %92, %95 ], [ %92, %103 ], [ %92, %97 ]
  store i8* %123, i8** %4, align 8
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %122, %89
  %128 = phi i8* [ %86, %89 ], [ %123, %122 ]
  %129 = phi i64 [ 0, %89 ], [ %124, %122 ]
  br label %130

130:                                              ; preds = %122, %127
  %131 = phi i8* [ %128, %127 ], [ %123, %122 ]
  %132 = phi i64 [ %129, %127 ], [ 2147483647, %122 ]
  %133 = icmp eq i8 %87, 0
  %134 = sub nsw i64 0, %132
  %135 = select i1 %133, i64 %132, i64 %134
  %136 = ptrtoint i8* %131 to i64
  %137 = icmp eq i8* %131, %49
  br i1 %137, label %152, label %138

138:                                              ; preds = %130
  %139 = icmp ult i8* %131, %73
  br i1 %139, label %140, label %149

140:                                              ; preds = %138
  %141 = load i8, i8* %131, align 1
  %142 = icmp eq i8 %141, 35
  br i1 %142, label %143, label %149

143:                                              ; preds = %140
  %144 = getelementptr inbounds i8, i8* %131, i64 1
  store i8* %144, i8** %4, align 8
  %145 = call fastcc i64 @PS_Conv_Strtol(i8** nonnull %4, i8* %73, i64 %135) #11
  %146 = load i8*, i8** %4, align 8
  %147 = icmp eq i8* %146, %144
  %148 = ptrtoint i8* %146 to i64
  br i1 %147, label %152, label %149

149:                                              ; preds = %143, %140, %138
  %150 = phi i64 [ %148, %143 ], [ %136, %140 ], [ %136, %138 ]
  %151 = phi i64 [ %145, %143 ], [ %135, %140 ], [ %135, %138 ]
  store i64 %150, i64* %19, align 8
  br label %152

152:                                              ; preds = %80, %80, %77, %72, %130, %143, %149
  %153 = phi i64 [ %151, %149 ], [ 0, %130 ], [ 0, %143 ], [ 0, %72 ], [ 0, %77 ], [ 0, %80 ], [ 0, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %154 = trunc i64 %153 to i32
  %155 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %1, i64 %24, i32 1
  %156 = bitcast %union.anon.0* %155 to i32*
  store i32 %154, i32* %156, align 8
  br label %178

157:                                              ; preds = %51
  %158 = icmp eq i64 %55, 4
  br i1 %158, label %159, label %162

159:                                              ; preds = %157
  %160 = call i32 @strncmp(i8* nonnull %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0), i64 4) #12
  %161 = icmp eq i32 %160, 0
  br label %162

162:                                              ; preds = %159, %157
  %163 = phi i1 [ false, %157 ], [ %161, %159 ]
  %164 = zext i1 %163 to i8
  %165 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %1, i64 %24, i32 1
  %166 = bitcast %union.anon.0* %165 to i8*
  store i8 %164, i8* %166, align 8
  br label %178

167:                                              ; preds = %51
  %168 = load i32 (i8*, i64, i8*)*, i32 (i8*, i64, i8*)** %16, align 8
  %169 = icmp eq i32 (i8*, i64, i8*)* %168, null
  br i1 %169, label %175, label %170

170:                                              ; preds = %167
  %171 = load i8*, i8** %17, align 8
  %172 = call i32 %168(i8* nonnull %49, i64 %55, i8* %171) #11
  %173 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %1, i64 %24, i32 1
  %174 = bitcast %union.anon.0* %173 to i32*
  store i32 %172, i32* %174, align 8
  br label %178

175:                                              ; preds = %167
  %176 = getelementptr inbounds %struct.AFM_ValueRec_, %struct.AFM_ValueRec_* %1, i64 %24, i32 1
  %177 = bitcast %union.anon.0* %176 to i32*
  store i32 0, i32* %177, align 8
  br label %178

178:                                              ; preds = %170, %175, %51, %162, %152, %67, %66
  %179 = add nuw nsw i64 %24, 1
  %180 = add nuw nsw i32 %25, 1
  %181 = icmp eq i64 %179, %22
  br i1 %181, label %184, label %23

182:                                              ; preds = %48
  %183 = trunc i64 %24 to i32
  br label %184

184:                                              ; preds = %178, %182, %3, %32
  %185 = phi i32 [ %33, %32 ], [ 0, %3 ], [ %183, %182 ], [ %180, %178 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret i32 %185
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i8* @afm_stream_read_one(%struct.AFM_StreamRec_* nocapture) unnamed_addr #2 {
  tail call fastcc void @afm_stream_skip_spaces(%struct.AFM_StreamRec_* %0)
  %2 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 -1
  %9 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %0, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  br label %11

11:                                               ; preds = %14, %5
  %12 = phi i8* [ %15, %14 ], [ %7, %5 ]
  %13 = icmp ult i8* %12, %10
  br i1 %13, label %14, label %19

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 1
  store i8* %15, i8** %6, align 8
  %16 = load i8, i8* %12, align 1
  switch i8 %16, label %11 [
    i8 32, label %20
    i8 9, label %20
    i8 13, label %17
    i8 10, label %17
    i8 59, label %18
    i8 26, label %19
  ]

17:                                               ; preds = %14, %14
  store i32 2, i32* %2, align 8
  br label %20

18:                                               ; preds = %14
  store i32 1, i32* %2, align 8
  br label %20

19:                                               ; preds = %14, %11
  store i32 3, i32* %2, align 8
  br label %20

20:                                               ; preds = %14, %14, %17, %18, %19, %1
  %21 = phi i8* [ null, %1 ], [ %8, %19 ], [ %8, %18 ], [ %8, %17 ], [ %8, %14 ], [ %8, %14 ]
  ret i8* %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @afm_stream_skip_spaces(%struct.AFM_StreamRec_* nocapture) unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.AFM_StreamRec_, %struct.AFM_StreamRec_* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ult i8* %7, %9
  br i1 %10, label %11, label %19

11:                                               ; preds = %5, %15
  %12 = phi i8* [ %13, %15 ], [ %7, %5 ]
  %13 = getelementptr inbounds i8, i8* %12, i64 1
  store i8* %13, i8** %6, align 8
  %14 = load i8, i8* %12, align 1
  switch i8 %14, label %20 [
    i8 32, label %15
    i8 9, label %15
    i8 13, label %17
    i8 10, label %17
    i8 59, label %18
    i8 26, label %19
  ]

15:                                               ; preds = %11, %11
  %16 = icmp ult i8* %13, %9
  br i1 %16, label %11, label %19

17:                                               ; preds = %11, %11
  store i32 2, i32* %2, align 8
  br label %20

18:                                               ; preds = %11
  store i32 1, i32* %2, align 8
  br label %20

19:                                               ; preds = %15, %11, %5
  store i32 3, i32* %2, align 8
  br label %20

20:                                               ; preds = %11, %17, %19, %18, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare hidden i8* @ft_mem_qalloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @PS_Conv_ToFixed(i8** nocapture, i8*, i64) unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = load i8*, i8** %0, align 8
  %7 = icmp ult i8* %6, %1
  br i1 %7, label %8, label %333

8:                                                ; preds = %3
  %9 = load i8, i8* %6, align 1
  switch i8 %9, label %17 [
    i8 45, label %10
    i8 43, label %10
  ]

10:                                               ; preds = %8, %8
  %11 = getelementptr inbounds i8, i8* %6, i64 1
  %12 = icmp eq i8* %11, %1
  br i1 %12, label %333, label %13

13:                                               ; preds = %10
  %14 = icmp eq i8 %9, 45
  %15 = zext i1 %14 to i8
  %16 = load i8, i8* %11, align 1
  switch i8 %16, label %17 [
    i8 45, label %333
    i8 43, label %333
  ]

17:                                               ; preds = %13, %8
  %18 = phi i8 [ %9, %8 ], [ %16, %13 ]
  %19 = phi i8* [ %6, %8 ], [ %11, %13 ]
  %20 = phi i8 [ 0, %8 ], [ %15, %13 ]
  %21 = ptrtoint i8* %19 to i64
  %22 = icmp eq i8 %18, 46
  br i1 %22, label %111, label %23

23:                                               ; preds = %17
  %24 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  store i8* %19, i8** %5, align 8
  %25 = icmp ult i8* %19, %1
  br i1 %25, label %26, label %101

26:                                               ; preds = %23
  %27 = icmp eq i8 %18, 45
  br i1 %27, label %28, label %33

28:                                               ; preds = %26
  %29 = getelementptr inbounds i8, i8* %19, i64 1
  %30 = icmp eq i8* %29, %1
  br i1 %30, label %101, label %31

31:                                               ; preds = %28
  %32 = load i8, i8* %29, align 1
  switch i8 %32, label %33 [
    i8 45, label %101
    i8 43, label %101
  ]

33:                                               ; preds = %26, %31
  %34 = phi i8 [ %18, %26 ], [ %32, %31 ]
  %35 = phi i8* [ %19, %26 ], [ %29, %31 ]
  %36 = phi i8 [ 0, %26 ], [ 1, %31 ]
  %37 = icmp ult i8* %35, %1
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  store i8* %35, i8** %5, align 8
  br label %76

39:                                               ; preds = %33, %69
  %40 = phi i8 [ %70, %69 ], [ %34, %33 ]
  %41 = phi i8 [ %66, %69 ], [ 0, %33 ]
  %42 = phi i64 [ %65, %69 ], [ 0, %33 ]
  %43 = phi i8* [ %67, %69 ], [ %35, %33 ]
  switch i8 %40, label %44 [
    i8 32, label %71
    i8 13, label %71
    i8 10, label %71
    i8 9, label %71
    i8 12, label %71
    i8 0, label %71
  ]

44:                                               ; preds = %39
  %45 = icmp slt i8 %40, 0
  br i1 %45, label %71, label %46

46:                                               ; preds = %44
  %47 = and i8 %40, 127
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds [128 x i8], [128 x i8]* @ft_char_table, i64 0, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %71, label %52

52:                                               ; preds = %46
  %53 = sext i8 %50 to i64
  %54 = icmp slt i8 %50, 10
  br i1 %54, label %55, label %71

55:                                               ; preds = %52
  %56 = icmp sgt i64 %42, 214748364
  br i1 %56, label %64, label %57

57:                                               ; preds = %55
  %58 = icmp eq i64 %42, 214748364
  %59 = icmp sgt i8 %50, 7
  %60 = and i1 %58, %59
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  %62 = mul nsw i64 %42, 10
  %63 = add nsw i64 %62, %53
  br label %64

64:                                               ; preds = %61, %57, %55
  %65 = phi i64 [ %63, %61 ], [ %42, %55 ], [ 214748364, %57 ]
  %66 = phi i8 [ %41, %61 ], [ 1, %55 ], [ 1, %57 ]
  %67 = getelementptr inbounds i8, i8* %43, i64 1
  %68 = icmp eq i8* %67, %1
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = load i8, i8* %67, align 1
  br label %39

71:                                               ; preds = %64, %52, %46, %44, %39, %39, %39, %39, %39, %39
  %72 = phi i8* [ %1, %64 ], [ %43, %39 ], [ %43, %39 ], [ %43, %39 ], [ %43, %39 ], [ %43, %39 ], [ %43, %39 ], [ %43, %44 ], [ %43, %52 ], [ %43, %46 ]
  %73 = phi i64 [ %65, %64 ], [ %42, %39 ], [ %42, %39 ], [ %42, %39 ], [ %42, %39 ], [ %42, %39 ], [ %42, %39 ], [ %42, %44 ], [ %42, %52 ], [ %42, %46 ]
  %74 = phi i8 [ %66, %64 ], [ %41, %39 ], [ %41, %39 ], [ %41, %39 ], [ %41, %39 ], [ %41, %39 ], [ %41, %39 ], [ %41, %44 ], [ %41, %52 ], [ %41, %46 ]
  store i8* %72, i8** %5, align 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71, %38
  %77 = phi i8* [ %35, %38 ], [ %72, %71 ]
  %78 = phi i64 [ 0, %38 ], [ %73, %71 ]
  br label %79

79:                                               ; preds = %71, %76
  %80 = phi i8* [ %77, %76 ], [ %72, %71 ]
  %81 = phi i64 [ %78, %76 ], [ 2147483647, %71 ]
  %82 = icmp eq i8 %36, 0
  %83 = sub nsw i64 0, %81
  %84 = select i1 %82, i64 %81, i64 %83
  %85 = ptrtoint i8* %80 to i64
  %86 = icmp eq i8* %80, %19
  br i1 %86, label %101, label %87

87:                                               ; preds = %79
  %88 = icmp ult i8* %80, %1
  br i1 %88, label %89, label %98

89:                                               ; preds = %87
  %90 = load i8, i8* %80, align 1
  %91 = icmp eq i8 %90, 35
  br i1 %91, label %92, label %98

92:                                               ; preds = %89
  %93 = getelementptr inbounds i8, i8* %80, i64 1
  store i8* %93, i8** %5, align 8
  %94 = call fastcc i64 @PS_Conv_Strtol(i8** nonnull %5, i8* %1, i64 %84) #11
  %95 = load i8*, i8** %5, align 8
  %96 = icmp eq i8* %95, %93
  %97 = ptrtoint i8* %95 to i64
  br i1 %96, label %101, label %98

98:                                               ; preds = %92, %89, %87
  %99 = phi i64 [ %97, %92 ], [ %85, %89 ], [ %85, %87 ]
  %100 = phi i64 [ %94, %92 ], [ %84, %89 ], [ %84, %87 ]
  br label %101

101:                                              ; preds = %31, %31, %28, %23, %79, %92, %98
  %102 = phi i64 [ %21, %79 ], [ %21, %92 ], [ %99, %98 ], [ %21, %23 ], [ %21, %28 ], [ %21, %31 ], [ %21, %31 ]
  %103 = phi i64 [ 0, %79 ], [ 0, %92 ], [ %100, %98 ], [ 0, %23 ], [ 0, %28 ], [ 0, %31 ], [ 0, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %104 = inttoptr i64 %102 to i8*
  %105 = icmp eq i8* %19, %104
  br i1 %105, label %333, label %106

106:                                              ; preds = %101
  %107 = icmp sgt i64 %103, 32767
  br i1 %107, label %111, label %108

108:                                              ; preds = %106
  %109 = shl i64 %103, 16
  %110 = and i64 %109, 4294901760
  br label %111

111:                                              ; preds = %17, %106, %108
  %112 = phi i8* [ %104, %106 ], [ %104, %108 ], [ %19, %17 ]
  %113 = phi i64 [ %102, %106 ], [ %102, %108 ], [ %21, %17 ]
  %114 = phi i64 [ %103, %106 ], [ %110, %108 ], [ 0, %17 ]
  %115 = phi i8 [ 1, %106 ], [ 0, %108 ], [ 0, %17 ]
  %116 = icmp ult i8* %112, %1
  br i1 %116, label %117, label %165

117:                                              ; preds = %111
  %118 = load i8, i8* %112, align 1
  %119 = icmp eq i8 %118, 46
  br i1 %119, label %120, label %165

120:                                              ; preds = %117
  %121 = getelementptr inbounds i8, i8* %112, i64 1
  %122 = ptrtoint i8* %121 to i64
  %123 = icmp ult i8* %121, %1
  br i1 %123, label %124, label %165

124:                                              ; preds = %120
  %125 = icmp eq i64 %114, 0
  br label %126

126:                                              ; preds = %156, %124
  %127 = phi i64 [ %122, %124 ], [ %161, %156 ]
  %128 = phi i8* [ %121, %124 ], [ %160, %156 ]
  %129 = phi i64 [ 1, %124 ], [ %159, %156 ]
  %130 = phi i64 [ 0, %124 ], [ %158, %156 ]
  %131 = phi i64 [ %2, %124 ], [ %157, %156 ]
  %132 = load i8, i8* %128, align 1
  switch i8 %132, label %133 [
    i8 32, label %165
    i8 13, label %165
    i8 10, label %165
    i8 9, label %165
    i8 12, label %165
    i8 0, label %165
  ]

133:                                              ; preds = %126
  %134 = icmp slt i8 %132, 0
  br i1 %134, label %165, label %135

135:                                              ; preds = %133
  %136 = and i8 %132, 127
  %137 = zext i8 %136 to i64
  %138 = getelementptr inbounds [128 x i8], [128 x i8]* @ft_char_table, i64 0, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = add nsw i64 %137, -48
  %141 = icmp ugt i64 %140, 9
  br i1 %141, label %165, label %142

142:                                              ; preds = %135
  %143 = icmp slt i64 %129, 214748364
  %144 = icmp slt i64 %130, 214748364
  %145 = and i1 %144, %143
  br i1 %145, label %146, label %156

146:                                              ; preds = %142
  %147 = mul nsw i64 %130, 10
  %148 = sext i8 %139 to i64
  %149 = add nsw i64 %147, %148
  %150 = icmp sgt i64 %131, 0
  %151 = and i1 %125, %150
  br i1 %151, label %152, label %154

152:                                              ; preds = %146
  %153 = add nsw i64 %131, -1
  br label %156

154:                                              ; preds = %146
  %155 = mul nsw i64 %129, 10
  br label %156

156:                                              ; preds = %152, %154, %142
  %157 = phi i64 [ %131, %142 ], [ %131, %154 ], [ %153, %152 ]
  %158 = phi i64 [ %130, %142 ], [ %149, %154 ], [ %149, %152 ]
  %159 = phi i64 [ %129, %142 ], [ %155, %154 ], [ %129, %152 ]
  %160 = getelementptr inbounds i8, i8* %128, i64 1
  %161 = ptrtoint i8* %160 to i64
  %162 = icmp eq i8* %160, %1
  br i1 %162, label %163, label %126

163:                                              ; preds = %156
  %164 = ptrtoint i8* %1 to i64
  br label %165

165:                                              ; preds = %135, %133, %126, %126, %126, %126, %126, %126, %120, %163, %117, %111
  %166 = phi i64 [ %113, %117 ], [ %113, %111 ], [ %164, %163 ], [ %122, %120 ], [ %127, %126 ], [ %127, %126 ], [ %127, %126 ], [ %127, %126 ], [ %127, %126 ], [ %127, %126 ], [ %127, %133 ], [ %127, %135 ]
  %167 = phi i64 [ %2, %117 ], [ %2, %111 ], [ %157, %163 ], [ %2, %120 ], [ %131, %126 ], [ %131, %126 ], [ %131, %126 ], [ %131, %126 ], [ %131, %126 ], [ %131, %126 ], [ %131, %133 ], [ %131, %135 ]
  %168 = phi i64 [ 0, %117 ], [ 0, %111 ], [ %158, %163 ], [ 0, %120 ], [ %130, %126 ], [ %130, %126 ], [ %130, %126 ], [ %130, %126 ], [ %130, %126 ], [ %130, %126 ], [ %130, %133 ], [ %130, %135 ]
  %169 = phi i64 [ 1, %117 ], [ 1, %111 ], [ %159, %163 ], [ 1, %120 ], [ %129, %126 ], [ %129, %126 ], [ %129, %126 ], [ %129, %126 ], [ %129, %126 ], [ %129, %126 ], [ %129, %133 ], [ %129, %135 ]
  %170 = inttoptr i64 %166 to i8*
  %171 = getelementptr inbounds i8, i8* %170, i64 1
  %172 = icmp ult i8* %171, %1
  br i1 %172, label %173, label %266

173:                                              ; preds = %165
  %174 = load i8, i8* %170, align 1
  switch i8 %174, label %266 [
    i8 101, label %175
    i8 69, label %175
  ]

175:                                              ; preds = %173, %173
  %176 = ptrtoint i8* %171 to i64
  %177 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #11
  store i8* %171, i8** %4, align 8
  %178 = load i8, i8* %171, align 1
  switch i8 %178, label %186 [
    i8 45, label %179
    i8 43, label %179
  ]

179:                                              ; preds = %175, %175
  %180 = getelementptr inbounds i8, i8* %170, i64 2
  %181 = icmp eq i8* %180, %1
  br i1 %181, label %254, label %182

182:                                              ; preds = %179
  %183 = icmp eq i8 %178, 45
  %184 = zext i1 %183 to i8
  %185 = load i8, i8* %180, align 1
  switch i8 %185, label %186 [
    i8 45, label %254
    i8 43, label %254
  ]

186:                                              ; preds = %182, %175
  %187 = phi i8 [ %178, %175 ], [ %185, %182 ]
  %188 = phi i8* [ %171, %175 ], [ %180, %182 ]
  %189 = phi i8 [ 0, %175 ], [ %184, %182 ]
  %190 = icmp ult i8* %188, %1
  br i1 %190, label %192, label %191

191:                                              ; preds = %186
  store i8* %188, i8** %4, align 8
  br label %229

192:                                              ; preds = %186, %222
  %193 = phi i8 [ %223, %222 ], [ %187, %186 ]
  %194 = phi i8 [ %219, %222 ], [ 0, %186 ]
  %195 = phi i64 [ %218, %222 ], [ 0, %186 ]
  %196 = phi i8* [ %220, %222 ], [ %188, %186 ]
  switch i8 %193, label %197 [
    i8 32, label %224
    i8 13, label %224
    i8 10, label %224
    i8 9, label %224
    i8 12, label %224
    i8 0, label %224
  ]

197:                                              ; preds = %192
  %198 = icmp slt i8 %193, 0
  br i1 %198, label %224, label %199

199:                                              ; preds = %197
  %200 = and i8 %193, 127
  %201 = zext i8 %200 to i64
  %202 = getelementptr inbounds [128 x i8], [128 x i8]* @ft_char_table, i64 0, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %224, label %205

205:                                              ; preds = %199
  %206 = sext i8 %203 to i64
  %207 = icmp slt i8 %203, 10
  br i1 %207, label %208, label %224

208:                                              ; preds = %205
  %209 = icmp sgt i64 %195, 214748364
  br i1 %209, label %217, label %210

210:                                              ; preds = %208
  %211 = icmp eq i64 %195, 214748364
  %212 = icmp sgt i8 %203, 7
  %213 = and i1 %211, %212
  br i1 %213, label %217, label %214

214:                                              ; preds = %210
  %215 = mul nsw i64 %195, 10
  %216 = add nsw i64 %215, %206
  br label %217

217:                                              ; preds = %214, %210, %208
  %218 = phi i64 [ %216, %214 ], [ %195, %208 ], [ 214748364, %210 ]
  %219 = phi i8 [ %194, %214 ], [ 1, %208 ], [ 1, %210 ]
  %220 = getelementptr inbounds i8, i8* %196, i64 1
  %221 = icmp eq i8* %220, %1
  br i1 %221, label %224, label %222

222:                                              ; preds = %217
  %223 = load i8, i8* %220, align 1
  br label %192

224:                                              ; preds = %217, %205, %199, %197, %192, %192, %192, %192, %192, %192
  %225 = phi i8* [ %1, %217 ], [ %196, %192 ], [ %196, %192 ], [ %196, %192 ], [ %196, %192 ], [ %196, %192 ], [ %196, %192 ], [ %196, %197 ], [ %196, %205 ], [ %196, %199 ]
  %226 = phi i64 [ %218, %217 ], [ %195, %192 ], [ %195, %192 ], [ %195, %192 ], [ %195, %192 ], [ %195, %192 ], [ %195, %192 ], [ %195, %197 ], [ %195, %205 ], [ %195, %199 ]
  %227 = phi i8 [ %219, %217 ], [ %194, %192 ], [ %194, %192 ], [ %194, %192 ], [ %194, %192 ], [ %194, %192 ], [ %194, %192 ], [ %194, %197 ], [ %194, %205 ], [ %194, %199 ]
  store i8* %225, i8** %4, align 8
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %224, %191
  %230 = phi i8* [ %188, %191 ], [ %225, %224 ]
  %231 = phi i64 [ 0, %191 ], [ %226, %224 ]
  br label %232

232:                                              ; preds = %224, %229
  %233 = phi i8* [ %230, %229 ], [ %225, %224 ]
  %234 = phi i64 [ %231, %229 ], [ 2147483647, %224 ]
  %235 = icmp eq i8 %189, 0
  %236 = sub nsw i64 0, %234
  %237 = select i1 %235, i64 %234, i64 %236
  %238 = ptrtoint i8* %233 to i64
  %239 = icmp eq i8* %233, %171
  br i1 %239, label %254, label %240

240:                                              ; preds = %232
  %241 = icmp ult i8* %233, %1
  br i1 %241, label %242, label %251

242:                                              ; preds = %240
  %243 = load i8, i8* %233, align 1
  %244 = icmp eq i8 %243, 35
  br i1 %244, label %245, label %251

245:                                              ; preds = %242
  %246 = getelementptr inbounds i8, i8* %233, i64 1
  store i8* %246, i8** %4, align 8
  %247 = call fastcc i64 @PS_Conv_Strtol(i8** nonnull %4, i8* %1, i64 %237) #11
  %248 = load i8*, i8** %4, align 8
  %249 = icmp eq i8* %248, %246
  %250 = ptrtoint i8* %248 to i64
  br i1 %249, label %254, label %251

251:                                              ; preds = %245, %242, %240
  %252 = phi i64 [ %250, %245 ], [ %238, %242 ], [ %238, %240 ]
  %253 = phi i64 [ %247, %245 ], [ %237, %242 ], [ %237, %240 ]
  br label %254

254:                                              ; preds = %182, %182, %179, %232, %245, %251
  %255 = phi i64 [ %176, %232 ], [ %176, %245 ], [ %252, %251 ], [ %176, %179 ], [ %176, %182 ], [ %176, %182 ]
  %256 = phi i64 [ 0, %232 ], [ 0, %245 ], [ %253, %251 ], [ 0, %179 ], [ 0, %182 ], [ 0, %182 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #11
  %257 = inttoptr i64 %255 to i8*
  %258 = icmp eq i8* %171, %257
  br i1 %258, label %333, label %259

259:                                              ; preds = %254
  %260 = icmp sgt i64 %256, 1000
  br i1 %260, label %266, label %261

261:                                              ; preds = %259
  %262 = icmp slt i64 %256, -1000
  %263 = select i1 %262, i64 0, i64 %256
  %264 = add nsw i64 %263, %167
  %265 = zext i1 %262 to i8
  br label %266

266:                                              ; preds = %261, %259, %173, %165
  %267 = phi i64 [ %166, %173 ], [ %166, %165 ], [ %255, %259 ], [ %255, %261 ]
  %268 = phi i64 [ %167, %173 ], [ %167, %165 ], [ %167, %259 ], [ %264, %261 ]
  %269 = phi i8 [ %115, %173 ], [ %115, %165 ], [ 1, %259 ], [ %115, %261 ]
  %270 = phi i8 [ 0, %173 ], [ 0, %165 ], [ 0, %259 ], [ %265, %261 ]
  %271 = bitcast i8** %0 to i64*
  store i64 %267, i64* %271, align 8
  %272 = or i64 %168, %114
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %333, label %274

274:                                              ; preds = %266
  %275 = icmp eq i8 %269, 0
  br i1 %275, label %276, label %328

276:                                              ; preds = %274
  %277 = icmp eq i8 %270, 0
  br i1 %277, label %278, label %333

278:                                              ; preds = %276
  %279 = icmp sgt i64 %268, 0
  br i1 %279, label %282, label %280

280:                                              ; preds = %278
  %281 = icmp slt i64 %268, 0
  br i1 %281, label %302, label %320

282:                                              ; preds = %278, %297
  %283 = phi i64 [ %299, %297 ], [ %169, %278 ]
  %284 = phi i64 [ %298, %297 ], [ %168, %278 ]
  %285 = phi i64 [ %289, %297 ], [ %114, %278 ]
  %286 = phi i64 [ %300, %297 ], [ %268, %278 ]
  %287 = icmp sgt i64 %285, 214748363
  br i1 %287, label %328, label %288

288:                                              ; preds = %282
  %289 = mul nsw i64 %285, 10
  %290 = icmp sgt i64 %284, 214748363
  br i1 %290, label %291, label %295

291:                                              ; preds = %288
  %292 = icmp eq i64 %283, 1
  br i1 %292, label %328, label %293

293:                                              ; preds = %291
  %294 = sdiv i64 %283, 10
  br label %297

295:                                              ; preds = %288
  %296 = mul nsw i64 %284, 10
  br label %297

297:                                              ; preds = %295, %293
  %298 = phi i64 [ %284, %293 ], [ %296, %295 ]
  %299 = phi i64 [ %294, %293 ], [ %283, %295 ]
  %300 = add nsw i64 %286, -1
  %301 = icmp sgt i64 %300, 0
  br i1 %301, label %282, label %320

302:                                              ; preds = %280, %314
  %303 = phi i64 [ %316, %314 ], [ %169, %280 ]
  %304 = phi i64 [ %309, %314 ], [ %168, %280 ]
  %305 = phi i64 [ %317, %314 ], [ %114, %280 ]
  %306 = phi i64 [ %318, %314 ], [ %268, %280 ]
  %307 = icmp slt i64 %303, 214748364
  %308 = sdiv i64 %304, 10
  %309 = select i1 %307, i64 %304, i64 %308
  %310 = add i64 %305, 9
  %311 = icmp ugt i64 %310, 18
  %312 = icmp ne i64 %309, 0
  %313 = or i1 %311, %312
  br i1 %313, label %314, label %333

314:                                              ; preds = %302
  %315 = mul nsw i64 %303, 10
  %316 = select i1 %307, i64 %315, i64 %303
  %317 = sdiv i64 %305, 10
  %318 = add i64 %306, 1
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %302

320:                                              ; preds = %314, %297, %280
  %321 = phi i64 [ %114, %280 ], [ %289, %297 ], [ %317, %314 ]
  %322 = phi i64 [ %168, %280 ], [ %298, %297 ], [ %309, %314 ]
  %323 = phi i64 [ %169, %280 ], [ %299, %297 ], [ %316, %314 ]
  %324 = icmp eq i64 %322, 0
  br i1 %324, label %328, label %325

325:                                              ; preds = %320
  %326 = tail call i64 @FT_DivFix(i64 %322, i64 %323) #11
  %327 = add nsw i64 %326, %321
  br label %328

328:                                              ; preds = %282, %291, %274, %320, %325
  %329 = phi i64 [ %327, %325 ], [ %321, %320 ], [ 2147483647, %274 ], [ 2147483647, %291 ], [ 2147483647, %282 ]
  %330 = icmp eq i8 %20, 0
  %331 = sub nsw i64 0, %329
  %332 = select i1 %330, i64 %329, i64 %331
  br label %333

333:                                              ; preds = %302, %254, %276, %10, %3, %266, %101, %13, %13, %328
  %334 = phi i64 [ %332, %328 ], [ 0, %13 ], [ 0, %13 ], [ 0, %101 ], [ 0, %266 ], [ 0, %3 ], [ 0, %10 ], [ 0, %276 ], [ 0, %254 ], [ 0, %302 ]
  ret i64 %334
}

declare i64 @FT_DivFix(i64, i64) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i64 @PS_Conv_Strtol(i8** nocapture, i8* readnone, i64) unnamed_addr #2 {
  %4 = load i8*, i8** %0, align 8
  %5 = icmp uge i8* %4, %1
  %6 = add i64 %2, -2
  %7 = icmp ugt i64 %6, 34
  %8 = or i1 %7, %5
  br i1 %8, label %76, label %9

9:                                                ; preds = %3
  %10 = load i8, i8* %4, align 1
  switch i8 %10, label %18 [
    i8 45, label %11
    i8 43, label %11
  ]

11:                                               ; preds = %9, %9
  %12 = getelementptr inbounds i8, i8* %4, i64 1
  %13 = icmp eq i8* %12, %1
  br i1 %13, label %76, label %14

14:                                               ; preds = %11
  %15 = icmp eq i8 %10, 45
  %16 = zext i1 %15 to i8
  %17 = load i8, i8* %12, align 1
  switch i8 %17, label %18 [
    i8 45, label %76
    i8 43, label %76
  ]

18:                                               ; preds = %14, %9
  %19 = phi i8 [ %10, %9 ], [ %17, %14 ]
  %20 = phi i8* [ %4, %9 ], [ %12, %14 ]
  %21 = phi i8 [ 0, %9 ], [ %16, %14 ]
  %22 = trunc i64 %2 to i32
  %23 = udiv i32 2147483647, %22
  %24 = urem i32 2147483647, %22
  %25 = zext i32 %23 to i64
  %26 = icmp ult i8* %20, %1
  br i1 %26, label %28, label %27

27:                                               ; preds = %18
  store i8* %20, i8** %0, align 8
  br label %69

28:                                               ; preds = %18
  %29 = shl i32 %24, 24
  %30 = ashr exact i32 %29, 24
  br label %31

31:                                               ; preds = %62, %28
  %32 = phi i8 [ %19, %28 ], [ %63, %62 ]
  %33 = phi i8 [ 0, %28 ], [ %59, %62 ]
  %34 = phi i64 [ 0, %28 ], [ %58, %62 ]
  %35 = phi i8* [ %20, %28 ], [ %60, %62 ]
  switch i8 %32, label %36 [
    i8 32, label %64
    i8 13, label %64
    i8 10, label %64
    i8 9, label %64
    i8 12, label %64
    i8 0, label %64
  ]

36:                                               ; preds = %31
  %37 = icmp slt i8 %32, 0
  br i1 %37, label %64, label %38

38:                                               ; preds = %36
  %39 = and i8 %32, 127
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds [128 x i8], [128 x i8]* @ft_char_table, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp slt i8 %42, 0
  br i1 %44, label %64, label %45

45:                                               ; preds = %38
  %46 = sext i8 %42 to i64
  %47 = icmp slt i64 %46, %2
  br i1 %47, label %48, label %64

48:                                               ; preds = %45
  %49 = icmp sgt i64 %34, %25
  br i1 %49, label %57, label %50

50:                                               ; preds = %48
  %51 = icmp eq i64 %34, %25
  %52 = icmp slt i32 %30, %43
  %53 = and i1 %51, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = mul nsw i64 %34, %2
  %56 = add nsw i64 %55, %46
  br label %57

57:                                               ; preds = %50, %48, %54
  %58 = phi i64 [ %56, %54 ], [ %34, %48 ], [ %25, %50 ]
  %59 = phi i8 [ %33, %54 ], [ 1, %48 ], [ 1, %50 ]
  %60 = getelementptr inbounds i8, i8* %35, i64 1
  %61 = icmp eq i8* %60, %1
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = load i8, i8* %60, align 1
  br label %31

64:                                               ; preds = %31, %31, %31, %31, %31, %31, %36, %45, %38, %57
  %65 = phi i8* [ %1, %57 ], [ %35, %31 ], [ %35, %31 ], [ %35, %31 ], [ %35, %31 ], [ %35, %31 ], [ %35, %31 ], [ %35, %36 ], [ %35, %45 ], [ %35, %38 ]
  %66 = phi i64 [ %58, %57 ], [ %34, %31 ], [ %34, %31 ], [ %34, %31 ], [ %34, %31 ], [ %34, %31 ], [ %34, %31 ], [ %34, %36 ], [ %34, %45 ], [ %34, %38 ]
  %67 = phi i8 [ %59, %57 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %31 ], [ %33, %36 ], [ %33, %45 ], [ %33, %38 ]
  store i8* %65, i8** %0, align 8
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %27, %64
  %70 = phi i64 [ 0, %27 ], [ %66, %64 ]
  br label %71

71:                                               ; preds = %64, %69
  %72 = phi i64 [ %70, %69 ], [ 2147483647, %64 ]
  %73 = icmp eq i8 %21, 0
  %74 = sub nsw i64 0, %72
  %75 = select i1 %73, i64 %72, i64 %74
  br label %76

76:                                               ; preds = %3, %11, %71, %14, %14
  %77 = phi i64 [ 0, %14 ], [ 0, %14 ], [ %75, %71 ], [ 0, %3 ], [ 0, %11 ]
  ret i64 %77
}

declare hidden i8* @ft_mem_realloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #6

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @afm_compare_kern_pairs(i8* nocapture readonly, i8* nocapture readonly) #4 {
  %3 = bitcast i8* %0 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = shl nuw nsw i64 %5, 16
  %7 = getelementptr inbounds i8, i8* %0, i64 4
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = bitcast i8* %1 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = shl nuw nsw i64 %14, 16
  %16 = getelementptr inbounds i8, i8* %1, i64 4
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = icmp ugt i64 %11, %20
  %22 = icmp ult i64 %11, %20
  %23 = sext i1 %22 to i32
  %24 = select i1 %21, i32 1, i32 %23
  ret i32 %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @t1_decrypt(i8*, i64, i16 zeroext) #2 {
  %4 = icmp eq i8* %0, null
  %5 = getelementptr inbounds i8, i8* %0, i64 %1
  %6 = select i1 %4, i8* null, i8* %5
  %7 = icmp ugt i8* %6, %0
  br i1 %7, label %8, label %35

8:                                                ; preds = %3
  %9 = ptrtoint i8* %6 to i64
  %10 = ptrtoint i8* %0 to i64
  %11 = sub i64 %9, %10
  %12 = and i64 %11, 4294967295
  %13 = icmp ult i64 %12, %1
  %14 = select i1 %13, i64 %12, i64 %1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %8
  %17 = zext i16 %2 to i32
  br label %18

18:                                               ; preds = %16, %18
  %19 = phi i64 [ %33, %18 ], [ 0, %16 ]
  %20 = phi i32 [ %29, %18 ], [ %17, %16 ]
  %21 = phi i32 [ %32, %18 ], [ 0, %16 ]
  %22 = getelementptr inbounds i8, i8* %0, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = lshr i32 %20, 8
  %26 = add nuw nsw i32 %20, %24
  %27 = mul i32 %26, 52845
  %28 = add i32 %27, 22719
  %29 = and i32 %28, 65535
  %30 = trunc i32 %25 to i8
  %31 = xor i8 %23, %30
  store i8 %31, i8* %22, align 1
  %32 = add i32 %21, 1
  %33 = zext i32 %32 to i64
  %34 = icmp ugt i64 %14, %33
  br i1 %34, label %18, label %35

35:                                               ; preds = %18, %8, %3
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @cff_random(i32) #1 {
  %2 = shl i32 %0, 13
  %3 = xor i32 %2, %0
  %4 = lshr i32 %3, 17
  %5 = xor i32 %4, %3
  %6 = shl i32 %5, 5
  %7 = xor i32 %6, %5
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal void @ps_decoder_init(%struct.PS_Decoder_*, i8*, i8 zeroext) #0 {
  %4 = icmp eq i8 %2, 0
  %5 = bitcast i8* %1 to i64*
  %6 = bitcast %struct.PS_Decoder_* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 1264, i1 false)
  %7 = load i64, i64* %5, align 8
  %8 = bitcast %struct.PS_Decoder_* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 8
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 1
  %13 = bitcast %struct.FT_FaceRec_** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 2
  %18 = bitcast %struct.CFF_GlyphSlotRec_** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %1, i64 24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 3
  %23 = bitcast %struct.FT_GlyphLoaderRec_** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %1, i64 32
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 4
  %28 = bitcast %struct.FT_Outline_** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %1, i64 40
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 5
  %33 = bitcast %struct.FT_Outline_** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 6
  %35 = insertelement <2 x i8*> undef, i8* %1, i32 0
  %36 = shufflevector <2 x i8*> %35, <2 x i8*> undef, <2 x i32> zeroinitializer
  %37 = getelementptr i8, <2 x i8*> %36, <2 x i64> <i64 48, i64 56>
  %38 = bitcast i64** %34 to <2 x i8*>*
  store <2 x i8*> %37, <2 x i8*>* %38, align 8
  %39 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 8
  %40 = getelementptr i8, <2 x i8*> %36, <2 x i64> <i64 64, i64 80>
  %41 = bitcast %struct.FT_Vector_** %39 to <2 x i8*>*
  store <2 x i8*> %40, <2 x i8*>* %41, align 8
  %42 = getelementptr inbounds i8, i8* %1, i64 96
  %43 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 10
  %44 = bitcast %struct.FT_BBox_** %43 to i8**
  store i8* %42, i8** %44, align 8
  br i1 %4, label %117, label %45

45:                                               ; preds = %3
  %46 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 11
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds i8, i8* %1, i64 132
  %48 = load i8, i8* %47, align 4
  %49 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 12
  store i8 %48, i8* %49, align 1
  %50 = getelementptr inbounds i8, i8* %1, i64 133
  %51 = load i8, i8* %50, align 1
  %52 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 13
  store i8 %51, i8* %52, align 2
  %53 = getelementptr inbounds i8, i8* %1, i64 134
  %54 = load i8, i8* %53, align 1
  %55 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 14
  store i8 %54, i8* %55, align 1
  %56 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 15
  store i8 %2, i8* %56, align 4
  %57 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 16
  %58 = bitcast %struct.PS_Builder_FuncsRec_* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 bitcast ({ void (%struct.PS_Builder_*, i8*, i8)*, void (%struct.PS_Builder_*)* }* @ps_builder_funcs to i8*), i64 16, i1 false) #11
  %59 = getelementptr inbounds i8, i8* %1, i64 5032
  %60 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 10
  %61 = bitcast %struct.FT_Generic_** %60 to i8**
  store i8* %59, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %1, i64 4736
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 26
  %66 = bitcast %struct.FT_Service_PsCMapsRec_** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %1, i64 4744
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 21
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %1, i64 4752
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 20
  %75 = bitcast i8*** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %1, i64 4968
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 22
  store i32 %78, i32* %79, align 4
  %80 = getelementptr inbounds i8, i8* %1, i64 4960
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 32
  %84 = bitcast %struct.PS_BlendRec_** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %1, i64 4764
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 14
  store i32 %87, i32* %88, align 8
  %89 = getelementptr inbounds i8, i8* %1, i64 4768
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 18
  %93 = bitcast i8*** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds i8, i8* %1, i64 4776
  %95 = bitcast i8* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 28
  %98 = bitcast i32** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = getelementptr inbounds i8, i8* %1, i64 4784
  %100 = bitcast i8* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 29
  %103 = bitcast %struct.FT_HashRec_** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %1, i64 5016
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 33
  %108 = bitcast i64** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %1, i64 5024
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 34
  store i32 %111, i32* %112, align 8
  %113 = getelementptr inbounds i8, i8* %1, i64 4760
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 27
  store i32 %115, i32* %116, align 8
  br label %193

117:                                              ; preds = %3
  %118 = getelementptr inbounds i8, i8* %1, i64 128
  %119 = load i8, i8* %118, align 8
  %120 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 11
  store i8 %119, i8* %120, align 8
  %121 = getelementptr inbounds i8, i8* %1, i64 129
  %122 = load i8, i8* %121, align 1
  %123 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 12
  store i8 %122, i8* %123, align 1
  %124 = getelementptr inbounds i8, i8* %1, i64 130
  %125 = load i8, i8* %124, align 2
  %126 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 13
  store i8 %125, i8* %126, align 2
  %127 = getelementptr inbounds i8, i8* %1, i64 131
  %128 = load i8, i8* %127, align 1
  %129 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 14
  store i8 %128, i8* %129, align 1
  %130 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 15
  store i8 0, i8* %130, align 4
  %131 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 0, i32 16
  %132 = bitcast %struct.PS_Builder_FuncsRec_* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 bitcast ({ void (%struct.PS_Builder_*, i8*, i8)*, void (%struct.PS_Builder_*)* }* @ps_builder_funcs to i8*), i64 16, i1 false) #11
  %133 = getelementptr inbounds i8, i8* %1, i64 216
  %134 = bitcast i8* %133 to %struct.CFF_FontRec_**
  %135 = bitcast i8* %133 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 8
  %138 = bitcast %struct.CFF_FontRec_** %137 to i64*
  store i64 %136, i64* %138, align 8
  %139 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %134, align 8
  %140 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %139, i64 0, i32 36
  %141 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 10
  store %struct.FT_Generic_* %140, %struct.FT_Generic_** %141, align 8
  %142 = getelementptr inbounds i8, i8* %1, i64 1496
  %143 = bitcast i8* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 9
  %146 = bitcast %struct.CFF_SubFontRec_** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = getelementptr inbounds i8, i8* %1, i64 1444
  %148 = bitcast i8* %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 15
  store i32 %149, i32* %150, align 4
  %151 = getelementptr inbounds i8, i8* %1, i64 1464
  %152 = bitcast i8* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 19
  %155 = bitcast i8*** %154 to i64*
  store i64 %153, i64* %155, align 8
  %156 = getelementptr inbounds i8, i8* %1, i64 1452
  %157 = bitcast i8* %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 17
  store i32 %158, i32* %159, align 4
  %160 = getelementptr inbounds i8, i8* %1, i64 1440
  %161 = bitcast i8* %160 to i32*
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 14
  store i32 %162, i32* %163, align 8
  %164 = getelementptr inbounds i8, i8* %1, i64 1456
  %165 = bitcast i8* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 18
  %168 = bitcast i8*** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = getelementptr inbounds i8, i8* %1, i64 1448
  %170 = bitcast i8* %169 to i32*
  %171 = load i32, i32* %170, align 8
  %172 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 16
  store i32 %171, i32* %172, align 8
  %173 = getelementptr inbounds i8, i8* %1, i64 1160
  %174 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 11
  %175 = bitcast i64** %174 to i8**
  store i8* %173, i8** %175, align 8
  %176 = getelementptr inbounds i8, i8* %1, i64 1177
  %177 = load i8, i8* %176, align 1
  %178 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 12
  store i8 %177, i8* %178, align 8
  %179 = getelementptr inbounds i8, i8* %1, i64 1484
  %180 = bitcast i8* %179 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 22
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds i8, i8* %1, i64 1504
  %184 = bitcast i8* %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 24
  %187 = bitcast i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = getelementptr inbounds i8, i8* %1, i64 1512
  %189 = bitcast i8* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %0, i64 0, i32 25
  %192 = bitcast void (%struct.TT_FaceRec_*, i8**, i64)** %191 to i64*
  store i64 %190, i64* %192, align 8
  br label %193

193:                                              ; preds = %117, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @t1_make_subfont(%struct.FT_FaceRec_*, %struct.PS_PrivateRec_* readonly, %struct.CFF_SubFontRec_*) #0 {
  %4 = bitcast %struct.CFF_SubFontRec_* %2 to i8*
  %5 = bitcast %struct.PS_PrivateRec_* %1 to i8*
  %6 = alloca %struct.FT_FaceRec_*, align 8
  %7 = alloca %struct.CFF_SubFontRec_*, align 8
  %8 = alloca i32, align 4
  store %struct.FT_FaceRec_* %0, %struct.FT_FaceRec_** %6, align 8
  store %struct.CFF_SubFontRec_* %2, %struct.CFF_SubFontRec_** %7, align 8
  %9 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 1224, i1 false)
  %11 = load i8, i8* %10, align 8
  store i8 %11, i8* %9, align 8
  %12 = icmp eq i8 %11, 0
  %13 = ptrtoint %struct.CFF_SubFontRec_* %2 to i64
  br i1 %12, label %131, label %14

14:                                               ; preds = %3
  %15 = zext i8 %11 to i64
  %16 = icmp ult i8 %11, 4
  br i1 %16, label %89, label %17

17:                                               ; preds = %14
  %18 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 4, i64 0
  %19 = bitcast i64* %18 to i8*
  %20 = shl nuw nsw i64 %15, 3
  %21 = add nuw nsw i64 %20, 336
  %22 = getelementptr i8, i8* %4, i64 %21
  %23 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 0
  %24 = bitcast i16* %23 to i8*
  %25 = shl nuw nsw i64 %15, 1
  %26 = add nuw nsw i64 %25, 12
  %27 = getelementptr i8, i8* %5, i64 %26
  %28 = icmp ugt i8* %27, %19
  %29 = icmp ugt i8* %22, %24
  %30 = and i1 %28, %29
  br i1 %30, label %89, label %31

31:                                               ; preds = %17
  %32 = and i64 %15, 252
  %33 = add nsw i64 %32, -4
  %34 = lshr exact i64 %33, 2
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 1
  %37 = icmp eq i64 %33, 0
  br i1 %37, label %71, label %38

38:                                               ; preds = %31
  %39 = sub nuw nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %68, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %69, %40 ]
  %43 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %41
  %44 = bitcast i16* %43 to <2 x i16>*
  %45 = load <2 x i16>, <2 x i16>* %44, align 2, !alias.scope !2
  %46 = getelementptr inbounds i16, i16* %43, i64 2
  %47 = bitcast i16* %46 to <2 x i16>*
  %48 = load <2 x i16>, <2 x i16>* %47, align 2, !alias.scope !2
  %49 = sext <2 x i16> %45 to <2 x i64>
  %50 = sext <2 x i16> %48 to <2 x i64>
  %51 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 4, i64 %41
  %52 = bitcast i64* %51 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %52, align 8, !alias.scope !5, !noalias !2
  %53 = getelementptr inbounds i64, i64* %51, i64 2
  %54 = bitcast i64* %53 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %54, align 8, !alias.scope !5, !noalias !2
  %55 = or i64 %41, 4
  %56 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %55
  %57 = bitcast i16* %56 to <2 x i16>*
  %58 = load <2 x i16>, <2 x i16>* %57, align 2, !alias.scope !2
  %59 = getelementptr inbounds i16, i16* %56, i64 2
  %60 = bitcast i16* %59 to <2 x i16>*
  %61 = load <2 x i16>, <2 x i16>* %60, align 2, !alias.scope !2
  %62 = sext <2 x i16> %58 to <2 x i64>
  %63 = sext <2 x i16> %61 to <2 x i64>
  %64 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 4, i64 %55
  %65 = bitcast i64* %64 to <2 x i64>*
  store <2 x i64> %62, <2 x i64>* %65, align 8, !alias.scope !5, !noalias !2
  %66 = getelementptr inbounds i64, i64* %64, i64 2
  %67 = bitcast i64* %66 to <2 x i64>*
  store <2 x i64> %63, <2 x i64>* %67, align 8, !alias.scope !5, !noalias !2
  %68 = add i64 %41, 8
  %69 = add i64 %42, -2
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %40, !llvm.loop !7

71:                                               ; preds = %40, %31
  %72 = phi i64 [ 0, %31 ], [ %68, %40 ]
  %73 = icmp eq i64 %36, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %72
  %76 = bitcast i16* %75 to <2 x i16>*
  %77 = load <2 x i16>, <2 x i16>* %76, align 2, !alias.scope !2
  %78 = getelementptr inbounds i16, i16* %75, i64 2
  %79 = bitcast i16* %78 to <2 x i16>*
  %80 = load <2 x i16>, <2 x i16>* %79, align 2, !alias.scope !2
  %81 = sext <2 x i16> %77 to <2 x i64>
  %82 = sext <2 x i16> %80 to <2 x i64>
  %83 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 4, i64 %72
  %84 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %84, align 8, !alias.scope !5, !noalias !2
  %85 = getelementptr inbounds i64, i64* %83, i64 2
  %86 = bitcast i64* %85 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !5, !noalias !2
  br label %87

87:                                               ; preds = %71, %74
  %88 = icmp eq i64 %32, %15
  br i1 %88, label %131, label %89

89:                                               ; preds = %87, %17, %14
  %90 = phi i64 [ 0, %17 ], [ 0, %14 ], [ %32, %87 ]
  %91 = xor i64 %90, -1
  %92 = add nsw i64 %91, %15
  %93 = and i64 %15, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %89, %95
  %96 = phi i64 [ %102, %95 ], [ %90, %89 ]
  %97 = phi i64 [ %103, %95 ], [ %93, %89 ]
  %98 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %96
  %99 = load i16, i16* %98, align 2
  %100 = sext i16 %99 to i64
  %101 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 4, i64 %96
  store i64 %100, i64* %101, align 8
  %102 = add nuw nsw i64 %96, 1
  %103 = add i64 %97, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %95, !llvm.loop !9

105:                                              ; preds = %95, %89
  %106 = phi i64 [ %90, %89 ], [ %102, %95 ]
  %107 = icmp ult i64 %92, 3
  br i1 %107, label %131, label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %129, %108 ], [ %106, %105 ]
  %110 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %109
  %111 = load i16, i16* %110, align 2
  %112 = sext i16 %111 to i64
  %113 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 4, i64 %109
  store i64 %112, i64* %113, align 8
  %114 = add nuw nsw i64 %109, 1
  %115 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %114
  %116 = load i16, i16* %115, align 2
  %117 = sext i16 %116 to i64
  %118 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 4, i64 %114
  store i64 %117, i64* %118, align 8
  %119 = add nuw nsw i64 %109, 2
  %120 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %119
  %121 = load i16, i16* %120, align 2
  %122 = sext i16 %121 to i64
  %123 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 4, i64 %119
  store i64 %122, i64* %123, align 8
  %124 = add nuw nsw i64 %109, 3
  %125 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 6, i64 %124
  %126 = load i16, i16* %125, align 2
  %127 = sext i16 %126 to i64
  %128 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 4, i64 %124
  store i64 %127, i64* %128, align 8
  %129 = add nuw nsw i64 %109, 4
  %130 = icmp eq i64 %129, %15
  br i1 %130, label %131, label %108, !llvm.loop !11

131:                                              ; preds = %105, %108, %87, %3
  %132 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 3
  %133 = load i8, i8* %132, align 1
  %134 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 1
  store i8 %133, i8* %134, align 1
  %135 = icmp eq i8 %133, 0
  br i1 %135, label %253, label %136

136:                                              ; preds = %131
  %137 = zext i8 %133 to i64
  %138 = icmp ult i8 %133, 4
  br i1 %138, label %211, label %139

139:                                              ; preds = %136
  %140 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 5, i64 0
  %141 = bitcast i64* %140 to i8*
  %142 = shl nuw nsw i64 %137, 3
  %143 = add nuw nsw i64 %142, 448
  %144 = getelementptr i8, i8* %4, i64 %143
  %145 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 0
  %146 = bitcast i16* %145 to i8*
  %147 = shl nuw nsw i64 %137, 1
  %148 = add nuw nsw i64 %147, 40
  %149 = getelementptr i8, i8* %5, i64 %148
  %150 = icmp ugt i8* %149, %141
  %151 = icmp ugt i8* %144, %146
  %152 = and i1 %150, %151
  br i1 %152, label %211, label %153

153:                                              ; preds = %139
  %154 = and i64 %137, 252
  %155 = add nsw i64 %154, -4
  %156 = lshr exact i64 %155, 2
  %157 = add nuw nsw i64 %156, 1
  %158 = and i64 %157, 1
  %159 = icmp eq i64 %155, 0
  br i1 %159, label %193, label %160

160:                                              ; preds = %153
  %161 = sub nuw nsw i64 %157, %158
  br label %162

162:                                              ; preds = %162, %160
  %163 = phi i64 [ 0, %160 ], [ %190, %162 ]
  %164 = phi i64 [ %161, %160 ], [ %191, %162 ]
  %165 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %163
  %166 = bitcast i16* %165 to <2 x i16>*
  %167 = load <2 x i16>, <2 x i16>* %166, align 2, !alias.scope !12
  %168 = getelementptr inbounds i16, i16* %165, i64 2
  %169 = bitcast i16* %168 to <2 x i16>*
  %170 = load <2 x i16>, <2 x i16>* %169, align 2, !alias.scope !12
  %171 = sext <2 x i16> %167 to <2 x i64>
  %172 = sext <2 x i16> %170 to <2 x i64>
  %173 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 5, i64 %163
  %174 = bitcast i64* %173 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %174, align 8, !alias.scope !15, !noalias !12
  %175 = getelementptr inbounds i64, i64* %173, i64 2
  %176 = bitcast i64* %175 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %176, align 8, !alias.scope !15, !noalias !12
  %177 = or i64 %163, 4
  %178 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %177
  %179 = bitcast i16* %178 to <2 x i16>*
  %180 = load <2 x i16>, <2 x i16>* %179, align 2, !alias.scope !12
  %181 = getelementptr inbounds i16, i16* %178, i64 2
  %182 = bitcast i16* %181 to <2 x i16>*
  %183 = load <2 x i16>, <2 x i16>* %182, align 2, !alias.scope !12
  %184 = sext <2 x i16> %180 to <2 x i64>
  %185 = sext <2 x i16> %183 to <2 x i64>
  %186 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 5, i64 %177
  %187 = bitcast i64* %186 to <2 x i64>*
  store <2 x i64> %184, <2 x i64>* %187, align 8, !alias.scope !15, !noalias !12
  %188 = getelementptr inbounds i64, i64* %186, i64 2
  %189 = bitcast i64* %188 to <2 x i64>*
  store <2 x i64> %185, <2 x i64>* %189, align 8, !alias.scope !15, !noalias !12
  %190 = add i64 %163, 8
  %191 = add i64 %164, -2
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %162, !llvm.loop !17

193:                                              ; preds = %162, %153
  %194 = phi i64 [ 0, %153 ], [ %190, %162 ]
  %195 = icmp eq i64 %158, 0
  br i1 %195, label %209, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %194
  %198 = bitcast i16* %197 to <2 x i16>*
  %199 = load <2 x i16>, <2 x i16>* %198, align 2, !alias.scope !12
  %200 = getelementptr inbounds i16, i16* %197, i64 2
  %201 = bitcast i16* %200 to <2 x i16>*
  %202 = load <2 x i16>, <2 x i16>* %201, align 2, !alias.scope !12
  %203 = sext <2 x i16> %199 to <2 x i64>
  %204 = sext <2 x i16> %202 to <2 x i64>
  %205 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 5, i64 %194
  %206 = bitcast i64* %205 to <2 x i64>*
  store <2 x i64> %203, <2 x i64>* %206, align 8, !alias.scope !15, !noalias !12
  %207 = getelementptr inbounds i64, i64* %205, i64 2
  %208 = bitcast i64* %207 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %208, align 8, !alias.scope !15, !noalias !12
  br label %209

209:                                              ; preds = %193, %196
  %210 = icmp eq i64 %154, %137
  br i1 %210, label %253, label %211

211:                                              ; preds = %209, %139, %136
  %212 = phi i64 [ 0, %139 ], [ 0, %136 ], [ %154, %209 ]
  %213 = xor i64 %212, -1
  %214 = add nsw i64 %213, %137
  %215 = and i64 %137, 3
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %211, %217
  %218 = phi i64 [ %224, %217 ], [ %212, %211 ]
  %219 = phi i64 [ %225, %217 ], [ %215, %211 ]
  %220 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %218
  %221 = load i16, i16* %220, align 2
  %222 = sext i16 %221 to i64
  %223 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 5, i64 %218
  store i64 %222, i64* %223, align 8
  %224 = add nuw nsw i64 %218, 1
  %225 = add i64 %219, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %217, !llvm.loop !18

227:                                              ; preds = %217, %211
  %228 = phi i64 [ %212, %211 ], [ %224, %217 ]
  %229 = icmp ult i64 %214, 3
  br i1 %229, label %253, label %230

230:                                              ; preds = %227, %230
  %231 = phi i64 [ %251, %230 ], [ %228, %227 ]
  %232 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %231
  %233 = load i16, i16* %232, align 2
  %234 = sext i16 %233 to i64
  %235 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 5, i64 %231
  store i64 %234, i64* %235, align 8
  %236 = add nuw nsw i64 %231, 1
  %237 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %236
  %238 = load i16, i16* %237, align 2
  %239 = sext i16 %238 to i64
  %240 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 5, i64 %236
  store i64 %239, i64* %240, align 8
  %241 = add nuw nsw i64 %231, 2
  %242 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %241
  %243 = load i16, i16* %242, align 2
  %244 = sext i16 %243 to i64
  %245 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 5, i64 %241
  store i64 %244, i64* %245, align 8
  %246 = add nuw nsw i64 %231, 3
  %247 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 7, i64 %246
  %248 = load i16, i16* %247, align 2
  %249 = sext i16 %248 to i64
  %250 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 5, i64 %246
  store i64 %249, i64* %250, align 8
  %251 = add nuw nsw i64 %231, 4
  %252 = icmp eq i64 %251, %137
  br i1 %252, label %253, label %230, !llvm.loop !19

253:                                              ; preds = %227, %230, %209, %131
  %254 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 4
  %255 = load i8, i8* %254, align 2
  %256 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 2
  store i8 %255, i8* %256, align 2
  %257 = icmp eq i8 %255, 0
  br i1 %257, label %375, label %258

258:                                              ; preds = %253
  %259 = zext i8 %255 to i64
  %260 = icmp ult i8 %255, 4
  br i1 %260, label %333, label %261

261:                                              ; preds = %258
  %262 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 6, i64 0
  %263 = bitcast i64* %262 to i8*
  %264 = shl nuw nsw i64 %259, 3
  %265 = add nuw nsw i64 %264, 528
  %266 = getelementptr i8, i8* %4, i64 %265
  %267 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 0
  %268 = bitcast i16* %267 to i8*
  %269 = shl nuw nsw i64 %259, 1
  %270 = add nuw nsw i64 %269, 60
  %271 = getelementptr i8, i8* %5, i64 %270
  %272 = icmp ugt i8* %271, %263
  %273 = icmp ugt i8* %266, %268
  %274 = and i1 %272, %273
  br i1 %274, label %333, label %275

275:                                              ; preds = %261
  %276 = and i64 %259, 252
  %277 = add nsw i64 %276, -4
  %278 = lshr exact i64 %277, 2
  %279 = add nuw nsw i64 %278, 1
  %280 = and i64 %279, 1
  %281 = icmp eq i64 %277, 0
  br i1 %281, label %315, label %282

282:                                              ; preds = %275
  %283 = sub nuw nsw i64 %279, %280
  br label %284

284:                                              ; preds = %284, %282
  %285 = phi i64 [ 0, %282 ], [ %312, %284 ]
  %286 = phi i64 [ %283, %282 ], [ %313, %284 ]
  %287 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %285
  %288 = bitcast i16* %287 to <2 x i16>*
  %289 = load <2 x i16>, <2 x i16>* %288, align 2, !alias.scope !20
  %290 = getelementptr inbounds i16, i16* %287, i64 2
  %291 = bitcast i16* %290 to <2 x i16>*
  %292 = load <2 x i16>, <2 x i16>* %291, align 2, !alias.scope !20
  %293 = sext <2 x i16> %289 to <2 x i64>
  %294 = sext <2 x i16> %292 to <2 x i64>
  %295 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 6, i64 %285
  %296 = bitcast i64* %295 to <2 x i64>*
  store <2 x i64> %293, <2 x i64>* %296, align 8, !alias.scope !23, !noalias !20
  %297 = getelementptr inbounds i64, i64* %295, i64 2
  %298 = bitcast i64* %297 to <2 x i64>*
  store <2 x i64> %294, <2 x i64>* %298, align 8, !alias.scope !23, !noalias !20
  %299 = or i64 %285, 4
  %300 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %299
  %301 = bitcast i16* %300 to <2 x i16>*
  %302 = load <2 x i16>, <2 x i16>* %301, align 2, !alias.scope !20
  %303 = getelementptr inbounds i16, i16* %300, i64 2
  %304 = bitcast i16* %303 to <2 x i16>*
  %305 = load <2 x i16>, <2 x i16>* %304, align 2, !alias.scope !20
  %306 = sext <2 x i16> %302 to <2 x i64>
  %307 = sext <2 x i16> %305 to <2 x i64>
  %308 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 6, i64 %299
  %309 = bitcast i64* %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !23, !noalias !20
  %310 = getelementptr inbounds i64, i64* %308, i64 2
  %311 = bitcast i64* %310 to <2 x i64>*
  store <2 x i64> %307, <2 x i64>* %311, align 8, !alias.scope !23, !noalias !20
  %312 = add i64 %285, 8
  %313 = add i64 %286, -2
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %284, !llvm.loop !25

315:                                              ; preds = %284, %275
  %316 = phi i64 [ 0, %275 ], [ %312, %284 ]
  %317 = icmp eq i64 %280, 0
  br i1 %317, label %331, label %318

318:                                              ; preds = %315
  %319 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %316
  %320 = bitcast i16* %319 to <2 x i16>*
  %321 = load <2 x i16>, <2 x i16>* %320, align 2, !alias.scope !20
  %322 = getelementptr inbounds i16, i16* %319, i64 2
  %323 = bitcast i16* %322 to <2 x i16>*
  %324 = load <2 x i16>, <2 x i16>* %323, align 2, !alias.scope !20
  %325 = sext <2 x i16> %321 to <2 x i64>
  %326 = sext <2 x i16> %324 to <2 x i64>
  %327 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 6, i64 %316
  %328 = bitcast i64* %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !23, !noalias !20
  %329 = getelementptr inbounds i64, i64* %327, i64 2
  %330 = bitcast i64* %329 to <2 x i64>*
  store <2 x i64> %326, <2 x i64>* %330, align 8, !alias.scope !23, !noalias !20
  br label %331

331:                                              ; preds = %315, %318
  %332 = icmp eq i64 %276, %259
  br i1 %332, label %375, label %333

333:                                              ; preds = %331, %261, %258
  %334 = phi i64 [ 0, %261 ], [ 0, %258 ], [ %276, %331 ]
  %335 = xor i64 %334, -1
  %336 = add nsw i64 %335, %259
  %337 = and i64 %259, 3
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %349, label %339

339:                                              ; preds = %333, %339
  %340 = phi i64 [ %346, %339 ], [ %334, %333 ]
  %341 = phi i64 [ %347, %339 ], [ %337, %333 ]
  %342 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %340
  %343 = load i16, i16* %342, align 2
  %344 = sext i16 %343 to i64
  %345 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 6, i64 %340
  store i64 %344, i64* %345, align 8
  %346 = add nuw nsw i64 %340, 1
  %347 = add i64 %341, -1
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %339, !llvm.loop !26

349:                                              ; preds = %339, %333
  %350 = phi i64 [ %334, %333 ], [ %346, %339 ]
  %351 = icmp ult i64 %336, 3
  br i1 %351, label %375, label %352

352:                                              ; preds = %349, %352
  %353 = phi i64 [ %373, %352 ], [ %350, %349 ]
  %354 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %353
  %355 = load i16, i16* %354, align 2
  %356 = sext i16 %355 to i64
  %357 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 6, i64 %353
  store i64 %356, i64* %357, align 8
  %358 = add nuw nsw i64 %353, 1
  %359 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %358
  %360 = load i16, i16* %359, align 2
  %361 = sext i16 %360 to i64
  %362 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 6, i64 %358
  store i64 %361, i64* %362, align 8
  %363 = add nuw nsw i64 %353, 2
  %364 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %363
  %365 = load i16, i16* %364, align 2
  %366 = sext i16 %365 to i64
  %367 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 6, i64 %363
  store i64 %366, i64* %367, align 8
  %368 = add nuw nsw i64 %353, 3
  %369 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 8, i64 %368
  %370 = load i16, i16* %369, align 2
  %371 = sext i16 %370 to i64
  %372 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 6, i64 %368
  store i64 %371, i64* %372, align 8
  %373 = add nuw nsw i64 %353, 4
  %374 = icmp eq i64 %373, %259
  br i1 %374, label %375, label %352, !llvm.loop !27

375:                                              ; preds = %349, %352, %331, %253
  %376 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 5
  %377 = load i8, i8* %376, align 1
  %378 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 3
  store i8 %377, i8* %378, align 1
  %379 = icmp eq i8 %377, 0
  br i1 %379, label %497, label %380

380:                                              ; preds = %375
  %381 = zext i8 %377 to i64
  %382 = icmp ult i8 %377, 4
  br i1 %382, label %455, label %383

383:                                              ; preds = %380
  %384 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 7, i64 0
  %385 = bitcast i64* %384 to i8*
  %386 = shl nuw nsw i64 %381, 3
  %387 = add nuw nsw i64 %386, 640
  %388 = getelementptr i8, i8* %4, i64 %387
  %389 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 0
  %390 = bitcast i16* %389 to i8*
  %391 = shl nuw nsw i64 %381, 1
  %392 = add nuw nsw i64 %391, 88
  %393 = getelementptr i8, i8* %5, i64 %392
  %394 = icmp ugt i8* %393, %385
  %395 = icmp ugt i8* %388, %390
  %396 = and i1 %394, %395
  br i1 %396, label %455, label %397

397:                                              ; preds = %383
  %398 = and i64 %381, 252
  %399 = add nsw i64 %398, -4
  %400 = lshr exact i64 %399, 2
  %401 = add nuw nsw i64 %400, 1
  %402 = and i64 %401, 1
  %403 = icmp eq i64 %399, 0
  br i1 %403, label %437, label %404

404:                                              ; preds = %397
  %405 = sub nuw nsw i64 %401, %402
  br label %406

406:                                              ; preds = %406, %404
  %407 = phi i64 [ 0, %404 ], [ %434, %406 ]
  %408 = phi i64 [ %405, %404 ], [ %435, %406 ]
  %409 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %407
  %410 = bitcast i16* %409 to <2 x i16>*
  %411 = load <2 x i16>, <2 x i16>* %410, align 2, !alias.scope !28
  %412 = getelementptr inbounds i16, i16* %409, i64 2
  %413 = bitcast i16* %412 to <2 x i16>*
  %414 = load <2 x i16>, <2 x i16>* %413, align 2, !alias.scope !28
  %415 = sext <2 x i16> %411 to <2 x i64>
  %416 = sext <2 x i16> %414 to <2 x i64>
  %417 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 7, i64 %407
  %418 = bitcast i64* %417 to <2 x i64>*
  store <2 x i64> %415, <2 x i64>* %418, align 8, !alias.scope !31, !noalias !28
  %419 = getelementptr inbounds i64, i64* %417, i64 2
  %420 = bitcast i64* %419 to <2 x i64>*
  store <2 x i64> %416, <2 x i64>* %420, align 8, !alias.scope !31, !noalias !28
  %421 = or i64 %407, 4
  %422 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %421
  %423 = bitcast i16* %422 to <2 x i16>*
  %424 = load <2 x i16>, <2 x i16>* %423, align 2, !alias.scope !28
  %425 = getelementptr inbounds i16, i16* %422, i64 2
  %426 = bitcast i16* %425 to <2 x i16>*
  %427 = load <2 x i16>, <2 x i16>* %426, align 2, !alias.scope !28
  %428 = sext <2 x i16> %424 to <2 x i64>
  %429 = sext <2 x i16> %427 to <2 x i64>
  %430 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 7, i64 %421
  %431 = bitcast i64* %430 to <2 x i64>*
  store <2 x i64> %428, <2 x i64>* %431, align 8, !alias.scope !31, !noalias !28
  %432 = getelementptr inbounds i64, i64* %430, i64 2
  %433 = bitcast i64* %432 to <2 x i64>*
  store <2 x i64> %429, <2 x i64>* %433, align 8, !alias.scope !31, !noalias !28
  %434 = add i64 %407, 8
  %435 = add i64 %408, -2
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %437, label %406, !llvm.loop !33

437:                                              ; preds = %406, %397
  %438 = phi i64 [ 0, %397 ], [ %434, %406 ]
  %439 = icmp eq i64 %402, 0
  br i1 %439, label %453, label %440

440:                                              ; preds = %437
  %441 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %438
  %442 = bitcast i16* %441 to <2 x i16>*
  %443 = load <2 x i16>, <2 x i16>* %442, align 2, !alias.scope !28
  %444 = getelementptr inbounds i16, i16* %441, i64 2
  %445 = bitcast i16* %444 to <2 x i16>*
  %446 = load <2 x i16>, <2 x i16>* %445, align 2, !alias.scope !28
  %447 = sext <2 x i16> %443 to <2 x i64>
  %448 = sext <2 x i16> %446 to <2 x i64>
  %449 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 7, i64 %438
  %450 = bitcast i64* %449 to <2 x i64>*
  store <2 x i64> %447, <2 x i64>* %450, align 8, !alias.scope !31, !noalias !28
  %451 = getelementptr inbounds i64, i64* %449, i64 2
  %452 = bitcast i64* %451 to <2 x i64>*
  store <2 x i64> %448, <2 x i64>* %452, align 8, !alias.scope !31, !noalias !28
  br label %453

453:                                              ; preds = %437, %440
  %454 = icmp eq i64 %398, %381
  br i1 %454, label %497, label %455

455:                                              ; preds = %453, %383, %380
  %456 = phi i64 [ 0, %383 ], [ 0, %380 ], [ %398, %453 ]
  %457 = xor i64 %456, -1
  %458 = add nsw i64 %457, %381
  %459 = and i64 %381, 3
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %471, label %461

461:                                              ; preds = %455, %461
  %462 = phi i64 [ %468, %461 ], [ %456, %455 ]
  %463 = phi i64 [ %469, %461 ], [ %459, %455 ]
  %464 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %462
  %465 = load i16, i16* %464, align 2
  %466 = sext i16 %465 to i64
  %467 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 7, i64 %462
  store i64 %466, i64* %467, align 8
  %468 = add nuw nsw i64 %462, 1
  %469 = add i64 %463, -1
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %471, label %461, !llvm.loop !34

471:                                              ; preds = %461, %455
  %472 = phi i64 [ %456, %455 ], [ %468, %461 ]
  %473 = icmp ult i64 %458, 3
  br i1 %473, label %497, label %474

474:                                              ; preds = %471, %474
  %475 = phi i64 [ %495, %474 ], [ %472, %471 ]
  %476 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %475
  %477 = load i16, i16* %476, align 2
  %478 = sext i16 %477 to i64
  %479 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 7, i64 %475
  store i64 %478, i64* %479, align 8
  %480 = add nuw nsw i64 %475, 1
  %481 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %480
  %482 = load i16, i16* %481, align 2
  %483 = sext i16 %482 to i64
  %484 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 7, i64 %480
  store i64 %483, i64* %484, align 8
  %485 = add nuw nsw i64 %475, 2
  %486 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %485
  %487 = load i16, i16* %486, align 2
  %488 = sext i16 %487 to i64
  %489 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 7, i64 %485
  store i64 %488, i64* %489, align 8
  %490 = add nuw nsw i64 %475, 3
  %491 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 9, i64 %490
  %492 = load i16, i16* %491, align 2
  %493 = sext i16 %492 to i64
  %494 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 7, i64 %490
  store i64 %493, i64* %494, align 8
  %495 = add nuw nsw i64 %475, 4
  %496 = icmp eq i64 %495, %381
  br i1 %496, label %497, label %474, !llvm.loop !35

497:                                              ; preds = %471, %474, %453, %375
  %498 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 10
  %499 = load i64, i64* %498, align 8
  %500 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 8
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 11
  %502 = load i32, i32* %501, align 8
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 9
  store i64 %503, i64* %504, align 8
  %505 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 12
  %506 = load i32, i32* %505, align 4
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 10
  store i64 %507, i64* %508, align 8
  %509 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 13, i64 0
  %510 = load i16, i16* %509, align 8
  %511 = zext i16 %510 to i64
  %512 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 11
  store i64 %511, i64* %512, align 8
  %513 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 14, i64 0
  %514 = load i16, i16* %513, align 2
  %515 = zext i16 %514 to i64
  %516 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 12
  store i64 %515, i64* %516, align 8
  %517 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 15
  %518 = load i8, i8* %517, align 4
  %519 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 13
  store i8 %518, i8* %519, align 8
  %520 = icmp eq i8 %518, 0
  br i1 %520, label %638, label %521

521:                                              ; preds = %497
  %522 = zext i8 %518 to i64
  %523 = icmp ult i8 %518, 4
  br i1 %523, label %596, label %524

524:                                              ; preds = %521
  %525 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 15, i64 0
  %526 = bitcast i64* %525 to i8*
  %527 = shl nuw nsw i64 %522, 3
  %528 = add nuw nsw i64 %527, 768
  %529 = getelementptr i8, i8* %4, i64 %528
  %530 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 0
  %531 = bitcast i16* %530 to i8*
  %532 = shl nuw nsw i64 %522, 1
  %533 = add nuw nsw i64 %532, 136
  %534 = getelementptr i8, i8* %5, i64 %533
  %535 = icmp ugt i8* %534, %526
  %536 = icmp ugt i8* %529, %531
  %537 = and i1 %535, %536
  br i1 %537, label %596, label %538

538:                                              ; preds = %524
  %539 = and i64 %522, 252
  %540 = add nsw i64 %539, -4
  %541 = lshr exact i64 %540, 2
  %542 = add nuw nsw i64 %541, 1
  %543 = and i64 %542, 1
  %544 = icmp eq i64 %540, 0
  br i1 %544, label %578, label %545

545:                                              ; preds = %538
  %546 = sub nuw nsw i64 %542, %543
  br label %547

547:                                              ; preds = %547, %545
  %548 = phi i64 [ 0, %545 ], [ %575, %547 ]
  %549 = phi i64 [ %546, %545 ], [ %576, %547 ]
  %550 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %548
  %551 = bitcast i16* %550 to <2 x i16>*
  %552 = load <2 x i16>, <2 x i16>* %551, align 2, !alias.scope !36
  %553 = getelementptr inbounds i16, i16* %550, i64 2
  %554 = bitcast i16* %553 to <2 x i16>*
  %555 = load <2 x i16>, <2 x i16>* %554, align 2, !alias.scope !36
  %556 = sext <2 x i16> %552 to <2 x i64>
  %557 = sext <2 x i16> %555 to <2 x i64>
  %558 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 15, i64 %548
  %559 = bitcast i64* %558 to <2 x i64>*
  store <2 x i64> %556, <2 x i64>* %559, align 8, !alias.scope !39, !noalias !36
  %560 = getelementptr inbounds i64, i64* %558, i64 2
  %561 = bitcast i64* %560 to <2 x i64>*
  store <2 x i64> %557, <2 x i64>* %561, align 8, !alias.scope !39, !noalias !36
  %562 = or i64 %548, 4
  %563 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %562
  %564 = bitcast i16* %563 to <2 x i16>*
  %565 = load <2 x i16>, <2 x i16>* %564, align 2, !alias.scope !36
  %566 = getelementptr inbounds i16, i16* %563, i64 2
  %567 = bitcast i16* %566 to <2 x i16>*
  %568 = load <2 x i16>, <2 x i16>* %567, align 2, !alias.scope !36
  %569 = sext <2 x i16> %565 to <2 x i64>
  %570 = sext <2 x i16> %568 to <2 x i64>
  %571 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 15, i64 %562
  %572 = bitcast i64* %571 to <2 x i64>*
  store <2 x i64> %569, <2 x i64>* %572, align 8, !alias.scope !39, !noalias !36
  %573 = getelementptr inbounds i64, i64* %571, i64 2
  %574 = bitcast i64* %573 to <2 x i64>*
  store <2 x i64> %570, <2 x i64>* %574, align 8, !alias.scope !39, !noalias !36
  %575 = add i64 %548, 8
  %576 = add i64 %549, -2
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %578, label %547, !llvm.loop !41

578:                                              ; preds = %547, %538
  %579 = phi i64 [ 0, %538 ], [ %575, %547 ]
  %580 = icmp eq i64 %543, 0
  br i1 %580, label %594, label %581

581:                                              ; preds = %578
  %582 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %579
  %583 = bitcast i16* %582 to <2 x i16>*
  %584 = load <2 x i16>, <2 x i16>* %583, align 2, !alias.scope !36
  %585 = getelementptr inbounds i16, i16* %582, i64 2
  %586 = bitcast i16* %585 to <2 x i16>*
  %587 = load <2 x i16>, <2 x i16>* %586, align 2, !alias.scope !36
  %588 = sext <2 x i16> %584 to <2 x i64>
  %589 = sext <2 x i16> %587 to <2 x i64>
  %590 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 15, i64 %579
  %591 = bitcast i64* %590 to <2 x i64>*
  store <2 x i64> %588, <2 x i64>* %591, align 8, !alias.scope !39, !noalias !36
  %592 = getelementptr inbounds i64, i64* %590, i64 2
  %593 = bitcast i64* %592 to <2 x i64>*
  store <2 x i64> %589, <2 x i64>* %593, align 8, !alias.scope !39, !noalias !36
  br label %594

594:                                              ; preds = %578, %581
  %595 = icmp eq i64 %539, %522
  br i1 %595, label %638, label %596

596:                                              ; preds = %594, %524, %521
  %597 = phi i64 [ 0, %524 ], [ 0, %521 ], [ %539, %594 ]
  %598 = xor i64 %597, -1
  %599 = add nsw i64 %598, %522
  %600 = and i64 %522, 3
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %612, label %602

602:                                              ; preds = %596, %602
  %603 = phi i64 [ %609, %602 ], [ %597, %596 ]
  %604 = phi i64 [ %610, %602 ], [ %600, %596 ]
  %605 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %603
  %606 = load i16, i16* %605, align 2
  %607 = sext i16 %606 to i64
  %608 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 15, i64 %603
  store i64 %607, i64* %608, align 8
  %609 = add nuw nsw i64 %603, 1
  %610 = add i64 %604, -1
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %612, label %602, !llvm.loop !42

612:                                              ; preds = %602, %596
  %613 = phi i64 [ %597, %596 ], [ %609, %602 ]
  %614 = icmp ult i64 %599, 3
  br i1 %614, label %638, label %615

615:                                              ; preds = %612, %615
  %616 = phi i64 [ %636, %615 ], [ %613, %612 ]
  %617 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %616
  %618 = load i16, i16* %617, align 2
  %619 = sext i16 %618 to i64
  %620 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 15, i64 %616
  store i64 %619, i64* %620, align 8
  %621 = add nuw nsw i64 %616, 1
  %622 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %621
  %623 = load i16, i16* %622, align 2
  %624 = sext i16 %623 to i64
  %625 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 15, i64 %621
  store i64 %624, i64* %625, align 8
  %626 = add nuw nsw i64 %616, 2
  %627 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %626
  %628 = load i16, i16* %627, align 2
  %629 = sext i16 %628 to i64
  %630 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 15, i64 %626
  store i64 %629, i64* %630, align 8
  %631 = add nuw nsw i64 %616, 3
  %632 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 19, i64 %631
  %633 = load i16, i16* %632, align 2
  %634 = sext i16 %633 to i64
  %635 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 15, i64 %631
  store i64 %634, i64* %635, align 8
  %636 = add nuw nsw i64 %616, 4
  %637 = icmp eq i64 %636, %522
  br i1 %637, label %638, label %615, !llvm.loop !43

638:                                              ; preds = %612, %615, %594, %497
  %639 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 16
  %640 = load i8, i8* %639, align 1
  %641 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 14
  store i8 %640, i8* %641, align 1
  %642 = icmp eq i8 %640, 0
  br i1 %642, label %760, label %643

643:                                              ; preds = %638
  %644 = zext i8 %640 to i64
  %645 = icmp ult i8 %640, 4
  br i1 %645, label %718, label %646

646:                                              ; preds = %643
  %647 = getelementptr %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 16, i64 0
  %648 = bitcast i64* %647 to i8*
  %649 = shl nuw nsw i64 %644, 3
  %650 = add nuw nsw i64 %649, 872
  %651 = getelementptr i8, i8* %4, i64 %650
  %652 = getelementptr %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 0
  %653 = bitcast i16* %652 to i8*
  %654 = shl nuw nsw i64 %644, 1
  %655 = add nuw nsw i64 %654, 162
  %656 = getelementptr i8, i8* %5, i64 %655
  %657 = icmp ugt i8* %656, %648
  %658 = icmp ugt i8* %651, %653
  %659 = and i1 %657, %658
  br i1 %659, label %718, label %660

660:                                              ; preds = %646
  %661 = and i64 %644, 252
  %662 = add nsw i64 %661, -4
  %663 = lshr exact i64 %662, 2
  %664 = add nuw nsw i64 %663, 1
  %665 = and i64 %664, 1
  %666 = icmp eq i64 %662, 0
  br i1 %666, label %700, label %667

667:                                              ; preds = %660
  %668 = sub nuw nsw i64 %664, %665
  br label %669

669:                                              ; preds = %669, %667
  %670 = phi i64 [ 0, %667 ], [ %697, %669 ]
  %671 = phi i64 [ %668, %667 ], [ %698, %669 ]
  %672 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %670
  %673 = bitcast i16* %672 to <2 x i16>*
  %674 = load <2 x i16>, <2 x i16>* %673, align 2, !alias.scope !44
  %675 = getelementptr inbounds i16, i16* %672, i64 2
  %676 = bitcast i16* %675 to <2 x i16>*
  %677 = load <2 x i16>, <2 x i16>* %676, align 2, !alias.scope !44
  %678 = sext <2 x i16> %674 to <2 x i64>
  %679 = sext <2 x i16> %677 to <2 x i64>
  %680 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 16, i64 %670
  %681 = bitcast i64* %680 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %681, align 8, !alias.scope !47, !noalias !44
  %682 = getelementptr inbounds i64, i64* %680, i64 2
  %683 = bitcast i64* %682 to <2 x i64>*
  store <2 x i64> %679, <2 x i64>* %683, align 8, !alias.scope !47, !noalias !44
  %684 = or i64 %670, 4
  %685 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %684
  %686 = bitcast i16* %685 to <2 x i16>*
  %687 = load <2 x i16>, <2 x i16>* %686, align 2, !alias.scope !44
  %688 = getelementptr inbounds i16, i16* %685, i64 2
  %689 = bitcast i16* %688 to <2 x i16>*
  %690 = load <2 x i16>, <2 x i16>* %689, align 2, !alias.scope !44
  %691 = sext <2 x i16> %687 to <2 x i64>
  %692 = sext <2 x i16> %690 to <2 x i64>
  %693 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 16, i64 %684
  %694 = bitcast i64* %693 to <2 x i64>*
  store <2 x i64> %691, <2 x i64>* %694, align 8, !alias.scope !47, !noalias !44
  %695 = getelementptr inbounds i64, i64* %693, i64 2
  %696 = bitcast i64* %695 to <2 x i64>*
  store <2 x i64> %692, <2 x i64>* %696, align 8, !alias.scope !47, !noalias !44
  %697 = add i64 %670, 8
  %698 = add i64 %671, -2
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %700, label %669, !llvm.loop !49

700:                                              ; preds = %669, %660
  %701 = phi i64 [ 0, %660 ], [ %697, %669 ]
  %702 = icmp eq i64 %665, 0
  br i1 %702, label %716, label %703

703:                                              ; preds = %700
  %704 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %701
  %705 = bitcast i16* %704 to <2 x i16>*
  %706 = load <2 x i16>, <2 x i16>* %705, align 2, !alias.scope !44
  %707 = getelementptr inbounds i16, i16* %704, i64 2
  %708 = bitcast i16* %707 to <2 x i16>*
  %709 = load <2 x i16>, <2 x i16>* %708, align 2, !alias.scope !44
  %710 = sext <2 x i16> %706 to <2 x i64>
  %711 = sext <2 x i16> %709 to <2 x i64>
  %712 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 16, i64 %701
  %713 = bitcast i64* %712 to <2 x i64>*
  store <2 x i64> %710, <2 x i64>* %713, align 8, !alias.scope !47, !noalias !44
  %714 = getelementptr inbounds i64, i64* %712, i64 2
  %715 = bitcast i64* %714 to <2 x i64>*
  store <2 x i64> %711, <2 x i64>* %715, align 8, !alias.scope !47, !noalias !44
  br label %716

716:                                              ; preds = %700, %703
  %717 = icmp eq i64 %661, %644
  br i1 %717, label %760, label %718

718:                                              ; preds = %716, %646, %643
  %719 = phi i64 [ 0, %646 ], [ 0, %643 ], [ %661, %716 ]
  %720 = xor i64 %719, -1
  %721 = add nsw i64 %720, %644
  %722 = and i64 %644, 3
  %723 = icmp eq i64 %722, 0
  br i1 %723, label %734, label %724

724:                                              ; preds = %718, %724
  %725 = phi i64 [ %731, %724 ], [ %719, %718 ]
  %726 = phi i64 [ %732, %724 ], [ %722, %718 ]
  %727 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %725
  %728 = load i16, i16* %727, align 2
  %729 = sext i16 %728 to i64
  %730 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 16, i64 %725
  store i64 %729, i64* %730, align 8
  %731 = add nuw nsw i64 %725, 1
  %732 = add i64 %726, -1
  %733 = icmp eq i64 %732, 0
  br i1 %733, label %734, label %724, !llvm.loop !50

734:                                              ; preds = %724, %718
  %735 = phi i64 [ %719, %718 ], [ %731, %724 ]
  %736 = icmp ult i64 %721, 3
  br i1 %736, label %760, label %737

737:                                              ; preds = %734, %737
  %738 = phi i64 [ %758, %737 ], [ %735, %734 ]
  %739 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %738
  %740 = load i16, i16* %739, align 2
  %741 = sext i16 %740 to i64
  %742 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 16, i64 %738
  store i64 %741, i64* %742, align 8
  %743 = add nuw nsw i64 %738, 1
  %744 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %743
  %745 = load i16, i16* %744, align 2
  %746 = sext i16 %745 to i64
  %747 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 16, i64 %743
  store i64 %746, i64* %747, align 8
  %748 = add nuw nsw i64 %738, 2
  %749 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %748
  %750 = load i16, i16* %749, align 2
  %751 = sext i16 %750 to i64
  %752 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 16, i64 %748
  store i64 %751, i64* %752, align 8
  %753 = add nuw nsw i64 %738, 3
  %754 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 20, i64 %753
  %755 = load i16, i16* %754, align 2
  %756 = sext i16 %755 to i64
  %757 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 16, i64 %753
  store i64 %756, i64* %757, align 8
  %758 = add nuw nsw i64 %738, 4
  %759 = icmp eq i64 %758, %644
  br i1 %759, label %760, label %737, !llvm.loop !51

760:                                              ; preds = %734, %737, %716, %638
  %761 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 17
  %762 = load i8, i8* %761, align 2
  %763 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 17
  store i8 %762, i8* %763, align 8
  %764 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 1
  %765 = load i32, i32* %764, align 4
  %766 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 19
  store i32 %765, i32* %766, align 8
  %767 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 22
  %768 = load i64, i64* %767, align 8
  %769 = trunc i64 %768 to i32
  %770 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 20
  store i32 %769, i32* %770, align 4
  %771 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %1, i64 0, i32 21
  %772 = load i64, i64* %771, align 8
  %773 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 21
  store i64 %772, i64* %773, align 8
  %774 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 1, i32 27
  %775 = bitcast %struct.CFF_SubFontRec_** %774 to i64*
  store i64 %13, i64* %775, align 8
  %776 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %777 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %776, align 8
  %778 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %777, i64 0, i32 6
  %779 = load i32, i32* %778, align 4
  %780 = icmp eq i32 %779, -1
  br i1 %780, label %801, label %781

781:                                              ; preds = %760
  %782 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 11
  store i32 %779, i32* %782, align 8
  %783 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %776, align 8
  %784 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %783, i64 0, i32 6
  %785 = load i32, i32* %784, align 4
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %801, label %787

787:                                              ; preds = %781, %787
  %788 = phi i32 [ %799, %787 ], [ %785, %781 ]
  %789 = phi %struct.FT_Face_InternalRec_* [ %797, %787 ], [ %783, %781 ]
  %790 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %789, i64 0, i32 6
  %791 = shl i32 %788, 13
  %792 = xor i32 %791, %788
  %793 = lshr i32 %792, 17
  %794 = xor i32 %793, %792
  %795 = shl i32 %794, 5
  %796 = xor i32 %795, %794
  store i32 %796, i32* %790, align 4
  %797 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %776, align 8
  %798 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %797, i64 0, i32 6
  %799 = load i32, i32* %798, align 4
  %800 = icmp slt i32 %799, 0
  br i1 %800, label %787, label %801

801:                                              ; preds = %787, %781, %760
  %802 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %2, i64 0, i32 11
  %803 = load i32, i32* %802, align 8
  %804 = icmp eq i32 %803, 0
  br i1 %804, label %805, label %819

805:                                              ; preds = %801
  %806 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %806) #11
  %807 = ptrtoint i32* %8 to i64
  %808 = ptrtoint %struct.FT_FaceRec_** %6 to i64
  %809 = ptrtoint %struct.CFF_SubFontRec_** %7 to i64
  %810 = xor i64 %809, %808
  %811 = xor i64 %810, %807
  %812 = trunc i64 %811 to i32
  %813 = lshr i32 %812, 10
  %814 = xor i32 %813, %812
  %815 = lshr i32 %812, 20
  %816 = xor i32 %814, %815
  %817 = icmp eq i32 %816, 0
  %818 = select i1 %817, i32 29572, i32 %816
  store i32 %818, i32* %802, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %806) #11
  br label %819

819:                                              ; preds = %801, %805
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @skip_procedure(i8** nocapture, i8*) unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = bitcast i8** %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8** %3 to i64*
  store i64 %6, i64* %7, align 8
  %8 = inttoptr i64 %6 to i8*
  %9 = icmp ult i8* %8, %1
  br i1 %9, label %10, label %99

10:                                               ; preds = %2, %88
  %11 = phi i8* [ %92, %88 ], [ %8, %2 ]
  %12 = phi i32 [ %90, %88 ], [ 0, %2 ]
  %13 = load i8, i8* %11, align 1
  switch i8 %13, label %88 [
    i8 123, label %14
    i8 125, label %16
    i8 40, label %22
    i8 60, label %25
    i8 37, label %80
  ]

14:                                               ; preds = %10
  %15 = add nsw i32 %12, 1
  br label %88

16:                                               ; preds = %10
  %17 = add nsw i32 %12, -1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %88

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %11, i64 1
  store i8* %20, i8** %3, align 8
  %21 = ptrtoint i8* %20 to i64
  br label %99

22:                                               ; preds = %10
  %23 = call fastcc i32 @skip_literal_string(i8** nonnull %3, i8* %1)
  %24 = load i8*, i8** %3, align 8
  br label %88

25:                                               ; preds = %10
  %26 = getelementptr inbounds i8, i8* %11, i64 1
  %27 = ptrtoint i8* %26 to i64
  %28 = icmp ult i8* %26, %1
  br i1 %28, label %29, label %64

29:                                               ; preds = %25, %45
  %30 = phi i8* [ %46, %45 ], [ %26, %25 ]
  %31 = phi i64 [ %47, %45 ], [ %27, %25 ]
  %32 = load i8, i8* %30, align 1
  switch i8 %32, label %50 [
    i8 32, label %41
    i8 13, label %41
    i8 10, label %41
    i8 9, label %41
    i8 12, label %41
    i8 0, label %41
    i8 37, label %35
  ]

33:                                               ; preds = %38
  %34 = load i8, i8* %39, align 1
  br label %35

35:                                               ; preds = %29, %33
  %36 = phi i8 [ %34, %33 ], [ %32, %29 ]
  %37 = phi i8* [ %39, %33 ], [ %30, %29 ]
  switch i8 %36, label %38 [
    i8 13, label %41
    i8 10, label %41
  ]

38:                                               ; preds = %35
  %39 = getelementptr inbounds i8, i8* %37, i64 1
  %40 = icmp eq i8* %39, %1
  br i1 %40, label %41, label %33

41:                                               ; preds = %38, %35, %35, %29, %29, %29, %29, %29, %29
  %42 = phi i8* [ %30, %29 ], [ %30, %29 ], [ %30, %29 ], [ %30, %29 ], [ %30, %29 ], [ %30, %29 ], [ %1, %38 ], [ %37, %35 ], [ %37, %35 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  %44 = icmp ult i8* %43, %1
  br i1 %44, label %45, label %48

45:                                               ; preds = %41, %58
  %46 = phi i8* [ %43, %41 ], [ %59, %58 ]
  %47 = ptrtoint i8* %46 to i64
  br label %29

48:                                               ; preds = %41
  %49 = ptrtoint i8* %43 to i64
  br label %50

50:                                               ; preds = %29, %48
  %51 = phi i64 [ %49, %48 ], [ %31, %29 ]
  %52 = inttoptr i64 %51 to i8*
  %53 = icmp ult i8* %52, %1
  br i1 %53, label %54, label %64

54:                                               ; preds = %50
  %55 = load i8, i8* %52, align 1
  %56 = add i8 %55, -48
  %57 = icmp ult i8 %56, 10
  br i1 %57, label %58, label %61

58:                                               ; preds = %61, %61, %61, %61, %61, %61, %61, %61, %61, %61, %61, %61, %54
  %59 = getelementptr inbounds i8, i8* %52, i64 1
  %60 = icmp ult i8* %59, %1
  br i1 %60, label %45, label %62

61:                                               ; preds = %54
  switch i8 %55, label %64 [
    i8 102, label %58
    i8 101, label %58
    i8 100, label %58
    i8 99, label %58
    i8 98, label %58
    i8 97, label %58
    i8 70, label %58
    i8 69, label %58
    i8 68, label %58
    i8 67, label %58
    i8 66, label %58
    i8 65, label %58
  ]

62:                                               ; preds = %58
  %63 = ptrtoint i8* %59 to i64
  br label %64

64:                                               ; preds = %61, %50, %62, %25
  %65 = phi i64 [ %27, %25 ], [ %63, %62 ], [ %51, %50 ], [ %51, %61 ]
  %66 = inttoptr i64 %65 to i8*
  %67 = icmp ult i8* %66, %1
  br i1 %67, label %68, label %71

68:                                               ; preds = %64
  %69 = load i8, i8* %66, align 1
  %70 = icmp eq i8 %69, 62
  br i1 %70, label %71, label %74

71:                                               ; preds = %68, %64
  %72 = getelementptr inbounds i8, i8* %66, i64 1
  %73 = ptrtoint i8* %72 to i64
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi i8* [ %66, %68 ], [ %72, %71 ]
  %76 = phi i64 [ %65, %68 ], [ %73, %71 ]
  %77 = phi i32 [ 3, %68 ], [ 0, %71 ]
  store i64 %76, i64* %7, align 8
  br label %88

78:                                               ; preds = %83
  %79 = load i8, i8* %84, align 1
  br label %80

80:                                               ; preds = %10, %78
  %81 = phi i8 [ %79, %78 ], [ %13, %10 ]
  %82 = phi i8* [ %84, %78 ], [ %11, %10 ]
  switch i8 %81, label %83 [
    i8 13, label %86
    i8 10, label %86
  ]

83:                                               ; preds = %80
  %84 = getelementptr inbounds i8, i8* %82, i64 1
  %85 = icmp eq i8* %84, %1
  br i1 %85, label %86, label %78

86:                                               ; preds = %80, %80, %83
  %87 = phi i8* [ %82, %80 ], [ %82, %80 ], [ %1, %83 ]
  store i8* %87, i8** %3, align 8
  br label %88

88:                                               ; preds = %14, %22, %74, %86, %10, %16
  %89 = phi i8* [ %11, %10 ], [ %87, %86 ], [ %75, %74 ], [ %24, %22 ], [ %11, %16 ], [ %11, %14 ]
  %90 = phi i32 [ %12, %10 ], [ %12, %86 ], [ %12, %74 ], [ %12, %22 ], [ %17, %16 ], [ %15, %14 ]
  %91 = phi i32 [ 0, %10 ], [ 0, %86 ], [ %77, %74 ], [ %23, %22 ], [ 0, %16 ], [ 0, %14 ]
  %92 = getelementptr inbounds i8, i8* %89, i64 1
  store i8* %92, i8** %3, align 8
  %93 = icmp ult i8* %92, %1
  %94 = icmp eq i32 %91, 0
  %95 = and i1 %94, %93
  br i1 %95, label %10, label %96

96:                                               ; preds = %88
  %97 = ptrtoint i8* %92 to i64
  %98 = icmp eq i32 %90, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %2, %19, %96
  %100 = phi i32 [ %91, %96 ], [ 0, %19 ], [ 0, %2 ]
  %101 = phi i64 [ %97, %96 ], [ %21, %19 ], [ %6, %2 ]
  br label %102

102:                                              ; preds = %96, %99
  %103 = phi i64 [ %101, %99 ], [ %97, %96 ]
  %104 = phi i32 [ %100, %99 ], [ 3, %96 ]
  store i64 %103, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret i32 %104
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @skip_literal_string(i8** nocapture, i8* readnone) unnamed_addr #2 {
  %3 = load i8*, i8** %0, align 8
  %4 = icmp ult i8* %3, %1
  br i1 %4, label %5, label %37

5:                                                ; preds = %2, %33
  %6 = phi i32 [ %35, %33 ], [ 0, %2 ]
  %7 = phi i8* [ %34, %33 ], [ %3, %2 ]
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds i8, i8* %7, i64 1
  switch i8 %8, label %33 [
    i8 92, label %10
    i8 40, label %28
    i8 41, label %30
  ]

10:                                               ; preds = %5
  %11 = icmp eq i8* %9, %1
  br i1 %11, label %37, label %12

12:                                               ; preds = %10
  %13 = load i8, i8* %9, align 1
  switch i8 %13, label %14 [
    i8 110, label %19
    i8 114, label %19
    i8 116, label %19
    i8 98, label %19
    i8 102, label %19
    i8 92, label %19
    i8 40, label %19
    i8 41, label %19
  ]

14:                                               ; preds = %12
  %15 = icmp ult i8* %9, %1
  %16 = and i8 %13, -8
  %17 = icmp eq i8 %16, 48
  %18 = and i1 %15, %17
  br i1 %18, label %21, label %33

19:                                               ; preds = %12, %12, %12, %12, %12, %12, %12, %12
  %20 = getelementptr inbounds i8, i8* %7, i64 2
  br label %33

21:                                               ; preds = %14
  %22 = getelementptr inbounds i8, i8* %7, i64 2
  %23 = icmp ult i8* %22, %1
  br i1 %23, label %24, label %33

24:                                               ; preds = %21
  %25 = load i8, i8* %22, align 1
  %26 = and i8 %25, -8
  %27 = icmp eq i8 %26, 48
  br i1 %27, label %40, label %33

28:                                               ; preds = %5
  %29 = add nsw i32 %6, 1
  br label %33

30:                                               ; preds = %5
  %31 = add nsw i32 %6, -1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %43, %24, %21, %40, %14, %19, %30, %28, %5
  %34 = phi i8* [ %20, %19 ], [ %9, %28 ], [ %9, %30 ], [ %9, %5 ], [ %9, %14 ], [ %22, %21 ], [ %22, %24 ], [ %41, %40 ], [ %48, %43 ]
  %35 = phi i32 [ %6, %19 ], [ %29, %28 ], [ %31, %30 ], [ %6, %5 ], [ %6, %14 ], [ %6, %40 ], [ %6, %21 ], [ %6, %24 ], [ %6, %43 ]
  %36 = icmp ult i8* %34, %1
  br i1 %36, label %5, label %37

37:                                               ; preds = %33, %10, %30, %2
  %38 = phi i8* [ %3, %2 ], [ %9, %30 ], [ %1, %10 ], [ %34, %33 ]
  %39 = phi i32 [ 3, %2 ], [ 0, %30 ], [ 3, %10 ], [ 3, %33 ]
  store i8* %38, i8** %0, align 8
  ret i32 %39

40:                                               ; preds = %24
  %41 = getelementptr inbounds i8, i8* %7, i64 3
  %42 = icmp ult i8* %41, %1
  br i1 %42, label %43, label %33

43:                                               ; preds = %40
  %44 = load i8, i8* %41, align 1
  %45 = and i8 %44, -8
  %46 = icmp eq i8 %45, 48
  %47 = getelementptr inbounds i8, i8* %7, i64 4
  %48 = select i1 %46, i8* %47, i8* %41
  br label %33
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ps_tofixedarray(i8** nocapture, i8*, i32, i64*, i32) unnamed_addr #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = load i8*, i8** %0, align 8
  store i8* %9, i8** %6, align 8
  %10 = icmp ult i8* %9, %1
  %11 = ptrtoint i8* %9 to i64
  br i1 %10, label %12, label %99

12:                                               ; preds = %5
  %13 = load i8, i8* %9, align 1
  %14 = icmp eq i8 %13, 123
  %15 = select i1 %14, i8 125, i8 0
  %16 = icmp eq i8 %13, 91
  %17 = select i1 %16, i8 93, i8 %15
  %18 = icmp ne i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %9, i64 1
  store i8* %20, i8** %6, align 8
  %21 = ptrtoint i8* %20 to i64
  br label %22

22:                                               ; preds = %19, %12
  %23 = phi i64 [ %21, %19 ], [ %11, %12 ]
  %24 = phi i8* [ %20, %19 ], [ %9, %12 ]
  %25 = icmp ult i8* %24, %1
  br i1 %25, label %26, label %99

26:                                               ; preds = %22
  %27 = bitcast i64* %7 to i8*
  %28 = bitcast i8** %6 to i64*
  %29 = icmp ne i64* %3, null
  %30 = xor i1 %29, true
  %31 = sext i32 %4 to i64
  %32 = sext i32 %2 to i64
  br label %33

33:                                               ; preds = %26, %94
  %34 = phi i64 [ %23, %26 ], [ %79, %94 ]
  %35 = phi i64 [ 0, %26 ], [ %81, %94 ]
  %36 = phi i32 [ 0, %26 ], [ %82, %94 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  store i64 -6148914691236517206, i64* %7, align 8
  %37 = inttoptr i64 %34 to i8*
  %38 = icmp ult i8* %37, %1
  br i1 %38, label %39, label %58

39:                                               ; preds = %33, %51
  %40 = phi i8* [ %53, %51 ], [ %37, %33 ]
  %41 = phi i64 [ %54, %51 ], [ %34, %33 ]
  %42 = load i8, i8* %40, align 1
  switch i8 %42, label %58 [
    i8 32, label %51
    i8 13, label %51
    i8 10, label %51
    i8 9, label %51
    i8 12, label %51
    i8 0, label %51
    i8 37, label %45
  ]

43:                                               ; preds = %48
  %44 = load i8, i8* %49, align 1
  br label %45

45:                                               ; preds = %39, %43
  %46 = phi i8 [ %44, %43 ], [ %42, %39 ]
  %47 = phi i8* [ %49, %43 ], [ %40, %39 ]
  switch i8 %46, label %48 [
    i8 13, label %51
    i8 10, label %51
  ]

48:                                               ; preds = %45
  %49 = getelementptr inbounds i8, i8* %47, i64 1
  %50 = icmp eq i8* %49, %1
  br i1 %50, label %51, label %43

51:                                               ; preds = %48, %45, %45, %39, %39, %39, %39, %39, %39
  %52 = phi i8* [ %40, %39 ], [ %40, %39 ], [ %40, %39 ], [ %40, %39 ], [ %40, %39 ], [ %40, %39 ], [ %47, %45 ], [ %47, %45 ], [ %1, %48 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp ult i8* %53, %1
  br i1 %55, label %39, label %56

56:                                               ; preds = %51
  %57 = ptrtoint i8* %53 to i64
  br label %58

58:                                               ; preds = %39, %56, %33
  %59 = phi i64 [ %34, %33 ], [ %57, %56 ], [ %41, %39 ]
  store i64 %59, i64* %28, align 8
  %60 = inttoptr i64 %59 to i8*
  %61 = icmp ult i8* %60, %1
  br i1 %61, label %62, label %89

62:                                               ; preds = %58
  %63 = load i8, i8* %60, align 1
  %64 = icmp eq i8 %63, %17
  br i1 %64, label %65, label %70

65:                                               ; preds = %62
  %66 = inttoptr i64 %59 to i8*
  %67 = trunc i64 %35 to i32
  %68 = getelementptr inbounds i8, i8* %66, i64 1
  store i8* %68, i8** %6, align 8
  %69 = ptrtoint i8* %68 to i64
  br label %91

70:                                               ; preds = %62
  %71 = icmp slt i64 %35, %32
  %72 = or i1 %71, %30
  br i1 %72, label %73, label %87

73:                                               ; preds = %70
  %74 = call fastcc i64 @PS_Conv_ToFixed(i8** nonnull %6, i8* %1, i64 %31)
  %75 = getelementptr inbounds i64, i64* %3, i64 %35
  %76 = select i1 %29, i64* %75, i64* %7
  store i64 %74, i64* %76, align 8
  %77 = load i8*, i8** %6, align 8
  %78 = icmp eq i8* %77, %60
  %79 = ptrtoint i8* %77 to i64
  br i1 %78, label %85, label %80

80:                                               ; preds = %73
  %81 = add nuw i64 %35, 1
  %82 = add nuw nsw i32 %36, 1
  br i1 %18, label %94, label %83

83:                                               ; preds = %80
  %84 = ptrtoint i8* %77 to i64
  br label %91

85:                                               ; preds = %73
  %86 = ptrtoint i8* %77 to i64
  br label %91

87:                                               ; preds = %70
  %88 = trunc i64 %35 to i32
  br label %91

89:                                               ; preds = %58
  %90 = trunc i64 %35 to i32
  br label %91

91:                                               ; preds = %83, %85, %87, %89, %65
  %92 = phi i64 [ %69, %65 ], [ %84, %83 ], [ %86, %85 ], [ %59, %87 ], [ %59, %89 ]
  %93 = phi i32 [ %67, %65 ], [ %82, %83 ], [ -1, %85 ], [ %88, %87 ], [ %90, %89 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  br label %99

94:                                               ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %95 = icmp ult i8* %77, %1
  br i1 %95, label %33, label %96

96:                                               ; preds = %94
  %97 = ptrtoint i8* %77 to i64
  %98 = trunc i64 %81 to i32
  br label %99

99:                                               ; preds = %96, %22, %5, %91
  %100 = phi i64 [ %11, %5 ], [ %92, %91 ], [ %23, %22 ], [ %97, %96 ]
  %101 = phi i32 [ 0, %5 ], [ %93, %91 ], [ 0, %22 ], [ %98, %96 ]
  %102 = bitcast i8** %0 to i64*
  store i64 %100, i64* %102, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret i32 %101
}

declare i64 @FT_RoundFix(i64) local_unnamed_addr #6

declare hidden void @FT_GlyphLoader_Rewind(%struct.FT_GlyphLoaderRec_*) local_unnamed_addr #6

declare hidden i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_*, i32, i32) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @psaux_get_glyph_name(%struct.T1_FaceRec_* nocapture readonly, i32) #4 {
  %3 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 14
  %4 = load i8**, i8*** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds i8*, i8** %4, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7
}

declare i64* @ft_hash_num_lookup(i32, %struct.FT_HashRec_*) local_unnamed_addr #6

declare hidden i8* @ft_module_get_service(%struct.FT_ModuleRec_*, i8*, i8 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @cf2_free_instance(i8*) #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %struct.FT_MemoryRec_**
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 120
  %7 = bitcast i8* %6 to i64**
  %8 = bitcast i8* %6 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %9) #11
  store i64* null, i64** %7, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 136
  %11 = bitcast i8* %10 to i32**
  %12 = bitcast i8* %10 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %13) #11
  store i32* null, i32** %11, align 8
  br label %14

14:                                               ; preds = %1, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @cf2_builder_moveTo(%struct.CF2_OutlineCallbacksRec_* nocapture readonly, %struct.CF2_CallbackParamsRec_* nocapture readnone) #2 {
  %3 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %0, i64 1
  %4 = bitcast %struct.CF2_OutlineCallbacksRec_* %3 to %struct.PS_Decoder_**
  %5 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %4, align 8
  %6 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0
  tail call fastcc void @ps_builder_close_contour(%struct.PS_Builder_* %6)
  %7 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0, i32 11
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @cf2_builder_lineTo(%struct.CF2_OutlineCallbacksRec_* nocapture readonly, %struct.CF2_CallbackParamsRec_* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %0, i64 1
  %4 = bitcast %struct.CF2_OutlineCallbacksRec_* %3 to %struct.PS_Decoder_**
  %5 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %4, align 8
  %6 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0, i32 11
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0
  %11 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = tail call fastcc i32 @ps_builder_start_point(%struct.PS_Builder_* %10, i64 %12, i64 %14)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %0, i64 0, i32 6
  %19 = load i32*, i32** %18, align 8
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %73

22:                                               ; preds = %17
  store i32 %15, i32* %19, align 4
  br label %73

23:                                               ; preds = %9, %2
  %24 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 1, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 1, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0, i32 3
  %29 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %28, align 8
  %30 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 5, i32 0, i32 1
  %31 = load i16, i16* %30, align 2
  %32 = sext i16 %31 to i32
  %33 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 6, i32 0, i32 1
  %34 = load i16, i16* %33, align 2
  %35 = sext i16 %34 to i32
  %36 = add nsw i32 %32, 1
  %37 = add nsw i32 %36, %35
  %38 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %29, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp ugt i32 %37, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %23
  %42 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %29, i32 1, i32 0) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %67

44:                                               ; preds = %41, %23
  %45 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0, i32 5
  %46 = load %struct.FT_Outline_*, %struct.FT_Outline_** %45, align 8
  %47 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0, i32 12
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %46, i64 0, i32 2
  %52 = load %struct.FT_Vector_*, %struct.FT_Vector_** %51, align 8
  %53 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %46, i64 0, i32 1
  %54 = load i16, i16* %53, align 2
  %55 = sext i16 %54 to i64
  %56 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %46, i64 0, i32 3
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %55
  %59 = ashr i64 %25, 10
  %60 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %52, i64 %55, i32 0
  store i64 %59, i64* %60, align 8
  %61 = ashr i64 %27, 10
  %62 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %52, i64 %55, i32 1
  store i64 %61, i64* %62, align 8
  store i8 1, i8* %58, align 1
  br label %63

63:                                               ; preds = %44, %50
  %64 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %46, i64 0, i32 1
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, 1
  store i16 %66, i16* %64, align 2
  br label %73

67:                                               ; preds = %41
  %68 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %0, i64 0, i32 6
  %69 = load i32*, i32** %68, align 8
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %67
  store i32 %42, i32* %69, align 4
  br label %73

73:                                               ; preds = %63, %72, %67, %22, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @cf2_builder_cubeTo(%struct.CF2_OutlineCallbacksRec_* nocapture readonly, %struct.CF2_CallbackParamsRec_* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %0, i64 1
  %4 = bitcast %struct.CF2_OutlineCallbacksRec_* %3 to %struct.PS_Decoder_**
  %5 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %4, align 8
  %6 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0, i32 11
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0
  %11 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = tail call fastcc i32 @ps_builder_start_point(%struct.PS_Builder_* %10, i64 %12, i64 %14)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %0, i64 0, i32 6
  %19 = load i32*, i32** %18, align 8
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %121

22:                                               ; preds = %17
  store i32 %15, i32* %19, align 4
  br label %121

23:                                               ; preds = %9, %2
  %24 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0, i32 3
  %25 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %25, i64 0, i32 5, i32 0, i32 1
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %25, i64 0, i32 6, i32 0, i32 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = add nsw i32 %28, 3
  %33 = add nsw i32 %32, %31
  %34 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %25, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ugt i32 %33, %35
  br i1 %36, label %37, label %46

37:                                               ; preds = %23
  %38 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %25, i32 3, i32 0) #11
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %0, i64 0, i32 6
  %42 = load i32*, i32** %41, align 8
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %121

45:                                               ; preds = %40
  store i32 %38, i32* %42, align 4
  br label %121

46:                                               ; preds = %23, %37
  %47 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0, i32 5
  %48 = load %struct.FT_Outline_*, %struct.FT_Outline_** %47, align 8
  %49 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 0, i32 12
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %69, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 1, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 1, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %48, i64 0, i32 2
  %58 = load %struct.FT_Vector_*, %struct.FT_Vector_** %57, align 8
  %59 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %48, i64 0, i32 1
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i64
  %62 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %48, i64 0, i32 3
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 %61
  %65 = ashr i64 %56, 10
  %66 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %58, i64 %61, i32 0
  store i64 %65, i64* %66, align 8
  %67 = ashr i64 %54, 10
  %68 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %58, i64 %61, i32 1
  store i64 %67, i64* %68, align 8
  store i8 2, i8* %64, align 1
  br label %69

69:                                               ; preds = %46, %52
  %70 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %48, i64 0, i32 1
  %71 = load i16, i16* %70, align 2
  %72 = add i16 %71, 1
  store i16 %72, i16* %70, align 2
  %73 = load %struct.FT_Outline_*, %struct.FT_Outline_** %47, align 8
  %74 = load i8, i8* %49, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %93, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 2, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 2, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %73, i64 0, i32 2
  %82 = load %struct.FT_Vector_*, %struct.FT_Vector_** %81, align 8
  %83 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %73, i64 0, i32 1
  %84 = load i16, i16* %83, align 2
  %85 = sext i16 %84 to i64
  %86 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %73, i64 0, i32 3
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 %85
  %89 = ashr i64 %80, 10
  %90 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %82, i64 %85, i32 0
  store i64 %89, i64* %90, align 8
  %91 = ashr i64 %78, 10
  %92 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %82, i64 %85, i32 1
  store i64 %91, i64* %92, align 8
  store i8 2, i8* %88, align 1
  br label %93

93:                                               ; preds = %69, %76
  %94 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %73, i64 0, i32 1
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, 1
  store i16 %96, i16* %94, align 2
  %97 = load %struct.FT_Outline_*, %struct.FT_Outline_** %47, align 8
  %98 = load i8, i8* %49, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %117, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 3, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %1, i64 0, i32 3, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %97, i64 0, i32 2
  %106 = load %struct.FT_Vector_*, %struct.FT_Vector_** %105, align 8
  %107 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %97, i64 0, i32 1
  %108 = load i16, i16* %107, align 2
  %109 = sext i16 %108 to i64
  %110 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %97, i64 0, i32 3
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 %109
  %113 = ashr i64 %104, 10
  %114 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %106, i64 %109, i32 0
  store i64 %113, i64* %114, align 8
  %115 = ashr i64 %102, 10
  %116 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %106, i64 %109, i32 1
  store i64 %115, i64* %116, align 8
  store i8 1, i8* %112, align 1
  br label %117

117:                                              ; preds = %93, %100
  %118 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %97, i64 0, i32 1
  %119 = load i16, i16* %118, align 2
  %120 = add i16 %119, 1
  store i16 %120, i16* %118, align 2
  br label %121

121:                                              ; preds = %45, %40, %22, %17, %117
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @ps_builder_close_contour(%struct.PS_Builder_* nocapture readonly) unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 5
  %3 = load %struct.FT_Outline_*, %struct.FT_Outline_** %2, align 8
  %4 = icmp eq %struct.FT_Outline_* %3, null
  br i1 %4, label %80, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 0
  %7 = load i16, i16* %6, align 8
  %8 = icmp slt i16 %7, 2
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = sext i16 %7 to i64
  %11 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %12 = load i16*, i16** %11, align 8
  %13 = add nsw i64 %10, -2
  %14 = getelementptr inbounds i16, i16* %12, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = sext i16 %15 to i32
  %17 = add nsw i32 %16, 1
  br label %23

18:                                               ; preds = %5
  %19 = icmp eq i16 %7, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %22 = load i16, i16* %21, align 2
  br label %31

23:                                               ; preds = %9, %18
  %24 = phi i32 [ %17, %9 ], [ 0, %18 ]
  %25 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = icmp eq i32 %24, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = add i16 %7, -1
  store i16 %30, i16* %6, align 8
  br label %80

31:                                               ; preds = %20, %23
  %32 = phi i16 [ %22, %20 ], [ %26, %23 ]
  %33 = phi i32 [ 0, %20 ], [ %24, %23 ]
  %34 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  %35 = icmp sgt i16 %32, 1
  br i1 %35, label %36, label %63

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 2
  %38 = load %struct.FT_Vector_*, %struct.FT_Vector_** %37, align 8
  %39 = sext i32 %33 to i64
  %40 = sext i16 %32 to i64
  %41 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %38, i64 %40
  %42 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %41, i64 -1
  %43 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 3
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %40
  %46 = getelementptr inbounds i8, i8* %45, i64 -1
  %47 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %38, i64 %39, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %42, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  br i1 %51, label %52, label %63

52:                                               ; preds = %36
  %53 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %38, i64 %39, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %42, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %54, %56
  br i1 %57, label %58, label %63

58:                                               ; preds = %52
  %59 = load i8, i8* %46, align 1
  %60 = icmp eq i8 %59, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = add nsw i16 %32, -1
  store i16 %62, i16* %34, align 2
  br label %63

63:                                               ; preds = %36, %52, %61, %58, %31
  %64 = phi i16 [ %32, %36 ], [ %32, %52 ], [ %62, %61 ], [ %32, %58 ], [ %32, %31 ]
  %65 = sext i16 %7 to i64
  %66 = icmp sgt i16 %7, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %63
  %68 = sext i16 %64 to i32
  %69 = add nsw i32 %68, -1
  %70 = icmp eq i32 %33, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %67
  %72 = add nsw i16 %7, -1
  store i16 %72, i16* %6, align 8
  %73 = add i16 %64, -1
  store i16 %73, i16* %34, align 2
  br label %80

74:                                               ; preds = %67
  %75 = trunc i32 %69 to i16
  %76 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %77 = load i16*, i16** %76, align 8
  %78 = add nsw i64 %65, -1
  %79 = getelementptr inbounds i16, i16* %77, i64 %78
  store i16 %75, i16* %79, align 2
  br label %80

80:                                               ; preds = %63, %74, %71, %1, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ps_builder_start_point(%struct.PS_Builder_* nocapture, i64, i64) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 11
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %91

7:                                                ; preds = %3
  store i8 1, i8* %4, align 8
  %8 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 5
  %9 = load %struct.FT_Outline_*, %struct.FT_Outline_** %8, align 8
  %10 = icmp eq %struct.FT_Outline_* %9, null
  br i1 %10, label %91, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 12
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 0
  br label %47

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 3
  %19 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %18, align 8
  %20 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %19, i64 0, i32 5, i32 0, i32 0
  %21 = load i16, i16* %20, align 8
  %22 = sext i16 %21 to i32
  %23 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %19, i64 0, i32 6, i32 0, i32 0
  %24 = load i16, i16* %23, align 8
  %25 = sext i16 %24 to i32
  %26 = add nsw i32 %22, 1
  %27 = add nsw i32 %26, %25
  %28 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %19, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %27, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %19, i32 0, i32 1) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %91

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 0
  %36 = load i16, i16* %35, align 8
  %37 = icmp sgt i16 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %34
  %39 = sext i16 %36 to i64
  %40 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 1
  %41 = load i16, i16* %40, align 2
  %42 = add i16 %41, -1
  %43 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 4
  %44 = load i16*, i16** %43, align 8
  %45 = add nsw i64 %39, -1
  %46 = getelementptr inbounds i16, i16* %44, i64 %45
  store i16 %42, i16* %46, align 2
  br label %47

47:                                               ; preds = %15, %38
  %48 = phi i16* [ %35, %38 ], [ %16, %15 ]
  %49 = load i16, i16* %48, align 8
  br label %50

50:                                               ; preds = %47, %34
  %51 = phi i16 [ %36, %34 ], [ %49, %47 ]
  %52 = phi i16* [ %35, %34 ], [ %48, %47 ]
  %53 = add i16 %51, 1
  store i16 %53, i16* %52, align 8
  %54 = getelementptr inbounds %struct.PS_Builder_, %struct.PS_Builder_* %0, i64 0, i32 3
  %55 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %54, align 8
  %56 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %55, i64 0, i32 5, i32 0, i32 1
  %57 = load i16, i16* %56, align 2
  %58 = sext i16 %57 to i32
  %59 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %55, i64 0, i32 6, i32 0, i32 1
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i32
  %62 = add nsw i32 %58, 1
  %63 = add nsw i32 %62, %61
  %64 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %55, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp ugt i32 %63, %65
  br i1 %66, label %67, label %70

67:                                               ; preds = %50
  %68 = tail call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %55, i32 1, i32 0) #11
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %91

70:                                               ; preds = %67, %50
  %71 = load %struct.FT_Outline_*, %struct.FT_Outline_** %8, align 8
  %72 = load i8, i8* %12, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %71, i64 0, i32 2
  %76 = load %struct.FT_Vector_*, %struct.FT_Vector_** %75, align 8
  %77 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %71, i64 0, i32 1
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i64
  %80 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %71, i64 0, i32 3
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %79
  %83 = ashr i64 %1, 10
  %84 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 %79, i32 0
  store i64 %83, i64* %84, align 8
  %85 = ashr i64 %2, 10
  %86 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %76, i64 %79, i32 1
  store i64 %85, i64* %86, align 8
  store i8 1, i8* %82, align 1
  br label %87

87:                                               ; preds = %74, %70
  %88 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %71, i64 0, i32 1
  %89 = load i16, i16* %88, align 2
  %90 = add i16 %89, 1
  store i16 %90, i16* %88, align 2
  br label %91

91:                                               ; preds = %87, %67, %31, %7, %3
  %92 = phi i32 [ 0, %3 ], [ 3, %7 ], [ %32, %31 ], [ %68, %67 ], [ 0, %87 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_interpT2CharString(%struct.CF2_FontRec_*, %struct.CF2_BufferRec_* nocapture readonly, %struct.CF2_OutlineCallbacksRec_*, %struct.FT_Vector_* readonly, i8 zeroext, i32, i32, i32* nocapture) unnamed_addr #0 {
  %9 = alloca %struct.FT_Data_, align 8
  %10 = alloca %struct.FT_Data_, align 8
  %11 = alloca %struct.FT_Data_, align 8
  %12 = alloca %struct.FT_Data_, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca [3 x i32], align 4
  %22 = alloca [32 x i32], align 16
  %23 = alloca [6 x i32], align 16
  %24 = alloca i8, align 1
  %25 = alloca %struct.CF2_ArrStackRec_, align 8
  %26 = alloca %struct.CF2_ArrStackRec_, align 8
  %27 = alloca %struct.CF2_HintMaskRec_, align 8
  %28 = alloca %struct.CF2_GlyphPathRec_, align 8
  %29 = alloca %struct.CF2_BufferRec_, align 8
  %30 = alloca i32, align 4
  %31 = alloca %struct.CF2_BufferRec_, align 8
  %32 = alloca i32, align 4
  %33 = alloca %struct.CF2_HintMapRec_, align 8
  %34 = alloca %struct.CF2_HintMaskRec_, align 8
  store i32 %5, i32* %19, align 4
  store i32 %6, i32* %20, align 4
  %35 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 17
  %36 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %35, align 8
  %37 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 1
  %38 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 0
  %39 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %38, align 8
  %40 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 6, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 9
  %43 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %42, align 8
  %44 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %43, i64 0, i32 1, i32 25
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = shl i32 %46, 16
  %48 = bitcast [3 x i32]* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %48) #11
  %49 = bitcast [32 x i32]* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %49) #11
  %50 = bitcast [6 x i32]* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  %51 = getelementptr inbounds [6 x i32], [6 x i32]* %23, i64 0, i64 0
  %52 = getelementptr inbounds [6 x i32], [6 x i32]* %23, i64 0, i64 1
  %53 = getelementptr inbounds [6 x i32], [6 x i32]* %23, i64 0, i64 2
  %54 = getelementptr inbounds [6 x i32], [6 x i32]* %23, i64 0, i64 3
  %55 = getelementptr inbounds [6 x i32], [6 x i32]* %23, i64 0, i64 4
  %56 = getelementptr inbounds [6 x i32], [6 x i32]* %23, i64 0, i64 5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #11
  store i8 -86, i8* %24, align 1
  %57 = bitcast %struct.CF2_ArrStackRec_* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %57) #11
  %58 = bitcast %struct.CF2_ArrStackRec_* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %58) #11
  %59 = bitcast %struct.CF2_HintMaskRec_* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #11
  %60 = bitcast %struct.CF2_GlyphPathRec_* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 18872, i8* nonnull %60) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 0, i64 128, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %48, i8 0, i64 12, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %50, i8 0, i64 24, i1 false)
  %61 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %25, i64 0, i32 0
  store %struct.FT_MemoryRec_* %39, %struct.FT_MemoryRec_** %61, align 8
  %62 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %25, i64 0, i32 1
  store i32* %37, i32** %62, align 8
  %63 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %25, i64 0, i32 2
  store i64 20, i64* %63, align 8
  %64 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %25, i64 0, i32 3
  %65 = bitcast i64* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 32, i1 false) #11
  %66 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %26, i64 0, i32 0
  store %struct.FT_MemoryRec_* %39, %struct.FT_MemoryRec_** %66, align 8
  %67 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %26, i64 0, i32 1
  store i32* %37, i32** %67, align 8
  %68 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %26, i64 0, i32 2
  store i64 20, i64* %68, align 8
  %69 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %26, i64 0, i32 3
  %70 = bitcast i64* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 32, i1 false) #11
  %71 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %27, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 40, i1 false) #11
  %72 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %27, i64 0, i32 0
  store i32* %37, i32** %72, align 8
  %73 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 28
  %74 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 2
  %75 = bitcast %struct.CF2_HintMapRec_* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 18856, i1 false) #11
  %76 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 0
  store %struct.CF2_FontRec_* %0, %struct.CF2_FontRec_** %76, align 8
  %77 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 1
  store %struct.CF2_OutlineCallbacksRec_* %2, %struct.CF2_OutlineCallbacksRec_** %77, align 8
  %78 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 5
  %79 = ptrtoint %struct.FT_MemoryRec_* %39 to i64
  %80 = bitcast %struct.CF2_ArrStackRec_* %78 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 5, i32 1
  store i32* %37, i32** %81, align 8
  %82 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 5, i32 2
  store i64 16, i64* %82, align 8
  %83 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 5, i32 3
  %84 = bitcast i64* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 32, i1 false) #11
  %85 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 4
  %86 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 4, i32 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 6160, i1 false) #11
  %87 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 19
  %88 = load i8, i8* %87, align 8
  %89 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 4, i32 4
  store i8 %88, i8* %89, align 1
  %90 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 4, i32 5
  store i32 %41, i32* %90, align 4
  %91 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %85, i64 0, i32 0
  store %struct.CF2_FontRec_* %0, %struct.CF2_FontRec_** %91, align 8
  %92 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 4, i32 1
  store %struct.CF2_HintMapRec_* %85, %struct.CF2_HintMapRec_** %92, align 8
  %93 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 4, i32 2
  store %struct.CF2_ArrStackRec_* %78, %struct.CF2_ArrStackRec_** %93, align 8
  %94 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 3
  %95 = bitcast %struct.CF2_HintMapRec_* %94 to i8*
  %96 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 3, i32 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 6160, i1 false) #11
  %97 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 3, i32 4
  store i8 %88, i8* %97, align 1
  %98 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 3, i32 5
  store i32 %41, i32* %98, align 4
  %99 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %94, i64 0, i32 0
  store %struct.CF2_FontRec_* %0, %struct.CF2_FontRec_** %99, align 8
  %100 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 3, i32 1
  store %struct.CF2_HintMapRec_* %85, %struct.CF2_HintMapRec_** %100, align 8
  %101 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 3, i32 2
  store %struct.CF2_ArrStackRec_* %78, %struct.CF2_ArrStackRec_** %101, align 8
  %102 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 2, i32 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 6160, i1 false) #11
  %103 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 2, i32 4
  store i8 %88, i8* %103, align 1
  %104 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 2, i32 5
  store i32 %41, i32* %104, align 4
  %105 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %74, i64 0, i32 0
  store %struct.CF2_FontRec_* %0, %struct.CF2_FontRec_** %105, align 8
  %106 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 2, i32 1
  store %struct.CF2_HintMapRec_* %85, %struct.CF2_HintMapRec_** %106, align 8
  %107 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 2, i32 2
  store %struct.CF2_ArrStackRec_* %78, %struct.CF2_ArrStackRec_** %107, align 8
  %108 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 6, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 6
  store i32 %109, i32* %110, align 8
  %111 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 6, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 7
  store i32 %112, i32* %113, align 4
  %114 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 8
  store i32 %41, i32* %114, align 8
  %115 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 9
  %116 = bitcast %struct.FT_Vector_* %115 to i8*
  %117 = bitcast %struct.FT_Vector_* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 16, i1 false) #11
  %118 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 14
  store %struct.CF2_ArrStackRec_* %25, %struct.CF2_ArrStackRec_** %118, align 8
  %119 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 15
  store %struct.CF2_ArrStackRec_* %26, %struct.CF2_ArrStackRec_** %119, align 8
  %120 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 16
  store %struct.CF2_HintMaskRec_* %27, %struct.CF2_HintMaskRec_** %120, align 8
  %121 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 17
  store i32 %6, i32* %121, align 8
  %122 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 18
  store %struct.CF2_BluesRec_* %73, %struct.CF2_BluesRec_** %122, align 8
  %123 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 20
  %124 = load i8, i8* %123, align 1
  %125 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 12
  store i8 %124, i8* %125, align 2
  %126 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 25
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 19
  store i32 %127, i32* %128, align 8
  %129 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 26
  %130 = load i32, i32* %129, align 8
  %131 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 20
  store i32 %130, i32* %131, align 4
  %132 = icmp slt i32 %127, 0
  %133 = sub i32 0, %127
  %134 = select i1 %132, i32 %133, i32 %127
  %135 = icmp slt i32 %130, 0
  %136 = sub i32 0, %130
  %137 = select i1 %135, i32 %136, i32 %130
  %138 = icmp sgt i32 %134, %137
  %139 = select i1 %138, i32 %134, i32 %137
  %140 = shl nsw i32 %139, 1
  %141 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 21
  store i32 %140, i32* %141, align 8
  %142 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 22
  store i32 6554, i32* %142, align 4
  %143 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 13
  store i8 1, i8* %143, align 1
  %144 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 10
  store i8 0, i8* %144, align 8
  %145 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 11
  store i8 0, i8* %145, align 1
  %146 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 28
  store i8 0, i8* %146, align 8
  %147 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 3
  %148 = load i8, i8* %147, align 1
  %149 = icmp ne i8 %148, 0
  %150 = zext i1 %149 to i8
  store i8 %150, i8* %24, align 1
  %151 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %42, align 8
  %152 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %151, i64 0, i32 1, i32 24
  %153 = load i64, i64* %152, align 8
  %154 = trunc i64 %153 to i32
  %155 = shl i32 %154, 16
  store i32 %155, i32* %7, align 4
  %156 = load i8, i8* %147, align 1
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %163, label %158

158:                                              ; preds = %8
  %159 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 8
  %160 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %159, align 8
  %161 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %160, i64 0, i32 26, i32 0, i32 40
  %162 = load i32, i32* %161, align 8
  br label %163

163:                                              ; preds = %8, %158
  %164 = phi i32 [ %162, %158 ], [ 48, %8 ]
  %165 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #11
  store i32 0, i32* %18, align 4
  %166 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %39, i64 40, i32* nonnull %18) #11
  %167 = bitcast i8* %166 to %struct.CF2_StackRec_*
  %168 = load i32, i32* %18, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %181

170:                                              ; preds = %163
  %171 = bitcast i8* %166 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %39, %struct.FT_MemoryRec_** %171, align 8
  %172 = getelementptr inbounds i8, i8* %166, i64 8
  %173 = bitcast i8* %172 to i32**
  store i32* %37, i32** %173, align 8
  %174 = zext i32 %164 to i64
  %175 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %39, i64 8, i64 0, i64 %174, i8* null, i32* nonnull %18) #11
  %176 = getelementptr inbounds i8, i8* %166, i64 16
  %177 = bitcast i8* %176 to i8**
  store i8* %175, i8** %177, align 8
  %178 = load i32, i32* %18, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %170
  call void @ft_mem_free(%struct.FT_MemoryRec_* %39, i8* %166) #11
  br label %181

181:                                              ; preds = %180, %163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #11
  br label %7435

182:                                              ; preds = %170
  %183 = ptrtoint i8* %175 to i64
  %184 = getelementptr inbounds i8, i8* %166, i64 32
  %185 = bitcast i8* %184 to i32*
  store i32 %164, i32* %185, align 8
  %186 = getelementptr inbounds i8, i8* %166, i64 24
  %187 = bitcast i8* %186 to i64*
  store i64 %183, i64* %187, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #11
  %188 = icmp eq i8* %166, null
  br i1 %188, label %7435, label %189

189:                                              ; preds = %182
  %190 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %190) #11
  store i32 0, i32* %17, align 4
  %191 = call i8* @ft_mem_qrealloc(%struct.FT_MemoryRec_* %39, i64 1, i64 0, i64 544, i8* null, i32* nonnull %17) #11
  %192 = load i32, i32* %17, align 4
  %193 = icmp eq i32 %192, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %190) #11
  br i1 %193, label %200, label %194

194:                                              ; preds = %189
  %195 = icmp eq i32* %37, null
  br i1 %195, label %200, label %196

196:                                              ; preds = %194
  %197 = load i32, i32* %37, align 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %7446

199:                                              ; preds = %196
  store i32 64, i32* %37, align 4
  br label %7446

200:                                              ; preds = %189, %194
  %201 = phi i64 [ 0, %194 ], [ 17, %189 ]
  %202 = load i32, i32* %37, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %7435

204:                                              ; preds = %200
  %205 = bitcast i8* %191 to %struct.CF2_BufferRec_*
  %206 = bitcast %struct.CF2_BufferRec_* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* align 8 %206, i64 32, i1 false)
  %207 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 2
  %208 = bitcast i8* %176 to i64*
  %209 = bitcast i8* %186 to %struct.CF2_StackNumber_**
  %210 = bitcast i8* %176 to %struct.CF2_StackNumber_**
  %211 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 12
  %212 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 5
  %213 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 27, i32 0
  %214 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 27, i32 1
  %215 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 23
  %216 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 24, i32 0
  %217 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 24, i32 1
  %218 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 25, i32 0
  %219 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 25, i32 1
  %220 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 2, i32 3
  %221 = bitcast %struct.CF2_HintMapRec_* %33 to i8*
  %222 = bitcast %struct.CF2_HintMaskRec_* %34 to i8*
  %223 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %33, i64 0, i32 4
  %224 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %33, i64 0, i32 5
  %225 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %33, i64 0, i32 0
  %226 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %33, i64 0, i32 1
  %227 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %33, i64 0, i32 2
  %228 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %34, i64 0, i32 1
  %229 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %34, i64 0, i32 0
  %230 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %25, i64 0, i32 4
  %231 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %26, i64 0, i32 4
  %232 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %34, i64 0, i32 3
  %233 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %34, i64 0, i32 4
  %234 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %34, i64 0, i32 2
  %235 = icmp eq i32* %37, null
  %236 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %27, i64 0, i32 3
  %237 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %27, i64 0, i32 4
  %238 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %27, i64 0, i32 2
  %239 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 0, i32 9
  %240 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 0, i32 8
  %241 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 0, i32 14
  %242 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 32
  %243 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 34
  %244 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 33
  %245 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 6
  %246 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 0, i32 3
  %247 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 29
  %248 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 16
  %249 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 14
  %250 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 18
  %251 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 0, i32 15
  %252 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 28
  %253 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 27
  %254 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 17
  %255 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 15
  %256 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 19
  %257 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 9
  %258 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 9, i32 2
  %259 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 29
  %260 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 10
  %261 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 11
  %262 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 12
  %263 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 9, i32 6
  %264 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 9, i32 7
  %265 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 9, i32 1
  %266 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %33, i64 0, i32 3
  br label %267

267:                                              ; preds = %4123, %204
  %268 = phi i32 [ 0, %204 ], [ %4124, %4123 ]
  %269 = phi %struct.CF2_BufferRec_* [ %205, %204 ], [ %4125, %4123 ]
  %270 = phi i32 [ 20000000, %204 ], [ %4126, %4123 ]
  %271 = phi i32 [ 0, %204 ], [ %4127, %4123 ]
  %272 = phi i8 [ 0, %204 ], [ %4128, %4123 ]
  %273 = phi i8 [ 0, %204 ], [ %4129, %4123 ]
  %274 = phi i32 [ 0, %204 ], [ %4130, %4123 ]
  %275 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 3
  %276 = load i8*, i8** %275, align 8
  %277 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 2
  %278 = load i8*, i8** %277, align 8
  %279 = icmp ult i8* %276, %278
  br i1 %279, label %283, label %280

280:                                              ; preds = %267
  %281 = icmp eq i32 %268, 0
  %282 = select i1 %281, i8 14, i8 11
  br label %290

283:                                              ; preds = %267
  %284 = getelementptr inbounds i8, i8* %276, i64 1
  store i8* %284, i8** %275, align 8
  %285 = load i8, i8* %276, align 1
  switch i8 %285, label %290 [
    i8 11, label %286
    i8 14, label %286
  ]

286:                                              ; preds = %283, %283
  %287 = load i8, i8* %147, align 1
  %288 = icmp eq i8 %287, 0
  %289 = select i1 %288, i8 %285, i8 0
  br label %290

290:                                              ; preds = %286, %283, %280
  %291 = phi i8* [ %276, %280 ], [ %284, %283 ], [ %284, %286 ]
  %292 = phi i8 [ %282, %280 ], [ %285, %283 ], [ %289, %286 ]
  %293 = load i8, i8* %207, align 4
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %322, label %295

295:                                              ; preds = %290
  %296 = icmp ne i8 %272, 0
  %297 = or i8 %292, 2
  %298 = icmp eq i8 %297, 3
  %299 = or i1 %296, %298
  %300 = icmp eq i8 %292, 13
  %301 = or i1 %300, %299
  %302 = or i8 %292, 1
  %303 = icmp eq i8 %302, 11
  %304 = or i1 %303, %301
  %305 = icmp eq i8 %292, 12
  %306 = icmp eq i8 %297, 14
  %307 = or i1 %306, %304
  %308 = icmp ugt i8 %292, 31
  %309 = or i1 %308, %307
  br i1 %309, label %312, label %310

310:                                              ; preds = %295
  %311 = load i64, i64* %208, align 8
  store i64 %311, i64* %187, align 8
  br label %4123

312:                                              ; preds = %295
  %313 = icmp slt i32 %271, 1
  %314 = or i1 %313, %303
  %315 = or i1 %305, %314
  %316 = or i1 %308, %315
  %317 = select i1 %316, i32 %271, i32 0
  %318 = icmp eq i8 %273, 0
  %319 = or i1 %318, %308
  %320 = or i1 %305, %319
  %321 = select i1 %320, i8 %273, i8 0
  br label %322

322:                                              ; preds = %312, %290
  %323 = phi i32 [ %271, %290 ], [ %317, %312 ]
  %324 = phi i8 [ %273, %290 ], [ %321, %312 ]
  %325 = load i32, i32* %37, align 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %7435

327:                                              ; preds = %322
  %328 = add i32 %270, -1
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %7435, label %330

330:                                              ; preds = %327
  %331 = zext i8 %292 to i32
  switch i8 %292, label %7198 [
    i8 0, label %7429
    i8 2, label %7429
    i8 17, label %7429
    i8 15, label %332
    i8 16, label %367
    i8 18, label %581
    i8 1, label %581
    i8 23, label %594
    i8 3, label %594
    i8 4, label %607
    i8 5, label %706
    i8 6, label %803
    i8 7, label %803
    i8 24, label %869
    i8 8, label %869
    i8 9, label %1202
    i8 29, label %1218
    i8 10, label %1218
    i8 11, label %1353
    i8 12, label %1367
    i8 13, label %5126
    i8 14, label %5206
    i8 20, label %5612
    i8 19, label %5612
    i8 21, label %5709
    i8 22, label %5846
    i8 25, label %5945
    i8 26, label %6281
    i8 27, label %6499
    i8 30, label %6717
    i8 31, label %6717
    i8 28, label %7140
  ]

332:                                              ; preds = %330
  %333 = load i8, i8* %147, align 1
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %7429, label %335

335:                                              ; preds = %332
  %336 = load i8, i8* %265, align 1
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %338, label %7435

338:                                              ; preds = %335
  %339 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %340 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %341 = icmp eq %struct.CF2_StackNumber_* %339, %340
  br i1 %341, label %342, label %349

342:                                              ; preds = %338
  %343 = load i32*, i32** %173, align 8
  %344 = icmp eq i32* %343, null
  br i1 %344, label %365, label %345

345:                                              ; preds = %342
  %346 = load i32, i32* %343, align 4
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %365

348:                                              ; preds = %345
  store i32 161, i32* %343, align 4
  br label %365

349:                                              ; preds = %338
  %350 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %339, i64 -1, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 2
  br i1 %352, label %360, label %353

353:                                              ; preds = %349
  %354 = load i32*, i32** %173, align 8
  %355 = icmp eq i32* %354, null
  br i1 %355, label %365, label %356

356:                                              ; preds = %353
  %357 = load i32, i32* %354, align 4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %365

359:                                              ; preds = %356
  store i32 160, i32* %354, align 4
  br label %365

360:                                              ; preds = %349
  %361 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %339, i64 -1
  store %struct.CF2_StackNumber_* %361, %struct.CF2_StackNumber_** %209, align 8
  %362 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %361, i64 0, i32 0, i32 0
  %363 = load i32, i32* %362, align 4
  %364 = icmp sgt i32 %363, -1
  br i1 %364, label %365, label %7429

365:                                              ; preds = %359, %356, %353, %348, %345, %342, %360
  %366 = phi i32 [ %363, %360 ], [ 0, %342 ], [ 0, %345 ], [ 0, %348 ], [ 0, %353 ], [ 0, %356 ], [ 0, %359 ]
  store i32 %366, i32* %260, align 8
  br label %7429

367:                                              ; preds = %330
  %368 = load i8, i8* %147, align 1
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %7429, label %370

370:                                              ; preds = %367
  %371 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %258, align 8
  %372 = icmp eq %struct.CFF_FontRec_* %371, null
  br i1 %372, label %7435, label %373

373:                                              ; preds = %370
  %374 = load %struct.FT_Service_CFFLoadRec_*, %struct.FT_Service_CFFLoadRec_** %259, align 8
  %375 = getelementptr inbounds %struct.FT_Service_CFFLoadRec_, %struct.FT_Service_CFFLoadRec_* %374, i64 0, i32 3
  %376 = load i8 (%struct.CFF_BlendRec_*, i32, i32, i64*)*, i8 (%struct.CFF_BlendRec_*, i32, i32, i64*)** %375, align 8
  %377 = load i32, i32* %260, align 8
  %378 = load i32, i32* %261, align 4
  %379 = load i64*, i64** %262, align 8
  %380 = call zeroext i8 %376(%struct.CFF_BlendRec_* %257, i32 %377, i32 %378, i64* %379) #11
  %381 = icmp eq i8 %380, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %373
  %383 = load %struct.FT_Service_CFFLoadRec_*, %struct.FT_Service_CFFLoadRec_** %259, align 8
  %384 = getelementptr inbounds %struct.FT_Service_CFFLoadRec_, %struct.FT_Service_CFFLoadRec_* %383, i64 0, i32 4
  %385 = load i32 (%struct.CFF_BlendRec_*, i32, i32, i64*)*, i32 (%struct.CFF_BlendRec_*, i32, i32, i64*)** %384, align 8
  %386 = load i32, i32* %260, align 8
  %387 = load i32, i32* %261, align 4
  %388 = load i64*, i64** %262, align 8
  %389 = call i32 %385(%struct.CFF_BlendRec_* %257, i32 %386, i32 %387, i64* %388) #11
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %7435

391:                                              ; preds = %382, %373
  %392 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %393 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %394 = icmp eq %struct.CF2_StackNumber_* %392, %393
  br i1 %394, label %395, label %402

395:                                              ; preds = %391
  %396 = load i32*, i32** %173, align 8
  %397 = icmp eq i32* %396, null
  br i1 %397, label %418, label %398

398:                                              ; preds = %395
  %399 = load i32, i32* %396, align 4
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %418

401:                                              ; preds = %398
  store i32 161, i32* %396, align 4
  br label %418

402:                                              ; preds = %391
  %403 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %392, i64 -1, i32 1
  %404 = load i32, i32* %403, align 4
  %405 = icmp eq i32 %404, 2
  br i1 %405, label %413, label %406

406:                                              ; preds = %402
  %407 = load i32*, i32** %173, align 8
  %408 = icmp eq i32* %407, null
  br i1 %408, label %418, label %409

409:                                              ; preds = %406
  %410 = load i32, i32* %407, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %418

412:                                              ; preds = %409
  store i32 160, i32* %407, align 4
  br label %418

413:                                              ; preds = %402
  %414 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %392, i64 -1
  store %struct.CF2_StackNumber_* %414, %struct.CF2_StackNumber_** %209, align 8
  %415 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %414, i64 0, i32 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = icmp ugt i32 %416, %164
  br i1 %417, label %7435, label %418

418:                                              ; preds = %412, %409, %406, %401, %398, %395, %413
  %419 = phi i32 [ %416, %413 ], [ 0, %395 ], [ 0, %398 ], [ 0, %401 ], [ 0, %406 ], [ 0, %409 ], [ 0, %412 ]
  %420 = load i32, i32* %263, align 8
  %421 = mul i32 %420, %419
  %422 = load i64, i64* %187, align 8
  %423 = load i64, i64* %208, align 8
  %424 = sub i64 %422, %423
  %425 = lshr exact i64 %424, 3
  %426 = trunc i64 %425 to i32
  %427 = sub i32 %426, %421
  %428 = icmp eq i32 %419, 0
  br i1 %428, label %563, label %429

429:                                              ; preds = %418
  %430 = add i32 %427, %419
  %431 = zext i32 %419 to i64
  br label %432

432:                                              ; preds = %554, %429
  %433 = phi i64 [ %423, %429 ], [ %558, %554 ]
  %434 = phi i64 [ %422, %429 ], [ %557, %554 ]
  %435 = phi i64 [ 0, %429 ], [ %555, %554 ]
  %436 = phi i32 [ %430, %429 ], [ %533, %554 ]
  %437 = load i32*, i32** %264, align 8
  %438 = trunc i64 %435 to i32
  %439 = add i32 %427, %438
  %440 = sub i64 %434, %433
  %441 = lshr exact i64 %440, 3
  %442 = trunc i64 %441 to i32
  %443 = icmp ult i32 %439, %442
  %444 = inttoptr i64 %433 to %struct.CF2_StackNumber_*
  br i1 %443, label %452, label %445

445:                                              ; preds = %432
  %446 = load i32*, i32** %173, align 8
  %447 = icmp eq i32* %446, null
  br i1 %447, label %471, label %448

448:                                              ; preds = %445
  %449 = load i32, i32* %446, align 4
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %471

451:                                              ; preds = %448
  store i32 130, i32* %446, align 4
  br label %471

452:                                              ; preds = %432
  %453 = zext i32 %439 to i64
  %454 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %444, i64 %453
  %455 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %444, i64 %453, i32 1
  %456 = load i32, i32* %455, align 4
  switch i32 %456, label %468 [
    i32 2, label %457
    i32 1, label %461
  ]

457:                                              ; preds = %452
  %458 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %454, i64 0, i32 0, i32 0
  %459 = load i32, i32* %458, align 4
  %460 = shl i32 %459, 16
  br label %471

461:                                              ; preds = %452
  %462 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %454, i64 0, i32 0, i32 0
  %463 = load i32, i32* %462, align 4
  %464 = add nsw i32 %463, 8192
  %465 = ashr i32 %463, 31
  %466 = add nsw i32 %464, %465
  %467 = ashr i32 %466, 14
  br label %471

468:                                              ; preds = %452
  %469 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %454, i64 0, i32 0, i32 0
  %470 = load i32, i32* %469, align 4
  br label %471

471:                                              ; preds = %468, %461, %457, %451, %448, %445
  %472 = phi i32 [ %470, %468 ], [ %467, %461 ], [ %460, %457 ], [ 0, %445 ], [ 0, %448 ], [ 0, %451 ]
  %473 = load i32, i32* %263, align 8
  %474 = icmp ugt i32 %473, 1
  br i1 %474, label %475, label %532

475:                                              ; preds = %471, %518
  %476 = phi i32 [ %519, %518 ], [ %473, %471 ]
  %477 = phi i32* [ %481, %518 ], [ %437, %471 ]
  %478 = phi i32 [ %529, %518 ], [ %472, %471 ]
  %479 = phi i32 [ %530, %518 ], [ 1, %471 ]
  %480 = phi i32 [ %483, %518 ], [ %436, %471 ]
  %481 = getelementptr inbounds i32, i32* %477, i64 1
  %482 = load i32, i32* %481, align 4
  %483 = add i32 %480, 1
  %484 = load i64, i64* %187, align 8
  %485 = load i64, i64* %208, align 8
  %486 = sub i64 %484, %485
  %487 = lshr exact i64 %486, 3
  %488 = trunc i64 %487 to i32
  %489 = icmp ult i32 %480, %488
  %490 = inttoptr i64 %485 to %struct.CF2_StackNumber_*
  br i1 %489, label %499, label %491

491:                                              ; preds = %475
  %492 = load i32*, i32** %173, align 8
  %493 = icmp eq i32* %492, null
  br i1 %493, label %518, label %494

494:                                              ; preds = %491
  %495 = load i32, i32* %492, align 4
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %518

497:                                              ; preds = %494
  store i32 130, i32* %492, align 4
  %498 = load i32, i32* %263, align 8
  br label %518

499:                                              ; preds = %475
  %500 = zext i32 %480 to i64
  %501 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %490, i64 %500
  %502 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %490, i64 %500, i32 1
  %503 = load i32, i32* %502, align 4
  switch i32 %503, label %515 [
    i32 2, label %504
    i32 1, label %508
  ]

504:                                              ; preds = %499
  %505 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %501, i64 0, i32 0, i32 0
  %506 = load i32, i32* %505, align 4
  %507 = shl i32 %506, 16
  br label %518

508:                                              ; preds = %499
  %509 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %501, i64 0, i32 0, i32 0
  %510 = load i32, i32* %509, align 4
  %511 = add nsw i32 %510, 8192
  %512 = ashr i32 %510, 31
  %513 = add nsw i32 %511, %512
  %514 = ashr i32 %513, 14
  br label %518

515:                                              ; preds = %499
  %516 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %501, i64 0, i32 0, i32 0
  %517 = load i32, i32* %516, align 4
  br label %518

518:                                              ; preds = %515, %508, %504, %497, %494, %491
  %519 = phi i32 [ %476, %515 ], [ %476, %508 ], [ %476, %504 ], [ %476, %491 ], [ %476, %494 ], [ %498, %497 ]
  %520 = phi i32 [ %517, %515 ], [ %514, %508 ], [ %507, %504 ], [ 0, %491 ], [ 0, %494 ], [ 0, %497 ]
  %521 = sext i32 %482 to i64
  %522 = sext i32 %520 to i64
  %523 = mul nsw i64 %522, %521
  %524 = ashr i64 %523, 63
  %525 = add nsw i64 %523, 32768
  %526 = add nsw i64 %525, %524
  %527 = lshr i64 %526, 16
  %528 = trunc i64 %527 to i32
  %529 = add i32 %478, %528
  %530 = add nuw i32 %479, 1
  %531 = icmp ult i32 %530, %519
  br i1 %531, label %475, label %532

532:                                              ; preds = %518, %471
  %533 = phi i32 [ %436, %471 ], [ %483, %518 ]
  %534 = phi i32 [ %472, %471 ], [ %529, %518 ]
  %535 = load i64, i64* %187, align 8
  %536 = load i64, i64* %208, align 8
  %537 = sub i64 %535, %536
  %538 = lshr exact i64 %537, 3
  %539 = trunc i64 %538 to i32
  %540 = icmp ugt i32 %439, %539
  br i1 %540, label %541, label %548

541:                                              ; preds = %532
  %542 = load i32*, i32** %173, align 8
  %543 = icmp eq i32* %542, null
  br i1 %543, label %554, label %544

544:                                              ; preds = %541
  %545 = load i32, i32* %542, align 4
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %554

547:                                              ; preds = %544
  store i32 130, i32* %542, align 4
  br label %554

548:                                              ; preds = %532
  %549 = inttoptr i64 %536 to %struct.CF2_StackNumber_*
  %550 = zext i32 %439 to i64
  %551 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %549, i64 %550, i32 0, i32 0
  store i32 %534, i32* %551, align 4
  %552 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %553 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %552, i64 %550, i32 1
  store i32 0, i32* %553, align 4
  br label %554

554:                                              ; preds = %548, %547, %544, %541
  %555 = add nuw nsw i64 %435, 1
  %556 = icmp eq i64 %555, %431
  %557 = load i64, i64* %187, align 8
  %558 = load i64, i64* %208, align 8
  br i1 %556, label %559, label %432

559:                                              ; preds = %554
  %560 = sub i64 %557, %558
  %561 = lshr exact i64 %560, 3
  %562 = trunc i64 %561 to i32
  br label %563

563:                                              ; preds = %559, %418
  %564 = phi i32 [ %562, %559 ], [ %426, %418 ]
  %565 = phi i64 [ %557, %559 ], [ %422, %418 ]
  %566 = sub i32 %421, %419
  %567 = icmp ugt i32 %566, %564
  br i1 %567, label %568, label %575

568:                                              ; preds = %563
  %569 = load i32*, i32** %173, align 8
  %570 = icmp eq i32* %569, null
  br i1 %570, label %580, label %571

571:                                              ; preds = %568
  %572 = load i32, i32* %569, align 4
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %580

574:                                              ; preds = %571
  store i32 161, i32* %569, align 4
  br label %580

575:                                              ; preds = %563
  %576 = inttoptr i64 %565 to %struct.CF2_StackNumber_*
  %577 = zext i32 %566 to i64
  %578 = sub nsw i64 0, %577
  %579 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %576, i64 %578
  store %struct.CF2_StackNumber_* %579, %struct.CF2_StackNumber_** %209, align 8
  br label %580

580:                                              ; preds = %575, %574, %571, %568
  store i8 1, i8* %265, align 1
  br label %4123

581:                                              ; preds = %330, %330
  br i1 %294, label %582, label %585

582:                                              ; preds = %581
  %583 = load i8, i8* %71, align 8
  %584 = icmp eq i8 %583, 0
  br i1 %584, label %589, label %7429

585:                                              ; preds = %581
  %586 = load %struct.FT_Vector_*, %struct.FT_Vector_** %240, align 8
  %587 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %586, i64 0, i32 1
  %588 = load i64, i64* %587, align 8
  br label %589

589:                                              ; preds = %582, %585
  %590 = phi i64 [ %588, %585 ], [ 0, %582 ]
  %591 = trunc i64 %590 to i32
  call fastcc void @cf2_doStems(%struct.CF2_FontRec_* %0, %struct.CF2_StackRec_* nonnull %167, %struct.CF2_ArrStackRec_* nonnull %25, i32* %7, i8* nonnull %24, i32 %591)
  %592 = load i8, i8* %211, align 8
  %593 = icmp eq i8 %592, 0
  br i1 %593, label %7429, label %7435

594:                                              ; preds = %330, %330
  br i1 %294, label %595, label %598

595:                                              ; preds = %594
  %596 = load i8, i8* %71, align 8
  %597 = icmp eq i8 %596, 0
  br i1 %597, label %602, label %7429

598:                                              ; preds = %594
  %599 = load %struct.FT_Vector_*, %struct.FT_Vector_** %240, align 8
  %600 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %599, i64 0, i32 0
  %601 = load i64, i64* %600, align 8
  br label %602

602:                                              ; preds = %595, %598
  %603 = phi i64 [ %601, %598 ], [ 0, %595 ]
  %604 = trunc i64 %603 to i32
  call fastcc void @cf2_doStems(%struct.CF2_FontRec_* %0, %struct.CF2_StackRec_* nonnull %167, %struct.CF2_ArrStackRec_* nonnull %26, i32* %7, i8* nonnull %24, i32 %604)
  %605 = load i8, i8* %211, align 8
  %606 = icmp eq i8 %605, 0
  br i1 %606, label %7429, label %7435

607:                                              ; preds = %330
  %608 = load i64, i64* %187, align 8
  %609 = load i64, i64* %208, align 8
  %610 = sub i64 %608, %609
  %611 = lshr exact i64 %610, 3
  %612 = trunc i64 %611 to i32
  %613 = icmp ult i32 %612, 2
  %614 = load i8, i8* %24, align 1
  %615 = icmp ne i8 %614, 0
  %616 = or i1 %615, %613
  br i1 %616, label %638, label %617

617:                                              ; preds = %607
  %618 = inttoptr i64 %609 to %struct.CF2_StackNumber_*
  %619 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %618, i64 0, i32 1
  %620 = load i32, i32* %619, align 4
  switch i32 %620, label %632 [
    i32 2, label %621
    i32 1, label %625
  ]

621:                                              ; preds = %617
  %622 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %618, i64 0, i32 0, i32 0
  %623 = load i32, i32* %622, align 4
  %624 = shl i32 %623, 16
  br label %635

625:                                              ; preds = %617
  %626 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %618, i64 0, i32 0, i32 0
  %627 = load i32, i32* %626, align 4
  %628 = add nsw i32 %627, 8192
  %629 = ashr i32 %627, 31
  %630 = add nsw i32 %628, %629
  %631 = ashr i32 %630, 14
  br label %635

632:                                              ; preds = %617
  %633 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %618, i64 0, i32 0, i32 0
  %634 = load i32, i32* %633, align 4
  br label %635

635:                                              ; preds = %621, %625, %632
  %636 = phi i32 [ %634, %632 ], [ %631, %625 ], [ %624, %621 ]
  %637 = add i32 %636, %47
  store i32 %637, i32* %7, align 4
  br label %638

638:                                              ; preds = %607, %635
  store i8 1, i8* %24, align 1
  %639 = load i8, i8* %211, align 8
  %640 = icmp eq i8 %639, 0
  br i1 %640, label %641, label %7435

641:                                              ; preds = %638
  %642 = load i32, i32* %20, align 4
  %643 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %644 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %645 = icmp eq %struct.CF2_StackNumber_* %643, %644
  br i1 %645, label %646, label %653

646:                                              ; preds = %641
  %647 = load i32*, i32** %173, align 8
  %648 = icmp eq i32* %647, null
  br i1 %648, label %671, label %649

649:                                              ; preds = %646
  %650 = load i32, i32* %647, align 4
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %652, label %671

652:                                              ; preds = %649
  store i32 161, i32* %647, align 4
  br label %671

653:                                              ; preds = %641
  %654 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %643, i64 -1
  store %struct.CF2_StackNumber_* %654, %struct.CF2_StackNumber_** %209, align 8
  %655 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %643, i64 -1, i32 1
  %656 = load i32, i32* %655, align 4
  switch i32 %656, label %668 [
    i32 2, label %657
    i32 1, label %661
  ]

657:                                              ; preds = %653
  %658 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %654, i64 0, i32 0, i32 0
  %659 = load i32, i32* %658, align 4
  %660 = shl i32 %659, 16
  br label %671

661:                                              ; preds = %653
  %662 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %654, i64 0, i32 0, i32 0
  %663 = load i32, i32* %662, align 4
  %664 = add nsw i32 %663, 8192
  %665 = ashr i32 %663, 31
  %666 = add nsw i32 %664, %665
  %667 = ashr i32 %666, 14
  br label %671

668:                                              ; preds = %653
  %669 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %654, i64 0, i32 0, i32 0
  %670 = load i32, i32* %669, align 4
  br label %671

671:                                              ; preds = %646, %649, %652, %657, %661, %668
  %672 = phi i32 [ %670, %668 ], [ %667, %661 ], [ %660, %657 ], [ 0, %646 ], [ 0, %649 ], [ 0, %652 ]
  %673 = add i32 %672, %642
  store i32 %673, i32* %20, align 4
  %674 = load i32, i32* %212, align 8
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %7429

676:                                              ; preds = %671
  %677 = load i32, i32* %19, align 4
  %678 = load i8, i8* %144, align 8
  %679 = icmp eq i8 %678, 0
  br i1 %679, label %691, label %680

680:                                              ; preds = %676
  store i8 1, i8* %145, align 1
  %681 = load i64, i64* %213, align 8
  %682 = trunc i64 %681 to i32
  %683 = load i64, i64* %214, align 8
  %684 = trunc i64 %683 to i32
  call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %682, i32 %684) #11
  %685 = load i8, i8* %146, align 8
  %686 = icmp eq i8 %685, 0
  br i1 %686, label %690, label %687

687:                                              ; preds = %680
  %688 = load i64, i64* %216, align 8
  %689 = load i64, i64* %217, align 8
  call fastcc void @cf2_glyphpath_pushPrevElem(%struct.CF2_GlyphPathRec_* nonnull %28, %struct.CF2_HintMapRec_* %74, %struct.FT_Vector_* %215, i64 %688, i64 %689, i8 zeroext 1) #11
  br label %690

690:                                              ; preds = %687, %680
  store i8 1, i8* %143, align 1
  store i8 0, i8* %144, align 8
  store i8 0, i8* %145, align 1
  store i8 0, i8* %146, align 8
  br label %691

691:                                              ; preds = %676, %690
  %692 = sext i32 %677 to i64
  store i64 %692, i64* %213, align 8
  store i64 %692, i64* %218, align 8
  %693 = sext i32 %673 to i64
  store i64 %693, i64* %214, align 8
  store i64 %693, i64* %219, align 8
  store i8 1, i8* %143, align 1
  %694 = load i8, i8* %220, align 8
  %695 = icmp eq i8 %694, 0
  %696 = load %struct.CF2_HintMaskRec_*, %struct.CF2_HintMaskRec_** %120, align 8
  br i1 %695, label %701, label %697

697:                                              ; preds = %691
  %698 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %696, i64 0, i32 2
  %699 = load i8, i8* %698, align 1
  %700 = icmp eq i8 %699, 0
  br i1 %700, label %705, label %701

701:                                              ; preds = %697, %691
  %702 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %118, align 8
  %703 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %119, align 8
  %704 = load i32, i32* %121, align 8
  call fastcc void @cf2_hintmap_build(%struct.CF2_HintMapRec_* %74, %struct.CF2_ArrStackRec_* %702, %struct.CF2_ArrStackRec_* %703, %struct.CF2_HintMaskRec_* %696, i32 %704, i8 zeroext 0) #11
  br label %705

705:                                              ; preds = %697, %701
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %75, i64 6184, i1 false) #11
  br label %7429

706:                                              ; preds = %330
  %707 = load i64, i64* %187, align 8
  %708 = load i64, i64* %208, align 8
  %709 = sub i64 %707, %708
  %710 = lshr exact i64 %709, 3
  %711 = trunc i64 %710 to i32
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %801, label %713

713:                                              ; preds = %706, %796
  %714 = phi i64 [ %798, %796 ], [ %708, %706 ]
  %715 = phi i64 [ %797, %796 ], [ %707, %706 ]
  %716 = phi i32 [ %794, %796 ], [ 0, %706 ]
  %717 = load i32, i32* %19, align 4
  %718 = sub i64 %715, %714
  %719 = lshr exact i64 %718, 3
  %720 = trunc i64 %719 to i32
  %721 = icmp ult i32 %716, %720
  %722 = inttoptr i64 %714 to %struct.CF2_StackNumber_*
  br i1 %721, label %736, label %723

723:                                              ; preds = %713
  %724 = load i32*, i32** %173, align 8
  %725 = icmp eq i32* %724, null
  br i1 %725, label %755, label %726

726:                                              ; preds = %723
  %727 = load i32, i32* %724, align 4
  %728 = icmp eq i32 %727, 0
  br i1 %728, label %729, label %755

729:                                              ; preds = %726
  store i32 130, i32* %724, align 4
  %730 = load i64, i64* %187, align 8
  %731 = load i64, i64* %208, align 8
  %732 = sub i64 %730, %731
  %733 = lshr exact i64 %732, 3
  %734 = trunc i64 %733 to i32
  %735 = inttoptr i64 %731 to %struct.CF2_StackNumber_*
  br label %755

736:                                              ; preds = %713
  %737 = zext i32 %716 to i64
  %738 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %722, i64 %737
  %739 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %722, i64 %737, i32 1
  %740 = load i32, i32* %739, align 4
  switch i32 %740, label %752 [
    i32 2, label %741
    i32 1, label %745
  ]

741:                                              ; preds = %736
  %742 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %738, i64 0, i32 0, i32 0
  %743 = load i32, i32* %742, align 4
  %744 = shl i32 %743, 16
  br label %755

745:                                              ; preds = %736
  %746 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %738, i64 0, i32 0, i32 0
  %747 = load i32, i32* %746, align 4
  %748 = add nsw i32 %747, 8192
  %749 = ashr i32 %747, 31
  %750 = add nsw i32 %748, %749
  %751 = ashr i32 %750, 14
  br label %755

752:                                              ; preds = %736
  %753 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %738, i64 0, i32 0, i32 0
  %754 = load i32, i32* %753, align 4
  br label %755

755:                                              ; preds = %723, %726, %729, %741, %745, %752
  %756 = phi %struct.CF2_StackNumber_* [ %722, %723 ], [ %722, %726 ], [ %735, %729 ], [ %722, %741 ], [ %722, %745 ], [ %722, %752 ]
  %757 = phi i32 [ %720, %723 ], [ %720, %726 ], [ %734, %729 ], [ %720, %741 ], [ %720, %745 ], [ %720, %752 ]
  %758 = phi i32 [ 0, %723 ], [ 0, %726 ], [ 0, %729 ], [ %744, %741 ], [ %751, %745 ], [ %754, %752 ]
  %759 = add i32 %758, %717
  store i32 %759, i32* %19, align 4
  %760 = load i32, i32* %20, align 4
  %761 = or i32 %716, 1
  %762 = icmp ult i32 %761, %757
  br i1 %762, label %771, label %763

763:                                              ; preds = %755
  %764 = load i32*, i32** %173, align 8
  %765 = icmp eq i32* %764, null
  br i1 %765, label %790, label %766

766:                                              ; preds = %763
  %767 = load i32, i32* %764, align 4
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %769, label %790

769:                                              ; preds = %766
  store i32 130, i32* %764, align 4
  %770 = load i32, i32* %19, align 4
  br label %790

771:                                              ; preds = %755
  %772 = zext i32 %761 to i64
  %773 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %756, i64 %772
  %774 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %756, i64 %772, i32 1
  %775 = load i32, i32* %774, align 4
  switch i32 %775, label %787 [
    i32 2, label %776
    i32 1, label %780
  ]

776:                                              ; preds = %771
  %777 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %773, i64 0, i32 0, i32 0
  %778 = load i32, i32* %777, align 4
  %779 = shl i32 %778, 16
  br label %790

780:                                              ; preds = %771
  %781 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %773, i64 0, i32 0, i32 0
  %782 = load i32, i32* %781, align 4
  %783 = add nsw i32 %782, 8192
  %784 = ashr i32 %782, 31
  %785 = add nsw i32 %783, %784
  %786 = ashr i32 %785, 14
  br label %790

787:                                              ; preds = %771
  %788 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %773, i64 0, i32 0, i32 0
  %789 = load i32, i32* %788, align 4
  br label %790

790:                                              ; preds = %763, %766, %769, %776, %780, %787
  %791 = phi i32 [ %759, %787 ], [ %759, %780 ], [ %759, %776 ], [ %759, %763 ], [ %759, %766 ], [ %770, %769 ]
  %792 = phi i32 [ %789, %787 ], [ %786, %780 ], [ %779, %776 ], [ 0, %763 ], [ 0, %766 ], [ 0, %769 ]
  %793 = add i32 %792, %760
  store i32 %793, i32* %20, align 4
  call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %791, i32 %793)
  %794 = add i32 %716, 2
  %795 = icmp ult i32 %794, %711
  br i1 %795, label %796, label %799

796:                                              ; preds = %790
  %797 = load i64, i64* %187, align 8
  %798 = load i64, i64* %208, align 8
  br label %713

799:                                              ; preds = %790
  %800 = load i64, i64* %208, align 8
  br label %801

801:                                              ; preds = %799, %706
  %802 = phi i64 [ %800, %799 ], [ %708, %706 ]
  store i64 %802, i64* %187, align 8
  br label %4123

803:                                              ; preds = %330, %330
  %804 = load i64, i64* %187, align 8
  %805 = load i64, i64* %208, align 8
  %806 = sub i64 %804, %805
  %807 = lshr exact i64 %806, 3
  %808 = trunc i64 %807 to i32
  %809 = icmp eq i32 %808, 0
  br i1 %809, label %867, label %810

810:                                              ; preds = %803
  %811 = icmp eq i8 %292, 6
  %812 = and i64 %807, 4294967295
  br label %813

813:                                              ; preds = %861, %810
  %814 = phi i64 [ %805, %810 ], [ %864, %861 ]
  %815 = phi i64 [ %804, %810 ], [ %863, %861 ]
  %816 = phi i64 [ 0, %810 ], [ %859, %861 ]
  %817 = phi i1 [ %811, %810 ], [ %862, %861 ]
  %818 = sub i64 %815, %814
  %819 = lshr exact i64 %818, 3
  %820 = and i64 %819, 4294967295
  %821 = icmp ult i64 %816, %820
  %822 = inttoptr i64 %814 to %struct.CF2_StackNumber_*
  br i1 %821, label %830, label %823

823:                                              ; preds = %813
  %824 = load i32*, i32** %173, align 8
  %825 = icmp eq i32* %824, null
  br i1 %825, label %848, label %826

826:                                              ; preds = %823
  %827 = load i32, i32* %824, align 4
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %829, label %848

829:                                              ; preds = %826
  store i32 130, i32* %824, align 4
  br label %848

830:                                              ; preds = %813
  %831 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %822, i64 %816
  %832 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %822, i64 %816, i32 1
  %833 = load i32, i32* %832, align 4
  switch i32 %833, label %845 [
    i32 2, label %834
    i32 1, label %838
  ]

834:                                              ; preds = %830
  %835 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %831, i64 0, i32 0, i32 0
  %836 = load i32, i32* %835, align 4
  %837 = shl i32 %836, 16
  br label %848

838:                                              ; preds = %830
  %839 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %831, i64 0, i32 0, i32 0
  %840 = load i32, i32* %839, align 4
  %841 = add nsw i32 %840, 8192
  %842 = ashr i32 %840, 31
  %843 = add nsw i32 %841, %842
  %844 = ashr i32 %843, 14
  br label %848

845:                                              ; preds = %830
  %846 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %831, i64 0, i32 0, i32 0
  %847 = load i32, i32* %846, align 4
  br label %848

848:                                              ; preds = %823, %826, %829, %834, %838, %845
  %849 = phi i32 [ %847, %845 ], [ %844, %838 ], [ %837, %834 ], [ 0, %823 ], [ 0, %826 ], [ 0, %829 ]
  br i1 %817, label %850, label %853

850:                                              ; preds = %848
  %851 = load i32, i32* %19, align 4
  %852 = add i32 %851, %849
  store i32 %852, i32* %19, align 4
  br label %856

853:                                              ; preds = %848
  %854 = load i32, i32* %20, align 4
  %855 = add i32 %854, %849
  store i32 %855, i32* %20, align 4
  br label %856

856:                                              ; preds = %853, %850
  %857 = load i32, i32* %19, align 4
  %858 = load i32, i32* %20, align 4
  call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %857, i32 %858)
  %859 = add nuw nsw i64 %816, 1
  %860 = icmp eq i64 %859, %812
  br i1 %860, label %865, label %861

861:                                              ; preds = %856
  %862 = xor i1 %817, true
  %863 = load i64, i64* %187, align 8
  %864 = load i64, i64* %208, align 8
  br label %813

865:                                              ; preds = %856
  %866 = load i64, i64* %208, align 8
  br label %867

867:                                              ; preds = %865, %803
  %868 = phi i64 [ %866, %865 ], [ %805, %803 ]
  store i64 %868, i64* %187, align 8
  br label %4123

869:                                              ; preds = %330, %330
  %870 = load i64, i64* %187, align 8
  %871 = load i64, i64* %208, align 8
  %872 = sub i64 %870, %871
  %873 = lshr exact i64 %872, 3
  %874 = trunc i64 %873 to i32
  %875 = icmp ult i32 %874, 6
  br i1 %875, label %1117, label %876

876:                                              ; preds = %869, %1114
  %877 = phi i64 [ %1116, %1114 ], [ %871, %869 ]
  %878 = phi i64 [ %1115, %1114 ], [ %870, %869 ]
  %879 = phi i32 [ %1112, %1114 ], [ 6, %869 ]
  %880 = phi i32 [ %879, %1114 ], [ 0, %869 ]
  %881 = sub i64 %878, %877
  %882 = lshr exact i64 %881, 3
  %883 = trunc i64 %882 to i32
  %884 = icmp ult i32 %880, %883
  %885 = inttoptr i64 %877 to %struct.CF2_StackNumber_*
  br i1 %884, label %899, label %886

886:                                              ; preds = %876
  %887 = load i32*, i32** %173, align 8
  %888 = icmp eq i32* %887, null
  br i1 %888, label %918, label %889

889:                                              ; preds = %886
  %890 = load i32, i32* %887, align 4
  %891 = icmp eq i32 %890, 0
  br i1 %891, label %892, label %918

892:                                              ; preds = %889
  store i32 130, i32* %887, align 4
  %893 = load i64, i64* %187, align 8
  %894 = load i64, i64* %208, align 8
  %895 = sub i64 %893, %894
  %896 = lshr exact i64 %895, 3
  %897 = trunc i64 %896 to i32
  %898 = inttoptr i64 %894 to %struct.CF2_StackNumber_*
  br label %918

899:                                              ; preds = %876
  %900 = zext i32 %880 to i64
  %901 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %885, i64 %900
  %902 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %885, i64 %900, i32 1
  %903 = load i32, i32* %902, align 4
  switch i32 %903, label %915 [
    i32 2, label %904
    i32 1, label %908
  ]

904:                                              ; preds = %899
  %905 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %901, i64 0, i32 0, i32 0
  %906 = load i32, i32* %905, align 4
  %907 = shl i32 %906, 16
  br label %918

908:                                              ; preds = %899
  %909 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %901, i64 0, i32 0, i32 0
  %910 = load i32, i32* %909, align 4
  %911 = add nsw i32 %910, 8192
  %912 = ashr i32 %910, 31
  %913 = add nsw i32 %911, %912
  %914 = ashr i32 %913, 14
  br label %918

915:                                              ; preds = %899
  %916 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %901, i64 0, i32 0, i32 0
  %917 = load i32, i32* %916, align 4
  br label %918

918:                                              ; preds = %886, %889, %892, %904, %908, %915
  %919 = phi %struct.CF2_StackNumber_* [ %885, %886 ], [ %885, %889 ], [ %898, %892 ], [ %885, %904 ], [ %885, %908 ], [ %885, %915 ]
  %920 = phi i32 [ %883, %886 ], [ %883, %889 ], [ %897, %892 ], [ %883, %904 ], [ %883, %908 ], [ %883, %915 ]
  %921 = phi i32 [ 0, %886 ], [ 0, %889 ], [ 0, %892 ], [ %907, %904 ], [ %914, %908 ], [ %917, %915 ]
  %922 = load i32, i32* %19, align 4
  %923 = add i32 %922, %921
  %924 = or i32 %880, 1
  %925 = icmp ult i32 %924, %920
  br i1 %925, label %939, label %926

926:                                              ; preds = %918
  %927 = load i32*, i32** %173, align 8
  %928 = icmp eq i32* %927, null
  br i1 %928, label %958, label %929

929:                                              ; preds = %926
  %930 = load i32, i32* %927, align 4
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %932, label %958

932:                                              ; preds = %929
  store i32 130, i32* %927, align 4
  %933 = load i64, i64* %187, align 8
  %934 = load i64, i64* %208, align 8
  %935 = sub i64 %933, %934
  %936 = lshr exact i64 %935, 3
  %937 = trunc i64 %936 to i32
  %938 = inttoptr i64 %934 to %struct.CF2_StackNumber_*
  br label %958

939:                                              ; preds = %918
  %940 = zext i32 %924 to i64
  %941 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %919, i64 %940
  %942 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %919, i64 %940, i32 1
  %943 = load i32, i32* %942, align 4
  switch i32 %943, label %955 [
    i32 2, label %944
    i32 1, label %948
  ]

944:                                              ; preds = %939
  %945 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %941, i64 0, i32 0, i32 0
  %946 = load i32, i32* %945, align 4
  %947 = shl i32 %946, 16
  br label %958

948:                                              ; preds = %939
  %949 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %941, i64 0, i32 0, i32 0
  %950 = load i32, i32* %949, align 4
  %951 = add nsw i32 %950, 8192
  %952 = ashr i32 %950, 31
  %953 = add nsw i32 %951, %952
  %954 = ashr i32 %953, 14
  br label %958

955:                                              ; preds = %939
  %956 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %941, i64 0, i32 0, i32 0
  %957 = load i32, i32* %956, align 4
  br label %958

958:                                              ; preds = %926, %929, %932, %944, %948, %955
  %959 = phi %struct.CF2_StackNumber_* [ %919, %926 ], [ %919, %929 ], [ %938, %932 ], [ %919, %944 ], [ %919, %948 ], [ %919, %955 ]
  %960 = phi i32 [ %920, %926 ], [ %920, %929 ], [ %937, %932 ], [ %920, %944 ], [ %920, %948 ], [ %920, %955 ]
  %961 = phi i32 [ 0, %926 ], [ 0, %929 ], [ 0, %932 ], [ %947, %944 ], [ %954, %948 ], [ %957, %955 ]
  %962 = load i32, i32* %20, align 4
  %963 = add i32 %962, %961
  %964 = add i32 %880, 2
  %965 = icmp ult i32 %964, %960
  br i1 %965, label %979, label %966

966:                                              ; preds = %958
  %967 = load i32*, i32** %173, align 8
  %968 = icmp eq i32* %967, null
  br i1 %968, label %998, label %969

969:                                              ; preds = %966
  %970 = load i32, i32* %967, align 4
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %998

972:                                              ; preds = %969
  store i32 130, i32* %967, align 4
  %973 = load i64, i64* %187, align 8
  %974 = load i64, i64* %208, align 8
  %975 = sub i64 %973, %974
  %976 = lshr exact i64 %975, 3
  %977 = trunc i64 %976 to i32
  %978 = inttoptr i64 %974 to %struct.CF2_StackNumber_*
  br label %998

979:                                              ; preds = %958
  %980 = zext i32 %964 to i64
  %981 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %959, i64 %980
  %982 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %959, i64 %980, i32 1
  %983 = load i32, i32* %982, align 4
  switch i32 %983, label %995 [
    i32 2, label %984
    i32 1, label %988
  ]

984:                                              ; preds = %979
  %985 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %981, i64 0, i32 0, i32 0
  %986 = load i32, i32* %985, align 4
  %987 = shl i32 %986, 16
  br label %998

988:                                              ; preds = %979
  %989 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %981, i64 0, i32 0, i32 0
  %990 = load i32, i32* %989, align 4
  %991 = add nsw i32 %990, 8192
  %992 = ashr i32 %990, 31
  %993 = add nsw i32 %991, %992
  %994 = ashr i32 %993, 14
  br label %998

995:                                              ; preds = %979
  %996 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %981, i64 0, i32 0, i32 0
  %997 = load i32, i32* %996, align 4
  br label %998

998:                                              ; preds = %966, %969, %972, %984, %988, %995
  %999 = phi %struct.CF2_StackNumber_* [ %959, %966 ], [ %959, %969 ], [ %978, %972 ], [ %959, %984 ], [ %959, %988 ], [ %959, %995 ]
  %1000 = phi i32 [ %960, %966 ], [ %960, %969 ], [ %977, %972 ], [ %960, %984 ], [ %960, %988 ], [ %960, %995 ]
  %1001 = phi i32 [ 0, %966 ], [ 0, %969 ], [ 0, %972 ], [ %987, %984 ], [ %994, %988 ], [ %997, %995 ]
  %1002 = add i32 %1001, %923
  %1003 = add i32 %880, 3
  %1004 = icmp ult i32 %1003, %1000
  br i1 %1004, label %1018, label %1005

1005:                                             ; preds = %998
  %1006 = load i32*, i32** %173, align 8
  %1007 = icmp eq i32* %1006, null
  br i1 %1007, label %1037, label %1008

1008:                                             ; preds = %1005
  %1009 = load i32, i32* %1006, align 4
  %1010 = icmp eq i32 %1009, 0
  br i1 %1010, label %1011, label %1037

1011:                                             ; preds = %1008
  store i32 130, i32* %1006, align 4
  %1012 = load i64, i64* %187, align 8
  %1013 = load i64, i64* %208, align 8
  %1014 = sub i64 %1012, %1013
  %1015 = lshr exact i64 %1014, 3
  %1016 = trunc i64 %1015 to i32
  %1017 = inttoptr i64 %1013 to %struct.CF2_StackNumber_*
  br label %1037

1018:                                             ; preds = %998
  %1019 = zext i32 %1003 to i64
  %1020 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %999, i64 %1019
  %1021 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %999, i64 %1019, i32 1
  %1022 = load i32, i32* %1021, align 4
  switch i32 %1022, label %1034 [
    i32 2, label %1023
    i32 1, label %1027
  ]

1023:                                             ; preds = %1018
  %1024 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1020, i64 0, i32 0, i32 0
  %1025 = load i32, i32* %1024, align 4
  %1026 = shl i32 %1025, 16
  br label %1037

1027:                                             ; preds = %1018
  %1028 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1020, i64 0, i32 0, i32 0
  %1029 = load i32, i32* %1028, align 4
  %1030 = add nsw i32 %1029, 8192
  %1031 = ashr i32 %1029, 31
  %1032 = add nsw i32 %1030, %1031
  %1033 = ashr i32 %1032, 14
  br label %1037

1034:                                             ; preds = %1018
  %1035 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1020, i64 0, i32 0, i32 0
  %1036 = load i32, i32* %1035, align 4
  br label %1037

1037:                                             ; preds = %1005, %1008, %1011, %1023, %1027, %1034
  %1038 = phi %struct.CF2_StackNumber_* [ %999, %1005 ], [ %999, %1008 ], [ %1017, %1011 ], [ %999, %1023 ], [ %999, %1027 ], [ %999, %1034 ]
  %1039 = phi i32 [ %1000, %1005 ], [ %1000, %1008 ], [ %1016, %1011 ], [ %1000, %1023 ], [ %1000, %1027 ], [ %1000, %1034 ]
  %1040 = phi i32 [ 0, %1005 ], [ 0, %1008 ], [ 0, %1011 ], [ %1026, %1023 ], [ %1033, %1027 ], [ %1036, %1034 ]
  %1041 = add i32 %1040, %963
  %1042 = add i32 %880, 4
  %1043 = icmp ult i32 %1042, %1039
  br i1 %1043, label %1057, label %1044

1044:                                             ; preds = %1037
  %1045 = load i32*, i32** %173, align 8
  %1046 = icmp eq i32* %1045, null
  br i1 %1046, label %1076, label %1047

1047:                                             ; preds = %1044
  %1048 = load i32, i32* %1045, align 4
  %1049 = icmp eq i32 %1048, 0
  br i1 %1049, label %1050, label %1076

1050:                                             ; preds = %1047
  store i32 130, i32* %1045, align 4
  %1051 = load i64, i64* %187, align 8
  %1052 = load i64, i64* %208, align 8
  %1053 = sub i64 %1051, %1052
  %1054 = lshr exact i64 %1053, 3
  %1055 = trunc i64 %1054 to i32
  %1056 = inttoptr i64 %1052 to %struct.CF2_StackNumber_*
  br label %1076

1057:                                             ; preds = %1037
  %1058 = zext i32 %1042 to i64
  %1059 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1038, i64 %1058
  %1060 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1038, i64 %1058, i32 1
  %1061 = load i32, i32* %1060, align 4
  switch i32 %1061, label %1073 [
    i32 2, label %1062
    i32 1, label %1066
  ]

1062:                                             ; preds = %1057
  %1063 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1059, i64 0, i32 0, i32 0
  %1064 = load i32, i32* %1063, align 4
  %1065 = shl i32 %1064, 16
  br label %1076

1066:                                             ; preds = %1057
  %1067 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1059, i64 0, i32 0, i32 0
  %1068 = load i32, i32* %1067, align 4
  %1069 = add nsw i32 %1068, 8192
  %1070 = ashr i32 %1068, 31
  %1071 = add nsw i32 %1069, %1070
  %1072 = ashr i32 %1071, 14
  br label %1076

1073:                                             ; preds = %1057
  %1074 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1059, i64 0, i32 0, i32 0
  %1075 = load i32, i32* %1074, align 4
  br label %1076

1076:                                             ; preds = %1044, %1047, %1050, %1062, %1066, %1073
  %1077 = phi %struct.CF2_StackNumber_* [ %1038, %1044 ], [ %1038, %1047 ], [ %1056, %1050 ], [ %1038, %1062 ], [ %1038, %1066 ], [ %1038, %1073 ]
  %1078 = phi i32 [ %1039, %1044 ], [ %1039, %1047 ], [ %1055, %1050 ], [ %1039, %1062 ], [ %1039, %1066 ], [ %1039, %1073 ]
  %1079 = phi i32 [ 0, %1044 ], [ 0, %1047 ], [ 0, %1050 ], [ %1065, %1062 ], [ %1072, %1066 ], [ %1075, %1073 ]
  %1080 = add i32 %1079, %1002
  %1081 = add i32 %880, 5
  %1082 = icmp ult i32 %1081, %1078
  br i1 %1082, label %1090, label %1083

1083:                                             ; preds = %1076
  %1084 = load i32*, i32** %173, align 8
  %1085 = icmp eq i32* %1084, null
  br i1 %1085, label %1109, label %1086

1086:                                             ; preds = %1083
  %1087 = load i32, i32* %1084, align 4
  %1088 = icmp eq i32 %1087, 0
  br i1 %1088, label %1089, label %1109

1089:                                             ; preds = %1086
  store i32 130, i32* %1084, align 4
  br label %1109

1090:                                             ; preds = %1076
  %1091 = zext i32 %1081 to i64
  %1092 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1077, i64 %1091
  %1093 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1077, i64 %1091, i32 1
  %1094 = load i32, i32* %1093, align 4
  switch i32 %1094, label %1106 [
    i32 2, label %1095
    i32 1, label %1099
  ]

1095:                                             ; preds = %1090
  %1096 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1092, i64 0, i32 0, i32 0
  %1097 = load i32, i32* %1096, align 4
  %1098 = shl i32 %1097, 16
  br label %1109

1099:                                             ; preds = %1090
  %1100 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1092, i64 0, i32 0, i32 0
  %1101 = load i32, i32* %1100, align 4
  %1102 = add nsw i32 %1101, 8192
  %1103 = ashr i32 %1101, 31
  %1104 = add nsw i32 %1102, %1103
  %1105 = ashr i32 %1104, 14
  br label %1109

1106:                                             ; preds = %1090
  %1107 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1092, i64 0, i32 0, i32 0
  %1108 = load i32, i32* %1107, align 4
  br label %1109

1109:                                             ; preds = %1083, %1086, %1089, %1095, %1099, %1106
  %1110 = phi i32 [ %1108, %1106 ], [ %1105, %1099 ], [ %1098, %1095 ], [ 0, %1083 ], [ 0, %1086 ], [ 0, %1089 ]
  %1111 = add i32 %1110, %1041
  call fastcc void @cf2_glyphpath_curveTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %923, i32 %963, i32 %1002, i32 %1041, i32 %1080, i32 %1111)
  store i32 %1080, i32* %19, align 4
  store i32 %1111, i32* %20, align 4
  %1112 = add i32 %879, 6
  %1113 = icmp ugt i32 %1112, %874
  br i1 %1113, label %1117, label %1114

1114:                                             ; preds = %1109
  %1115 = load i64, i64* %187, align 8
  %1116 = load i64, i64* %208, align 8
  br label %876

1117:                                             ; preds = %1109, %869
  %1118 = phi i32 [ 0, %869 ], [ %879, %1109 ]
  %1119 = icmp eq i8 %292, 24
  br i1 %1119, label %1120, label %1200

1120:                                             ; preds = %1117
  %1121 = load i32, i32* %19, align 4
  %1122 = load i64, i64* %187, align 8
  %1123 = load i64, i64* %208, align 8
  %1124 = sub i64 %1122, %1123
  %1125 = lshr exact i64 %1124, 3
  %1126 = trunc i64 %1125 to i32
  %1127 = icmp ult i32 %1118, %1126
  %1128 = inttoptr i64 %1123 to %struct.CF2_StackNumber_*
  br i1 %1127, label %1142, label %1129

1129:                                             ; preds = %1120
  %1130 = load i32*, i32** %173, align 8
  %1131 = icmp eq i32* %1130, null
  br i1 %1131, label %1161, label %1132

1132:                                             ; preds = %1129
  %1133 = load i32, i32* %1130, align 4
  %1134 = icmp eq i32 %1133, 0
  br i1 %1134, label %1135, label %1161

1135:                                             ; preds = %1132
  store i32 130, i32* %1130, align 4
  %1136 = load i64, i64* %187, align 8
  %1137 = load i64, i64* %208, align 8
  %1138 = sub i64 %1136, %1137
  %1139 = lshr exact i64 %1138, 3
  %1140 = trunc i64 %1139 to i32
  %1141 = inttoptr i64 %1137 to %struct.CF2_StackNumber_*
  br label %1161

1142:                                             ; preds = %1120
  %1143 = zext i32 %1118 to i64
  %1144 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1128, i64 %1143
  %1145 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1128, i64 %1143, i32 1
  %1146 = load i32, i32* %1145, align 4
  switch i32 %1146, label %1158 [
    i32 2, label %1147
    i32 1, label %1151
  ]

1147:                                             ; preds = %1142
  %1148 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1144, i64 0, i32 0, i32 0
  %1149 = load i32, i32* %1148, align 4
  %1150 = shl i32 %1149, 16
  br label %1161

1151:                                             ; preds = %1142
  %1152 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1144, i64 0, i32 0, i32 0
  %1153 = load i32, i32* %1152, align 4
  %1154 = add nsw i32 %1153, 8192
  %1155 = ashr i32 %1153, 31
  %1156 = add nsw i32 %1154, %1155
  %1157 = ashr i32 %1156, 14
  br label %1161

1158:                                             ; preds = %1142
  %1159 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1144, i64 0, i32 0, i32 0
  %1160 = load i32, i32* %1159, align 4
  br label %1161

1161:                                             ; preds = %1129, %1132, %1135, %1147, %1151, %1158
  %1162 = phi %struct.CF2_StackNumber_* [ %1128, %1129 ], [ %1128, %1132 ], [ %1141, %1135 ], [ %1128, %1147 ], [ %1128, %1151 ], [ %1128, %1158 ]
  %1163 = phi i32 [ %1126, %1129 ], [ %1126, %1132 ], [ %1140, %1135 ], [ %1126, %1147 ], [ %1126, %1151 ], [ %1126, %1158 ]
  %1164 = phi i32 [ 0, %1129 ], [ 0, %1132 ], [ 0, %1135 ], [ %1150, %1147 ], [ %1157, %1151 ], [ %1160, %1158 ]
  %1165 = add i32 %1164, %1121
  store i32 %1165, i32* %19, align 4
  %1166 = load i32, i32* %20, align 4
  %1167 = or i32 %1118, 1
  %1168 = icmp ult i32 %1167, %1163
  br i1 %1168, label %1177, label %1169

1169:                                             ; preds = %1161
  %1170 = load i32*, i32** %173, align 8
  %1171 = icmp eq i32* %1170, null
  br i1 %1171, label %1196, label %1172

1172:                                             ; preds = %1169
  %1173 = load i32, i32* %1170, align 4
  %1174 = icmp eq i32 %1173, 0
  br i1 %1174, label %1175, label %1196

1175:                                             ; preds = %1172
  store i32 130, i32* %1170, align 4
  %1176 = load i32, i32* %19, align 4
  br label %1196

1177:                                             ; preds = %1161
  %1178 = zext i32 %1167 to i64
  %1179 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1162, i64 %1178
  %1180 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1162, i64 %1178, i32 1
  %1181 = load i32, i32* %1180, align 4
  switch i32 %1181, label %1193 [
    i32 2, label %1182
    i32 1, label %1186
  ]

1182:                                             ; preds = %1177
  %1183 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1179, i64 0, i32 0, i32 0
  %1184 = load i32, i32* %1183, align 4
  %1185 = shl i32 %1184, 16
  br label %1196

1186:                                             ; preds = %1177
  %1187 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1179, i64 0, i32 0, i32 0
  %1188 = load i32, i32* %1187, align 4
  %1189 = add nsw i32 %1188, 8192
  %1190 = ashr i32 %1188, 31
  %1191 = add nsw i32 %1189, %1190
  %1192 = ashr i32 %1191, 14
  br label %1196

1193:                                             ; preds = %1177
  %1194 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1179, i64 0, i32 0, i32 0
  %1195 = load i32, i32* %1194, align 4
  br label %1196

1196:                                             ; preds = %1169, %1172, %1175, %1182, %1186, %1193
  %1197 = phi i32 [ %1165, %1193 ], [ %1165, %1186 ], [ %1165, %1182 ], [ %1165, %1169 ], [ %1165, %1172 ], [ %1176, %1175 ]
  %1198 = phi i32 [ %1195, %1193 ], [ %1192, %1186 ], [ %1185, %1182 ], [ 0, %1169 ], [ 0, %1172 ], [ 0, %1175 ]
  %1199 = add i32 %1198, %1166
  store i32 %1199, i32* %20, align 4
  call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %1197, i32 %1199)
  br label %1200

1200:                                             ; preds = %1196, %1117
  %1201 = load i64, i64* %208, align 8
  store i64 %1201, i64* %187, align 8
  br label %4123

1202:                                             ; preds = %330
  br i1 %294, label %7429, label %1203

1203:                                             ; preds = %1202
  %1204 = load i8, i8* %144, align 8
  %1205 = icmp eq i8 %1204, 0
  br i1 %1205, label %1217, label %1206

1206:                                             ; preds = %1203
  store i8 1, i8* %145, align 1
  %1207 = load i64, i64* %213, align 8
  %1208 = trunc i64 %1207 to i32
  %1209 = load i64, i64* %214, align 8
  %1210 = trunc i64 %1209 to i32
  call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %1208, i32 %1210) #11
  %1211 = load i8, i8* %146, align 8
  %1212 = icmp eq i8 %1211, 0
  br i1 %1212, label %1216, label %1213

1213:                                             ; preds = %1206
  %1214 = load i64, i64* %216, align 8
  %1215 = load i64, i64* %217, align 8
  call fastcc void @cf2_glyphpath_pushPrevElem(%struct.CF2_GlyphPathRec_* nonnull %28, %struct.CF2_HintMapRec_* %74, %struct.FT_Vector_* %215, i64 %1214, i64 %1215, i8 zeroext 1) #11
  br label %1216

1216:                                             ; preds = %1213, %1206
  store i8 1, i8* %143, align 1
  store i8 0, i8* %144, align 8
  store i8 0, i8* %145, align 1
  store i8 0, i8* %146, align 8
  br label %1217

1217:                                             ; preds = %1203, %1216
  store i8 1, i8* %24, align 1
  br label %7429

1218:                                             ; preds = %330, %330
  %1219 = icmp sgt i32 %268, 16
  br i1 %1219, label %7435, label %1220

1220:                                             ; preds = %1218
  %1221 = sext i32 %268 to i64
  %1222 = add nsw i64 %1221, 1
  %1223 = icmp ugt i64 %201, %1222
  %1224 = or i1 %1223, %235
  %1225 = select i1 %1223, i64 %1222, i64 0
  br i1 %1224, label %1227, label %1226

1226:                                             ; preds = %1220
  store i32 130, i32* %37, align 4
  br label %1227

1227:                                             ; preds = %1220, %1226
  %1228 = phi i64 [ %1225, %1220 ], [ 0, %1226 ]
  %1229 = shl nsw i64 %1228, 5
  %1230 = getelementptr inbounds i8, i8* %191, i64 %1229
  %1231 = bitcast i8* %1230 to %struct.CF2_BufferRec_*
  %1232 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1233 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %1234 = icmp eq %struct.CF2_StackNumber_* %1232, %1233
  br i1 %1234, label %1235, label %1242

1235:                                             ; preds = %1227
  %1236 = load i32*, i32** %173, align 8
  %1237 = icmp eq i32* %1236, null
  br i1 %1237, label %1257, label %1238

1238:                                             ; preds = %1235
  %1239 = load i32, i32* %1236, align 4
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1241, label %1257

1241:                                             ; preds = %1238
  store i32 161, i32* %1236, align 4
  br label %1257

1242:                                             ; preds = %1227
  %1243 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1232, i64 -1, i32 1
  %1244 = load i32, i32* %1243, align 4
  %1245 = icmp eq i32 %1244, 2
  br i1 %1245, label %1253, label %1246

1246:                                             ; preds = %1242
  %1247 = load i32*, i32** %173, align 8
  %1248 = icmp eq i32* %1247, null
  br i1 %1248, label %1257, label %1249

1249:                                             ; preds = %1246
  %1250 = load i32, i32* %1247, align 4
  %1251 = icmp eq i32 %1250, 0
  br i1 %1251, label %1252, label %1257

1252:                                             ; preds = %1249
  store i32 160, i32* %1247, align 4
  br label %1257

1253:                                             ; preds = %1242
  %1254 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1232, i64 -1
  store %struct.CF2_StackNumber_* %1254, %struct.CF2_StackNumber_** %209, align 8
  %1255 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1254, i64 0, i32 0, i32 0
  %1256 = load i32, i32* %1255, align 4
  br label %1257

1257:                                             ; preds = %1235, %1238, %1241, %1246, %1249, %1252, %1253
  %1258 = phi i32 [ %1256, %1253 ], [ 0, %1235 ], [ 0, %1238 ], [ 0, %1241 ], [ 0, %1246 ], [ 0, %1249 ], [ 0, %1252 ]
  %1259 = load i8, i8* %207, align 4
  %1260 = icmp eq i8 %1259, 0
  br i1 %1260, label %1270, label %1261

1261:                                             ; preds = %1257
  %1262 = load %struct.FT_HashRec_*, %struct.FT_HashRec_** %247, align 8
  %1263 = icmp eq %struct.FT_HashRec_* %1262, null
  br i1 %1263, label %1270, label %1264

1264:                                             ; preds = %1261
  %1265 = call i64* @ft_hash_num_lookup(i32 %1258, %struct.FT_HashRec_* nonnull %1262) #11
  %1266 = icmp eq i64* %1265, null
  br i1 %1266, label %1270, label %1267

1267:                                             ; preds = %1264
  %1268 = load i64, i64* %1265, align 8
  %1269 = trunc i64 %1268 to i32
  br label %1270

1270:                                             ; preds = %1267, %1264, %1261, %1257
  %1271 = phi i32 [ %1258, %1261 ], [ %1258, %1257 ], [ %1269, %1267 ], [ -1, %1264 ]
  %1272 = icmp eq i8 %292, 29
  call void @llvm.memset.p0i8.i64(i8* align 8 %1230, i8 0, i64 32, i1 false) #11
  br i1 %1272, label %1273, label %1294

1273:                                             ; preds = %1270
  %1274 = load i32, i32* %254, align 4
  %1275 = add nsw i32 %1274, %1271
  %1276 = load i32, i32* %255, align 4
  %1277 = icmp ult i32 %1275, %1276
  br i1 %1277, label %1278, label %7435

1278:                                             ; preds = %1273
  %1279 = load i8**, i8*** %256, align 8
  %1280 = zext i32 %1275 to i64
  %1281 = getelementptr inbounds i8*, i8** %1279, i64 %1280
  %1282 = bitcast i8** %1281 to i64*
  %1283 = load i64, i64* %1282, align 8
  %1284 = getelementptr inbounds i8, i8* %1230, i64 24
  %1285 = bitcast i8* %1284 to i64*
  store i64 %1283, i64* %1285, align 8
  %1286 = getelementptr inbounds i8, i8* %1230, i64 8
  %1287 = bitcast i8* %1286 to i64*
  store i64 %1283, i64* %1287, align 8
  %1288 = load i8**, i8*** %256, align 8
  %1289 = add nuw i32 %1275, 1
  %1290 = zext i32 %1289 to i64
  %1291 = getelementptr inbounds i8*, i8** %1288, i64 %1290
  %1292 = bitcast i8** %1291 to i64*
  %1293 = load i64, i64* %1292, align 8
  br label %1347

1294:                                             ; preds = %1270
  %1295 = load i32, i32* %248, align 8
  %1296 = add nsw i32 %1295, %1271
  %1297 = load i32, i32* %249, align 8
  %1298 = icmp ult i32 %1296, %1297
  br i1 %1298, label %1299, label %7435

1299:                                             ; preds = %1294
  %1300 = load i8**, i8*** %250, align 8
  %1301 = zext i32 %1296 to i64
  %1302 = getelementptr inbounds i8*, i8** %1300, i64 %1301
  %1303 = load i8*, i8** %1302, align 8
  %1304 = getelementptr inbounds i8, i8* %1230, i64 8
  %1305 = bitcast i8* %1304 to i8**
  store i8* %1303, i8** %1305, align 8
  %1306 = load i8, i8* %251, align 4
  %1307 = icmp eq i8 %1306, 0
  %1308 = ptrtoint i8* %1303 to i64
  br i1 %1307, label %1338, label %1309

1309:                                             ; preds = %1299
  %1310 = load i32*, i32** %252, align 8
  %1311 = icmp eq i32* %1310, null
  br i1 %1311, label %1323, label %1312

1312:                                             ; preds = %1309
  %1313 = icmp eq i8* %1303, null
  br i1 %1313, label %1319, label %1314

1314:                                             ; preds = %1312
  %1315 = getelementptr inbounds i32, i32* %1310, i64 %1301
  %1316 = load i32, i32* %1315, align 4
  %1317 = zext i32 %1316 to i64
  %1318 = getelementptr inbounds i8, i8* %1303, i64 %1317
  br label %1319

1319:                                             ; preds = %1314, %1312
  %1320 = phi i8* [ %1318, %1314 ], [ null, %1312 ]
  %1321 = getelementptr inbounds i8, i8* %1230, i64 16
  %1322 = bitcast i8* %1321 to i8**
  store i8* %1320, i8** %1322, align 8
  br label %1347

1323:                                             ; preds = %1309
  %1324 = load i32, i32* %253, align 8
  %1325 = sext i32 %1324 to i64
  %1326 = icmp sgt i64 %1325, 0
  %1327 = select i1 %1326, i64 %1325, i64 0
  %1328 = getelementptr inbounds i8, i8* %1303, i64 %1327
  store i8* %1328, i8** %1305, align 8
  %1329 = load i8**, i8*** %250, align 8
  %1330 = add nuw i32 %1296, 1
  %1331 = zext i32 %1330 to i64
  %1332 = getelementptr inbounds i8*, i8** %1329, i64 %1331
  %1333 = bitcast i8** %1332 to i64*
  %1334 = load i64, i64* %1333, align 8
  %1335 = getelementptr inbounds i8, i8* %1230, i64 16
  %1336 = bitcast i8* %1335 to i64*
  store i64 %1334, i64* %1336, align 8
  %1337 = ptrtoint i8* %1328 to i64
  br label %1347

1338:                                             ; preds = %1299
  %1339 = load i8**, i8*** %250, align 8
  %1340 = add nuw i32 %1296, 1
  %1341 = zext i32 %1340 to i64
  %1342 = getelementptr inbounds i8*, i8** %1339, i64 %1341
  %1343 = bitcast i8** %1342 to i64*
  %1344 = load i64, i64* %1343, align 8
  %1345 = getelementptr inbounds i8, i8* %1230, i64 16
  %1346 = bitcast i8* %1345 to i64*
  store i64 %1344, i64* %1346, align 8
  br label %1347

1347:                                             ; preds = %1338, %1323, %1319, %1278
  %1348 = phi i64 [ 16, %1278 ], [ 24, %1319 ], [ 24, %1323 ], [ 24, %1338 ]
  %1349 = phi i64 [ %1293, %1278 ], [ %1308, %1319 ], [ %1337, %1323 ], [ %1308, %1338 ]
  %1350 = getelementptr inbounds i8, i8* %1230, i64 %1348
  %1351 = bitcast i8* %1350 to i64*
  store i64 %1349, i64* %1351, align 8
  %1352 = add nsw i32 %268, 1
  br label %4123

1353:                                             ; preds = %330
  %1354 = icmp slt i32 %268, 1
  br i1 %1354, label %7435, label %1355

1355:                                             ; preds = %1353
  %1356 = add nsw i32 %268, -1
  %1357 = zext i32 %1356 to i64
  %1358 = icmp ugt i64 %201, %1357
  %1359 = or i1 %1358, %235
  %1360 = select i1 %1358, i64 %1357, i64 0
  br i1 %1359, label %1362, label %1361

1361:                                             ; preds = %1355
  store i32 130, i32* %37, align 4
  br label %1362

1362:                                             ; preds = %1355, %1361
  %1363 = phi i64 [ %1360, %1355 ], [ 0, %1361 ]
  %1364 = shl nuw nsw i64 %1363, 5
  %1365 = getelementptr inbounds i8, i8* %191, i64 %1364
  %1366 = bitcast i8* %1365 to %struct.CF2_BufferRec_*
  br label %4123

1367:                                             ; preds = %330
  %1368 = icmp ult i8* %291, %278
  br i1 %1368, label %1377, label %1369

1369:                                             ; preds = %1367
  %1370 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  %1371 = load i32*, i32** %1370, align 8
  %1372 = icmp eq i32* %1371, null
  br i1 %1372, label %1385, label %1373

1373:                                             ; preds = %1369
  %1374 = load i32, i32* %1371, align 4
  %1375 = icmp eq i32 %1374, 0
  br i1 %1375, label %1376, label %1385

1376:                                             ; preds = %1373
  store i32 85, i32* %1371, align 4
  br label %1385

1377:                                             ; preds = %1367
  %1378 = getelementptr inbounds i8, i8* %291, i64 1
  store i8* %1378, i8** %275, align 8
  %1379 = load i8, i8* %291, align 1
  %1380 = zext i8 %1379 to i32
  switch i8 %1379, label %1385 [
    i8 34, label %1381
    i8 35, label %1382
    i8 36, label %1383
    i8 37, label %1384
    i8 8, label %7429
    i8 13, label %7429
    i8 19, label %7429
    i8 25, label %7429
    i8 31, label %7429
    i8 32, label %7429
  ]

1381:                                             ; preds = %1377
  call fastcc void @cf2_doFlex(%struct.CF2_StackRec_* nonnull %167, i32* nonnull %19, i32* nonnull %20, %struct.CF2_GlyphPathRec_* nonnull %28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cf2_interpT2CharString.readFromStack, i64 0, i64 0), i8 zeroext 0)
  br label %4123

1382:                                             ; preds = %1377
  call fastcc void @cf2_doFlex(%struct.CF2_StackRec_* nonnull %167, i32* nonnull %19, i32* nonnull %20, %struct.CF2_GlyphPathRec_* nonnull %28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cf2_interpT2CharString.readFromStack.77, i64 0, i64 0), i8 zeroext 0)
  br label %7429

1383:                                             ; preds = %1377
  call fastcc void @cf2_doFlex(%struct.CF2_StackRec_* nonnull %167, i32* nonnull %19, i32* nonnull %20, %struct.CF2_GlyphPathRec_* nonnull %28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cf2_interpT2CharString.readFromStack.78, i64 0, i64 0), i8 zeroext 0)
  br label %4123

1384:                                             ; preds = %1377
  call fastcc void @cf2_doFlex(%struct.CF2_StackRec_* nonnull %167, i32* nonnull %19, i32* nonnull %20, %struct.CF2_GlyphPathRec_* nonnull %28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cf2_interpT2CharString.readFromStack.79, i64 0, i64 0), i8 zeroext 1)
  br label %4123

1385:                                             ; preds = %1376, %1373, %1369, %1377
  %1386 = phi i8 [ %1379, %1377 ], [ 0, %1369 ], [ 0, %1373 ], [ 0, %1376 ]
  %1387 = phi i32 [ %1380, %1377 ], [ 0, %1369 ], [ 0, %1373 ], [ 0, %1376 ]
  %1388 = load i8, i8* %147, align 1
  %1389 = icmp ne i8 %1388, 0
  %1390 = icmp ugt i32 %1387, 37
  %1391 = or i1 %1390, %1389
  br i1 %1391, label %7429, label %1392

1392:                                             ; preds = %1385
  %1393 = load i8, i8* %207, align 4
  %1394 = icmp ne i8 %1393, 0
  %1395 = icmp sgt i32 %323, 0
  %1396 = and i1 %1395, %1394
  %1397 = xor i1 %1396, true
  %1398 = icmp eq i32 %1387, 17
  %1399 = or i1 %1398, %1397
  br i1 %1399, label %1400, label %7429

1400:                                             ; preds = %1392
  switch i8 %1386, label %7429 [
    i8 33, label %5059
    i8 1, label %1401
    i8 2, label %1401
    i8 3, label %1647
    i8 4, label %1736
    i8 5, label %1824
    i8 6, label %1878
    i8 7, label %2343
    i8 9, label %2496
    i8 10, label %2574
    i8 11, label %2660
    i8 12, label %2746
    i8 14, label %2888
    i8 15, label %2962
    i8 16, label %3049
    i8 17, label %4172
    i8 18, label %4204
    i8 20, label %4217
    i8 21, label %4279
    i8 22, label %4330
    i8 23, label %4483
    i8 24, label %4514
    i8 26, label %4607
    i8 27, label %4675
    i8 28, label %4748
    i8 29, label %4854
    i8 30, label %4950
  ]

1401:                                             ; preds = %1400, %1400
  %1402 = icmp eq i8 %1393, 0
  br i1 %1402, label %7429, label %1403

1403:                                             ; preds = %1401
  %1404 = icmp eq i32 %1387, 1
  %1405 = load i64, i64* %187, align 8
  %1406 = load i64, i64* %208, align 8
  %1407 = sub i64 %1405, %1406
  %1408 = lshr exact i64 %1407, 3
  %1409 = trunc i64 %1408 to i32
  %1410 = icmp eq i32 %1409, 0
  %1411 = inttoptr i64 %1406 to %struct.CF2_StackNumber_*
  br i1 %1410, label %1412, label %1425

1412:                                             ; preds = %1403
  %1413 = load i32*, i32** %173, align 8
  %1414 = icmp eq i32* %1413, null
  br i1 %1414, label %1580, label %1415

1415:                                             ; preds = %1412
  %1416 = load i32, i32* %1413, align 4
  %1417 = icmp eq i32 %1416, 0
  br i1 %1417, label %1418, label %1580

1418:                                             ; preds = %1415
  store i32 130, i32* %1413, align 4
  %1419 = load i64, i64* %187, align 8
  %1420 = load i64, i64* %208, align 8
  %1421 = sub i64 %1419, %1420
  %1422 = lshr exact i64 %1421, 3
  %1423 = trunc i64 %1422 to i32
  %1424 = inttoptr i64 %1420 to %struct.CF2_StackNumber_*
  br label %1442

1425:                                             ; preds = %1403
  %1426 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1411, i64 0, i32 1
  %1427 = load i32, i32* %1426, align 4
  switch i32 %1427, label %1439 [
    i32 2, label %1428
    i32 1, label %1432
  ]

1428:                                             ; preds = %1425
  %1429 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1411, i64 0, i32 0, i32 0
  %1430 = load i32, i32* %1429, align 4
  %1431 = shl i32 %1430, 16
  br label %1442

1432:                                             ; preds = %1425
  %1433 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1411, i64 0, i32 0, i32 0
  %1434 = load i32, i32* %1433, align 4
  %1435 = add nsw i32 %1434, 8192
  %1436 = ashr i32 %1434, 31
  %1437 = add nsw i32 %1435, %1436
  %1438 = ashr i32 %1437, 14
  br label %1442

1439:                                             ; preds = %1425
  %1440 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1411, i64 0, i32 0, i32 0
  %1441 = load i32, i32* %1440, align 4
  br label %1442

1442:                                             ; preds = %1418, %1428, %1432, %1439
  %1443 = phi %struct.CF2_StackNumber_* [ %1424, %1418 ], [ %1411, %1428 ], [ %1411, %1432 ], [ %1411, %1439 ]
  %1444 = phi i32 [ %1423, %1418 ], [ %1409, %1428 ], [ %1409, %1432 ], [ %1409, %1439 ]
  %1445 = phi i64 [ %1420, %1418 ], [ %1406, %1428 ], [ %1406, %1432 ], [ %1406, %1439 ]
  %1446 = phi i32 [ 0, %1418 ], [ %1431, %1428 ], [ %1438, %1432 ], [ %1441, %1439 ]
  %1447 = icmp ugt i32 %1444, 2
  br i1 %1447, label %1461, label %1448

1448:                                             ; preds = %1442
  %1449 = load i32*, i32** %173, align 8
  %1450 = icmp eq i32* %1449, null
  br i1 %1450, label %1519, label %1451

1451:                                             ; preds = %1448
  %1452 = load i32, i32* %1449, align 4
  %1453 = icmp eq i32 %1452, 0
  br i1 %1453, label %1454, label %1519

1454:                                             ; preds = %1451
  store i32 130, i32* %1449, align 4
  %1455 = load i64, i64* %187, align 8
  %1456 = load i64, i64* %208, align 8
  %1457 = sub i64 %1455, %1456
  %1458 = lshr exact i64 %1457, 3
  %1459 = trunc i64 %1458 to i32
  %1460 = inttoptr i64 %1456 to %struct.CF2_StackNumber_*
  br label %1479

1461:                                             ; preds = %1442
  %1462 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1443, i64 2
  %1463 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1443, i64 2, i32 1
  %1464 = load i32, i32* %1463, align 4
  switch i32 %1464, label %1476 [
    i32 2, label %1465
    i32 1, label %1469
  ]

1465:                                             ; preds = %1461
  %1466 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1462, i64 0, i32 0, i32 0
  %1467 = load i32, i32* %1466, align 4
  %1468 = shl i32 %1467, 16
  br label %1479

1469:                                             ; preds = %1461
  %1470 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1462, i64 0, i32 0, i32 0
  %1471 = load i32, i32* %1470, align 4
  %1472 = add nsw i32 %1471, 8192
  %1473 = ashr i32 %1471, 31
  %1474 = add nsw i32 %1472, %1473
  %1475 = ashr i32 %1474, 14
  br label %1479

1476:                                             ; preds = %1461
  %1477 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1462, i64 0, i32 0, i32 0
  %1478 = load i32, i32* %1477, align 4
  br label %1479

1479:                                             ; preds = %1454, %1465, %1469, %1476
  %1480 = phi %struct.CF2_StackNumber_* [ %1460, %1454 ], [ %1443, %1465 ], [ %1443, %1469 ], [ %1443, %1476 ]
  %1481 = phi i32 [ %1459, %1454 ], [ %1444, %1465 ], [ %1444, %1469 ], [ %1444, %1476 ]
  %1482 = phi i64 [ %1456, %1454 ], [ %1445, %1465 ], [ %1445, %1469 ], [ %1445, %1476 ]
  %1483 = phi i32 [ 0, %1454 ], [ %1468, %1465 ], [ %1475, %1469 ], [ %1478, %1476 ]
  %1484 = icmp ugt i32 %1481, 4
  br i1 %1484, label %1498, label %1485

1485:                                             ; preds = %1479
  %1486 = load i32*, i32** %173, align 8
  %1487 = icmp eq i32* %1486, null
  br i1 %1487, label %1519, label %1488

1488:                                             ; preds = %1485
  %1489 = load i32, i32* %1486, align 4
  %1490 = icmp eq i32 %1489, 0
  br i1 %1490, label %1491, label %1519

1491:                                             ; preds = %1488
  store i32 130, i32* %1486, align 4
  %1492 = load i64, i64* %187, align 8
  %1493 = load i64, i64* %208, align 8
  %1494 = sub i64 %1492, %1493
  %1495 = lshr exact i64 %1494, 3
  %1496 = trunc i64 %1495 to i32
  %1497 = inttoptr i64 %1493 to %struct.CF2_StackNumber_*
  br label %1519

1498:                                             ; preds = %1479
  %1499 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1480, i64 4
  %1500 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1480, i64 4, i32 1
  %1501 = load i32, i32* %1500, align 4
  switch i32 %1501, label %1513 [
    i32 2, label %1502
    i32 1, label %1506
  ]

1502:                                             ; preds = %1498
  %1503 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1499, i64 0, i32 0, i32 0
  %1504 = load i32, i32* %1503, align 4
  %1505 = shl i32 %1504, 16
  br label %1516

1506:                                             ; preds = %1498
  %1507 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1499, i64 0, i32 0, i32 0
  %1508 = load i32, i32* %1507, align 4
  %1509 = add nsw i32 %1508, 8192
  %1510 = ashr i32 %1508, 31
  %1511 = add nsw i32 %1509, %1510
  %1512 = ashr i32 %1511, 14
  br label %1516

1513:                                             ; preds = %1498
  %1514 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1499, i64 0, i32 0, i32 0
  %1515 = load i32, i32* %1514, align 4
  br label %1516

1516:                                             ; preds = %1502, %1506, %1513
  %1517 = phi i32 [ %1515, %1513 ], [ %1512, %1506 ], [ %1505, %1502 ]
  %1518 = sub i32 %1483, %1446
  br label %1532

1519:                                             ; preds = %1448, %1451, %1485, %1488, %1491
  %1520 = phi i32 [ %1483, %1485 ], [ %1483, %1488 ], [ %1483, %1491 ], [ 0, %1451 ], [ 0, %1448 ]
  %1521 = phi %struct.CF2_StackNumber_* [ %1480, %1485 ], [ %1480, %1488 ], [ %1497, %1491 ], [ %1443, %1451 ], [ %1443, %1448 ]
  %1522 = phi i32 [ %1481, %1485 ], [ %1481, %1488 ], [ %1496, %1491 ], [ %1444, %1451 ], [ %1444, %1448 ]
  %1523 = phi i64 [ %1482, %1485 ], [ %1482, %1488 ], [ %1493, %1491 ], [ %1445, %1451 ], [ %1445, %1448 ]
  %1524 = sub i32 %1520, %1446
  %1525 = icmp ugt i32 %1522, 1
  br i1 %1525, label %1532, label %1526

1526:                                             ; preds = %1519
  %1527 = load i32*, i32** %173, align 8
  %1528 = icmp eq i32* %1527, null
  br i1 %1528, label %1580, label %1529

1529:                                             ; preds = %1526
  %1530 = load i32, i32* %1527, align 4
  %1531 = icmp eq i32 %1530, 0
  br i1 %1531, label %1555, label %1580

1532:                                             ; preds = %1516, %1519
  %1533 = phi i32 [ %1518, %1516 ], [ %1524, %1519 ]
  %1534 = phi i32 [ %1517, %1516 ], [ 0, %1519 ]
  %1535 = phi i64 [ %1482, %1516 ], [ %1523, %1519 ]
  %1536 = phi %struct.CF2_StackNumber_* [ %1480, %1516 ], [ %1521, %1519 ]
  %1537 = phi i32 [ %1483, %1516 ], [ %1520, %1519 ]
  %1538 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1536, i64 1
  %1539 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1536, i64 1, i32 1
  %1540 = load i32, i32* %1539, align 4
  switch i32 %1540, label %1552 [
    i32 2, label %1541
    i32 1, label %1545
  ]

1541:                                             ; preds = %1532
  %1542 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1538, i64 0, i32 0, i32 0
  %1543 = load i32, i32* %1542, align 4
  %1544 = shl i32 %1543, 16
  br label %1569

1545:                                             ; preds = %1532
  %1546 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1538, i64 0, i32 0, i32 0
  %1547 = load i32, i32* %1546, align 4
  %1548 = add nsw i32 %1547, 8192
  %1549 = ashr i32 %1547, 31
  %1550 = add nsw i32 %1548, %1549
  %1551 = ashr i32 %1550, 14
  br label %1569

1552:                                             ; preds = %1532
  %1553 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1538, i64 0, i32 0, i32 0
  %1554 = load i32, i32* %1553, align 4
  br label %1569

1555:                                             ; preds = %1529
  store i32 130, i32* %1527, align 4
  %1556 = load i64, i64* %187, align 8
  %1557 = load i64, i64* %208, align 8
  %1558 = sub i64 %1556, %1557
  %1559 = lshr exact i64 %1558, 3
  %1560 = trunc i64 %1559 to i32
  %1561 = icmp ult i32 %1560, 2
  br i1 %1561, label %1562, label %1569

1562:                                             ; preds = %1555
  %1563 = load i32*, i32** %173, align 8
  %1564 = icmp eq i32* %1563, null
  br i1 %1564, label %1580, label %1565

1565:                                             ; preds = %1562
  %1566 = load i32, i32* %1563, align 4
  %1567 = icmp eq i32 %1566, 0
  br i1 %1567, label %1568, label %1580

1568:                                             ; preds = %1565
  store i32 130, i32* %1563, align 4
  br label %1580

1569:                                             ; preds = %1552, %1545, %1541, %1555
  %1570 = phi i32 [ 0, %1555 ], [ %1554, %1552 ], [ %1551, %1545 ], [ %1544, %1541 ]
  %1571 = phi i64 [ %1557, %1555 ], [ %1535, %1552 ], [ %1535, %1545 ], [ %1535, %1541 ]
  %1572 = phi i32 [ %1520, %1555 ], [ %1537, %1552 ], [ %1537, %1545 ], [ %1537, %1541 ]
  %1573 = phi i32 [ 0, %1555 ], [ %1534, %1552 ], [ %1534, %1545 ], [ %1534, %1541 ]
  %1574 = phi i32 [ %1524, %1555 ], [ %1533, %1552 ], [ %1533, %1545 ], [ %1533, %1541 ]
  %1575 = sub i32 %1574, %1570
  %1576 = inttoptr i64 %1571 to %struct.CF2_StackNumber_*
  %1577 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1576, i64 2, i32 0, i32 0
  store i32 %1575, i32* %1577, align 4
  %1578 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %1579 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1578, i64 2, i32 1
  store i32 0, i32* %1579, align 4
  br label %1580

1580:                                             ; preds = %1415, %1412, %1529, %1526, %1562, %1565, %1568, %1569
  %1581 = phi i32 [ %1520, %1562 ], [ %1520, %1565 ], [ %1520, %1568 ], [ %1572, %1569 ], [ %1520, %1526 ], [ %1520, %1529 ], [ 0, %1412 ], [ 0, %1415 ]
  %1582 = phi i32 [ 0, %1562 ], [ 0, %1565 ], [ 0, %1568 ], [ %1573, %1569 ], [ 0, %1526 ], [ 0, %1529 ], [ 0, %1412 ], [ 0, %1415 ]
  %1583 = sub i32 %1582, %1581
  %1584 = load i64, i64* %187, align 8
  %1585 = load i64, i64* %208, align 8
  %1586 = sub i64 %1584, %1585
  %1587 = lshr exact i64 %1586, 3
  %1588 = trunc i64 %1587 to i32
  %1589 = icmp ugt i32 %1588, 3
  %1590 = inttoptr i64 %1585 to %struct.CF2_StackNumber_*
  br i1 %1589, label %1597, label %1591

1591:                                             ; preds = %1580
  %1592 = load i32*, i32** %173, align 8
  %1593 = icmp eq i32* %1592, null
  br i1 %1593, label %1637, label %1594

1594:                                             ; preds = %1591
  %1595 = load i32, i32* %1592, align 4
  %1596 = icmp eq i32 %1595, 0
  br i1 %1596, label %1615, label %1637

1597:                                             ; preds = %1580
  %1598 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1590, i64 3
  %1599 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1590, i64 3, i32 1
  %1600 = load i32, i32* %1599, align 4
  switch i32 %1600, label %1612 [
    i32 2, label %1601
    i32 1, label %1605
  ]

1601:                                             ; preds = %1597
  %1602 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1598, i64 0, i32 0, i32 0
  %1603 = load i32, i32* %1602, align 4
  %1604 = shl i32 %1603, 16
  br label %1629

1605:                                             ; preds = %1597
  %1606 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1598, i64 0, i32 0, i32 0
  %1607 = load i32, i32* %1606, align 4
  %1608 = add nsw i32 %1607, 8192
  %1609 = ashr i32 %1607, 31
  %1610 = add nsw i32 %1608, %1609
  %1611 = ashr i32 %1610, 14
  br label %1629

1612:                                             ; preds = %1597
  %1613 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1598, i64 0, i32 0, i32 0
  %1614 = load i32, i32* %1613, align 4
  br label %1629

1615:                                             ; preds = %1594
  store i32 130, i32* %1592, align 4
  %1616 = load i64, i64* %187, align 8
  %1617 = load i64, i64* %208, align 8
  %1618 = sub i64 %1616, %1617
  %1619 = lshr exact i64 %1618, 3
  %1620 = trunc i64 %1619 to i32
  %1621 = icmp ult i32 %1620, 4
  br i1 %1621, label %1622, label %1629

1622:                                             ; preds = %1615
  %1623 = load i32*, i32** %173, align 8
  %1624 = icmp eq i32* %1623, null
  br i1 %1624, label %1637, label %1625

1625:                                             ; preds = %1622
  %1626 = load i32, i32* %1623, align 4
  %1627 = icmp eq i32 %1626, 0
  br i1 %1627, label %1628, label %1637

1628:                                             ; preds = %1625
  store i32 130, i32* %1623, align 4
  br label %1637

1629:                                             ; preds = %1612, %1605, %1601, %1615
  %1630 = phi i32 [ 0, %1615 ], [ %1614, %1612 ], [ %1611, %1605 ], [ %1604, %1601 ]
  %1631 = phi i64 [ %1617, %1615 ], [ %1585, %1612 ], [ %1585, %1605 ], [ %1585, %1601 ]
  %1632 = sub i32 %1583, %1630
  %1633 = inttoptr i64 %1631 to %struct.CF2_StackNumber_*
  %1634 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1633, i64 4, i32 0, i32 0
  store i32 %1632, i32* %1634, align 4
  %1635 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %1636 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1635, i64 4, i32 1
  store i32 0, i32* %1636, align 4
  br label %1637

1637:                                             ; preds = %1594, %1591, %1622, %1625, %1628, %1629
  %1638 = select i1 %1404, %struct.CF2_ArrStackRec_* %26, %struct.CF2_ArrStackRec_* %25
  %1639 = load %struct.FT_Vector_*, %struct.FT_Vector_** %240, align 8
  %1640 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1639, i64 0, i32 0
  %1641 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1639, i64 0, i32 1
  %1642 = select i1 %1404, i64* %1640, i64* %1641
  %1643 = load i64, i64* %1642, align 8
  %1644 = trunc i64 %1643 to i32
  call fastcc void @cf2_doStems(%struct.CF2_FontRec_* %0, %struct.CF2_StackRec_* nonnull %167, %struct.CF2_ArrStackRec_* nonnull %1638, i32* %7, i8* nonnull %24, i32 %1644)
  %1645 = load i8, i8* %211, align 8
  %1646 = icmp eq i8 %1645, 0
  br i1 %1646, label %7429, label %7435

1647:                                             ; preds = %1400
  %1648 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1649 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %1650 = icmp eq %struct.CF2_StackNumber_* %1648, %1649
  br i1 %1650, label %1651, label %1660

1651:                                             ; preds = %1647
  %1652 = load i32*, i32** %173, align 8
  %1653 = icmp eq i32* %1652, null
  br i1 %1653, label %1710, label %1654

1654:                                             ; preds = %1651
  %1655 = load i32, i32* %1652, align 4
  %1656 = icmp eq i32 %1655, 0
  br i1 %1656, label %1657, label %1710

1657:                                             ; preds = %1654
  store i32 161, i32* %1652, align 4
  %1658 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1659 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %1678

1660:                                             ; preds = %1647
  %1661 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1648, i64 -1
  store %struct.CF2_StackNumber_* %1661, %struct.CF2_StackNumber_** %209, align 8
  %1662 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1648, i64 -1, i32 1
  %1663 = load i32, i32* %1662, align 4
  switch i32 %1663, label %1675 [
    i32 2, label %1664
    i32 1, label %1668
  ]

1664:                                             ; preds = %1660
  %1665 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1661, i64 0, i32 0, i32 0
  %1666 = load i32, i32* %1665, align 4
  %1667 = shl i32 %1666, 16
  br label %1678

1668:                                             ; preds = %1660
  %1669 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1661, i64 0, i32 0, i32 0
  %1670 = load i32, i32* %1669, align 4
  %1671 = add nsw i32 %1670, 8192
  %1672 = ashr i32 %1670, 31
  %1673 = add nsw i32 %1671, %1672
  %1674 = ashr i32 %1673, 14
  br label %1678

1675:                                             ; preds = %1660
  %1676 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1661, i64 0, i32 0, i32 0
  %1677 = load i32, i32* %1676, align 4
  br label %1678

1678:                                             ; preds = %1657, %1664, %1668, %1675
  %1679 = phi %struct.CF2_StackNumber_* [ %1649, %1675 ], [ %1649, %1668 ], [ %1649, %1664 ], [ %1659, %1657 ]
  %1680 = phi %struct.CF2_StackNumber_* [ %1661, %1675 ], [ %1661, %1668 ], [ %1661, %1664 ], [ %1658, %1657 ]
  %1681 = phi i32 [ %1677, %1675 ], [ %1674, %1668 ], [ %1667, %1664 ], [ 0, %1657 ]
  %1682 = icmp eq %struct.CF2_StackNumber_* %1680, %1679
  br i1 %1682, label %1683, label %1692

1683:                                             ; preds = %1678
  %1684 = load i32*, i32** %173, align 8
  %1685 = icmp eq i32* %1684, null
  br i1 %1685, label %1710, label %1686

1686:                                             ; preds = %1683
  %1687 = load i32, i32* %1684, align 4
  %1688 = icmp eq i32 %1687, 0
  br i1 %1688, label %1689, label %1710

1689:                                             ; preds = %1686
  store i32 161, i32* %1684, align 4
  %1690 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1691 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %1710

1692:                                             ; preds = %1678
  %1693 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1680, i64 -1
  store %struct.CF2_StackNumber_* %1693, %struct.CF2_StackNumber_** %209, align 8
  %1694 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1680, i64 -1, i32 1
  %1695 = load i32, i32* %1694, align 4
  switch i32 %1695, label %1707 [
    i32 2, label %1696
    i32 1, label %1700
  ]

1696:                                             ; preds = %1692
  %1697 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1693, i64 0, i32 0, i32 0
  %1698 = load i32, i32* %1697, align 4
  %1699 = shl i32 %1698, 16
  br label %1710

1700:                                             ; preds = %1692
  %1701 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1693, i64 0, i32 0, i32 0
  %1702 = load i32, i32* %1701, align 4
  %1703 = add nsw i32 %1702, 8192
  %1704 = ashr i32 %1702, 31
  %1705 = add nsw i32 %1703, %1704
  %1706 = ashr i32 %1705, 14
  br label %1710

1707:                                             ; preds = %1692
  %1708 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1693, i64 0, i32 0, i32 0
  %1709 = load i32, i32* %1708, align 4
  br label %1710

1710:                                             ; preds = %1654, %1651, %1683, %1686, %1689, %1696, %1700, %1707
  %1711 = phi i32 [ %1681, %1707 ], [ %1681, %1700 ], [ %1681, %1696 ], [ %1681, %1683 ], [ %1681, %1686 ], [ %1681, %1689 ], [ 0, %1651 ], [ 0, %1654 ]
  %1712 = phi %struct.CF2_StackNumber_* [ %1679, %1707 ], [ %1679, %1700 ], [ %1679, %1696 ], [ %1679, %1683 ], [ %1679, %1686 ], [ %1691, %1689 ], [ %1648, %1651 ], [ %1648, %1654 ]
  %1713 = phi %struct.CF2_StackNumber_* [ %1693, %1707 ], [ %1693, %1700 ], [ %1693, %1696 ], [ %1679, %1683 ], [ %1679, %1686 ], [ %1690, %1689 ], [ %1648, %1651 ], [ %1648, %1654 ]
  %1714 = phi i32 [ %1709, %1707 ], [ %1706, %1700 ], [ %1699, %1696 ], [ 0, %1683 ], [ 0, %1686 ], [ 0, %1689 ], [ 0, %1651 ], [ 0, %1654 ]
  %1715 = load i32, i32* %185, align 8
  %1716 = zext i32 %1715 to i64
  %1717 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1712, i64 %1716
  %1718 = icmp eq %struct.CF2_StackNumber_* %1713, %1717
  br i1 %1718, label %1719, label %1726

1719:                                             ; preds = %1710
  %1720 = load i32*, i32** %173, align 8
  %1721 = icmp eq i32* %1720, null
  br i1 %1721, label %4123, label %1722

1722:                                             ; preds = %1719
  %1723 = load i32, i32* %1720, align 4
  %1724 = icmp eq i32 %1723, 0
  br i1 %1724, label %1725, label %4123

1725:                                             ; preds = %1722
  store i32 130, i32* %1720, align 4
  br label %4123

1726:                                             ; preds = %1710
  %1727 = icmp ne i32 %1711, 0
  %1728 = icmp ne i32 %1714, 0
  %1729 = and i1 %1727, %1728
  %1730 = zext i1 %1729 to i32
  %1731 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1713, i64 0, i32 0, i32 0
  store i32 %1730, i32* %1731, align 4
  %1732 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1733 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1732, i64 0, i32 1
  store i32 2, i32* %1733, align 4
  %1734 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1735 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1734, i64 1
  store %struct.CF2_StackNumber_* %1735, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

1736:                                             ; preds = %1400
  %1737 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1738 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %1739 = icmp eq %struct.CF2_StackNumber_* %1737, %1738
  br i1 %1739, label %1740, label %1749

1740:                                             ; preds = %1736
  %1741 = load i32*, i32** %173, align 8
  %1742 = icmp eq i32* %1741, null
  br i1 %1742, label %1799, label %1743

1743:                                             ; preds = %1740
  %1744 = load i32, i32* %1741, align 4
  %1745 = icmp eq i32 %1744, 0
  br i1 %1745, label %1746, label %1799

1746:                                             ; preds = %1743
  store i32 161, i32* %1741, align 4
  %1747 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1748 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %1767

1749:                                             ; preds = %1736
  %1750 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1737, i64 -1
  store %struct.CF2_StackNumber_* %1750, %struct.CF2_StackNumber_** %209, align 8
  %1751 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1737, i64 -1, i32 1
  %1752 = load i32, i32* %1751, align 4
  switch i32 %1752, label %1764 [
    i32 2, label %1753
    i32 1, label %1757
  ]

1753:                                             ; preds = %1749
  %1754 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1750, i64 0, i32 0, i32 0
  %1755 = load i32, i32* %1754, align 4
  %1756 = shl i32 %1755, 16
  br label %1767

1757:                                             ; preds = %1749
  %1758 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1750, i64 0, i32 0, i32 0
  %1759 = load i32, i32* %1758, align 4
  %1760 = add nsw i32 %1759, 8192
  %1761 = ashr i32 %1759, 31
  %1762 = add nsw i32 %1760, %1761
  %1763 = ashr i32 %1762, 14
  br label %1767

1764:                                             ; preds = %1749
  %1765 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1750, i64 0, i32 0, i32 0
  %1766 = load i32, i32* %1765, align 4
  br label %1767

1767:                                             ; preds = %1746, %1753, %1757, %1764
  %1768 = phi %struct.CF2_StackNumber_* [ %1738, %1764 ], [ %1738, %1757 ], [ %1738, %1753 ], [ %1748, %1746 ]
  %1769 = phi %struct.CF2_StackNumber_* [ %1750, %1764 ], [ %1750, %1757 ], [ %1750, %1753 ], [ %1747, %1746 ]
  %1770 = phi i32 [ %1766, %1764 ], [ %1763, %1757 ], [ %1756, %1753 ], [ 0, %1746 ]
  %1771 = icmp eq %struct.CF2_StackNumber_* %1769, %1768
  br i1 %1771, label %1772, label %1781

1772:                                             ; preds = %1767
  %1773 = load i32*, i32** %173, align 8
  %1774 = icmp eq i32* %1773, null
  br i1 %1774, label %1799, label %1775

1775:                                             ; preds = %1772
  %1776 = load i32, i32* %1773, align 4
  %1777 = icmp eq i32 %1776, 0
  br i1 %1777, label %1778, label %1799

1778:                                             ; preds = %1775
  store i32 161, i32* %1773, align 4
  %1779 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1780 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %1799

1781:                                             ; preds = %1767
  %1782 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1769, i64 -1
  store %struct.CF2_StackNumber_* %1782, %struct.CF2_StackNumber_** %209, align 8
  %1783 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1769, i64 -1, i32 1
  %1784 = load i32, i32* %1783, align 4
  switch i32 %1784, label %1796 [
    i32 2, label %1785
    i32 1, label %1789
  ]

1785:                                             ; preds = %1781
  %1786 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1782, i64 0, i32 0, i32 0
  %1787 = load i32, i32* %1786, align 4
  %1788 = shl i32 %1787, 16
  br label %1799

1789:                                             ; preds = %1781
  %1790 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1782, i64 0, i32 0, i32 0
  %1791 = load i32, i32* %1790, align 4
  %1792 = add nsw i32 %1791, 8192
  %1793 = ashr i32 %1791, 31
  %1794 = add nsw i32 %1792, %1793
  %1795 = ashr i32 %1794, 14
  br label %1799

1796:                                             ; preds = %1781
  %1797 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1782, i64 0, i32 0, i32 0
  %1798 = load i32, i32* %1797, align 4
  br label %1799

1799:                                             ; preds = %1743, %1740, %1772, %1775, %1778, %1785, %1789, %1796
  %1800 = phi i32 [ %1770, %1796 ], [ %1770, %1789 ], [ %1770, %1785 ], [ %1770, %1772 ], [ %1770, %1775 ], [ %1770, %1778 ], [ 0, %1740 ], [ 0, %1743 ]
  %1801 = phi %struct.CF2_StackNumber_* [ %1768, %1796 ], [ %1768, %1789 ], [ %1768, %1785 ], [ %1768, %1772 ], [ %1768, %1775 ], [ %1780, %1778 ], [ %1737, %1740 ], [ %1737, %1743 ]
  %1802 = phi %struct.CF2_StackNumber_* [ %1782, %1796 ], [ %1782, %1789 ], [ %1782, %1785 ], [ %1768, %1772 ], [ %1768, %1775 ], [ %1779, %1778 ], [ %1737, %1740 ], [ %1737, %1743 ]
  %1803 = phi i32 [ %1798, %1796 ], [ %1795, %1789 ], [ %1788, %1785 ], [ 0, %1772 ], [ 0, %1775 ], [ 0, %1778 ], [ 0, %1740 ], [ 0, %1743 ]
  %1804 = load i32, i32* %185, align 8
  %1805 = zext i32 %1804 to i64
  %1806 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1801, i64 %1805
  %1807 = icmp eq %struct.CF2_StackNumber_* %1802, %1806
  br i1 %1807, label %1808, label %1815

1808:                                             ; preds = %1799
  %1809 = load i32*, i32** %173, align 8
  %1810 = icmp eq i32* %1809, null
  br i1 %1810, label %4123, label %1811

1811:                                             ; preds = %1808
  %1812 = load i32, i32* %1809, align 4
  %1813 = icmp eq i32 %1812, 0
  br i1 %1813, label %1814, label %4123

1814:                                             ; preds = %1811
  store i32 130, i32* %1809, align 4
  br label %4123

1815:                                             ; preds = %1799
  %1816 = or i32 %1803, %1800
  %1817 = icmp ne i32 %1816, 0
  %1818 = zext i1 %1817 to i32
  %1819 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1802, i64 0, i32 0, i32 0
  store i32 %1818, i32* %1819, align 4
  %1820 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1821 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1820, i64 0, i32 1
  store i32 2, i32* %1821, align 4
  %1822 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1823 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1822, i64 1
  store %struct.CF2_StackNumber_* %1823, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

1824:                                             ; preds = %1400
  %1825 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1826 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %1827 = icmp eq %struct.CF2_StackNumber_* %1825, %1826
  br i1 %1827, label %1828, label %1837

1828:                                             ; preds = %1824
  %1829 = load i32*, i32** %173, align 8
  %1830 = icmp eq i32* %1829, null
  br i1 %1830, label %1855, label %1831

1831:                                             ; preds = %1828
  %1832 = load i32, i32* %1829, align 4
  %1833 = icmp eq i32 %1832, 0
  br i1 %1833, label %1834, label %1855

1834:                                             ; preds = %1831
  store i32 161, i32* %1829, align 4
  %1835 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1836 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %1855

1837:                                             ; preds = %1824
  %1838 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1825, i64 -1
  store %struct.CF2_StackNumber_* %1838, %struct.CF2_StackNumber_** %209, align 8
  %1839 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1825, i64 -1, i32 1
  %1840 = load i32, i32* %1839, align 4
  switch i32 %1840, label %1852 [
    i32 2, label %1841
    i32 1, label %1845
  ]

1841:                                             ; preds = %1837
  %1842 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1838, i64 0, i32 0, i32 0
  %1843 = load i32, i32* %1842, align 4
  %1844 = shl i32 %1843, 16
  br label %1855

1845:                                             ; preds = %1837
  %1846 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1838, i64 0, i32 0, i32 0
  %1847 = load i32, i32* %1846, align 4
  %1848 = add nsw i32 %1847, 8192
  %1849 = ashr i32 %1847, 31
  %1850 = add nsw i32 %1848, %1849
  %1851 = ashr i32 %1850, 14
  br label %1855

1852:                                             ; preds = %1837
  %1853 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1838, i64 0, i32 0, i32 0
  %1854 = load i32, i32* %1853, align 4
  br label %1855

1855:                                             ; preds = %1828, %1831, %1834, %1841, %1845, %1852
  %1856 = phi %struct.CF2_StackNumber_* [ %1826, %1852 ], [ %1826, %1845 ], [ %1826, %1841 ], [ %1825, %1828 ], [ %1825, %1831 ], [ %1836, %1834 ]
  %1857 = phi %struct.CF2_StackNumber_* [ %1838, %1852 ], [ %1838, %1845 ], [ %1838, %1841 ], [ %1825, %1828 ], [ %1825, %1831 ], [ %1835, %1834 ]
  %1858 = phi i32 [ %1854, %1852 ], [ %1851, %1845 ], [ %1844, %1841 ], [ 0, %1828 ], [ 0, %1831 ], [ 0, %1834 ]
  %1859 = load i32, i32* %185, align 8
  %1860 = zext i32 %1859 to i64
  %1861 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1856, i64 %1860
  %1862 = icmp eq %struct.CF2_StackNumber_* %1857, %1861
  br i1 %1862, label %1863, label %1870

1863:                                             ; preds = %1855
  %1864 = load i32*, i32** %173, align 8
  %1865 = icmp eq i32* %1864, null
  br i1 %1865, label %4123, label %1866

1866:                                             ; preds = %1863
  %1867 = load i32, i32* %1864, align 4
  %1868 = icmp eq i32 %1867, 0
  br i1 %1868, label %1869, label %4123

1869:                                             ; preds = %1866
  store i32 130, i32* %1864, align 4
  br label %4123

1870:                                             ; preds = %1855
  %1871 = icmp eq i32 %1858, 0
  %1872 = zext i1 %1871 to i32
  %1873 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1857, i64 0, i32 0, i32 0
  store i32 %1872, i32* %1873, align 4
  %1874 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1875 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1874, i64 0, i32 1
  store i32 2, i32* %1875, align 4
  %1876 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1877 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1876, i64 1
  store %struct.CF2_StackNumber_* %1877, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

1878:                                             ; preds = %1400
  %1879 = icmp eq i8 %1393, 0
  br i1 %1879, label %7429, label %1880

1880:                                             ; preds = %1878
  %1881 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 0, i32 1
  %1882 = bitcast %struct.FT_FaceRec_** %1881 to %struct.T1_FaceRec_**
  %1883 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %1882, align 8
  %1884 = bitcast %struct.CF2_BufferRec_* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1884) #11
  %1885 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %29, i64 0, i32 1
  %1886 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %29, i64 0, i32 2
  %1887 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %29, i64 0, i32 3
  %1888 = bitcast i32* %30 to i8*
  %1889 = bitcast %struct.CF2_BufferRec_* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1889, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1888) #11
  store i32 -1431655766, i32* %30, align 4
  %1890 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1891 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %1892 = icmp eq %struct.CF2_StackNumber_* %1890, %1891
  br i1 %1892, label %1893, label %1900

1893:                                             ; preds = %1880
  %1894 = load i32*, i32** %173, align 8
  %1895 = icmp eq i32* %1894, null
  br i1 %1895, label %1915, label %1896

1896:                                             ; preds = %1893
  %1897 = load i32, i32* %1894, align 4
  %1898 = icmp eq i32 %1897, 0
  br i1 %1898, label %1899, label %1915

1899:                                             ; preds = %1896
  store i32 161, i32* %1894, align 4
  br label %1915

1900:                                             ; preds = %1880
  %1901 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1890, i64 -1, i32 1
  %1902 = load i32, i32* %1901, align 4
  %1903 = icmp eq i32 %1902, 2
  br i1 %1903, label %1911, label %1904

1904:                                             ; preds = %1900
  %1905 = load i32*, i32** %173, align 8
  %1906 = icmp eq i32* %1905, null
  br i1 %1906, label %1915, label %1907

1907:                                             ; preds = %1904
  %1908 = load i32, i32* %1905, align 4
  %1909 = icmp eq i32 %1908, 0
  br i1 %1909, label %1910, label %1915

1910:                                             ; preds = %1907
  store i32 160, i32* %1905, align 4
  br label %1915

1911:                                             ; preds = %1900
  %1912 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1890, i64 -1
  store %struct.CF2_StackNumber_* %1912, %struct.CF2_StackNumber_** %209, align 8
  %1913 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1912, i64 0, i32 0, i32 0
  %1914 = load i32, i32* %1913, align 4
  br label %1915

1915:                                             ; preds = %1893, %1896, %1899, %1904, %1907, %1910, %1911
  %1916 = phi i32 [ %1914, %1911 ], [ 0, %1893 ], [ 0, %1896 ], [ 0, %1899 ], [ 0, %1904 ], [ 0, %1907 ], [ 0, %1910 ]
  %1917 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1918 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %1919 = icmp eq %struct.CF2_StackNumber_* %1917, %1918
  br i1 %1919, label %1920, label %1927

1920:                                             ; preds = %1915
  %1921 = load i32*, i32** %173, align 8
  %1922 = icmp eq i32* %1921, null
  br i1 %1922, label %1942, label %1923

1923:                                             ; preds = %1920
  %1924 = load i32, i32* %1921, align 4
  %1925 = icmp eq i32 %1924, 0
  br i1 %1925, label %1926, label %1942

1926:                                             ; preds = %1923
  store i32 161, i32* %1921, align 4
  br label %1942

1927:                                             ; preds = %1915
  %1928 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1917, i64 -1, i32 1
  %1929 = load i32, i32* %1928, align 4
  %1930 = icmp eq i32 %1929, 2
  br i1 %1930, label %1938, label %1931

1931:                                             ; preds = %1927
  %1932 = load i32*, i32** %173, align 8
  %1933 = icmp eq i32* %1932, null
  br i1 %1933, label %1942, label %1934

1934:                                             ; preds = %1931
  %1935 = load i32, i32* %1932, align 4
  %1936 = icmp eq i32 %1935, 0
  br i1 %1936, label %1937, label %1942

1937:                                             ; preds = %1934
  store i32 160, i32* %1932, align 4
  br label %1942

1938:                                             ; preds = %1927
  %1939 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1917, i64 -1
  store %struct.CF2_StackNumber_* %1939, %struct.CF2_StackNumber_** %209, align 8
  %1940 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1939, i64 0, i32 0, i32 0
  %1941 = load i32, i32* %1940, align 4
  br label %1942

1942:                                             ; preds = %1920, %1923, %1926, %1931, %1934, %1937, %1938
  %1943 = phi i32 [ %1941, %1938 ], [ 0, %1920 ], [ 0, %1923 ], [ 0, %1926 ], [ 0, %1931 ], [ 0, %1934 ], [ 0, %1937 ]
  %1944 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1945 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %1946 = icmp eq %struct.CF2_StackNumber_* %1944, %1945
  br i1 %1946, label %1947, label %1956

1947:                                             ; preds = %1942
  %1948 = load i32*, i32** %173, align 8
  %1949 = icmp eq i32* %1948, null
  br i1 %1949, label %2038, label %1950

1950:                                             ; preds = %1947
  %1951 = load i32, i32* %1948, align 4
  %1952 = icmp eq i32 %1951, 0
  br i1 %1952, label %1953, label %2038

1953:                                             ; preds = %1950
  store i32 161, i32* %1948, align 4
  %1954 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1955 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %1974

1956:                                             ; preds = %1942
  %1957 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1944, i64 -1
  store %struct.CF2_StackNumber_* %1957, %struct.CF2_StackNumber_** %209, align 8
  %1958 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1944, i64 -1, i32 1
  %1959 = load i32, i32* %1958, align 4
  switch i32 %1959, label %1971 [
    i32 2, label %1960
    i32 1, label %1964
  ]

1960:                                             ; preds = %1956
  %1961 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1957, i64 0, i32 0, i32 0
  %1962 = load i32, i32* %1961, align 4
  %1963 = shl i32 %1962, 16
  br label %1974

1964:                                             ; preds = %1956
  %1965 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1957, i64 0, i32 0, i32 0
  %1966 = load i32, i32* %1965, align 4
  %1967 = add nsw i32 %1966, 8192
  %1968 = ashr i32 %1966, 31
  %1969 = add nsw i32 %1967, %1968
  %1970 = ashr i32 %1969, 14
  br label %1974

1971:                                             ; preds = %1956
  %1972 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1957, i64 0, i32 0, i32 0
  %1973 = load i32, i32* %1972, align 4
  br label %1974

1974:                                             ; preds = %1953, %1960, %1964, %1971
  %1975 = phi %struct.CF2_StackNumber_* [ %1945, %1971 ], [ %1945, %1964 ], [ %1945, %1960 ], [ %1955, %1953 ]
  %1976 = phi %struct.CF2_StackNumber_* [ %1957, %1971 ], [ %1957, %1964 ], [ %1957, %1960 ], [ %1954, %1953 ]
  %1977 = phi i32 [ %1973, %1971 ], [ %1970, %1964 ], [ %1963, %1960 ], [ 0, %1953 ]
  %1978 = sext i32 %1977 to i64
  %1979 = icmp eq %struct.CF2_StackNumber_* %1976, %1975
  br i1 %1979, label %1980, label %1989

1980:                                             ; preds = %1974
  %1981 = load i32*, i32** %173, align 8
  %1982 = icmp eq i32* %1981, null
  br i1 %1982, label %2038, label %1983

1983:                                             ; preds = %1980
  %1984 = load i32, i32* %1981, align 4
  %1985 = icmp eq i32 %1984, 0
  br i1 %1985, label %1986, label %2038

1986:                                             ; preds = %1983
  store i32 161, i32* %1981, align 4
  %1987 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %1988 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %2007

1989:                                             ; preds = %1974
  %1990 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1976, i64 -1
  store %struct.CF2_StackNumber_* %1990, %struct.CF2_StackNumber_** %209, align 8
  %1991 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1976, i64 -1, i32 1
  %1992 = load i32, i32* %1991, align 4
  switch i32 %1992, label %2004 [
    i32 2, label %1993
    i32 1, label %1997
  ]

1993:                                             ; preds = %1989
  %1994 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1990, i64 0, i32 0, i32 0
  %1995 = load i32, i32* %1994, align 4
  %1996 = shl i32 %1995, 16
  br label %2007

1997:                                             ; preds = %1989
  %1998 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1990, i64 0, i32 0, i32 0
  %1999 = load i32, i32* %1998, align 4
  %2000 = add nsw i32 %1999, 8192
  %2001 = ashr i32 %1999, 31
  %2002 = add nsw i32 %2000, %2001
  %2003 = ashr i32 %2002, 14
  br label %2007

2004:                                             ; preds = %1989
  %2005 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %1990, i64 0, i32 0, i32 0
  %2006 = load i32, i32* %2005, align 4
  br label %2007

2007:                                             ; preds = %1986, %1993, %1997, %2004
  %2008 = phi %struct.CF2_StackNumber_* [ %1975, %2004 ], [ %1975, %1997 ], [ %1975, %1993 ], [ %1988, %1986 ]
  %2009 = phi %struct.CF2_StackNumber_* [ %1990, %2004 ], [ %1990, %1997 ], [ %1990, %1993 ], [ %1987, %1986 ]
  %2010 = phi i32 [ %2006, %2004 ], [ %2003, %1997 ], [ %1996, %1993 ], [ 0, %1986 ]
  %2011 = sext i32 %2010 to i64
  %2012 = icmp eq %struct.CF2_StackNumber_* %2009, %2008
  br i1 %2012, label %2013, label %2020

2013:                                             ; preds = %2007
  %2014 = load i32*, i32** %173, align 8
  %2015 = icmp eq i32* %2014, null
  br i1 %2015, label %2038, label %2016

2016:                                             ; preds = %2013
  %2017 = load i32, i32* %2014, align 4
  %2018 = icmp eq i32 %2017, 0
  br i1 %2018, label %2019, label %2038

2019:                                             ; preds = %2016
  store i32 161, i32* %2014, align 4
  br label %2038

2020:                                             ; preds = %2007
  %2021 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2009, i64 -1
  store %struct.CF2_StackNumber_* %2021, %struct.CF2_StackNumber_** %209, align 8
  %2022 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2009, i64 -1, i32 1
  %2023 = load i32, i32* %2022, align 4
  switch i32 %2023, label %2035 [
    i32 2, label %2024
    i32 1, label %2028
  ]

2024:                                             ; preds = %2020
  %2025 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2021, i64 0, i32 0, i32 0
  %2026 = load i32, i32* %2025, align 4
  %2027 = shl i32 %2026, 16
  br label %2038

2028:                                             ; preds = %2020
  %2029 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2021, i64 0, i32 0, i32 0
  %2030 = load i32, i32* %2029, align 4
  %2031 = add nsw i32 %2030, 8192
  %2032 = ashr i32 %2030, 31
  %2033 = add nsw i32 %2031, %2032
  %2034 = ashr i32 %2033, 14
  br label %2038

2035:                                             ; preds = %2020
  %2036 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2021, i64 0, i32 0, i32 0
  %2037 = load i32, i32* %2036, align 4
  br label %2038

2038:                                             ; preds = %1950, %1947, %1980, %1983, %2013, %2016, %2019, %2024, %2028, %2035
  %2039 = phi i64 [ %2011, %2035 ], [ %2011, %2028 ], [ %2011, %2024 ], [ %2011, %2013 ], [ %2011, %2016 ], [ %2011, %2019 ], [ 0, %1983 ], [ 0, %1980 ], [ 0, %1947 ], [ 0, %1950 ]
  %2040 = phi i32 [ %1977, %2035 ], [ %1977, %2028 ], [ %1977, %2024 ], [ %1977, %2013 ], [ %1977, %2016 ], [ %1977, %2019 ], [ %1977, %1983 ], [ %1977, %1980 ], [ 0, %1947 ], [ 0, %1950 ]
  %2041 = phi i64 [ %1978, %2035 ], [ %1978, %2028 ], [ %1978, %2024 ], [ %1978, %2013 ], [ %1978, %2016 ], [ %1978, %2019 ], [ %1978, %1983 ], [ %1978, %1980 ], [ 0, %1947 ], [ 0, %1950 ]
  %2042 = phi i32 [ %2037, %2035 ], [ %2034, %2028 ], [ %2027, %2024 ], [ 0, %2013 ], [ 0, %2016 ], [ 0, %2019 ], [ 0, %1983 ], [ 0, %1980 ], [ 0, %1947 ], [ 0, %1950 ]
  %2043 = sext i32 %2042 to i64
  %2044 = icmp eq i8 %4, 0
  br i1 %2044, label %2045, label %2341

2045:                                             ; preds = %2038
  %2046 = load i8, i8* %241, align 1
  %2047 = icmp eq i8 %2046, 0
  br i1 %2047, label %2048, label %2341

2048:                                             ; preds = %2045
  %2049 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 20
  %2050 = load i8**, i8*** %2049, align 8
  %2051 = icmp eq i8** %2050, null
  %2052 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %1883, i64 0, i32 0, i32 30
  %2053 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %2052, align 8
  %2054 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %2053, i64 0, i32 4
  %2055 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %2054, align 8
  br i1 %2051, label %2056, label %2063

2056:                                             ; preds = %2048
  %2057 = icmp eq %struct.FT_Incremental_InterfaceRec_* %2055, null
  br i1 %2057, label %2341, label %2058

2058:                                             ; preds = %2056
  %2059 = load %struct.FT_Vector_*, %struct.FT_Vector_** %240, align 8
  %2060 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2059, i64 0, i32 0
  %2061 = load i64, i64* %2060, align 8
  %2062 = add nsw i64 %2061, %2039
  br label %2143

2063:                                             ; preds = %2048
  %2064 = load %struct.FT_Vector_*, %struct.FT_Vector_** %240, align 8
  %2065 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2064, i64 0, i32 0
  %2066 = load i64, i64* %2065, align 8
  %2067 = add nsw i64 %2066, %2039
  %2068 = icmp eq %struct.FT_Incremental_InterfaceRec_* %2055, null
  br i1 %2068, label %2069, label %2143

2069:                                             ; preds = %2063
  %2070 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 26
  %2071 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %2070, align 8
  %2072 = icmp ugt i32 %1943, 255
  br i1 %2072, label %2106, label %2073

2073:                                             ; preds = %2069
  %2074 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %2071, i64 0, i32 5
  %2075 = load i8* (i32)*, i8* (i32)** %2074, align 8
  %2076 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %2071, i64 0, i32 6
  %2077 = load i16*, i16** %2076, align 8
  %2078 = sext i32 %1943 to i64
  %2079 = getelementptr inbounds i16, i16* %2077, i64 %2078
  %2080 = load i16, i16* %2079, align 2
  %2081 = zext i16 %2080 to i32
  %2082 = call i8* %2075(i32 %2081) #11
  %2083 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 21
  %2084 = load i32, i32* %2083, align 8
  %2085 = icmp eq i32 %2084, 0
  br i1 %2085, label %2106, label %2086

2086:                                             ; preds = %2073
  %2087 = load i8**, i8*** %2049, align 8
  %2088 = zext i32 %2084 to i64
  br label %2089

2089:                                             ; preds = %2101, %2086
  %2090 = phi i64 [ 0, %2086 ], [ %2102, %2101 ]
  %2091 = getelementptr inbounds i8*, i8** %2087, i64 %2090
  %2092 = load i8*, i8** %2091, align 8
  %2093 = icmp eq i8* %2092, null
  br i1 %2093, label %2101, label %2094

2094:                                             ; preds = %2089
  %2095 = load i8, i8* %2092, align 1
  %2096 = load i8, i8* %2082, align 1
  %2097 = icmp eq i8 %2095, %2096
  br i1 %2097, label %2098, label %2101

2098:                                             ; preds = %2094
  %2099 = call i32 @strcmp(i8* nonnull %2092, i8* %2082) #12
  %2100 = icmp eq i32 %2099, 0
  br i1 %2100, label %2104, label %2101

2101:                                             ; preds = %2098, %2094, %2089
  %2102 = add nuw nsw i64 %2090, 1
  %2103 = icmp eq i64 %2102, %2088
  br i1 %2103, label %2106, label %2089

2104:                                             ; preds = %2098
  %2105 = trunc i64 %2090 to i32
  br label %2106

2106:                                             ; preds = %2101, %2069, %2073, %2104
  %2107 = phi i32 [ -1, %2069 ], [ -1, %2073 ], [ %2105, %2104 ], [ -1, %2101 ]
  %2108 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %2070, align 8
  %2109 = icmp ugt i32 %1916, 255
  br i1 %2109, label %2143, label %2110

2110:                                             ; preds = %2106
  %2111 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %2108, i64 0, i32 5
  %2112 = load i8* (i32)*, i8* (i32)** %2111, align 8
  %2113 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %2108, i64 0, i32 6
  %2114 = load i16*, i16** %2113, align 8
  %2115 = sext i32 %1916 to i64
  %2116 = getelementptr inbounds i16, i16* %2114, i64 %2115
  %2117 = load i16, i16* %2116, align 2
  %2118 = zext i16 %2117 to i32
  %2119 = call i8* %2112(i32 %2118) #11
  %2120 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 21
  %2121 = load i32, i32* %2120, align 8
  %2122 = icmp eq i32 %2121, 0
  br i1 %2122, label %2143, label %2123

2123:                                             ; preds = %2110
  %2124 = load i8**, i8*** %2049, align 8
  %2125 = zext i32 %2121 to i64
  br label %2126

2126:                                             ; preds = %2138, %2123
  %2127 = phi i64 [ 0, %2123 ], [ %2139, %2138 ]
  %2128 = getelementptr inbounds i8*, i8** %2124, i64 %2127
  %2129 = load i8*, i8** %2128, align 8
  %2130 = icmp eq i8* %2129, null
  br i1 %2130, label %2138, label %2131

2131:                                             ; preds = %2126
  %2132 = load i8, i8* %2129, align 1
  %2133 = load i8, i8* %2119, align 1
  %2134 = icmp eq i8 %2132, %2133
  br i1 %2134, label %2135, label %2138

2135:                                             ; preds = %2131
  %2136 = call i32 @strcmp(i8* nonnull %2129, i8* %2119) #12
  %2137 = icmp eq i32 %2136, 0
  br i1 %2137, label %2141, label %2138

2138:                                             ; preds = %2135, %2131, %2126
  %2139 = add nuw nsw i64 %2127, 1
  %2140 = icmp eq i64 %2139, %2125
  br i1 %2140, label %2143, label %2126

2141:                                             ; preds = %2135
  %2142 = trunc i64 %2127 to i32
  br label %2143

2143:                                             ; preds = %2138, %2058, %2141, %2110, %2106, %2063
  %2144 = phi i64 [ %2067, %2063 ], [ %2067, %2106 ], [ %2067, %2110 ], [ %2067, %2141 ], [ %2062, %2058 ], [ %2067, %2138 ]
  %2145 = phi i32 [ %1916, %2063 ], [ -1, %2106 ], [ -1, %2110 ], [ %2142, %2141 ], [ %1916, %2058 ], [ -1, %2138 ]
  %2146 = phi i32 [ %1943, %2063 ], [ %2107, %2106 ], [ %2107, %2110 ], [ %2107, %2141 ], [ %1943, %2058 ], [ %2107, %2138 ]
  %2147 = or i32 %2146, %2145
  %2148 = icmp slt i32 %2147, 0
  br i1 %2148, label %2341, label %2149

2149:                                             ; preds = %2143
  %2150 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 0, i32 13
  %2151 = load i8, i8* %2150, align 2
  %2152 = icmp eq i8 %2151, 0
  br i1 %2152, label %2189, label %2153

2153:                                             ; preds = %2149
  %2154 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 0, i32 2
  %2155 = bitcast %struct.CFF_GlyphSlotRec_** %2154 to %struct.FT_GlyphSlotRec_**
  %2156 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %2155, align 8
  %2157 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2156, i64 0, i32 21
  %2158 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %2157, align 8
  %2159 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %2158, i64 0, i32 0
  %2160 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %2159, align 8
  %2161 = call i32 @FT_GlyphLoader_CheckSubGlyphs(%struct.FT_GlyphLoaderRec_* %2160, i32 2) #11
  %2162 = icmp eq i32 %2161, 0
  br i1 %2162, label %2163, label %2341

2163:                                             ; preds = %2153
  %2164 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %2160, i64 0, i32 6, i32 4
  %2165 = load %struct.FT_SubGlyphRec_*, %struct.FT_SubGlyphRec_** %2164, align 8
  %2166 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %2165, i64 0, i32 0
  store i32 %2146, i32* %2166, align 8
  %2167 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %2165, i64 0, i32 1
  store i16 514, i16* %2167, align 4
  %2168 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %2165, i64 0, i32 2
  store i32 0, i32* %2168, align 8
  %2169 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %2165, i64 0, i32 3
  store i32 0, i32* %2169, align 4
  %2170 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %2165, i64 1, i32 0
  store i32 %2145, i32* %2170, align 8
  %2171 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %2165, i64 1, i32 1
  store i16 2, i16* %2171, align 4
  %2172 = sub nsw i64 %2144, %2043
  %2173 = call i64 @FT_RoundFix(i64 %2172) #11
  %2174 = lshr i64 %2173, 16
  %2175 = trunc i64 %2174 to i32
  %2176 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %2165, i64 1, i32 2
  store i32 %2175, i32* %2176, align 8
  %2177 = call i64 @FT_RoundFix(i64 %2041) #11
  %2178 = lshr i64 %2177, 16
  %2179 = trunc i64 %2178 to i32
  %2180 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %2165, i64 1, i32 3
  store i32 %2179, i32* %2180, align 4
  %2181 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2156, i64 0, i32 14
  store i32 2, i32* %2181, align 8
  %2182 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %2160, i64 0, i32 5, i32 4
  %2183 = bitcast %struct.FT_SubGlyphRec_** %2182 to i64*
  %2184 = load i64, i64* %2183, align 8
  %2185 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2156, i64 0, i32 15
  %2186 = bitcast %struct.FT_SubGlyphRec_** %2185 to i64*
  store i64 %2184, i64* %2186, align 8
  %2187 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2156, i64 0, i32 9
  store i32 1668246896, i32* %2187, align 8
  %2188 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %2160, i64 0, i32 6, i32 3
  store i32 2, i32* %2188, align 8
  br label %2341

2189:                                             ; preds = %2149
  %2190 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %246, align 8
  call void @FT_GlyphLoader_Prepare(%struct.FT_GlyphLoaderRec_* %2190) #11
  %2191 = bitcast %struct.FT_Data_* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2191) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2191, i8 -86, i64 16, i1 false) #11
  %2192 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %1882, align 8
  %2193 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %2192, i64 0, i32 0, i32 30
  %2194 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %2193, align 8
  %2195 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %2194, i64 0, i32 4
  %2196 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %2195, align 8
  %2197 = icmp eq %struct.FT_Incremental_InterfaceRec_* %2196, null
  br i1 %2197, label %2198, label %2212

2198:                                             ; preds = %2189
  %2199 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %2192, i64 0, i32 1, i32 15
  %2200 = load i8**, i8*** %2199, align 8
  %2201 = zext i32 %2146 to i64
  %2202 = getelementptr inbounds i8*, i8** %2200, i64 %2201
  %2203 = bitcast i8** %2202 to i64*
  %2204 = load i64, i64* %2203, align 8
  %2205 = bitcast %struct.FT_Data_* %9 to i64*
  store i64 %2204, i64* %2205, align 8
  %2206 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %2192, i64 0, i32 1, i32 16
  %2207 = load i32*, i32** %2206, align 8
  %2208 = getelementptr inbounds i32, i32* %2207, i64 %2201
  %2209 = load i32, i32* %2208, align 4
  %2210 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %9, i64 0, i32 1
  store i32 %2209, i32* %2210, align 8
  %2211 = inttoptr i64 %2204 to i8*
  br label %2227

2212:                                             ; preds = %2189
  %2213 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %2196, i64 0, i32 0
  %2214 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %2213, align 8
  %2215 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %2214, i64 0, i32 0
  %2216 = load i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)** %2215, align 8
  %2217 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %2196, i64 0, i32 1
  %2218 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %2217, align 8
  %2219 = call i32 %2216(%struct.FT_IncrementalRec_* %2218, i32 %2146, %struct.FT_Data_* nonnull %9) #11
  %2220 = icmp eq i32 %2219, 0
  br i1 %2220, label %2221, label %2226

2221:                                             ; preds = %2212
  %2222 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %9, i64 0, i32 0
  %2223 = load i8*, i8** %2222, align 8
  %2224 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %9, i64 0, i32 1
  %2225 = load i32, i32* %2224, align 8
  br label %2227

2226:                                             ; preds = %2212
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2191) #11
  br label %2341

2227:                                             ; preds = %2198, %2221
  %2228 = phi i32 [ %2225, %2221 ], [ %2209, %2198 ]
  %2229 = phi i8* [ %2223, %2221 ], [ %2211, %2198 ]
  %2230 = sext i32 %2228 to i64
  %2231 = bitcast %struct.CF2_BufferRec_* %29 to i64*
  store i64 0, i64* %2231, align 8
  store i8* %2229, i8** %1887, align 8
  store i8* %2229, i8** %1885, align 8
  %2232 = getelementptr inbounds i8, i8* %2229, i64 %2230
  store i8* %2232, i8** %1886, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2191) #11
  %2233 = bitcast %struct.FT_Vector_** %240 to <2 x i64>**
  %2234 = load <2 x i64>*, <2 x i64>** %2233, align 8
  %2235 = load <2 x i64>, <2 x i64>* %2234, align 8
  %2236 = bitcast %struct.FT_Vector_** %239 to <2 x i64>**
  %2237 = load <2 x i64>*, <2 x i64>** %2236, align 8
  %2238 = load <2 x i64>, <2 x i64>* %2237, align 8
  call fastcc void @cf2_interpT2CharString(%struct.CF2_FontRec_* %0, %struct.CF2_BufferRec_* nonnull %29, %struct.CF2_OutlineCallbacksRec_* %2, %struct.FT_Vector_* %3, i8 zeroext 1, i32 0, i32 0, i32* nonnull %30)
  %2239 = bitcast %struct.FT_Data_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2239) #11
  %2240 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %10, i64 0, i32 1
  %2241 = bitcast i32* %2240 to i64*
  store i64 -6148914691236517206, i64* %2241, align 8
  %2242 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %1882, align 8
  %2243 = ptrtoint i8* %2229 to i64
  %2244 = bitcast %struct.FT_Data_* %10 to i64*
  store i64 %2243, i64* %2244, align 8
  %2245 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %10, i64 0, i32 1
  store i32 %2228, i32* %2245, align 8
  %2246 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %2242, i64 0, i32 0, i32 30
  %2247 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %2246, align 8
  %2248 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %2247, i64 0, i32 4
  %2249 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %2248, align 8
  %2250 = icmp eq %struct.FT_Incremental_InterfaceRec_* %2249, null
  br i1 %2250, label %2258, label %2251

2251:                                             ; preds = %2227
  %2252 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %2249, i64 0, i32 0
  %2253 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %2252, align 8
  %2254 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %2253, i64 0, i32 1
  %2255 = load void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)** %2254, align 8
  %2256 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %2249, i64 0, i32 1
  %2257 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %2256, align 8
  call void %2255(%struct.FT_IncrementalRec_* %2257, %struct.FT_Data_* nonnull %10) #11
  br label %2258

2258:                                             ; preds = %2227, %2251
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2239) #11
  %2259 = load i8, i8* %24, align 1
  %2260 = icmp eq i8 %2259, 0
  %2261 = load %struct.FT_Vector_*, %struct.FT_Vector_** %240, align 8
  br i1 %2260, label %2262, label %2268

2262:                                             ; preds = %2258
  %2263 = bitcast %struct.FT_Vector_* %2261 to <2 x i64>*
  %2264 = load <2 x i64>, <2 x i64>* %2263, align 8
  %2265 = bitcast %struct.FT_Vector_** %239 to <2 x i64>**
  %2266 = load <2 x i64>*, <2 x i64>** %2265, align 8
  %2267 = load <2 x i64>, <2 x i64>* %2266, align 8
  br label %2268

2268:                                             ; preds = %2258, %2262
  %2269 = phi <2 x i64> [ %2264, %2262 ], [ %2235, %2258 ]
  %2270 = phi <2 x i64> [ %2267, %2262 ], [ %2238, %2258 ]
  %2271 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2261, i64 0, i32 0
  store i64 0, i64* %2271, align 8
  %2272 = load %struct.FT_Vector_*, %struct.FT_Vector_** %240, align 8
  %2273 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2272, i64 0, i32 1
  store i64 0, i64* %2273, align 8
  %2274 = bitcast %struct.FT_Data_* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2274) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2274, i8 -86, i64 16, i1 false) #11
  %2275 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %1882, align 8
  %2276 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %2275, i64 0, i32 0, i32 30
  %2277 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %2276, align 8
  %2278 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %2277, i64 0, i32 4
  %2279 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %2278, align 8
  %2280 = icmp eq %struct.FT_Incremental_InterfaceRec_* %2279, null
  br i1 %2280, label %2281, label %2295

2281:                                             ; preds = %2268
  %2282 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %2275, i64 0, i32 1, i32 15
  %2283 = load i8**, i8*** %2282, align 8
  %2284 = zext i32 %2145 to i64
  %2285 = getelementptr inbounds i8*, i8** %2283, i64 %2284
  %2286 = bitcast i8** %2285 to i64*
  %2287 = load i64, i64* %2286, align 8
  %2288 = bitcast %struct.FT_Data_* %11 to i64*
  store i64 %2287, i64* %2288, align 8
  %2289 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %2275, i64 0, i32 1, i32 16
  %2290 = load i32*, i32** %2289, align 8
  %2291 = getelementptr inbounds i32, i32* %2290, i64 %2284
  %2292 = load i32, i32* %2291, align 4
  %2293 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %11, i64 0, i32 1
  store i32 %2292, i32* %2293, align 8
  %2294 = inttoptr i64 %2287 to i8*
  br label %2310

2295:                                             ; preds = %2268
  %2296 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %2279, i64 0, i32 0
  %2297 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %2296, align 8
  %2298 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %2297, i64 0, i32 0
  %2299 = load i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)** %2298, align 8
  %2300 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %2279, i64 0, i32 1
  %2301 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %2300, align 8
  %2302 = call i32 %2299(%struct.FT_IncrementalRec_* %2301, i32 %2145, %struct.FT_Data_* nonnull %11) #11
  %2303 = icmp eq i32 %2302, 0
  br i1 %2303, label %2304, label %2309

2304:                                             ; preds = %2295
  %2305 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %11, i64 0, i32 0
  %2306 = load i8*, i8** %2305, align 8
  %2307 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %11, i64 0, i32 1
  %2308 = load i32, i32* %2307, align 8
  br label %2310

2309:                                             ; preds = %2295
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2274) #11
  br label %2341

2310:                                             ; preds = %2281, %2304
  %2311 = phi i32 [ %2308, %2304 ], [ %2292, %2281 ]
  %2312 = phi i8* [ %2306, %2304 ], [ %2294, %2281 ]
  %2313 = sext i32 %2311 to i64
  store i64 0, i64* %2231, align 8
  store i8* %2312, i8** %1887, align 8
  store i8* %2312, i8** %1885, align 8
  %2314 = getelementptr inbounds i8, i8* %2312, i64 %2313
  store i8* %2314, i8** %1886, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2274) #11
  %2315 = trunc i64 %2144 to i32
  %2316 = sub i32 %2315, %2042
  call fastcc void @cf2_interpT2CharString(%struct.CF2_FontRec_* %0, %struct.CF2_BufferRec_* nonnull %29, %struct.CF2_OutlineCallbacksRec_* %2, %struct.FT_Vector_* %3, i8 zeroext 1, i32 %2316, i32 %2040, i32* nonnull %30)
  %2317 = bitcast %struct.FT_Data_* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2317) #11
  %2318 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %12, i64 0, i32 1
  %2319 = bitcast i32* %2318 to i64*
  store i64 -6148914691236517206, i64* %2319, align 8
  %2320 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %1882, align 8
  %2321 = ptrtoint i8* %2312 to i64
  %2322 = bitcast %struct.FT_Data_* %12 to i64*
  store i64 %2321, i64* %2322, align 8
  %2323 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %12, i64 0, i32 1
  store i32 %2311, i32* %2323, align 8
  %2324 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %2320, i64 0, i32 0, i32 30
  %2325 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %2324, align 8
  %2326 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %2325, i64 0, i32 4
  %2327 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %2326, align 8
  %2328 = icmp eq %struct.FT_Incremental_InterfaceRec_* %2327, null
  br i1 %2328, label %2336, label %2329

2329:                                             ; preds = %2310
  %2330 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %2327, i64 0, i32 0
  %2331 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %2330, align 8
  %2332 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %2331, i64 0, i32 1
  %2333 = load void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)** %2332, align 8
  %2334 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %2327, i64 0, i32 1
  %2335 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %2334, align 8
  call void %2333(%struct.FT_IncrementalRec_* %2335, %struct.FT_Data_* nonnull %12) #11
  br label %2336

2336:                                             ; preds = %2310, %2329
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2317) #11
  %2337 = bitcast %struct.FT_Vector_** %240 to <2 x i64>**
  %2338 = load <2 x i64>*, <2 x i64>** %2337, align 8
  store <2 x i64> %2269, <2 x i64>* %2338, align 8
  %2339 = bitcast %struct.FT_Vector_** %239 to <2 x i64>**
  %2340 = load <2 x i64>*, <2 x i64>** %2339, align 8
  store <2 x i64> %2270, <2 x i64>* %2340, align 8
  br label %2341

2341:                                             ; preds = %2309, %2226, %2163, %2153, %2143, %2056, %2045, %2038, %2336
  %2342 = phi i32 [ 0, %2336 ], [ 18, %2038 ], [ 18, %2045 ], [ 18, %2056 ], [ 18, %2143 ], [ 0, %2163 ], [ %2161, %2153 ], [ %2219, %2226 ], [ %2302, %2309 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1888) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1884) #11
  br label %7435

2343:                                             ; preds = %1400
  %2344 = icmp eq i8 %1393, 0
  br i1 %2344, label %7429, label %2345

2345:                                             ; preds = %2343
  %2346 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2347 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2348 = icmp eq %struct.CF2_StackNumber_* %2346, %2347
  br i1 %2348, label %2349, label %2356

2349:                                             ; preds = %2345
  %2350 = load i32*, i32** %173, align 8
  %2351 = icmp eq i32* %2350, null
  br i1 %2351, label %2374, label %2352

2352:                                             ; preds = %2349
  %2353 = load i32, i32* %2350, align 4
  %2354 = icmp eq i32 %2353, 0
  br i1 %2354, label %2355, label %2374

2355:                                             ; preds = %2352
  store i32 161, i32* %2350, align 4
  br label %2374

2356:                                             ; preds = %2345
  %2357 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2346, i64 -1
  store %struct.CF2_StackNumber_* %2357, %struct.CF2_StackNumber_** %209, align 8
  %2358 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2346, i64 -1, i32 1
  %2359 = load i32, i32* %2358, align 4
  switch i32 %2359, label %2371 [
    i32 2, label %2360
    i32 1, label %2364
  ]

2360:                                             ; preds = %2356
  %2361 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2357, i64 0, i32 0, i32 0
  %2362 = load i32, i32* %2361, align 4
  %2363 = shl i32 %2362, 16
  br label %2374

2364:                                             ; preds = %2356
  %2365 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2357, i64 0, i32 0, i32 0
  %2366 = load i32, i32* %2365, align 4
  %2367 = add nsw i32 %2366, 8192
  %2368 = ashr i32 %2366, 31
  %2369 = add nsw i32 %2367, %2368
  %2370 = ashr i32 %2369, 14
  br label %2374

2371:                                             ; preds = %2356
  %2372 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2357, i64 0, i32 0, i32 0
  %2373 = load i32, i32* %2372, align 4
  br label %2374

2374:                                             ; preds = %2349, %2352, %2355, %2360, %2364, %2371
  %2375 = phi i32 [ %2373, %2371 ], [ %2370, %2364 ], [ %2363, %2360 ], [ 0, %2349 ], [ 0, %2352 ], [ 0, %2355 ]
  %2376 = sext i32 %2375 to i64
  %2377 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %2378 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2377, i64 0, i32 1
  store i64 %2376, i64* %2378, align 8
  %2379 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2380 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2381 = icmp eq %struct.CF2_StackNumber_* %2379, %2380
  br i1 %2381, label %2382, label %2389

2382:                                             ; preds = %2374
  %2383 = load i32*, i32** %173, align 8
  %2384 = icmp eq i32* %2383, null
  br i1 %2384, label %2407, label %2385

2385:                                             ; preds = %2382
  %2386 = load i32, i32* %2383, align 4
  %2387 = icmp eq i32 %2386, 0
  br i1 %2387, label %2388, label %2407

2388:                                             ; preds = %2385
  store i32 161, i32* %2383, align 4
  br label %2407

2389:                                             ; preds = %2374
  %2390 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2379, i64 -1
  store %struct.CF2_StackNumber_* %2390, %struct.CF2_StackNumber_** %209, align 8
  %2391 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2379, i64 -1, i32 1
  %2392 = load i32, i32* %2391, align 4
  switch i32 %2392, label %2404 [
    i32 2, label %2393
    i32 1, label %2397
  ]

2393:                                             ; preds = %2389
  %2394 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2390, i64 0, i32 0, i32 0
  %2395 = load i32, i32* %2394, align 4
  %2396 = shl i32 %2395, 16
  br label %2407

2397:                                             ; preds = %2389
  %2398 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2390, i64 0, i32 0, i32 0
  %2399 = load i32, i32* %2398, align 4
  %2400 = add nsw i32 %2399, 8192
  %2401 = ashr i32 %2399, 31
  %2402 = add nsw i32 %2400, %2401
  %2403 = ashr i32 %2402, 14
  br label %2407

2404:                                             ; preds = %2389
  %2405 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2390, i64 0, i32 0, i32 0
  %2406 = load i32, i32* %2405, align 4
  br label %2407

2407:                                             ; preds = %2382, %2385, %2388, %2393, %2397, %2404
  %2408 = phi i32 [ %2406, %2404 ], [ %2403, %2397 ], [ %2396, %2393 ], [ 0, %2382 ], [ 0, %2385 ], [ 0, %2388 ]
  %2409 = sext i32 %2408 to i64
  %2410 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %2411 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2410, i64 0, i32 0
  store i64 %2409, i64* %2411, align 8
  %2412 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2413 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2414 = icmp eq %struct.CF2_StackNumber_* %2412, %2413
  br i1 %2414, label %2415, label %2424

2415:                                             ; preds = %2407
  %2416 = load i32*, i32** %173, align 8
  %2417 = icmp eq i32* %2416, null
  br i1 %2417, label %2472, label %2418

2418:                                             ; preds = %2415
  %2419 = load i32, i32* %2416, align 4
  %2420 = icmp eq i32 %2419, 0
  br i1 %2420, label %2421, label %2472

2421:                                             ; preds = %2418
  store i32 161, i32* %2416, align 4
  %2422 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2423 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %2442

2424:                                             ; preds = %2407
  %2425 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2412, i64 -1
  store %struct.CF2_StackNumber_* %2425, %struct.CF2_StackNumber_** %209, align 8
  %2426 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2412, i64 -1, i32 1
  %2427 = load i32, i32* %2426, align 4
  switch i32 %2427, label %2439 [
    i32 2, label %2428
    i32 1, label %2432
  ]

2428:                                             ; preds = %2424
  %2429 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2425, i64 0, i32 0, i32 0
  %2430 = load i32, i32* %2429, align 4
  %2431 = shl i32 %2430, 16
  br label %2442

2432:                                             ; preds = %2424
  %2433 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2425, i64 0, i32 0, i32 0
  %2434 = load i32, i32* %2433, align 4
  %2435 = add nsw i32 %2434, 8192
  %2436 = ashr i32 %2434, 31
  %2437 = add nsw i32 %2435, %2436
  %2438 = ashr i32 %2437, 14
  br label %2442

2439:                                             ; preds = %2424
  %2440 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2425, i64 0, i32 0, i32 0
  %2441 = load i32, i32* %2440, align 4
  br label %2442

2442:                                             ; preds = %2421, %2428, %2432, %2439
  %2443 = phi %struct.CF2_StackNumber_* [ %2413, %2439 ], [ %2413, %2432 ], [ %2413, %2428 ], [ %2423, %2421 ]
  %2444 = phi %struct.CF2_StackNumber_* [ %2425, %2439 ], [ %2425, %2432 ], [ %2425, %2428 ], [ %2422, %2421 ]
  %2445 = phi i32 [ %2441, %2439 ], [ %2438, %2432 ], [ %2431, %2428 ], [ 0, %2421 ]
  %2446 = icmp eq %struct.CF2_StackNumber_* %2444, %2443
  br i1 %2446, label %2447, label %2454

2447:                                             ; preds = %2442
  %2448 = load i32*, i32** %173, align 8
  %2449 = icmp eq i32* %2448, null
  br i1 %2449, label %2472, label %2450

2450:                                             ; preds = %2447
  %2451 = load i32, i32* %2448, align 4
  %2452 = icmp eq i32 %2451, 0
  br i1 %2452, label %2453, label %2472

2453:                                             ; preds = %2450
  store i32 161, i32* %2448, align 4
  br label %2472

2454:                                             ; preds = %2442
  %2455 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2444, i64 -1
  store %struct.CF2_StackNumber_* %2455, %struct.CF2_StackNumber_** %209, align 8
  %2456 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2444, i64 -1, i32 1
  %2457 = load i32, i32* %2456, align 4
  switch i32 %2457, label %2469 [
    i32 2, label %2458
    i32 1, label %2462
  ]

2458:                                             ; preds = %2454
  %2459 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2455, i64 0, i32 0, i32 0
  %2460 = load i32, i32* %2459, align 4
  %2461 = shl i32 %2460, 16
  br label %2472

2462:                                             ; preds = %2454
  %2463 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2455, i64 0, i32 0, i32 0
  %2464 = load i32, i32* %2463, align 4
  %2465 = add nsw i32 %2464, 8192
  %2466 = ashr i32 %2464, 31
  %2467 = add nsw i32 %2465, %2466
  %2468 = ashr i32 %2467, 14
  br label %2472

2469:                                             ; preds = %2454
  %2470 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2455, i64 0, i32 0, i32 0
  %2471 = load i32, i32* %2470, align 4
  br label %2472

2472:                                             ; preds = %2418, %2415, %2447, %2450, %2453, %2458, %2462, %2469
  %2473 = phi i32 [ %2445, %2469 ], [ %2445, %2462 ], [ %2445, %2458 ], [ %2445, %2447 ], [ %2445, %2450 ], [ %2445, %2453 ], [ 0, %2415 ], [ 0, %2418 ]
  %2474 = phi i32 [ %2471, %2469 ], [ %2468, %2462 ], [ %2461, %2458 ], [ 0, %2447 ], [ 0, %2450 ], [ 0, %2453 ], [ 0, %2415 ], [ 0, %2418 ]
  %2475 = load %struct.FT_Vector_*, %struct.FT_Vector_** %240, align 8
  %2476 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2475, i64 0, i32 0
  %2477 = load i64, i64* %2476, align 8
  %2478 = trunc i64 %2477 to i32
  %2479 = add i32 %2474, %2478
  %2480 = sext i32 %2479 to i64
  store i64 %2480, i64* %2476, align 8
  %2481 = load %struct.FT_Vector_*, %struct.FT_Vector_** %240, align 8
  %2482 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2481, i64 0, i32 1
  %2483 = load i64, i64* %2482, align 8
  %2484 = trunc i64 %2483 to i32
  %2485 = add i32 %2473, %2484
  %2486 = sext i32 %2485 to i64
  store i64 %2486, i64* %2482, align 8
  store i8 1, i8* %24, align 1
  %2487 = load i8, i8* %241, align 1
  %2488 = icmp eq i8 %2487, 0
  br i1 %2488, label %2489, label %7435

2489:                                             ; preds = %2472
  %2490 = icmp eq i8 %272, 0
  br i1 %2490, label %7429, label %2491

2491:                                             ; preds = %2489
  %2492 = load i32, i32* %19, align 4
  %2493 = add i32 %2492, %2474
  store i32 %2493, i32* %19, align 4
  %2494 = load i32, i32* %20, align 4
  %2495 = add i32 %2494, %2473
  store i32 %2495, i32* %20, align 4
  br label %7429

2496:                                             ; preds = %1400
  %2497 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2498 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2499 = icmp eq %struct.CF2_StackNumber_* %2497, %2498
  br i1 %2499, label %2500, label %2509

2500:                                             ; preds = %2496
  %2501 = load i32*, i32** %173, align 8
  %2502 = icmp eq i32* %2501, null
  br i1 %2502, label %2553, label %2503

2503:                                             ; preds = %2500
  %2504 = load i32, i32* %2501, align 4
  %2505 = icmp eq i32 %2504, 0
  br i1 %2505, label %2506, label %2553

2506:                                             ; preds = %2503
  store i32 161, i32* %2501, align 4
  %2507 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2508 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %2553

2509:                                             ; preds = %2496
  %2510 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2497, i64 -1
  store %struct.CF2_StackNumber_* %2510, %struct.CF2_StackNumber_** %209, align 8
  %2511 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2497, i64 -1, i32 1
  %2512 = load i32, i32* %2511, align 4
  switch i32 %2512, label %2524 [
    i32 2, label %2513
    i32 1, label %2517
  ]

2513:                                             ; preds = %2509
  %2514 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2510, i64 0, i32 0, i32 0
  %2515 = load i32, i32* %2514, align 4
  %2516 = shl i32 %2515, 16
  br label %2527

2517:                                             ; preds = %2509
  %2518 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2510, i64 0, i32 0, i32 0
  %2519 = load i32, i32* %2518, align 4
  %2520 = add nsw i32 %2519, 8192
  %2521 = ashr i32 %2519, 31
  %2522 = add nsw i32 %2520, %2521
  %2523 = ashr i32 %2522, 14
  br label %2548

2524:                                             ; preds = %2509
  %2525 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2510, i64 0, i32 0, i32 0
  %2526 = load i32, i32* %2525, align 4
  br label %2527

2527:                                             ; preds = %2513, %2524
  %2528 = phi i32 [ %2526, %2524 ], [ %2516, %2513 ]
  %2529 = icmp eq i32 %2528, -2147483648
  br i1 %2529, label %2530, label %2548

2530:                                             ; preds = %2527
  %2531 = load i32, i32* %185, align 8
  %2532 = zext i32 %2531 to i64
  %2533 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2498, i64 %2532
  %2534 = icmp eq %struct.CF2_StackNumber_* %2510, %2533
  br i1 %2534, label %2535, label %2542

2535:                                             ; preds = %2530
  %2536 = load i32*, i32** %173, align 8
  %2537 = icmp eq i32* %2536, null
  br i1 %2537, label %4123, label %2538

2538:                                             ; preds = %2535
  %2539 = load i32, i32* %2536, align 4
  %2540 = icmp eq i32 %2539, 0
  br i1 %2540, label %2541, label %4123

2541:                                             ; preds = %2538
  store i32 130, i32* %2536, align 4
  br label %4123

2542:                                             ; preds = %2530
  %2543 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2510, i64 0, i32 0, i32 0
  store i32 2147483647, i32* %2543, align 4
  %2544 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2545 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2544, i64 0, i32 1
  store i32 0, i32* %2545, align 4
  %2546 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2547 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2546, i64 1
  store %struct.CF2_StackNumber_* %2547, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

2548:                                             ; preds = %2517, %2527
  %2549 = phi i32 [ %2528, %2527 ], [ %2523, %2517 ]
  %2550 = icmp slt i32 %2549, 0
  %2551 = sub nsw i32 0, %2549
  %2552 = select i1 %2550, i32 %2551, i32 %2549
  br label %2553

2553:                                             ; preds = %2548, %2500, %2503, %2506
  %2554 = phi %struct.CF2_StackNumber_* [ %2508, %2506 ], [ %2497, %2503 ], [ %2497, %2500 ], [ %2498, %2548 ]
  %2555 = phi %struct.CF2_StackNumber_* [ %2507, %2506 ], [ %2497, %2503 ], [ %2497, %2500 ], [ %2510, %2548 ]
  %2556 = phi i32 [ 0, %2506 ], [ 0, %2503 ], [ 0, %2500 ], [ %2552, %2548 ]
  %2557 = load i32, i32* %185, align 8
  %2558 = zext i32 %2557 to i64
  %2559 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2554, i64 %2558
  %2560 = icmp eq %struct.CF2_StackNumber_* %2555, %2559
  br i1 %2560, label %2561, label %2568

2561:                                             ; preds = %2553
  %2562 = load i32*, i32** %173, align 8
  %2563 = icmp eq i32* %2562, null
  br i1 %2563, label %4123, label %2564

2564:                                             ; preds = %2561
  %2565 = load i32, i32* %2562, align 4
  %2566 = icmp eq i32 %2565, 0
  br i1 %2566, label %2567, label %4123

2567:                                             ; preds = %2564
  store i32 130, i32* %2562, align 4
  br label %4123

2568:                                             ; preds = %2553
  %2569 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2555, i64 0, i32 0, i32 0
  store i32 %2556, i32* %2569, align 4
  %2570 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2571 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2570, i64 0, i32 1
  store i32 0, i32* %2571, align 4
  %2572 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2573 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2572, i64 1
  store %struct.CF2_StackNumber_* %2573, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

2574:                                             ; preds = %1400
  %2575 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2576 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2577 = icmp eq %struct.CF2_StackNumber_* %2575, %2576
  br i1 %2577, label %2578, label %2587

2578:                                             ; preds = %2574
  %2579 = load i32*, i32** %173, align 8
  %2580 = icmp eq i32* %2579, null
  br i1 %2580, label %2637, label %2581

2581:                                             ; preds = %2578
  %2582 = load i32, i32* %2579, align 4
  %2583 = icmp eq i32 %2582, 0
  br i1 %2583, label %2584, label %2637

2584:                                             ; preds = %2581
  store i32 161, i32* %2579, align 4
  %2585 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2586 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %2605

2587:                                             ; preds = %2574
  %2588 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2575, i64 -1
  store %struct.CF2_StackNumber_* %2588, %struct.CF2_StackNumber_** %209, align 8
  %2589 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2575, i64 -1, i32 1
  %2590 = load i32, i32* %2589, align 4
  switch i32 %2590, label %2602 [
    i32 2, label %2591
    i32 1, label %2595
  ]

2591:                                             ; preds = %2587
  %2592 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2588, i64 0, i32 0, i32 0
  %2593 = load i32, i32* %2592, align 4
  %2594 = shl i32 %2593, 16
  br label %2605

2595:                                             ; preds = %2587
  %2596 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2588, i64 0, i32 0, i32 0
  %2597 = load i32, i32* %2596, align 4
  %2598 = add nsw i32 %2597, 8192
  %2599 = ashr i32 %2597, 31
  %2600 = add nsw i32 %2598, %2599
  %2601 = ashr i32 %2600, 14
  br label %2605

2602:                                             ; preds = %2587
  %2603 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2588, i64 0, i32 0, i32 0
  %2604 = load i32, i32* %2603, align 4
  br label %2605

2605:                                             ; preds = %2584, %2591, %2595, %2602
  %2606 = phi %struct.CF2_StackNumber_* [ %2576, %2602 ], [ %2576, %2595 ], [ %2576, %2591 ], [ %2586, %2584 ]
  %2607 = phi %struct.CF2_StackNumber_* [ %2588, %2602 ], [ %2588, %2595 ], [ %2588, %2591 ], [ %2585, %2584 ]
  %2608 = phi i32 [ %2604, %2602 ], [ %2601, %2595 ], [ %2594, %2591 ], [ 0, %2584 ]
  %2609 = icmp eq %struct.CF2_StackNumber_* %2607, %2606
  br i1 %2609, label %2610, label %2619

2610:                                             ; preds = %2605
  %2611 = load i32*, i32** %173, align 8
  %2612 = icmp eq i32* %2611, null
  br i1 %2612, label %2637, label %2613

2613:                                             ; preds = %2610
  %2614 = load i32, i32* %2611, align 4
  %2615 = icmp eq i32 %2614, 0
  br i1 %2615, label %2616, label %2637

2616:                                             ; preds = %2613
  store i32 161, i32* %2611, align 4
  %2617 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2618 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %2637

2619:                                             ; preds = %2605
  %2620 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2607, i64 -1
  store %struct.CF2_StackNumber_* %2620, %struct.CF2_StackNumber_** %209, align 8
  %2621 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2607, i64 -1, i32 1
  %2622 = load i32, i32* %2621, align 4
  switch i32 %2622, label %2634 [
    i32 2, label %2623
    i32 1, label %2627
  ]

2623:                                             ; preds = %2619
  %2624 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2620, i64 0, i32 0, i32 0
  %2625 = load i32, i32* %2624, align 4
  %2626 = shl i32 %2625, 16
  br label %2637

2627:                                             ; preds = %2619
  %2628 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2620, i64 0, i32 0, i32 0
  %2629 = load i32, i32* %2628, align 4
  %2630 = add nsw i32 %2629, 8192
  %2631 = ashr i32 %2629, 31
  %2632 = add nsw i32 %2630, %2631
  %2633 = ashr i32 %2632, 14
  br label %2637

2634:                                             ; preds = %2619
  %2635 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2620, i64 0, i32 0, i32 0
  %2636 = load i32, i32* %2635, align 4
  br label %2637

2637:                                             ; preds = %2581, %2578, %2610, %2613, %2616, %2623, %2627, %2634
  %2638 = phi i32 [ %2608, %2634 ], [ %2608, %2627 ], [ %2608, %2623 ], [ %2608, %2610 ], [ %2608, %2613 ], [ %2608, %2616 ], [ 0, %2578 ], [ 0, %2581 ]
  %2639 = phi %struct.CF2_StackNumber_* [ %2606, %2634 ], [ %2606, %2627 ], [ %2606, %2623 ], [ %2606, %2610 ], [ %2606, %2613 ], [ %2618, %2616 ], [ %2575, %2578 ], [ %2575, %2581 ]
  %2640 = phi %struct.CF2_StackNumber_* [ %2620, %2634 ], [ %2620, %2627 ], [ %2620, %2623 ], [ %2606, %2610 ], [ %2606, %2613 ], [ %2617, %2616 ], [ %2575, %2578 ], [ %2575, %2581 ]
  %2641 = phi i32 [ %2636, %2634 ], [ %2633, %2627 ], [ %2626, %2623 ], [ 0, %2610 ], [ 0, %2613 ], [ 0, %2616 ], [ 0, %2578 ], [ 0, %2581 ]
  %2642 = load i32, i32* %185, align 8
  %2643 = zext i32 %2642 to i64
  %2644 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2639, i64 %2643
  %2645 = icmp eq %struct.CF2_StackNumber_* %2640, %2644
  br i1 %2645, label %2646, label %2653

2646:                                             ; preds = %2637
  %2647 = load i32*, i32** %173, align 8
  %2648 = icmp eq i32* %2647, null
  br i1 %2648, label %4123, label %2649

2649:                                             ; preds = %2646
  %2650 = load i32, i32* %2647, align 4
  %2651 = icmp eq i32 %2650, 0
  br i1 %2651, label %2652, label %4123

2652:                                             ; preds = %2649
  store i32 130, i32* %2647, align 4
  br label %4123

2653:                                             ; preds = %2637
  %2654 = add i32 %2641, %2638
  %2655 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2640, i64 0, i32 0, i32 0
  store i32 %2654, i32* %2655, align 4
  %2656 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2657 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2656, i64 0, i32 1
  store i32 0, i32* %2657, align 4
  %2658 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2659 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2658, i64 1
  store %struct.CF2_StackNumber_* %2659, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

2660:                                             ; preds = %1400
  %2661 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2662 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2663 = icmp eq %struct.CF2_StackNumber_* %2661, %2662
  br i1 %2663, label %2664, label %2673

2664:                                             ; preds = %2660
  %2665 = load i32*, i32** %173, align 8
  %2666 = icmp eq i32* %2665, null
  br i1 %2666, label %2723, label %2667

2667:                                             ; preds = %2664
  %2668 = load i32, i32* %2665, align 4
  %2669 = icmp eq i32 %2668, 0
  br i1 %2669, label %2670, label %2723

2670:                                             ; preds = %2667
  store i32 161, i32* %2665, align 4
  %2671 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2672 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %2691

2673:                                             ; preds = %2660
  %2674 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2661, i64 -1
  store %struct.CF2_StackNumber_* %2674, %struct.CF2_StackNumber_** %209, align 8
  %2675 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2661, i64 -1, i32 1
  %2676 = load i32, i32* %2675, align 4
  switch i32 %2676, label %2688 [
    i32 2, label %2677
    i32 1, label %2681
  ]

2677:                                             ; preds = %2673
  %2678 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2674, i64 0, i32 0, i32 0
  %2679 = load i32, i32* %2678, align 4
  %2680 = shl i32 %2679, 16
  br label %2691

2681:                                             ; preds = %2673
  %2682 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2674, i64 0, i32 0, i32 0
  %2683 = load i32, i32* %2682, align 4
  %2684 = add nsw i32 %2683, 8192
  %2685 = ashr i32 %2683, 31
  %2686 = add nsw i32 %2684, %2685
  %2687 = ashr i32 %2686, 14
  br label %2691

2688:                                             ; preds = %2673
  %2689 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2674, i64 0, i32 0, i32 0
  %2690 = load i32, i32* %2689, align 4
  br label %2691

2691:                                             ; preds = %2670, %2677, %2681, %2688
  %2692 = phi %struct.CF2_StackNumber_* [ %2662, %2688 ], [ %2662, %2681 ], [ %2662, %2677 ], [ %2672, %2670 ]
  %2693 = phi %struct.CF2_StackNumber_* [ %2674, %2688 ], [ %2674, %2681 ], [ %2674, %2677 ], [ %2671, %2670 ]
  %2694 = phi i32 [ %2690, %2688 ], [ %2687, %2681 ], [ %2680, %2677 ], [ 0, %2670 ]
  %2695 = icmp eq %struct.CF2_StackNumber_* %2693, %2692
  br i1 %2695, label %2696, label %2705

2696:                                             ; preds = %2691
  %2697 = load i32*, i32** %173, align 8
  %2698 = icmp eq i32* %2697, null
  br i1 %2698, label %2723, label %2699

2699:                                             ; preds = %2696
  %2700 = load i32, i32* %2697, align 4
  %2701 = icmp eq i32 %2700, 0
  br i1 %2701, label %2702, label %2723

2702:                                             ; preds = %2699
  store i32 161, i32* %2697, align 4
  %2703 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2704 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %2723

2705:                                             ; preds = %2691
  %2706 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2693, i64 -1
  store %struct.CF2_StackNumber_* %2706, %struct.CF2_StackNumber_** %209, align 8
  %2707 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2693, i64 -1, i32 1
  %2708 = load i32, i32* %2707, align 4
  switch i32 %2708, label %2720 [
    i32 2, label %2709
    i32 1, label %2713
  ]

2709:                                             ; preds = %2705
  %2710 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2706, i64 0, i32 0, i32 0
  %2711 = load i32, i32* %2710, align 4
  %2712 = shl i32 %2711, 16
  br label %2723

2713:                                             ; preds = %2705
  %2714 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2706, i64 0, i32 0, i32 0
  %2715 = load i32, i32* %2714, align 4
  %2716 = add nsw i32 %2715, 8192
  %2717 = ashr i32 %2715, 31
  %2718 = add nsw i32 %2716, %2717
  %2719 = ashr i32 %2718, 14
  br label %2723

2720:                                             ; preds = %2705
  %2721 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2706, i64 0, i32 0, i32 0
  %2722 = load i32, i32* %2721, align 4
  br label %2723

2723:                                             ; preds = %2667, %2664, %2696, %2699, %2702, %2709, %2713, %2720
  %2724 = phi i32 [ %2694, %2720 ], [ %2694, %2713 ], [ %2694, %2709 ], [ %2694, %2696 ], [ %2694, %2699 ], [ %2694, %2702 ], [ 0, %2664 ], [ 0, %2667 ]
  %2725 = phi %struct.CF2_StackNumber_* [ %2692, %2720 ], [ %2692, %2713 ], [ %2692, %2709 ], [ %2692, %2696 ], [ %2692, %2699 ], [ %2704, %2702 ], [ %2661, %2664 ], [ %2661, %2667 ]
  %2726 = phi %struct.CF2_StackNumber_* [ %2706, %2720 ], [ %2706, %2713 ], [ %2706, %2709 ], [ %2692, %2696 ], [ %2692, %2699 ], [ %2703, %2702 ], [ %2661, %2664 ], [ %2661, %2667 ]
  %2727 = phi i32 [ %2722, %2720 ], [ %2719, %2713 ], [ %2712, %2709 ], [ 0, %2696 ], [ 0, %2699 ], [ 0, %2702 ], [ 0, %2664 ], [ 0, %2667 ]
  %2728 = load i32, i32* %185, align 8
  %2729 = zext i32 %2728 to i64
  %2730 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2725, i64 %2729
  %2731 = icmp eq %struct.CF2_StackNumber_* %2726, %2730
  br i1 %2731, label %2732, label %2739

2732:                                             ; preds = %2723
  %2733 = load i32*, i32** %173, align 8
  %2734 = icmp eq i32* %2733, null
  br i1 %2734, label %4123, label %2735

2735:                                             ; preds = %2732
  %2736 = load i32, i32* %2733, align 4
  %2737 = icmp eq i32 %2736, 0
  br i1 %2737, label %2738, label %4123

2738:                                             ; preds = %2735
  store i32 130, i32* %2733, align 4
  br label %4123

2739:                                             ; preds = %2723
  %2740 = sub i32 %2727, %2724
  %2741 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2726, i64 0, i32 0, i32 0
  store i32 %2740, i32* %2741, align 4
  %2742 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2743 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2742, i64 0, i32 1
  store i32 0, i32* %2743, align 4
  %2744 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2745 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2744, i64 1
  store %struct.CF2_StackNumber_* %2745, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

2746:                                             ; preds = %1400
  %2747 = icmp eq i8 %1393, 0
  %2748 = icmp eq i8 %324, 0
  %2749 = or i1 %2748, %2747
  %2750 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2751 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2752 = icmp eq %struct.CF2_StackNumber_* %2750, %2751
  br i1 %2749, label %2803, label %2753

2753:                                             ; preds = %2746
  br i1 %2752, label %2754, label %2761

2754:                                             ; preds = %2753
  %2755 = load i32*, i32** %173, align 8
  %2756 = icmp eq i32* %2755, null
  br i1 %2756, label %2776, label %2757

2757:                                             ; preds = %2754
  %2758 = load i32, i32* %2755, align 4
  %2759 = icmp eq i32 %2758, 0
  br i1 %2759, label %2760, label %2776

2760:                                             ; preds = %2757
  store i32 161, i32* %2755, align 4
  br label %2776

2761:                                             ; preds = %2753
  %2762 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2750, i64 -1, i32 1
  %2763 = load i32, i32* %2762, align 4
  %2764 = icmp eq i32 %2763, 2
  br i1 %2764, label %2772, label %2765

2765:                                             ; preds = %2761
  %2766 = load i32*, i32** %173, align 8
  %2767 = icmp eq i32* %2766, null
  br i1 %2767, label %2776, label %2768

2768:                                             ; preds = %2765
  %2769 = load i32, i32* %2766, align 4
  %2770 = icmp eq i32 %2769, 0
  br i1 %2770, label %2771, label %2776

2771:                                             ; preds = %2768
  store i32 160, i32* %2766, align 4
  br label %2776

2772:                                             ; preds = %2761
  %2773 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2750, i64 -1
  store %struct.CF2_StackNumber_* %2773, %struct.CF2_StackNumber_** %209, align 8
  %2774 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2773, i64 0, i32 0, i32 0
  %2775 = load i32, i32* %2774, align 4
  br label %2776

2776:                                             ; preds = %2754, %2757, %2760, %2765, %2768, %2771, %2772
  %2777 = phi i32 [ %2775, %2772 ], [ 0, %2754 ], [ 0, %2757 ], [ 0, %2760 ], [ 0, %2765 ], [ 0, %2768 ], [ 0, %2771 ]
  %2778 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2779 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2780 = icmp eq %struct.CF2_StackNumber_* %2778, %2779
  br i1 %2780, label %2781, label %2788

2781:                                             ; preds = %2776
  %2782 = load i32*, i32** %173, align 8
  %2783 = icmp eq i32* %2782, null
  br i1 %2783, label %2861, label %2784

2784:                                             ; preds = %2781
  %2785 = load i32, i32* %2782, align 4
  %2786 = icmp eq i32 %2785, 0
  br i1 %2786, label %2787, label %2861

2787:                                             ; preds = %2784
  store i32 161, i32* %2782, align 4
  br label %2861

2788:                                             ; preds = %2776
  %2789 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2778, i64 -1, i32 1
  %2790 = load i32, i32* %2789, align 4
  %2791 = icmp eq i32 %2790, 2
  br i1 %2791, label %2799, label %2792

2792:                                             ; preds = %2788
  %2793 = load i32*, i32** %173, align 8
  %2794 = icmp eq i32* %2793, null
  br i1 %2794, label %2861, label %2795

2795:                                             ; preds = %2792
  %2796 = load i32, i32* %2793, align 4
  %2797 = icmp eq i32 %2796, 0
  br i1 %2797, label %2798, label %2861

2798:                                             ; preds = %2795
  store i32 160, i32* %2793, align 4
  br label %2861

2799:                                             ; preds = %2788
  %2800 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2778, i64 -1
  store %struct.CF2_StackNumber_* %2800, %struct.CF2_StackNumber_** %209, align 8
  %2801 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2800, i64 0, i32 0, i32 0
  %2802 = load i32, i32* %2801, align 4
  br label %2861

2803:                                             ; preds = %2746
  br i1 %2752, label %2804, label %2813

2804:                                             ; preds = %2803
  %2805 = load i32*, i32** %173, align 8
  %2806 = icmp eq i32* %2805, null
  br i1 %2806, label %2861, label %2807

2807:                                             ; preds = %2804
  %2808 = load i32, i32* %2805, align 4
  %2809 = icmp eq i32 %2808, 0
  br i1 %2809, label %2810, label %2861

2810:                                             ; preds = %2807
  store i32 161, i32* %2805, align 4
  %2811 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2812 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %2831

2813:                                             ; preds = %2803
  %2814 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2750, i64 -1
  store %struct.CF2_StackNumber_* %2814, %struct.CF2_StackNumber_** %209, align 8
  %2815 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2750, i64 -1, i32 1
  %2816 = load i32, i32* %2815, align 4
  switch i32 %2816, label %2828 [
    i32 2, label %2817
    i32 1, label %2821
  ]

2817:                                             ; preds = %2813
  %2818 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2814, i64 0, i32 0, i32 0
  %2819 = load i32, i32* %2818, align 4
  %2820 = shl i32 %2819, 16
  br label %2831

2821:                                             ; preds = %2813
  %2822 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2814, i64 0, i32 0, i32 0
  %2823 = load i32, i32* %2822, align 4
  %2824 = add nsw i32 %2823, 8192
  %2825 = ashr i32 %2823, 31
  %2826 = add nsw i32 %2824, %2825
  %2827 = ashr i32 %2826, 14
  br label %2831

2828:                                             ; preds = %2813
  %2829 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2814, i64 0, i32 0, i32 0
  %2830 = load i32, i32* %2829, align 4
  br label %2831

2831:                                             ; preds = %2810, %2817, %2821, %2828
  %2832 = phi %struct.CF2_StackNumber_* [ %2751, %2828 ], [ %2751, %2821 ], [ %2751, %2817 ], [ %2812, %2810 ]
  %2833 = phi %struct.CF2_StackNumber_* [ %2814, %2828 ], [ %2814, %2821 ], [ %2814, %2817 ], [ %2811, %2810 ]
  %2834 = phi i32 [ %2830, %2828 ], [ %2827, %2821 ], [ %2820, %2817 ], [ 0, %2810 ]
  %2835 = icmp eq %struct.CF2_StackNumber_* %2833, %2832
  br i1 %2835, label %2836, label %2843

2836:                                             ; preds = %2831
  %2837 = load i32*, i32** %173, align 8
  %2838 = icmp eq i32* %2837, null
  br i1 %2838, label %2861, label %2839

2839:                                             ; preds = %2836
  %2840 = load i32, i32* %2837, align 4
  %2841 = icmp eq i32 %2840, 0
  br i1 %2841, label %2842, label %2861

2842:                                             ; preds = %2839
  store i32 161, i32* %2837, align 4
  br label %2861

2843:                                             ; preds = %2831
  %2844 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2833, i64 -1
  store %struct.CF2_StackNumber_* %2844, %struct.CF2_StackNumber_** %209, align 8
  %2845 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2833, i64 -1, i32 1
  %2846 = load i32, i32* %2845, align 4
  switch i32 %2846, label %2858 [
    i32 2, label %2847
    i32 1, label %2851
  ]

2847:                                             ; preds = %2843
  %2848 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2844, i64 0, i32 0, i32 0
  %2849 = load i32, i32* %2848, align 4
  %2850 = shl i32 %2849, 16
  br label %2861

2851:                                             ; preds = %2843
  %2852 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2844, i64 0, i32 0, i32 0
  %2853 = load i32, i32* %2852, align 4
  %2854 = add nsw i32 %2853, 8192
  %2855 = ashr i32 %2853, 31
  %2856 = add nsw i32 %2854, %2855
  %2857 = ashr i32 %2856, 14
  br label %2861

2858:                                             ; preds = %2843
  %2859 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2844, i64 0, i32 0, i32 0
  %2860 = load i32, i32* %2859, align 4
  br label %2861

2861:                                             ; preds = %2807, %2804, %2858, %2851, %2847, %2842, %2839, %2836, %2799, %2798, %2795, %2792, %2787, %2784, %2781
  %2862 = phi i32 [ %2802, %2799 ], [ 0, %2781 ], [ 0, %2784 ], [ 0, %2787 ], [ 0, %2792 ], [ 0, %2795 ], [ 0, %2798 ], [ %2860, %2858 ], [ %2857, %2851 ], [ %2850, %2847 ], [ 0, %2836 ], [ 0, %2839 ], [ 0, %2842 ], [ 0, %2804 ], [ 0, %2807 ]
  %2863 = phi i32 [ %2777, %2799 ], [ %2777, %2781 ], [ %2777, %2784 ], [ %2777, %2787 ], [ %2777, %2792 ], [ %2777, %2795 ], [ %2777, %2798 ], [ %2834, %2858 ], [ %2834, %2851 ], [ %2834, %2847 ], [ %2834, %2836 ], [ %2834, %2839 ], [ %2834, %2842 ], [ 0, %2804 ], [ 0, %2807 ]
  %2864 = phi i8 [ 0, %2799 ], [ 0, %2781 ], [ 0, %2784 ], [ 0, %2787 ], [ 0, %2792 ], [ 0, %2795 ], [ 0, %2798 ], [ %324, %2858 ], [ %324, %2851 ], [ %324, %2847 ], [ %324, %2836 ], [ %324, %2839 ], [ %324, %2842 ], [ %324, %2804 ], [ %324, %2807 ]
  %2865 = sext i32 %2862 to i64
  %2866 = sext i32 %2863 to i64
  %2867 = call i64 @FT_DivFix(i64 %2865, i64 %2866) #11
  %2868 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2869 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2870 = load i32, i32* %185, align 8
  %2871 = zext i32 %2870 to i64
  %2872 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2869, i64 %2871
  %2873 = icmp eq %struct.CF2_StackNumber_* %2868, %2872
  br i1 %2873, label %2874, label %2881

2874:                                             ; preds = %2861
  %2875 = load i32*, i32** %173, align 8
  %2876 = icmp eq i32* %2875, null
  br i1 %2876, label %4123, label %2877

2877:                                             ; preds = %2874
  %2878 = load i32, i32* %2875, align 4
  %2879 = icmp eq i32 %2878, 0
  br i1 %2879, label %2880, label %4123

2880:                                             ; preds = %2877
  store i32 130, i32* %2875, align 4
  br label %4123

2881:                                             ; preds = %2861
  %2882 = trunc i64 %2867 to i32
  %2883 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2868, i64 0, i32 0, i32 0
  store i32 %2882, i32* %2883, align 4
  %2884 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2885 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2884, i64 0, i32 1
  store i32 0, i32* %2885, align 4
  %2886 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2887 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2886, i64 1
  store %struct.CF2_StackNumber_* %2887, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

2888:                                             ; preds = %1400
  %2889 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2890 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2891 = icmp eq %struct.CF2_StackNumber_* %2889, %2890
  br i1 %2891, label %2892, label %2901

2892:                                             ; preds = %2888
  %2893 = load i32*, i32** %173, align 8
  %2894 = icmp eq i32* %2893, null
  br i1 %2894, label %2940, label %2895

2895:                                             ; preds = %2892
  %2896 = load i32, i32* %2893, align 4
  %2897 = icmp eq i32 %2896, 0
  br i1 %2897, label %2898, label %2940

2898:                                             ; preds = %2895
  store i32 161, i32* %2893, align 4
  %2899 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2900 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %2940

2901:                                             ; preds = %2888
  %2902 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2889, i64 -1
  store %struct.CF2_StackNumber_* %2902, %struct.CF2_StackNumber_** %209, align 8
  %2903 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2889, i64 -1, i32 1
  %2904 = load i32, i32* %2903, align 4
  switch i32 %2904, label %2916 [
    i32 2, label %2905
    i32 1, label %2909
  ]

2905:                                             ; preds = %2901
  %2906 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2902, i64 0, i32 0, i32 0
  %2907 = load i32, i32* %2906, align 4
  %2908 = shl i32 %2907, 16
  br label %2919

2909:                                             ; preds = %2901
  %2910 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2902, i64 0, i32 0, i32 0
  %2911 = load i32, i32* %2910, align 4
  %2912 = add nsw i32 %2911, 8192
  %2913 = ashr i32 %2911, 31
  %2914 = add nsw i32 %2912, %2913
  %2915 = ashr i32 %2914, 14
  br label %2940

2916:                                             ; preds = %2901
  %2917 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2902, i64 0, i32 0, i32 0
  %2918 = load i32, i32* %2917, align 4
  br label %2919

2919:                                             ; preds = %2905, %2916
  %2920 = phi i32 [ %2918, %2916 ], [ %2908, %2905 ]
  %2921 = icmp eq i32 %2920, -2147483648
  br i1 %2921, label %2922, label %2940

2922:                                             ; preds = %2919
  %2923 = load i32, i32* %185, align 8
  %2924 = zext i32 %2923 to i64
  %2925 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2890, i64 %2924
  %2926 = icmp eq %struct.CF2_StackNumber_* %2902, %2925
  br i1 %2926, label %2927, label %2934

2927:                                             ; preds = %2922
  %2928 = load i32*, i32** %173, align 8
  %2929 = icmp eq i32* %2928, null
  br i1 %2929, label %4123, label %2930

2930:                                             ; preds = %2927
  %2931 = load i32, i32* %2928, align 4
  %2932 = icmp eq i32 %2931, 0
  br i1 %2932, label %2933, label %4123

2933:                                             ; preds = %2930
  store i32 130, i32* %2928, align 4
  br label %4123

2934:                                             ; preds = %2922
  %2935 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2902, i64 0, i32 0, i32 0
  store i32 2147483647, i32* %2935, align 4
  %2936 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2937 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2936, i64 0, i32 1
  store i32 0, i32* %2937, align 4
  %2938 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2939 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2938, i64 1
  store %struct.CF2_StackNumber_* %2939, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

2940:                                             ; preds = %2898, %2895, %2892, %2909, %2919
  %2941 = phi %struct.CF2_StackNumber_* [ %2890, %2919 ], [ %2900, %2898 ], [ %2889, %2895 ], [ %2889, %2892 ], [ %2890, %2909 ]
  %2942 = phi %struct.CF2_StackNumber_* [ %2902, %2919 ], [ %2899, %2898 ], [ %2889, %2895 ], [ %2889, %2892 ], [ %2902, %2909 ]
  %2943 = phi i32 [ %2920, %2919 ], [ 0, %2898 ], [ 0, %2895 ], [ 0, %2892 ], [ %2915, %2909 ]
  %2944 = load i32, i32* %185, align 8
  %2945 = zext i32 %2944 to i64
  %2946 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2941, i64 %2945
  %2947 = icmp eq %struct.CF2_StackNumber_* %2942, %2946
  br i1 %2947, label %2948, label %2955

2948:                                             ; preds = %2940
  %2949 = load i32*, i32** %173, align 8
  %2950 = icmp eq i32* %2949, null
  br i1 %2950, label %4123, label %2951

2951:                                             ; preds = %2948
  %2952 = load i32, i32* %2949, align 4
  %2953 = icmp eq i32 %2952, 0
  br i1 %2953, label %2954, label %4123

2954:                                             ; preds = %2951
  store i32 130, i32* %2949, align 4
  br label %4123

2955:                                             ; preds = %2940
  %2956 = sub nsw i32 0, %2943
  %2957 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2942, i64 0, i32 0, i32 0
  store i32 %2956, i32* %2957, align 4
  %2958 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2959 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2958, i64 0, i32 1
  store i32 0, i32* %2959, align 4
  %2960 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2961 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2960, i64 1
  store %struct.CF2_StackNumber_* %2961, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

2962:                                             ; preds = %1400
  %2963 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2964 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %2965 = icmp eq %struct.CF2_StackNumber_* %2963, %2964
  br i1 %2965, label %2966, label %2975

2966:                                             ; preds = %2962
  %2967 = load i32*, i32** %173, align 8
  %2968 = icmp eq i32* %2967, null
  br i1 %2968, label %3025, label %2969

2969:                                             ; preds = %2966
  %2970 = load i32, i32* %2967, align 4
  %2971 = icmp eq i32 %2970, 0
  br i1 %2971, label %2972, label %3025

2972:                                             ; preds = %2969
  store i32 161, i32* %2967, align 4
  %2973 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %2974 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %2993

2975:                                             ; preds = %2962
  %2976 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2963, i64 -1
  store %struct.CF2_StackNumber_* %2976, %struct.CF2_StackNumber_** %209, align 8
  %2977 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2963, i64 -1, i32 1
  %2978 = load i32, i32* %2977, align 4
  switch i32 %2978, label %2990 [
    i32 2, label %2979
    i32 1, label %2983
  ]

2979:                                             ; preds = %2975
  %2980 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2976, i64 0, i32 0, i32 0
  %2981 = load i32, i32* %2980, align 4
  %2982 = shl i32 %2981, 16
  br label %2993

2983:                                             ; preds = %2975
  %2984 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2976, i64 0, i32 0, i32 0
  %2985 = load i32, i32* %2984, align 4
  %2986 = add nsw i32 %2985, 8192
  %2987 = ashr i32 %2985, 31
  %2988 = add nsw i32 %2986, %2987
  %2989 = ashr i32 %2988, 14
  br label %2993

2990:                                             ; preds = %2975
  %2991 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2976, i64 0, i32 0, i32 0
  %2992 = load i32, i32* %2991, align 4
  br label %2993

2993:                                             ; preds = %2972, %2979, %2983, %2990
  %2994 = phi %struct.CF2_StackNumber_* [ %2964, %2990 ], [ %2964, %2983 ], [ %2964, %2979 ], [ %2974, %2972 ]
  %2995 = phi %struct.CF2_StackNumber_* [ %2976, %2990 ], [ %2976, %2983 ], [ %2976, %2979 ], [ %2973, %2972 ]
  %2996 = phi i32 [ %2992, %2990 ], [ %2989, %2983 ], [ %2982, %2979 ], [ 0, %2972 ]
  %2997 = icmp eq %struct.CF2_StackNumber_* %2995, %2994
  br i1 %2997, label %2998, label %3007

2998:                                             ; preds = %2993
  %2999 = load i32*, i32** %173, align 8
  %3000 = icmp eq i32* %2999, null
  br i1 %3000, label %3025, label %3001

3001:                                             ; preds = %2998
  %3002 = load i32, i32* %2999, align 4
  %3003 = icmp eq i32 %3002, 0
  br i1 %3003, label %3004, label %3025

3004:                                             ; preds = %3001
  store i32 161, i32* %2999, align 4
  %3005 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3006 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %3025

3007:                                             ; preds = %2993
  %3008 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2995, i64 -1
  store %struct.CF2_StackNumber_* %3008, %struct.CF2_StackNumber_** %209, align 8
  %3009 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %2995, i64 -1, i32 1
  %3010 = load i32, i32* %3009, align 4
  switch i32 %3010, label %3022 [
    i32 2, label %3011
    i32 1, label %3015
  ]

3011:                                             ; preds = %3007
  %3012 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3008, i64 0, i32 0, i32 0
  %3013 = load i32, i32* %3012, align 4
  %3014 = shl i32 %3013, 16
  br label %3025

3015:                                             ; preds = %3007
  %3016 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3008, i64 0, i32 0, i32 0
  %3017 = load i32, i32* %3016, align 4
  %3018 = add nsw i32 %3017, 8192
  %3019 = ashr i32 %3017, 31
  %3020 = add nsw i32 %3018, %3019
  %3021 = ashr i32 %3020, 14
  br label %3025

3022:                                             ; preds = %3007
  %3023 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3008, i64 0, i32 0, i32 0
  %3024 = load i32, i32* %3023, align 4
  br label %3025

3025:                                             ; preds = %2969, %2966, %2998, %3001, %3004, %3011, %3015, %3022
  %3026 = phi i32 [ %2996, %3022 ], [ %2996, %3015 ], [ %2996, %3011 ], [ %2996, %2998 ], [ %2996, %3001 ], [ %2996, %3004 ], [ 0, %2966 ], [ 0, %2969 ]
  %3027 = phi %struct.CF2_StackNumber_* [ %2994, %3022 ], [ %2994, %3015 ], [ %2994, %3011 ], [ %2994, %2998 ], [ %2994, %3001 ], [ %3006, %3004 ], [ %2963, %2966 ], [ %2963, %2969 ]
  %3028 = phi %struct.CF2_StackNumber_* [ %3008, %3022 ], [ %3008, %3015 ], [ %3008, %3011 ], [ %2994, %2998 ], [ %2994, %3001 ], [ %3005, %3004 ], [ %2963, %2966 ], [ %2963, %2969 ]
  %3029 = phi i32 [ %3024, %3022 ], [ %3021, %3015 ], [ %3014, %3011 ], [ 0, %2998 ], [ 0, %3001 ], [ 0, %3004 ], [ 0, %2966 ], [ 0, %2969 ]
  %3030 = load i32, i32* %185, align 8
  %3031 = zext i32 %3030 to i64
  %3032 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3027, i64 %3031
  %3033 = icmp eq %struct.CF2_StackNumber_* %3028, %3032
  br i1 %3033, label %3034, label %3041

3034:                                             ; preds = %3025
  %3035 = load i32*, i32** %173, align 8
  %3036 = icmp eq i32* %3035, null
  br i1 %3036, label %4123, label %3037

3037:                                             ; preds = %3034
  %3038 = load i32, i32* %3035, align 4
  %3039 = icmp eq i32 %3038, 0
  br i1 %3039, label %3040, label %4123

3040:                                             ; preds = %3037
  store i32 130, i32* %3035, align 4
  br label %4123

3041:                                             ; preds = %3025
  %3042 = icmp eq i32 %3029, %3026
  %3043 = zext i1 %3042 to i32
  %3044 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3028, i64 0, i32 0, i32 0
  store i32 %3043, i32* %3044, align 4
  %3045 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3046 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3045, i64 0, i32 1
  store i32 2, i32* %3046, align 4
  %3047 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3048 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3047, i64 1
  store %struct.CF2_StackNumber_* %3048, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

3049:                                             ; preds = %1400
  %3050 = icmp eq i8 %1393, 0
  br i1 %3050, label %4123, label %3051

3051:                                             ; preds = %3049
  %3052 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3053 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %3054 = icmp eq %struct.CF2_StackNumber_* %3052, %3053
  br i1 %3054, label %3055, label %3062

3055:                                             ; preds = %3051
  %3056 = load i32*, i32** %173, align 8
  %3057 = icmp eq i32* %3056, null
  br i1 %3057, label %3077, label %3058

3058:                                             ; preds = %3055
  %3059 = load i32, i32* %3056, align 4
  %3060 = icmp eq i32 %3059, 0
  br i1 %3060, label %3061, label %3077

3061:                                             ; preds = %3058
  store i32 161, i32* %3056, align 4
  br label %3077

3062:                                             ; preds = %3051
  %3063 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3052, i64 -1, i32 1
  %3064 = load i32, i32* %3063, align 4
  %3065 = icmp eq i32 %3064, 2
  br i1 %3065, label %3073, label %3066

3066:                                             ; preds = %3062
  %3067 = load i32*, i32** %173, align 8
  %3068 = icmp eq i32* %3067, null
  br i1 %3068, label %3077, label %3069

3069:                                             ; preds = %3066
  %3070 = load i32, i32* %3067, align 4
  %3071 = icmp eq i32 %3070, 0
  br i1 %3071, label %3072, label %3077

3072:                                             ; preds = %3069
  store i32 160, i32* %3067, align 4
  br label %3077

3073:                                             ; preds = %3062
  %3074 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3052, i64 -1
  store %struct.CF2_StackNumber_* %3074, %struct.CF2_StackNumber_** %209, align 8
  %3075 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3074, i64 0, i32 0, i32 0
  %3076 = load i32, i32* %3075, align 4
  br label %3077

3077:                                             ; preds = %3055, %3058, %3061, %3066, %3069, %3072, %3073
  %3078 = phi i32 [ %3076, %3073 ], [ 0, %3055 ], [ 0, %3058 ], [ 0, %3061 ], [ 0, %3066 ], [ 0, %3069 ], [ 0, %3072 ]
  %3079 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3080 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %3081 = icmp eq %struct.CF2_StackNumber_* %3079, %3080
  br i1 %3081, label %3082, label %3089

3082:                                             ; preds = %3077
  %3083 = load i32*, i32** %173, align 8
  %3084 = icmp eq i32* %3083, null
  br i1 %3084, label %3104, label %3085

3085:                                             ; preds = %3082
  %3086 = load i32, i32* %3083, align 4
  %3087 = icmp eq i32 %3086, 0
  br i1 %3087, label %3088, label %3104

3088:                                             ; preds = %3085
  store i32 161, i32* %3083, align 4
  br label %3104

3089:                                             ; preds = %3077
  %3090 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3079, i64 -1, i32 1
  %3091 = load i32, i32* %3090, align 4
  %3092 = icmp eq i32 %3091, 2
  br i1 %3092, label %3100, label %3093

3093:                                             ; preds = %3089
  %3094 = load i32*, i32** %173, align 8
  %3095 = icmp eq i32* %3094, null
  br i1 %3095, label %3104, label %3096

3096:                                             ; preds = %3093
  %3097 = load i32, i32* %3094, align 4
  %3098 = icmp eq i32 %3097, 0
  br i1 %3098, label %3099, label %3104

3099:                                             ; preds = %3096
  store i32 160, i32* %3094, align 4
  br label %3104

3100:                                             ; preds = %3089
  %3101 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3079, i64 -1
  store %struct.CF2_StackNumber_* %3101, %struct.CF2_StackNumber_** %209, align 8
  %3102 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3101, i64 0, i32 0, i32 0
  %3103 = load i32, i32* %3102, align 4
  br label %3104

3104:                                             ; preds = %3082, %3085, %3088, %3093, %3096, %3099, %3100
  %3105 = phi i32 [ %3103, %3100 ], [ 0, %3082 ], [ 0, %3085 ], [ 0, %3088 ], [ 0, %3093 ], [ 0, %3096 ], [ 0, %3099 ]
  %3106 = load i64, i64* %187, align 8
  %3107 = load i64, i64* %208, align 8
  %3108 = sub i64 %3106, %3107
  %3109 = lshr exact i64 %3108, 3
  %3110 = trunc i64 %3109 to i32
  %3111 = sub i32 %3110, %3105
  %3112 = inttoptr i64 %3106 to %struct.CF2_StackNumber_*
  %3113 = inttoptr i64 %3107 to %struct.CF2_StackNumber_*
  switch i32 %3078, label %4116 [
    i32 0, label %3114
    i32 1, label %3165
    i32 2, label %3186
    i32 3, label %3234
    i32 12, label %3239
    i32 13, label %3239
    i32 14, label %3240
    i32 15, label %3240
    i32 16, label %3240
    i32 17, label %3240
    i32 18, label %3240
    i32 19, label %3401
    i32 20, label %3448
    i32 21, label %3534
    i32 22, label %3620
    i32 23, label %3713
    i32 24, label %3801
    i32 25, label %3870
    i32 27, label %3929
    i32 28, label %4083
  ]

3114:                                             ; preds = %3104
  %3115 = icmp eq i32 %3105, 3
  br i1 %3115, label %3116, label %7435

3116:                                             ; preds = %3114
  %3117 = icmp eq i8 %272, 0
  br i1 %3117, label %3124, label %3118

3118:                                             ; preds = %3116
  %3119 = load i32, i32* %212, align 8
  %3120 = icmp eq i32 %3119, 0
  br i1 %3120, label %7435, label %3121

3121:                                             ; preds = %3118
  %3122 = load i32, i32* %245, align 4
  %3123 = icmp eq i32 %3122, 7
  br i1 %3123, label %3124, label %7435

3124:                                             ; preds = %3121, %3116
  %3125 = load i32, i32* %185, align 8
  %3126 = zext i32 %3125 to i64
  %3127 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3113, i64 %3126
  %3128 = icmp eq %struct.CF2_StackNumber_* %3127, %3112
  br i1 %3128, label %3129, label %3137

3129:                                             ; preds = %3124
  %3130 = load i32*, i32** %173, align 8
  %3131 = icmp eq i32* %3130, null
  br i1 %3131, label %3144, label %3132

3132:                                             ; preds = %3129
  %3133 = load i32, i32* %3130, align 4
  %3134 = icmp eq i32 %3133, 0
  br i1 %3134, label %3135, label %3144

3135:                                             ; preds = %3132
  store i32 130, i32* %3130, align 4
  %3136 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  br label %3144

3137:                                             ; preds = %3124
  %3138 = load i32, i32* %19, align 4
  %3139 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 0, i32 0, i32 0
  store i32 %3138, i32* %3139, align 4
  %3140 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3141 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3140, i64 0, i32 1
  store i32 0, i32* %3141, align 4
  %3142 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3143 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3142, i64 1
  store %struct.CF2_StackNumber_* %3143, %struct.CF2_StackNumber_** %209, align 8
  br label %3144

3144:                                             ; preds = %3129, %3132, %3135, %3137
  %3145 = phi %struct.CF2_StackNumber_* [ %3112, %3129 ], [ %3112, %3132 ], [ %3136, %3135 ], [ %3143, %3137 ]
  %3146 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %3147 = load i32, i32* %185, align 8
  %3148 = zext i32 %3147 to i64
  %3149 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3146, i64 %3148
  %3150 = icmp eq %struct.CF2_StackNumber_* %3145, %3149
  br i1 %3150, label %3151, label %3158

3151:                                             ; preds = %3144
  %3152 = load i32*, i32** %173, align 8
  %3153 = icmp eq i32* %3152, null
  br i1 %3153, label %4123, label %3154

3154:                                             ; preds = %3151
  %3155 = load i32, i32* %3152, align 4
  %3156 = icmp eq i32 %3155, 0
  br i1 %3156, label %3157, label %4123

3157:                                             ; preds = %3154
  store i32 130, i32* %3152, align 4
  br label %4123

3158:                                             ; preds = %3144
  %3159 = load i32, i32* %20, align 4
  %3160 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3145, i64 0, i32 0, i32 0
  store i32 %3159, i32* %3160, align 4
  %3161 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3162 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3161, i64 0, i32 1
  store i32 0, i32* %3162, align 4
  %3163 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3164 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3163, i64 1
  store %struct.CF2_StackNumber_* %3164, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

3165:                                             ; preds = %3104
  %3166 = icmp eq i32 %3105, 0
  br i1 %3166, label %3167, label %7435

3167:                                             ; preds = %3165
  %3168 = icmp eq i8 %272, 0
  br i1 %3168, label %4123, label %3169

3169:                                             ; preds = %3167
  %3170 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %246, align 8
  %3171 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %3170, i64 0, i32 5, i32 0, i32 1
  %3172 = load i16, i16* %3171, align 2
  %3173 = sext i16 %3172 to i32
  %3174 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %3170, i64 0, i32 6, i32 0, i32 1
  %3175 = load i16, i16* %3174, align 2
  %3176 = sext i16 %3175 to i32
  %3177 = add nsw i32 %3173, 6
  %3178 = add nsw i32 %3177, %3176
  %3179 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %3170, i64 0, i32 1
  %3180 = load i32, i32* %3179, align 8
  %3181 = icmp ugt i32 %3178, %3180
  br i1 %3181, label %3182, label %3185

3182:                                             ; preds = %3169
  %3183 = call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %3170, i32 6, i32 0) #11
  %3184 = icmp eq i32 %3183, 0
  br i1 %3184, label %3185, label %7435

3185:                                             ; preds = %3169, %3182
  store i32 1, i32* %212, align 8
  store i32 0, i32* %245, align 4
  br label %4123

3186:                                             ; preds = %3104
  %3187 = icmp eq i32 %3105, 0
  br i1 %3187, label %3188, label %7435

3188:                                             ; preds = %3186
  %3189 = icmp eq i8 %272, 0
  br i1 %3189, label %4123, label %3190

3190:                                             ; preds = %3188
  %3191 = load i32, i32* %212, align 8
  %3192 = icmp eq i32 %3191, 0
  br i1 %3192, label %7435, label %3193

3193:                                             ; preds = %3190
  %3194 = load i32, i32* %245, align 4
  %3195 = add nsw i32 %3194, 1
  store i32 %3195, i32* %245, align 4
  %3196 = add i32 %3194, -1
  %3197 = icmp ult i32 %3196, 6
  br i1 %3197, label %3198, label %4123

3198:                                             ; preds = %3193
  %3199 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %246, align 8
  %3200 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %3199, i64 0, i32 5, i32 0, i32 1
  %3201 = load i16, i16* %3200, align 2
  %3202 = sext i16 %3201 to i32
  %3203 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %3199, i64 0, i32 6, i32 0, i32 1
  %3204 = load i16, i16* %3203, align 2
  %3205 = sext i16 %3204 to i32
  %3206 = add nsw i32 %3202, 1
  %3207 = add nsw i32 %3206, %3205
  %3208 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %3199, i64 0, i32 1
  %3209 = load i32, i32* %3208, align 8
  %3210 = icmp ugt i32 %3207, %3209
  br i1 %3210, label %3211, label %3214

3211:                                             ; preds = %3198
  %3212 = call i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_* %3199, i32 1, i32 0) #11
  %3213 = icmp eq i32 %3212, 0
  br i1 %3213, label %3214, label %7435

3214:                                             ; preds = %3198, %3211
  %3215 = icmp sgt i32 %3194, 3
  %3216 = shl i32 %3194, 1
  %3217 = add nsw i32 %3216, -6
  %3218 = select i1 %3215, i32 %3217, i32 %3216
  %3219 = load i32, i32* %19, align 4
  %3220 = add nsw i32 %3218, -2
  %3221 = sext i32 %3220 to i64
  %3222 = getelementptr inbounds [6 x i32], [6 x i32]* %23, i64 0, i64 %3221
  store i32 %3219, i32* %3222, align 8
  %3223 = load i32, i32* %20, align 4
  %3224 = add nsw i32 %3218, -1
  %3225 = sext i32 %3224 to i64
  %3226 = getelementptr inbounds [6 x i32], [6 x i32]* %23, i64 0, i64 %3225
  store i32 %3223, i32* %3226, align 4
  switch i32 %3194, label %4123 [
    i32 6, label %3227
    i32 3, label %3227
  ]

3227:                                             ; preds = %3214, %3214
  %3228 = load i32, i32* %51, align 16
  %3229 = load i32, i32* %52, align 4
  %3230 = load i32, i32* %53, align 8
  %3231 = load i32, i32* %54, align 4
  %3232 = load i32, i32* %55, align 16
  %3233 = load i32, i32* %56, align 4
  call fastcc void @cf2_glyphpath_curveTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %3228, i32 %3229, i32 %3230, i32 %3231, i32 %3232, i32 %3233)
  br label %4123

3234:                                             ; preds = %3104
  %3235 = icmp eq i32 %3105, 1
  br i1 %3235, label %3236, label %7435

3236:                                             ; preds = %3234
  %3237 = icmp eq i8 %272, 0
  br i1 %3237, label %4123, label %3238

3238:                                             ; preds = %3236
  store i64 0, i64* %231, align 8
  store i64 0, i64* %230, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 40, i1 false) #11
  store i32* %37, i32** %72, align 8
  store i8 0, i8* %71, align 8
  store i8 1, i8* %238, align 1
  br label %4123

3239:                                             ; preds = %3104, %3104
  store i64 %3107, i64* %187, align 8
  br label %4123

3240:                                             ; preds = %3104, %3104, %3104, %3104, %3104
  %3241 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %242, align 8
  %3242 = icmp eq %struct.PS_BlendRec_* %3241, null
  br i1 %3242, label %7435, label %3243

3243:                                             ; preds = %3240
  %3244 = add nsw i32 %3078, -13
  %3245 = icmp eq i32 %3078, 18
  %3246 = zext i1 %3245 to i32
  %3247 = add nuw nsw i32 %3244, %3246
  %3248 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %3241, i64 0, i32 0
  %3249 = load i32, i32* %3248, align 8
  %3250 = mul i32 %3249, %3247
  %3251 = icmp eq i32 %3105, %3250
  br i1 %3251, label %3252, label %7435

3252:                                             ; preds = %3243
  %3253 = add i32 %3111, %3247
  %3254 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %3241, i64 0, i32 5
  br label %3255

3255:                                             ; preds = %3378, %3252
  %3256 = phi i64 [ %3107, %3252 ], [ %3382, %3378 ]
  %3257 = phi i64 [ %3106, %3252 ], [ %3381, %3378 ]
  %3258 = phi i32 [ %3111, %3252 ], [ %3358, %3378 ]
  %3259 = phi i32 [ %3253, %3252 ], [ %3356, %3378 ]
  %3260 = phi i32 [ 0, %3252 ], [ %3379, %3378 ]
  %3261 = sub i64 %3257, %3256
  %3262 = lshr exact i64 %3261, 3
  %3263 = trunc i64 %3262 to i32
  %3264 = icmp ult i32 %3258, %3263
  %3265 = inttoptr i64 %3256 to %struct.CF2_StackNumber_*
  br i1 %3264, label %3273, label %3266

3266:                                             ; preds = %3255
  %3267 = load i32*, i32** %173, align 8
  %3268 = icmp eq i32* %3267, null
  br i1 %3268, label %3292, label %3269

3269:                                             ; preds = %3266
  %3270 = load i32, i32* %3267, align 4
  %3271 = icmp eq i32 %3270, 0
  br i1 %3271, label %3272, label %3292

3272:                                             ; preds = %3269
  store i32 130, i32* %3267, align 4
  br label %3292

3273:                                             ; preds = %3255
  %3274 = zext i32 %3258 to i64
  %3275 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3265, i64 %3274
  %3276 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3265, i64 %3274, i32 1
  %3277 = load i32, i32* %3276, align 4
  switch i32 %3277, label %3289 [
    i32 2, label %3278
    i32 1, label %3282
  ]

3278:                                             ; preds = %3273
  %3279 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3275, i64 0, i32 0, i32 0
  %3280 = load i32, i32* %3279, align 4
  %3281 = shl i32 %3280, 16
  br label %3292

3282:                                             ; preds = %3273
  %3283 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3275, i64 0, i32 0, i32 0
  %3284 = load i32, i32* %3283, align 4
  %3285 = add nsw i32 %3284, 8192
  %3286 = ashr i32 %3284, 31
  %3287 = add nsw i32 %3285, %3286
  %3288 = ashr i32 %3287, 14
  br label %3292

3289:                                             ; preds = %3273
  %3290 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3275, i64 0, i32 0, i32 0
  %3291 = load i32, i32* %3290, align 4
  br label %3292

3292:                                             ; preds = %3266, %3269, %3272, %3278, %3282, %3289
  %3293 = phi i32 [ %3291, %3289 ], [ %3288, %3282 ], [ %3281, %3278 ], [ 0, %3266 ], [ 0, %3269 ], [ 0, %3272 ]
  %3294 = load i32, i32* %3248, align 8
  %3295 = icmp ugt i32 %3294, 1
  br i1 %3295, label %3296, label %3355

3296:                                             ; preds = %3292, %3336
  %3297 = phi i32 [ %3337, %3336 ], [ %3294, %3292 ]
  %3298 = phi i64 [ %3352, %3336 ], [ 1, %3292 ]
  %3299 = phi i32 [ %3351, %3336 ], [ %3293, %3292 ]
  %3300 = phi i32 [ %3301, %3336 ], [ %3259, %3292 ]
  %3301 = add i32 %3300, 1
  %3302 = load i64, i64* %187, align 8
  %3303 = load i64, i64* %208, align 8
  %3304 = sub i64 %3302, %3303
  %3305 = lshr exact i64 %3304, 3
  %3306 = trunc i64 %3305 to i32
  %3307 = icmp ult i32 %3300, %3306
  %3308 = inttoptr i64 %3303 to %struct.CF2_StackNumber_*
  br i1 %3307, label %3317, label %3309

3309:                                             ; preds = %3296
  %3310 = load i32*, i32** %173, align 8
  %3311 = icmp eq i32* %3310, null
  br i1 %3311, label %3336, label %3312

3312:                                             ; preds = %3309
  %3313 = load i32, i32* %3310, align 4
  %3314 = icmp eq i32 %3313, 0
  br i1 %3314, label %3315, label %3336

3315:                                             ; preds = %3312
  store i32 130, i32* %3310, align 4
  %3316 = load i32, i32* %3248, align 8
  br label %3336

3317:                                             ; preds = %3296
  %3318 = zext i32 %3300 to i64
  %3319 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3308, i64 %3318
  %3320 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3308, i64 %3318, i32 1
  %3321 = load i32, i32* %3320, align 4
  switch i32 %3321, label %3333 [
    i32 2, label %3322
    i32 1, label %3326
  ]

3322:                                             ; preds = %3317
  %3323 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3319, i64 0, i32 0, i32 0
  %3324 = load i32, i32* %3323, align 4
  %3325 = shl i32 %3324, 16
  br label %3336

3326:                                             ; preds = %3317
  %3327 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3319, i64 0, i32 0, i32 0
  %3328 = load i32, i32* %3327, align 4
  %3329 = add nsw i32 %3328, 8192
  %3330 = ashr i32 %3328, 31
  %3331 = add nsw i32 %3329, %3330
  %3332 = ashr i32 %3331, 14
  br label %3336

3333:                                             ; preds = %3317
  %3334 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3319, i64 0, i32 0, i32 0
  %3335 = load i32, i32* %3334, align 4
  br label %3336

3336:                                             ; preds = %3309, %3312, %3315, %3322, %3326, %3333
  %3337 = phi i32 [ %3297, %3333 ], [ %3297, %3326 ], [ %3297, %3322 ], [ %3297, %3309 ], [ %3297, %3312 ], [ %3316, %3315 ]
  %3338 = phi i32 [ %3335, %3333 ], [ %3332, %3326 ], [ %3325, %3322 ], [ 0, %3309 ], [ 0, %3312 ], [ 0, %3315 ]
  %3339 = load i64*, i64** %3254, align 8
  %3340 = getelementptr inbounds i64, i64* %3339, i64 %3298
  %3341 = load i64, i64* %3340, align 8
  %3342 = sext i32 %3338 to i64
  %3343 = shl i64 %3341, 32
  %3344 = ashr exact i64 %3343, 32
  %3345 = mul nsw i64 %3344, %3342
  %3346 = ashr i64 %3345, 63
  %3347 = add nsw i64 %3345, 32768
  %3348 = add nsw i64 %3347, %3346
  %3349 = lshr i64 %3348, 16
  %3350 = trunc i64 %3349 to i32
  %3351 = add i32 %3299, %3350
  %3352 = add nuw nsw i64 %3298, 1
  %3353 = zext i32 %3337 to i64
  %3354 = icmp ult i64 %3352, %3353
  br i1 %3354, label %3296, label %3355

3355:                                             ; preds = %3336, %3292
  %3356 = phi i32 [ %3259, %3292 ], [ %3301, %3336 ]
  %3357 = phi i32 [ %3293, %3292 ], [ %3351, %3336 ]
  %3358 = add i32 %3258, 1
  %3359 = load i64, i64* %187, align 8
  %3360 = load i64, i64* %208, align 8
  %3361 = sub i64 %3359, %3360
  %3362 = lshr exact i64 %3361, 3
  %3363 = trunc i64 %3362 to i32
  %3364 = icmp ugt i32 %3258, %3363
  br i1 %3364, label %3365, label %3372

3365:                                             ; preds = %3355
  %3366 = load i32*, i32** %173, align 8
  %3367 = icmp eq i32* %3366, null
  br i1 %3367, label %3378, label %3368

3368:                                             ; preds = %3365
  %3369 = load i32, i32* %3366, align 4
  %3370 = icmp eq i32 %3369, 0
  br i1 %3370, label %3371, label %3378

3371:                                             ; preds = %3368
  store i32 130, i32* %3366, align 4
  br label %3378

3372:                                             ; preds = %3355
  %3373 = inttoptr i64 %3360 to %struct.CF2_StackNumber_*
  %3374 = zext i32 %3258 to i64
  %3375 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3373, i64 %3374, i32 0, i32 0
  store i32 %3357, i32* %3375, align 4
  %3376 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %3377 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3376, i64 %3374, i32 1
  store i32 0, i32* %3377, align 4
  br label %3378

3378:                                             ; preds = %3365, %3368, %3371, %3372
  %3379 = add nuw i32 %3260, 1
  %3380 = icmp eq i32 %3379, %3247
  %3381 = load i64, i64* %187, align 8
  %3382 = load i64, i64* %208, align 8
  br i1 %3380, label %3383, label %3255

3383:                                             ; preds = %3378
  %3384 = sub i64 %3381, %3382
  %3385 = lshr exact i64 %3384, 3
  %3386 = trunc i64 %3385 to i32
  %3387 = sub i32 %3105, %3247
  %3388 = icmp ugt i32 %3387, %3386
  br i1 %3388, label %3389, label %3396

3389:                                             ; preds = %3383
  %3390 = load i32*, i32** %173, align 8
  %3391 = icmp eq i32* %3390, null
  br i1 %3391, label %4123, label %3392

3392:                                             ; preds = %3389
  %3393 = load i32, i32* %3390, align 4
  %3394 = icmp eq i32 %3393, 0
  br i1 %3394, label %3395, label %4123

3395:                                             ; preds = %3392
  store i32 161, i32* %3390, align 4
  br label %4123

3396:                                             ; preds = %3383
  %3397 = inttoptr i64 %3381 to %struct.CF2_StackNumber_*
  %3398 = zext i32 %3387 to i64
  %3399 = sub nsw i64 0, %3398
  %3400 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3397, i64 %3399
  store %struct.CF2_StackNumber_* %3400, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

3401:                                             ; preds = %3104
  %3402 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %242, align 8
  %3403 = icmp eq i32 %3105, 1
  %3404 = icmp ne %struct.PS_BlendRec_* %3402, null
  %3405 = and i1 %3403, %3404
  br i1 %3405, label %3406, label %7435

3406:                                             ; preds = %3401
  %3407 = icmp eq %struct.CF2_StackNumber_* %3112, %3113
  br i1 %3407, label %3408, label %3415

3408:                                             ; preds = %3406
  %3409 = load i32*, i32** %173, align 8
  %3410 = icmp eq i32* %3409, null
  br i1 %3410, label %3431, label %3411

3411:                                             ; preds = %3408
  %3412 = load i32, i32* %3409, align 4
  %3413 = icmp eq i32 %3412, 0
  br i1 %3413, label %3414, label %3431

3414:                                             ; preds = %3411
  store i32 161, i32* %3409, align 4
  br label %3431

3415:                                             ; preds = %3406
  %3416 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1, i32 1
  %3417 = load i32, i32* %3416, align 4
  %3418 = icmp eq i32 %3417, 2
  br i1 %3418, label %3426, label %3419

3419:                                             ; preds = %3415
  %3420 = load i32*, i32** %173, align 8
  %3421 = icmp eq i32* %3420, null
  br i1 %3421, label %3431, label %3422

3422:                                             ; preds = %3419
  %3423 = load i32, i32* %3420, align 4
  %3424 = icmp eq i32 %3423, 0
  br i1 %3424, label %3425, label %3431

3425:                                             ; preds = %3422
  store i32 160, i32* %3420, align 4
  br label %3431

3426:                                             ; preds = %3415
  %3427 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1
  store %struct.CF2_StackNumber_* %3427, %struct.CF2_StackNumber_** %209, align 8
  %3428 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3427, i64 0, i32 0, i32 0
  %3429 = load i32, i32* %3428, align 4
  %3430 = icmp slt i32 %3429, 0
  br i1 %3430, label %7435, label %3431

3431:                                             ; preds = %3425, %3422, %3419, %3414, %3411, %3408, %3426
  %3432 = phi i32 [ %3429, %3426 ], [ 0, %3408 ], [ 0, %3411 ], [ 0, %3414 ], [ 0, %3419 ], [ 0, %3422 ], [ 0, %3425 ]
  %3433 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %3402, i64 0, i32 0
  %3434 = load i32, i32* %3433, align 8
  %3435 = add i32 %3434, %3432
  %3436 = load i32, i32* %243, align 8
  %3437 = icmp ugt i32 %3435, %3436
  br i1 %3437, label %7435, label %3438

3438:                                             ; preds = %3431
  %3439 = load i64*, i64** %244, align 8
  %3440 = sext i32 %3432 to i64
  %3441 = getelementptr inbounds i64, i64* %3439, i64 %3440
  %3442 = bitcast i64* %3441 to i8*
  %3443 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %3402, i64 0, i32 5
  %3444 = bitcast i64** %3443 to i8**
  %3445 = load i8*, i8** %3444, align 8
  %3446 = zext i32 %3434 to i64
  %3447 = shl nuw nsw i64 %3446, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3442, i8* align 8 %3445, i64 %3447, i1 false)
  br label %4123

3448:                                             ; preds = %3104
  %3449 = icmp eq i32 %3105, 2
  br i1 %3449, label %3450, label %7435

3450:                                             ; preds = %3448
  %3451 = icmp eq %struct.CF2_StackNumber_* %3112, %3113
  br i1 %3451, label %3452, label %3461

3452:                                             ; preds = %3450
  %3453 = load i32*, i32** %173, align 8
  %3454 = icmp eq i32* %3453, null
  br i1 %3454, label %3511, label %3455

3455:                                             ; preds = %3452
  %3456 = load i32, i32* %3453, align 4
  %3457 = icmp eq i32 %3456, 0
  br i1 %3457, label %3458, label %3511

3458:                                             ; preds = %3455
  store i32 161, i32* %3453, align 4
  %3459 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3460 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %3479

3461:                                             ; preds = %3450
  %3462 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1
  store %struct.CF2_StackNumber_* %3462, %struct.CF2_StackNumber_** %209, align 8
  %3463 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1, i32 1
  %3464 = load i32, i32* %3463, align 4
  switch i32 %3464, label %3476 [
    i32 2, label %3465
    i32 1, label %3469
  ]

3465:                                             ; preds = %3461
  %3466 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3462, i64 0, i32 0, i32 0
  %3467 = load i32, i32* %3466, align 4
  %3468 = shl i32 %3467, 16
  br label %3479

3469:                                             ; preds = %3461
  %3470 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3462, i64 0, i32 0, i32 0
  %3471 = load i32, i32* %3470, align 4
  %3472 = add nsw i32 %3471, 8192
  %3473 = ashr i32 %3471, 31
  %3474 = add nsw i32 %3472, %3473
  %3475 = ashr i32 %3474, 14
  br label %3479

3476:                                             ; preds = %3461
  %3477 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3462, i64 0, i32 0, i32 0
  %3478 = load i32, i32* %3477, align 4
  br label %3479

3479:                                             ; preds = %3458, %3465, %3469, %3476
  %3480 = phi %struct.CF2_StackNumber_* [ %3113, %3476 ], [ %3113, %3469 ], [ %3113, %3465 ], [ %3460, %3458 ]
  %3481 = phi %struct.CF2_StackNumber_* [ %3462, %3476 ], [ %3462, %3469 ], [ %3462, %3465 ], [ %3459, %3458 ]
  %3482 = phi i32 [ %3478, %3476 ], [ %3475, %3469 ], [ %3468, %3465 ], [ 0, %3458 ]
  %3483 = icmp eq %struct.CF2_StackNumber_* %3481, %3480
  br i1 %3483, label %3484, label %3493

3484:                                             ; preds = %3479
  %3485 = load i32*, i32** %173, align 8
  %3486 = icmp eq i32* %3485, null
  br i1 %3486, label %3511, label %3487

3487:                                             ; preds = %3484
  %3488 = load i32, i32* %3485, align 4
  %3489 = icmp eq i32 %3488, 0
  br i1 %3489, label %3490, label %3511

3490:                                             ; preds = %3487
  store i32 161, i32* %3485, align 4
  %3491 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3492 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %3511

3493:                                             ; preds = %3479
  %3494 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3481, i64 -1
  store %struct.CF2_StackNumber_* %3494, %struct.CF2_StackNumber_** %209, align 8
  %3495 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3481, i64 -1, i32 1
  %3496 = load i32, i32* %3495, align 4
  switch i32 %3496, label %3508 [
    i32 2, label %3497
    i32 1, label %3501
  ]

3497:                                             ; preds = %3493
  %3498 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3494, i64 0, i32 0, i32 0
  %3499 = load i32, i32* %3498, align 4
  %3500 = shl i32 %3499, 16
  br label %3511

3501:                                             ; preds = %3493
  %3502 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3494, i64 0, i32 0, i32 0
  %3503 = load i32, i32* %3502, align 4
  %3504 = add nsw i32 %3503, 8192
  %3505 = ashr i32 %3503, 31
  %3506 = add nsw i32 %3504, %3505
  %3507 = ashr i32 %3506, 14
  br label %3511

3508:                                             ; preds = %3493
  %3509 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3494, i64 0, i32 0, i32 0
  %3510 = load i32, i32* %3509, align 4
  br label %3511

3511:                                             ; preds = %3455, %3452, %3484, %3487, %3490, %3497, %3501, %3508
  %3512 = phi i32 [ %3482, %3508 ], [ %3482, %3501 ], [ %3482, %3497 ], [ %3482, %3484 ], [ %3482, %3487 ], [ %3482, %3490 ], [ 0, %3452 ], [ 0, %3455 ]
  %3513 = phi %struct.CF2_StackNumber_* [ %3480, %3508 ], [ %3480, %3501 ], [ %3480, %3497 ], [ %3480, %3484 ], [ %3480, %3487 ], [ %3492, %3490 ], [ %3112, %3452 ], [ %3112, %3455 ]
  %3514 = phi %struct.CF2_StackNumber_* [ %3494, %3508 ], [ %3494, %3501 ], [ %3494, %3497 ], [ %3481, %3484 ], [ %3481, %3487 ], [ %3491, %3490 ], [ %3112, %3452 ], [ %3112, %3455 ]
  %3515 = phi i32 [ %3510, %3508 ], [ %3507, %3501 ], [ %3500, %3497 ], [ 0, %3484 ], [ 0, %3487 ], [ 0, %3490 ], [ 0, %3452 ], [ 0, %3455 ]
  %3516 = load i32, i32* %185, align 8
  %3517 = zext i32 %3516 to i64
  %3518 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3513, i64 %3517
  %3519 = icmp eq %struct.CF2_StackNumber_* %3514, %3518
  br i1 %3519, label %3520, label %3527

3520:                                             ; preds = %3511
  %3521 = load i32*, i32** %173, align 8
  %3522 = icmp eq i32* %3521, null
  br i1 %3522, label %4123, label %3523

3523:                                             ; preds = %3520
  %3524 = load i32, i32* %3521, align 4
  %3525 = icmp eq i32 %3524, 0
  br i1 %3525, label %3526, label %4123

3526:                                             ; preds = %3523
  store i32 130, i32* %3521, align 4
  br label %4123

3527:                                             ; preds = %3511
  %3528 = add i32 %3515, %3512
  %3529 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3514, i64 0, i32 0, i32 0
  store i32 %3528, i32* %3529, align 4
  %3530 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3531 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3530, i64 0, i32 1
  store i32 0, i32* %3531, align 4
  %3532 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3533 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3532, i64 1
  store %struct.CF2_StackNumber_* %3533, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

3534:                                             ; preds = %3104
  %3535 = icmp eq i32 %3105, 2
  br i1 %3535, label %3536, label %7435

3536:                                             ; preds = %3534
  %3537 = icmp eq %struct.CF2_StackNumber_* %3112, %3113
  br i1 %3537, label %3538, label %3547

3538:                                             ; preds = %3536
  %3539 = load i32*, i32** %173, align 8
  %3540 = icmp eq i32* %3539, null
  br i1 %3540, label %3597, label %3541

3541:                                             ; preds = %3538
  %3542 = load i32, i32* %3539, align 4
  %3543 = icmp eq i32 %3542, 0
  br i1 %3543, label %3544, label %3597

3544:                                             ; preds = %3541
  store i32 161, i32* %3539, align 4
  %3545 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3546 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %3565

3547:                                             ; preds = %3536
  %3548 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1
  store %struct.CF2_StackNumber_* %3548, %struct.CF2_StackNumber_** %209, align 8
  %3549 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1, i32 1
  %3550 = load i32, i32* %3549, align 4
  switch i32 %3550, label %3562 [
    i32 2, label %3551
    i32 1, label %3555
  ]

3551:                                             ; preds = %3547
  %3552 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3548, i64 0, i32 0, i32 0
  %3553 = load i32, i32* %3552, align 4
  %3554 = shl i32 %3553, 16
  br label %3565

3555:                                             ; preds = %3547
  %3556 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3548, i64 0, i32 0, i32 0
  %3557 = load i32, i32* %3556, align 4
  %3558 = add nsw i32 %3557, 8192
  %3559 = ashr i32 %3557, 31
  %3560 = add nsw i32 %3558, %3559
  %3561 = ashr i32 %3560, 14
  br label %3565

3562:                                             ; preds = %3547
  %3563 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3548, i64 0, i32 0, i32 0
  %3564 = load i32, i32* %3563, align 4
  br label %3565

3565:                                             ; preds = %3544, %3551, %3555, %3562
  %3566 = phi %struct.CF2_StackNumber_* [ %3113, %3562 ], [ %3113, %3555 ], [ %3113, %3551 ], [ %3546, %3544 ]
  %3567 = phi %struct.CF2_StackNumber_* [ %3548, %3562 ], [ %3548, %3555 ], [ %3548, %3551 ], [ %3545, %3544 ]
  %3568 = phi i32 [ %3564, %3562 ], [ %3561, %3555 ], [ %3554, %3551 ], [ 0, %3544 ]
  %3569 = icmp eq %struct.CF2_StackNumber_* %3567, %3566
  br i1 %3569, label %3570, label %3579

3570:                                             ; preds = %3565
  %3571 = load i32*, i32** %173, align 8
  %3572 = icmp eq i32* %3571, null
  br i1 %3572, label %3597, label %3573

3573:                                             ; preds = %3570
  %3574 = load i32, i32* %3571, align 4
  %3575 = icmp eq i32 %3574, 0
  br i1 %3575, label %3576, label %3597

3576:                                             ; preds = %3573
  store i32 161, i32* %3571, align 4
  %3577 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3578 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %3597

3579:                                             ; preds = %3565
  %3580 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3567, i64 -1
  store %struct.CF2_StackNumber_* %3580, %struct.CF2_StackNumber_** %209, align 8
  %3581 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3567, i64 -1, i32 1
  %3582 = load i32, i32* %3581, align 4
  switch i32 %3582, label %3594 [
    i32 2, label %3583
    i32 1, label %3587
  ]

3583:                                             ; preds = %3579
  %3584 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3580, i64 0, i32 0, i32 0
  %3585 = load i32, i32* %3584, align 4
  %3586 = shl i32 %3585, 16
  br label %3597

3587:                                             ; preds = %3579
  %3588 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3580, i64 0, i32 0, i32 0
  %3589 = load i32, i32* %3588, align 4
  %3590 = add nsw i32 %3589, 8192
  %3591 = ashr i32 %3589, 31
  %3592 = add nsw i32 %3590, %3591
  %3593 = ashr i32 %3592, 14
  br label %3597

3594:                                             ; preds = %3579
  %3595 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3580, i64 0, i32 0, i32 0
  %3596 = load i32, i32* %3595, align 4
  br label %3597

3597:                                             ; preds = %3541, %3538, %3570, %3573, %3576, %3583, %3587, %3594
  %3598 = phi i32 [ %3568, %3594 ], [ %3568, %3587 ], [ %3568, %3583 ], [ %3568, %3570 ], [ %3568, %3573 ], [ %3568, %3576 ], [ 0, %3538 ], [ 0, %3541 ]
  %3599 = phi %struct.CF2_StackNumber_* [ %3566, %3594 ], [ %3566, %3587 ], [ %3566, %3583 ], [ %3566, %3570 ], [ %3566, %3573 ], [ %3578, %3576 ], [ %3112, %3538 ], [ %3112, %3541 ]
  %3600 = phi %struct.CF2_StackNumber_* [ %3580, %3594 ], [ %3580, %3587 ], [ %3580, %3583 ], [ %3567, %3570 ], [ %3567, %3573 ], [ %3577, %3576 ], [ %3112, %3538 ], [ %3112, %3541 ]
  %3601 = phi i32 [ %3596, %3594 ], [ %3593, %3587 ], [ %3586, %3583 ], [ 0, %3570 ], [ 0, %3573 ], [ 0, %3576 ], [ 0, %3538 ], [ 0, %3541 ]
  %3602 = load i32, i32* %185, align 8
  %3603 = zext i32 %3602 to i64
  %3604 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3599, i64 %3603
  %3605 = icmp eq %struct.CF2_StackNumber_* %3600, %3604
  br i1 %3605, label %3606, label %3613

3606:                                             ; preds = %3597
  %3607 = load i32*, i32** %173, align 8
  %3608 = icmp eq i32* %3607, null
  br i1 %3608, label %4123, label %3609

3609:                                             ; preds = %3606
  %3610 = load i32, i32* %3607, align 4
  %3611 = icmp eq i32 %3610, 0
  br i1 %3611, label %3612, label %4123

3612:                                             ; preds = %3609
  store i32 130, i32* %3607, align 4
  br label %4123

3613:                                             ; preds = %3597
  %3614 = sub i32 %3601, %3598
  %3615 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3600, i64 0, i32 0, i32 0
  store i32 %3614, i32* %3615, align 4
  %3616 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3617 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3616, i64 0, i32 1
  store i32 0, i32* %3617, align 4
  %3618 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3619 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3618, i64 1
  store %struct.CF2_StackNumber_* %3619, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

3620:                                             ; preds = %3104
  %3621 = icmp eq i32 %3105, 2
  br i1 %3621, label %3622, label %7435

3622:                                             ; preds = %3620
  %3623 = icmp eq %struct.CF2_StackNumber_* %3112, %3113
  br i1 %3623, label %3624, label %3633

3624:                                             ; preds = %3622
  %3625 = load i32*, i32** %173, align 8
  %3626 = icmp eq i32* %3625, null
  br i1 %3626, label %3683, label %3627

3627:                                             ; preds = %3624
  %3628 = load i32, i32* %3625, align 4
  %3629 = icmp eq i32 %3628, 0
  br i1 %3629, label %3630, label %3683

3630:                                             ; preds = %3627
  store i32 161, i32* %3625, align 4
  %3631 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3632 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %3651

3633:                                             ; preds = %3622
  %3634 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1
  store %struct.CF2_StackNumber_* %3634, %struct.CF2_StackNumber_** %209, align 8
  %3635 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1, i32 1
  %3636 = load i32, i32* %3635, align 4
  switch i32 %3636, label %3648 [
    i32 2, label %3637
    i32 1, label %3641
  ]

3637:                                             ; preds = %3633
  %3638 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3634, i64 0, i32 0, i32 0
  %3639 = load i32, i32* %3638, align 4
  %3640 = shl i32 %3639, 16
  br label %3651

3641:                                             ; preds = %3633
  %3642 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3634, i64 0, i32 0, i32 0
  %3643 = load i32, i32* %3642, align 4
  %3644 = add nsw i32 %3643, 8192
  %3645 = ashr i32 %3643, 31
  %3646 = add nsw i32 %3644, %3645
  %3647 = ashr i32 %3646, 14
  br label %3651

3648:                                             ; preds = %3633
  %3649 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3634, i64 0, i32 0, i32 0
  %3650 = load i32, i32* %3649, align 4
  br label %3651

3651:                                             ; preds = %3630, %3637, %3641, %3648
  %3652 = phi %struct.CF2_StackNumber_* [ %3113, %3648 ], [ %3113, %3641 ], [ %3113, %3637 ], [ %3632, %3630 ]
  %3653 = phi %struct.CF2_StackNumber_* [ %3634, %3648 ], [ %3634, %3641 ], [ %3634, %3637 ], [ %3631, %3630 ]
  %3654 = phi i32 [ %3650, %3648 ], [ %3647, %3641 ], [ %3640, %3637 ], [ 0, %3630 ]
  %3655 = icmp eq %struct.CF2_StackNumber_* %3653, %3652
  br i1 %3655, label %3656, label %3665

3656:                                             ; preds = %3651
  %3657 = load i32*, i32** %173, align 8
  %3658 = icmp eq i32* %3657, null
  br i1 %3658, label %3683, label %3659

3659:                                             ; preds = %3656
  %3660 = load i32, i32* %3657, align 4
  %3661 = icmp eq i32 %3660, 0
  br i1 %3661, label %3662, label %3683

3662:                                             ; preds = %3659
  store i32 161, i32* %3657, align 4
  %3663 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3664 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %3683

3665:                                             ; preds = %3651
  %3666 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3653, i64 -1
  store %struct.CF2_StackNumber_* %3666, %struct.CF2_StackNumber_** %209, align 8
  %3667 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3653, i64 -1, i32 1
  %3668 = load i32, i32* %3667, align 4
  switch i32 %3668, label %3680 [
    i32 2, label %3669
    i32 1, label %3673
  ]

3669:                                             ; preds = %3665
  %3670 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3666, i64 0, i32 0, i32 0
  %3671 = load i32, i32* %3670, align 4
  %3672 = shl i32 %3671, 16
  br label %3683

3673:                                             ; preds = %3665
  %3674 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3666, i64 0, i32 0, i32 0
  %3675 = load i32, i32* %3674, align 4
  %3676 = add nsw i32 %3675, 8192
  %3677 = ashr i32 %3675, 31
  %3678 = add nsw i32 %3676, %3677
  %3679 = ashr i32 %3678, 14
  br label %3683

3680:                                             ; preds = %3665
  %3681 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3666, i64 0, i32 0, i32 0
  %3682 = load i32, i32* %3681, align 4
  br label %3683

3683:                                             ; preds = %3627, %3624, %3656, %3659, %3662, %3669, %3673, %3680
  %3684 = phi i32 [ %3654, %3680 ], [ %3654, %3673 ], [ %3654, %3669 ], [ %3654, %3656 ], [ %3654, %3659 ], [ %3654, %3662 ], [ 0, %3624 ], [ 0, %3627 ]
  %3685 = phi %struct.CF2_StackNumber_* [ %3652, %3680 ], [ %3652, %3673 ], [ %3652, %3669 ], [ %3652, %3656 ], [ %3652, %3659 ], [ %3664, %3662 ], [ %3112, %3624 ], [ %3112, %3627 ]
  %3686 = phi %struct.CF2_StackNumber_* [ %3666, %3680 ], [ %3666, %3673 ], [ %3666, %3669 ], [ %3653, %3656 ], [ %3653, %3659 ], [ %3663, %3662 ], [ %3112, %3624 ], [ %3112, %3627 ]
  %3687 = phi i32 [ %3682, %3680 ], [ %3679, %3673 ], [ %3672, %3669 ], [ 0, %3656 ], [ 0, %3659 ], [ 0, %3662 ], [ 0, %3624 ], [ 0, %3627 ]
  %3688 = sext i32 %3687 to i64
  %3689 = sext i32 %3684 to i64
  %3690 = mul nsw i64 %3688, %3689
  %3691 = load i32, i32* %185, align 8
  %3692 = zext i32 %3691 to i64
  %3693 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3685, i64 %3692
  %3694 = icmp eq %struct.CF2_StackNumber_* %3686, %3693
  br i1 %3694, label %3695, label %3702

3695:                                             ; preds = %3683
  %3696 = load i32*, i32** %173, align 8
  %3697 = icmp eq i32* %3696, null
  br i1 %3697, label %4123, label %3698

3698:                                             ; preds = %3695
  %3699 = load i32, i32* %3696, align 4
  %3700 = icmp eq i32 %3699, 0
  br i1 %3700, label %3701, label %4123

3701:                                             ; preds = %3698
  store i32 130, i32* %3696, align 4
  br label %4123

3702:                                             ; preds = %3683
  %3703 = add nsw i64 %3690, 32768
  %3704 = ashr i64 %3690, 63
  %3705 = add nsw i64 %3703, %3704
  %3706 = lshr i64 %3705, 16
  %3707 = trunc i64 %3706 to i32
  %3708 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3686, i64 0, i32 0, i32 0
  store i32 %3707, i32* %3708, align 4
  %3709 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3710 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3709, i64 0, i32 1
  store i32 0, i32* %3710, align 4
  %3711 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3712 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3711, i64 1
  store %struct.CF2_StackNumber_* %3712, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

3713:                                             ; preds = %3104
  %3714 = icmp eq i32 %3105, 2
  br i1 %3714, label %3715, label %7435

3715:                                             ; preds = %3713
  %3716 = icmp eq %struct.CF2_StackNumber_* %3112, %3113
  br i1 %3716, label %3717, label %3726

3717:                                             ; preds = %3715
  %3718 = load i32*, i32** %173, align 8
  %3719 = icmp eq i32* %3718, null
  br i1 %3719, label %7435, label %3720

3720:                                             ; preds = %3717
  %3721 = load i32, i32* %3718, align 4
  %3722 = icmp eq i32 %3721, 0
  br i1 %3722, label %3723, label %7435

3723:                                             ; preds = %3720
  store i32 161, i32* %3718, align 4
  %3724 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3725 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %3744

3726:                                             ; preds = %3715
  %3727 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1
  store %struct.CF2_StackNumber_* %3727, %struct.CF2_StackNumber_** %209, align 8
  %3728 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1, i32 1
  %3729 = load i32, i32* %3728, align 4
  switch i32 %3729, label %3741 [
    i32 2, label %3730
    i32 1, label %3734
  ]

3730:                                             ; preds = %3726
  %3731 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3727, i64 0, i32 0, i32 0
  %3732 = load i32, i32* %3731, align 4
  %3733 = shl i32 %3732, 16
  br label %3744

3734:                                             ; preds = %3726
  %3735 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3727, i64 0, i32 0, i32 0
  %3736 = load i32, i32* %3735, align 4
  %3737 = add nsw i32 %3736, 8192
  %3738 = ashr i32 %3736, 31
  %3739 = add nsw i32 %3737, %3738
  %3740 = ashr i32 %3739, 14
  br label %3744

3741:                                             ; preds = %3726
  %3742 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3727, i64 0, i32 0, i32 0
  %3743 = load i32, i32* %3742, align 4
  br label %3744

3744:                                             ; preds = %3723, %3730, %3734, %3741
  %3745 = phi %struct.CF2_StackNumber_* [ %3113, %3741 ], [ %3113, %3734 ], [ %3113, %3730 ], [ %3725, %3723 ]
  %3746 = phi %struct.CF2_StackNumber_* [ %3727, %3741 ], [ %3727, %3734 ], [ %3727, %3730 ], [ %3724, %3723 ]
  %3747 = phi i32 [ %3743, %3741 ], [ %3740, %3734 ], [ %3733, %3730 ], [ 0, %3723 ]
  %3748 = icmp eq %struct.CF2_StackNumber_* %3746, %3745
  br i1 %3748, label %3749, label %3756

3749:                                             ; preds = %3744
  %3750 = load i32*, i32** %173, align 8
  %3751 = icmp eq i32* %3750, null
  br i1 %3751, label %3774, label %3752

3752:                                             ; preds = %3749
  %3753 = load i32, i32* %3750, align 4
  %3754 = icmp eq i32 %3753, 0
  br i1 %3754, label %3755, label %3774

3755:                                             ; preds = %3752
  store i32 161, i32* %3750, align 4
  br label %3774

3756:                                             ; preds = %3744
  %3757 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3746, i64 -1
  store %struct.CF2_StackNumber_* %3757, %struct.CF2_StackNumber_** %209, align 8
  %3758 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3746, i64 -1, i32 1
  %3759 = load i32, i32* %3758, align 4
  switch i32 %3759, label %3771 [
    i32 2, label %3760
    i32 1, label %3764
  ]

3760:                                             ; preds = %3756
  %3761 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3757, i64 0, i32 0, i32 0
  %3762 = load i32, i32* %3761, align 4
  %3763 = shl i32 %3762, 16
  br label %3774

3764:                                             ; preds = %3756
  %3765 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3757, i64 0, i32 0, i32 0
  %3766 = load i32, i32* %3765, align 4
  %3767 = add nsw i32 %3766, 8192
  %3768 = ashr i32 %3766, 31
  %3769 = add nsw i32 %3767, %3768
  %3770 = ashr i32 %3769, 14
  br label %3774

3771:                                             ; preds = %3756
  %3772 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3757, i64 0, i32 0, i32 0
  %3773 = load i32, i32* %3772, align 4
  br label %3774

3774:                                             ; preds = %3749, %3752, %3755, %3760, %3764, %3771
  %3775 = phi i32 [ %3773, %3771 ], [ %3770, %3764 ], [ %3763, %3760 ], [ 0, %3749 ], [ 0, %3752 ], [ 0, %3755 ]
  %3776 = icmp eq i32 %3747, 0
  br i1 %3776, label %7435, label %3777

3777:                                             ; preds = %3774
  %3778 = sext i32 %3775 to i64
  %3779 = sext i32 %3747 to i64
  %3780 = call i64 @FT_DivFix(i64 %3778, i64 %3779) #11
  %3781 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3782 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %3783 = load i32, i32* %185, align 8
  %3784 = zext i32 %3783 to i64
  %3785 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3782, i64 %3784
  %3786 = icmp eq %struct.CF2_StackNumber_* %3781, %3785
  br i1 %3786, label %3787, label %3794

3787:                                             ; preds = %3777
  %3788 = load i32*, i32** %173, align 8
  %3789 = icmp eq i32* %3788, null
  br i1 %3789, label %4123, label %3790

3790:                                             ; preds = %3787
  %3791 = load i32, i32* %3788, align 4
  %3792 = icmp eq i32 %3791, 0
  br i1 %3792, label %3793, label %4123

3793:                                             ; preds = %3790
  store i32 130, i32* %3788, align 4
  br label %4123

3794:                                             ; preds = %3777
  %3795 = trunc i64 %3780 to i32
  %3796 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3781, i64 0, i32 0, i32 0
  store i32 %3795, i32* %3796, align 4
  %3797 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3798 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3797, i64 0, i32 1
  store i32 0, i32* %3798, align 4
  %3799 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3800 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3799, i64 1
  store %struct.CF2_StackNumber_* %3800, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

3801:                                             ; preds = %3104
  %3802 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %242, align 8
  %3803 = icmp eq i32 %3105, 2
  %3804 = icmp ne %struct.PS_BlendRec_* %3802, null
  %3805 = and i1 %3803, %3804
  br i1 %3805, label %3806, label %7435

3806:                                             ; preds = %3801
  %3807 = icmp eq %struct.CF2_StackNumber_* %3112, %3113
  br i1 %3807, label %3808, label %3815

3808:                                             ; preds = %3806
  %3809 = load i32*, i32** %173, align 8
  %3810 = icmp eq i32* %3809, null
  br i1 %3810, label %3831, label %3811

3811:                                             ; preds = %3808
  %3812 = load i32, i32* %3809, align 4
  %3813 = icmp eq i32 %3812, 0
  br i1 %3813, label %3814, label %3831

3814:                                             ; preds = %3811
  store i32 161, i32* %3809, align 4
  br label %3831

3815:                                             ; preds = %3806
  %3816 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1, i32 1
  %3817 = load i32, i32* %3816, align 4
  %3818 = icmp eq i32 %3817, 2
  br i1 %3818, label %3826, label %3819

3819:                                             ; preds = %3815
  %3820 = load i32*, i32** %173, align 8
  %3821 = icmp eq i32* %3820, null
  br i1 %3821, label %3831, label %3822

3822:                                             ; preds = %3819
  %3823 = load i32, i32* %3820, align 4
  %3824 = icmp eq i32 %3823, 0
  br i1 %3824, label %3825, label %3831

3825:                                             ; preds = %3822
  store i32 160, i32* %3820, align 4
  br label %3831

3826:                                             ; preds = %3815
  %3827 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1
  store %struct.CF2_StackNumber_* %3827, %struct.CF2_StackNumber_** %209, align 8
  %3828 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3827, i64 0, i32 0, i32 0
  %3829 = load i32, i32* %3828, align 4
  %3830 = icmp slt i32 %3829, 0
  br i1 %3830, label %7435, label %3831

3831:                                             ; preds = %3825, %3822, %3819, %3814, %3811, %3808, %3826
  %3832 = phi i32 [ %3829, %3826 ], [ 0, %3808 ], [ 0, %3811 ], [ 0, %3814 ], [ 0, %3819 ], [ 0, %3822 ], [ 0, %3825 ]
  %3833 = load i32, i32* %243, align 8
  %3834 = icmp ult i32 %3832, %3833
  br i1 %3834, label %3835, label %7435

3835:                                             ; preds = %3831
  %3836 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3837 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %3838 = icmp eq %struct.CF2_StackNumber_* %3836, %3837
  br i1 %3838, label %3839, label %3846

3839:                                             ; preds = %3835
  %3840 = load i32*, i32** %173, align 8
  %3841 = icmp eq i32* %3840, null
  br i1 %3841, label %3864, label %3842

3842:                                             ; preds = %3839
  %3843 = load i32, i32* %3840, align 4
  %3844 = icmp eq i32 %3843, 0
  br i1 %3844, label %3845, label %3864

3845:                                             ; preds = %3842
  store i32 161, i32* %3840, align 4
  br label %3864

3846:                                             ; preds = %3835
  %3847 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3836, i64 -1
  store %struct.CF2_StackNumber_* %3847, %struct.CF2_StackNumber_** %209, align 8
  %3848 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3836, i64 -1, i32 1
  %3849 = load i32, i32* %3848, align 4
  switch i32 %3849, label %3861 [
    i32 2, label %3850
    i32 1, label %3854
  ]

3850:                                             ; preds = %3846
  %3851 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3847, i64 0, i32 0, i32 0
  %3852 = load i32, i32* %3851, align 4
  %3853 = shl i32 %3852, 16
  br label %3864

3854:                                             ; preds = %3846
  %3855 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3847, i64 0, i32 0, i32 0
  %3856 = load i32, i32* %3855, align 4
  %3857 = add nsw i32 %3856, 8192
  %3858 = ashr i32 %3856, 31
  %3859 = add nsw i32 %3857, %3858
  %3860 = ashr i32 %3859, 14
  br label %3864

3861:                                             ; preds = %3846
  %3862 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3847, i64 0, i32 0, i32 0
  %3863 = load i32, i32* %3862, align 4
  br label %3864

3864:                                             ; preds = %3861, %3854, %3850, %3845, %3842, %3839
  %3865 = phi i32 [ %3863, %3861 ], [ %3860, %3854 ], [ %3853, %3850 ], [ 0, %3839 ], [ 0, %3842 ], [ 0, %3845 ]
  %3866 = sext i32 %3865 to i64
  %3867 = load i64*, i64** %244, align 8
  %3868 = sext i32 %3832 to i64
  %3869 = getelementptr inbounds i64, i64* %3867, i64 %3868
  store i64 %3866, i64* %3869, align 8
  br label %4123

3870:                                             ; preds = %3104
  %3871 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %242, align 8
  %3872 = icmp eq i32 %3105, 1
  %3873 = icmp ne %struct.PS_BlendRec_* %3871, null
  %3874 = and i1 %3872, %3873
  br i1 %3874, label %3875, label %7435

3875:                                             ; preds = %3870
  %3876 = icmp eq %struct.CF2_StackNumber_* %3112, %3113
  br i1 %3876, label %3877, label %3884

3877:                                             ; preds = %3875
  %3878 = load i32*, i32** %173, align 8
  %3879 = icmp eq i32* %3878, null
  br i1 %3879, label %3900, label %3880

3880:                                             ; preds = %3877
  %3881 = load i32, i32* %3878, align 4
  %3882 = icmp eq i32 %3881, 0
  br i1 %3882, label %3883, label %3900

3883:                                             ; preds = %3880
  store i32 161, i32* %3878, align 4
  br label %3900

3884:                                             ; preds = %3875
  %3885 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1, i32 1
  %3886 = load i32, i32* %3885, align 4
  %3887 = icmp eq i32 %3886, 2
  br i1 %3887, label %3895, label %3888

3888:                                             ; preds = %3884
  %3889 = load i32*, i32** %173, align 8
  %3890 = icmp eq i32* %3889, null
  br i1 %3890, label %3900, label %3891

3891:                                             ; preds = %3888
  %3892 = load i32, i32* %3889, align 4
  %3893 = icmp eq i32 %3892, 0
  br i1 %3893, label %3894, label %3900

3894:                                             ; preds = %3891
  store i32 160, i32* %3889, align 4
  br label %3900

3895:                                             ; preds = %3884
  %3896 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1
  store %struct.CF2_StackNumber_* %3896, %struct.CF2_StackNumber_** %209, align 8
  %3897 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3896, i64 0, i32 0, i32 0
  %3898 = load i32, i32* %3897, align 4
  %3899 = icmp slt i32 %3898, 0
  br i1 %3899, label %7435, label %3900

3900:                                             ; preds = %3894, %3891, %3888, %3883, %3880, %3877, %3895
  %3901 = phi i32 [ %3898, %3895 ], [ 0, %3877 ], [ 0, %3880 ], [ 0, %3883 ], [ 0, %3888 ], [ 0, %3891 ], [ 0, %3894 ]
  %3902 = load i32, i32* %243, align 8
  %3903 = icmp ult i32 %3901, %3902
  br i1 %3903, label %3904, label %7435

3904:                                             ; preds = %3900
  %3905 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3906 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %3907 = load i32, i32* %185, align 8
  %3908 = zext i32 %3907 to i64
  %3909 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3906, i64 %3908
  %3910 = icmp eq %struct.CF2_StackNumber_* %3905, %3909
  br i1 %3910, label %3911, label %3918

3911:                                             ; preds = %3904
  %3912 = load i32*, i32** %173, align 8
  %3913 = icmp eq i32* %3912, null
  br i1 %3913, label %4123, label %3914

3914:                                             ; preds = %3911
  %3915 = load i32, i32* %3912, align 4
  %3916 = icmp eq i32 %3915, 0
  br i1 %3916, label %3917, label %4123

3917:                                             ; preds = %3914
  store i32 130, i32* %3912, align 4
  br label %4123

3918:                                             ; preds = %3904
  %3919 = load i64*, i64** %244, align 8
  %3920 = sext i32 %3901 to i64
  %3921 = getelementptr inbounds i64, i64* %3919, i64 %3920
  %3922 = load i64, i64* %3921, align 8
  %3923 = trunc i64 %3922 to i32
  %3924 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3905, i64 0, i32 0, i32 0
  store i32 %3923, i32* %3924, align 4
  %3925 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3926 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3925, i64 0, i32 1
  store i32 0, i32* %3926, align 4
  %3927 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3928 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3927, i64 1
  store %struct.CF2_StackNumber_* %3928, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

3929:                                             ; preds = %3104
  %3930 = icmp eq i32 %3105, 4
  br i1 %3930, label %3931, label %7435

3931:                                             ; preds = %3929
  %3932 = icmp eq %struct.CF2_StackNumber_* %3112, %3113
  br i1 %3932, label %3933, label %3942

3933:                                             ; preds = %3931
  %3934 = load i32*, i32** %173, align 8
  %3935 = icmp eq i32* %3934, null
  br i1 %3935, label %3965, label %3936

3936:                                             ; preds = %3933
  %3937 = load i32, i32* %3934, align 4
  %3938 = icmp eq i32 %3937, 0
  br i1 %3938, label %3939, label %3965

3939:                                             ; preds = %3936
  store i32 161, i32* %3934, align 4
  %3940 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3941 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %3960

3942:                                             ; preds = %3931
  %3943 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1
  store %struct.CF2_StackNumber_* %3943, %struct.CF2_StackNumber_** %209, align 8
  %3944 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3112, i64 -1, i32 1
  %3945 = load i32, i32* %3944, align 4
  switch i32 %3945, label %3957 [
    i32 2, label %3946
    i32 1, label %3950
  ]

3946:                                             ; preds = %3942
  %3947 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3943, i64 0, i32 0, i32 0
  %3948 = load i32, i32* %3947, align 4
  %3949 = shl i32 %3948, 16
  br label %3960

3950:                                             ; preds = %3942
  %3951 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3943, i64 0, i32 0, i32 0
  %3952 = load i32, i32* %3951, align 4
  %3953 = add nsw i32 %3952, 8192
  %3954 = ashr i32 %3952, 31
  %3955 = add nsw i32 %3953, %3954
  %3956 = ashr i32 %3955, 14
  br label %3960

3957:                                             ; preds = %3942
  %3958 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3943, i64 0, i32 0, i32 0
  %3959 = load i32, i32* %3958, align 4
  br label %3960

3960:                                             ; preds = %3939, %3946, %3950, %3957
  %3961 = phi %struct.CF2_StackNumber_* [ %3113, %3957 ], [ %3113, %3950 ], [ %3113, %3946 ], [ %3941, %3939 ]
  %3962 = phi %struct.CF2_StackNumber_* [ %3943, %3957 ], [ %3943, %3950 ], [ %3943, %3946 ], [ %3940, %3939 ]
  %3963 = phi i32 [ %3959, %3957 ], [ %3956, %3950 ], [ %3949, %3946 ], [ 0, %3939 ]
  %3964 = icmp eq %struct.CF2_StackNumber_* %3962, %3961
  br i1 %3964, label %3965, label %3977

3965:                                             ; preds = %3936, %3933, %3960
  %3966 = phi i32 [ %3963, %3960 ], [ 0, %3933 ], [ 0, %3936 ]
  %3967 = phi %struct.CF2_StackNumber_* [ %3962, %3960 ], [ %3112, %3933 ], [ %3112, %3936 ]
  %3968 = phi %struct.CF2_StackNumber_* [ %3961, %3960 ], [ %3112, %3933 ], [ %3112, %3936 ]
  %3969 = load i32*, i32** %173, align 8
  %3970 = icmp eq i32* %3969, null
  br i1 %3970, label %3995, label %3971

3971:                                             ; preds = %3965
  %3972 = load i32, i32* %3969, align 4
  %3973 = icmp eq i32 %3972, 0
  br i1 %3973, label %3974, label %3995

3974:                                             ; preds = %3971
  store i32 161, i32* %3969, align 4
  %3975 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %3976 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %3995

3977:                                             ; preds = %3960
  %3978 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3962, i64 -1
  store %struct.CF2_StackNumber_* %3978, %struct.CF2_StackNumber_** %209, align 8
  %3979 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3962, i64 -1, i32 1
  %3980 = load i32, i32* %3979, align 4
  switch i32 %3980, label %3992 [
    i32 2, label %3981
    i32 1, label %3985
  ]

3981:                                             ; preds = %3977
  %3982 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3978, i64 0, i32 0, i32 0
  %3983 = load i32, i32* %3982, align 4
  %3984 = shl i32 %3983, 16
  br label %3995

3985:                                             ; preds = %3977
  %3986 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3978, i64 0, i32 0, i32 0
  %3987 = load i32, i32* %3986, align 4
  %3988 = add nsw i32 %3987, 8192
  %3989 = ashr i32 %3987, 31
  %3990 = add nsw i32 %3988, %3989
  %3991 = ashr i32 %3990, 14
  br label %3995

3992:                                             ; preds = %3977
  %3993 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3978, i64 0, i32 0, i32 0
  %3994 = load i32, i32* %3993, align 4
  br label %3995

3995:                                             ; preds = %3965, %3971, %3974, %3981, %3985, %3992
  %3996 = phi i32 [ %3963, %3992 ], [ %3963, %3985 ], [ %3963, %3981 ], [ %3966, %3965 ], [ %3966, %3971 ], [ %3966, %3974 ]
  %3997 = phi %struct.CF2_StackNumber_* [ %3961, %3992 ], [ %3961, %3985 ], [ %3961, %3981 ], [ %3968, %3965 ], [ %3968, %3971 ], [ %3976, %3974 ]
  %3998 = phi %struct.CF2_StackNumber_* [ %3978, %3992 ], [ %3978, %3985 ], [ %3978, %3981 ], [ %3967, %3965 ], [ %3967, %3971 ], [ %3975, %3974 ]
  %3999 = phi i32 [ %3994, %3992 ], [ %3991, %3985 ], [ %3984, %3981 ], [ 0, %3965 ], [ 0, %3971 ], [ 0, %3974 ]
  %4000 = icmp eq %struct.CF2_StackNumber_* %3998, %3997
  br i1 %4000, label %4001, label %4010

4001:                                             ; preds = %3995
  %4002 = load i32*, i32** %173, align 8
  %4003 = icmp eq i32* %4002, null
  br i1 %4003, label %4028, label %4004

4004:                                             ; preds = %4001
  %4005 = load i32, i32* %4002, align 4
  %4006 = icmp eq i32 %4005, 0
  br i1 %4006, label %4007, label %4028

4007:                                             ; preds = %4004
  store i32 161, i32* %4002, align 4
  %4008 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4009 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4028

4010:                                             ; preds = %3995
  %4011 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3998, i64 -1
  store %struct.CF2_StackNumber_* %4011, %struct.CF2_StackNumber_** %209, align 8
  %4012 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %3998, i64 -1, i32 1
  %4013 = load i32, i32* %4012, align 4
  switch i32 %4013, label %4025 [
    i32 2, label %4014
    i32 1, label %4018
  ]

4014:                                             ; preds = %4010
  %4015 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4011, i64 0, i32 0, i32 0
  %4016 = load i32, i32* %4015, align 4
  %4017 = shl i32 %4016, 16
  br label %4028

4018:                                             ; preds = %4010
  %4019 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4011, i64 0, i32 0, i32 0
  %4020 = load i32, i32* %4019, align 4
  %4021 = add nsw i32 %4020, 8192
  %4022 = ashr i32 %4020, 31
  %4023 = add nsw i32 %4021, %4022
  %4024 = ashr i32 %4023, 14
  br label %4028

4025:                                             ; preds = %4010
  %4026 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4011, i64 0, i32 0, i32 0
  %4027 = load i32, i32* %4026, align 4
  br label %4028

4028:                                             ; preds = %4001, %4004, %4007, %4014, %4018, %4025
  %4029 = phi %struct.CF2_StackNumber_* [ %3997, %4025 ], [ %3997, %4018 ], [ %3997, %4014 ], [ %3997, %4001 ], [ %3997, %4004 ], [ %4009, %4007 ]
  %4030 = phi %struct.CF2_StackNumber_* [ %4011, %4025 ], [ %4011, %4018 ], [ %4011, %4014 ], [ %3998, %4001 ], [ %3998, %4004 ], [ %4008, %4007 ]
  %4031 = phi i32 [ %4027, %4025 ], [ %4024, %4018 ], [ %4017, %4014 ], [ 0, %4001 ], [ 0, %4004 ], [ 0, %4007 ]
  %4032 = icmp eq %struct.CF2_StackNumber_* %4030, %4029
  br i1 %4032, label %4033, label %4042

4033:                                             ; preds = %4028
  %4034 = load i32*, i32** %173, align 8
  %4035 = icmp eq i32* %4034, null
  br i1 %4035, label %4060, label %4036

4036:                                             ; preds = %4033
  %4037 = load i32, i32* %4034, align 4
  %4038 = icmp eq i32 %4037, 0
  br i1 %4038, label %4039, label %4060

4039:                                             ; preds = %4036
  store i32 161, i32* %4034, align 4
  %4040 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4041 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4060

4042:                                             ; preds = %4028
  %4043 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4030, i64 -1
  store %struct.CF2_StackNumber_* %4043, %struct.CF2_StackNumber_** %209, align 8
  %4044 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4030, i64 -1, i32 1
  %4045 = load i32, i32* %4044, align 4
  switch i32 %4045, label %4057 [
    i32 2, label %4046
    i32 1, label %4050
  ]

4046:                                             ; preds = %4042
  %4047 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4043, i64 0, i32 0, i32 0
  %4048 = load i32, i32* %4047, align 4
  %4049 = shl i32 %4048, 16
  br label %4060

4050:                                             ; preds = %4042
  %4051 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4043, i64 0, i32 0, i32 0
  %4052 = load i32, i32* %4051, align 4
  %4053 = add nsw i32 %4052, 8192
  %4054 = ashr i32 %4052, 31
  %4055 = add nsw i32 %4053, %4054
  %4056 = ashr i32 %4055, 14
  br label %4060

4057:                                             ; preds = %4042
  %4058 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4043, i64 0, i32 0, i32 0
  %4059 = load i32, i32* %4058, align 4
  br label %4060

4060:                                             ; preds = %4033, %4036, %4039, %4046, %4050, %4057
  %4061 = phi %struct.CF2_StackNumber_* [ %4029, %4057 ], [ %4029, %4050 ], [ %4029, %4046 ], [ %4029, %4033 ], [ %4029, %4036 ], [ %4041, %4039 ]
  %4062 = phi %struct.CF2_StackNumber_* [ %4043, %4057 ], [ %4043, %4050 ], [ %4043, %4046 ], [ %4030, %4033 ], [ %4030, %4036 ], [ %4040, %4039 ]
  %4063 = phi i32 [ %4059, %4057 ], [ %4056, %4050 ], [ %4049, %4046 ], [ 0, %4033 ], [ 0, %4036 ], [ 0, %4039 ]
  %4064 = load i32, i32* %185, align 8
  %4065 = zext i32 %4064 to i64
  %4066 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4061, i64 %4065
  %4067 = icmp eq %struct.CF2_StackNumber_* %4062, %4066
  br i1 %4067, label %4068, label %4075

4068:                                             ; preds = %4060
  %4069 = load i32*, i32** %173, align 8
  %4070 = icmp eq i32* %4069, null
  br i1 %4070, label %4123, label %4071

4071:                                             ; preds = %4068
  %4072 = load i32, i32* %4069, align 4
  %4073 = icmp eq i32 %4072, 0
  br i1 %4073, label %4074, label %4123

4074:                                             ; preds = %4071
  store i32 130, i32* %4069, align 4
  br label %4123

4075:                                             ; preds = %4060
  %4076 = icmp sgt i32 %3999, %3996
  %4077 = select i1 %4076, i32 %4031, i32 %4063
  %4078 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4062, i64 0, i32 0, i32 0
  store i32 %4077, i32* %4078, align 4
  %4079 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4080 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4079, i64 0, i32 1
  store i32 0, i32* %4080, align 4
  %4081 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4082 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4081, i64 1
  store %struct.CF2_StackNumber_* %4082, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4083:                                             ; preds = %3104
  %4084 = icmp eq i32 %3105, 0
  br i1 %4084, label %4085, label %7435

4085:                                             ; preds = %4083
  %4086 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %42, align 8
  %4087 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %4086, i64 0, i32 11
  %4088 = load i32, i32* %4087, align 8
  %4089 = shl i32 %4088, 13
  %4090 = xor i32 %4089, %4088
  %4091 = lshr i32 %4090, 17
  %4092 = xor i32 %4091, %4090
  %4093 = shl i32 %4092, 5
  %4094 = xor i32 %4093, %4092
  store i32 %4094, i32* %4087, align 8
  %4095 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4096 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4097 = load i32, i32* %185, align 8
  %4098 = zext i32 %4097 to i64
  %4099 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4096, i64 %4098
  %4100 = icmp eq %struct.CF2_StackNumber_* %4095, %4099
  br i1 %4100, label %4101, label %4108

4101:                                             ; preds = %4085
  %4102 = load i32*, i32** %173, align 8
  %4103 = icmp eq i32* %4102, null
  br i1 %4103, label %4123, label %4104

4104:                                             ; preds = %4101
  %4105 = load i32, i32* %4102, align 4
  %4106 = icmp eq i32 %4105, 0
  br i1 %4106, label %4107, label %4123

4107:                                             ; preds = %4104
  store i32 130, i32* %4102, align 4
  br label %4123

4108:                                             ; preds = %4085
  %4109 = and i32 %4088, 65535
  %4110 = add nuw nsw i32 %4109, 1
  %4111 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4095, i64 0, i32 0, i32 0
  store i32 %4110, i32* %4111, align 4
  %4112 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4113 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4112, i64 0, i32 1
  store i32 0, i32* %4113, align 4
  %4114 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4115 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4114, i64 1
  store %struct.CF2_StackNumber_* %4115, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4116:                                             ; preds = %3104
  %4117 = or i32 %3105, %3078
  %4118 = icmp sgt i32 %4117, -1
  br i1 %4118, label %4119, label %7435

4119:                                             ; preds = %4116
  %4120 = icmp slt i32 %3105, 3
  %4121 = select i1 %4120, i32 %3105, i32 3
  %4122 = icmp slt i32 %4121, 1
  br i1 %4122, label %4123, label %4131

4123:                                             ; preds = %5049, %4163, %4119, %4215, %4999, %4996, %4993, %4988, %4985, %4982, %4108, %4107, %4104, %4101, %4075, %4074, %4071, %4068, %3918, %3917, %3914, %3911, %3794, %3793, %3790, %3787, %3702, %3701, %3698, %3695, %3613, %3612, %3609, %3606, %3527, %3526, %3523, %3520, %3396, %3395, %3392, %3389, %3193, %3227, %3214, %3188, %5018, %5017, %5014, %5011, %5000, %4944, %4943, %4940, %4937, %4848, %4847, %4844, %4841, %4742, %4741, %4738, %4735, %4669, %4668, %4665, %4662, %4596, %4595, %4592, %4589, %4506, %4505, %4502, %4499, %4475, %4474, %4471, %4468, %4321, %4320, %4317, %4314, %4214, %4211, %4208, %4195, %4194, %4191, %4188, %3049, %3185, %3239, %3167, %3236, %3238, %3151, %3154, %3157, %3158, %3438, %3864, %3041, %3040, %3037, %3034, %2955, %2954, %2951, %2948, %2934, %2933, %2930, %2927, %2881, %2880, %2877, %2874, %2739, %2738, %2735, %2732, %2653, %2652, %2649, %2646, %2568, %2567, %2564, %2561, %2542, %2541, %2538, %2535, %1870, %1869, %1866, %1863, %1815, %1814, %1811, %1808, %1726, %1725, %1722, %1719, %4880, %4301, %4273, %4276, %4172, %1381, %1383, %1384, %4176, %7207, %7210, %7213, %7214, %7247, %7250, %7253, %7254, %7288, %7291, %7294, %7295, %7396, %7399, %7402, %7403, %7416, %7419, %7422, %7423, %7188, %7187, %7184, %7181, %310, %801, %867, %1200, %1362, %6279, %6497, %6715, %7138, %7429, %580, %1347
  %4124 = phi i32 [ %268, %7138 ], [ %268, %6715 ], [ %268, %6497 ], [ %268, %6279 ], [ %7430, %7429 ], [ %1356, %1362 ], [ %1352, %1347 ], [ %268, %1200 ], [ %268, %867 ], [ %268, %801 ], [ %268, %580 ], [ %268, %310 ], [ %268, %7181 ], [ %268, %7184 ], [ %268, %7187 ], [ %268, %7188 ], [ %268, %7423 ], [ %268, %7422 ], [ %268, %7419 ], [ %268, %7416 ], [ %268, %7403 ], [ %268, %7402 ], [ %268, %7399 ], [ %268, %7396 ], [ %268, %7295 ], [ %268, %7294 ], [ %268, %7291 ], [ %268, %7288 ], [ %268, %7254 ], [ %268, %7253 ], [ %268, %7250 ], [ %268, %7247 ], [ %268, %7214 ], [ %268, %7213 ], [ %268, %7210 ], [ %268, %7207 ], [ %268, %4176 ], [ %268, %1384 ], [ %268, %1383 ], [ %268, %1381 ], [ %268, %4172 ], [ %268, %4276 ], [ %268, %4273 ], [ %268, %4301 ], [ %268, %4880 ], [ %268, %1719 ], [ %268, %1722 ], [ %268, %1725 ], [ %268, %1726 ], [ %268, %1808 ], [ %268, %1811 ], [ %268, %1814 ], [ %268, %1815 ], [ %268, %1863 ], [ %268, %1866 ], [ %268, %1869 ], [ %268, %1870 ], [ %268, %2535 ], [ %268, %2538 ], [ %268, %2541 ], [ %268, %2542 ], [ %268, %2561 ], [ %268, %2564 ], [ %268, %2567 ], [ %268, %2568 ], [ %268, %2646 ], [ %268, %2649 ], [ %268, %2652 ], [ %268, %2653 ], [ %268, %2732 ], [ %268, %2735 ], [ %268, %2738 ], [ %268, %2739 ], [ %268, %2874 ], [ %268, %2877 ], [ %268, %2880 ], [ %268, %2881 ], [ %268, %2927 ], [ %268, %2930 ], [ %268, %2933 ], [ %268, %2934 ], [ %268, %2948 ], [ %268, %2951 ], [ %268, %2954 ], [ %268, %2955 ], [ %268, %3034 ], [ %268, %3037 ], [ %268, %3040 ], [ %268, %3041 ], [ %268, %3864 ], [ %268, %3438 ], [ %268, %3158 ], [ %268, %3157 ], [ %268, %3154 ], [ %268, %3151 ], [ %268, %3238 ], [ %268, %3236 ], [ %268, %3167 ], [ %268, %3239 ], [ %268, %3185 ], [ %268, %3049 ], [ %268, %4188 ], [ %268, %4191 ], [ %268, %4194 ], [ %268, %4195 ], [ %268, %4208 ], [ %268, %4211 ], [ %268, %4214 ], [ %268, %4314 ], [ %268, %4317 ], [ %268, %4320 ], [ %268, %4321 ], [ %268, %4468 ], [ %268, %4471 ], [ %268, %4474 ], [ %268, %4475 ], [ %268, %4499 ], [ %268, %4502 ], [ %268, %4505 ], [ %268, %4506 ], [ %268, %4589 ], [ %268, %4592 ], [ %268, %4595 ], [ %268, %4596 ], [ %268, %4662 ], [ %268, %4665 ], [ %268, %4668 ], [ %268, %4669 ], [ %268, %4735 ], [ %268, %4738 ], [ %268, %4741 ], [ %268, %4742 ], [ %268, %4841 ], [ %268, %4844 ], [ %268, %4847 ], [ %268, %4848 ], [ %268, %4937 ], [ %268, %4940 ], [ %268, %4943 ], [ %268, %4944 ], [ %268, %5000 ], [ %268, %5011 ], [ %268, %5014 ], [ %268, %5017 ], [ %268, %5018 ], [ %268, %3188 ], [ %268, %3214 ], [ %268, %3227 ], [ %268, %3193 ], [ %268, %3389 ], [ %268, %3392 ], [ %268, %3395 ], [ %268, %3396 ], [ %268, %3520 ], [ %268, %3523 ], [ %268, %3526 ], [ %268, %3527 ], [ %268, %3606 ], [ %268, %3609 ], [ %268, %3612 ], [ %268, %3613 ], [ %268, %3695 ], [ %268, %3698 ], [ %268, %3701 ], [ %268, %3702 ], [ %268, %3787 ], [ %268, %3790 ], [ %268, %3793 ], [ %268, %3794 ], [ %268, %3911 ], [ %268, %3914 ], [ %268, %3917 ], [ %268, %3918 ], [ %268, %4068 ], [ %268, %4071 ], [ %268, %4074 ], [ %268, %4075 ], [ %268, %4101 ], [ %268, %4104 ], [ %268, %4107 ], [ %268, %4108 ], [ %268, %4982 ], [ %268, %4985 ], [ %268, %4988 ], [ %268, %4993 ], [ %268, %4996 ], [ %268, %4999 ], [ %268, %4215 ], [ %268, %4119 ], [ %268, %4163 ], [ %268, %5049 ]
  %4125 = phi %struct.CF2_BufferRec_* [ %269, %7138 ], [ %269, %6715 ], [ %269, %6497 ], [ %269, %6279 ], [ %7431, %7429 ], [ %1366, %1362 ], [ %1231, %1347 ], [ %269, %1200 ], [ %269, %867 ], [ %269, %801 ], [ %269, %580 ], [ %269, %310 ], [ %269, %7181 ], [ %269, %7184 ], [ %269, %7187 ], [ %269, %7188 ], [ %269, %7423 ], [ %269, %7422 ], [ %269, %7419 ], [ %269, %7416 ], [ %269, %7403 ], [ %269, %7402 ], [ %269, %7399 ], [ %269, %7396 ], [ %269, %7295 ], [ %269, %7294 ], [ %269, %7291 ], [ %269, %7288 ], [ %269, %7254 ], [ %269, %7253 ], [ %269, %7250 ], [ %269, %7247 ], [ %269, %7214 ], [ %269, %7213 ], [ %269, %7210 ], [ %269, %7207 ], [ %269, %4176 ], [ %269, %1384 ], [ %269, %1383 ], [ %269, %1381 ], [ %269, %4172 ], [ %269, %4276 ], [ %269, %4273 ], [ %269, %4301 ], [ %269, %4880 ], [ %269, %1719 ], [ %269, %1722 ], [ %269, %1725 ], [ %269, %1726 ], [ %269, %1808 ], [ %269, %1811 ], [ %269, %1814 ], [ %269, %1815 ], [ %269, %1863 ], [ %269, %1866 ], [ %269, %1869 ], [ %269, %1870 ], [ %269, %2535 ], [ %269, %2538 ], [ %269, %2541 ], [ %269, %2542 ], [ %269, %2561 ], [ %269, %2564 ], [ %269, %2567 ], [ %269, %2568 ], [ %269, %2646 ], [ %269, %2649 ], [ %269, %2652 ], [ %269, %2653 ], [ %269, %2732 ], [ %269, %2735 ], [ %269, %2738 ], [ %269, %2739 ], [ %269, %2874 ], [ %269, %2877 ], [ %269, %2880 ], [ %269, %2881 ], [ %269, %2927 ], [ %269, %2930 ], [ %269, %2933 ], [ %269, %2934 ], [ %269, %2948 ], [ %269, %2951 ], [ %269, %2954 ], [ %269, %2955 ], [ %269, %3034 ], [ %269, %3037 ], [ %269, %3040 ], [ %269, %3041 ], [ %269, %3864 ], [ %269, %3438 ], [ %269, %3158 ], [ %269, %3157 ], [ %269, %3154 ], [ %269, %3151 ], [ %269, %3238 ], [ %269, %3236 ], [ %269, %3167 ], [ %269, %3239 ], [ %269, %3185 ], [ %269, %3049 ], [ %269, %4188 ], [ %269, %4191 ], [ %269, %4194 ], [ %269, %4195 ], [ %269, %4208 ], [ %269, %4211 ], [ %269, %4214 ], [ %269, %4314 ], [ %269, %4317 ], [ %269, %4320 ], [ %269, %4321 ], [ %269, %4468 ], [ %269, %4471 ], [ %269, %4474 ], [ %269, %4475 ], [ %269, %4499 ], [ %269, %4502 ], [ %269, %4505 ], [ %269, %4506 ], [ %269, %4589 ], [ %269, %4592 ], [ %269, %4595 ], [ %269, %4596 ], [ %269, %4662 ], [ %269, %4665 ], [ %269, %4668 ], [ %269, %4669 ], [ %269, %4735 ], [ %269, %4738 ], [ %269, %4741 ], [ %269, %4742 ], [ %269, %4841 ], [ %269, %4844 ], [ %269, %4847 ], [ %269, %4848 ], [ %269, %4937 ], [ %269, %4940 ], [ %269, %4943 ], [ %269, %4944 ], [ %269, %5000 ], [ %269, %5011 ], [ %269, %5014 ], [ %269, %5017 ], [ %269, %5018 ], [ %269, %3188 ], [ %269, %3214 ], [ %269, %3227 ], [ %269, %3193 ], [ %269, %3389 ], [ %269, %3392 ], [ %269, %3395 ], [ %269, %3396 ], [ %269, %3520 ], [ %269, %3523 ], [ %269, %3526 ], [ %269, %3527 ], [ %269, %3606 ], [ %269, %3609 ], [ %269, %3612 ], [ %269, %3613 ], [ %269, %3695 ], [ %269, %3698 ], [ %269, %3701 ], [ %269, %3702 ], [ %269, %3787 ], [ %269, %3790 ], [ %269, %3793 ], [ %269, %3794 ], [ %269, %3911 ], [ %269, %3914 ], [ %269, %3917 ], [ %269, %3918 ], [ %269, %4068 ], [ %269, %4071 ], [ %269, %4074 ], [ %269, %4075 ], [ %269, %4101 ], [ %269, %4104 ], [ %269, %4107 ], [ %269, %4108 ], [ %269, %4982 ], [ %269, %4985 ], [ %269, %4988 ], [ %269, %4993 ], [ %269, %4996 ], [ %269, %4999 ], [ %269, %4215 ], [ %269, %4119 ], [ %269, %4163 ], [ %269, %5049 ]
  %4126 = phi i32 [ %328, %7138 ], [ %328, %6715 ], [ %328, %6497 ], [ %328, %6279 ], [ %328, %7429 ], [ %328, %1362 ], [ %328, %1347 ], [ %328, %1200 ], [ %328, %867 ], [ %328, %801 ], [ %328, %580 ], [ %270, %310 ], [ %328, %7181 ], [ %328, %7184 ], [ %328, %7187 ], [ %328, %7188 ], [ %328, %7423 ], [ %328, %7422 ], [ %328, %7419 ], [ %328, %7416 ], [ %328, %7403 ], [ %328, %7402 ], [ %328, %7399 ], [ %328, %7396 ], [ %328, %7295 ], [ %328, %7294 ], [ %328, %7291 ], [ %328, %7288 ], [ %328, %7254 ], [ %328, %7253 ], [ %328, %7250 ], [ %328, %7247 ], [ %328, %7214 ], [ %328, %7213 ], [ %328, %7210 ], [ %328, %7207 ], [ %328, %4176 ], [ %328, %1384 ], [ %328, %1383 ], [ %328, %1381 ], [ %328, %4172 ], [ %328, %4276 ], [ %328, %4273 ], [ %328, %4301 ], [ %328, %4880 ], [ %328, %1719 ], [ %328, %1722 ], [ %328, %1725 ], [ %328, %1726 ], [ %328, %1808 ], [ %328, %1811 ], [ %328, %1814 ], [ %328, %1815 ], [ %328, %1863 ], [ %328, %1866 ], [ %328, %1869 ], [ %328, %1870 ], [ %328, %2535 ], [ %328, %2538 ], [ %328, %2541 ], [ %328, %2542 ], [ %328, %2561 ], [ %328, %2564 ], [ %328, %2567 ], [ %328, %2568 ], [ %328, %2646 ], [ %328, %2649 ], [ %328, %2652 ], [ %328, %2653 ], [ %328, %2732 ], [ %328, %2735 ], [ %328, %2738 ], [ %328, %2739 ], [ %328, %2874 ], [ %328, %2877 ], [ %328, %2880 ], [ %328, %2881 ], [ %328, %2927 ], [ %328, %2930 ], [ %328, %2933 ], [ %328, %2934 ], [ %328, %2948 ], [ %328, %2951 ], [ %328, %2954 ], [ %328, %2955 ], [ %328, %3034 ], [ %328, %3037 ], [ %328, %3040 ], [ %328, %3041 ], [ %328, %3864 ], [ %328, %3438 ], [ %328, %3158 ], [ %328, %3157 ], [ %328, %3154 ], [ %328, %3151 ], [ %328, %3238 ], [ %328, %3236 ], [ %328, %3167 ], [ %328, %3239 ], [ %328, %3185 ], [ %328, %3049 ], [ %328, %4188 ], [ %328, %4191 ], [ %328, %4194 ], [ %328, %4195 ], [ %328, %4208 ], [ %328, %4211 ], [ %328, %4214 ], [ %328, %4314 ], [ %328, %4317 ], [ %328, %4320 ], [ %328, %4321 ], [ %328, %4468 ], [ %328, %4471 ], [ %328, %4474 ], [ %328, %4475 ], [ %328, %4499 ], [ %328, %4502 ], [ %328, %4505 ], [ %328, %4506 ], [ %328, %4589 ], [ %328, %4592 ], [ %328, %4595 ], [ %328, %4596 ], [ %328, %4662 ], [ %328, %4665 ], [ %328, %4668 ], [ %328, %4669 ], [ %328, %4735 ], [ %328, %4738 ], [ %328, %4741 ], [ %328, %4742 ], [ %328, %4841 ], [ %328, %4844 ], [ %328, %4847 ], [ %328, %4848 ], [ %328, %4937 ], [ %328, %4940 ], [ %328, %4943 ], [ %328, %4944 ], [ %328, %5000 ], [ %328, %5011 ], [ %328, %5014 ], [ %328, %5017 ], [ %328, %5018 ], [ %328, %3188 ], [ %328, %3214 ], [ %328, %3227 ], [ %328, %3193 ], [ %328, %3389 ], [ %328, %3392 ], [ %328, %3395 ], [ %328, %3396 ], [ %328, %3520 ], [ %328, %3523 ], [ %328, %3526 ], [ %328, %3527 ], [ %328, %3606 ], [ %328, %3609 ], [ %328, %3612 ], [ %328, %3613 ], [ %328, %3695 ], [ %328, %3698 ], [ %328, %3701 ], [ %328, %3702 ], [ %328, %3787 ], [ %328, %3790 ], [ %328, %3793 ], [ %328, %3794 ], [ %328, %3911 ], [ %328, %3914 ], [ %328, %3917 ], [ %328, %3918 ], [ %328, %4068 ], [ %328, %4071 ], [ %328, %4074 ], [ %328, %4075 ], [ %328, %4101 ], [ %328, %4104 ], [ %328, %4107 ], [ %328, %4108 ], [ %328, %4982 ], [ %328, %4985 ], [ %328, %4988 ], [ %328, %4993 ], [ %328, %4996 ], [ %328, %4999 ], [ %328, %4215 ], [ %328, %4119 ], [ %328, %4163 ], [ %328, %5049 ]
  %4127 = phi i32 [ %323, %7138 ], [ %323, %6715 ], [ %323, %6497 ], [ %323, %6279 ], [ %7432, %7429 ], [ %323, %1362 ], [ %323, %1347 ], [ %323, %1200 ], [ %323, %867 ], [ %323, %801 ], [ %323, %580 ], [ %271, %310 ], [ %323, %7181 ], [ %323, %7184 ], [ %323, %7187 ], [ %323, %7188 ], [ %323, %7423 ], [ %323, %7422 ], [ %323, %7419 ], [ %323, %7416 ], [ %323, %7403 ], [ %323, %7402 ], [ %323, %7399 ], [ %323, %7396 ], [ %323, %7295 ], [ %323, %7294 ], [ %323, %7291 ], [ %323, %7288 ], [ %323, %7254 ], [ %323, %7253 ], [ %323, %7250 ], [ %323, %7247 ], [ %323, %7214 ], [ %323, %7213 ], [ %323, %7210 ], [ %323, %7207 ], [ %323, %4176 ], [ %323, %1384 ], [ %323, %1383 ], [ %323, %1381 ], [ %323, %4172 ], [ %323, %4276 ], [ %323, %4273 ], [ %323, %4301 ], [ %323, %4880 ], [ %323, %1719 ], [ %323, %1722 ], [ %323, %1725 ], [ %323, %1726 ], [ %323, %1808 ], [ %323, %1811 ], [ %323, %1814 ], [ %323, %1815 ], [ %323, %1863 ], [ %323, %1866 ], [ %323, %1869 ], [ %323, %1870 ], [ %323, %2535 ], [ %323, %2538 ], [ %323, %2541 ], [ %323, %2542 ], [ %323, %2561 ], [ %323, %2564 ], [ %323, %2567 ], [ %323, %2568 ], [ %323, %2646 ], [ %323, %2649 ], [ %323, %2652 ], [ %323, %2653 ], [ %323, %2732 ], [ %323, %2735 ], [ %323, %2738 ], [ %323, %2739 ], [ %323, %2874 ], [ %323, %2877 ], [ %323, %2880 ], [ %323, %2881 ], [ %323, %2927 ], [ %323, %2930 ], [ %323, %2933 ], [ %323, %2934 ], [ %323, %2948 ], [ %323, %2951 ], [ %323, %2954 ], [ %323, %2955 ], [ %323, %3034 ], [ %323, %3037 ], [ %323, %3040 ], [ %323, %3041 ], [ 0, %3864 ], [ 0, %3438 ], [ 0, %3158 ], [ 0, %3157 ], [ 0, %3154 ], [ 0, %3151 ], [ 0, %3238 ], [ 0, %3236 ], [ 0, %3167 ], [ 0, %3239 ], [ 0, %3185 ], [ %323, %3049 ], [ %4181, %4188 ], [ %4181, %4191 ], [ %4181, %4194 ], [ %4181, %4195 ], [ %323, %4208 ], [ %323, %4211 ], [ %323, %4214 ], [ %323, %4314 ], [ %323, %4317 ], [ %323, %4320 ], [ %323, %4321 ], [ %323, %4468 ], [ %323, %4471 ], [ %323, %4474 ], [ %323, %4475 ], [ %323, %4499 ], [ %323, %4502 ], [ %323, %4505 ], [ %323, %4506 ], [ %323, %4589 ], [ %323, %4592 ], [ %323, %4595 ], [ %323, %4596 ], [ %323, %4662 ], [ %323, %4665 ], [ %323, %4668 ], [ %323, %4669 ], [ %323, %4735 ], [ %323, %4738 ], [ %323, %4741 ], [ %323, %4742 ], [ %323, %4841 ], [ %323, %4844 ], [ %323, %4847 ], [ %323, %4848 ], [ %323, %4937 ], [ %323, %4940 ], [ %323, %4943 ], [ %323, %4944 ], [ %323, %5000 ], [ %323, %5011 ], [ %323, %5014 ], [ %323, %5017 ], [ %323, %5018 ], [ 0, %3188 ], [ 0, %3214 ], [ 0, %3227 ], [ 0, %3193 ], [ 0, %3389 ], [ 0, %3392 ], [ 0, %3395 ], [ 0, %3396 ], [ 0, %3520 ], [ 0, %3523 ], [ 0, %3526 ], [ 0, %3527 ], [ 0, %3606 ], [ 0, %3609 ], [ 0, %3612 ], [ 0, %3613 ], [ 0, %3695 ], [ 0, %3698 ], [ 0, %3701 ], [ 0, %3702 ], [ 0, %3787 ], [ 0, %3790 ], [ 0, %3793 ], [ 0, %3794 ], [ 0, %3911 ], [ 0, %3914 ], [ 0, %3917 ], [ 0, %3918 ], [ 0, %4068 ], [ 0, %4071 ], [ 0, %4074 ], [ 0, %4075 ], [ 0, %4101 ], [ 0, %4104 ], [ 0, %4107 ], [ 0, %4108 ], [ %323, %4982 ], [ %323, %4985 ], [ %323, %4988 ], [ %323, %4993 ], [ %323, %4996 ], [ %323, %4999 ], [ %323, %4215 ], [ %3105, %4119 ], [ %4121, %4163 ], [ %323, %5049 ]
  %4128 = phi i8 [ %272, %7138 ], [ %272, %6715 ], [ %272, %6497 ], [ %272, %6279 ], [ %7433, %7429 ], [ %272, %1362 ], [ %272, %1347 ], [ %272, %1200 ], [ %272, %867 ], [ %272, %801 ], [ %272, %580 ], [ 0, %310 ], [ %272, %7181 ], [ %272, %7184 ], [ %272, %7187 ], [ %272, %7188 ], [ %272, %7423 ], [ %272, %7422 ], [ %272, %7419 ], [ %272, %7416 ], [ %272, %7403 ], [ %272, %7402 ], [ %272, %7399 ], [ %272, %7396 ], [ %272, %7295 ], [ %272, %7294 ], [ %272, %7291 ], [ %272, %7288 ], [ %272, %7254 ], [ %272, %7253 ], [ %272, %7250 ], [ %272, %7247 ], [ %272, %7214 ], [ %272, %7213 ], [ %272, %7210 ], [ %272, %7207 ], [ %272, %4176 ], [ %272, %1384 ], [ %272, %1383 ], [ %272, %1381 ], [ %272, %4172 ], [ %272, %4276 ], [ %272, %4273 ], [ %272, %4301 ], [ %272, %4880 ], [ %272, %1719 ], [ %272, %1722 ], [ %272, %1725 ], [ %272, %1726 ], [ %272, %1808 ], [ %272, %1811 ], [ %272, %1814 ], [ %272, %1815 ], [ %272, %1863 ], [ %272, %1866 ], [ %272, %1869 ], [ %272, %1870 ], [ %272, %2535 ], [ %272, %2538 ], [ %272, %2541 ], [ %272, %2542 ], [ %272, %2561 ], [ %272, %2564 ], [ %272, %2567 ], [ %272, %2568 ], [ %272, %2646 ], [ %272, %2649 ], [ %272, %2652 ], [ %272, %2653 ], [ %272, %2732 ], [ %272, %2735 ], [ %272, %2738 ], [ %272, %2739 ], [ %272, %2874 ], [ %272, %2877 ], [ %272, %2880 ], [ %272, %2881 ], [ %272, %2927 ], [ %272, %2930 ], [ %272, %2933 ], [ %272, %2934 ], [ %272, %2948 ], [ %272, %2951 ], [ %272, %2954 ], [ %272, %2955 ], [ %272, %3034 ], [ %272, %3037 ], [ %272, %3040 ], [ %272, %3041 ], [ %272, %3864 ], [ %272, %3438 ], [ %272, %3158 ], [ %272, %3157 ], [ %272, %3154 ], [ %272, %3151 ], [ %272, %3238 ], [ 0, %3236 ], [ 0, %3167 ], [ %272, %3239 ], [ %272, %3185 ], [ %272, %3049 ], [ %272, %4188 ], [ %272, %4191 ], [ %272, %4194 ], [ %272, %4195 ], [ %272, %4208 ], [ %272, %4211 ], [ %272, %4214 ], [ %272, %4314 ], [ %272, %4317 ], [ %272, %4320 ], [ %272, %4321 ], [ %272, %4468 ], [ %272, %4471 ], [ %272, %4474 ], [ %272, %4475 ], [ %272, %4499 ], [ %272, %4502 ], [ %272, %4505 ], [ %272, %4506 ], [ %272, %4589 ], [ %272, %4592 ], [ %272, %4595 ], [ %272, %4596 ], [ %272, %4662 ], [ %272, %4665 ], [ %272, %4668 ], [ %272, %4669 ], [ %272, %4735 ], [ %272, %4738 ], [ %272, %4741 ], [ %272, %4742 ], [ %272, %4841 ], [ %272, %4844 ], [ %272, %4847 ], [ %272, %4848 ], [ %272, %4937 ], [ %272, %4940 ], [ %272, %4943 ], [ %272, %4944 ], [ %272, %5000 ], [ %272, %5011 ], [ %272, %5014 ], [ %272, %5017 ], [ %272, %5018 ], [ 0, %3188 ], [ %272, %3214 ], [ %272, %3227 ], [ %272, %3193 ], [ %272, %3389 ], [ %272, %3392 ], [ %272, %3395 ], [ %272, %3396 ], [ %272, %3520 ], [ %272, %3523 ], [ %272, %3526 ], [ %272, %3527 ], [ %272, %3606 ], [ %272, %3609 ], [ %272, %3612 ], [ %272, %3613 ], [ %272, %3695 ], [ %272, %3698 ], [ %272, %3701 ], [ %272, %3702 ], [ %272, %3787 ], [ %272, %3790 ], [ %272, %3793 ], [ %272, %3794 ], [ %272, %3911 ], [ %272, %3914 ], [ %272, %3917 ], [ %272, %3918 ], [ %272, %4068 ], [ %272, %4071 ], [ %272, %4074 ], [ %272, %4075 ], [ %272, %4101 ], [ %272, %4104 ], [ %272, %4107 ], [ %272, %4108 ], [ %272, %4982 ], [ %272, %4985 ], [ %272, %4988 ], [ %272, %4993 ], [ %272, %4996 ], [ %272, %4999 ], [ %272, %4215 ], [ %272, %4119 ], [ %272, %4163 ], [ %272, %5049 ]
  %4129 = phi i8 [ %324, %7138 ], [ %324, %6715 ], [ %324, %6497 ], [ %324, %6279 ], [ %324, %7429 ], [ %324, %1362 ], [ %324, %1347 ], [ %324, %1200 ], [ %324, %867 ], [ %324, %801 ], [ %324, %580 ], [ %273, %310 ], [ %324, %7181 ], [ %324, %7184 ], [ %324, %7187 ], [ %324, %7188 ], [ %324, %7423 ], [ %324, %7422 ], [ %324, %7419 ], [ %324, %7416 ], [ %7389, %7403 ], [ %7389, %7402 ], [ %7389, %7399 ], [ %7389, %7396 ], [ %324, %7295 ], [ %324, %7294 ], [ %324, %7291 ], [ %324, %7288 ], [ %324, %7254 ], [ %324, %7253 ], [ %324, %7250 ], [ %324, %7247 ], [ %324, %7214 ], [ %324, %7213 ], [ %324, %7210 ], [ %324, %7207 ], [ %324, %4176 ], [ %324, %1384 ], [ %324, %1383 ], [ %324, %1381 ], [ %324, %4172 ], [ %324, %4276 ], [ %324, %4273 ], [ %324, %4301 ], [ %324, %4880 ], [ %324, %1719 ], [ %324, %1722 ], [ %324, %1725 ], [ %324, %1726 ], [ %324, %1808 ], [ %324, %1811 ], [ %324, %1814 ], [ %324, %1815 ], [ %324, %1863 ], [ %324, %1866 ], [ %324, %1869 ], [ %324, %1870 ], [ %324, %2535 ], [ %324, %2538 ], [ %324, %2541 ], [ %324, %2542 ], [ %324, %2561 ], [ %324, %2564 ], [ %324, %2567 ], [ %324, %2568 ], [ %324, %2646 ], [ %324, %2649 ], [ %324, %2652 ], [ %324, %2653 ], [ %324, %2732 ], [ %324, %2735 ], [ %324, %2738 ], [ %324, %2739 ], [ %2864, %2874 ], [ %2864, %2877 ], [ %2864, %2880 ], [ %2864, %2881 ], [ %324, %2927 ], [ %324, %2930 ], [ %324, %2933 ], [ %324, %2934 ], [ %324, %2948 ], [ %324, %2951 ], [ %324, %2954 ], [ %324, %2955 ], [ %324, %3034 ], [ %324, %3037 ], [ %324, %3040 ], [ %324, %3041 ], [ %324, %3864 ], [ %324, %3438 ], [ %324, %3158 ], [ %324, %3157 ], [ %324, %3154 ], [ %324, %3151 ], [ %324, %3238 ], [ %324, %3236 ], [ %324, %3167 ], [ %324, %3239 ], [ %324, %3185 ], [ %324, %3049 ], [ %324, %4188 ], [ %324, %4191 ], [ %324, %4194 ], [ %324, %4195 ], [ %324, %4208 ], [ %324, %4211 ], [ %324, %4214 ], [ %324, %4314 ], [ %324, %4317 ], [ %324, %4320 ], [ %324, %4321 ], [ %324, %4468 ], [ %324, %4471 ], [ %324, %4474 ], [ %324, %4475 ], [ %324, %4499 ], [ %324, %4502 ], [ %324, %4505 ], [ %324, %4506 ], [ %324, %4589 ], [ %324, %4592 ], [ %324, %4595 ], [ %324, %4596 ], [ %324, %4662 ], [ %324, %4665 ], [ %324, %4668 ], [ %324, %4669 ], [ %324, %4735 ], [ %324, %4738 ], [ %324, %4741 ], [ %324, %4742 ], [ %324, %4841 ], [ %324, %4844 ], [ %324, %4847 ], [ %324, %4848 ], [ %324, %4937 ], [ %324, %4940 ], [ %324, %4943 ], [ %324, %4944 ], [ %324, %5000 ], [ %324, %5011 ], [ %324, %5014 ], [ %324, %5017 ], [ %324, %5018 ], [ %324, %3188 ], [ %324, %3214 ], [ %324, %3227 ], [ %324, %3193 ], [ %324, %3389 ], [ %324, %3392 ], [ %324, %3395 ], [ %324, %3396 ], [ %324, %3520 ], [ %324, %3523 ], [ %324, %3526 ], [ %324, %3527 ], [ %324, %3606 ], [ %324, %3609 ], [ %324, %3612 ], [ %324, %3613 ], [ %324, %3695 ], [ %324, %3698 ], [ %324, %3701 ], [ %324, %3702 ], [ %324, %3787 ], [ %324, %3790 ], [ %324, %3793 ], [ %324, %3794 ], [ %324, %3911 ], [ %324, %3914 ], [ %324, %3917 ], [ %324, %3918 ], [ %324, %4068 ], [ %324, %4071 ], [ %324, %4074 ], [ %324, %4075 ], [ %324, %4101 ], [ %324, %4104 ], [ %324, %4107 ], [ %324, %4108 ], [ %324, %4982 ], [ %324, %4985 ], [ %324, %4988 ], [ %324, %4993 ], [ %324, %4996 ], [ %324, %4999 ], [ %324, %4215 ], [ %324, %4119 ], [ %324, %4163 ], [ %324, %5049 ]
  %4130 = phi i32 [ %274, %7138 ], [ %274, %6715 ], [ %274, %6497 ], [ %274, %6279 ], [ %274, %7429 ], [ %274, %1362 ], [ %274, %1347 ], [ %274, %1200 ], [ %274, %867 ], [ %274, %801 ], [ %274, %580 ], [ %274, %310 ], [ %274, %7181 ], [ %274, %7184 ], [ %274, %7187 ], [ %274, %7188 ], [ %274, %7423 ], [ %274, %7422 ], [ %274, %7419 ], [ %274, %7416 ], [ %274, %7403 ], [ %274, %7402 ], [ %274, %7399 ], [ %274, %7396 ], [ %274, %7295 ], [ %274, %7294 ], [ %274, %7291 ], [ %274, %7288 ], [ %274, %7254 ], [ %274, %7253 ], [ %274, %7250 ], [ %274, %7247 ], [ %274, %7214 ], [ %274, %7213 ], [ %274, %7210 ], [ %274, %7207 ], [ %4177, %4176 ], [ %274, %1384 ], [ %274, %1383 ], [ %274, %1381 ], [ %274, %4172 ], [ %274, %4276 ], [ %274, %4273 ], [ %274, %4301 ], [ %274, %4880 ], [ %274, %1719 ], [ %274, %1722 ], [ %274, %1725 ], [ %274, %1726 ], [ %274, %1808 ], [ %274, %1811 ], [ %274, %1814 ], [ %274, %1815 ], [ %274, %1863 ], [ %274, %1866 ], [ %274, %1869 ], [ %274, %1870 ], [ %274, %2535 ], [ %274, %2538 ], [ %274, %2541 ], [ %274, %2542 ], [ %274, %2561 ], [ %274, %2564 ], [ %274, %2567 ], [ %274, %2568 ], [ %274, %2646 ], [ %274, %2649 ], [ %274, %2652 ], [ %274, %2653 ], [ %274, %2732 ], [ %274, %2735 ], [ %274, %2738 ], [ %274, %2739 ], [ %274, %2874 ], [ %274, %2877 ], [ %274, %2880 ], [ %274, %2881 ], [ %274, %2927 ], [ %274, %2930 ], [ %274, %2933 ], [ %274, %2934 ], [ %274, %2948 ], [ %274, %2951 ], [ %274, %2954 ], [ %274, %2955 ], [ %274, %3034 ], [ %274, %3037 ], [ %274, %3040 ], [ %274, %3041 ], [ 0, %3864 ], [ 0, %3438 ], [ 2, %3158 ], [ 2, %3157 ], [ 2, %3154 ], [ 2, %3151 ], [ 1, %3238 ], [ 1, %3236 ], [ 0, %3167 ], [ 0, %3239 ], [ 0, %3185 ], [ %274, %3049 ], [ %274, %4188 ], [ %274, %4191 ], [ %274, %4194 ], [ %274, %4195 ], [ %274, %4208 ], [ %274, %4211 ], [ %274, %4214 ], [ %274, %4314 ], [ %274, %4317 ], [ %274, %4320 ], [ %274, %4321 ], [ %274, %4468 ], [ %274, %4471 ], [ %274, %4474 ], [ %274, %4475 ], [ %274, %4499 ], [ %274, %4502 ], [ %274, %4505 ], [ %274, %4506 ], [ %274, %4589 ], [ %274, %4592 ], [ %274, %4595 ], [ %274, %4596 ], [ %274, %4662 ], [ %274, %4665 ], [ %274, %4668 ], [ %274, %4669 ], [ %274, %4735 ], [ %274, %4738 ], [ %274, %4741 ], [ %274, %4742 ], [ %274, %4841 ], [ %274, %4844 ], [ %274, %4847 ], [ %274, %4848 ], [ %274, %4937 ], [ %274, %4940 ], [ %274, %4943 ], [ %274, %4944 ], [ %274, %5000 ], [ %274, %5011 ], [ %274, %5014 ], [ %274, %5017 ], [ %274, %5018 ], [ 0, %3188 ], [ 0, %3214 ], [ 0, %3227 ], [ 0, %3193 ], [ %3247, %3389 ], [ %3247, %3392 ], [ %3247, %3395 ], [ %3247, %3396 ], [ 1, %3520 ], [ 1, %3523 ], [ 1, %3526 ], [ 1, %3527 ], [ 1, %3606 ], [ 1, %3609 ], [ 1, %3612 ], [ 1, %3613 ], [ 1, %3695 ], [ 1, %3698 ], [ 1, %3701 ], [ 1, %3702 ], [ 1, %3787 ], [ 1, %3790 ], [ 1, %3793 ], [ 1, %3794 ], [ 1, %3911 ], [ 1, %3914 ], [ 1, %3917 ], [ 1, %3918 ], [ 1, %4068 ], [ 1, %4071 ], [ 1, %4074 ], [ 1, %4075 ], [ 1, %4101 ], [ 1, %4104 ], [ 1, %4107 ], [ 1, %4108 ], [ %274, %4982 ], [ %274, %4985 ], [ %274, %4988 ], [ %274, %4993 ], [ %274, %4996 ], [ %274, %4999 ], [ %274, %4215 ], [ 0, %4119 ], [ 0, %4163 ], [ %274, %5049 ]
  br label %267

4131:                                             ; preds = %4119
  %4132 = sext i32 %4121 to i64
  br label %4133

4133:                                             ; preds = %4168, %4131
  %4134 = phi %struct.CF2_StackNumber_* [ %3113, %4131 ], [ %4171, %4168 ]
  %4135 = phi %struct.CF2_StackNumber_* [ %3112, %4131 ], [ %4170, %4168 ]
  %4136 = phi i64 [ 1, %4131 ], [ %4169, %4168 ]
  %4137 = icmp eq %struct.CF2_StackNumber_* %4135, %4134
  br i1 %4137, label %4138, label %4145

4138:                                             ; preds = %4133
  %4139 = load i32*, i32** %173, align 8
  %4140 = icmp eq i32* %4139, null
  br i1 %4140, label %4163, label %4141

4141:                                             ; preds = %4138
  %4142 = load i32, i32* %4139, align 4
  %4143 = icmp eq i32 %4142, 0
  br i1 %4143, label %4144, label %4163

4144:                                             ; preds = %4141
  store i32 161, i32* %4139, align 4
  br label %4163

4145:                                             ; preds = %4133
  %4146 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4135, i64 -1
  store %struct.CF2_StackNumber_* %4146, %struct.CF2_StackNumber_** %209, align 8
  %4147 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4135, i64 -1, i32 1
  %4148 = load i32, i32* %4147, align 4
  switch i32 %4148, label %4160 [
    i32 2, label %4149
    i32 1, label %4153
  ]

4149:                                             ; preds = %4145
  %4150 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4146, i64 0, i32 0, i32 0
  %4151 = load i32, i32* %4150, align 4
  %4152 = shl i32 %4151, 16
  br label %4163

4153:                                             ; preds = %4145
  %4154 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4146, i64 0, i32 0, i32 0
  %4155 = load i32, i32* %4154, align 4
  %4156 = add nsw i32 %4155, 8192
  %4157 = ashr i32 %4155, 31
  %4158 = add nsw i32 %4156, %4157
  %4159 = ashr i32 %4158, 14
  br label %4163

4160:                                             ; preds = %4145
  %4161 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4146, i64 0, i32 0, i32 0
  %4162 = load i32, i32* %4161, align 4
  br label %4163

4163:                                             ; preds = %4138, %4141, %4144, %4149, %4153, %4160
  %4164 = phi i32 [ %4162, %4160 ], [ %4159, %4153 ], [ %4152, %4149 ], [ 0, %4138 ], [ 0, %4141 ], [ 0, %4144 ]
  %4165 = sub nsw i64 %4132, %4136
  %4166 = getelementptr inbounds [3 x i32], [3 x i32]* %21, i64 0, i64 %4165
  store i32 %4164, i32* %4166, align 4
  %4167 = icmp slt i64 %4136, %4132
  br i1 %4167, label %4168, label %4123

4168:                                             ; preds = %4163
  %4169 = add nuw nsw i64 %4136, 1
  %4170 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4171 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4133

4172:                                             ; preds = %1400
  %4173 = icmp eq i8 %1393, 0
  br i1 %4173, label %4123, label %4174

4174:                                             ; preds = %4172
  %4175 = icmp sgt i32 %274, 0
  br i1 %4175, label %4176, label %4178

4176:                                             ; preds = %4174
  %4177 = add nsw i32 %274, -1
  br label %4123

4178:                                             ; preds = %4174
  %4179 = icmp eq i32 %323, 0
  br i1 %4179, label %7435, label %4180

4180:                                             ; preds = %4178
  %4181 = add nsw i32 %323, -1
  %4182 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4183 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4184 = load i32, i32* %185, align 8
  %4185 = zext i32 %4184 to i64
  %4186 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4183, i64 %4185
  %4187 = icmp eq %struct.CF2_StackNumber_* %4182, %4186
  br i1 %4187, label %4188, label %4195

4188:                                             ; preds = %4180
  %4189 = load i32*, i32** %173, align 8
  %4190 = icmp eq i32* %4189, null
  br i1 %4190, label %4123, label %4191

4191:                                             ; preds = %4188
  %4192 = load i32, i32* %4189, align 4
  %4193 = icmp eq i32 %4192, 0
  br i1 %4193, label %4194, label %4123

4194:                                             ; preds = %4191
  store i32 130, i32* %4189, align 4
  br label %4123

4195:                                             ; preds = %4180
  %4196 = sext i32 %4181 to i64
  %4197 = getelementptr inbounds [3 x i32], [3 x i32]* %21, i64 0, i64 %4196
  %4198 = load i32, i32* %4197, align 4
  %4199 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4182, i64 0, i32 0, i32 0
  store i32 %4198, i32* %4199, align 4
  %4200 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4201 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4200, i64 0, i32 1
  store i32 0, i32* %4201, align 4
  %4202 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4203 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4202, i64 1
  store %struct.CF2_StackNumber_* %4203, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4204:                                             ; preds = %1400
  %4205 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4206 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4207 = icmp eq %struct.CF2_StackNumber_* %4205, %4206
  br i1 %4207, label %4208, label %4215

4208:                                             ; preds = %4204
  %4209 = load i32*, i32** %173, align 8
  %4210 = icmp eq i32* %4209, null
  br i1 %4210, label %4123, label %4211

4211:                                             ; preds = %4208
  %4212 = load i32, i32* %4209, align 4
  %4213 = icmp eq i32 %4212, 0
  br i1 %4213, label %4214, label %4123

4214:                                             ; preds = %4211
  store i32 161, i32* %4209, align 4
  br label %4123

4215:                                             ; preds = %4204
  %4216 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4205, i64 -1
  store %struct.CF2_StackNumber_* %4216, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4217:                                             ; preds = %1400
  %4218 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4219 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4220 = icmp eq %struct.CF2_StackNumber_* %4218, %4219
  br i1 %4220, label %4221, label %4228

4221:                                             ; preds = %4217
  %4222 = load i32*, i32** %173, align 8
  %4223 = icmp eq i32* %4222, null
  br i1 %4223, label %4243, label %4224

4224:                                             ; preds = %4221
  %4225 = load i32, i32* %4222, align 4
  %4226 = icmp eq i32 %4225, 0
  br i1 %4226, label %4227, label %4243

4227:                                             ; preds = %4224
  store i32 161, i32* %4222, align 4
  br label %4243

4228:                                             ; preds = %4217
  %4229 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4218, i64 -1, i32 1
  %4230 = load i32, i32* %4229, align 4
  %4231 = icmp eq i32 %4230, 2
  br i1 %4231, label %4239, label %4232

4232:                                             ; preds = %4228
  %4233 = load i32*, i32** %173, align 8
  %4234 = icmp eq i32* %4233, null
  br i1 %4234, label %4243, label %4235

4235:                                             ; preds = %4232
  %4236 = load i32, i32* %4233, align 4
  %4237 = icmp eq i32 %4236, 0
  br i1 %4237, label %4238, label %4243

4238:                                             ; preds = %4235
  store i32 160, i32* %4233, align 4
  br label %4243

4239:                                             ; preds = %4228
  %4240 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4218, i64 -1
  store %struct.CF2_StackNumber_* %4240, %struct.CF2_StackNumber_** %209, align 8
  %4241 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4240, i64 0, i32 0, i32 0
  %4242 = load i32, i32* %4241, align 4
  br label %4243

4243:                                             ; preds = %4221, %4224, %4227, %4232, %4235, %4238, %4239
  %4244 = phi i32 [ %4242, %4239 ], [ 0, %4221 ], [ 0, %4224 ], [ 0, %4227 ], [ 0, %4232 ], [ 0, %4235 ], [ 0, %4238 ]
  %4245 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4246 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4247 = icmp eq %struct.CF2_StackNumber_* %4245, %4246
  br i1 %4247, label %4248, label %4255

4248:                                             ; preds = %4243
  %4249 = load i32*, i32** %173, align 8
  %4250 = icmp eq i32* %4249, null
  br i1 %4250, label %4273, label %4251

4251:                                             ; preds = %4248
  %4252 = load i32, i32* %4249, align 4
  %4253 = icmp eq i32 %4252, 0
  br i1 %4253, label %4254, label %4273

4254:                                             ; preds = %4251
  store i32 161, i32* %4249, align 4
  br label %4273

4255:                                             ; preds = %4243
  %4256 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4245, i64 -1
  store %struct.CF2_StackNumber_* %4256, %struct.CF2_StackNumber_** %209, align 8
  %4257 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4245, i64 -1, i32 1
  %4258 = load i32, i32* %4257, align 4
  switch i32 %4258, label %4270 [
    i32 2, label %4259
    i32 1, label %4263
  ]

4259:                                             ; preds = %4255
  %4260 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4256, i64 0, i32 0, i32 0
  %4261 = load i32, i32* %4260, align 4
  %4262 = shl i32 %4261, 16
  br label %4273

4263:                                             ; preds = %4255
  %4264 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4256, i64 0, i32 0, i32 0
  %4265 = load i32, i32* %4264, align 4
  %4266 = add nsw i32 %4265, 8192
  %4267 = ashr i32 %4265, 31
  %4268 = add nsw i32 %4266, %4267
  %4269 = ashr i32 %4268, 14
  br label %4273

4270:                                             ; preds = %4255
  %4271 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4256, i64 0, i32 0, i32 0
  %4272 = load i32, i32* %4271, align 4
  br label %4273

4273:                                             ; preds = %4248, %4251, %4254, %4259, %4263, %4270
  %4274 = phi i32 [ %4272, %4270 ], [ %4269, %4263 ], [ %4262, %4259 ], [ 0, %4248 ], [ 0, %4251 ], [ 0, %4254 ]
  %4275 = icmp ult i32 %4244, 32
  br i1 %4275, label %4276, label %4123

4276:                                             ; preds = %4273
  %4277 = sext i32 %4244 to i64
  %4278 = getelementptr inbounds [32 x i32], [32 x i32]* %22, i64 0, i64 %4277
  store i32 %4274, i32* %4278, align 4
  br label %4123

4279:                                             ; preds = %1400
  %4280 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4281 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4282 = icmp eq %struct.CF2_StackNumber_* %4280, %4281
  br i1 %4282, label %4283, label %4290

4283:                                             ; preds = %4279
  %4284 = load i32*, i32** %173, align 8
  %4285 = icmp eq i32* %4284, null
  br i1 %4285, label %4306, label %4286

4286:                                             ; preds = %4283
  %4287 = load i32, i32* %4284, align 4
  %4288 = icmp eq i32 %4287, 0
  br i1 %4288, label %4289, label %4306

4289:                                             ; preds = %4286
  store i32 161, i32* %4284, align 4
  br label %4306

4290:                                             ; preds = %4279
  %4291 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4280, i64 -1, i32 1
  %4292 = load i32, i32* %4291, align 4
  %4293 = icmp eq i32 %4292, 2
  br i1 %4293, label %4301, label %4294

4294:                                             ; preds = %4290
  %4295 = load i32*, i32** %173, align 8
  %4296 = icmp eq i32* %4295, null
  br i1 %4296, label %4306, label %4297

4297:                                             ; preds = %4294
  %4298 = load i32, i32* %4295, align 4
  %4299 = icmp eq i32 %4298, 0
  br i1 %4299, label %4300, label %4306

4300:                                             ; preds = %4297
  store i32 160, i32* %4295, align 4
  br label %4306

4301:                                             ; preds = %4290
  %4302 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4280, i64 -1
  store %struct.CF2_StackNumber_* %4302, %struct.CF2_StackNumber_** %209, align 8
  %4303 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4302, i64 0, i32 0, i32 0
  %4304 = load i32, i32* %4303, align 4
  %4305 = icmp ult i32 %4304, 32
  br i1 %4305, label %4306, label %4123

4306:                                             ; preds = %4300, %4297, %4294, %4289, %4286, %4283, %4301
  %4307 = phi i32 [ %4304, %4301 ], [ 0, %4283 ], [ 0, %4286 ], [ 0, %4289 ], [ 0, %4294 ], [ 0, %4297 ], [ 0, %4300 ]
  %4308 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4309 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4310 = load i32, i32* %185, align 8
  %4311 = zext i32 %4310 to i64
  %4312 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4309, i64 %4311
  %4313 = icmp eq %struct.CF2_StackNumber_* %4308, %4312
  br i1 %4313, label %4314, label %4321

4314:                                             ; preds = %4306
  %4315 = load i32*, i32** %173, align 8
  %4316 = icmp eq i32* %4315, null
  br i1 %4316, label %4123, label %4317

4317:                                             ; preds = %4314
  %4318 = load i32, i32* %4315, align 4
  %4319 = icmp eq i32 %4318, 0
  br i1 %4319, label %4320, label %4123

4320:                                             ; preds = %4317
  store i32 130, i32* %4315, align 4
  br label %4123

4321:                                             ; preds = %4306
  %4322 = sext i32 %4307 to i64
  %4323 = getelementptr inbounds [32 x i32], [32 x i32]* %22, i64 0, i64 %4322
  %4324 = load i32, i32* %4323, align 4
  %4325 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4308, i64 0, i32 0, i32 0
  store i32 %4324, i32* %4325, align 4
  %4326 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4327 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4326, i64 0, i32 1
  store i32 0, i32* %4327, align 4
  %4328 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4329 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4328, i64 1
  store %struct.CF2_StackNumber_* %4329, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4330:                                             ; preds = %1400
  %4331 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4332 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4333 = icmp eq %struct.CF2_StackNumber_* %4331, %4332
  br i1 %4333, label %4334, label %4343

4334:                                             ; preds = %4330
  %4335 = load i32*, i32** %173, align 8
  %4336 = icmp eq i32* %4335, null
  br i1 %4336, label %4457, label %4337

4337:                                             ; preds = %4334
  %4338 = load i32, i32* %4335, align 4
  %4339 = icmp eq i32 %4338, 0
  br i1 %4339, label %4340, label %4457

4340:                                             ; preds = %4337
  store i32 161, i32* %4335, align 4
  %4341 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4342 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4361

4343:                                             ; preds = %4330
  %4344 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4331, i64 -1
  store %struct.CF2_StackNumber_* %4344, %struct.CF2_StackNumber_** %209, align 8
  %4345 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4331, i64 -1, i32 1
  %4346 = load i32, i32* %4345, align 4
  switch i32 %4346, label %4358 [
    i32 2, label %4347
    i32 1, label %4351
  ]

4347:                                             ; preds = %4343
  %4348 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4344, i64 0, i32 0, i32 0
  %4349 = load i32, i32* %4348, align 4
  %4350 = shl i32 %4349, 16
  br label %4361

4351:                                             ; preds = %4343
  %4352 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4344, i64 0, i32 0, i32 0
  %4353 = load i32, i32* %4352, align 4
  %4354 = add nsw i32 %4353, 8192
  %4355 = ashr i32 %4353, 31
  %4356 = add nsw i32 %4354, %4355
  %4357 = ashr i32 %4356, 14
  br label %4361

4358:                                             ; preds = %4343
  %4359 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4344, i64 0, i32 0, i32 0
  %4360 = load i32, i32* %4359, align 4
  br label %4361

4361:                                             ; preds = %4340, %4347, %4351, %4358
  %4362 = phi %struct.CF2_StackNumber_* [ %4332, %4358 ], [ %4332, %4351 ], [ %4332, %4347 ], [ %4342, %4340 ]
  %4363 = phi %struct.CF2_StackNumber_* [ %4344, %4358 ], [ %4344, %4351 ], [ %4344, %4347 ], [ %4341, %4340 ]
  %4364 = phi i32 [ %4360, %4358 ], [ %4357, %4351 ], [ %4350, %4347 ], [ 0, %4340 ]
  %4365 = icmp eq %struct.CF2_StackNumber_* %4363, %4362
  br i1 %4365, label %4366, label %4375

4366:                                             ; preds = %4361
  %4367 = load i32*, i32** %173, align 8
  %4368 = icmp eq i32* %4367, null
  br i1 %4368, label %4457, label %4369

4369:                                             ; preds = %4366
  %4370 = load i32, i32* %4367, align 4
  %4371 = icmp eq i32 %4370, 0
  br i1 %4371, label %4372, label %4457

4372:                                             ; preds = %4369
  store i32 161, i32* %4367, align 4
  %4373 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4374 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4393

4375:                                             ; preds = %4361
  %4376 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4363, i64 -1
  store %struct.CF2_StackNumber_* %4376, %struct.CF2_StackNumber_** %209, align 8
  %4377 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4363, i64 -1, i32 1
  %4378 = load i32, i32* %4377, align 4
  switch i32 %4378, label %4390 [
    i32 2, label %4379
    i32 1, label %4383
  ]

4379:                                             ; preds = %4375
  %4380 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4376, i64 0, i32 0, i32 0
  %4381 = load i32, i32* %4380, align 4
  %4382 = shl i32 %4381, 16
  br label %4393

4383:                                             ; preds = %4375
  %4384 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4376, i64 0, i32 0, i32 0
  %4385 = load i32, i32* %4384, align 4
  %4386 = add nsw i32 %4385, 8192
  %4387 = ashr i32 %4385, 31
  %4388 = add nsw i32 %4386, %4387
  %4389 = ashr i32 %4388, 14
  br label %4393

4390:                                             ; preds = %4375
  %4391 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4376, i64 0, i32 0, i32 0
  %4392 = load i32, i32* %4391, align 4
  br label %4393

4393:                                             ; preds = %4372, %4379, %4383, %4390
  %4394 = phi %struct.CF2_StackNumber_* [ %4362, %4390 ], [ %4362, %4383 ], [ %4362, %4379 ], [ %4374, %4372 ]
  %4395 = phi %struct.CF2_StackNumber_* [ %4376, %4390 ], [ %4376, %4383 ], [ %4376, %4379 ], [ %4373, %4372 ]
  %4396 = phi i32 [ %4392, %4390 ], [ %4389, %4383 ], [ %4382, %4379 ], [ 0, %4372 ]
  %4397 = icmp eq %struct.CF2_StackNumber_* %4395, %4394
  br i1 %4397, label %4398, label %4407

4398:                                             ; preds = %4393
  %4399 = load i32*, i32** %173, align 8
  %4400 = icmp eq i32* %4399, null
  br i1 %4400, label %4457, label %4401

4401:                                             ; preds = %4398
  %4402 = load i32, i32* %4399, align 4
  %4403 = icmp eq i32 %4402, 0
  br i1 %4403, label %4404, label %4457

4404:                                             ; preds = %4401
  store i32 161, i32* %4399, align 4
  %4405 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4406 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4425

4407:                                             ; preds = %4393
  %4408 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4395, i64 -1
  store %struct.CF2_StackNumber_* %4408, %struct.CF2_StackNumber_** %209, align 8
  %4409 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4395, i64 -1, i32 1
  %4410 = load i32, i32* %4409, align 4
  switch i32 %4410, label %4422 [
    i32 2, label %4411
    i32 1, label %4415
  ]

4411:                                             ; preds = %4407
  %4412 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4408, i64 0, i32 0, i32 0
  %4413 = load i32, i32* %4412, align 4
  %4414 = shl i32 %4413, 16
  br label %4425

4415:                                             ; preds = %4407
  %4416 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4408, i64 0, i32 0, i32 0
  %4417 = load i32, i32* %4416, align 4
  %4418 = add nsw i32 %4417, 8192
  %4419 = ashr i32 %4417, 31
  %4420 = add nsw i32 %4418, %4419
  %4421 = ashr i32 %4420, 14
  br label %4425

4422:                                             ; preds = %4407
  %4423 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4408, i64 0, i32 0, i32 0
  %4424 = load i32, i32* %4423, align 4
  br label %4425

4425:                                             ; preds = %4404, %4411, %4415, %4422
  %4426 = phi %struct.CF2_StackNumber_* [ %4394, %4422 ], [ %4394, %4415 ], [ %4394, %4411 ], [ %4406, %4404 ]
  %4427 = phi %struct.CF2_StackNumber_* [ %4408, %4422 ], [ %4408, %4415 ], [ %4408, %4411 ], [ %4405, %4404 ]
  %4428 = phi i32 [ %4424, %4422 ], [ %4421, %4415 ], [ %4414, %4411 ], [ 0, %4404 ]
  %4429 = icmp eq %struct.CF2_StackNumber_* %4427, %4426
  br i1 %4429, label %4430, label %4439

4430:                                             ; preds = %4425
  %4431 = load i32*, i32** %173, align 8
  %4432 = icmp eq i32* %4431, null
  br i1 %4432, label %4457, label %4433

4433:                                             ; preds = %4430
  %4434 = load i32, i32* %4431, align 4
  %4435 = icmp eq i32 %4434, 0
  br i1 %4435, label %4436, label %4457

4436:                                             ; preds = %4433
  store i32 161, i32* %4431, align 4
  %4437 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4438 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4457

4439:                                             ; preds = %4425
  %4440 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4427, i64 -1
  store %struct.CF2_StackNumber_* %4440, %struct.CF2_StackNumber_** %209, align 8
  %4441 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4427, i64 -1, i32 1
  %4442 = load i32, i32* %4441, align 4
  switch i32 %4442, label %4454 [
    i32 2, label %4443
    i32 1, label %4447
  ]

4443:                                             ; preds = %4439
  %4444 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4440, i64 0, i32 0, i32 0
  %4445 = load i32, i32* %4444, align 4
  %4446 = shl i32 %4445, 16
  br label %4457

4447:                                             ; preds = %4439
  %4448 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4440, i64 0, i32 0, i32 0
  %4449 = load i32, i32* %4448, align 4
  %4450 = add nsw i32 %4449, 8192
  %4451 = ashr i32 %4449, 31
  %4452 = add nsw i32 %4450, %4451
  %4453 = ashr i32 %4452, 14
  br label %4457

4454:                                             ; preds = %4439
  %4455 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4440, i64 0, i32 0, i32 0
  %4456 = load i32, i32* %4455, align 4
  br label %4457

4457:                                             ; preds = %4366, %4334, %4369, %4337, %4401, %4398, %4430, %4433, %4436, %4443, %4447, %4454
  %4458 = phi i32 [ %4428, %4454 ], [ %4428, %4447 ], [ %4428, %4443 ], [ %4428, %4430 ], [ %4428, %4433 ], [ %4428, %4436 ], [ 0, %4398 ], [ 0, %4401 ], [ 0, %4337 ], [ 0, %4369 ], [ 0, %4334 ], [ 0, %4366 ]
  %4459 = phi i32 [ %4364, %4454 ], [ %4364, %4447 ], [ %4364, %4443 ], [ %4364, %4430 ], [ %4364, %4433 ], [ %4364, %4436 ], [ %4364, %4398 ], [ %4364, %4401 ], [ 0, %4337 ], [ %4364, %4369 ], [ 0, %4334 ], [ %4364, %4366 ]
  %4460 = phi i32 [ %4396, %4454 ], [ %4396, %4447 ], [ %4396, %4443 ], [ %4396, %4430 ], [ %4396, %4433 ], [ %4396, %4436 ], [ %4396, %4398 ], [ %4396, %4401 ], [ 0, %4337 ], [ 0, %4369 ], [ 0, %4334 ], [ 0, %4366 ]
  %4461 = phi %struct.CF2_StackNumber_* [ %4426, %4454 ], [ %4426, %4447 ], [ %4426, %4443 ], [ %4426, %4430 ], [ %4426, %4433 ], [ %4438, %4436 ], [ %4394, %4398 ], [ %4394, %4401 ], [ %4331, %4337 ], [ %4362, %4369 ], [ %4331, %4334 ], [ %4362, %4366 ]
  %4462 = phi %struct.CF2_StackNumber_* [ %4440, %4454 ], [ %4440, %4447 ], [ %4440, %4443 ], [ %4426, %4430 ], [ %4426, %4433 ], [ %4437, %4436 ], [ %4394, %4398 ], [ %4394, %4401 ], [ %4331, %4337 ], [ %4362, %4369 ], [ %4331, %4334 ], [ %4362, %4366 ]
  %4463 = phi i32 [ %4456, %4454 ], [ %4453, %4447 ], [ %4446, %4443 ], [ 0, %4430 ], [ 0, %4433 ], [ 0, %4436 ], [ 0, %4398 ], [ 0, %4401 ], [ 0, %4337 ], [ 0, %4369 ], [ 0, %4334 ], [ 0, %4366 ]
  %4464 = load i32, i32* %185, align 8
  %4465 = zext i32 %4464 to i64
  %4466 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4461, i64 %4465
  %4467 = icmp eq %struct.CF2_StackNumber_* %4462, %4466
  br i1 %4467, label %4468, label %4475

4468:                                             ; preds = %4457
  %4469 = load i32*, i32** %173, align 8
  %4470 = icmp eq i32* %4469, null
  br i1 %4470, label %4123, label %4471

4471:                                             ; preds = %4468
  %4472 = load i32, i32* %4469, align 4
  %4473 = icmp eq i32 %4472, 0
  br i1 %4473, label %4474, label %4123

4474:                                             ; preds = %4471
  store i32 130, i32* %4469, align 4
  br label %4123

4475:                                             ; preds = %4457
  %4476 = icmp sgt i32 %4460, %4459
  %4477 = select i1 %4476, i32 %4458, i32 %4463
  %4478 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4462, i64 0, i32 0, i32 0
  store i32 %4477, i32* %4478, align 4
  %4479 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4480 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4479, i64 0, i32 1
  store i32 0, i32* %4480, align 4
  %4481 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4482 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4481, i64 1
  store %struct.CF2_StackNumber_* %4482, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4483:                                             ; preds = %1400
  %4484 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %42, align 8
  %4485 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %4484, i64 0, i32 11
  %4486 = load i32, i32* %4485, align 8
  %4487 = shl i32 %4486, 13
  %4488 = xor i32 %4487, %4486
  %4489 = lshr i32 %4488, 17
  %4490 = xor i32 %4489, %4488
  %4491 = shl i32 %4490, 5
  %4492 = xor i32 %4491, %4490
  store i32 %4492, i32* %4485, align 8
  %4493 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4494 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4495 = load i32, i32* %185, align 8
  %4496 = zext i32 %4495 to i64
  %4497 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4494, i64 %4496
  %4498 = icmp eq %struct.CF2_StackNumber_* %4493, %4497
  br i1 %4498, label %4499, label %4506

4499:                                             ; preds = %4483
  %4500 = load i32*, i32** %173, align 8
  %4501 = icmp eq i32* %4500, null
  br i1 %4501, label %4123, label %4502

4502:                                             ; preds = %4499
  %4503 = load i32, i32* %4500, align 4
  %4504 = icmp eq i32 %4503, 0
  br i1 %4504, label %4505, label %4123

4505:                                             ; preds = %4502
  store i32 130, i32* %4500, align 4
  br label %4123

4506:                                             ; preds = %4483
  %4507 = and i32 %4486, 65535
  %4508 = add nuw nsw i32 %4507, 1
  %4509 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4493, i64 0, i32 0, i32 0
  store i32 %4508, i32* %4509, align 4
  %4510 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4511 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4510, i64 0, i32 1
  store i32 0, i32* %4511, align 4
  %4512 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4513 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4512, i64 1
  store %struct.CF2_StackNumber_* %4513, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4514:                                             ; preds = %1400
  %4515 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4516 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4517 = icmp eq %struct.CF2_StackNumber_* %4515, %4516
  br i1 %4517, label %4518, label %4527

4518:                                             ; preds = %4514
  %4519 = load i32*, i32** %173, align 8
  %4520 = icmp eq i32* %4519, null
  br i1 %4520, label %4577, label %4521

4521:                                             ; preds = %4518
  %4522 = load i32, i32* %4519, align 4
  %4523 = icmp eq i32 %4522, 0
  br i1 %4523, label %4524, label %4577

4524:                                             ; preds = %4521
  store i32 161, i32* %4519, align 4
  %4525 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4526 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4545

4527:                                             ; preds = %4514
  %4528 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4515, i64 -1
  store %struct.CF2_StackNumber_* %4528, %struct.CF2_StackNumber_** %209, align 8
  %4529 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4515, i64 -1, i32 1
  %4530 = load i32, i32* %4529, align 4
  switch i32 %4530, label %4542 [
    i32 2, label %4531
    i32 1, label %4535
  ]

4531:                                             ; preds = %4527
  %4532 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4528, i64 0, i32 0, i32 0
  %4533 = load i32, i32* %4532, align 4
  %4534 = shl i32 %4533, 16
  br label %4545

4535:                                             ; preds = %4527
  %4536 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4528, i64 0, i32 0, i32 0
  %4537 = load i32, i32* %4536, align 4
  %4538 = add nsw i32 %4537, 8192
  %4539 = ashr i32 %4537, 31
  %4540 = add nsw i32 %4538, %4539
  %4541 = ashr i32 %4540, 14
  br label %4545

4542:                                             ; preds = %4527
  %4543 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4528, i64 0, i32 0, i32 0
  %4544 = load i32, i32* %4543, align 4
  br label %4545

4545:                                             ; preds = %4524, %4531, %4535, %4542
  %4546 = phi %struct.CF2_StackNumber_* [ %4516, %4542 ], [ %4516, %4535 ], [ %4516, %4531 ], [ %4526, %4524 ]
  %4547 = phi %struct.CF2_StackNumber_* [ %4528, %4542 ], [ %4528, %4535 ], [ %4528, %4531 ], [ %4525, %4524 ]
  %4548 = phi i32 [ %4544, %4542 ], [ %4541, %4535 ], [ %4534, %4531 ], [ 0, %4524 ]
  %4549 = icmp eq %struct.CF2_StackNumber_* %4547, %4546
  br i1 %4549, label %4550, label %4559

4550:                                             ; preds = %4545
  %4551 = load i32*, i32** %173, align 8
  %4552 = icmp eq i32* %4551, null
  br i1 %4552, label %4577, label %4553

4553:                                             ; preds = %4550
  %4554 = load i32, i32* %4551, align 4
  %4555 = icmp eq i32 %4554, 0
  br i1 %4555, label %4556, label %4577

4556:                                             ; preds = %4553
  store i32 161, i32* %4551, align 4
  %4557 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4558 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4577

4559:                                             ; preds = %4545
  %4560 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4547, i64 -1
  store %struct.CF2_StackNumber_* %4560, %struct.CF2_StackNumber_** %209, align 8
  %4561 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4547, i64 -1, i32 1
  %4562 = load i32, i32* %4561, align 4
  switch i32 %4562, label %4574 [
    i32 2, label %4563
    i32 1, label %4567
  ]

4563:                                             ; preds = %4559
  %4564 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4560, i64 0, i32 0, i32 0
  %4565 = load i32, i32* %4564, align 4
  %4566 = shl i32 %4565, 16
  br label %4577

4567:                                             ; preds = %4559
  %4568 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4560, i64 0, i32 0, i32 0
  %4569 = load i32, i32* %4568, align 4
  %4570 = add nsw i32 %4569, 8192
  %4571 = ashr i32 %4569, 31
  %4572 = add nsw i32 %4570, %4571
  %4573 = ashr i32 %4572, 14
  br label %4577

4574:                                             ; preds = %4559
  %4575 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4560, i64 0, i32 0, i32 0
  %4576 = load i32, i32* %4575, align 4
  br label %4577

4577:                                             ; preds = %4521, %4518, %4550, %4553, %4556, %4563, %4567, %4574
  %4578 = phi i32 [ %4548, %4574 ], [ %4548, %4567 ], [ %4548, %4563 ], [ %4548, %4550 ], [ %4548, %4553 ], [ %4548, %4556 ], [ 0, %4518 ], [ 0, %4521 ]
  %4579 = phi %struct.CF2_StackNumber_* [ %4546, %4574 ], [ %4546, %4567 ], [ %4546, %4563 ], [ %4546, %4550 ], [ %4546, %4553 ], [ %4558, %4556 ], [ %4515, %4518 ], [ %4515, %4521 ]
  %4580 = phi %struct.CF2_StackNumber_* [ %4560, %4574 ], [ %4560, %4567 ], [ %4560, %4563 ], [ %4546, %4550 ], [ %4546, %4553 ], [ %4557, %4556 ], [ %4515, %4518 ], [ %4515, %4521 ]
  %4581 = phi i32 [ %4576, %4574 ], [ %4573, %4567 ], [ %4566, %4563 ], [ 0, %4550 ], [ 0, %4553 ], [ 0, %4556 ], [ 0, %4518 ], [ 0, %4521 ]
  %4582 = sext i32 %4581 to i64
  %4583 = sext i32 %4578 to i64
  %4584 = mul nsw i64 %4582, %4583
  %4585 = load i32, i32* %185, align 8
  %4586 = zext i32 %4585 to i64
  %4587 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4579, i64 %4586
  %4588 = icmp eq %struct.CF2_StackNumber_* %4580, %4587
  br i1 %4588, label %4589, label %4596

4589:                                             ; preds = %4577
  %4590 = load i32*, i32** %173, align 8
  %4591 = icmp eq i32* %4590, null
  br i1 %4591, label %4123, label %4592

4592:                                             ; preds = %4589
  %4593 = load i32, i32* %4590, align 4
  %4594 = icmp eq i32 %4593, 0
  br i1 %4594, label %4595, label %4123

4595:                                             ; preds = %4592
  store i32 130, i32* %4590, align 4
  br label %4123

4596:                                             ; preds = %4577
  %4597 = add nsw i64 %4584, 32768
  %4598 = ashr i64 %4584, 63
  %4599 = add nsw i64 %4597, %4598
  %4600 = lshr i64 %4599, 16
  %4601 = trunc i64 %4600 to i32
  %4602 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4580, i64 0, i32 0, i32 0
  store i32 %4601, i32* %4602, align 4
  %4603 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4604 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4603, i64 0, i32 1
  store i32 0, i32* %4604, align 4
  %4605 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4606 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4605, i64 1
  store %struct.CF2_StackNumber_* %4606, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4607:                                             ; preds = %1400
  %4608 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4609 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4610 = icmp eq %struct.CF2_StackNumber_* %4608, %4609
  br i1 %4610, label %4611, label %4618

4611:                                             ; preds = %4607
  %4612 = load i32*, i32** %173, align 8
  %4613 = icmp eq i32* %4612, null
  br i1 %4613, label %4654, label %4614

4614:                                             ; preds = %4611
  %4615 = load i32, i32* %4612, align 4
  %4616 = icmp eq i32 %4615, 0
  br i1 %4616, label %4617, label %4654

4617:                                             ; preds = %4614
  store i32 161, i32* %4612, align 4
  br label %4654

4618:                                             ; preds = %4607
  %4619 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4608, i64 -1
  store %struct.CF2_StackNumber_* %4619, %struct.CF2_StackNumber_** %209, align 8
  %4620 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4608, i64 -1, i32 1
  %4621 = load i32, i32* %4620, align 4
  switch i32 %4621, label %4633 [
    i32 2, label %4622
    i32 1, label %4626
  ]

4622:                                             ; preds = %4618
  %4623 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4619, i64 0, i32 0, i32 0
  %4624 = load i32, i32* %4623, align 4
  %4625 = shl i32 %4624, 16
  br label %4636

4626:                                             ; preds = %4618
  %4627 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4619, i64 0, i32 0, i32 0
  %4628 = load i32, i32* %4627, align 4
  %4629 = add nsw i32 %4628, 8192
  %4630 = ashr i32 %4628, 31
  %4631 = add nsw i32 %4629, %4630
  %4632 = ashr i32 %4631, 14
  br label %4636

4633:                                             ; preds = %4618
  %4634 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4619, i64 0, i32 0, i32 0
  %4635 = load i32, i32* %4634, align 4
  br label %4636

4636:                                             ; preds = %4622, %4626, %4633
  %4637 = phi i32 [ %4635, %4633 ], [ %4632, %4626 ], [ %4625, %4622 ]
  %4638 = icmp sgt i32 %4637, 0
  br i1 %4638, label %4639, label %4654

4639:                                             ; preds = %4636
  %4640 = icmp sgt i32 %4637, 9
  %4641 = zext i1 %4640 to i32
  %4642 = lshr i32 %4637, %4641
  %4643 = sext i32 %4642 to i64
  %4644 = sext i32 %4637 to i64
  br label %4645

4645:                                             ; preds = %4645, %4639
  %4646 = phi i64 [ %4643, %4639 ], [ %4650, %4645 ]
  %4647 = call i64 @FT_DivFix(i64 %4644, i64 %4646) #11
  %4648 = add nsw i64 %4646, 1
  %4649 = add i64 %4648, %4647
  %4650 = ashr i64 %4649, 1
  %4651 = icmp eq i64 %4650, %4646
  br i1 %4651, label %4652, label %4645

4652:                                             ; preds = %4645
  %4653 = trunc i64 %4646 to i32
  br label %4654

4654:                                             ; preds = %4617, %4614, %4611, %4636, %4652
  %4655 = phi i32 [ %4653, %4652 ], [ 0, %4636 ], [ 0, %4611 ], [ 0, %4614 ], [ 0, %4617 ]
  %4656 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4657 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4658 = load i32, i32* %185, align 8
  %4659 = zext i32 %4658 to i64
  %4660 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4657, i64 %4659
  %4661 = icmp eq %struct.CF2_StackNumber_* %4656, %4660
  br i1 %4661, label %4662, label %4669

4662:                                             ; preds = %4654
  %4663 = load i32*, i32** %173, align 8
  %4664 = icmp eq i32* %4663, null
  br i1 %4664, label %4123, label %4665

4665:                                             ; preds = %4662
  %4666 = load i32, i32* %4663, align 4
  %4667 = icmp eq i32 %4666, 0
  br i1 %4667, label %4668, label %4123

4668:                                             ; preds = %4665
  store i32 130, i32* %4663, align 4
  br label %4123

4669:                                             ; preds = %4654
  %4670 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4656, i64 0, i32 0, i32 0
  store i32 %4655, i32* %4670, align 4
  %4671 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4672 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4671, i64 0, i32 1
  store i32 0, i32* %4672, align 4
  %4673 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4674 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4673, i64 1
  store %struct.CF2_StackNumber_* %4674, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4675:                                             ; preds = %1400
  %4676 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4677 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4678 = icmp eq %struct.CF2_StackNumber_* %4676, %4677
  br i1 %4678, label %4679, label %4688

4679:                                             ; preds = %4675
  %4680 = load i32*, i32** %173, align 8
  %4681 = icmp eq i32* %4680, null
  br i1 %4681, label %4706, label %4682

4682:                                             ; preds = %4679
  %4683 = load i32, i32* %4680, align 4
  %4684 = icmp eq i32 %4683, 0
  br i1 %4684, label %4685, label %4706

4685:                                             ; preds = %4682
  store i32 161, i32* %4680, align 4
  %4686 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4687 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4706

4688:                                             ; preds = %4675
  %4689 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4676, i64 -1
  store %struct.CF2_StackNumber_* %4689, %struct.CF2_StackNumber_** %209, align 8
  %4690 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4676, i64 -1, i32 1
  %4691 = load i32, i32* %4690, align 4
  switch i32 %4691, label %4703 [
    i32 2, label %4692
    i32 1, label %4696
  ]

4692:                                             ; preds = %4688
  %4693 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4689, i64 0, i32 0, i32 0
  %4694 = load i32, i32* %4693, align 4
  %4695 = shl i32 %4694, 16
  br label %4706

4696:                                             ; preds = %4688
  %4697 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4689, i64 0, i32 0, i32 0
  %4698 = load i32, i32* %4697, align 4
  %4699 = add nsw i32 %4698, 8192
  %4700 = ashr i32 %4698, 31
  %4701 = add nsw i32 %4699, %4700
  %4702 = ashr i32 %4701, 14
  br label %4706

4703:                                             ; preds = %4688
  %4704 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4689, i64 0, i32 0, i32 0
  %4705 = load i32, i32* %4704, align 4
  br label %4706

4706:                                             ; preds = %4679, %4682, %4685, %4692, %4696, %4703
  %4707 = phi %struct.CF2_StackNumber_* [ %4677, %4703 ], [ %4677, %4696 ], [ %4677, %4692 ], [ %4676, %4679 ], [ %4676, %4682 ], [ %4687, %4685 ]
  %4708 = phi %struct.CF2_StackNumber_* [ %4689, %4703 ], [ %4689, %4696 ], [ %4689, %4692 ], [ %4676, %4679 ], [ %4676, %4682 ], [ %4686, %4685 ]
  %4709 = phi i32 [ %4705, %4703 ], [ %4702, %4696 ], [ %4695, %4692 ], [ 0, %4679 ], [ 0, %4682 ], [ 0, %4685 ]
  %4710 = load i32, i32* %185, align 8
  %4711 = zext i32 %4710 to i64
  %4712 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4707, i64 %4711
  %4713 = icmp eq %struct.CF2_StackNumber_* %4708, %4712
  br i1 %4713, label %4714, label %4722

4714:                                             ; preds = %4706
  %4715 = load i32*, i32** %173, align 8
  %4716 = icmp eq i32* %4715, null
  br i1 %4716, label %4728, label %4717

4717:                                             ; preds = %4714
  %4718 = load i32, i32* %4715, align 4
  %4719 = icmp eq i32 %4718, 0
  br i1 %4719, label %4720, label %4728

4720:                                             ; preds = %4717
  store i32 130, i32* %4715, align 4
  %4721 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  br label %4728

4722:                                             ; preds = %4706
  %4723 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4708, i64 0, i32 0, i32 0
  store i32 %4709, i32* %4723, align 4
  %4724 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4725 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4724, i64 0, i32 1
  store i32 0, i32* %4725, align 4
  %4726 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4727 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4726, i64 1
  store %struct.CF2_StackNumber_* %4727, %struct.CF2_StackNumber_** %209, align 8
  br label %4728

4728:                                             ; preds = %4714, %4717, %4720, %4722
  %4729 = phi %struct.CF2_StackNumber_* [ %4708, %4714 ], [ %4708, %4717 ], [ %4721, %4720 ], [ %4727, %4722 ]
  %4730 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4731 = load i32, i32* %185, align 8
  %4732 = zext i32 %4731 to i64
  %4733 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4730, i64 %4732
  %4734 = icmp eq %struct.CF2_StackNumber_* %4729, %4733
  br i1 %4734, label %4735, label %4742

4735:                                             ; preds = %4728
  %4736 = load i32*, i32** %173, align 8
  %4737 = icmp eq i32* %4736, null
  br i1 %4737, label %4123, label %4738

4738:                                             ; preds = %4735
  %4739 = load i32, i32* %4736, align 4
  %4740 = icmp eq i32 %4739, 0
  br i1 %4740, label %4741, label %4123

4741:                                             ; preds = %4738
  store i32 130, i32* %4736, align 4
  br label %4123

4742:                                             ; preds = %4728
  %4743 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4729, i64 0, i32 0, i32 0
  store i32 %4709, i32* %4743, align 4
  %4744 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4745 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4744, i64 0, i32 1
  store i32 0, i32* %4745, align 4
  %4746 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4747 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4746, i64 1
  store %struct.CF2_StackNumber_* %4747, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4748:                                             ; preds = %1400
  %4749 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4750 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4751 = icmp eq %struct.CF2_StackNumber_* %4749, %4750
  br i1 %4751, label %4752, label %4761

4752:                                             ; preds = %4748
  %4753 = load i32*, i32** %173, align 8
  %4754 = icmp eq i32* %4753, null
  br i1 %4754, label %4811, label %4755

4755:                                             ; preds = %4752
  %4756 = load i32, i32* %4753, align 4
  %4757 = icmp eq i32 %4756, 0
  br i1 %4757, label %4758, label %4811

4758:                                             ; preds = %4755
  store i32 161, i32* %4753, align 4
  %4759 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4760 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4779

4761:                                             ; preds = %4748
  %4762 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4749, i64 -1
  store %struct.CF2_StackNumber_* %4762, %struct.CF2_StackNumber_** %209, align 8
  %4763 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4749, i64 -1, i32 1
  %4764 = load i32, i32* %4763, align 4
  switch i32 %4764, label %4776 [
    i32 2, label %4765
    i32 1, label %4769
  ]

4765:                                             ; preds = %4761
  %4766 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4762, i64 0, i32 0, i32 0
  %4767 = load i32, i32* %4766, align 4
  %4768 = shl i32 %4767, 16
  br label %4779

4769:                                             ; preds = %4761
  %4770 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4762, i64 0, i32 0, i32 0
  %4771 = load i32, i32* %4770, align 4
  %4772 = add nsw i32 %4771, 8192
  %4773 = ashr i32 %4771, 31
  %4774 = add nsw i32 %4772, %4773
  %4775 = ashr i32 %4774, 14
  br label %4779

4776:                                             ; preds = %4761
  %4777 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4762, i64 0, i32 0, i32 0
  %4778 = load i32, i32* %4777, align 4
  br label %4779

4779:                                             ; preds = %4758, %4765, %4769, %4776
  %4780 = phi %struct.CF2_StackNumber_* [ %4750, %4776 ], [ %4750, %4769 ], [ %4750, %4765 ], [ %4760, %4758 ]
  %4781 = phi %struct.CF2_StackNumber_* [ %4762, %4776 ], [ %4762, %4769 ], [ %4762, %4765 ], [ %4759, %4758 ]
  %4782 = phi i32 [ %4778, %4776 ], [ %4775, %4769 ], [ %4768, %4765 ], [ 0, %4758 ]
  %4783 = icmp eq %struct.CF2_StackNumber_* %4781, %4780
  br i1 %4783, label %4784, label %4793

4784:                                             ; preds = %4779
  %4785 = load i32*, i32** %173, align 8
  %4786 = icmp eq i32* %4785, null
  br i1 %4786, label %4811, label %4787

4787:                                             ; preds = %4784
  %4788 = load i32, i32* %4785, align 4
  %4789 = icmp eq i32 %4788, 0
  br i1 %4789, label %4790, label %4811

4790:                                             ; preds = %4787
  store i32 161, i32* %4785, align 4
  %4791 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4792 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4811

4793:                                             ; preds = %4779
  %4794 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4781, i64 -1
  store %struct.CF2_StackNumber_* %4794, %struct.CF2_StackNumber_** %209, align 8
  %4795 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4781, i64 -1, i32 1
  %4796 = load i32, i32* %4795, align 4
  switch i32 %4796, label %4808 [
    i32 2, label %4797
    i32 1, label %4801
  ]

4797:                                             ; preds = %4793
  %4798 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4794, i64 0, i32 0, i32 0
  %4799 = load i32, i32* %4798, align 4
  %4800 = shl i32 %4799, 16
  br label %4811

4801:                                             ; preds = %4793
  %4802 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4794, i64 0, i32 0, i32 0
  %4803 = load i32, i32* %4802, align 4
  %4804 = add nsw i32 %4803, 8192
  %4805 = ashr i32 %4803, 31
  %4806 = add nsw i32 %4804, %4805
  %4807 = ashr i32 %4806, 14
  br label %4811

4808:                                             ; preds = %4793
  %4809 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4794, i64 0, i32 0, i32 0
  %4810 = load i32, i32* %4809, align 4
  br label %4811

4811:                                             ; preds = %4755, %4752, %4784, %4787, %4790, %4797, %4801, %4808
  %4812 = phi i32 [ %4782, %4808 ], [ %4782, %4801 ], [ %4782, %4797 ], [ %4782, %4784 ], [ %4782, %4787 ], [ %4782, %4790 ], [ 0, %4752 ], [ 0, %4755 ]
  %4813 = phi %struct.CF2_StackNumber_* [ %4780, %4808 ], [ %4780, %4801 ], [ %4780, %4797 ], [ %4780, %4784 ], [ %4780, %4787 ], [ %4792, %4790 ], [ %4749, %4752 ], [ %4749, %4755 ]
  %4814 = phi %struct.CF2_StackNumber_* [ %4794, %4808 ], [ %4794, %4801 ], [ %4794, %4797 ], [ %4780, %4784 ], [ %4780, %4787 ], [ %4791, %4790 ], [ %4749, %4752 ], [ %4749, %4755 ]
  %4815 = phi i32 [ %4810, %4808 ], [ %4807, %4801 ], [ %4800, %4797 ], [ 0, %4784 ], [ 0, %4787 ], [ 0, %4790 ], [ 0, %4752 ], [ 0, %4755 ]
  %4816 = load i32, i32* %185, align 8
  %4817 = zext i32 %4816 to i64
  %4818 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4813, i64 %4817
  %4819 = icmp eq %struct.CF2_StackNumber_* %4814, %4818
  br i1 %4819, label %4820, label %4828

4820:                                             ; preds = %4811
  %4821 = load i32*, i32** %173, align 8
  %4822 = icmp eq i32* %4821, null
  br i1 %4822, label %4834, label %4823

4823:                                             ; preds = %4820
  %4824 = load i32, i32* %4821, align 4
  %4825 = icmp eq i32 %4824, 0
  br i1 %4825, label %4826, label %4834

4826:                                             ; preds = %4823
  store i32 130, i32* %4821, align 4
  %4827 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  br label %4834

4828:                                             ; preds = %4811
  %4829 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4814, i64 0, i32 0, i32 0
  store i32 %4812, i32* %4829, align 4
  %4830 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4831 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4830, i64 0, i32 1
  store i32 0, i32* %4831, align 4
  %4832 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4833 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4832, i64 1
  store %struct.CF2_StackNumber_* %4833, %struct.CF2_StackNumber_** %209, align 8
  br label %4834

4834:                                             ; preds = %4820, %4823, %4826, %4828
  %4835 = phi %struct.CF2_StackNumber_* [ %4814, %4820 ], [ %4814, %4823 ], [ %4827, %4826 ], [ %4833, %4828 ]
  %4836 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4837 = load i32, i32* %185, align 8
  %4838 = zext i32 %4837 to i64
  %4839 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4836, i64 %4838
  %4840 = icmp eq %struct.CF2_StackNumber_* %4835, %4839
  br i1 %4840, label %4841, label %4848

4841:                                             ; preds = %4834
  %4842 = load i32*, i32** %173, align 8
  %4843 = icmp eq i32* %4842, null
  br i1 %4843, label %4123, label %4844

4844:                                             ; preds = %4841
  %4845 = load i32, i32* %4842, align 4
  %4846 = icmp eq i32 %4845, 0
  br i1 %4846, label %4847, label %4123

4847:                                             ; preds = %4844
  store i32 130, i32* %4842, align 4
  br label %4123

4848:                                             ; preds = %4834
  %4849 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4835, i64 0, i32 0, i32 0
  store i32 %4815, i32* %4849, align 4
  %4850 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4851 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4850, i64 0, i32 1
  store i32 0, i32* %4851, align 4
  %4852 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4853 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4852, i64 1
  store %struct.CF2_StackNumber_* %4853, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4854:                                             ; preds = %1400
  %4855 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4856 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4857 = icmp eq %struct.CF2_StackNumber_* %4855, %4856
  br i1 %4857, label %4858, label %4865

4858:                                             ; preds = %4854
  %4859 = load i32*, i32** %173, align 8
  %4860 = icmp eq i32* %4859, null
  br i1 %4860, label %4880, label %4861

4861:                                             ; preds = %4858
  %4862 = load i32, i32* %4859, align 4
  %4863 = icmp eq i32 %4862, 0
  br i1 %4863, label %4864, label %4880

4864:                                             ; preds = %4861
  store i32 161, i32* %4859, align 4
  br label %4880

4865:                                             ; preds = %4854
  %4866 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4855, i64 -1, i32 1
  %4867 = load i32, i32* %4866, align 4
  %4868 = icmp eq i32 %4867, 2
  br i1 %4868, label %4876, label %4869

4869:                                             ; preds = %4865
  %4870 = load i32*, i32** %173, align 8
  %4871 = icmp eq i32* %4870, null
  br i1 %4871, label %4880, label %4872

4872:                                             ; preds = %4869
  %4873 = load i32, i32* %4870, align 4
  %4874 = icmp eq i32 %4873, 0
  br i1 %4874, label %4875, label %4880

4875:                                             ; preds = %4872
  store i32 160, i32* %4870, align 4
  br label %4880

4876:                                             ; preds = %4865
  %4877 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4855, i64 -1
  store %struct.CF2_StackNumber_* %4877, %struct.CF2_StackNumber_** %209, align 8
  %4878 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4877, i64 0, i32 0, i32 0
  %4879 = load i32, i32* %4878, align 4
  br label %4880

4880:                                             ; preds = %4858, %4861, %4864, %4869, %4872, %4875, %4876
  %4881 = phi i32 [ %4879, %4876 ], [ 0, %4858 ], [ 0, %4861 ], [ 0, %4864 ], [ 0, %4869 ], [ 0, %4872 ], [ 0, %4875 ]
  %4882 = load i64, i64* %187, align 8
  %4883 = load i64, i64* %208, align 8
  %4884 = sub i64 %4882, %4883
  %4885 = lshr exact i64 %4884, 3
  %4886 = trunc i64 %4885 to i32
  %4887 = icmp eq i32 %4886, 0
  %4888 = inttoptr i64 %4882 to %struct.CF2_StackNumber_*
  %4889 = inttoptr i64 %4883 to %struct.CF2_StackNumber_*
  br i1 %4887, label %4123, label %4890

4890:                                             ; preds = %4880
  %4891 = icmp slt i32 %4881, 0
  br i1 %4891, label %4896, label %4892

4892:                                             ; preds = %4890
  %4893 = icmp ult i32 %4881, %4886
  br i1 %4893, label %4894, label %4909

4894:                                             ; preds = %4892
  %4895 = xor i32 %4881, -1
  br label %4896

4896:                                             ; preds = %4890, %4894
  %4897 = phi i32 [ %4895, %4894 ], [ -1, %4890 ]
  %4898 = add i32 %4897, %4886
  %4899 = icmp ult i32 %4898, %4886
  br i1 %4899, label %4909, label %4900

4900:                                             ; preds = %4896
  %4901 = load i32*, i32** %173, align 8
  %4902 = icmp eq i32* %4901, null
  br i1 %4902, label %4929, label %4903

4903:                                             ; preds = %4900
  %4904 = load i32, i32* %4901, align 4
  %4905 = icmp eq i32 %4904, 0
  br i1 %4905, label %4906, label %4929

4906:                                             ; preds = %4903
  store i32 130, i32* %4901, align 4
  %4907 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4908 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %4929

4909:                                             ; preds = %4892, %4896
  %4910 = phi i32 [ %4898, %4896 ], [ 0, %4892 ]
  %4911 = zext i32 %4910 to i64
  %4912 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4889, i64 %4911
  %4913 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4889, i64 %4911, i32 1
  %4914 = load i32, i32* %4913, align 4
  switch i32 %4914, label %4926 [
    i32 2, label %4915
    i32 1, label %4919
  ]

4915:                                             ; preds = %4909
  %4916 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4912, i64 0, i32 0, i32 0
  %4917 = load i32, i32* %4916, align 4
  %4918 = shl i32 %4917, 16
  br label %4929

4919:                                             ; preds = %4909
  %4920 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4912, i64 0, i32 0, i32 0
  %4921 = load i32, i32* %4920, align 4
  %4922 = add nsw i32 %4921, 8192
  %4923 = ashr i32 %4921, 31
  %4924 = add nsw i32 %4922, %4923
  %4925 = ashr i32 %4924, 14
  br label %4929

4926:                                             ; preds = %4909
  %4927 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4912, i64 0, i32 0, i32 0
  %4928 = load i32, i32* %4927, align 4
  br label %4929

4929:                                             ; preds = %4900, %4903, %4906, %4915, %4919, %4926
  %4930 = phi %struct.CF2_StackNumber_* [ %4889, %4926 ], [ %4889, %4919 ], [ %4889, %4915 ], [ %4889, %4900 ], [ %4889, %4903 ], [ %4908, %4906 ]
  %4931 = phi %struct.CF2_StackNumber_* [ %4888, %4926 ], [ %4888, %4919 ], [ %4888, %4915 ], [ %4888, %4900 ], [ %4888, %4903 ], [ %4907, %4906 ]
  %4932 = phi i32 [ %4928, %4926 ], [ %4925, %4919 ], [ %4918, %4915 ], [ 0, %4900 ], [ 0, %4903 ], [ 0, %4906 ]
  %4933 = load i32, i32* %185, align 8
  %4934 = zext i32 %4933 to i64
  %4935 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4930, i64 %4934
  %4936 = icmp eq %struct.CF2_StackNumber_* %4931, %4935
  br i1 %4936, label %4937, label %4944

4937:                                             ; preds = %4929
  %4938 = load i32*, i32** %173, align 8
  %4939 = icmp eq i32* %4938, null
  br i1 %4939, label %4123, label %4940

4940:                                             ; preds = %4937
  %4941 = load i32, i32* %4938, align 4
  %4942 = icmp eq i32 %4941, 0
  br i1 %4942, label %4943, label %4123

4943:                                             ; preds = %4940
  store i32 130, i32* %4938, align 4
  br label %4123

4944:                                             ; preds = %4929
  %4945 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4931, i64 0, i32 0, i32 0
  store i32 %4932, i32* %4945, align 4
  %4946 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4947 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4946, i64 0, i32 1
  store i32 0, i32* %4947, align 4
  %4948 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4949 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4948, i64 1
  store %struct.CF2_StackNumber_* %4949, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

4950:                                             ; preds = %1400
  %4951 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4952 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4953 = icmp eq %struct.CF2_StackNumber_* %4951, %4952
  br i1 %4953, label %4954, label %4961

4954:                                             ; preds = %4950
  %4955 = load i32*, i32** %173, align 8
  %4956 = icmp eq i32* %4955, null
  br i1 %4956, label %4976, label %4957

4957:                                             ; preds = %4954
  %4958 = load i32, i32* %4955, align 4
  %4959 = icmp eq i32 %4958, 0
  br i1 %4959, label %4960, label %4976

4960:                                             ; preds = %4957
  store i32 161, i32* %4955, align 4
  br label %4976

4961:                                             ; preds = %4950
  %4962 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4951, i64 -1, i32 1
  %4963 = load i32, i32* %4962, align 4
  %4964 = icmp eq i32 %4963, 2
  br i1 %4964, label %4972, label %4965

4965:                                             ; preds = %4961
  %4966 = load i32*, i32** %173, align 8
  %4967 = icmp eq i32* %4966, null
  br i1 %4967, label %4976, label %4968

4968:                                             ; preds = %4965
  %4969 = load i32, i32* %4966, align 4
  %4970 = icmp eq i32 %4969, 0
  br i1 %4970, label %4971, label %4976

4971:                                             ; preds = %4968
  store i32 160, i32* %4966, align 4
  br label %4976

4972:                                             ; preds = %4961
  %4973 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4951, i64 -1
  store %struct.CF2_StackNumber_* %4973, %struct.CF2_StackNumber_** %209, align 8
  %4974 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4973, i64 0, i32 0, i32 0
  %4975 = load i32, i32* %4974, align 4
  br label %4976

4976:                                             ; preds = %4954, %4957, %4960, %4965, %4968, %4971, %4972
  %4977 = phi i32 [ %4975, %4972 ], [ 0, %4954 ], [ 0, %4957 ], [ 0, %4960 ], [ 0, %4965 ], [ 0, %4968 ], [ 0, %4971 ]
  %4978 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %4979 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %4980 = icmp eq %struct.CF2_StackNumber_* %4978, %4979
  %4981 = ptrtoint %struct.CF2_StackNumber_* %4979 to i64
  br i1 %4980, label %4982, label %4989

4982:                                             ; preds = %4976
  %4983 = load i32*, i32** %173, align 8
  %4984 = icmp eq i32* %4983, null
  br i1 %4984, label %4123, label %4985

4985:                                             ; preds = %4982
  %4986 = load i32, i32* %4983, align 4
  %4987 = icmp eq i32 %4986, 0
  br i1 %4987, label %4988, label %4123

4988:                                             ; preds = %4985
  store i32 161, i32* %4983, align 4
  br label %4123

4989:                                             ; preds = %4976
  %4990 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4978, i64 -1, i32 1
  %4991 = load i32, i32* %4990, align 4
  %4992 = icmp eq i32 %4991, 2
  br i1 %4992, label %5000, label %4993

4993:                                             ; preds = %4989
  %4994 = load i32*, i32** %173, align 8
  %4995 = icmp eq i32* %4994, null
  br i1 %4995, label %4123, label %4996

4996:                                             ; preds = %4993
  %4997 = load i32, i32* %4994, align 4
  %4998 = icmp eq i32 %4997, 0
  br i1 %4998, label %4999, label %4123

4999:                                             ; preds = %4996
  store i32 160, i32* %4994, align 4
  br label %4123

5000:                                             ; preds = %4989
  %5001 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %4978, i64 -1
  store %struct.CF2_StackNumber_* %5001, %struct.CF2_StackNumber_** %209, align 8
  %5002 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5001, i64 0, i32 0, i32 0
  %5003 = load i32, i32* %5002, align 4
  %5004 = icmp slt i32 %5003, 2
  br i1 %5004, label %4123, label %5005

5005:                                             ; preds = %5000
  %5006 = ptrtoint %struct.CF2_StackNumber_* %5001 to i64
  %5007 = sub i64 %5006, %4981
  %5008 = lshr exact i64 %5007, 3
  %5009 = trunc i64 %5008 to i32
  %5010 = icmp ugt i32 %5003, %5009
  br i1 %5010, label %5011, label %5018

5011:                                             ; preds = %5005
  %5012 = load i32*, i32** %173, align 8
  %5013 = icmp eq i32* %5012, null
  br i1 %5013, label %4123, label %5014

5014:                                             ; preds = %5011
  %5015 = load i32, i32* %5012, align 4
  %5016 = icmp eq i32 %5015, 0
  br i1 %5016, label %5017, label %4123

5017:                                             ; preds = %5014
  store i32 130, i32* %5012, align 4
  br label %4123

5018:                                             ; preds = %5005
  %5019 = srem i32 %4977, %5003
  %5020 = icmp eq i32 %5019, 0
  br i1 %5020, label %4123, label %5021

5021:                                             ; preds = %5018, %5049
  %5022 = phi i32 [ %5057, %5049 ], [ 0, %5018 ]
  %5023 = phi i32 [ %5050, %5049 ], [ -1, %5018 ]
  %5024 = phi i32 [ %5039, %5049 ], [ -1, %5018 ]
  %5025 = phi i32 [ %5054, %5049 ], [ 0, %5018 ]
  %5026 = phi i32 [ %5056, %5049 ], [ 2, %5018 ]
  %5027 = icmp eq i32 %5024, %5023
  br i1 %5027, label %5028, label %5036

5028:                                             ; preds = %5021
  %5029 = add nsw i32 %5023, 1
  %5030 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %5031 = sext i32 %5029 to i64
  %5032 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5030, i64 %5031, i32 0, i32 0
  %5033 = load i32, i32* %5032, align 4
  %5034 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5030, i64 %5031, i32 1
  %5035 = load i32, i32* %5034, align 4
  br label %5036

5036:                                             ; preds = %5028, %5021
  %5037 = phi i32 [ %5035, %5028 ], [ %5026, %5021 ]
  %5038 = phi i32 [ %5033, %5028 ], [ %5025, %5021 ]
  %5039 = phi i32 [ %5029, %5028 ], [ %5024, %5021 ]
  %5040 = phi i32 [ %5029, %5028 ], [ %5023, %5021 ]
  %5041 = add nsw i32 %5040, %5019
  %5042 = icmp slt i32 %5041, %5003
  br i1 %5042, label %5045, label %5043

5043:                                             ; preds = %5036
  %5044 = sub nsw i32 %5041, %5003
  br label %5049

5045:                                             ; preds = %5036
  %5046 = icmp slt i32 %5041, 0
  %5047 = select i1 %5046, i32 %5003, i32 0
  %5048 = add nsw i32 %5047, %5041
  br label %5049

5049:                                             ; preds = %5045, %5043
  %5050 = phi i32 [ %5044, %5043 ], [ %5048, %5045 ]
  %5051 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %5052 = sext i32 %5050 to i64
  %5053 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5051, i64 %5052, i32 0, i32 0
  %5054 = load i32, i32* %5053, align 4
  %5055 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5051, i64 %5052, i32 1
  %5056 = load i32, i32* %5055, align 4
  store i32 %5038, i32* %5053, align 4
  store i32 %5037, i32* %5055, align 4
  %5057 = add nuw nsw i32 %5022, 1
  %5058 = icmp eq i32 %5057, %5003
  br i1 %5058, label %4123, label %5021

5059:                                             ; preds = %1400
  %5060 = icmp ne i8 %272, 0
  %5061 = and i1 %5060, %1394
  br i1 %5061, label %5062, label %7429

5062:                                             ; preds = %5059
  %5063 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5064 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %5065 = icmp eq %struct.CF2_StackNumber_* %5063, %5064
  br i1 %5065, label %5066, label %5075

5066:                                             ; preds = %5062
  %5067 = load i32*, i32** %173, align 8
  %5068 = icmp eq i32* %5067, null
  br i1 %5068, label %5093, label %5069

5069:                                             ; preds = %5066
  %5070 = load i32, i32* %5067, align 4
  %5071 = icmp eq i32 %5070, 0
  br i1 %5071, label %5072, label %5093

5072:                                             ; preds = %5069
  store i32 161, i32* %5067, align 4
  %5073 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5074 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %5094

5075:                                             ; preds = %5062
  %5076 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5063, i64 -1
  store %struct.CF2_StackNumber_* %5076, %struct.CF2_StackNumber_** %209, align 8
  %5077 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5063, i64 -1, i32 1
  %5078 = load i32, i32* %5077, align 4
  switch i32 %5078, label %5090 [
    i32 2, label %5079
    i32 1, label %5083
  ]

5079:                                             ; preds = %5075
  %5080 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5076, i64 0, i32 0, i32 0
  %5081 = load i32, i32* %5080, align 4
  %5082 = shl i32 %5081, 16
  br label %5094

5083:                                             ; preds = %5075
  %5084 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5076, i64 0, i32 0, i32 0
  %5085 = load i32, i32* %5084, align 4
  %5086 = add nsw i32 %5085, 8192
  %5087 = ashr i32 %5085, 31
  %5088 = add nsw i32 %5086, %5087
  %5089 = ashr i32 %5088, 14
  br label %5094

5090:                                             ; preds = %5075
  %5091 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5076, i64 0, i32 0, i32 0
  %5092 = load i32, i32* %5091, align 4
  br label %5094

5093:                                             ; preds = %5066, %5069
  store i32 0, i32* %20, align 4
  br label %5099

5094:                                             ; preds = %5072, %5079, %5083, %5090
  %5095 = phi %struct.CF2_StackNumber_* [ %5064, %5090 ], [ %5064, %5083 ], [ %5064, %5079 ], [ %5074, %5072 ]
  %5096 = phi %struct.CF2_StackNumber_* [ %5076, %5090 ], [ %5076, %5083 ], [ %5076, %5079 ], [ %5073, %5072 ]
  %5097 = phi i32 [ %5092, %5090 ], [ %5089, %5083 ], [ %5082, %5079 ], [ 0, %5072 ]
  store i32 %5097, i32* %20, align 4
  %5098 = icmp eq %struct.CF2_StackNumber_* %5096, %5095
  br i1 %5098, label %5099, label %5106

5099:                                             ; preds = %5093, %5094
  %5100 = load i32*, i32** %173, align 8
  %5101 = icmp eq i32* %5100, null
  br i1 %5101, label %5124, label %5102

5102:                                             ; preds = %5099
  %5103 = load i32, i32* %5100, align 4
  %5104 = icmp eq i32 %5103, 0
  br i1 %5104, label %5105, label %5124

5105:                                             ; preds = %5102
  store i32 161, i32* %5100, align 4
  br label %5124

5106:                                             ; preds = %5094
  %5107 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5096, i64 -1
  store %struct.CF2_StackNumber_* %5107, %struct.CF2_StackNumber_** %209, align 8
  %5108 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5096, i64 -1, i32 1
  %5109 = load i32, i32* %5108, align 4
  switch i32 %5109, label %5121 [
    i32 2, label %5110
    i32 1, label %5114
  ]

5110:                                             ; preds = %5106
  %5111 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5107, i64 0, i32 0, i32 0
  %5112 = load i32, i32* %5111, align 4
  %5113 = shl i32 %5112, 16
  br label %5124

5114:                                             ; preds = %5106
  %5115 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5107, i64 0, i32 0, i32 0
  %5116 = load i32, i32* %5115, align 4
  %5117 = add nsw i32 %5116, 8192
  %5118 = ashr i32 %5116, 31
  %5119 = add nsw i32 %5117, %5118
  %5120 = ashr i32 %5119, 14
  br label %5124

5121:                                             ; preds = %5106
  %5122 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5107, i64 0, i32 0, i32 0
  %5123 = load i32, i32* %5122, align 4
  br label %5124

5124:                                             ; preds = %5099, %5102, %5105, %5110, %5114, %5121
  %5125 = phi i32 [ %5123, %5121 ], [ %5120, %5114 ], [ %5113, %5110 ], [ 0, %5099 ], [ 0, %5102 ], [ 0, %5105 ]
  store i32 %5125, i32* %19, align 4
  store i32 0, i32* %212, align 8
  br label %7429

5126:                                             ; preds = %330
  br i1 %294, label %7429, label %5127

5127:                                             ; preds = %5126
  %5128 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5129 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %5130 = icmp eq %struct.CF2_StackNumber_* %5128, %5129
  br i1 %5130, label %5131, label %5138

5131:                                             ; preds = %5127
  %5132 = load i32*, i32** %173, align 8
  %5133 = icmp eq i32* %5132, null
  br i1 %5133, label %5156, label %5134

5134:                                             ; preds = %5131
  %5135 = load i32, i32* %5132, align 4
  %5136 = icmp eq i32 %5135, 0
  br i1 %5136, label %5137, label %5156

5137:                                             ; preds = %5134
  store i32 161, i32* %5132, align 4
  br label %5156

5138:                                             ; preds = %5127
  %5139 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5128, i64 -1
  store %struct.CF2_StackNumber_* %5139, %struct.CF2_StackNumber_** %209, align 8
  %5140 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5128, i64 -1, i32 1
  %5141 = load i32, i32* %5140, align 4
  switch i32 %5141, label %5153 [
    i32 2, label %5142
    i32 1, label %5146
  ]

5142:                                             ; preds = %5138
  %5143 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5139, i64 0, i32 0, i32 0
  %5144 = load i32, i32* %5143, align 4
  %5145 = shl i32 %5144, 16
  br label %5156

5146:                                             ; preds = %5138
  %5147 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5139, i64 0, i32 0, i32 0
  %5148 = load i32, i32* %5147, align 4
  %5149 = add nsw i32 %5148, 8192
  %5150 = ashr i32 %5148, 31
  %5151 = add nsw i32 %5149, %5150
  %5152 = ashr i32 %5151, 14
  br label %5156

5153:                                             ; preds = %5138
  %5154 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5139, i64 0, i32 0, i32 0
  %5155 = load i32, i32* %5154, align 4
  br label %5156

5156:                                             ; preds = %5131, %5134, %5137, %5142, %5146, %5153
  %5157 = phi i32 [ %5155, %5153 ], [ %5152, %5146 ], [ %5145, %5142 ], [ 0, %5131 ], [ 0, %5134 ], [ 0, %5137 ]
  %5158 = sext i32 %5157 to i64
  %5159 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %5160 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5159, i64 0, i32 0
  store i64 %5158, i64* %5160, align 8
  %5161 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %5162 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5161, i64 0, i32 1
  store i64 0, i64* %5162, align 8
  %5163 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5164 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %5165 = icmp eq %struct.CF2_StackNumber_* %5163, %5164
  br i1 %5165, label %5166, label %5173

5166:                                             ; preds = %5156
  %5167 = load i32*, i32** %173, align 8
  %5168 = icmp eq i32* %5167, null
  br i1 %5168, label %5191, label %5169

5169:                                             ; preds = %5166
  %5170 = load i32, i32* %5167, align 4
  %5171 = icmp eq i32 %5170, 0
  br i1 %5171, label %5172, label %5191

5172:                                             ; preds = %5169
  store i32 161, i32* %5167, align 4
  br label %5191

5173:                                             ; preds = %5156
  %5174 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5163, i64 -1
  store %struct.CF2_StackNumber_* %5174, %struct.CF2_StackNumber_** %209, align 8
  %5175 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5163, i64 -1, i32 1
  %5176 = load i32, i32* %5175, align 4
  switch i32 %5176, label %5188 [
    i32 2, label %5177
    i32 1, label %5181
  ]

5177:                                             ; preds = %5173
  %5178 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5174, i64 0, i32 0, i32 0
  %5179 = load i32, i32* %5178, align 4
  %5180 = shl i32 %5179, 16
  br label %5191

5181:                                             ; preds = %5173
  %5182 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5174, i64 0, i32 0, i32 0
  %5183 = load i32, i32* %5182, align 4
  %5184 = add nsw i32 %5183, 8192
  %5185 = ashr i32 %5183, 31
  %5186 = add nsw i32 %5184, %5185
  %5187 = ashr i32 %5186, 14
  br label %5191

5188:                                             ; preds = %5173
  %5189 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5174, i64 0, i32 0, i32 0
  %5190 = load i32, i32* %5189, align 4
  br label %5191

5191:                                             ; preds = %5166, %5169, %5172, %5177, %5181, %5188
  %5192 = phi i32 [ %5190, %5188 ], [ %5187, %5181 ], [ %5180, %5177 ], [ 0, %5166 ], [ 0, %5169 ], [ 0, %5172 ]
  %5193 = load %struct.FT_Vector_*, %struct.FT_Vector_** %240, align 8
  %5194 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5193, i64 0, i32 0
  %5195 = load i64, i64* %5194, align 8
  %5196 = trunc i64 %5195 to i32
  %5197 = add i32 %5192, %5196
  %5198 = sext i32 %5197 to i64
  store i64 %5198, i64* %5194, align 8
  store i8 1, i8* %24, align 1
  %5199 = load i8, i8* %241, align 1
  %5200 = icmp eq i8 %5199, 0
  br i1 %5200, label %5201, label %7435

5201:                                             ; preds = %5191
  %5202 = icmp eq i8 %272, 0
  br i1 %5202, label %7429, label %5203

5203:                                             ; preds = %5201
  %5204 = load i32, i32* %19, align 4
  %5205 = add i32 %5204, %5192
  store i32 %5205, i32* %19, align 4
  br label %7429

5206:                                             ; preds = %330
  %5207 = icmp ne i8 %272, 0
  %5208 = or i1 %5207, %294
  br i1 %5208, label %5287, label %5209

5209:                                             ; preds = %5206
  %5210 = load i32, i32* %19, align 4
  %5211 = load i32, i32* %20, align 4
  %5212 = load i8, i8* %144, align 8
  %5213 = icmp eq i8 %5212, 0
  br i1 %5213, label %5225, label %5214

5214:                                             ; preds = %5209
  store i8 1, i8* %145, align 1
  %5215 = load i64, i64* %213, align 8
  %5216 = trunc i64 %5215 to i32
  %5217 = load i64, i64* %214, align 8
  %5218 = trunc i64 %5217 to i32
  call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %5216, i32 %5218) #11
  %5219 = load i8, i8* %146, align 8
  %5220 = icmp eq i8 %5219, 0
  br i1 %5220, label %5224, label %5221

5221:                                             ; preds = %5214
  %5222 = load i64, i64* %216, align 8
  %5223 = load i64, i64* %217, align 8
  call fastcc void @cf2_glyphpath_pushPrevElem(%struct.CF2_GlyphPathRec_* nonnull %28, %struct.CF2_HintMapRec_* %74, %struct.FT_Vector_* %215, i64 %5222, i64 %5223, i8 zeroext 1) #11
  br label %5224

5224:                                             ; preds = %5221, %5214
  store i8 1, i8* %143, align 1
  store i8 0, i8* %144, align 8
  store i8 0, i8* %145, align 1
  store i8 0, i8* %146, align 8
  br label %5225

5225:                                             ; preds = %5209, %5224
  %5226 = sext i32 %5210 to i64
  store i64 %5226, i64* %213, align 8
  store i64 %5226, i64* %218, align 8
  %5227 = sext i32 %5211 to i64
  store i64 %5227, i64* %214, align 8
  store i64 %5227, i64* %219, align 8
  store i8 1, i8* %143, align 1
  %5228 = load i8, i8* %220, align 8
  %5229 = icmp eq i8 %5228, 0
  %5230 = load %struct.CF2_HintMaskRec_*, %struct.CF2_HintMaskRec_** %120, align 8
  br i1 %5229, label %5235, label %5231

5231:                                             ; preds = %5225
  %5232 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %5230, i64 0, i32 2
  %5233 = load i8, i8* %5232, align 1
  %5234 = icmp eq i8 %5233, 0
  br i1 %5234, label %5239, label %5235

5235:                                             ; preds = %5231, %5225
  %5236 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %118, align 8
  %5237 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %119, align 8
  %5238 = load i32, i32* %121, align 8
  call fastcc void @cf2_hintmap_build(%struct.CF2_HintMapRec_* %74, %struct.CF2_ArrStackRec_* %5236, %struct.CF2_ArrStackRec_* %5237, %struct.CF2_HintMaskRec_* %5230, i32 %5238, i8 zeroext 0) #11
  br label %5239

5239:                                             ; preds = %5231, %5235
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %75, i64 6184, i1 false) #11
  store i64 0, i64* %231, align 8
  store i64 0, i64* %230, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 40, i1 false) #11
  store i32* %37, i32** %72, align 8
  store i8 0, i8* %71, align 8
  store i8 1, i8* %238, align 1
  %5240 = icmp sgt i32 %268, 0
  br i1 %5240, label %5241, label %5279

5241:                                             ; preds = %5239
  %5242 = and i32 %268, 1
  %5243 = icmp eq i32 %5242, 0
  br i1 %5243, label %5254, label %5244

5244:                                             ; preds = %5241
  %5245 = add nsw i32 %268, -1
  %5246 = zext i32 %5245 to i64
  %5247 = icmp ugt i64 %201, %5246
  %5248 = or i1 %5247, %235
  %5249 = select i1 %5247, i64 %5246, i64 0
  br i1 %5248, label %5254, label %5250

5250:                                             ; preds = %5244
  %5251 = load i32, i32* %37, align 4
  %5252 = icmp eq i32 %5251, 0
  br i1 %5252, label %5253, label %5254

5253:                                             ; preds = %5250
  store i32 130, i32* %37, align 4
  br label %5254

5254:                                             ; preds = %5241, %5253, %5250, %5244
  %5255 = phi i32 [ %268, %5241 ], [ %5245, %5253 ], [ %5245, %5250 ], [ %5245, %5244 ]
  %5256 = phi i64 [ undef, %5241 ], [ %5249, %5244 ], [ 0, %5250 ], [ 0, %5253 ]
  %5257 = icmp eq i32 %268, 1
  br i1 %5257, label %5274, label %5258

5258:                                             ; preds = %5254, %7472
  %5259 = phi i32 [ %5269, %7472 ], [ %5255, %5254 ]
  %5260 = add nsw i32 %5259, -1
  %5261 = zext i32 %5260 to i64
  %5262 = icmp ugt i64 %201, %5261
  %5263 = or i1 %5262, %235
  br i1 %5263, label %5268, label %5264

5264:                                             ; preds = %5258
  %5265 = load i32, i32* %37, align 4
  %5266 = icmp eq i32 %5265, 0
  br i1 %5266, label %5267, label %5268

5267:                                             ; preds = %5264
  store i32 130, i32* %37, align 4
  br label %5268

5268:                                             ; preds = %5258, %5264, %5267
  %5269 = add nsw i32 %5259, -2
  %5270 = zext i32 %5269 to i64
  %5271 = icmp ugt i64 %201, %5270
  %5272 = or i1 %5271, %235
  %5273 = select i1 %5271, i64 %5270, i64 0
  br i1 %5272, label %7472, label %7468

5274:                                             ; preds = %7472, %5254
  %5275 = phi i64 [ %5256, %5254 ], [ %7473, %7472 ]
  %5276 = shl nuw nsw i64 %5275, 5
  %5277 = getelementptr inbounds i8, i8* %191, i64 %5276
  %5278 = bitcast i8* %5277 to %struct.CF2_BufferRec_*
  br label %5279

5279:                                             ; preds = %5274, %5239
  %5280 = phi i32 [ 0, %5274 ], [ %268, %5239 ]
  %5281 = phi %struct.CF2_BufferRec_* [ %5278, %5274 ], [ %269, %5239 ]
  %5282 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %5281, i64 0, i32 1
  %5283 = bitcast i8** %5282 to i64*
  %5284 = load i64, i64* %5283, align 8
  %5285 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %5281, i64 0, i32 3
  %5286 = bitcast i8** %5285 to i64*
  store i64 %5284, i64* %5286, align 8
  br label %7429

5287:                                             ; preds = %5206
  %5288 = load i64, i64* %187, align 8
  %5289 = load i64, i64* %208, align 8
  %5290 = sub i64 %5288, %5289
  %5291 = lshr exact i64 %5290, 3
  %5292 = trunc i64 %5291 to i32
  switch i32 %5292, label %5317 [
    i32 1, label %5293
    i32 5, label %5293
  ]

5293:                                             ; preds = %5287, %5287
  %5294 = load i8, i8* %24, align 1
  %5295 = icmp eq i8 %5294, 0
  br i1 %5295, label %5296, label %5317

5296:                                             ; preds = %5293
  %5297 = inttoptr i64 %5289 to %struct.CF2_StackNumber_*
  %5298 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5297, i64 0, i32 1
  %5299 = load i32, i32* %5298, align 4
  switch i32 %5299, label %5311 [
    i32 2, label %5300
    i32 1, label %5304
  ]

5300:                                             ; preds = %5296
  %5301 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5297, i64 0, i32 0, i32 0
  %5302 = load i32, i32* %5301, align 4
  %5303 = shl i32 %5302, 16
  br label %5314

5304:                                             ; preds = %5296
  %5305 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5297, i64 0, i32 0, i32 0
  %5306 = load i32, i32* %5305, align 4
  %5307 = add nsw i32 %5306, 8192
  %5308 = ashr i32 %5306, 31
  %5309 = add nsw i32 %5307, %5308
  %5310 = ashr i32 %5309, 14
  br label %5314

5311:                                             ; preds = %5296
  %5312 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5297, i64 0, i32 0, i32 0
  %5313 = load i32, i32* %5312, align 4
  br label %5314

5314:                                             ; preds = %5300, %5304, %5311
  %5315 = phi i32 [ %5313, %5311 ], [ %5310, %5304 ], [ %5303, %5300 ]
  %5316 = add i32 %5315, %47
  store i32 %5316, i32* %7, align 4
  br label %5317

5317:                                             ; preds = %5287, %5293, %5314
  store i8 1, i8* %24, align 1
  %5318 = load i8, i8* %211, align 8
  %5319 = icmp eq i8 %5318, 0
  br i1 %5319, label %5320, label %7435

5320:                                             ; preds = %5317
  %5321 = load i8, i8* %144, align 8
  %5322 = icmp eq i8 %5321, 0
  br i1 %5322, label %5334, label %5323

5323:                                             ; preds = %5320
  store i8 1, i8* %145, align 1
  %5324 = load i64, i64* %213, align 8
  %5325 = trunc i64 %5324 to i32
  %5326 = load i64, i64* %214, align 8
  %5327 = trunc i64 %5326 to i32
  call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %5325, i32 %5327) #11
  %5328 = load i8, i8* %146, align 8
  %5329 = icmp eq i8 %5328, 0
  br i1 %5329, label %5333, label %5330

5330:                                             ; preds = %5323
  %5331 = load i64, i64* %216, align 8
  %5332 = load i64, i64* %217, align 8
  call fastcc void @cf2_glyphpath_pushPrevElem(%struct.CF2_GlyphPathRec_* nonnull %28, %struct.CF2_HintMapRec_* %74, %struct.FT_Vector_* %215, i64 %5331, i64 %5332, i8 zeroext 1) #11
  br label %5333

5333:                                             ; preds = %5330, %5323
  store i8 1, i8* %143, align 1
  store i8 0, i8* %144, align 8
  store i8 0, i8* %145, align 1
  store i8 0, i8* %146, align 8
  br label %5334

5334:                                             ; preds = %5320, %5333
  %5335 = load i8, i8* %147, align 1
  %5336 = icmp eq i8 %5335, 0
  br i1 %5336, label %5337, label %7435

5337:                                             ; preds = %5334
  %5338 = load i8, i8* %207, align 4
  %5339 = icmp eq i8 %5338, 0
  br i1 %5339, label %5340, label %7435

5340:                                             ; preds = %5337
  %5341 = load i64, i64* %187, align 8
  %5342 = load i64, i64* %208, align 8
  %5343 = sub i64 %5341, %5342
  %5344 = lshr exact i64 %5343, 3
  %5345 = trunc i64 %5344 to i32
  %5346 = icmp ugt i32 %5345, 1
  br i1 %5346, label %5347, label %7435

5347:                                             ; preds = %5340
  %5348 = bitcast %struct.CF2_BufferRec_* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5348) #11
  %5349 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %31, i64 0, i32 1
  %5350 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %31, i64 0, i32 2
  %5351 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %31, i64 0, i32 3
  %5352 = bitcast i32* %32 to i8*
  %5353 = bitcast %struct.CF2_BufferRec_* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5353, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5352) #11
  store i32 -1431655766, i32* %32, align 4
  %5354 = icmp eq i8 %4, 0
  br i1 %5354, label %5355, label %5610

5355:                                             ; preds = %5347
  %5356 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5357 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %5358 = icmp eq %struct.CF2_StackNumber_* %5356, %5357
  br i1 %5358, label %5359, label %5366

5359:                                             ; preds = %5355
  %5360 = load i32*, i32** %173, align 8
  %5361 = icmp eq i32* %5360, null
  br i1 %5361, label %5381, label %5362

5362:                                             ; preds = %5359
  %5363 = load i32, i32* %5360, align 4
  %5364 = icmp eq i32 %5363, 0
  br i1 %5364, label %5365, label %5381

5365:                                             ; preds = %5362
  store i32 161, i32* %5360, align 4
  br label %5381

5366:                                             ; preds = %5355
  %5367 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5356, i64 -1, i32 1
  %5368 = load i32, i32* %5367, align 4
  %5369 = icmp eq i32 %5368, 2
  br i1 %5369, label %5377, label %5370

5370:                                             ; preds = %5366
  %5371 = load i32*, i32** %173, align 8
  %5372 = icmp eq i32* %5371, null
  br i1 %5372, label %5381, label %5373

5373:                                             ; preds = %5370
  %5374 = load i32, i32* %5371, align 4
  %5375 = icmp eq i32 %5374, 0
  br i1 %5375, label %5376, label %5381

5376:                                             ; preds = %5373
  store i32 160, i32* %5371, align 4
  br label %5381

5377:                                             ; preds = %5366
  %5378 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5356, i64 -1
  store %struct.CF2_StackNumber_* %5378, %struct.CF2_StackNumber_** %209, align 8
  %5379 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5378, i64 0, i32 0, i32 0
  %5380 = load i32, i32* %5379, align 4
  br label %5381

5381:                                             ; preds = %5359, %5362, %5365, %5370, %5373, %5376, %5377
  %5382 = phi i32 [ %5380, %5377 ], [ 0, %5359 ], [ 0, %5362 ], [ 0, %5365 ], [ 0, %5370 ], [ 0, %5373 ], [ 0, %5376 ]
  %5383 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5384 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %5385 = icmp eq %struct.CF2_StackNumber_* %5383, %5384
  br i1 %5385, label %5386, label %5393

5386:                                             ; preds = %5381
  %5387 = load i32*, i32** %173, align 8
  %5388 = icmp eq i32* %5387, null
  br i1 %5388, label %5408, label %5389

5389:                                             ; preds = %5386
  %5390 = load i32, i32* %5387, align 4
  %5391 = icmp eq i32 %5390, 0
  br i1 %5391, label %5392, label %5408

5392:                                             ; preds = %5389
  store i32 161, i32* %5387, align 4
  br label %5408

5393:                                             ; preds = %5381
  %5394 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5383, i64 -1, i32 1
  %5395 = load i32, i32* %5394, align 4
  %5396 = icmp eq i32 %5395, 2
  br i1 %5396, label %5404, label %5397

5397:                                             ; preds = %5393
  %5398 = load i32*, i32** %173, align 8
  %5399 = icmp eq i32* %5398, null
  br i1 %5399, label %5408, label %5400

5400:                                             ; preds = %5397
  %5401 = load i32, i32* %5398, align 4
  %5402 = icmp eq i32 %5401, 0
  br i1 %5402, label %5403, label %5408

5403:                                             ; preds = %5400
  store i32 160, i32* %5398, align 4
  br label %5408

5404:                                             ; preds = %5393
  %5405 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5383, i64 -1
  store %struct.CF2_StackNumber_* %5405, %struct.CF2_StackNumber_** %209, align 8
  %5406 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5405, i64 0, i32 0, i32 0
  %5407 = load i32, i32* %5406, align 4
  br label %5408

5408:                                             ; preds = %5386, %5389, %5392, %5397, %5400, %5403, %5404
  %5409 = phi i32 [ %5407, %5404 ], [ 0, %5386 ], [ 0, %5389 ], [ 0, %5392 ], [ 0, %5397 ], [ 0, %5400 ], [ 0, %5403 ]
  %5410 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5411 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %5412 = icmp eq %struct.CF2_StackNumber_* %5410, %5411
  br i1 %5412, label %5413, label %5422

5413:                                             ; preds = %5408
  %5414 = load i32*, i32** %173, align 8
  %5415 = icmp eq i32* %5414, null
  br i1 %5415, label %5440, label %5416

5416:                                             ; preds = %5413
  %5417 = load i32, i32* %5414, align 4
  %5418 = icmp eq i32 %5417, 0
  br i1 %5418, label %5419, label %5440

5419:                                             ; preds = %5416
  store i32 161, i32* %5414, align 4
  %5420 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5421 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %5441

5422:                                             ; preds = %5408
  %5423 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5410, i64 -1
  store %struct.CF2_StackNumber_* %5423, %struct.CF2_StackNumber_** %209, align 8
  %5424 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5410, i64 -1, i32 1
  %5425 = load i32, i32* %5424, align 4
  switch i32 %5425, label %5437 [
    i32 2, label %5426
    i32 1, label %5430
  ]

5426:                                             ; preds = %5422
  %5427 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5423, i64 0, i32 0, i32 0
  %5428 = load i32, i32* %5427, align 4
  %5429 = shl i32 %5428, 16
  br label %5441

5430:                                             ; preds = %5422
  %5431 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5423, i64 0, i32 0, i32 0
  %5432 = load i32, i32* %5431, align 4
  %5433 = add nsw i32 %5432, 8192
  %5434 = ashr i32 %5432, 31
  %5435 = add nsw i32 %5433, %5434
  %5436 = ashr i32 %5435, 14
  br label %5441

5437:                                             ; preds = %5422
  %5438 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5423, i64 0, i32 0, i32 0
  %5439 = load i32, i32* %5438, align 4
  br label %5441

5440:                                             ; preds = %5413, %5416
  store i32 0, i32* %20, align 4
  br label %5446

5441:                                             ; preds = %5419, %5426, %5430, %5437
  %5442 = phi %struct.CF2_StackNumber_* [ %5411, %5437 ], [ %5411, %5430 ], [ %5411, %5426 ], [ %5421, %5419 ]
  %5443 = phi %struct.CF2_StackNumber_* [ %5423, %5437 ], [ %5423, %5430 ], [ %5423, %5426 ], [ %5420, %5419 ]
  %5444 = phi i32 [ %5439, %5437 ], [ %5436, %5430 ], [ %5429, %5426 ], [ 0, %5419 ]
  store i32 %5444, i32* %20, align 4
  %5445 = icmp eq %struct.CF2_StackNumber_* %5443, %5442
  br i1 %5445, label %5446, label %5453

5446:                                             ; preds = %5440, %5441
  %5447 = load i32*, i32** %173, align 8
  %5448 = icmp eq i32* %5447, null
  br i1 %5448, label %5471, label %5449

5449:                                             ; preds = %5446
  %5450 = load i32, i32* %5447, align 4
  %5451 = icmp eq i32 %5450, 0
  br i1 %5451, label %5452, label %5471

5452:                                             ; preds = %5449
  store i32 161, i32* %5447, align 4
  br label %5471

5453:                                             ; preds = %5441
  %5454 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5443, i64 -1
  store %struct.CF2_StackNumber_* %5454, %struct.CF2_StackNumber_** %209, align 8
  %5455 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5443, i64 -1, i32 1
  %5456 = load i32, i32* %5455, align 4
  switch i32 %5456, label %5468 [
    i32 2, label %5457
    i32 1, label %5461
  ]

5457:                                             ; preds = %5453
  %5458 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5454, i64 0, i32 0, i32 0
  %5459 = load i32, i32* %5458, align 4
  %5460 = shl i32 %5459, 16
  br label %5471

5461:                                             ; preds = %5453
  %5462 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5454, i64 0, i32 0, i32 0
  %5463 = load i32, i32* %5462, align 4
  %5464 = add nsw i32 %5463, 8192
  %5465 = ashr i32 %5463, 31
  %5466 = add nsw i32 %5464, %5465
  %5467 = ashr i32 %5466, 14
  br label %5471

5468:                                             ; preds = %5453
  %5469 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5454, i64 0, i32 0, i32 0
  %5470 = load i32, i32* %5469, align 4
  br label %5471

5471:                                             ; preds = %5446, %5449, %5452, %5457, %5461, %5468
  %5472 = phi i32 [ %5470, %5468 ], [ %5467, %5461 ], [ %5460, %5457 ], [ 0, %5446 ], [ 0, %5449 ], [ 0, %5452 ]
  store i32 %5472, i32* %19, align 4
  %5473 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5473) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %5474 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5474) #11
  store i64 -6148914691236517206, i64* %14, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5348, i8 0, i64 32, i1 false) #11
  %5475 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 0, i32 1
  %5476 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5475, align 8
  %5477 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5476, i64 0, i32 30
  %5478 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %5477, align 8
  %5479 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %5478, i64 0, i32 4
  %5480 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %5479, align 8
  %5481 = icmp eq %struct.FT_Incremental_InterfaceRec_* %5480, null
  br i1 %5481, label %5484, label %5482

5482:                                             ; preds = %5471
  %5483 = bitcast %struct.FT_FaceRec_* %5476 to %struct.TT_FaceRec_*
  br label %5518

5484:                                             ; preds = %5471
  %5485 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 8
  %5486 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %5485, align 8
  %5487 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5486, i64 0, i32 15, i32 2
  %5488 = load i16*, i16** %5487, align 8
  %5489 = icmp eq i16* %5488, null
  %5490 = icmp ugt i32 %5382, 255
  %5491 = or i1 %5490, %5489
  br i1 %5491, label %5525, label %5492

5492:                                             ; preds = %5484
  %5493 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5486, i64 0, i32 32
  %5494 = bitcast i8** %5493 to %struct.FT_Service_CFFLoadRec_**
  %5495 = load %struct.FT_Service_CFFLoadRec_*, %struct.FT_Service_CFFLoadRec_** %5494, align 8
  %5496 = getelementptr inbounds %struct.FT_Service_CFFLoadRec_, %struct.FT_Service_CFFLoadRec_* %5495, i64 0, i32 0
  %5497 = load i16 (i32)*, i16 (i32)** %5496, align 8
  %5498 = call zeroext i16 %5497(i32 %5382) #11
  %5499 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5486, i64 0, i32 5
  %5500 = load i32, i32* %5499, align 4
  %5501 = icmp eq i32 %5500, 0
  br i1 %5501, label %5525, label %5502

5502:                                             ; preds = %5492
  %5503 = load i16*, i16** %5487, align 8
  br label %5504

5504:                                             ; preds = %5510, %5502
  %5505 = phi i32 [ 0, %5502 ], [ %5511, %5510 ]
  %5506 = zext i32 %5505 to i64
  %5507 = getelementptr inbounds i16, i16* %5503, i64 %5506
  %5508 = load i16, i16* %5507, align 2
  %5509 = icmp eq i16 %5508, %5498
  br i1 %5509, label %5513, label %5510

5510:                                             ; preds = %5504
  %5511 = add i32 %5505, 1
  %5512 = icmp eq i32 %5511, %5500
  br i1 %5512, label %5525, label %5504

5513:                                             ; preds = %5504
  %5514 = icmp slt i32 %5505, 0
  br i1 %5514, label %5525, label %5515

5515:                                             ; preds = %5513
  %5516 = bitcast %struct.FT_FaceRec_** %5475 to %struct.TT_FaceRec_**
  %5517 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %5516, align 8
  br label %5518

5518:                                             ; preds = %5515, %5482
  %5519 = phi %struct.TT_FaceRec_* [ %5517, %5515 ], [ %5483, %5482 ]
  %5520 = phi i32 [ %5505, %5515 ], [ %5382, %5482 ]
  %5521 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 24
  %5522 = load i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)** %5521, align 8
  %5523 = call i32 %5522(%struct.TT_FaceRec_* %5519, i32 %5520, i8** nonnull %13, i64* nonnull %14) #11
  %5524 = icmp eq i32 %5523, 0
  br i1 %5524, label %5527, label %5525

5525:                                             ; preds = %5510, %5513, %5518, %5484, %5492
  %5526 = phi i32 [ 18, %5492 ], [ 18, %5484 ], [ %5523, %5518 ], [ 18, %5513 ], [ 18, %5510 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5474) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5473) #11
  br label %5610

5527:                                             ; preds = %5518
  %5528 = bitcast i8** %13 to i64*
  %5529 = load i64, i64* %5528, align 8
  %5530 = bitcast i8** %5349 to i64*
  store i64 %5529, i64* %5530, align 8
  %5531 = inttoptr i64 %5529 to i8*
  %5532 = icmp eq i64 %5529, 0
  %5533 = load i64, i64* %14, align 8
  %5534 = getelementptr inbounds i8, i8* %5531, i64 %5533
  %5535 = select i1 %5532, i8* null, i8* %5534
  store i8* %5535, i8** %5350, align 8
  %5536 = bitcast i8** %5351 to i64*
  store i64 %5529, i64* %5536, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5474) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5473) #11
  %5537 = load i32, i32* %19, align 4
  %5538 = load i32, i32* %20, align 4
  call fastcc void @cf2_interpT2CharString(%struct.CF2_FontRec_* %0, %struct.CF2_BufferRec_* nonnull %31, %struct.CF2_OutlineCallbacksRec_* %2, %struct.FT_Vector_* %3, i8 zeroext 1, i32 %5537, i32 %5538, i32* nonnull %32)
  %5539 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 25
  %5540 = load void (%struct.TT_FaceRec_*, i8**, i64)*, void (%struct.TT_FaceRec_*, i8**, i64)** %5539, align 8
  %5541 = bitcast %struct.FT_FaceRec_** %5475 to %struct.TT_FaceRec_**
  %5542 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %5541, align 8
  %5543 = bitcast i8** %5350 to i64*
  %5544 = ptrtoint i8* %5535 to i64
  %5545 = sub i64 %5544, %5529
  call void %5540(%struct.TT_FaceRec_* %5542, i8** %5349, i64 %5545) #11
  %5546 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5546) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %5547 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5547) #11
  store i64 -6148914691236517206, i64* %16, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5348, i8 0, i64 32, i1 false) #11
  %5548 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5475, align 8
  %5549 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5548, i64 0, i32 30
  %5550 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %5549, align 8
  %5551 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %5550, i64 0, i32 4
  %5552 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %5551, align 8
  %5553 = icmp eq %struct.FT_Incremental_InterfaceRec_* %5552, null
  br i1 %5553, label %5556, label %5554

5554:                                             ; preds = %5527
  %5555 = bitcast %struct.FT_FaceRec_* %5548 to %struct.TT_FaceRec_*
  br label %5589

5556:                                             ; preds = %5527
  %5557 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %36, i64 0, i32 8
  %5558 = load %struct.CFF_FontRec_*, %struct.CFF_FontRec_** %5557, align 8
  %5559 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5558, i64 0, i32 15, i32 2
  %5560 = load i16*, i16** %5559, align 8
  %5561 = icmp eq i16* %5560, null
  %5562 = icmp ugt i32 %5409, 255
  %5563 = or i1 %5562, %5561
  br i1 %5563, label %5595, label %5564

5564:                                             ; preds = %5556
  %5565 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5558, i64 0, i32 32
  %5566 = bitcast i8** %5565 to %struct.FT_Service_CFFLoadRec_**
  %5567 = load %struct.FT_Service_CFFLoadRec_*, %struct.FT_Service_CFFLoadRec_** %5566, align 8
  %5568 = getelementptr inbounds %struct.FT_Service_CFFLoadRec_, %struct.FT_Service_CFFLoadRec_* %5567, i64 0, i32 0
  %5569 = load i16 (i32)*, i16 (i32)** %5568, align 8
  %5570 = call zeroext i16 %5569(i32 %5409) #11
  %5571 = getelementptr inbounds %struct.CFF_FontRec_, %struct.CFF_FontRec_* %5558, i64 0, i32 5
  %5572 = load i32, i32* %5571, align 4
  %5573 = icmp eq i32 %5572, 0
  br i1 %5573, label %5595, label %5574

5574:                                             ; preds = %5564
  %5575 = load i16*, i16** %5559, align 8
  br label %5576

5576:                                             ; preds = %5582, %5574
  %5577 = phi i32 [ 0, %5574 ], [ %5583, %5582 ]
  %5578 = zext i32 %5577 to i64
  %5579 = getelementptr inbounds i16, i16* %5575, i64 %5578
  %5580 = load i16, i16* %5579, align 2
  %5581 = icmp eq i16 %5580, %5570
  br i1 %5581, label %5585, label %5582

5582:                                             ; preds = %5576
  %5583 = add i32 %5577, 1
  %5584 = icmp eq i32 %5583, %5572
  br i1 %5584, label %5595, label %5576

5585:                                             ; preds = %5576
  %5586 = icmp slt i32 %5577, 0
  br i1 %5586, label %5595, label %5587

5587:                                             ; preds = %5585
  %5588 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %5541, align 8
  br label %5589

5589:                                             ; preds = %5587, %5554
  %5590 = phi %struct.TT_FaceRec_* [ %5588, %5587 ], [ %5555, %5554 ]
  %5591 = phi i32 [ %5577, %5587 ], [ %5409, %5554 ]
  %5592 = load i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)** %5521, align 8
  %5593 = call i32 %5592(%struct.TT_FaceRec_* %5590, i32 %5591, i8** nonnull %15, i64* nonnull %16) #11
  %5594 = icmp eq i32 %5593, 0
  br i1 %5594, label %5597, label %5595

5595:                                             ; preds = %5582, %5585, %5589, %5556, %5564
  %5596 = phi i32 [ 18, %5564 ], [ 18, %5556 ], [ %5593, %5589 ], [ 18, %5585 ], [ 18, %5582 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5547) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5546) #11
  br label %5610

5597:                                             ; preds = %5589
  %5598 = bitcast i8** %15 to i64*
  %5599 = load i64, i64* %5598, align 8
  store i64 %5599, i64* %5530, align 8
  %5600 = inttoptr i64 %5599 to i8*
  %5601 = icmp eq i64 %5599, 0
  %5602 = load i64, i64* %16, align 8
  %5603 = getelementptr inbounds i8, i8* %5600, i64 %5602
  %5604 = select i1 %5601, i8* null, i8* %5603
  store i8* %5604, i8** %5350, align 8
  store i64 %5599, i64* %5536, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5547) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5546) #11
  call fastcc void @cf2_interpT2CharString(%struct.CF2_FontRec_* %0, %struct.CF2_BufferRec_* nonnull %31, %struct.CF2_OutlineCallbacksRec_* %2, %struct.FT_Vector_* %3, i8 zeroext 1, i32 0, i32 0, i32* nonnull %32)
  %5605 = load void (%struct.TT_FaceRec_*, i8**, i64)*, void (%struct.TT_FaceRec_*, i8**, i64)** %5539, align 8
  %5606 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %5541, align 8
  %5607 = load i64, i64* %5543, align 8
  %5608 = load i64, i64* %5530, align 8
  %5609 = sub i64 %5607, %5608
  call void %5605(%struct.TT_FaceRec_* %5606, i8** %5349, i64 %5609) #11
  br label %5610

5610:                                             ; preds = %5595, %5525, %5347, %5597
  %5611 = phi i32 [ 0, %5597 ], [ 18, %5347 ], [ %5526, %5525 ], [ %5596, %5595 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5352) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5348) #11
  br label %7435

5612:                                             ; preds = %330, %330
  %5613 = load i64, i64* %187, align 8
  %5614 = load i64, i64* %208, align 8
  %5615 = sub i64 %5613, %5614
  %5616 = lshr exact i64 %5615, 3
  %5617 = trunc i64 %5616 to i32
  %5618 = icmp ult i32 %5617, 2
  %5619 = load i8, i8* %71, align 8
  %5620 = icmp eq i8 %5619, 0
  %5621 = or i1 %5620, %5618
  br i1 %5621, label %5622, label %7429

5622:                                             ; preds = %5612
  call fastcc void @cf2_doStems(%struct.CF2_FontRec_* %0, %struct.CF2_StackRec_* nonnull %167, %struct.CF2_ArrStackRec_* nonnull %26, i32* %7, i8* nonnull %24, i32 0)
  %5623 = load i8, i8* %211, align 8
  %5624 = icmp eq i8 %5623, 0
  br i1 %5624, label %5625, label %7435

5625:                                             ; preds = %5622
  %5626 = icmp eq i8 %292, 19
  br i1 %5626, label %5627, label %5668

5627:                                             ; preds = %5625
  %5628 = load i64, i64* %230, align 8
  %5629 = load i64, i64* %231, align 8
  %5630 = add i64 %5629, %5628
  %5631 = icmp ugt i64 %5630, 96
  br i1 %5631, label %5632, label %5639

5632:                                             ; preds = %5627
  %5633 = load i32*, i32** %72, align 8
  %5634 = icmp eq i32* %5633, null
  br i1 %5634, label %7429, label %5635

5635:                                             ; preds = %5632
  %5636 = load i32, i32* %5633, align 4
  %5637 = icmp eq i32 %5636, 0
  br i1 %5637, label %5638, label %7429

5638:                                             ; preds = %5635
  store i32 18, i32* %5633, align 4
  br label %7429

5639:                                             ; preds = %5627
  store i64 %5630, i64* %236, align 8
  %5640 = add nuw nsw i64 %5630, 7
  %5641 = lshr i64 %5640, 3
  store i64 %5641, i64* %237, align 8
  store i8 1, i8* %71, align 8
  store i8 1, i8* %238, align 1
  %5642 = icmp eq i64 %5630, 0
  %5643 = icmp eq i64 %5641, 0
  %5644 = or i1 %5642, %5643
  br i1 %5644, label %7429, label %5645

5645:                                             ; preds = %5639
  %5646 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  br label %5647

5647:                                             ; preds = %5662, %5645
  %5648 = phi i64 [ 0, %5645 ], [ %5665, %5662 ]
  %5649 = load i8*, i8** %275, align 8
  %5650 = load i8*, i8** %277, align 8
  %5651 = icmp ult i8* %5649, %5650
  br i1 %5651, label %5652, label %5655

5652:                                             ; preds = %5647
  %5653 = getelementptr inbounds i8, i8* %5649, i64 1
  store i8* %5653, i8** %275, align 8
  %5654 = load i8, i8* %5649, align 1
  br label %5662

5655:                                             ; preds = %5647
  %5656 = load i32*, i32** %5646, align 8
  %5657 = icmp eq i32* %5656, null
  br i1 %5657, label %5662, label %5658

5658:                                             ; preds = %5655
  %5659 = load i32, i32* %5656, align 4
  %5660 = icmp eq i32 %5659, 0
  br i1 %5660, label %5661, label %5662

5661:                                             ; preds = %5658
  store i32 85, i32* %5656, align 4
  br label %5662

5662:                                             ; preds = %5661, %5658, %5655, %5652
  %5663 = phi i8 [ %5654, %5652 ], [ 0, %5655 ], [ 0, %5658 ], [ 0, %5661 ]
  %5664 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %27, i64 0, i32 5, i64 %5648
  store i8 %5663, i8* %5664, align 1
  %5665 = add nuw i64 %5648, 1
  %5666 = load i64, i64* %237, align 8
  %5667 = icmp ult i64 %5665, %5666
  br i1 %5667, label %5647, label %7429

5668:                                             ; preds = %5625
  call void @llvm.lifetime.start.p0i8(i64 6184, i8* nonnull %221) #11
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %222) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %266, i8 0, i64 6160, i1 false) #11
  %5669 = load i8, i8* %87, align 8
  store i8 %5669, i8* %223, align 1
  store i32 %41, i32* %224, align 4
  store %struct.CF2_FontRec_* %0, %struct.CF2_FontRec_** %225, align 8
  store %struct.CF2_HintMapRec_* %85, %struct.CF2_HintMapRec_** %226, align 8
  store %struct.CF2_ArrStackRec_* %78, %struct.CF2_ArrStackRec_** %227, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 40, i1 false) #11
  store i32* %37, i32** %229, align 8
  %5670 = load i64, i64* %230, align 8
  %5671 = load i64, i64* %231, align 8
  %5672 = add i64 %5671, %5670
  %5673 = icmp ugt i64 %5672, 96
  br i1 %5673, label %5674, label %5679

5674:                                             ; preds = %5668
  br i1 %235, label %5708, label %5675

5675:                                             ; preds = %5674
  %5676 = load i32, i32* %37, align 4
  %5677 = icmp eq i32 %5676, 0
  br i1 %5677, label %5678, label %5708

5678:                                             ; preds = %5675
  store i32 18, i32* %37, align 4
  br label %5708

5679:                                             ; preds = %5668
  store i64 %5672, i64* %232, align 8
  %5680 = add nuw nsw i64 %5672, 7
  %5681 = lshr i64 %5680, 3
  store i64 %5681, i64* %233, align 8
  store i8 1, i8* %228, align 8
  store i8 1, i8* %234, align 1
  %5682 = icmp eq i64 %5672, 0
  %5683 = icmp eq i64 %5681, 0
  %5684 = or i1 %5682, %5683
  br i1 %5684, label %5708, label %5685

5685:                                             ; preds = %5679
  %5686 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  br label %5687

5687:                                             ; preds = %5702, %5685
  %5688 = phi i64 [ 0, %5685 ], [ %5705, %5702 ]
  %5689 = load i8*, i8** %275, align 8
  %5690 = load i8*, i8** %277, align 8
  %5691 = icmp ult i8* %5689, %5690
  br i1 %5691, label %5692, label %5695

5692:                                             ; preds = %5687
  %5693 = getelementptr inbounds i8, i8* %5689, i64 1
  store i8* %5693, i8** %275, align 8
  %5694 = load i8, i8* %5689, align 1
  br label %5702

5695:                                             ; preds = %5687
  %5696 = load i32*, i32** %5686, align 8
  %5697 = icmp eq i32* %5696, null
  br i1 %5697, label %5702, label %5698

5698:                                             ; preds = %5695
  %5699 = load i32, i32* %5696, align 4
  %5700 = icmp eq i32 %5699, 0
  br i1 %5700, label %5701, label %5702

5701:                                             ; preds = %5698
  store i32 85, i32* %5696, align 4
  br label %5702

5702:                                             ; preds = %5701, %5698, %5695, %5692
  %5703 = phi i8 [ %5694, %5692 ], [ 0, %5695 ], [ 0, %5698 ], [ 0, %5701 ]
  %5704 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %34, i64 0, i32 5, i64 %5688
  store i8 %5703, i8* %5704, align 1
  %5705 = add nuw i64 %5688, 1
  %5706 = load i64, i64* %233, align 8
  %5707 = icmp ult i64 %5705, %5706
  br i1 %5707, label %5687, label %5708

5708:                                             ; preds = %5702, %5674, %5675, %5678, %5679
  call fastcc void @cf2_hintmap_build(%struct.CF2_HintMapRec_* nonnull %33, %struct.CF2_ArrStackRec_* nonnull %25, %struct.CF2_ArrStackRec_* nonnull %26, %struct.CF2_HintMaskRec_* nonnull %34, i32 0, i8 zeroext 0)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %222) #11
  call void @llvm.lifetime.end.p0i8(i64 6184, i8* nonnull %221) #11
  br label %7429

5709:                                             ; preds = %330
  %5710 = load i64, i64* %187, align 8
  %5711 = load i64, i64* %208, align 8
  %5712 = sub i64 %5710, %5711
  %5713 = lshr exact i64 %5712, 3
  %5714 = trunc i64 %5713 to i32
  %5715 = icmp ult i32 %5714, 3
  %5716 = load i8, i8* %24, align 1
  %5717 = icmp ne i8 %5716, 0
  %5718 = or i1 %5717, %5715
  br i1 %5718, label %5740, label %5719

5719:                                             ; preds = %5709
  %5720 = inttoptr i64 %5711 to %struct.CF2_StackNumber_*
  %5721 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5720, i64 0, i32 1
  %5722 = load i32, i32* %5721, align 4
  switch i32 %5722, label %5734 [
    i32 2, label %5723
    i32 1, label %5727
  ]

5723:                                             ; preds = %5719
  %5724 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5720, i64 0, i32 0, i32 0
  %5725 = load i32, i32* %5724, align 4
  %5726 = shl i32 %5725, 16
  br label %5737

5727:                                             ; preds = %5719
  %5728 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5720, i64 0, i32 0, i32 0
  %5729 = load i32, i32* %5728, align 4
  %5730 = add nsw i32 %5729, 8192
  %5731 = ashr i32 %5729, 31
  %5732 = add nsw i32 %5730, %5731
  %5733 = ashr i32 %5732, 14
  br label %5737

5734:                                             ; preds = %5719
  %5735 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5720, i64 0, i32 0, i32 0
  %5736 = load i32, i32* %5735, align 4
  br label %5737

5737:                                             ; preds = %5723, %5727, %5734
  %5738 = phi i32 [ %5736, %5734 ], [ %5733, %5727 ], [ %5726, %5723 ]
  %5739 = add i32 %5738, %47
  store i32 %5739, i32* %7, align 4
  br label %5740

5740:                                             ; preds = %5709, %5737
  store i8 1, i8* %24, align 1
  %5741 = load i8, i8* %211, align 8
  %5742 = icmp eq i8 %5741, 0
  br i1 %5742, label %5743, label %7435

5743:                                             ; preds = %5740
  %5744 = load i32, i32* %20, align 4
  %5745 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5746 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %5747 = icmp eq %struct.CF2_StackNumber_* %5745, %5746
  br i1 %5747, label %5748, label %5757

5748:                                             ; preds = %5743
  %5749 = load i32*, i32** %173, align 8
  %5750 = icmp eq i32* %5749, null
  br i1 %5750, label %5775, label %5751

5751:                                             ; preds = %5748
  %5752 = load i32, i32* %5749, align 4
  %5753 = icmp eq i32 %5752, 0
  br i1 %5753, label %5754, label %5775

5754:                                             ; preds = %5751
  store i32 161, i32* %5749, align 4
  %5755 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5756 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  br label %5777

5757:                                             ; preds = %5743
  %5758 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5745, i64 -1
  store %struct.CF2_StackNumber_* %5758, %struct.CF2_StackNumber_** %209, align 8
  %5759 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5745, i64 -1, i32 1
  %5760 = load i32, i32* %5759, align 4
  switch i32 %5760, label %5772 [
    i32 2, label %5761
    i32 1, label %5765
  ]

5761:                                             ; preds = %5757
  %5762 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5758, i64 0, i32 0, i32 0
  %5763 = load i32, i32* %5762, align 4
  %5764 = shl i32 %5763, 16
  br label %5777

5765:                                             ; preds = %5757
  %5766 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5758, i64 0, i32 0, i32 0
  %5767 = load i32, i32* %5766, align 4
  %5768 = add nsw i32 %5767, 8192
  %5769 = ashr i32 %5767, 31
  %5770 = add nsw i32 %5768, %5769
  %5771 = ashr i32 %5770, 14
  br label %5777

5772:                                             ; preds = %5757
  %5773 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5758, i64 0, i32 0, i32 0
  %5774 = load i32, i32* %5773, align 4
  br label %5777

5775:                                             ; preds = %5748, %5751
  %5776 = load i32, i32* %19, align 4
  br label %5784

5777:                                             ; preds = %5754, %5761, %5765, %5772
  %5778 = phi %struct.CF2_StackNumber_* [ %5746, %5772 ], [ %5746, %5765 ], [ %5746, %5761 ], [ %5756, %5754 ]
  %5779 = phi %struct.CF2_StackNumber_* [ %5758, %5772 ], [ %5758, %5765 ], [ %5758, %5761 ], [ %5755, %5754 ]
  %5780 = phi i32 [ %5774, %5772 ], [ %5771, %5765 ], [ %5764, %5761 ], [ 0, %5754 ]
  %5781 = add i32 %5780, %5744
  store i32 %5781, i32* %20, align 4
  %5782 = load i32, i32* %19, align 4
  %5783 = icmp eq %struct.CF2_StackNumber_* %5779, %5778
  br i1 %5783, label %5784, label %5792

5784:                                             ; preds = %5775, %5777
  %5785 = phi i32 [ %5776, %5775 ], [ %5782, %5777 ]
  %5786 = load i32*, i32** %173, align 8
  %5787 = icmp eq i32* %5786, null
  br i1 %5787, label %5810, label %5788

5788:                                             ; preds = %5784
  %5789 = load i32, i32* %5786, align 4
  %5790 = icmp eq i32 %5789, 0
  br i1 %5790, label %5791, label %5810

5791:                                             ; preds = %5788
  store i32 161, i32* %5786, align 4
  br label %5810

5792:                                             ; preds = %5777
  %5793 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5779, i64 -1
  store %struct.CF2_StackNumber_* %5793, %struct.CF2_StackNumber_** %209, align 8
  %5794 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5779, i64 -1, i32 1
  %5795 = load i32, i32* %5794, align 4
  switch i32 %5795, label %5807 [
    i32 2, label %5796
    i32 1, label %5800
  ]

5796:                                             ; preds = %5792
  %5797 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5793, i64 0, i32 0, i32 0
  %5798 = load i32, i32* %5797, align 4
  %5799 = shl i32 %5798, 16
  br label %5810

5800:                                             ; preds = %5792
  %5801 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5793, i64 0, i32 0, i32 0
  %5802 = load i32, i32* %5801, align 4
  %5803 = add nsw i32 %5802, 8192
  %5804 = ashr i32 %5802, 31
  %5805 = add nsw i32 %5803, %5804
  %5806 = ashr i32 %5805, 14
  br label %5810

5807:                                             ; preds = %5792
  %5808 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5793, i64 0, i32 0, i32 0
  %5809 = load i32, i32* %5808, align 4
  br label %5810

5810:                                             ; preds = %5784, %5788, %5791, %5796, %5800, %5807
  %5811 = phi i32 [ %5782, %5807 ], [ %5782, %5800 ], [ %5782, %5796 ], [ %5785, %5784 ], [ %5785, %5788 ], [ %5785, %5791 ]
  %5812 = phi i32 [ %5809, %5807 ], [ %5806, %5800 ], [ %5799, %5796 ], [ 0, %5784 ], [ 0, %5788 ], [ 0, %5791 ]
  %5813 = add i32 %5812, %5811
  store i32 %5813, i32* %19, align 4
  %5814 = load i32, i32* %212, align 8
  %5815 = icmp eq i32 %5814, 0
  br i1 %5815, label %5816, label %7429

5816:                                             ; preds = %5810
  %5817 = load i32, i32* %20, align 4
  %5818 = load i8, i8* %144, align 8
  %5819 = icmp eq i8 %5818, 0
  br i1 %5819, label %5831, label %5820

5820:                                             ; preds = %5816
  store i8 1, i8* %145, align 1
  %5821 = load i64, i64* %213, align 8
  %5822 = trunc i64 %5821 to i32
  %5823 = load i64, i64* %214, align 8
  %5824 = trunc i64 %5823 to i32
  call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %5822, i32 %5824) #11
  %5825 = load i8, i8* %146, align 8
  %5826 = icmp eq i8 %5825, 0
  br i1 %5826, label %5830, label %5827

5827:                                             ; preds = %5820
  %5828 = load i64, i64* %216, align 8
  %5829 = load i64, i64* %217, align 8
  call fastcc void @cf2_glyphpath_pushPrevElem(%struct.CF2_GlyphPathRec_* nonnull %28, %struct.CF2_HintMapRec_* %74, %struct.FT_Vector_* %215, i64 %5828, i64 %5829, i8 zeroext 1) #11
  br label %5830

5830:                                             ; preds = %5827, %5820
  store i8 1, i8* %143, align 1
  store i8 0, i8* %144, align 8
  store i8 0, i8* %145, align 1
  store i8 0, i8* %146, align 8
  br label %5831

5831:                                             ; preds = %5816, %5830
  %5832 = sext i32 %5813 to i64
  store i64 %5832, i64* %213, align 8
  store i64 %5832, i64* %218, align 8
  %5833 = sext i32 %5817 to i64
  store i64 %5833, i64* %214, align 8
  store i64 %5833, i64* %219, align 8
  store i8 1, i8* %143, align 1
  %5834 = load i8, i8* %220, align 8
  %5835 = icmp eq i8 %5834, 0
  %5836 = load %struct.CF2_HintMaskRec_*, %struct.CF2_HintMaskRec_** %120, align 8
  br i1 %5835, label %5841, label %5837

5837:                                             ; preds = %5831
  %5838 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %5836, i64 0, i32 2
  %5839 = load i8, i8* %5838, align 1
  %5840 = icmp eq i8 %5839, 0
  br i1 %5840, label %5845, label %5841

5841:                                             ; preds = %5837, %5831
  %5842 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %118, align 8
  %5843 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %119, align 8
  %5844 = load i32, i32* %121, align 8
  call fastcc void @cf2_hintmap_build(%struct.CF2_HintMapRec_* %74, %struct.CF2_ArrStackRec_* %5842, %struct.CF2_ArrStackRec_* %5843, %struct.CF2_HintMaskRec_* %5836, i32 %5844, i8 zeroext 0) #11
  br label %5845

5845:                                             ; preds = %5837, %5841
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %75, i64 6184, i1 false) #11
  br label %7429

5846:                                             ; preds = %330
  %5847 = load i64, i64* %187, align 8
  %5848 = load i64, i64* %208, align 8
  %5849 = sub i64 %5847, %5848
  %5850 = lshr exact i64 %5849, 3
  %5851 = trunc i64 %5850 to i32
  %5852 = icmp ult i32 %5851, 2
  %5853 = load i8, i8* %24, align 1
  %5854 = icmp ne i8 %5853, 0
  %5855 = or i1 %5854, %5852
  br i1 %5855, label %5877, label %5856

5856:                                             ; preds = %5846
  %5857 = inttoptr i64 %5848 to %struct.CF2_StackNumber_*
  %5858 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5857, i64 0, i32 1
  %5859 = load i32, i32* %5858, align 4
  switch i32 %5859, label %5871 [
    i32 2, label %5860
    i32 1, label %5864
  ]

5860:                                             ; preds = %5856
  %5861 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5857, i64 0, i32 0, i32 0
  %5862 = load i32, i32* %5861, align 4
  %5863 = shl i32 %5862, 16
  br label %5874

5864:                                             ; preds = %5856
  %5865 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5857, i64 0, i32 0, i32 0
  %5866 = load i32, i32* %5865, align 4
  %5867 = add nsw i32 %5866, 8192
  %5868 = ashr i32 %5866, 31
  %5869 = add nsw i32 %5867, %5868
  %5870 = ashr i32 %5869, 14
  br label %5874

5871:                                             ; preds = %5856
  %5872 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5857, i64 0, i32 0, i32 0
  %5873 = load i32, i32* %5872, align 4
  br label %5874

5874:                                             ; preds = %5860, %5864, %5871
  %5875 = phi i32 [ %5873, %5871 ], [ %5870, %5864 ], [ %5863, %5860 ]
  %5876 = add i32 %5875, %47
  store i32 %5876, i32* %7, align 4
  br label %5877

5877:                                             ; preds = %5846, %5874
  store i8 1, i8* %24, align 1
  %5878 = load i8, i8* %211, align 8
  %5879 = icmp eq i8 %5878, 0
  br i1 %5879, label %5880, label %7435

5880:                                             ; preds = %5877
  %5881 = load i32, i32* %19, align 4
  %5882 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %5883 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %5884 = icmp eq %struct.CF2_StackNumber_* %5882, %5883
  br i1 %5884, label %5885, label %5892

5885:                                             ; preds = %5880
  %5886 = load i32*, i32** %173, align 8
  %5887 = icmp eq i32* %5886, null
  br i1 %5887, label %5910, label %5888

5888:                                             ; preds = %5885
  %5889 = load i32, i32* %5886, align 4
  %5890 = icmp eq i32 %5889, 0
  br i1 %5890, label %5891, label %5910

5891:                                             ; preds = %5888
  store i32 161, i32* %5886, align 4
  br label %5910

5892:                                             ; preds = %5880
  %5893 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5882, i64 -1
  store %struct.CF2_StackNumber_* %5893, %struct.CF2_StackNumber_** %209, align 8
  %5894 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5882, i64 -1, i32 1
  %5895 = load i32, i32* %5894, align 4
  switch i32 %5895, label %5907 [
    i32 2, label %5896
    i32 1, label %5900
  ]

5896:                                             ; preds = %5892
  %5897 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5893, i64 0, i32 0, i32 0
  %5898 = load i32, i32* %5897, align 4
  %5899 = shl i32 %5898, 16
  br label %5910

5900:                                             ; preds = %5892
  %5901 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5893, i64 0, i32 0, i32 0
  %5902 = load i32, i32* %5901, align 4
  %5903 = add nsw i32 %5902, 8192
  %5904 = ashr i32 %5902, 31
  %5905 = add nsw i32 %5903, %5904
  %5906 = ashr i32 %5905, 14
  br label %5910

5907:                                             ; preds = %5892
  %5908 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5893, i64 0, i32 0, i32 0
  %5909 = load i32, i32* %5908, align 4
  br label %5910

5910:                                             ; preds = %5885, %5888, %5891, %5896, %5900, %5907
  %5911 = phi i32 [ %5909, %5907 ], [ %5906, %5900 ], [ %5899, %5896 ], [ 0, %5885 ], [ 0, %5888 ], [ 0, %5891 ]
  %5912 = add i32 %5911, %5881
  store i32 %5912, i32* %19, align 4
  %5913 = load i32, i32* %212, align 8
  %5914 = icmp eq i32 %5913, 0
  br i1 %5914, label %5915, label %7429

5915:                                             ; preds = %5910
  %5916 = load i32, i32* %20, align 4
  %5917 = load i8, i8* %144, align 8
  %5918 = icmp eq i8 %5917, 0
  br i1 %5918, label %5930, label %5919

5919:                                             ; preds = %5915
  store i8 1, i8* %145, align 1
  %5920 = load i64, i64* %213, align 8
  %5921 = trunc i64 %5920 to i32
  %5922 = load i64, i64* %214, align 8
  %5923 = trunc i64 %5922 to i32
  call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %5921, i32 %5923) #11
  %5924 = load i8, i8* %146, align 8
  %5925 = icmp eq i8 %5924, 0
  br i1 %5925, label %5929, label %5926

5926:                                             ; preds = %5919
  %5927 = load i64, i64* %216, align 8
  %5928 = load i64, i64* %217, align 8
  call fastcc void @cf2_glyphpath_pushPrevElem(%struct.CF2_GlyphPathRec_* nonnull %28, %struct.CF2_HintMapRec_* %74, %struct.FT_Vector_* %215, i64 %5927, i64 %5928, i8 zeroext 1) #11
  br label %5929

5929:                                             ; preds = %5926, %5919
  store i8 1, i8* %143, align 1
  store i8 0, i8* %144, align 8
  store i8 0, i8* %145, align 1
  store i8 0, i8* %146, align 8
  br label %5930

5930:                                             ; preds = %5915, %5929
  %5931 = sext i32 %5912 to i64
  store i64 %5931, i64* %213, align 8
  store i64 %5931, i64* %218, align 8
  %5932 = sext i32 %5916 to i64
  store i64 %5932, i64* %214, align 8
  store i64 %5932, i64* %219, align 8
  store i8 1, i8* %143, align 1
  %5933 = load i8, i8* %220, align 8
  %5934 = icmp eq i8 %5933, 0
  %5935 = load %struct.CF2_HintMaskRec_*, %struct.CF2_HintMaskRec_** %120, align 8
  br i1 %5934, label %5940, label %5936

5936:                                             ; preds = %5930
  %5937 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %5935, i64 0, i32 2
  %5938 = load i8, i8* %5937, align 1
  %5939 = icmp eq i8 %5938, 0
  br i1 %5939, label %5944, label %5940

5940:                                             ; preds = %5936, %5930
  %5941 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %118, align 8
  %5942 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %119, align 8
  %5943 = load i32, i32* %121, align 8
  call fastcc void @cf2_hintmap_build(%struct.CF2_HintMapRec_* %74, %struct.CF2_ArrStackRec_* %5941, %struct.CF2_ArrStackRec_* %5942, %struct.CF2_HintMaskRec_* %5935, i32 %5943, i8 zeroext 0) #11
  br label %5944

5944:                                             ; preds = %5936, %5940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %75, i64 6184, i1 false) #11
  br label %7429

5945:                                             ; preds = %330
  %5946 = load i64, i64* %187, align 8
  %5947 = load i64, i64* %208, align 8
  %5948 = sub i64 %5946, %5947
  %5949 = lshr exact i64 %5948, 3
  %5950 = trunc i64 %5949 to i32
  %5951 = icmp ugt i32 %5950, 6
  br i1 %5951, label %5955, label %5952

5952:                                             ; preds = %6032, %5945
  %5953 = phi i32 [ 0, %5945 ], [ %6036, %6032 ]
  %5954 = icmp ult i32 %5953, %5950
  br i1 %5954, label %6042, label %6279

5955:                                             ; preds = %5945, %6039
  %5956 = phi i64 [ %6041, %6039 ], [ %5947, %5945 ]
  %5957 = phi i64 [ %6040, %6039 ], [ %5946, %5945 ]
  %5958 = phi i32 [ %6036, %6039 ], [ 0, %5945 ]
  %5959 = load i32, i32* %19, align 4
  %5960 = sub i64 %5957, %5956
  %5961 = lshr exact i64 %5960, 3
  %5962 = trunc i64 %5961 to i32
  %5963 = icmp ult i32 %5958, %5962
  %5964 = inttoptr i64 %5956 to %struct.CF2_StackNumber_*
  br i1 %5963, label %5978, label %5965

5965:                                             ; preds = %5955
  %5966 = load i32*, i32** %173, align 8
  %5967 = icmp eq i32* %5966, null
  br i1 %5967, label %5997, label %5968

5968:                                             ; preds = %5965
  %5969 = load i32, i32* %5966, align 4
  %5970 = icmp eq i32 %5969, 0
  br i1 %5970, label %5971, label %5997

5971:                                             ; preds = %5968
  store i32 130, i32* %5966, align 4
  %5972 = load i64, i64* %187, align 8
  %5973 = load i64, i64* %208, align 8
  %5974 = sub i64 %5972, %5973
  %5975 = lshr exact i64 %5974, 3
  %5976 = trunc i64 %5975 to i32
  %5977 = inttoptr i64 %5973 to %struct.CF2_StackNumber_*
  br label %5997

5978:                                             ; preds = %5955
  %5979 = zext i32 %5958 to i64
  %5980 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5964, i64 %5979
  %5981 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5964, i64 %5979, i32 1
  %5982 = load i32, i32* %5981, align 4
  switch i32 %5982, label %5994 [
    i32 2, label %5983
    i32 1, label %5987
  ]

5983:                                             ; preds = %5978
  %5984 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5980, i64 0, i32 0, i32 0
  %5985 = load i32, i32* %5984, align 4
  %5986 = shl i32 %5985, 16
  br label %5997

5987:                                             ; preds = %5978
  %5988 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5980, i64 0, i32 0, i32 0
  %5989 = load i32, i32* %5988, align 4
  %5990 = add nsw i32 %5989, 8192
  %5991 = ashr i32 %5989, 31
  %5992 = add nsw i32 %5990, %5991
  %5993 = ashr i32 %5992, 14
  br label %5997

5994:                                             ; preds = %5978
  %5995 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5980, i64 0, i32 0, i32 0
  %5996 = load i32, i32* %5995, align 4
  br label %5997

5997:                                             ; preds = %5965, %5968, %5971, %5983, %5987, %5994
  %5998 = phi %struct.CF2_StackNumber_* [ %5964, %5965 ], [ %5964, %5968 ], [ %5977, %5971 ], [ %5964, %5983 ], [ %5964, %5987 ], [ %5964, %5994 ]
  %5999 = phi i32 [ %5962, %5965 ], [ %5962, %5968 ], [ %5976, %5971 ], [ %5962, %5983 ], [ %5962, %5987 ], [ %5962, %5994 ]
  %6000 = phi i32 [ 0, %5965 ], [ 0, %5968 ], [ 0, %5971 ], [ %5986, %5983 ], [ %5993, %5987 ], [ %5996, %5994 ]
  %6001 = add i32 %6000, %5959
  store i32 %6001, i32* %19, align 4
  %6002 = load i32, i32* %20, align 4
  %6003 = or i32 %5958, 1
  %6004 = icmp ult i32 %6003, %5999
  br i1 %6004, label %6013, label %6005

6005:                                             ; preds = %5997
  %6006 = load i32*, i32** %173, align 8
  %6007 = icmp eq i32* %6006, null
  br i1 %6007, label %6032, label %6008

6008:                                             ; preds = %6005
  %6009 = load i32, i32* %6006, align 4
  %6010 = icmp eq i32 %6009, 0
  br i1 %6010, label %6011, label %6032

6011:                                             ; preds = %6008
  store i32 130, i32* %6006, align 4
  %6012 = load i32, i32* %19, align 4
  br label %6032

6013:                                             ; preds = %5997
  %6014 = zext i32 %6003 to i64
  %6015 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5998, i64 %6014
  %6016 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %5998, i64 %6014, i32 1
  %6017 = load i32, i32* %6016, align 4
  switch i32 %6017, label %6029 [
    i32 2, label %6018
    i32 1, label %6022
  ]

6018:                                             ; preds = %6013
  %6019 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6015, i64 0, i32 0, i32 0
  %6020 = load i32, i32* %6019, align 4
  %6021 = shl i32 %6020, 16
  br label %6032

6022:                                             ; preds = %6013
  %6023 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6015, i64 0, i32 0, i32 0
  %6024 = load i32, i32* %6023, align 4
  %6025 = add nsw i32 %6024, 8192
  %6026 = ashr i32 %6024, 31
  %6027 = add nsw i32 %6025, %6026
  %6028 = ashr i32 %6027, 14
  br label %6032

6029:                                             ; preds = %6013
  %6030 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6015, i64 0, i32 0, i32 0
  %6031 = load i32, i32* %6030, align 4
  br label %6032

6032:                                             ; preds = %6005, %6008, %6011, %6018, %6022, %6029
  %6033 = phi i32 [ %6001, %6029 ], [ %6001, %6022 ], [ %6001, %6018 ], [ %6001, %6005 ], [ %6001, %6008 ], [ %6012, %6011 ]
  %6034 = phi i32 [ %6031, %6029 ], [ %6028, %6022 ], [ %6021, %6018 ], [ 0, %6005 ], [ 0, %6008 ], [ 0, %6011 ]
  %6035 = add i32 %6034, %6002
  store i32 %6035, i32* %20, align 4
  call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %6033, i32 %6035)
  %6036 = add i32 %5958, 2
  %6037 = add i32 %5958, 8
  %6038 = icmp ult i32 %6037, %5950
  br i1 %6038, label %6039, label %5952

6039:                                             ; preds = %6032
  %6040 = load i64, i64* %187, align 8
  %6041 = load i64, i64* %208, align 8
  br label %5955

6042:                                             ; preds = %5952, %6274
  %6043 = phi i32 [ %6277, %6274 ], [ %5953, %5952 ]
  %6044 = load i64, i64* %187, align 8
  %6045 = load i64, i64* %208, align 8
  %6046 = sub i64 %6044, %6045
  %6047 = lshr exact i64 %6046, 3
  %6048 = trunc i64 %6047 to i32
  %6049 = icmp ult i32 %6043, %6048
  %6050 = inttoptr i64 %6045 to %struct.CF2_StackNumber_*
  br i1 %6049, label %6064, label %6051

6051:                                             ; preds = %6042
  %6052 = load i32*, i32** %173, align 8
  %6053 = icmp eq i32* %6052, null
  br i1 %6053, label %6083, label %6054

6054:                                             ; preds = %6051
  %6055 = load i32, i32* %6052, align 4
  %6056 = icmp eq i32 %6055, 0
  br i1 %6056, label %6057, label %6083

6057:                                             ; preds = %6054
  store i32 130, i32* %6052, align 4
  %6058 = load i64, i64* %187, align 8
  %6059 = load i64, i64* %208, align 8
  %6060 = sub i64 %6058, %6059
  %6061 = lshr exact i64 %6060, 3
  %6062 = trunc i64 %6061 to i32
  %6063 = inttoptr i64 %6059 to %struct.CF2_StackNumber_*
  br label %6083

6064:                                             ; preds = %6042
  %6065 = zext i32 %6043 to i64
  %6066 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6050, i64 %6065
  %6067 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6050, i64 %6065, i32 1
  %6068 = load i32, i32* %6067, align 4
  switch i32 %6068, label %6080 [
    i32 2, label %6069
    i32 1, label %6073
  ]

6069:                                             ; preds = %6064
  %6070 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6066, i64 0, i32 0, i32 0
  %6071 = load i32, i32* %6070, align 4
  %6072 = shl i32 %6071, 16
  br label %6083

6073:                                             ; preds = %6064
  %6074 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6066, i64 0, i32 0, i32 0
  %6075 = load i32, i32* %6074, align 4
  %6076 = add nsw i32 %6075, 8192
  %6077 = ashr i32 %6075, 31
  %6078 = add nsw i32 %6076, %6077
  %6079 = ashr i32 %6078, 14
  br label %6083

6080:                                             ; preds = %6064
  %6081 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6066, i64 0, i32 0, i32 0
  %6082 = load i32, i32* %6081, align 4
  br label %6083

6083:                                             ; preds = %6051, %6054, %6057, %6069, %6073, %6080
  %6084 = phi %struct.CF2_StackNumber_* [ %6050, %6051 ], [ %6050, %6054 ], [ %6063, %6057 ], [ %6050, %6069 ], [ %6050, %6073 ], [ %6050, %6080 ]
  %6085 = phi i32 [ %6048, %6051 ], [ %6048, %6054 ], [ %6062, %6057 ], [ %6048, %6069 ], [ %6048, %6073 ], [ %6048, %6080 ]
  %6086 = phi i32 [ 0, %6051 ], [ 0, %6054 ], [ 0, %6057 ], [ %6072, %6069 ], [ %6079, %6073 ], [ %6082, %6080 ]
  %6087 = load i32, i32* %19, align 4
  %6088 = add i32 %6087, %6086
  %6089 = or i32 %6043, 1
  %6090 = icmp ult i32 %6089, %6085
  br i1 %6090, label %6104, label %6091

6091:                                             ; preds = %6083
  %6092 = load i32*, i32** %173, align 8
  %6093 = icmp eq i32* %6092, null
  br i1 %6093, label %6123, label %6094

6094:                                             ; preds = %6091
  %6095 = load i32, i32* %6092, align 4
  %6096 = icmp eq i32 %6095, 0
  br i1 %6096, label %6097, label %6123

6097:                                             ; preds = %6094
  store i32 130, i32* %6092, align 4
  %6098 = load i64, i64* %187, align 8
  %6099 = load i64, i64* %208, align 8
  %6100 = sub i64 %6098, %6099
  %6101 = lshr exact i64 %6100, 3
  %6102 = trunc i64 %6101 to i32
  %6103 = inttoptr i64 %6099 to %struct.CF2_StackNumber_*
  br label %6123

6104:                                             ; preds = %6083
  %6105 = zext i32 %6089 to i64
  %6106 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6084, i64 %6105
  %6107 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6084, i64 %6105, i32 1
  %6108 = load i32, i32* %6107, align 4
  switch i32 %6108, label %6120 [
    i32 2, label %6109
    i32 1, label %6113
  ]

6109:                                             ; preds = %6104
  %6110 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6106, i64 0, i32 0, i32 0
  %6111 = load i32, i32* %6110, align 4
  %6112 = shl i32 %6111, 16
  br label %6123

6113:                                             ; preds = %6104
  %6114 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6106, i64 0, i32 0, i32 0
  %6115 = load i32, i32* %6114, align 4
  %6116 = add nsw i32 %6115, 8192
  %6117 = ashr i32 %6115, 31
  %6118 = add nsw i32 %6116, %6117
  %6119 = ashr i32 %6118, 14
  br label %6123

6120:                                             ; preds = %6104
  %6121 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6106, i64 0, i32 0, i32 0
  %6122 = load i32, i32* %6121, align 4
  br label %6123

6123:                                             ; preds = %6091, %6094, %6097, %6109, %6113, %6120
  %6124 = phi %struct.CF2_StackNumber_* [ %6084, %6091 ], [ %6084, %6094 ], [ %6103, %6097 ], [ %6084, %6109 ], [ %6084, %6113 ], [ %6084, %6120 ]
  %6125 = phi i32 [ %6085, %6091 ], [ %6085, %6094 ], [ %6102, %6097 ], [ %6085, %6109 ], [ %6085, %6113 ], [ %6085, %6120 ]
  %6126 = phi i32 [ 0, %6091 ], [ 0, %6094 ], [ 0, %6097 ], [ %6112, %6109 ], [ %6119, %6113 ], [ %6122, %6120 ]
  %6127 = load i32, i32* %20, align 4
  %6128 = add i32 %6127, %6126
  %6129 = add i32 %6043, 2
  %6130 = icmp ult i32 %6129, %6125
  br i1 %6130, label %6144, label %6131

6131:                                             ; preds = %6123
  %6132 = load i32*, i32** %173, align 8
  %6133 = icmp eq i32* %6132, null
  br i1 %6133, label %6163, label %6134

6134:                                             ; preds = %6131
  %6135 = load i32, i32* %6132, align 4
  %6136 = icmp eq i32 %6135, 0
  br i1 %6136, label %6137, label %6163

6137:                                             ; preds = %6134
  store i32 130, i32* %6132, align 4
  %6138 = load i64, i64* %187, align 8
  %6139 = load i64, i64* %208, align 8
  %6140 = sub i64 %6138, %6139
  %6141 = lshr exact i64 %6140, 3
  %6142 = trunc i64 %6141 to i32
  %6143 = inttoptr i64 %6139 to %struct.CF2_StackNumber_*
  br label %6163

6144:                                             ; preds = %6123
  %6145 = zext i32 %6129 to i64
  %6146 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6124, i64 %6145
  %6147 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6124, i64 %6145, i32 1
  %6148 = load i32, i32* %6147, align 4
  switch i32 %6148, label %6160 [
    i32 2, label %6149
    i32 1, label %6153
  ]

6149:                                             ; preds = %6144
  %6150 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6146, i64 0, i32 0, i32 0
  %6151 = load i32, i32* %6150, align 4
  %6152 = shl i32 %6151, 16
  br label %6163

6153:                                             ; preds = %6144
  %6154 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6146, i64 0, i32 0, i32 0
  %6155 = load i32, i32* %6154, align 4
  %6156 = add nsw i32 %6155, 8192
  %6157 = ashr i32 %6155, 31
  %6158 = add nsw i32 %6156, %6157
  %6159 = ashr i32 %6158, 14
  br label %6163

6160:                                             ; preds = %6144
  %6161 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6146, i64 0, i32 0, i32 0
  %6162 = load i32, i32* %6161, align 4
  br label %6163

6163:                                             ; preds = %6131, %6134, %6137, %6149, %6153, %6160
  %6164 = phi %struct.CF2_StackNumber_* [ %6124, %6131 ], [ %6124, %6134 ], [ %6143, %6137 ], [ %6124, %6149 ], [ %6124, %6153 ], [ %6124, %6160 ]
  %6165 = phi i32 [ %6125, %6131 ], [ %6125, %6134 ], [ %6142, %6137 ], [ %6125, %6149 ], [ %6125, %6153 ], [ %6125, %6160 ]
  %6166 = phi i32 [ 0, %6131 ], [ 0, %6134 ], [ 0, %6137 ], [ %6152, %6149 ], [ %6159, %6153 ], [ %6162, %6160 ]
  %6167 = add i32 %6166, %6088
  %6168 = add i32 %6043, 3
  %6169 = icmp ult i32 %6168, %6165
  br i1 %6169, label %6183, label %6170

6170:                                             ; preds = %6163
  %6171 = load i32*, i32** %173, align 8
  %6172 = icmp eq i32* %6171, null
  br i1 %6172, label %6202, label %6173

6173:                                             ; preds = %6170
  %6174 = load i32, i32* %6171, align 4
  %6175 = icmp eq i32 %6174, 0
  br i1 %6175, label %6176, label %6202

6176:                                             ; preds = %6173
  store i32 130, i32* %6171, align 4
  %6177 = load i64, i64* %187, align 8
  %6178 = load i64, i64* %208, align 8
  %6179 = sub i64 %6177, %6178
  %6180 = lshr exact i64 %6179, 3
  %6181 = trunc i64 %6180 to i32
  %6182 = inttoptr i64 %6178 to %struct.CF2_StackNumber_*
  br label %6202

6183:                                             ; preds = %6163
  %6184 = zext i32 %6168 to i64
  %6185 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6164, i64 %6184
  %6186 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6164, i64 %6184, i32 1
  %6187 = load i32, i32* %6186, align 4
  switch i32 %6187, label %6199 [
    i32 2, label %6188
    i32 1, label %6192
  ]

6188:                                             ; preds = %6183
  %6189 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6185, i64 0, i32 0, i32 0
  %6190 = load i32, i32* %6189, align 4
  %6191 = shl i32 %6190, 16
  br label %6202

6192:                                             ; preds = %6183
  %6193 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6185, i64 0, i32 0, i32 0
  %6194 = load i32, i32* %6193, align 4
  %6195 = add nsw i32 %6194, 8192
  %6196 = ashr i32 %6194, 31
  %6197 = add nsw i32 %6195, %6196
  %6198 = ashr i32 %6197, 14
  br label %6202

6199:                                             ; preds = %6183
  %6200 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6185, i64 0, i32 0, i32 0
  %6201 = load i32, i32* %6200, align 4
  br label %6202

6202:                                             ; preds = %6170, %6173, %6176, %6188, %6192, %6199
  %6203 = phi %struct.CF2_StackNumber_* [ %6164, %6170 ], [ %6164, %6173 ], [ %6182, %6176 ], [ %6164, %6188 ], [ %6164, %6192 ], [ %6164, %6199 ]
  %6204 = phi i32 [ %6165, %6170 ], [ %6165, %6173 ], [ %6181, %6176 ], [ %6165, %6188 ], [ %6165, %6192 ], [ %6165, %6199 ]
  %6205 = phi i32 [ 0, %6170 ], [ 0, %6173 ], [ 0, %6176 ], [ %6191, %6188 ], [ %6198, %6192 ], [ %6201, %6199 ]
  %6206 = add i32 %6205, %6128
  %6207 = add i32 %6043, 4
  %6208 = icmp ult i32 %6207, %6204
  br i1 %6208, label %6222, label %6209

6209:                                             ; preds = %6202
  %6210 = load i32*, i32** %173, align 8
  %6211 = icmp eq i32* %6210, null
  br i1 %6211, label %6241, label %6212

6212:                                             ; preds = %6209
  %6213 = load i32, i32* %6210, align 4
  %6214 = icmp eq i32 %6213, 0
  br i1 %6214, label %6215, label %6241

6215:                                             ; preds = %6212
  store i32 130, i32* %6210, align 4
  %6216 = load i64, i64* %187, align 8
  %6217 = load i64, i64* %208, align 8
  %6218 = sub i64 %6216, %6217
  %6219 = lshr exact i64 %6218, 3
  %6220 = trunc i64 %6219 to i32
  %6221 = inttoptr i64 %6217 to %struct.CF2_StackNumber_*
  br label %6241

6222:                                             ; preds = %6202
  %6223 = zext i32 %6207 to i64
  %6224 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6203, i64 %6223
  %6225 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6203, i64 %6223, i32 1
  %6226 = load i32, i32* %6225, align 4
  switch i32 %6226, label %6238 [
    i32 2, label %6227
    i32 1, label %6231
  ]

6227:                                             ; preds = %6222
  %6228 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6224, i64 0, i32 0, i32 0
  %6229 = load i32, i32* %6228, align 4
  %6230 = shl i32 %6229, 16
  br label %6241

6231:                                             ; preds = %6222
  %6232 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6224, i64 0, i32 0, i32 0
  %6233 = load i32, i32* %6232, align 4
  %6234 = add nsw i32 %6233, 8192
  %6235 = ashr i32 %6233, 31
  %6236 = add nsw i32 %6234, %6235
  %6237 = ashr i32 %6236, 14
  br label %6241

6238:                                             ; preds = %6222
  %6239 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6224, i64 0, i32 0, i32 0
  %6240 = load i32, i32* %6239, align 4
  br label %6241

6241:                                             ; preds = %6209, %6212, %6215, %6227, %6231, %6238
  %6242 = phi %struct.CF2_StackNumber_* [ %6203, %6209 ], [ %6203, %6212 ], [ %6221, %6215 ], [ %6203, %6227 ], [ %6203, %6231 ], [ %6203, %6238 ]
  %6243 = phi i32 [ %6204, %6209 ], [ %6204, %6212 ], [ %6220, %6215 ], [ %6204, %6227 ], [ %6204, %6231 ], [ %6204, %6238 ]
  %6244 = phi i32 [ 0, %6209 ], [ 0, %6212 ], [ 0, %6215 ], [ %6230, %6227 ], [ %6237, %6231 ], [ %6240, %6238 ]
  %6245 = add i32 %6244, %6167
  %6246 = add i32 %6043, 5
  %6247 = icmp ult i32 %6246, %6243
  br i1 %6247, label %6255, label %6248

6248:                                             ; preds = %6241
  %6249 = load i32*, i32** %173, align 8
  %6250 = icmp eq i32* %6249, null
  br i1 %6250, label %6274, label %6251

6251:                                             ; preds = %6248
  %6252 = load i32, i32* %6249, align 4
  %6253 = icmp eq i32 %6252, 0
  br i1 %6253, label %6254, label %6274

6254:                                             ; preds = %6251
  store i32 130, i32* %6249, align 4
  br label %6274

6255:                                             ; preds = %6241
  %6256 = zext i32 %6246 to i64
  %6257 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6242, i64 %6256
  %6258 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6242, i64 %6256, i32 1
  %6259 = load i32, i32* %6258, align 4
  switch i32 %6259, label %6271 [
    i32 2, label %6260
    i32 1, label %6264
  ]

6260:                                             ; preds = %6255
  %6261 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6257, i64 0, i32 0, i32 0
  %6262 = load i32, i32* %6261, align 4
  %6263 = shl i32 %6262, 16
  br label %6274

6264:                                             ; preds = %6255
  %6265 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6257, i64 0, i32 0, i32 0
  %6266 = load i32, i32* %6265, align 4
  %6267 = add nsw i32 %6266, 8192
  %6268 = ashr i32 %6266, 31
  %6269 = add nsw i32 %6267, %6268
  %6270 = ashr i32 %6269, 14
  br label %6274

6271:                                             ; preds = %6255
  %6272 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6257, i64 0, i32 0, i32 0
  %6273 = load i32, i32* %6272, align 4
  br label %6274

6274:                                             ; preds = %6248, %6251, %6254, %6260, %6264, %6271
  %6275 = phi i32 [ %6273, %6271 ], [ %6270, %6264 ], [ %6263, %6260 ], [ 0, %6248 ], [ 0, %6251 ], [ 0, %6254 ]
  %6276 = add i32 %6275, %6206
  call fastcc void @cf2_glyphpath_curveTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %6088, i32 %6128, i32 %6167, i32 %6206, i32 %6245, i32 %6276)
  store i32 %6245, i32* %19, align 4
  store i32 %6276, i32* %20, align 4
  %6277 = add i32 %6043, 6
  %6278 = icmp ult i32 %6277, %5950
  br i1 %6278, label %6042, label %6279

6279:                                             ; preds = %6274, %5952
  %6280 = load i64, i64* %208, align 8
  store i64 %6280, i64* %187, align 8
  br label %4123

6281:                                             ; preds = %330
  %6282 = load i64, i64* %187, align 8
  %6283 = load i64, i64* %208, align 8
  %6284 = sub i64 %6282, %6283
  %6285 = lshr exact i64 %6284, 3
  %6286 = trunc i64 %6285 to i32
  %6287 = and i32 %6286, -3
  %6288 = sub i32 %6286, %6287
  %6289 = icmp ugt i32 %6287, %6288
  br i1 %6289, label %6290, label %6497

6290:                                             ; preds = %6281, %6490
  %6291 = phi i32 [ %6493, %6490 ], [ %6288, %6281 ]
  %6292 = sub i32 %6286, %6291
  %6293 = and i32 %6292, 1
  %6294 = icmp eq i32 %6293, 0
  br i1 %6294, label %6334, label %6295

6295:                                             ; preds = %6290
  %6296 = load i64, i64* %187, align 8
  %6297 = load i64, i64* %208, align 8
  %6298 = sub i64 %6296, %6297
  %6299 = lshr exact i64 %6298, 3
  %6300 = trunc i64 %6299 to i32
  %6301 = icmp ult i32 %6291, %6300
  %6302 = inttoptr i64 %6297 to %struct.CF2_StackNumber_*
  br i1 %6301, label %6310, label %6303

6303:                                             ; preds = %6295
  %6304 = load i32*, i32** %173, align 8
  %6305 = icmp eq i32* %6304, null
  br i1 %6305, label %6329, label %6306

6306:                                             ; preds = %6303
  %6307 = load i32, i32* %6304, align 4
  %6308 = icmp eq i32 %6307, 0
  br i1 %6308, label %6309, label %6329

6309:                                             ; preds = %6306
  store i32 130, i32* %6304, align 4
  br label %6329

6310:                                             ; preds = %6295
  %6311 = zext i32 %6291 to i64
  %6312 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6302, i64 %6311
  %6313 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6302, i64 %6311, i32 1
  %6314 = load i32, i32* %6313, align 4
  switch i32 %6314, label %6326 [
    i32 2, label %6315
    i32 1, label %6319
  ]

6315:                                             ; preds = %6310
  %6316 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6312, i64 0, i32 0, i32 0
  %6317 = load i32, i32* %6316, align 4
  %6318 = shl i32 %6317, 16
  br label %6329

6319:                                             ; preds = %6310
  %6320 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6312, i64 0, i32 0, i32 0
  %6321 = load i32, i32* %6320, align 4
  %6322 = add nsw i32 %6321, 8192
  %6323 = ashr i32 %6321, 31
  %6324 = add nsw i32 %6322, %6323
  %6325 = ashr i32 %6324, 14
  br label %6329

6326:                                             ; preds = %6310
  %6327 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6312, i64 0, i32 0, i32 0
  %6328 = load i32, i32* %6327, align 4
  br label %6329

6329:                                             ; preds = %6303, %6306, %6309, %6315, %6319, %6326
  %6330 = phi i32 [ %6328, %6326 ], [ %6325, %6319 ], [ %6318, %6315 ], [ 0, %6303 ], [ 0, %6306 ], [ 0, %6309 ]
  %6331 = load i32, i32* %19, align 4
  %6332 = add i32 %6331, %6330
  %6333 = add nuw i32 %6291, 1
  br label %6336

6334:                                             ; preds = %6290
  %6335 = load i32, i32* %19, align 4
  br label %6336

6336:                                             ; preds = %6334, %6329
  %6337 = phi i32 [ %6333, %6329 ], [ %6291, %6334 ]
  %6338 = phi i32 [ %6332, %6329 ], [ %6335, %6334 ]
  %6339 = load i64, i64* %187, align 8
  %6340 = load i64, i64* %208, align 8
  %6341 = sub i64 %6339, %6340
  %6342 = lshr exact i64 %6341, 3
  %6343 = trunc i64 %6342 to i32
  %6344 = icmp ult i32 %6337, %6343
  %6345 = inttoptr i64 %6340 to %struct.CF2_StackNumber_*
  br i1 %6344, label %6359, label %6346

6346:                                             ; preds = %6336
  %6347 = load i32*, i32** %173, align 8
  %6348 = icmp eq i32* %6347, null
  br i1 %6348, label %6378, label %6349

6349:                                             ; preds = %6346
  %6350 = load i32, i32* %6347, align 4
  %6351 = icmp eq i32 %6350, 0
  br i1 %6351, label %6352, label %6378

6352:                                             ; preds = %6349
  store i32 130, i32* %6347, align 4
  %6353 = load i64, i64* %187, align 8
  %6354 = load i64, i64* %208, align 8
  %6355 = sub i64 %6353, %6354
  %6356 = lshr exact i64 %6355, 3
  %6357 = trunc i64 %6356 to i32
  %6358 = inttoptr i64 %6354 to %struct.CF2_StackNumber_*
  br label %6378

6359:                                             ; preds = %6336
  %6360 = zext i32 %6337 to i64
  %6361 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6345, i64 %6360
  %6362 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6345, i64 %6360, i32 1
  %6363 = load i32, i32* %6362, align 4
  switch i32 %6363, label %6375 [
    i32 2, label %6364
    i32 1, label %6368
  ]

6364:                                             ; preds = %6359
  %6365 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6361, i64 0, i32 0, i32 0
  %6366 = load i32, i32* %6365, align 4
  %6367 = shl i32 %6366, 16
  br label %6378

6368:                                             ; preds = %6359
  %6369 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6361, i64 0, i32 0, i32 0
  %6370 = load i32, i32* %6369, align 4
  %6371 = add nsw i32 %6370, 8192
  %6372 = ashr i32 %6370, 31
  %6373 = add nsw i32 %6371, %6372
  %6374 = ashr i32 %6373, 14
  br label %6378

6375:                                             ; preds = %6359
  %6376 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6361, i64 0, i32 0, i32 0
  %6377 = load i32, i32* %6376, align 4
  br label %6378

6378:                                             ; preds = %6346, %6349, %6352, %6364, %6368, %6375
  %6379 = phi %struct.CF2_StackNumber_* [ %6345, %6346 ], [ %6345, %6349 ], [ %6358, %6352 ], [ %6345, %6364 ], [ %6345, %6368 ], [ %6345, %6375 ]
  %6380 = phi i32 [ %6343, %6346 ], [ %6343, %6349 ], [ %6357, %6352 ], [ %6343, %6364 ], [ %6343, %6368 ], [ %6343, %6375 ]
  %6381 = phi i32 [ 0, %6346 ], [ 0, %6349 ], [ 0, %6352 ], [ %6367, %6364 ], [ %6374, %6368 ], [ %6377, %6375 ]
  %6382 = load i32, i32* %20, align 4
  %6383 = add i32 %6382, %6381
  %6384 = add i32 %6337, 1
  %6385 = icmp ult i32 %6384, %6380
  br i1 %6385, label %6399, label %6386

6386:                                             ; preds = %6378
  %6387 = load i32*, i32** %173, align 8
  %6388 = icmp eq i32* %6387, null
  br i1 %6388, label %6418, label %6389

6389:                                             ; preds = %6386
  %6390 = load i32, i32* %6387, align 4
  %6391 = icmp eq i32 %6390, 0
  br i1 %6391, label %6392, label %6418

6392:                                             ; preds = %6389
  store i32 130, i32* %6387, align 4
  %6393 = load i64, i64* %187, align 8
  %6394 = load i64, i64* %208, align 8
  %6395 = sub i64 %6393, %6394
  %6396 = lshr exact i64 %6395, 3
  %6397 = trunc i64 %6396 to i32
  %6398 = inttoptr i64 %6394 to %struct.CF2_StackNumber_*
  br label %6418

6399:                                             ; preds = %6378
  %6400 = zext i32 %6384 to i64
  %6401 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6379, i64 %6400
  %6402 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6379, i64 %6400, i32 1
  %6403 = load i32, i32* %6402, align 4
  switch i32 %6403, label %6415 [
    i32 2, label %6404
    i32 1, label %6408
  ]

6404:                                             ; preds = %6399
  %6405 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6401, i64 0, i32 0, i32 0
  %6406 = load i32, i32* %6405, align 4
  %6407 = shl i32 %6406, 16
  br label %6418

6408:                                             ; preds = %6399
  %6409 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6401, i64 0, i32 0, i32 0
  %6410 = load i32, i32* %6409, align 4
  %6411 = add nsw i32 %6410, 8192
  %6412 = ashr i32 %6410, 31
  %6413 = add nsw i32 %6411, %6412
  %6414 = ashr i32 %6413, 14
  br label %6418

6415:                                             ; preds = %6399
  %6416 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6401, i64 0, i32 0, i32 0
  %6417 = load i32, i32* %6416, align 4
  br label %6418

6418:                                             ; preds = %6386, %6389, %6392, %6404, %6408, %6415
  %6419 = phi %struct.CF2_StackNumber_* [ %6379, %6386 ], [ %6379, %6389 ], [ %6398, %6392 ], [ %6379, %6404 ], [ %6379, %6408 ], [ %6379, %6415 ]
  %6420 = phi i32 [ %6380, %6386 ], [ %6380, %6389 ], [ %6397, %6392 ], [ %6380, %6404 ], [ %6380, %6408 ], [ %6380, %6415 ]
  %6421 = phi i32 [ 0, %6386 ], [ 0, %6389 ], [ 0, %6392 ], [ %6407, %6404 ], [ %6414, %6408 ], [ %6417, %6415 ]
  %6422 = add i32 %6421, %6338
  %6423 = add i32 %6337, 2
  %6424 = icmp ult i32 %6423, %6420
  br i1 %6424, label %6438, label %6425

6425:                                             ; preds = %6418
  %6426 = load i32*, i32** %173, align 8
  %6427 = icmp eq i32* %6426, null
  br i1 %6427, label %6457, label %6428

6428:                                             ; preds = %6425
  %6429 = load i32, i32* %6426, align 4
  %6430 = icmp eq i32 %6429, 0
  br i1 %6430, label %6431, label %6457

6431:                                             ; preds = %6428
  store i32 130, i32* %6426, align 4
  %6432 = load i64, i64* %187, align 8
  %6433 = load i64, i64* %208, align 8
  %6434 = sub i64 %6432, %6433
  %6435 = lshr exact i64 %6434, 3
  %6436 = trunc i64 %6435 to i32
  %6437 = inttoptr i64 %6433 to %struct.CF2_StackNumber_*
  br label %6457

6438:                                             ; preds = %6418
  %6439 = zext i32 %6423 to i64
  %6440 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6419, i64 %6439
  %6441 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6419, i64 %6439, i32 1
  %6442 = load i32, i32* %6441, align 4
  switch i32 %6442, label %6454 [
    i32 2, label %6443
    i32 1, label %6447
  ]

6443:                                             ; preds = %6438
  %6444 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6440, i64 0, i32 0, i32 0
  %6445 = load i32, i32* %6444, align 4
  %6446 = shl i32 %6445, 16
  br label %6457

6447:                                             ; preds = %6438
  %6448 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6440, i64 0, i32 0, i32 0
  %6449 = load i32, i32* %6448, align 4
  %6450 = add nsw i32 %6449, 8192
  %6451 = ashr i32 %6449, 31
  %6452 = add nsw i32 %6450, %6451
  %6453 = ashr i32 %6452, 14
  br label %6457

6454:                                             ; preds = %6438
  %6455 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6440, i64 0, i32 0, i32 0
  %6456 = load i32, i32* %6455, align 4
  br label %6457

6457:                                             ; preds = %6425, %6428, %6431, %6443, %6447, %6454
  %6458 = phi %struct.CF2_StackNumber_* [ %6419, %6425 ], [ %6419, %6428 ], [ %6437, %6431 ], [ %6419, %6443 ], [ %6419, %6447 ], [ %6419, %6454 ]
  %6459 = phi i32 [ %6420, %6425 ], [ %6420, %6428 ], [ %6436, %6431 ], [ %6420, %6443 ], [ %6420, %6447 ], [ %6420, %6454 ]
  %6460 = phi i32 [ 0, %6425 ], [ 0, %6428 ], [ 0, %6431 ], [ %6446, %6443 ], [ %6453, %6447 ], [ %6456, %6454 ]
  %6461 = add i32 %6460, %6383
  %6462 = add i32 %6337, 3
  %6463 = icmp ult i32 %6462, %6459
  br i1 %6463, label %6471, label %6464

6464:                                             ; preds = %6457
  %6465 = load i32*, i32** %173, align 8
  %6466 = icmp eq i32* %6465, null
  br i1 %6466, label %6490, label %6467

6467:                                             ; preds = %6464
  %6468 = load i32, i32* %6465, align 4
  %6469 = icmp eq i32 %6468, 0
  br i1 %6469, label %6470, label %6490

6470:                                             ; preds = %6467
  store i32 130, i32* %6465, align 4
  br label %6490

6471:                                             ; preds = %6457
  %6472 = zext i32 %6462 to i64
  %6473 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6458, i64 %6472
  %6474 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6458, i64 %6472, i32 1
  %6475 = load i32, i32* %6474, align 4
  switch i32 %6475, label %6487 [
    i32 2, label %6476
    i32 1, label %6480
  ]

6476:                                             ; preds = %6471
  %6477 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6473, i64 0, i32 0, i32 0
  %6478 = load i32, i32* %6477, align 4
  %6479 = shl i32 %6478, 16
  br label %6490

6480:                                             ; preds = %6471
  %6481 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6473, i64 0, i32 0, i32 0
  %6482 = load i32, i32* %6481, align 4
  %6483 = add nsw i32 %6482, 8192
  %6484 = ashr i32 %6482, 31
  %6485 = add nsw i32 %6483, %6484
  %6486 = ashr i32 %6485, 14
  br label %6490

6487:                                             ; preds = %6471
  %6488 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6473, i64 0, i32 0, i32 0
  %6489 = load i32, i32* %6488, align 4
  br label %6490

6490:                                             ; preds = %6464, %6467, %6470, %6476, %6480, %6487
  %6491 = phi i32 [ %6489, %6487 ], [ %6486, %6480 ], [ %6479, %6476 ], [ 0, %6464 ], [ 0, %6467 ], [ 0, %6470 ]
  %6492 = add i32 %6491, %6461
  call fastcc void @cf2_glyphpath_curveTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %6338, i32 %6383, i32 %6422, i32 %6461, i32 %6422, i32 %6492)
  store i32 %6422, i32* %19, align 4
  store i32 %6492, i32* %20, align 4
  %6493 = add i32 %6337, 4
  %6494 = icmp ugt i32 %6287, %6493
  br i1 %6494, label %6290, label %6495

6495:                                             ; preds = %6490
  %6496 = load i64, i64* %208, align 8
  br label %6497

6497:                                             ; preds = %6495, %6281
  %6498 = phi i64 [ %6496, %6495 ], [ %6283, %6281 ]
  store i64 %6498, i64* %187, align 8
  br label %4123

6499:                                             ; preds = %330
  %6500 = load i64, i64* %187, align 8
  %6501 = load i64, i64* %208, align 8
  %6502 = sub i64 %6500, %6501
  %6503 = lshr exact i64 %6502, 3
  %6504 = trunc i64 %6503 to i32
  %6505 = and i32 %6504, -3
  %6506 = sub i32 %6504, %6505
  %6507 = icmp ugt i32 %6505, %6506
  br i1 %6507, label %6508, label %6715

6508:                                             ; preds = %6499, %6708
  %6509 = phi i32 [ %6711, %6708 ], [ %6506, %6499 ]
  %6510 = sub i32 %6504, %6509
  %6511 = and i32 %6510, 1
  %6512 = icmp eq i32 %6511, 0
  br i1 %6512, label %6552, label %6513

6513:                                             ; preds = %6508
  %6514 = load i64, i64* %187, align 8
  %6515 = load i64, i64* %208, align 8
  %6516 = sub i64 %6514, %6515
  %6517 = lshr exact i64 %6516, 3
  %6518 = trunc i64 %6517 to i32
  %6519 = icmp ult i32 %6509, %6518
  %6520 = inttoptr i64 %6515 to %struct.CF2_StackNumber_*
  br i1 %6519, label %6528, label %6521

6521:                                             ; preds = %6513
  %6522 = load i32*, i32** %173, align 8
  %6523 = icmp eq i32* %6522, null
  br i1 %6523, label %6547, label %6524

6524:                                             ; preds = %6521
  %6525 = load i32, i32* %6522, align 4
  %6526 = icmp eq i32 %6525, 0
  br i1 %6526, label %6527, label %6547

6527:                                             ; preds = %6524
  store i32 130, i32* %6522, align 4
  br label %6547

6528:                                             ; preds = %6513
  %6529 = zext i32 %6509 to i64
  %6530 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6520, i64 %6529
  %6531 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6520, i64 %6529, i32 1
  %6532 = load i32, i32* %6531, align 4
  switch i32 %6532, label %6544 [
    i32 2, label %6533
    i32 1, label %6537
  ]

6533:                                             ; preds = %6528
  %6534 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6530, i64 0, i32 0, i32 0
  %6535 = load i32, i32* %6534, align 4
  %6536 = shl i32 %6535, 16
  br label %6547

6537:                                             ; preds = %6528
  %6538 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6530, i64 0, i32 0, i32 0
  %6539 = load i32, i32* %6538, align 4
  %6540 = add nsw i32 %6539, 8192
  %6541 = ashr i32 %6539, 31
  %6542 = add nsw i32 %6540, %6541
  %6543 = ashr i32 %6542, 14
  br label %6547

6544:                                             ; preds = %6528
  %6545 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6530, i64 0, i32 0, i32 0
  %6546 = load i32, i32* %6545, align 4
  br label %6547

6547:                                             ; preds = %6521, %6524, %6527, %6533, %6537, %6544
  %6548 = phi i32 [ %6546, %6544 ], [ %6543, %6537 ], [ %6536, %6533 ], [ 0, %6521 ], [ 0, %6524 ], [ 0, %6527 ]
  %6549 = load i32, i32* %20, align 4
  %6550 = add i32 %6549, %6548
  %6551 = add nuw i32 %6509, 1
  br label %6554

6552:                                             ; preds = %6508
  %6553 = load i32, i32* %20, align 4
  br label %6554

6554:                                             ; preds = %6552, %6547
  %6555 = phi i32 [ %6551, %6547 ], [ %6509, %6552 ]
  %6556 = phi i32 [ %6550, %6547 ], [ %6553, %6552 ]
  %6557 = load i64, i64* %187, align 8
  %6558 = load i64, i64* %208, align 8
  %6559 = sub i64 %6557, %6558
  %6560 = lshr exact i64 %6559, 3
  %6561 = trunc i64 %6560 to i32
  %6562 = icmp ult i32 %6555, %6561
  %6563 = inttoptr i64 %6558 to %struct.CF2_StackNumber_*
  br i1 %6562, label %6577, label %6564

6564:                                             ; preds = %6554
  %6565 = load i32*, i32** %173, align 8
  %6566 = icmp eq i32* %6565, null
  br i1 %6566, label %6596, label %6567

6567:                                             ; preds = %6564
  %6568 = load i32, i32* %6565, align 4
  %6569 = icmp eq i32 %6568, 0
  br i1 %6569, label %6570, label %6596

6570:                                             ; preds = %6567
  store i32 130, i32* %6565, align 4
  %6571 = load i64, i64* %187, align 8
  %6572 = load i64, i64* %208, align 8
  %6573 = sub i64 %6571, %6572
  %6574 = lshr exact i64 %6573, 3
  %6575 = trunc i64 %6574 to i32
  %6576 = inttoptr i64 %6572 to %struct.CF2_StackNumber_*
  br label %6596

6577:                                             ; preds = %6554
  %6578 = zext i32 %6555 to i64
  %6579 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6563, i64 %6578
  %6580 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6563, i64 %6578, i32 1
  %6581 = load i32, i32* %6580, align 4
  switch i32 %6581, label %6593 [
    i32 2, label %6582
    i32 1, label %6586
  ]

6582:                                             ; preds = %6577
  %6583 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6579, i64 0, i32 0, i32 0
  %6584 = load i32, i32* %6583, align 4
  %6585 = shl i32 %6584, 16
  br label %6596

6586:                                             ; preds = %6577
  %6587 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6579, i64 0, i32 0, i32 0
  %6588 = load i32, i32* %6587, align 4
  %6589 = add nsw i32 %6588, 8192
  %6590 = ashr i32 %6588, 31
  %6591 = add nsw i32 %6589, %6590
  %6592 = ashr i32 %6591, 14
  br label %6596

6593:                                             ; preds = %6577
  %6594 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6579, i64 0, i32 0, i32 0
  %6595 = load i32, i32* %6594, align 4
  br label %6596

6596:                                             ; preds = %6564, %6567, %6570, %6582, %6586, %6593
  %6597 = phi %struct.CF2_StackNumber_* [ %6563, %6564 ], [ %6563, %6567 ], [ %6576, %6570 ], [ %6563, %6582 ], [ %6563, %6586 ], [ %6563, %6593 ]
  %6598 = phi i32 [ %6561, %6564 ], [ %6561, %6567 ], [ %6575, %6570 ], [ %6561, %6582 ], [ %6561, %6586 ], [ %6561, %6593 ]
  %6599 = phi i32 [ 0, %6564 ], [ 0, %6567 ], [ 0, %6570 ], [ %6585, %6582 ], [ %6592, %6586 ], [ %6595, %6593 ]
  %6600 = load i32, i32* %19, align 4
  %6601 = add i32 %6600, %6599
  %6602 = add i32 %6555, 1
  %6603 = icmp ult i32 %6602, %6598
  br i1 %6603, label %6617, label %6604

6604:                                             ; preds = %6596
  %6605 = load i32*, i32** %173, align 8
  %6606 = icmp eq i32* %6605, null
  br i1 %6606, label %6636, label %6607

6607:                                             ; preds = %6604
  %6608 = load i32, i32* %6605, align 4
  %6609 = icmp eq i32 %6608, 0
  br i1 %6609, label %6610, label %6636

6610:                                             ; preds = %6607
  store i32 130, i32* %6605, align 4
  %6611 = load i64, i64* %187, align 8
  %6612 = load i64, i64* %208, align 8
  %6613 = sub i64 %6611, %6612
  %6614 = lshr exact i64 %6613, 3
  %6615 = trunc i64 %6614 to i32
  %6616 = inttoptr i64 %6612 to %struct.CF2_StackNumber_*
  br label %6636

6617:                                             ; preds = %6596
  %6618 = zext i32 %6602 to i64
  %6619 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6597, i64 %6618
  %6620 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6597, i64 %6618, i32 1
  %6621 = load i32, i32* %6620, align 4
  switch i32 %6621, label %6633 [
    i32 2, label %6622
    i32 1, label %6626
  ]

6622:                                             ; preds = %6617
  %6623 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6619, i64 0, i32 0, i32 0
  %6624 = load i32, i32* %6623, align 4
  %6625 = shl i32 %6624, 16
  br label %6636

6626:                                             ; preds = %6617
  %6627 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6619, i64 0, i32 0, i32 0
  %6628 = load i32, i32* %6627, align 4
  %6629 = add nsw i32 %6628, 8192
  %6630 = ashr i32 %6628, 31
  %6631 = add nsw i32 %6629, %6630
  %6632 = ashr i32 %6631, 14
  br label %6636

6633:                                             ; preds = %6617
  %6634 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6619, i64 0, i32 0, i32 0
  %6635 = load i32, i32* %6634, align 4
  br label %6636

6636:                                             ; preds = %6604, %6607, %6610, %6622, %6626, %6633
  %6637 = phi %struct.CF2_StackNumber_* [ %6597, %6604 ], [ %6597, %6607 ], [ %6616, %6610 ], [ %6597, %6622 ], [ %6597, %6626 ], [ %6597, %6633 ]
  %6638 = phi i32 [ %6598, %6604 ], [ %6598, %6607 ], [ %6615, %6610 ], [ %6598, %6622 ], [ %6598, %6626 ], [ %6598, %6633 ]
  %6639 = phi i32 [ 0, %6604 ], [ 0, %6607 ], [ 0, %6610 ], [ %6625, %6622 ], [ %6632, %6626 ], [ %6635, %6633 ]
  %6640 = add i32 %6639, %6601
  %6641 = add i32 %6555, 2
  %6642 = icmp ult i32 %6641, %6638
  br i1 %6642, label %6656, label %6643

6643:                                             ; preds = %6636
  %6644 = load i32*, i32** %173, align 8
  %6645 = icmp eq i32* %6644, null
  br i1 %6645, label %6675, label %6646

6646:                                             ; preds = %6643
  %6647 = load i32, i32* %6644, align 4
  %6648 = icmp eq i32 %6647, 0
  br i1 %6648, label %6649, label %6675

6649:                                             ; preds = %6646
  store i32 130, i32* %6644, align 4
  %6650 = load i64, i64* %187, align 8
  %6651 = load i64, i64* %208, align 8
  %6652 = sub i64 %6650, %6651
  %6653 = lshr exact i64 %6652, 3
  %6654 = trunc i64 %6653 to i32
  %6655 = inttoptr i64 %6651 to %struct.CF2_StackNumber_*
  br label %6675

6656:                                             ; preds = %6636
  %6657 = zext i32 %6641 to i64
  %6658 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6637, i64 %6657
  %6659 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6637, i64 %6657, i32 1
  %6660 = load i32, i32* %6659, align 4
  switch i32 %6660, label %6672 [
    i32 2, label %6661
    i32 1, label %6665
  ]

6661:                                             ; preds = %6656
  %6662 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6658, i64 0, i32 0, i32 0
  %6663 = load i32, i32* %6662, align 4
  %6664 = shl i32 %6663, 16
  br label %6675

6665:                                             ; preds = %6656
  %6666 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6658, i64 0, i32 0, i32 0
  %6667 = load i32, i32* %6666, align 4
  %6668 = add nsw i32 %6667, 8192
  %6669 = ashr i32 %6667, 31
  %6670 = add nsw i32 %6668, %6669
  %6671 = ashr i32 %6670, 14
  br label %6675

6672:                                             ; preds = %6656
  %6673 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6658, i64 0, i32 0, i32 0
  %6674 = load i32, i32* %6673, align 4
  br label %6675

6675:                                             ; preds = %6643, %6646, %6649, %6661, %6665, %6672
  %6676 = phi %struct.CF2_StackNumber_* [ %6637, %6643 ], [ %6637, %6646 ], [ %6655, %6649 ], [ %6637, %6661 ], [ %6637, %6665 ], [ %6637, %6672 ]
  %6677 = phi i32 [ %6638, %6643 ], [ %6638, %6646 ], [ %6654, %6649 ], [ %6638, %6661 ], [ %6638, %6665 ], [ %6638, %6672 ]
  %6678 = phi i32 [ 0, %6643 ], [ 0, %6646 ], [ 0, %6649 ], [ %6664, %6661 ], [ %6671, %6665 ], [ %6674, %6672 ]
  %6679 = add i32 %6678, %6556
  %6680 = add i32 %6555, 3
  %6681 = icmp ult i32 %6680, %6677
  br i1 %6681, label %6689, label %6682

6682:                                             ; preds = %6675
  %6683 = load i32*, i32** %173, align 8
  %6684 = icmp eq i32* %6683, null
  br i1 %6684, label %6708, label %6685

6685:                                             ; preds = %6682
  %6686 = load i32, i32* %6683, align 4
  %6687 = icmp eq i32 %6686, 0
  br i1 %6687, label %6688, label %6708

6688:                                             ; preds = %6685
  store i32 130, i32* %6683, align 4
  br label %6708

6689:                                             ; preds = %6675
  %6690 = zext i32 %6680 to i64
  %6691 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6676, i64 %6690
  %6692 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6676, i64 %6690, i32 1
  %6693 = load i32, i32* %6692, align 4
  switch i32 %6693, label %6705 [
    i32 2, label %6694
    i32 1, label %6698
  ]

6694:                                             ; preds = %6689
  %6695 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6691, i64 0, i32 0, i32 0
  %6696 = load i32, i32* %6695, align 4
  %6697 = shl i32 %6696, 16
  br label %6708

6698:                                             ; preds = %6689
  %6699 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6691, i64 0, i32 0, i32 0
  %6700 = load i32, i32* %6699, align 4
  %6701 = add nsw i32 %6700, 8192
  %6702 = ashr i32 %6700, 31
  %6703 = add nsw i32 %6701, %6702
  %6704 = ashr i32 %6703, 14
  br label %6708

6705:                                             ; preds = %6689
  %6706 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6691, i64 0, i32 0, i32 0
  %6707 = load i32, i32* %6706, align 4
  br label %6708

6708:                                             ; preds = %6682, %6685, %6688, %6694, %6698, %6705
  %6709 = phi i32 [ %6707, %6705 ], [ %6704, %6698 ], [ %6697, %6694 ], [ 0, %6682 ], [ 0, %6685 ], [ 0, %6688 ]
  %6710 = add i32 %6709, %6640
  call fastcc void @cf2_glyphpath_curveTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %6601, i32 %6556, i32 %6640, i32 %6679, i32 %6710, i32 %6679)
  store i32 %6710, i32* %19, align 4
  store i32 %6679, i32* %20, align 4
  %6711 = add i32 %6555, 4
  %6712 = icmp ugt i32 %6505, %6711
  br i1 %6712, label %6508, label %6713

6713:                                             ; preds = %6708
  %6714 = load i64, i64* %208, align 8
  br label %6715

6715:                                             ; preds = %6713, %6499
  %6716 = phi i64 [ %6714, %6713 ], [ %6501, %6499 ]
  store i64 %6716, i64* %187, align 8
  br label %4123

6717:                                             ; preds = %330, %330
  %6718 = load i64, i64* %187, align 8
  %6719 = load i64, i64* %208, align 8
  %6720 = sub i64 %6718, %6719
  %6721 = lshr exact i64 %6720, 3
  %6722 = trunc i64 %6721 to i32
  %6723 = and i32 %6722, -3
  %6724 = sub i32 %6722, %6723
  %6725 = icmp ugt i32 %6723, %6724
  br i1 %6725, label %6726, label %7138

6726:                                             ; preds = %6717
  %6727 = icmp eq i8 %292, 31
  %6728 = zext i1 %6727 to i8
  br label %6729

6729:                                             ; preds = %6726, %7125
  %6730 = phi i8 [ %7127, %7125 ], [ %6728, %6726 ]
  %6731 = phi i32 [ %7134, %7125 ], [ %6724, %6726 ]
  %6732 = icmp eq i8 %6730, 0
  br i1 %6732, label %6929, label %6733

6733:                                             ; preds = %6729
  %6734 = load i64, i64* %187, align 8
  %6735 = load i64, i64* %208, align 8
  %6736 = sub i64 %6734, %6735
  %6737 = lshr exact i64 %6736, 3
  %6738 = trunc i64 %6737 to i32
  %6739 = icmp ult i32 %6731, %6738
  %6740 = inttoptr i64 %6735 to %struct.CF2_StackNumber_*
  br i1 %6739, label %6754, label %6741

6741:                                             ; preds = %6733
  %6742 = load i32*, i32** %173, align 8
  %6743 = icmp eq i32* %6742, null
  br i1 %6743, label %6773, label %6744

6744:                                             ; preds = %6741
  %6745 = load i32, i32* %6742, align 4
  %6746 = icmp eq i32 %6745, 0
  br i1 %6746, label %6747, label %6773

6747:                                             ; preds = %6744
  store i32 130, i32* %6742, align 4
  %6748 = load i64, i64* %187, align 8
  %6749 = load i64, i64* %208, align 8
  %6750 = sub i64 %6748, %6749
  %6751 = lshr exact i64 %6750, 3
  %6752 = trunc i64 %6751 to i32
  %6753 = inttoptr i64 %6749 to %struct.CF2_StackNumber_*
  br label %6773

6754:                                             ; preds = %6733
  %6755 = zext i32 %6731 to i64
  %6756 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6740, i64 %6755
  %6757 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6740, i64 %6755, i32 1
  %6758 = load i32, i32* %6757, align 4
  switch i32 %6758, label %6770 [
    i32 2, label %6759
    i32 1, label %6763
  ]

6759:                                             ; preds = %6754
  %6760 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6756, i64 0, i32 0, i32 0
  %6761 = load i32, i32* %6760, align 4
  %6762 = shl i32 %6761, 16
  br label %6773

6763:                                             ; preds = %6754
  %6764 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6756, i64 0, i32 0, i32 0
  %6765 = load i32, i32* %6764, align 4
  %6766 = add nsw i32 %6765, 8192
  %6767 = ashr i32 %6765, 31
  %6768 = add nsw i32 %6766, %6767
  %6769 = ashr i32 %6768, 14
  br label %6773

6770:                                             ; preds = %6754
  %6771 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6756, i64 0, i32 0, i32 0
  %6772 = load i32, i32* %6771, align 4
  br label %6773

6773:                                             ; preds = %6741, %6744, %6747, %6759, %6763, %6770
  %6774 = phi %struct.CF2_StackNumber_* [ %6740, %6741 ], [ %6740, %6744 ], [ %6753, %6747 ], [ %6740, %6759 ], [ %6740, %6763 ], [ %6740, %6770 ]
  %6775 = phi i32 [ %6738, %6741 ], [ %6738, %6744 ], [ %6752, %6747 ], [ %6738, %6759 ], [ %6738, %6763 ], [ %6738, %6770 ]
  %6776 = phi i32 [ 0, %6741 ], [ 0, %6744 ], [ 0, %6747 ], [ %6762, %6759 ], [ %6769, %6763 ], [ %6772, %6770 ]
  %6777 = load i32, i32* %19, align 4
  %6778 = add i32 %6777, %6776
  %6779 = load i32, i32* %20, align 4
  %6780 = add nuw i32 %6731, 1
  %6781 = icmp ult i32 %6780, %6775
  br i1 %6781, label %6795, label %6782

6782:                                             ; preds = %6773
  %6783 = load i32*, i32** %173, align 8
  %6784 = icmp eq i32* %6783, null
  br i1 %6784, label %6814, label %6785

6785:                                             ; preds = %6782
  %6786 = load i32, i32* %6783, align 4
  %6787 = icmp eq i32 %6786, 0
  br i1 %6787, label %6788, label %6814

6788:                                             ; preds = %6785
  store i32 130, i32* %6783, align 4
  %6789 = load i64, i64* %187, align 8
  %6790 = load i64, i64* %208, align 8
  %6791 = sub i64 %6789, %6790
  %6792 = lshr exact i64 %6791, 3
  %6793 = trunc i64 %6792 to i32
  %6794 = inttoptr i64 %6790 to %struct.CF2_StackNumber_*
  br label %6814

6795:                                             ; preds = %6773
  %6796 = zext i32 %6780 to i64
  %6797 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6774, i64 %6796
  %6798 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6774, i64 %6796, i32 1
  %6799 = load i32, i32* %6798, align 4
  switch i32 %6799, label %6811 [
    i32 2, label %6800
    i32 1, label %6804
  ]

6800:                                             ; preds = %6795
  %6801 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6797, i64 0, i32 0, i32 0
  %6802 = load i32, i32* %6801, align 4
  %6803 = shl i32 %6802, 16
  br label %6814

6804:                                             ; preds = %6795
  %6805 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6797, i64 0, i32 0, i32 0
  %6806 = load i32, i32* %6805, align 4
  %6807 = add nsw i32 %6806, 8192
  %6808 = ashr i32 %6806, 31
  %6809 = add nsw i32 %6807, %6808
  %6810 = ashr i32 %6809, 14
  br label %6814

6811:                                             ; preds = %6795
  %6812 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6797, i64 0, i32 0, i32 0
  %6813 = load i32, i32* %6812, align 4
  br label %6814

6814:                                             ; preds = %6782, %6785, %6788, %6800, %6804, %6811
  %6815 = phi %struct.CF2_StackNumber_* [ %6774, %6782 ], [ %6774, %6785 ], [ %6794, %6788 ], [ %6774, %6800 ], [ %6774, %6804 ], [ %6774, %6811 ]
  %6816 = phi i32 [ %6775, %6782 ], [ %6775, %6785 ], [ %6793, %6788 ], [ %6775, %6800 ], [ %6775, %6804 ], [ %6775, %6811 ]
  %6817 = phi i32 [ 0, %6782 ], [ 0, %6785 ], [ 0, %6788 ], [ %6803, %6800 ], [ %6810, %6804 ], [ %6813, %6811 ]
  %6818 = add i32 %6817, %6778
  %6819 = add i32 %6731, 2
  %6820 = icmp ult i32 %6819, %6816
  br i1 %6820, label %6834, label %6821

6821:                                             ; preds = %6814
  %6822 = load i32*, i32** %173, align 8
  %6823 = icmp eq i32* %6822, null
  br i1 %6823, label %6853, label %6824

6824:                                             ; preds = %6821
  %6825 = load i32, i32* %6822, align 4
  %6826 = icmp eq i32 %6825, 0
  br i1 %6826, label %6827, label %6853

6827:                                             ; preds = %6824
  store i32 130, i32* %6822, align 4
  %6828 = load i64, i64* %187, align 8
  %6829 = load i64, i64* %208, align 8
  %6830 = sub i64 %6828, %6829
  %6831 = lshr exact i64 %6830, 3
  %6832 = trunc i64 %6831 to i32
  %6833 = inttoptr i64 %6829 to %struct.CF2_StackNumber_*
  br label %6853

6834:                                             ; preds = %6814
  %6835 = zext i32 %6819 to i64
  %6836 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6815, i64 %6835
  %6837 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6815, i64 %6835, i32 1
  %6838 = load i32, i32* %6837, align 4
  switch i32 %6838, label %6850 [
    i32 2, label %6839
    i32 1, label %6843
  ]

6839:                                             ; preds = %6834
  %6840 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6836, i64 0, i32 0, i32 0
  %6841 = load i32, i32* %6840, align 4
  %6842 = shl i32 %6841, 16
  br label %6853

6843:                                             ; preds = %6834
  %6844 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6836, i64 0, i32 0, i32 0
  %6845 = load i32, i32* %6844, align 4
  %6846 = add nsw i32 %6845, 8192
  %6847 = ashr i32 %6845, 31
  %6848 = add nsw i32 %6846, %6847
  %6849 = ashr i32 %6848, 14
  br label %6853

6850:                                             ; preds = %6834
  %6851 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6836, i64 0, i32 0, i32 0
  %6852 = load i32, i32* %6851, align 4
  br label %6853

6853:                                             ; preds = %6821, %6824, %6827, %6839, %6843, %6850
  %6854 = phi %struct.CF2_StackNumber_* [ %6815, %6821 ], [ %6815, %6824 ], [ %6833, %6827 ], [ %6815, %6839 ], [ %6815, %6843 ], [ %6815, %6850 ]
  %6855 = phi i32 [ %6816, %6821 ], [ %6816, %6824 ], [ %6832, %6827 ], [ %6816, %6839 ], [ %6816, %6843 ], [ %6816, %6850 ]
  %6856 = phi i32 [ 0, %6821 ], [ 0, %6824 ], [ 0, %6827 ], [ %6842, %6839 ], [ %6849, %6843 ], [ %6852, %6850 ]
  %6857 = add i32 %6856, %6779
  %6858 = add i32 %6731, 3
  %6859 = icmp ult i32 %6858, %6855
  br i1 %6859, label %6867, label %6860

6860:                                             ; preds = %6853
  %6861 = load i32*, i32** %173, align 8
  %6862 = icmp eq i32* %6861, null
  br i1 %6862, label %6886, label %6863

6863:                                             ; preds = %6860
  %6864 = load i32, i32* %6861, align 4
  %6865 = icmp eq i32 %6864, 0
  br i1 %6865, label %6866, label %6886

6866:                                             ; preds = %6863
  store i32 130, i32* %6861, align 4
  br label %6886

6867:                                             ; preds = %6853
  %6868 = zext i32 %6858 to i64
  %6869 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6854, i64 %6868
  %6870 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6854, i64 %6868, i32 1
  %6871 = load i32, i32* %6870, align 4
  switch i32 %6871, label %6883 [
    i32 2, label %6872
    i32 1, label %6876
  ]

6872:                                             ; preds = %6867
  %6873 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6869, i64 0, i32 0, i32 0
  %6874 = load i32, i32* %6873, align 4
  %6875 = shl i32 %6874, 16
  br label %6886

6876:                                             ; preds = %6867
  %6877 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6869, i64 0, i32 0, i32 0
  %6878 = load i32, i32* %6877, align 4
  %6879 = add nsw i32 %6878, 8192
  %6880 = ashr i32 %6878, 31
  %6881 = add nsw i32 %6879, %6880
  %6882 = ashr i32 %6881, 14
  br label %6886

6883:                                             ; preds = %6867
  %6884 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6869, i64 0, i32 0, i32 0
  %6885 = load i32, i32* %6884, align 4
  br label %6886

6886:                                             ; preds = %6860, %6863, %6866, %6872, %6876, %6883
  %6887 = phi i32 [ %6885, %6883 ], [ %6882, %6876 ], [ %6875, %6872 ], [ 0, %6860 ], [ 0, %6863 ], [ 0, %6866 ]
  %6888 = add i32 %6887, %6857
  %6889 = sub i32 %6723, %6731
  %6890 = icmp eq i32 %6889, 5
  br i1 %6890, label %6891, label %7125

6891:                                             ; preds = %6886
  %6892 = add i32 %6731, 4
  %6893 = load i64, i64* %187, align 8
  %6894 = load i64, i64* %208, align 8
  %6895 = sub i64 %6893, %6894
  %6896 = lshr exact i64 %6895, 3
  %6897 = trunc i64 %6896 to i32
  %6898 = icmp ult i32 %6892, %6897
  %6899 = inttoptr i64 %6894 to %struct.CF2_StackNumber_*
  br i1 %6898, label %6907, label %6900

6900:                                             ; preds = %6891
  %6901 = load i32*, i32** %173, align 8
  %6902 = icmp eq i32* %6901, null
  br i1 %6902, label %6926, label %6903

6903:                                             ; preds = %6900
  %6904 = load i32, i32* %6901, align 4
  %6905 = icmp eq i32 %6904, 0
  br i1 %6905, label %6906, label %6926

6906:                                             ; preds = %6903
  store i32 130, i32* %6901, align 4
  br label %6926

6907:                                             ; preds = %6891
  %6908 = zext i32 %6892 to i64
  %6909 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6899, i64 %6908
  %6910 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6899, i64 %6908, i32 1
  %6911 = load i32, i32* %6910, align 4
  switch i32 %6911, label %6923 [
    i32 2, label %6912
    i32 1, label %6916
  ]

6912:                                             ; preds = %6907
  %6913 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6909, i64 0, i32 0, i32 0
  %6914 = load i32, i32* %6913, align 4
  %6915 = shl i32 %6914, 16
  br label %6926

6916:                                             ; preds = %6907
  %6917 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6909, i64 0, i32 0, i32 0
  %6918 = load i32, i32* %6917, align 4
  %6919 = add nsw i32 %6918, 8192
  %6920 = ashr i32 %6918, 31
  %6921 = add nsw i32 %6919, %6920
  %6922 = ashr i32 %6921, 14
  br label %6926

6923:                                             ; preds = %6907
  %6924 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6909, i64 0, i32 0, i32 0
  %6925 = load i32, i32* %6924, align 4
  br label %6926

6926:                                             ; preds = %6900, %6903, %6906, %6912, %6916, %6923
  %6927 = phi i32 [ %6925, %6923 ], [ %6922, %6916 ], [ %6915, %6912 ], [ 0, %6900 ], [ 0, %6903 ], [ 0, %6906 ]
  %6928 = add i32 %6927, %6818
  br label %7125

6929:                                             ; preds = %6729
  %6930 = load i32, i32* %19, align 4
  %6931 = load i64, i64* %187, align 8
  %6932 = load i64, i64* %208, align 8
  %6933 = sub i64 %6931, %6932
  %6934 = lshr exact i64 %6933, 3
  %6935 = trunc i64 %6934 to i32
  %6936 = icmp ult i32 %6731, %6935
  %6937 = inttoptr i64 %6932 to %struct.CF2_StackNumber_*
  br i1 %6936, label %6951, label %6938

6938:                                             ; preds = %6929
  %6939 = load i32*, i32** %173, align 8
  %6940 = icmp eq i32* %6939, null
  br i1 %6940, label %6970, label %6941

6941:                                             ; preds = %6938
  %6942 = load i32, i32* %6939, align 4
  %6943 = icmp eq i32 %6942, 0
  br i1 %6943, label %6944, label %6970

6944:                                             ; preds = %6941
  store i32 130, i32* %6939, align 4
  %6945 = load i64, i64* %187, align 8
  %6946 = load i64, i64* %208, align 8
  %6947 = sub i64 %6945, %6946
  %6948 = lshr exact i64 %6947, 3
  %6949 = trunc i64 %6948 to i32
  %6950 = inttoptr i64 %6946 to %struct.CF2_StackNumber_*
  br label %6970

6951:                                             ; preds = %6929
  %6952 = zext i32 %6731 to i64
  %6953 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6937, i64 %6952
  %6954 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6937, i64 %6952, i32 1
  %6955 = load i32, i32* %6954, align 4
  switch i32 %6955, label %6967 [
    i32 2, label %6956
    i32 1, label %6960
  ]

6956:                                             ; preds = %6951
  %6957 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6953, i64 0, i32 0, i32 0
  %6958 = load i32, i32* %6957, align 4
  %6959 = shl i32 %6958, 16
  br label %6970

6960:                                             ; preds = %6951
  %6961 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6953, i64 0, i32 0, i32 0
  %6962 = load i32, i32* %6961, align 4
  %6963 = add nsw i32 %6962, 8192
  %6964 = ashr i32 %6962, 31
  %6965 = add nsw i32 %6963, %6964
  %6966 = ashr i32 %6965, 14
  br label %6970

6967:                                             ; preds = %6951
  %6968 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6953, i64 0, i32 0, i32 0
  %6969 = load i32, i32* %6968, align 4
  br label %6970

6970:                                             ; preds = %6938, %6941, %6944, %6956, %6960, %6967
  %6971 = phi %struct.CF2_StackNumber_* [ %6937, %6938 ], [ %6937, %6941 ], [ %6950, %6944 ], [ %6937, %6956 ], [ %6937, %6960 ], [ %6937, %6967 ]
  %6972 = phi i32 [ %6935, %6938 ], [ %6935, %6941 ], [ %6949, %6944 ], [ %6935, %6956 ], [ %6935, %6960 ], [ %6935, %6967 ]
  %6973 = phi i32 [ 0, %6938 ], [ 0, %6941 ], [ 0, %6944 ], [ %6959, %6956 ], [ %6966, %6960 ], [ %6969, %6967 ]
  %6974 = load i32, i32* %20, align 4
  %6975 = add i32 %6974, %6973
  %6976 = add nuw i32 %6731, 1
  %6977 = icmp ult i32 %6976, %6972
  br i1 %6977, label %6991, label %6978

6978:                                             ; preds = %6970
  %6979 = load i32*, i32** %173, align 8
  %6980 = icmp eq i32* %6979, null
  br i1 %6980, label %7010, label %6981

6981:                                             ; preds = %6978
  %6982 = load i32, i32* %6979, align 4
  %6983 = icmp eq i32 %6982, 0
  br i1 %6983, label %6984, label %7010

6984:                                             ; preds = %6981
  store i32 130, i32* %6979, align 4
  %6985 = load i64, i64* %187, align 8
  %6986 = load i64, i64* %208, align 8
  %6987 = sub i64 %6985, %6986
  %6988 = lshr exact i64 %6987, 3
  %6989 = trunc i64 %6988 to i32
  %6990 = inttoptr i64 %6986 to %struct.CF2_StackNumber_*
  br label %7010

6991:                                             ; preds = %6970
  %6992 = zext i32 %6976 to i64
  %6993 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6971, i64 %6992
  %6994 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6971, i64 %6992, i32 1
  %6995 = load i32, i32* %6994, align 4
  switch i32 %6995, label %7007 [
    i32 2, label %6996
    i32 1, label %7000
  ]

6996:                                             ; preds = %6991
  %6997 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6993, i64 0, i32 0, i32 0
  %6998 = load i32, i32* %6997, align 4
  %6999 = shl i32 %6998, 16
  br label %7010

7000:                                             ; preds = %6991
  %7001 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6993, i64 0, i32 0, i32 0
  %7002 = load i32, i32* %7001, align 4
  %7003 = add nsw i32 %7002, 8192
  %7004 = ashr i32 %7002, 31
  %7005 = add nsw i32 %7003, %7004
  %7006 = ashr i32 %7005, 14
  br label %7010

7007:                                             ; preds = %6991
  %7008 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %6993, i64 0, i32 0, i32 0
  %7009 = load i32, i32* %7008, align 4
  br label %7010

7010:                                             ; preds = %6978, %6981, %6984, %6996, %7000, %7007
  %7011 = phi %struct.CF2_StackNumber_* [ %6971, %6978 ], [ %6971, %6981 ], [ %6990, %6984 ], [ %6971, %6996 ], [ %6971, %7000 ], [ %6971, %7007 ]
  %7012 = phi i32 [ %6972, %6978 ], [ %6972, %6981 ], [ %6989, %6984 ], [ %6972, %6996 ], [ %6972, %7000 ], [ %6972, %7007 ]
  %7013 = phi i32 [ 0, %6978 ], [ 0, %6981 ], [ 0, %6984 ], [ %6999, %6996 ], [ %7006, %7000 ], [ %7009, %7007 ]
  %7014 = add i32 %7013, %6930
  %7015 = add i32 %6731, 2
  %7016 = icmp ult i32 %7015, %7012
  br i1 %7016, label %7030, label %7017

7017:                                             ; preds = %7010
  %7018 = load i32*, i32** %173, align 8
  %7019 = icmp eq i32* %7018, null
  br i1 %7019, label %7049, label %7020

7020:                                             ; preds = %7017
  %7021 = load i32, i32* %7018, align 4
  %7022 = icmp eq i32 %7021, 0
  br i1 %7022, label %7023, label %7049

7023:                                             ; preds = %7020
  store i32 130, i32* %7018, align 4
  %7024 = load i64, i64* %187, align 8
  %7025 = load i64, i64* %208, align 8
  %7026 = sub i64 %7024, %7025
  %7027 = lshr exact i64 %7026, 3
  %7028 = trunc i64 %7027 to i32
  %7029 = inttoptr i64 %7025 to %struct.CF2_StackNumber_*
  br label %7049

7030:                                             ; preds = %7010
  %7031 = zext i32 %7015 to i64
  %7032 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7011, i64 %7031
  %7033 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7011, i64 %7031, i32 1
  %7034 = load i32, i32* %7033, align 4
  switch i32 %7034, label %7046 [
    i32 2, label %7035
    i32 1, label %7039
  ]

7035:                                             ; preds = %7030
  %7036 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7032, i64 0, i32 0, i32 0
  %7037 = load i32, i32* %7036, align 4
  %7038 = shl i32 %7037, 16
  br label %7049

7039:                                             ; preds = %7030
  %7040 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7032, i64 0, i32 0, i32 0
  %7041 = load i32, i32* %7040, align 4
  %7042 = add nsw i32 %7041, 8192
  %7043 = ashr i32 %7041, 31
  %7044 = add nsw i32 %7042, %7043
  %7045 = ashr i32 %7044, 14
  br label %7049

7046:                                             ; preds = %7030
  %7047 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7032, i64 0, i32 0, i32 0
  %7048 = load i32, i32* %7047, align 4
  br label %7049

7049:                                             ; preds = %7017, %7020, %7023, %7035, %7039, %7046
  %7050 = phi %struct.CF2_StackNumber_* [ %7011, %7017 ], [ %7011, %7020 ], [ %7029, %7023 ], [ %7011, %7035 ], [ %7011, %7039 ], [ %7011, %7046 ]
  %7051 = phi i32 [ %7012, %7017 ], [ %7012, %7020 ], [ %7028, %7023 ], [ %7012, %7035 ], [ %7012, %7039 ], [ %7012, %7046 ]
  %7052 = phi i32 [ 0, %7017 ], [ 0, %7020 ], [ 0, %7023 ], [ %7038, %7035 ], [ %7045, %7039 ], [ %7048, %7046 ]
  %7053 = add i32 %7052, %6975
  %7054 = add i32 %6731, 3
  %7055 = icmp ult i32 %7054, %7051
  br i1 %7055, label %7063, label %7056

7056:                                             ; preds = %7049
  %7057 = load i32*, i32** %173, align 8
  %7058 = icmp eq i32* %7057, null
  br i1 %7058, label %7082, label %7059

7059:                                             ; preds = %7056
  %7060 = load i32, i32* %7057, align 4
  %7061 = icmp eq i32 %7060, 0
  br i1 %7061, label %7062, label %7082

7062:                                             ; preds = %7059
  store i32 130, i32* %7057, align 4
  br label %7082

7063:                                             ; preds = %7049
  %7064 = zext i32 %7054 to i64
  %7065 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7050, i64 %7064
  %7066 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7050, i64 %7064, i32 1
  %7067 = load i32, i32* %7066, align 4
  switch i32 %7067, label %7079 [
    i32 2, label %7068
    i32 1, label %7072
  ]

7068:                                             ; preds = %7063
  %7069 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7065, i64 0, i32 0, i32 0
  %7070 = load i32, i32* %7069, align 4
  %7071 = shl i32 %7070, 16
  br label %7082

7072:                                             ; preds = %7063
  %7073 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7065, i64 0, i32 0, i32 0
  %7074 = load i32, i32* %7073, align 4
  %7075 = add nsw i32 %7074, 8192
  %7076 = ashr i32 %7074, 31
  %7077 = add nsw i32 %7075, %7076
  %7078 = ashr i32 %7077, 14
  br label %7082

7079:                                             ; preds = %7063
  %7080 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7065, i64 0, i32 0, i32 0
  %7081 = load i32, i32* %7080, align 4
  br label %7082

7082:                                             ; preds = %7056, %7059, %7062, %7068, %7072, %7079
  %7083 = phi i32 [ %7081, %7079 ], [ %7078, %7072 ], [ %7071, %7068 ], [ 0, %7056 ], [ 0, %7059 ], [ 0, %7062 ]
  %7084 = add i32 %7083, %7014
  %7085 = sub i32 %6723, %6731
  %7086 = icmp eq i32 %7085, 5
  br i1 %7086, label %7087, label %7125

7087:                                             ; preds = %7082
  %7088 = add i32 %6731, 4
  %7089 = load i64, i64* %187, align 8
  %7090 = load i64, i64* %208, align 8
  %7091 = sub i64 %7089, %7090
  %7092 = lshr exact i64 %7091, 3
  %7093 = trunc i64 %7092 to i32
  %7094 = icmp ult i32 %7088, %7093
  %7095 = inttoptr i64 %7090 to %struct.CF2_StackNumber_*
  br i1 %7094, label %7103, label %7096

7096:                                             ; preds = %7087
  %7097 = load i32*, i32** %173, align 8
  %7098 = icmp eq i32* %7097, null
  br i1 %7098, label %7122, label %7099

7099:                                             ; preds = %7096
  %7100 = load i32, i32* %7097, align 4
  %7101 = icmp eq i32 %7100, 0
  br i1 %7101, label %7102, label %7122

7102:                                             ; preds = %7099
  store i32 130, i32* %7097, align 4
  br label %7122

7103:                                             ; preds = %7087
  %7104 = zext i32 %7088 to i64
  %7105 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7095, i64 %7104
  %7106 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7095, i64 %7104, i32 1
  %7107 = load i32, i32* %7106, align 4
  switch i32 %7107, label %7119 [
    i32 2, label %7108
    i32 1, label %7112
  ]

7108:                                             ; preds = %7103
  %7109 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7105, i64 0, i32 0, i32 0
  %7110 = load i32, i32* %7109, align 4
  %7111 = shl i32 %7110, 16
  br label %7122

7112:                                             ; preds = %7103
  %7113 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7105, i64 0, i32 0, i32 0
  %7114 = load i32, i32* %7113, align 4
  %7115 = add nsw i32 %7114, 8192
  %7116 = ashr i32 %7114, 31
  %7117 = add nsw i32 %7115, %7116
  %7118 = ashr i32 %7117, 14
  br label %7122

7119:                                             ; preds = %7103
  %7120 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7105, i64 0, i32 0, i32 0
  %7121 = load i32, i32* %7120, align 4
  br label %7122

7122:                                             ; preds = %7096, %7099, %7102, %7108, %7112, %7119
  %7123 = phi i32 [ %7121, %7119 ], [ %7118, %7112 ], [ %7111, %7108 ], [ 0, %7096 ], [ 0, %7099 ], [ 0, %7102 ]
  %7124 = add i32 %7123, %7053
  br label %7125

7125:                                             ; preds = %7122, %7082, %6926, %6886
  %7126 = phi i32 [ %6780, %6926 ], [ %6731, %6886 ], [ %6976, %7122 ], [ %6731, %7082 ]
  %7127 = phi i8 [ 0, %6926 ], [ 0, %6886 ], [ 1, %7122 ], [ 1, %7082 ]
  %7128 = phi i32 [ %6778, %6926 ], [ %6778, %6886 ], [ %6930, %7122 ], [ %6930, %7082 ]
  %7129 = phi i32 [ %6818, %6926 ], [ %6818, %6886 ], [ %7014, %7122 ], [ %7014, %7082 ]
  %7130 = phi i32 [ %6928, %6926 ], [ %6818, %6886 ], [ %7084, %7122 ], [ %7084, %7082 ]
  %7131 = phi i32 [ %6779, %6926 ], [ %6779, %6886 ], [ %6975, %7122 ], [ %6975, %7082 ]
  %7132 = phi i32 [ %6857, %6926 ], [ %6857, %6886 ], [ %7053, %7122 ], [ %7053, %7082 ]
  %7133 = phi i32 [ %6888, %6926 ], [ %6888, %6886 ], [ %7124, %7122 ], [ %7053, %7082 ]
  call fastcc void @cf2_glyphpath_curveTo(%struct.CF2_GlyphPathRec_* nonnull %28, i32 %7128, i32 %7131, i32 %7129, i32 %7132, i32 %7130, i32 %7133)
  store i32 %7130, i32* %19, align 4
  store i32 %7133, i32* %20, align 4
  %7134 = add i32 %7126, 4
  %7135 = icmp ugt i32 %6723, %7134
  br i1 %7135, label %6729, label %7136

7136:                                             ; preds = %7125
  %7137 = load i64, i64* %208, align 8
  br label %7138

7138:                                             ; preds = %7136, %6717
  %7139 = phi i64 [ %7137, %7136 ], [ %6719, %6717 ]
  store i64 %7139, i64* %187, align 8
  br label %4123

7140:                                             ; preds = %330
  %7141 = icmp ult i8* %291, %278
  br i1 %7141, label %7142, label %7146

7142:                                             ; preds = %7140
  %7143 = getelementptr inbounds i8, i8* %291, i64 1
  store i8* %7143, i8** %275, align 8
  %7144 = load i8, i8* %291, align 1
  %7145 = zext i8 %7144 to i32
  br label %7156

7146:                                             ; preds = %7140
  %7147 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  %7148 = load i32*, i32** %7147, align 8
  %7149 = icmp eq i32* %7148, null
  br i1 %7149, label %7156, label %7150

7150:                                             ; preds = %7146
  %7151 = load i32, i32* %7148, align 4
  %7152 = icmp eq i32 %7151, 0
  br i1 %7152, label %7153, label %7156

7153:                                             ; preds = %7150
  store i32 85, i32* %7148, align 4
  %7154 = load i8*, i8** %275, align 8
  %7155 = load i8*, i8** %277, align 8
  br label %7156

7156:                                             ; preds = %7142, %7146, %7150, %7153
  %7157 = phi i8* [ %278, %7142 ], [ %278, %7146 ], [ %278, %7150 ], [ %7155, %7153 ]
  %7158 = phi i8* [ %7143, %7142 ], [ %291, %7146 ], [ %291, %7150 ], [ %7154, %7153 ]
  %7159 = phi i32 [ %7145, %7142 ], [ 0, %7146 ], [ 0, %7150 ], [ 0, %7153 ]
  %7160 = icmp ult i8* %7158, %7157
  br i1 %7160, label %7161, label %7165

7161:                                             ; preds = %7156
  %7162 = getelementptr inbounds i8, i8* %7158, i64 1
  store i8* %7162, i8** %275, align 8
  %7163 = load i8, i8* %7158, align 1
  %7164 = zext i8 %7163 to i32
  br label %7173

7165:                                             ; preds = %7156
  %7166 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  %7167 = load i32*, i32** %7166, align 8
  %7168 = icmp eq i32* %7167, null
  br i1 %7168, label %7173, label %7169

7169:                                             ; preds = %7165
  %7170 = load i32, i32* %7167, align 4
  %7171 = icmp eq i32 %7170, 0
  br i1 %7171, label %7172, label %7173

7172:                                             ; preds = %7169
  store i32 85, i32* %7167, align 4
  br label %7173

7173:                                             ; preds = %7161, %7165, %7169, %7172
  %7174 = phi i32 [ %7164, %7161 ], [ 0, %7165 ], [ 0, %7169 ], [ 0, %7172 ]
  %7175 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7176 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %7177 = load i32, i32* %185, align 8
  %7178 = zext i32 %7177 to i64
  %7179 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7176, i64 %7178
  %7180 = icmp eq %struct.CF2_StackNumber_* %7175, %7179
  br i1 %7180, label %7181, label %7188

7181:                                             ; preds = %7173
  %7182 = load i32*, i32** %173, align 8
  %7183 = icmp eq i32* %7182, null
  br i1 %7183, label %4123, label %7184

7184:                                             ; preds = %7181
  %7185 = load i32, i32* %7182, align 4
  %7186 = icmp eq i32 %7185, 0
  br i1 %7186, label %7187, label %4123

7187:                                             ; preds = %7184
  store i32 130, i32* %7182, align 4
  br label %4123

7188:                                             ; preds = %7173
  %7189 = shl nuw nsw i32 %7159, 8
  %7190 = or i32 %7174, %7189
  %7191 = shl nuw i32 %7190, 16
  %7192 = ashr exact i32 %7191, 16
  %7193 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7175, i64 0, i32 0, i32 0
  store i32 %7192, i32* %7193, align 4
  %7194 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7195 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7194, i64 0, i32 1
  store i32 2, i32* %7195, align 4
  %7196 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7197 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7196, i64 1
  store %struct.CF2_StackNumber_* %7197, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

7198:                                             ; preds = %330
  %7199 = icmp ult i8 %292, -9
  br i1 %7199, label %7200, label %7221

7200:                                             ; preds = %7198
  %7201 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7202 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %7203 = load i32, i32* %185, align 8
  %7204 = zext i32 %7203 to i64
  %7205 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7202, i64 %7204
  %7206 = icmp eq %struct.CF2_StackNumber_* %7201, %7205
  br i1 %7206, label %7207, label %7214

7207:                                             ; preds = %7200
  %7208 = load i32*, i32** %173, align 8
  %7209 = icmp eq i32* %7208, null
  br i1 %7209, label %4123, label %7210

7210:                                             ; preds = %7207
  %7211 = load i32, i32* %7208, align 4
  %7212 = icmp eq i32 %7211, 0
  br i1 %7212, label %7213, label %4123

7213:                                             ; preds = %7210
  store i32 130, i32* %7208, align 4
  br label %4123

7214:                                             ; preds = %7200
  %7215 = add nsw i32 %331, -139
  %7216 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7201, i64 0, i32 0, i32 0
  store i32 %7215, i32* %7216, align 4
  %7217 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7218 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7217, i64 0, i32 1
  store i32 2, i32* %7218, align 4
  %7219 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7220 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7219, i64 1
  store %struct.CF2_StackNumber_* %7220, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

7221:                                             ; preds = %7198
  %7222 = icmp ult i8 %292, -5
  br i1 %7222, label %7223, label %7262

7223:                                             ; preds = %7221
  %7224 = shl nuw nsw i32 %331, 8
  %7225 = add nsw i32 %7224, -63232
  %7226 = icmp ult i8* %291, %278
  br i1 %7226, label %7227, label %7231

7227:                                             ; preds = %7223
  %7228 = getelementptr inbounds i8, i8* %291, i64 1
  store i8* %7228, i8** %275, align 8
  %7229 = load i8, i8* %291, align 1
  %7230 = zext i8 %7229 to i32
  br label %7239

7231:                                             ; preds = %7223
  %7232 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  %7233 = load i32*, i32** %7232, align 8
  %7234 = icmp eq i32* %7233, null
  br i1 %7234, label %7239, label %7235

7235:                                             ; preds = %7231
  %7236 = load i32, i32* %7233, align 4
  %7237 = icmp eq i32 %7236, 0
  br i1 %7237, label %7238, label %7239

7238:                                             ; preds = %7235
  store i32 85, i32* %7233, align 4
  br label %7239

7239:                                             ; preds = %7227, %7231, %7235, %7238
  %7240 = phi i32 [ %7230, %7227 ], [ 0, %7231 ], [ 0, %7235 ], [ 0, %7238 ]
  %7241 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7242 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %7243 = load i32, i32* %185, align 8
  %7244 = zext i32 %7243 to i64
  %7245 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7242, i64 %7244
  %7246 = icmp eq %struct.CF2_StackNumber_* %7241, %7245
  br i1 %7246, label %7247, label %7254

7247:                                             ; preds = %7239
  %7248 = load i32*, i32** %173, align 8
  %7249 = icmp eq i32* %7248, null
  br i1 %7249, label %4123, label %7250

7250:                                             ; preds = %7247
  %7251 = load i32, i32* %7248, align 4
  %7252 = icmp eq i32 %7251, 0
  br i1 %7252, label %7253, label %4123

7253:                                             ; preds = %7250
  store i32 130, i32* %7248, align 4
  br label %4123

7254:                                             ; preds = %7239
  %7255 = or i32 %7240, %7225
  %7256 = add nsw i32 %7255, 108
  %7257 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7241, i64 0, i32 0, i32 0
  store i32 %7256, i32* %7257, align 4
  %7258 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7259 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7258, i64 0, i32 1
  store i32 2, i32* %7259, align 4
  %7260 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7261 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7260, i64 1
  store %struct.CF2_StackNumber_* %7261, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

7262:                                             ; preds = %7221
  %7263 = icmp eq i8 %292, -1
  br i1 %7263, label %7303, label %7264

7264:                                             ; preds = %7262
  %7265 = shl nuw nsw i32 %331, 8
  %7266 = add nsw i32 %7265, -64256
  %7267 = icmp ult i8* %291, %278
  br i1 %7267, label %7268, label %7272

7268:                                             ; preds = %7264
  %7269 = getelementptr inbounds i8, i8* %291, i64 1
  store i8* %7269, i8** %275, align 8
  %7270 = load i8, i8* %291, align 1
  %7271 = zext i8 %7270 to i32
  br label %7280

7272:                                             ; preds = %7264
  %7273 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  %7274 = load i32*, i32** %7273, align 8
  %7275 = icmp eq i32* %7274, null
  br i1 %7275, label %7280, label %7276

7276:                                             ; preds = %7272
  %7277 = load i32, i32* %7274, align 4
  %7278 = icmp eq i32 %7277, 0
  br i1 %7278, label %7279, label %7280

7279:                                             ; preds = %7276
  store i32 85, i32* %7274, align 4
  br label %7280

7280:                                             ; preds = %7268, %7272, %7276, %7279
  %7281 = phi i32 [ %7271, %7268 ], [ 0, %7272 ], [ 0, %7276 ], [ 0, %7279 ]
  %7282 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7283 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %7284 = load i32, i32* %185, align 8
  %7285 = zext i32 %7284 to i64
  %7286 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7283, i64 %7285
  %7287 = icmp eq %struct.CF2_StackNumber_* %7282, %7286
  br i1 %7287, label %7288, label %7295

7288:                                             ; preds = %7280
  %7289 = load i32*, i32** %173, align 8
  %7290 = icmp eq i32* %7289, null
  br i1 %7290, label %4123, label %7291

7291:                                             ; preds = %7288
  %7292 = load i32, i32* %7289, align 4
  %7293 = icmp eq i32 %7292, 0
  br i1 %7293, label %7294, label %4123

7294:                                             ; preds = %7291
  store i32 130, i32* %7289, align 4
  br label %4123

7295:                                             ; preds = %7280
  %7296 = or i32 %7281, %7266
  %7297 = sub nsw i32 -108, %7296
  %7298 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7282, i64 0, i32 0, i32 0
  store i32 %7297, i32* %7298, align 4
  %7299 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7300 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7299, i64 0, i32 1
  store i32 2, i32* %7300, align 4
  %7301 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7302 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7301, i64 1
  store %struct.CF2_StackNumber_* %7302, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

7303:                                             ; preds = %7262
  %7304 = icmp ult i8* %291, %278
  br i1 %7304, label %7305, label %7309

7305:                                             ; preds = %7303
  %7306 = getelementptr inbounds i8, i8* %291, i64 1
  store i8* %7306, i8** %275, align 8
  %7307 = load i8, i8* %291, align 1
  %7308 = zext i8 %7307 to i32
  br label %7319

7309:                                             ; preds = %7303
  %7310 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  %7311 = load i32*, i32** %7310, align 8
  %7312 = icmp eq i32* %7311, null
  br i1 %7312, label %7319, label %7313

7313:                                             ; preds = %7309
  %7314 = load i32, i32* %7311, align 4
  %7315 = icmp eq i32 %7314, 0
  br i1 %7315, label %7316, label %7319

7316:                                             ; preds = %7313
  store i32 85, i32* %7311, align 4
  %7317 = load i8*, i8** %275, align 8
  %7318 = load i8*, i8** %277, align 8
  br label %7319

7319:                                             ; preds = %7305, %7309, %7313, %7316
  %7320 = phi i8* [ %278, %7305 ], [ %278, %7309 ], [ %278, %7313 ], [ %7318, %7316 ]
  %7321 = phi i8* [ %7306, %7305 ], [ %291, %7309 ], [ %291, %7313 ], [ %7317, %7316 ]
  %7322 = phi i32 [ %7308, %7305 ], [ 0, %7309 ], [ 0, %7313 ], [ 0, %7316 ]
  %7323 = icmp ult i8* %7321, %7320
  br i1 %7323, label %7324, label %7328

7324:                                             ; preds = %7319
  %7325 = getelementptr inbounds i8, i8* %7321, i64 1
  store i8* %7325, i8** %275, align 8
  %7326 = load i8, i8* %7321, align 1
  %7327 = zext i8 %7326 to i32
  br label %7338

7328:                                             ; preds = %7319
  %7329 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  %7330 = load i32*, i32** %7329, align 8
  %7331 = icmp eq i32* %7330, null
  br i1 %7331, label %7338, label %7332

7332:                                             ; preds = %7328
  %7333 = load i32, i32* %7330, align 4
  %7334 = icmp eq i32 %7333, 0
  br i1 %7334, label %7335, label %7338

7335:                                             ; preds = %7332
  store i32 85, i32* %7330, align 4
  %7336 = load i8*, i8** %275, align 8
  %7337 = load i8*, i8** %277, align 8
  br label %7338

7338:                                             ; preds = %7324, %7328, %7332, %7335
  %7339 = phi i8* [ %7320, %7324 ], [ %7320, %7328 ], [ %7320, %7332 ], [ %7337, %7335 ]
  %7340 = phi i8* [ %7325, %7324 ], [ %7321, %7328 ], [ %7321, %7332 ], [ %7336, %7335 ]
  %7341 = phi i32 [ %7327, %7324 ], [ 0, %7328 ], [ 0, %7332 ], [ 0, %7335 ]
  %7342 = icmp ult i8* %7340, %7339
  br i1 %7342, label %7343, label %7347

7343:                                             ; preds = %7338
  %7344 = getelementptr inbounds i8, i8* %7340, i64 1
  store i8* %7344, i8** %275, align 8
  %7345 = load i8, i8* %7340, align 1
  %7346 = zext i8 %7345 to i32
  br label %7357

7347:                                             ; preds = %7338
  %7348 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  %7349 = load i32*, i32** %7348, align 8
  %7350 = icmp eq i32* %7349, null
  br i1 %7350, label %7357, label %7351

7351:                                             ; preds = %7347
  %7352 = load i32, i32* %7349, align 4
  %7353 = icmp eq i32 %7352, 0
  br i1 %7353, label %7354, label %7357

7354:                                             ; preds = %7351
  store i32 85, i32* %7349, align 4
  %7355 = load i8*, i8** %275, align 8
  %7356 = load i8*, i8** %277, align 8
  br label %7357

7357:                                             ; preds = %7343, %7347, %7351, %7354
  %7358 = phi i8* [ %7339, %7343 ], [ %7339, %7347 ], [ %7339, %7351 ], [ %7356, %7354 ]
  %7359 = phi i8* [ %7344, %7343 ], [ %7340, %7347 ], [ %7340, %7351 ], [ %7355, %7354 ]
  %7360 = phi i32 [ %7346, %7343 ], [ 0, %7347 ], [ 0, %7351 ], [ 0, %7354 ]
  %7361 = icmp ult i8* %7359, %7358
  br i1 %7361, label %7362, label %7366

7362:                                             ; preds = %7357
  %7363 = getelementptr inbounds i8, i8* %7359, i64 1
  store i8* %7363, i8** %275, align 8
  %7364 = load i8, i8* %7359, align 1
  %7365 = zext i8 %7364 to i32
  br label %7374

7366:                                             ; preds = %7357
  %7367 = getelementptr inbounds %struct.CF2_BufferRec_, %struct.CF2_BufferRec_* %269, i64 0, i32 0
  %7368 = load i32*, i32** %7367, align 8
  %7369 = icmp eq i32* %7368, null
  br i1 %7369, label %7374, label %7370

7370:                                             ; preds = %7366
  %7371 = load i32, i32* %7368, align 4
  %7372 = icmp eq i32 %7371, 0
  br i1 %7372, label %7373, label %7374

7373:                                             ; preds = %7370
  store i32 85, i32* %7368, align 4
  br label %7374

7374:                                             ; preds = %7362, %7366, %7370, %7373
  %7375 = phi i32 [ %7365, %7362 ], [ 0, %7366 ], [ 0, %7370 ], [ 0, %7373 ]
  %7376 = shl nuw i32 %7322, 24
  %7377 = shl nuw nsw i32 %7341, 16
  %7378 = or i32 %7377, %7376
  %7379 = shl nuw nsw i32 %7360, 8
  %7380 = or i32 %7378, %7379
  %7381 = or i32 %7380, %7375
  %7382 = load i8, i8* %207, align 4
  %7383 = icmp eq i8 %7382, 0
  br i1 %7383, label %7409, label %7384

7384:                                             ; preds = %7374
  %7385 = add i32 %7381, 32000
  %7386 = icmp ult i32 %7385, 64001
  %7387 = icmp ne i8 %324, 0
  %7388 = or i1 %7387, %7386
  %7389 = select i1 %7388, i8 %324, i8 1
  %7390 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7391 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %7392 = load i32, i32* %185, align 8
  %7393 = zext i32 %7392 to i64
  %7394 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7391, i64 %7393
  %7395 = icmp eq %struct.CF2_StackNumber_* %7390, %7394
  br i1 %7395, label %7396, label %7403

7396:                                             ; preds = %7384
  %7397 = load i32*, i32** %173, align 8
  %7398 = icmp eq i32* %7397, null
  br i1 %7398, label %4123, label %7399

7399:                                             ; preds = %7396
  %7400 = load i32, i32* %7397, align 4
  %7401 = icmp eq i32 %7400, 0
  br i1 %7401, label %7402, label %4123

7402:                                             ; preds = %7399
  store i32 130, i32* %7397, align 4
  br label %4123

7403:                                             ; preds = %7384
  %7404 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7390, i64 0, i32 0, i32 0
  store i32 %7381, i32* %7404, align 4
  %7405 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7406 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7405, i64 0, i32 1
  store i32 2, i32* %7406, align 4
  %7407 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7408 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7407, i64 1
  store %struct.CF2_StackNumber_* %7408, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

7409:                                             ; preds = %7374
  %7410 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7411 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %210, align 8
  %7412 = load i32, i32* %185, align 8
  %7413 = zext i32 %7412 to i64
  %7414 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7411, i64 %7413
  %7415 = icmp eq %struct.CF2_StackNumber_* %7410, %7414
  br i1 %7415, label %7416, label %7423

7416:                                             ; preds = %7409
  %7417 = load i32*, i32** %173, align 8
  %7418 = icmp eq i32* %7417, null
  br i1 %7418, label %4123, label %7419

7419:                                             ; preds = %7416
  %7420 = load i32, i32* %7417, align 4
  %7421 = icmp eq i32 %7420, 0
  br i1 %7421, label %7422, label %4123

7422:                                             ; preds = %7419
  store i32 130, i32* %7417, align 4
  br label %4123

7423:                                             ; preds = %7409
  %7424 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7410, i64 0, i32 0, i32 0
  store i32 %7381, i32* %7424, align 4
  %7425 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7426 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7425, i64 0, i32 1
  store i32 0, i32* %7426, align 4
  %7427 = load %struct.CF2_StackNumber_*, %struct.CF2_StackNumber_** %209, align 8
  %7428 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %7427, i64 1
  store %struct.CF2_StackNumber_* %7428, %struct.CF2_StackNumber_** %209, align 8
  br label %4123

7429:                                             ; preds = %5662, %5612, %5203, %5201, %2491, %2489, %1392, %1385, %1401, %1878, %2343, %1400, %1637, %5059, %5124, %1377, %1377, %1377, %1377, %1377, %1377, %1382, %367, %5639, %5638, %5635, %5632, %360, %365, %332, %589, %582, %602, %595, %671, %1202, %5126, %5810, %5910, %5944, %5845, %5708, %1217, %705, %330, %330, %330, %5279
  %7430 = phi i32 [ %268, %5910 ], [ %268, %5944 ], [ %268, %5810 ], [ %268, %5845 ], [ %268, %5708 ], [ %5280, %5279 ], [ %268, %5126 ], [ %268, %1217 ], [ %268, %1202 ], [ %268, %671 ], [ %268, %705 ], [ %268, %602 ], [ %268, %595 ], [ %268, %589 ], [ %268, %582 ], [ %268, %332 ], [ %268, %330 ], [ %268, %330 ], [ %268, %330 ], [ %268, %365 ], [ %268, %360 ], [ %268, %5632 ], [ %268, %5635 ], [ %268, %5638 ], [ %268, %5639 ], [ %268, %367 ], [ %268, %1382 ], [ %268, %1377 ], [ %268, %1377 ], [ %268, %1377 ], [ %268, %1377 ], [ %268, %1377 ], [ %268, %1377 ], [ %268, %5124 ], [ %268, %5059 ], [ %268, %1637 ], [ %268, %1400 ], [ %268, %2343 ], [ %268, %1878 ], [ %268, %1401 ], [ %268, %1385 ], [ %268, %1392 ], [ %268, %2489 ], [ %268, %2491 ], [ %268, %5201 ], [ %268, %5203 ], [ %268, %5612 ], [ %268, %5662 ]
  %7431 = phi %struct.CF2_BufferRec_* [ %269, %5910 ], [ %269, %5944 ], [ %269, %5810 ], [ %269, %5845 ], [ %269, %5708 ], [ %5281, %5279 ], [ %269, %5126 ], [ %269, %1217 ], [ %269, %1202 ], [ %269, %671 ], [ %269, %705 ], [ %269, %602 ], [ %269, %595 ], [ %269, %589 ], [ %269, %582 ], [ %269, %332 ], [ %269, %330 ], [ %269, %330 ], [ %269, %330 ], [ %269, %365 ], [ %269, %360 ], [ %269, %5632 ], [ %269, %5635 ], [ %269, %5638 ], [ %269, %5639 ], [ %269, %367 ], [ %269, %1382 ], [ %269, %1377 ], [ %269, %1377 ], [ %269, %1377 ], [ %269, %1377 ], [ %269, %1377 ], [ %269, %1377 ], [ %269, %5124 ], [ %269, %5059 ], [ %269, %1637 ], [ %269, %1400 ], [ %269, %2343 ], [ %269, %1878 ], [ %269, %1401 ], [ %269, %1385 ], [ %269, %1392 ], [ %269, %2489 ], [ %269, %2491 ], [ %269, %5201 ], [ %269, %5203 ], [ %269, %5612 ], [ %269, %5662 ]
  %7432 = phi i32 [ %323, %5910 ], [ %323, %5944 ], [ %323, %5810 ], [ %323, %5845 ], [ %323, %5708 ], [ %323, %5279 ], [ %323, %5126 ], [ %323, %1217 ], [ %323, %1202 ], [ %323, %671 ], [ %323, %705 ], [ %323, %602 ], [ %323, %595 ], [ %323, %589 ], [ %323, %582 ], [ %323, %332 ], [ %323, %330 ], [ %323, %330 ], [ %323, %330 ], [ %323, %365 ], [ %323, %360 ], [ %323, %5632 ], [ %323, %5635 ], [ %323, %5638 ], [ %323, %5639 ], [ %323, %367 ], [ %323, %1382 ], [ %323, %1377 ], [ %323, %1377 ], [ %323, %1377 ], [ %323, %1377 ], [ %323, %1377 ], [ %323, %1377 ], [ %323, %5124 ], [ %323, %5059 ], [ %323, %1637 ], [ %323, %1400 ], [ %323, %2343 ], [ %323, %1878 ], [ %323, %1401 ], [ %323, %1385 ], [ 0, %1392 ], [ %323, %2489 ], [ %323, %2491 ], [ %323, %5201 ], [ %323, %5203 ], [ %323, %5612 ], [ %323, %5662 ]
  %7433 = phi i8 [ %272, %5910 ], [ %272, %5944 ], [ %272, %5810 ], [ %272, %5845 ], [ %272, %5708 ], [ 1, %5279 ], [ %272, %5126 ], [ %272, %1217 ], [ %272, %1202 ], [ %272, %671 ], [ %272, %705 ], [ %272, %602 ], [ %272, %595 ], [ %272, %589 ], [ %272, %582 ], [ %272, %332 ], [ %272, %330 ], [ %272, %330 ], [ %272, %330 ], [ %272, %365 ], [ %272, %360 ], [ %272, %5632 ], [ %272, %5635 ], [ %272, %5638 ], [ %272, %5639 ], [ %272, %367 ], [ %272, %1382 ], [ %272, %1377 ], [ %272, %1377 ], [ %272, %1377 ], [ %272, %1377 ], [ %272, %1377 ], [ %272, %1377 ], [ %272, %5124 ], [ %272, %5059 ], [ %272, %1637 ], [ %272, %1400 ], [ %272, %2343 ], [ %272, %1878 ], [ %272, %1401 ], [ %272, %1385 ], [ %272, %1392 ], [ 0, %2489 ], [ %272, %2491 ], [ 0, %5201 ], [ %272, %5203 ], [ %272, %5612 ], [ %272, %5662 ]
  %7434 = load i64, i64* %208, align 8
  store i64 %7434, i64* %187, align 8
  br label %4123

7435:                                             ; preds = %3720, %3717, %3826, %3831, %3801, %3426, %3431, %3401, %3211, %3190, %4116, %3234, %3165, %3114, %3186, %3448, %3534, %3620, %3774, %3713, %3895, %3900, %3870, %3929, %4083, %3243, %3240, %3182, %3118, %3121, %2472, %4178, %1294, %1273, %1218, %413, %382, %370, %5191, %1353, %335, %327, %589, %602, %638, %5622, %5740, %5877, %322, %1637, %2341, %181, %5610, %182, %5337, %5334, %5317, %200, %5340
  %7436 = phi i1 [ true, %182 ], [ false, %5610 ], [ false, %5340 ], [ false, %5337 ], [ false, %5334 ], [ false, %5317 ], [ false, %200 ], [ true, %181 ], [ false, %2341 ], [ false, %1637 ], [ false, %322 ], [ false, %5877 ], [ false, %5740 ], [ false, %5622 ], [ false, %638 ], [ false, %602 ], [ false, %589 ], [ false, %327 ], [ false, %335 ], [ false, %1353 ], [ false, %5191 ], [ false, %370 ], [ false, %382 ], [ false, %413 ], [ false, %1218 ], [ false, %1273 ], [ false, %1294 ], [ false, %4178 ], [ false, %2472 ], [ false, %3121 ], [ false, %3118 ], [ false, %3182 ], [ false, %3240 ], [ false, %3243 ], [ false, %4083 ], [ false, %3929 ], [ false, %3870 ], [ false, %3900 ], [ false, %3895 ], [ false, %3713 ], [ false, %3774 ], [ false, %3620 ], [ false, %3534 ], [ false, %3448 ], [ false, %3186 ], [ false, %3114 ], [ false, %3165 ], [ false, %3234 ], [ false, %4116 ], [ false, %3190 ], [ false, %3211 ], [ false, %3401 ], [ false, %3431 ], [ false, %3426 ], [ false, %3801 ], [ false, %3831 ], [ false, %3826 ], [ false, %3717 ], [ false, %3720 ]
  %7437 = phi i8* [ null, %182 ], [ %166, %5610 ], [ %166, %5340 ], [ %166, %5337 ], [ %166, %5334 ], [ %166, %5317 ], [ %166, %200 ], [ null, %181 ], [ %166, %2341 ], [ %166, %1637 ], [ %166, %322 ], [ %166, %5877 ], [ %166, %5740 ], [ %166, %5622 ], [ %166, %638 ], [ %166, %602 ], [ %166, %589 ], [ %166, %327 ], [ %166, %335 ], [ %166, %1353 ], [ %166, %5191 ], [ %166, %370 ], [ %166, %382 ], [ %166, %413 ], [ %166, %1218 ], [ %166, %1273 ], [ %166, %1294 ], [ %166, %4178 ], [ %166, %2472 ], [ %166, %3121 ], [ %166, %3118 ], [ %166, %3182 ], [ %166, %3240 ], [ %166, %3243 ], [ %166, %4083 ], [ %166, %3929 ], [ %166, %3870 ], [ %166, %3900 ], [ %166, %3895 ], [ %166, %3713 ], [ %166, %3774 ], [ %166, %3620 ], [ %166, %3534 ], [ %166, %3448 ], [ %166, %3186 ], [ %166, %3114 ], [ %166, %3165 ], [ %166, %3234 ], [ %166, %4116 ], [ %166, %3190 ], [ %166, %3211 ], [ %166, %3401 ], [ %166, %3431 ], [ %166, %3426 ], [ %166, %3801 ], [ %166, %3831 ], [ %166, %3826 ], [ %166, %3717 ], [ %166, %3720 ]
  %7438 = phi %struct.CF2_StackRec_* [ null, %182 ], [ %167, %5610 ], [ %167, %5340 ], [ %167, %5337 ], [ %167, %5334 ], [ %167, %5317 ], [ %167, %200 ], [ null, %181 ], [ %167, %2341 ], [ %167, %1637 ], [ %167, %322 ], [ %167, %5877 ], [ %167, %5740 ], [ %167, %5622 ], [ %167, %638 ], [ %167, %602 ], [ %167, %589 ], [ %167, %327 ], [ %167, %335 ], [ %167, %1353 ], [ %167, %5191 ], [ %167, %370 ], [ %167, %382 ], [ %167, %413 ], [ %167, %1218 ], [ %167, %1273 ], [ %167, %1294 ], [ %167, %4178 ], [ %167, %2472 ], [ %167, %3121 ], [ %167, %3118 ], [ %167, %3182 ], [ %167, %3240 ], [ %167, %3243 ], [ %167, %4083 ], [ %167, %3929 ], [ %167, %3870 ], [ %167, %3900 ], [ %167, %3895 ], [ %167, %3713 ], [ %167, %3774 ], [ %167, %3620 ], [ %167, %3534 ], [ %167, %3448 ], [ %167, %3186 ], [ %167, %3114 ], [ %167, %3165 ], [ %167, %3234 ], [ %167, %4116 ], [ %167, %3190 ], [ %167, %3211 ], [ %167, %3401 ], [ %167, %3431 ], [ %167, %3426 ], [ %167, %3801 ], [ %167, %3831 ], [ %167, %3826 ], [ %167, %3717 ], [ %167, %3720 ]
  %7439 = phi i8* [ null, %182 ], [ %191, %5610 ], [ %191, %5340 ], [ %191, %5337 ], [ %191, %5334 ], [ %191, %5317 ], [ %191, %200 ], [ null, %181 ], [ %191, %2341 ], [ %191, %1637 ], [ %191, %322 ], [ %191, %5877 ], [ %191, %5740 ], [ %191, %5622 ], [ %191, %638 ], [ %191, %602 ], [ %191, %589 ], [ %191, %327 ], [ %191, %335 ], [ %191, %1353 ], [ %191, %5191 ], [ %191, %370 ], [ %191, %382 ], [ %191, %413 ], [ %191, %1218 ], [ %191, %1273 ], [ %191, %1294 ], [ %191, %4178 ], [ %191, %2472 ], [ %191, %3121 ], [ %191, %3118 ], [ %191, %3182 ], [ %191, %3240 ], [ %191, %3243 ], [ %191, %4083 ], [ %191, %3929 ], [ %191, %3870 ], [ %191, %3900 ], [ %191, %3895 ], [ %191, %3713 ], [ %191, %3774 ], [ %191, %3620 ], [ %191, %3534 ], [ %191, %3448 ], [ %191, %3186 ], [ %191, %3114 ], [ %191, %3165 ], [ %191, %3234 ], [ %191, %4116 ], [ %191, %3190 ], [ %191, %3211 ], [ %191, %3401 ], [ %191, %3431 ], [ %191, %3426 ], [ %191, %3801 ], [ %191, %3831 ], [ %191, %3826 ], [ %191, %3717 ], [ %191, %3720 ]
  %7440 = phi i32 [ 64, %182 ], [ %5611, %5610 ], [ 0, %5340 ], [ 0, %5337 ], [ 0, %5334 ], [ 0, %5317 ], [ 0, %200 ], [ 64, %181 ], [ %2342, %2341 ], [ 18, %3720 ], [ 18, %3717 ], [ 18, %3826 ], [ 18, %3831 ], [ 18, %3801 ], [ 18, %3426 ], [ 18, %3431 ], [ 18, %3401 ], [ 18, %3211 ], [ 18, %3190 ], [ 18, %4116 ], [ 18, %3234 ], [ 18, %3165 ], [ 18, %3114 ], [ 18, %3186 ], [ 18, %3448 ], [ 18, %3534 ], [ 18, %3620 ], [ 18, %3774 ], [ 18, %3713 ], [ 18, %3895 ], [ 18, %3900 ], [ 18, %3870 ], [ 18, %3929 ], [ 18, %4083 ], [ 18, %3243 ], [ 18, %3240 ], [ 0, %3182 ], [ 18, %3118 ], [ 18, %3121 ], [ 0, %2472 ], [ 18, %4178 ], [ 18, %1294 ], [ 18, %1273 ], [ 18, %1218 ], [ 18, %413 ], [ %389, %382 ], [ 18, %370 ], [ 0, %5191 ], [ 18, %1353 ], [ 18, %335 ], [ 18, %327 ], [ 0, %589 ], [ 0, %602 ], [ 0, %638 ], [ 0, %5622 ], [ 0, %5740 ], [ 0, %5877 ], [ 0, %322 ], [ 0, %1637 ]
  %7441 = icmp eq i32* %37, null
  br i1 %7441, label %7446, label %7442

7442:                                             ; preds = %7435
  %7443 = load i32, i32* %37, align 4
  %7444 = icmp eq i32 %7443, 0
  br i1 %7444, label %7445, label %7446

7445:                                             ; preds = %7442
  store i32 %7440, i32* %37, align 4
  br label %7446

7446:                                             ; preds = %199, %196, %7435, %7442, %7445
  %7447 = phi i8* [ %7439, %7435 ], [ %7439, %7442 ], [ %7439, %7445 ], [ %191, %196 ], [ %191, %199 ]
  %7448 = phi i8* [ %7437, %7435 ], [ %7437, %7442 ], [ %7437, %7445 ], [ %166, %196 ], [ %166, %199 ]
  %7449 = phi %struct.CF2_StackRec_* [ %7438, %7435 ], [ %7438, %7442 ], [ %7438, %7445 ], [ %167, %196 ], [ %167, %199 ]
  %7450 = phi i1 [ %7436, %7435 ], [ %7436, %7442 ], [ %7436, %7445 ], [ false, %196 ], [ false, %199 ]
  %7451 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 5, i32 0
  %7452 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %7451, align 8
  %7453 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %28, i64 0, i32 5, i32 6
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #11
  %7454 = load i8*, i8** %7453, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7452, i8* %7454) #11
  store i8* null, i8** %7453, align 8
  %7455 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %66, align 8
  %7456 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %26, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #11
  %7457 = load i8*, i8** %7456, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7455, i8* %7457) #11
  store i8* null, i8** %7456, align 8
  %7458 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %61, align 8
  %7459 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %25, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #11
  %7460 = load i8*, i8** %7459, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7458, i8* %7460) #11
  store i8* null, i8** %7459, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %39, i8* %7447) #11
  br i1 %7450, label %7467, label %7461

7461:                                             ; preds = %7446
  %7462 = getelementptr inbounds %struct.CF2_StackRec_, %struct.CF2_StackRec_* %7449, i64 0, i32 0
  %7463 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %7462, align 8
  %7464 = getelementptr inbounds %struct.CF2_StackRec_, %struct.CF2_StackRec_* %7449, i64 0, i32 2
  %7465 = bitcast %struct.CF2_StackNumber_** %7464 to i8**
  %7466 = load i8*, i8** %7465, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7463, i8* %7466) #11
  store %struct.CF2_StackNumber_* null, %struct.CF2_StackNumber_** %7464, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7463, i8* nonnull %7448) #11
  br label %7467

7467:                                             ; preds = %7461, %7446
  call void @llvm.lifetime.end.p0i8(i64 18872, i8* nonnull %60) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %58) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %57) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %48) #11
  ret void

7468:                                             ; preds = %5268
  %7469 = load i32, i32* %37, align 4
  %7470 = icmp eq i32 %7469, 0
  br i1 %7470, label %7471, label %7472

7471:                                             ; preds = %7468
  store i32 130, i32* %37, align 4
  br label %7472

7472:                                             ; preds = %7471, %7468, %5268
  %7473 = phi i64 [ %5273, %5268 ], [ 0, %7468 ], [ 0, %7471 ]
  %7474 = icmp sgt i32 %5269, 0
  br i1 %7474, label %5258, label %5274
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_computeDarkening(i32, i32, i32, i32* nocapture, i32, i8 zeroext, i32* nocapture readonly) unnamed_addr #0 {
  store i32 0, i32* %3, align 4
  %8 = icmp ne i32 %4, 0
  %9 = icmp ne i8 %5, 0
  %10 = or i1 %8, %9
  %11 = xor i1 %10, true
  %12 = icmp slt i32 %0, 655
  %13 = or i1 %12, %11
  br i1 %13, label %154, label %14

14:                                               ; preds = %7
  br i1 %9, label %15, label %150

15:                                               ; preds = %14
  %16 = load i32, i32* %6, align 4
  %17 = getelementptr inbounds i32, i32* %6, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds i32, i32* %6, i64 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds i32, i32* %6, i64 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds i32, i32* %6, i64 4
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds i32, i32* %6, i64 5
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds i32, i32* %6, i64 6
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds i32, i32* %6, i64 7
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %4, %2
  %32 = sext i32 %31 to i64
  %33 = sext i32 %0 to i64
  %34 = mul nsw i64 %32, %33
  %35 = ashr i64 %34, 63
  %36 = add nsw i64 %34, 32768
  %37 = add nsw i64 %36, %35
  %38 = lshr i64 %37, 16
  %39 = trunc i64 %38 to i32
  %40 = tail call i32 @llvm.ctlz.i32(i32 %39, i1 true), !range !52
  %41 = xor i32 %40, 31
  %42 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 true), !range !52
  %43 = xor i32 %42, 31
  %44 = add nuw nsw i32 %41, %43
  %45 = icmp ugt i32 %44, 45
  br i1 %45, label %46, label %48

46:                                               ; preds = %15
  %47 = shl i32 %28, 16
  br label %58

48:                                               ; preds = %15
  %49 = shl i64 %38, 32
  %50 = ashr exact i64 %49, 32
  %51 = sext i32 %1 to i64
  %52 = mul nsw i64 %50, %51
  %53 = ashr i64 %52, 63
  %54 = add nsw i64 %52, 32768
  %55 = add nsw i64 %54, %53
  %56 = lshr i64 %55, 16
  %57 = trunc i64 %56 to i32
  br label %58

58:                                               ; preds = %48, %46
  %59 = phi i32 [ %47, %46 ], [ %57, %48 ]
  %60 = shl i32 %16, 16
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %58
  %63 = shl i32 %18, 16
  %64 = sext i32 %63 to i64
  %65 = sext i32 %1 to i64
  %66 = tail call i64 @FT_DivFix(i64 %64, i64 %65) #11
  br label %141

67:                                               ; preds = %58
  %68 = shl i32 %20, 16
  %69 = icmp slt i32 %59, %68
  br i1 %69, label %70, label %88

70:                                               ; preds = %67
  %71 = sub nsw i32 %20, %16
  %72 = sext i32 %60 to i64
  %73 = sext i32 %1 to i64
  %74 = tail call i64 @FT_DivFix(i64 %72, i64 %73) #11
  %75 = icmp eq i32 %71, 0
  br i1 %75, label %93, label %76

76:                                               ; preds = %70
  %77 = sub i64 %38, %74
  %78 = sub nsw i32 %22, %18
  %79 = shl i64 %77, 32
  %80 = ashr exact i64 %79, 32
  %81 = sext i32 %78 to i64
  %82 = sext i32 %71 to i64
  %83 = tail call i64 @FT_MulDiv(i64 %80, i64 %81, i64 %82) #11
  %84 = shl i32 %18, 16
  %85 = sext i32 %84 to i64
  %86 = tail call i64 @FT_DivFix(i64 %85, i64 %73) #11
  %87 = add nsw i64 %86, %83
  br label %141

88:                                               ; preds = %67
  %89 = shl i32 %24, 16
  %90 = icmp slt i32 %59, %89
  br i1 %90, label %91, label %113

91:                                               ; preds = %88
  %92 = sext i32 %1 to i64
  br label %93

93:                                               ; preds = %91, %70
  %94 = phi i64 [ %92, %91 ], [ %73, %70 ]
  %95 = sub nsw i32 %24, %20
  %96 = sext i32 %68 to i64
  %97 = tail call i64 @FT_DivFix(i64 %96, i64 %94) #11
  %98 = icmp eq i32 %95, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = shl i32 %24, 16
  br label %117

101:                                              ; preds = %93
  %102 = sub i64 %38, %97
  %103 = sub nsw i32 %26, %22
  %104 = shl i64 %102, 32
  %105 = ashr exact i64 %104, 32
  %106 = sext i32 %103 to i64
  %107 = sext i32 %95 to i64
  %108 = tail call i64 @FT_MulDiv(i64 %105, i64 %106, i64 %107) #11
  %109 = shl i32 %22, 16
  %110 = sext i32 %109 to i64
  %111 = tail call i64 @FT_DivFix(i64 %110, i64 %94) #11
  %112 = add nsw i64 %111, %108
  br label %141

113:                                              ; preds = %88
  %114 = shl i32 %28, 16
  %115 = icmp slt i32 %59, %114
  %116 = sext i32 %1 to i64
  br i1 %115, label %117, label %136

117:                                              ; preds = %113, %99
  %118 = phi i64 [ %94, %99 ], [ %116, %113 ]
  %119 = phi i32 [ %100, %99 ], [ %89, %113 ]
  %120 = sub nsw i32 %28, %24
  %121 = sext i32 %119 to i64
  %122 = tail call i64 @FT_DivFix(i64 %121, i64 %118) #11
  %123 = icmp eq i32 %120, 0
  br i1 %123, label %136, label %124

124:                                              ; preds = %117
  %125 = sub i64 %38, %122
  %126 = sub nsw i32 %30, %26
  %127 = shl i64 %125, 32
  %128 = ashr exact i64 %127, 32
  %129 = sext i32 %126 to i64
  %130 = sext i32 %120 to i64
  %131 = tail call i64 @FT_MulDiv(i64 %128, i64 %129, i64 %130) #11
  %132 = shl i32 %26, 16
  %133 = sext i32 %132 to i64
  %134 = tail call i64 @FT_DivFix(i64 %133, i64 %118) #11
  %135 = add nsw i64 %134, %131
  br label %141

136:                                              ; preds = %113, %117
  %137 = phi i64 [ %118, %117 ], [ %116, %113 ]
  %138 = shl i32 %30, 16
  %139 = sext i32 %138 to i64
  %140 = tail call i64 @FT_DivFix(i64 %139, i64 %137) #11
  br label %141

141:                                              ; preds = %124, %101, %76, %136, %62
  %142 = phi i64 [ %135, %124 ], [ %112, %101 ], [ %87, %76 ], [ %140, %136 ], [ %66, %62 ]
  %143 = trunc i64 %142 to i32
  store i32 %143, i32* %3, align 4
  %144 = shl i64 %142, 32
  %145 = ashr exact i64 %144, 32
  %146 = shl nsw i32 %0, 1
  %147 = sext i32 %146 to i64
  %148 = tail call i64 @FT_DivFix(i64 %145, i64 %147) #11
  %149 = trunc i64 %148 to i32
  store i32 %149, i32* %3, align 4
  br label %150

150:                                              ; preds = %141, %14
  %151 = phi i32 [ %149, %141 ], [ 0, %14 ]
  %152 = sdiv i32 %4, 2
  %153 = add nsw i32 %151, %152
  store i32 %153, i32* %3, align 4
  br label %154

154:                                              ; preds = %7, %150
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

declare i64 @FT_MulDiv(i64, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_doStems(%struct.CF2_FontRec_* nocapture readonly, %struct.CF2_StackRec_* nocapture, %struct.CF2_ArrStackRec_* nocapture, i32* nocapture, i8* nocapture, i32) unnamed_addr #0 {
  %7 = alloca %struct.CF2_StemHintRec_, align 4
  %8 = getelementptr inbounds %struct.CF2_StackRec_, %struct.CF2_StackRec_* %1, i64 0, i32 3
  %9 = bitcast %struct.CF2_StackNumber_** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.CF2_StackRec_, %struct.CF2_StackRec_* %1, i64 0, i32 2
  %12 = bitcast %struct.CF2_StackNumber_** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %10, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = trunc i64 %15 to i8
  %18 = and i8 %17, 1
  %19 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 2
  %20 = load i8, i8* %19, align 4
  %21 = icmp ne i8 %20, 0
  %22 = icmp eq i8 %18, 0
  %23 = or i1 %21, %22
  br i1 %23, label %66, label %24

24:                                               ; preds = %6
  %25 = load i8, i8* %4, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %66

27:                                               ; preds = %24
  %28 = icmp eq i32 %16, 0
  %29 = inttoptr i64 %13 to %struct.CF2_StackNumber_*
  br i1 %28, label %30, label %38

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.CF2_StackRec_, %struct.CF2_StackRec_* %1, i64 0, i32 1
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %55, label %34

34:                                               ; preds = %30
  %35 = load i32, i32* %32, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %34
  store i32 130, i32* %32, align 4
  br label %55

38:                                               ; preds = %27
  %39 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %29, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  switch i32 %40, label %52 [
    i32 2, label %41
    i32 1, label %45
  ]

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %29, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = shl i32 %43, 16
  br label %55

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %29, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add nsw i32 %47, 8192
  %49 = ashr i32 %47, 31
  %50 = add nsw i32 %48, %49
  %51 = ashr i32 %50, 14
  br label %55

52:                                               ; preds = %38
  %53 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %29, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %30, %34, %37, %41, %45, %52
  %56 = phi i32 [ %54, %52 ], [ %51, %45 ], [ %44, %41 ], [ 0, %30 ], [ 0, %34 ], [ 0, %37 ]
  %57 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 17
  %58 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %57, align 8
  %59 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %58, i64 0, i32 9
  %60 = load %struct.CFF_SubFontRec_*, %struct.CFF_SubFontRec_** %59, align 8
  %61 = getelementptr inbounds %struct.CFF_SubFontRec_, %struct.CFF_SubFontRec_* %60, i64 0, i32 1, i32 25
  %62 = load i64, i64* %61, align 8
  %63 = trunc i64 %62 to i32
  %64 = shl i32 %63, 16
  %65 = add i32 %64, %56
  store i32 %65, i32* %3, align 4
  br label %66

66:                                               ; preds = %6, %24, %55
  %67 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %0, i64 0, i32 17
  %68 = load %struct.PS_Decoder_*, %struct.PS_Decoder_** %67, align 8
  %69 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %68, i64 0, i32 12
  %70 = load i8, i8* %69, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %164

72:                                               ; preds = %66
  %73 = zext i8 %18 to i32
  %74 = icmp ult i32 %73, %16
  br i1 %74, label %75, label %162

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.CF2_StemHintRec_, %struct.CF2_StemHintRec_* %7, i64 0, i32 0
  %77 = getelementptr inbounds %struct.CF2_StackRec_, %struct.CF2_StackRec_* %1, i64 0, i32 1
  %78 = getelementptr inbounds %struct.CF2_StemHintRec_, %struct.CF2_StemHintRec_* %7, i64 0, i32 1
  %79 = getelementptr inbounds %struct.CF2_StemHintRec_, %struct.CF2_StemHintRec_* %7, i64 0, i32 2
  %80 = getelementptr inbounds %struct.CF2_StemHintRec_, %struct.CF2_StemHintRec_* %7, i64 0, i32 3
  %81 = getelementptr inbounds %struct.CF2_StemHintRec_, %struct.CF2_StemHintRec_* %7, i64 0, i32 4
  br label %82

82:                                               ; preds = %75, %157
  %83 = phi i32 [ %5, %75 ], [ %159, %157 ]
  %84 = phi i32 [ %73, %75 ], [ %160, %157 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %76) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %76, i8 -86, i64 20, i1 false)
  %85 = load i64, i64* %9, align 8
  %86 = load i64, i64* %12, align 8
  %87 = sub i64 %85, %86
  %88 = lshr exact i64 %87, 3
  %89 = trunc i64 %88 to i32
  %90 = icmp ult i32 %84, %89
  %91 = inttoptr i64 %86 to %struct.CF2_StackNumber_*
  br i1 %90, label %105, label %92

92:                                               ; preds = %82
  %93 = load i32*, i32** %77, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %124, label %95

95:                                               ; preds = %92
  %96 = load i32, i32* %93, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %124

98:                                               ; preds = %95
  store i32 130, i32* %93, align 4
  %99 = load i64, i64* %9, align 8
  %100 = load i64, i64* %12, align 8
  %101 = sub i64 %99, %100
  %102 = lshr exact i64 %101, 3
  %103 = trunc i64 %102 to i32
  %104 = inttoptr i64 %100 to %struct.CF2_StackNumber_*
  br label %124

105:                                              ; preds = %82
  %106 = zext i32 %84 to i64
  %107 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %91, i64 %106
  %108 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %91, i64 %106, i32 1
  %109 = load i32, i32* %108, align 4
  switch i32 %109, label %121 [
    i32 2, label %110
    i32 1, label %114
  ]

110:                                              ; preds = %105
  %111 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %107, i64 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = shl i32 %112, 16
  br label %124

114:                                              ; preds = %105
  %115 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %107, i64 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = add nsw i32 %116, 8192
  %118 = ashr i32 %116, 31
  %119 = add nsw i32 %117, %118
  %120 = ashr i32 %119, 14
  br label %124

121:                                              ; preds = %105
  %122 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %107, i64 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  br label %124

124:                                              ; preds = %92, %95, %98, %110, %114, %121
  %125 = phi %struct.CF2_StackNumber_* [ %91, %92 ], [ %91, %95 ], [ %104, %98 ], [ %91, %110 ], [ %91, %114 ], [ %91, %121 ]
  %126 = phi i32 [ %89, %92 ], [ %89, %95 ], [ %103, %98 ], [ %89, %110 ], [ %89, %114 ], [ %89, %121 ]
  %127 = phi i32 [ 0, %92 ], [ 0, %95 ], [ 0, %98 ], [ %113, %110 ], [ %120, %114 ], [ %123, %121 ]
  %128 = add i32 %127, %83
  store i32 %128, i32* %78, align 4
  %129 = add nuw i32 %84, 1
  %130 = icmp ult i32 %129, %126
  br i1 %130, label %138, label %131

131:                                              ; preds = %124
  %132 = load i32*, i32** %77, align 8
  %133 = icmp eq i32* %132, null
  br i1 %133, label %157, label %134

134:                                              ; preds = %131
  %135 = load i32, i32* %132, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %157

137:                                              ; preds = %134
  store i32 130, i32* %132, align 4
  br label %157

138:                                              ; preds = %124
  %139 = zext i32 %129 to i64
  %140 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %125, i64 %139
  %141 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %125, i64 %139, i32 1
  %142 = load i32, i32* %141, align 4
  switch i32 %142, label %154 [
    i32 2, label %143
    i32 1, label %147
  ]

143:                                              ; preds = %138
  %144 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %140, i64 0, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = shl i32 %145, 16
  br label %157

147:                                              ; preds = %138
  %148 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %140, i64 0, i32 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = add nsw i32 %149, 8192
  %151 = ashr i32 %149, 31
  %152 = add nsw i32 %150, %151
  %153 = ashr i32 %152, 14
  br label %157

154:                                              ; preds = %138
  %155 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %140, i64 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  br label %157

157:                                              ; preds = %131, %134, %137, %143, %147, %154
  %158 = phi i32 [ %156, %154 ], [ %153, %147 ], [ %146, %143 ], [ 0, %131 ], [ 0, %134 ], [ 0, %137 ]
  %159 = add i32 %158, %128
  store i32 %159, i32* %79, align 4
  store i8 0, i8* %76, align 4
  store i32 0, i32* %80, align 4
  store i32 0, i32* %81, align 4
  call fastcc void @cf2_arrstack_push(%struct.CF2_ArrStackRec_* %2, i8* nonnull %76)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %76) #11
  %160 = add i32 %84, 2
  %161 = icmp ult i32 %160, %16
  br i1 %161, label %82, label %162

162:                                              ; preds = %157, %72
  %163 = load i64, i64* %12, align 8
  store i64 %163, i64* %9, align 8
  br label %164

164:                                              ; preds = %66, %162
  store i8 1, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_*, i32, i32) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.FT_Vector_, align 8
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 -1431655766, i32* %4, align 4
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 -1431655766, i32* %5, align 4
  %9 = bitcast %struct.FT_Vector_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %6, i64 0, i32 0
  %11 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %6, i64 0, i32 1
  %12 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 16
  %13 = bitcast %struct.FT_Vector_* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load %struct.CF2_HintMaskRec_*, %struct.CF2_HintMaskRec_** %12, align 8
  %15 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %14, i64 0, i32 2
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 11
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  %22 = zext i1 %21 to i8
  br label %23

23:                                               ; preds = %3, %18
  %24 = phi i8 [ 0, %3 ], [ %22, %18 ]
  %25 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 25, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = sext i32 %1 to i64
  %28 = icmp eq i64 %26, %27
  %29 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 25, i32 1
  %30 = load i64, i64* %29, align 8
  br i1 %28, label %31, label %36

31:                                               ; preds = %23
  %32 = sext i32 %2 to i64
  %33 = icmp ne i64 %30, %32
  %34 = icmp ne i8 %24, 0
  %35 = or i1 %34, %33
  br i1 %35, label %36, label %85

36:                                               ; preds = %23, %31
  %37 = trunc i64 %26 to i32
  %38 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 25, i32 1
  %39 = trunc i64 %30 to i32
  call fastcc void @cf2_glyphpath_computeOffset(%struct.CF2_GlyphPathRec_* %0, i32 %37, i32 %39, i32 %1, i32 %2, i32* nonnull %4, i32* nonnull %5)
  %40 = load i64, i64* %25, align 8
  %41 = trunc i64 %40 to i32
  %42 = load i32, i32* %4, align 4
  %43 = add i32 %42, %41
  %44 = sext i32 %43 to i64
  store i64 %44, i64* %10, align 8
  %45 = load i64, i64* %38, align 8
  %46 = trunc i64 %45 to i32
  %47 = load i32, i32* %5, align 4
  %48 = add i32 %47, %46
  %49 = sext i32 %48 to i64
  store i64 %49, i64* %11, align 8
  %50 = add i32 %42, %1
  %51 = sext i32 %50 to i64
  %52 = add i32 %47, %2
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 13
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %36
  tail call fastcc void @cf2_glyphpath_pushMove(%struct.CF2_GlyphPathRec_* %0, i64 %44, i64 %49)
  store i8 0, i8* %54, align 1
  %58 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 10
  store i8 1, i8* %58, align 8
  %59 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 24, i32 0
  store i64 %51, i64* %59, align 8
  %60 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 24, i32 1
  store i64 %53, i64* %60, align 8
  br label %61

61:                                               ; preds = %36, %57
  %62 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 28
  %63 = load i8, i8* %62, align 8
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 2
  call fastcc void @cf2_glyphpath_pushPrevElem(%struct.CF2_GlyphPathRec_* %0, %struct.CF2_HintMapRec_* %66, %struct.FT_Vector_* nonnull %6, i64 %51, i64 %53, i8 zeroext 0)
  br label %67

67:                                               ; preds = %61, %65
  store i8 1, i8* %62, align 8
  %68 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 29
  store i32 2, i32* %68, align 4
  %69 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 30
  %70 = bitcast %struct.FT_Vector_* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %9, i64 16, i1 false)
  %71 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31, i32 0
  store i64 %51, i64* %71, align 8
  %72 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31, i32 1
  store i64 %53, i64* %72, align 8
  %73 = icmp eq i8 %24, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 2
  %76 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 14
  %77 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %76, align 8
  %78 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 15
  %79 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %78, align 8
  %80 = load %struct.CF2_HintMaskRec_*, %struct.CF2_HintMaskRec_** %12, align 8
  %81 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 17
  %82 = load i32, i32* %81, align 8
  tail call fastcc void @cf2_hintmap_build(%struct.CF2_HintMapRec_* %75, %struct.CF2_ArrStackRec_* %77, %struct.CF2_ArrStackRec_* %79, %struct.CF2_HintMaskRec_* %80, i32 %82, i8 zeroext 0)
  br label %83

83:                                               ; preds = %67, %74
  store i64 %27, i64* %25, align 8
  %84 = sext i32 %2 to i64
  store i64 %84, i64* %38, align 8
  br label %85

85:                                               ; preds = %31, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_glyphpath_curveTo(%struct.CF2_GlyphPathRec_*, i32, i32, i32, i32, i32, i32) unnamed_addr #0 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.FT_Vector_, align 8
  %13 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %8, align 4
  %14 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 -1431655766, i32* %9, align 4
  %15 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  store i32 -1431655766, i32* %10, align 4
  %16 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 -1431655766, i32* %11, align 4
  %17 = bitcast %struct.FT_Vector_* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 0, i32 0
  %19 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 0, i32 1
  %20 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 25, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 25, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  call fastcc void @cf2_glyphpath_computeOffset(%struct.CF2_GlyphPathRec_* %0, i32 %22, i32 %25, i32 %1, i32 %2, i32* nonnull %8, i32* nonnull %9)
  call fastcc void @cf2_glyphpath_computeOffset(%struct.CF2_GlyphPathRec_* %0, i32 %3, i32 %4, i32 %5, i32 %6, i32* nonnull %10, i32* nonnull %11)
  %26 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 1
  %27 = load %struct.CF2_OutlineCallbacksRec_*, %struct.CF2_OutlineCallbacksRec_** %26, align 8
  %28 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %27, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = ashr i32 %1, 16
  %31 = sub i32 %4, %2
  %32 = ashr i32 %31, 16
  %33 = mul nsw i32 %32, %30
  %34 = ashr i32 %2, 16
  %35 = sub i32 %3, %1
  %36 = ashr i32 %35, 16
  %37 = mul nsw i32 %36, %34
  %38 = sub nsw i32 %33, %37
  %39 = add i32 %38, %29
  store i32 %39, i32* %28, align 8
  %40 = load i64, i64* %20, align 8
  %41 = trunc i64 %40 to i32
  %42 = load i32, i32* %8, align 4
  %43 = add i32 %42, %41
  %44 = sext i32 %43 to i64
  store i64 %44, i64* %18, align 8
  %45 = load i64, i64* %23, align 8
  %46 = trunc i64 %45 to i32
  %47 = load i32, i32* %9, align 4
  %48 = add i32 %47, %46
  %49 = sext i32 %48 to i64
  store i64 %49, i64* %19, align 8
  %50 = add i32 %42, %1
  %51 = sext i32 %50 to i64
  %52 = add i32 %47, %2
  %53 = sext i32 %52 to i64
  %54 = load i32, i32* %10, align 4
  %55 = add i32 %54, %3
  %56 = sext i32 %55 to i64
  %57 = load i32, i32* %11, align 4
  %58 = add i32 %57, %4
  %59 = sext i32 %58 to i64
  %60 = add i32 %54, %5
  %61 = sext i32 %60 to i64
  %62 = add i32 %57, %6
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 13
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %7
  tail call fastcc void @cf2_glyphpath_pushMove(%struct.CF2_GlyphPathRec_* %0, i64 %44, i64 %49)
  store i8 0, i8* %64, align 1
  %68 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 10
  store i8 1, i8* %68, align 8
  %69 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 24, i32 0
  store i64 %51, i64* %69, align 8
  %70 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 24, i32 1
  store i64 %53, i64* %70, align 8
  br label %71

71:                                               ; preds = %7, %67
  %72 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 28
  %73 = load i8, i8* %72, align 8
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 2
  call fastcc void @cf2_glyphpath_pushPrevElem(%struct.CF2_GlyphPathRec_* %0, %struct.CF2_HintMapRec_* %76, %struct.FT_Vector_* nonnull %12, i64 %51, i64 %53, i8 zeroext 0)
  br label %77

77:                                               ; preds = %71, %75
  store i8 1, i8* %72, align 8
  %78 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 29
  store i32 4, i32* %78, align 4
  %79 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 30
  %80 = bitcast %struct.FT_Vector_* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* nonnull align 8 %17, i64 16, i1 false)
  %81 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31, i32 0
  store i64 %51, i64* %81, align 8
  %82 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31, i32 1
  store i64 %53, i64* %82, align 8
  %83 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 32, i32 0
  store i64 %56, i64* %83, align 8
  %84 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 32, i32 1
  store i64 %59, i64* %84, align 8
  %85 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 33, i32 0
  store i64 %61, i64* %85, align 8
  %86 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 33, i32 1
  store i64 %63, i64* %86, align 8
  %87 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 16
  %88 = load %struct.CF2_HintMaskRec_*, %struct.CF2_HintMaskRec_** %87, align 8
  %89 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %88, i64 0, i32 2
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %77
  %93 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 2
  %94 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 14
  %95 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %94, align 8
  %96 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 15
  %97 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %96, align 8
  %98 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 17
  %99 = load i32, i32* %98, align 8
  tail call fastcc void @cf2_hintmap_build(%struct.CF2_HintMapRec_* %93, %struct.CF2_ArrStackRec_* %95, %struct.CF2_ArrStackRec_* %97, %struct.CF2_HintMaskRec_* %88, i32 %99, i8 zeroext 0)
  br label %100

100:                                              ; preds = %77, %92
  %101 = sext i32 %5 to i64
  store i64 %101, i64* %20, align 8
  %102 = sext i32 %6 to i64
  store i64 %102, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_doFlex(%struct.CF2_StackRec_* nocapture, i32* nocapture, i32* nocapture, %struct.CF2_GlyphPathRec_*, i8* nocapture readonly, i8 zeroext) unnamed_addr #0 {
  %7 = alloca [14 x i32], align 16
  %8 = bitcast [14 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 56, i1 false)
  %9 = load i32, i32* %1, align 4
  %10 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 0
  store i32 %9, i32* %10, align 16
  %11 = load i32, i32* %2, align 4
  %12 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 1
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %4, i64 9
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %struct.CF2_StackRec_, %struct.CF2_StackRec_* %0, i64 0, i32 3
  %17 = bitcast %struct.CF2_StackNumber_** %16 to i64*
  %18 = getelementptr inbounds %struct.CF2_StackRec_, %struct.CF2_StackRec_* %0, i64 0, i32 2
  %19 = bitcast %struct.CF2_StackNumber_** %18 to i64*
  %20 = getelementptr inbounds %struct.CF2_StackRec_, %struct.CF2_StackRec_* %0, i64 0, i32 1
  %21 = select i1 %15, i64 9, i64 10
  br label %22

22:                                               ; preds = %73, %6
  %23 = phi i32 [ %9, %6 ], [ %75, %73 ]
  %24 = phi i64 [ 0, %6 ], [ %71, %73 ]
  %25 = phi i32 [ 0, %6 ], [ %70, %73 ]
  %26 = add nuw nsw i64 %24, 2
  %27 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 %26
  store i32 %23, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %4, i64 %24
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %69, label %31

31:                                               ; preds = %22
  %32 = add i32 %25, 1
  %33 = load i64, i64* %17, align 8
  %34 = load i64, i64* %19, align 8
  %35 = sub i64 %33, %34
  %36 = lshr exact i64 %35, 3
  %37 = trunc i64 %36 to i32
  %38 = icmp ult i32 %25, %37
  %39 = inttoptr i64 %34 to %struct.CF2_StackNumber_*
  br i1 %38, label %47, label %40

40:                                               ; preds = %31
  %41 = load i32*, i32** %20, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %66, label %43

43:                                               ; preds = %40
  %44 = load i32, i32* %41, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %66

46:                                               ; preds = %43
  store i32 130, i32* %41, align 4
  br label %66

47:                                               ; preds = %31
  %48 = zext i32 %25 to i64
  %49 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %39, i64 %48
  %50 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %39, i64 %48, i32 1
  %51 = load i32, i32* %50, align 4
  switch i32 %51, label %63 [
    i32 2, label %52
    i32 1, label %56
  ]

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %49, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = shl i32 %54, 16
  br label %66

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %49, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, 8192
  %60 = ashr i32 %58, 31
  %61 = add nsw i32 %59, %60
  %62 = ashr i32 %61, 14
  br label %66

63:                                               ; preds = %47
  %64 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %49, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  br label %66

66:                                               ; preds = %40, %43, %46, %52, %56, %63
  %67 = phi i32 [ %65, %63 ], [ %62, %56 ], [ %55, %52 ], [ 0, %40 ], [ 0, %43 ], [ 0, %46 ]
  %68 = add i32 %67, %23
  store i32 %68, i32* %27, align 4
  br label %69

69:                                               ; preds = %22, %66
  %70 = phi i32 [ %32, %66 ], [ %25, %22 ]
  %71 = add nuw nsw i64 %24, 1
  %72 = icmp eq i64 %71, %21
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 %71
  %75 = load i32, i32* %74, align 4
  br label %22

76:                                               ; preds = %69
  br i1 %15, label %77, label %80

77:                                               ; preds = %76
  %78 = load i32, i32* %2, align 4
  %79 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 11
  store i32 %78, i32* %79, align 4
  br label %80

80:                                               ; preds = %77, %76
  %81 = icmp eq i8 %5, 0
  br i1 %81, label %143, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 10
  %84 = load i32, i32* %83, align 8
  %85 = load i32, i32* %1, align 4
  %86 = sub i32 %84, %85
  %87 = icmp slt i32 %86, 0
  %88 = sub i32 0, %86
  %89 = select i1 %87, i32 %88, i32 %86
  %90 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 11
  %91 = load i32, i32* %90, align 4
  %92 = load i32, i32* %2, align 4
  %93 = sub i32 %91, %92
  %94 = icmp slt i32 %93, 0
  %95 = sub i32 0, %93
  %96 = select i1 %94, i32 %95, i32 %93
  %97 = icmp sgt i32 %89, %96
  %98 = load i64, i64* %17, align 8
  %99 = load i64, i64* %19, align 8
  %100 = sub i64 %98, %99
  %101 = lshr exact i64 %100, 3
  %102 = trunc i64 %101 to i32
  %103 = icmp ult i32 %70, %102
  %104 = inttoptr i64 %99 to %struct.CF2_StackNumber_*
  br i1 %103, label %112, label %105

105:                                              ; preds = %82
  %106 = load i32*, i32** %20, align 8
  %107 = icmp eq i32* %106, null
  br i1 %107, label %131, label %108

108:                                              ; preds = %105
  %109 = load i32, i32* %106, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %131

111:                                              ; preds = %108
  store i32 130, i32* %106, align 4
  br label %131

112:                                              ; preds = %82
  %113 = zext i32 %70 to i64
  %114 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %104, i64 %113
  %115 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %104, i64 %113, i32 1
  %116 = load i32, i32* %115, align 4
  switch i32 %116, label %128 [
    i32 2, label %117
    i32 1, label %121
  ]

117:                                              ; preds = %112
  %118 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %114, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = shl i32 %119, 16
  br label %131

121:                                              ; preds = %112
  %122 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %114, i64 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = add nsw i32 %123, 8192
  %125 = ashr i32 %123, 31
  %126 = add nsw i32 %124, %125
  %127 = ashr i32 %126, 14
  br label %131

128:                                              ; preds = %112
  %129 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %114, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  br label %131

131:                                              ; preds = %105, %108, %111, %117, %121, %128
  %132 = phi i32 [ %130, %128 ], [ %127, %121 ], [ %120, %117 ], [ 0, %105 ], [ 0, %108 ], [ 0, %111 ]
  br i1 %97, label %133, label %138

133:                                              ; preds = %131
  %134 = load i32, i32* %83, align 8
  %135 = add i32 %134, %132
  %136 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 12
  store i32 %135, i32* %136, align 16
  %137 = load i32, i32* %2, align 4
  br label %240

138:                                              ; preds = %131
  %139 = load i32, i32* %1, align 4
  %140 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 12
  store i32 %139, i32* %140, align 16
  %141 = load i32, i32* %90, align 4
  %142 = add i32 %141, %132
  br label %240

143:                                              ; preds = %80
  %144 = getelementptr inbounds i8, i8* %4, i64 10
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %187, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 10
  %149 = load i32, i32* %148, align 8
  %150 = add i32 %70, 1
  %151 = load i64, i64* %17, align 8
  %152 = load i64, i64* %19, align 8
  %153 = sub i64 %151, %152
  %154 = lshr exact i64 %153, 3
  %155 = trunc i64 %154 to i32
  %156 = icmp ult i32 %70, %155
  %157 = inttoptr i64 %152 to %struct.CF2_StackNumber_*
  br i1 %156, label %165, label %158

158:                                              ; preds = %147
  %159 = load i32*, i32** %20, align 8
  %160 = icmp eq i32* %159, null
  br i1 %160, label %184, label %161

161:                                              ; preds = %158
  %162 = load i32, i32* %159, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %184

164:                                              ; preds = %161
  store i32 130, i32* %159, align 4
  br label %184

165:                                              ; preds = %147
  %166 = zext i32 %70 to i64
  %167 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %157, i64 %166
  %168 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %157, i64 %166, i32 1
  %169 = load i32, i32* %168, align 4
  switch i32 %169, label %181 [
    i32 2, label %170
    i32 1, label %174
  ]

170:                                              ; preds = %165
  %171 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %167, i64 0, i32 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = shl i32 %172, 16
  br label %184

174:                                              ; preds = %165
  %175 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %167, i64 0, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = add nsw i32 %176, 8192
  %178 = ashr i32 %176, 31
  %179 = add nsw i32 %177, %178
  %180 = ashr i32 %179, 14
  br label %184

181:                                              ; preds = %165
  %182 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %167, i64 0, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  br label %184

184:                                              ; preds = %158, %161, %164, %170, %174, %181
  %185 = phi i32 [ %183, %181 ], [ %180, %174 ], [ %173, %170 ], [ 0, %158 ], [ 0, %161 ], [ 0, %164 ]
  %186 = add i32 %185, %149
  br label %189

187:                                              ; preds = %143
  %188 = load i32, i32* %1, align 4
  br label %189

189:                                              ; preds = %187, %184
  %190 = phi i32 [ %188, %187 ], [ %186, %184 ]
  %191 = phi i32 [ %70, %187 ], [ %150, %184 ]
  %192 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 12
  store i32 %190, i32* %192, align 16
  %193 = getelementptr inbounds i8, i8* %4, i64 11
  %194 = load i8, i8* %193, align 1
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %238, label %196

196:                                              ; preds = %189
  %197 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 11
  %198 = load i32, i32* %197, align 4
  %199 = load i64, i64* %17, align 8
  %200 = load i64, i64* %19, align 8
  %201 = sub i64 %199, %200
  %202 = lshr exact i64 %201, 3
  %203 = trunc i64 %202 to i32
  %204 = icmp ult i32 %191, %203
  %205 = inttoptr i64 %200 to %struct.CF2_StackNumber_*
  br i1 %204, label %215, label %206

206:                                              ; preds = %196
  %207 = load i32*, i32** %20, align 8
  %208 = icmp eq i32* %207, null
  br i1 %208, label %234, label %209

209:                                              ; preds = %206
  %210 = load i32, i32* %207, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %234

212:                                              ; preds = %209
  store i32 130, i32* %207, align 4
  %213 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 12
  %214 = load i32, i32* %213, align 16
  br label %234

215:                                              ; preds = %196
  %216 = zext i32 %191 to i64
  %217 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %205, i64 %216
  %218 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %205, i64 %216, i32 1
  %219 = load i32, i32* %218, align 4
  switch i32 %219, label %231 [
    i32 2, label %220
    i32 1, label %224
  ]

220:                                              ; preds = %215
  %221 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %217, i64 0, i32 0, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = shl i32 %222, 16
  br label %234

224:                                              ; preds = %215
  %225 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %217, i64 0, i32 0, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = add nsw i32 %226, 8192
  %228 = ashr i32 %226, 31
  %229 = add nsw i32 %227, %228
  %230 = ashr i32 %229, 14
  br label %234

231:                                              ; preds = %215
  %232 = getelementptr inbounds %struct.CF2_StackNumber_, %struct.CF2_StackNumber_* %217, i64 0, i32 0, i32 0
  %233 = load i32, i32* %232, align 4
  br label %234

234:                                              ; preds = %206, %209, %212, %220, %224, %231
  %235 = phi i32 [ %190, %231 ], [ %190, %224 ], [ %190, %220 ], [ %190, %206 ], [ %190, %209 ], [ %214, %212 ]
  %236 = phi i32 [ %233, %231 ], [ %230, %224 ], [ %223, %220 ], [ 0, %206 ], [ 0, %209 ], [ 0, %212 ]
  %237 = add i32 %236, %198
  br label %240

238:                                              ; preds = %189
  %239 = load i32, i32* %2, align 4
  br label %240

240:                                              ; preds = %133, %138, %234, %238
  %241 = phi i32 [ %137, %133 ], [ %142, %138 ], [ %237, %234 ], [ %239, %238 ]
  %242 = phi i32 [ %135, %133 ], [ %139, %138 ], [ %235, %234 ], [ %190, %238 ]
  %243 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 13
  store i32 %241, i32* %243, align 4
  %244 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 2
  %245 = load i32, i32* %244, align 8
  %246 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 3
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 4
  %249 = load i32, i32* %248, align 16
  %250 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 5
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 6
  %253 = load i32, i32* %252, align 8
  %254 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 7
  %255 = load i32, i32* %254, align 4
  tail call fastcc void @cf2_glyphpath_curveTo(%struct.CF2_GlyphPathRec_* %3, i32 %245, i32 %247, i32 %249, i32 %251, i32 %253, i32 %255)
  %256 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 8
  %257 = load i32, i32* %256, align 16
  %258 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 9
  %259 = load i32, i32* %258, align 4
  %260 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 10
  %261 = load i32, i32* %260, align 8
  %262 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 11
  %263 = load i32, i32* %262, align 4
  tail call fastcc void @cf2_glyphpath_curveTo(%struct.CF2_GlyphPathRec_* %3, i32 %257, i32 %259, i32 %261, i32 %263, i32 %242, i32 %241)
  %264 = load i64, i64* %19, align 8
  store i64 %264, i64* %17, align 8
  store i32 %242, i32* %1, align 4
  store i32 %241, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #11
  ret void
}

declare hidden i32 @FT_GlyphLoader_CheckSubGlyphs(%struct.FT_GlyphLoaderRec_*, i32) local_unnamed_addr #6

declare hidden void @FT_GlyphLoader_Prepare(%struct.FT_GlyphLoaderRec_*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_hintmap_build(%struct.CF2_HintMapRec_*, %struct.CF2_ArrStackRec_* readonly, %struct.CF2_ArrStackRec_* nocapture readonly, %struct.CF2_HintMaskRec_* nocapture, i32, i8 zeroext) unnamed_addr #0 {
  %7 = alloca %struct.CF2_HintMoveRec_, align 8
  %8 = alloca %struct.CF2_HintMaskRec_, align 8
  %9 = alloca %struct.CF2_HintRec_, align 8
  %10 = alloca %struct.CF2_HintRec_, align 8
  %11 = alloca %struct.CF2_HintRec_, align 8
  %12 = alloca %struct.CF2_HintRec_, align 8
  %13 = alloca %struct.CF2_HintRec_, align 8
  %14 = alloca %struct.CF2_HintRec_, align 8
  %15 = alloca %struct.CF2_HintRec_, align 8
  %16 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 0
  %17 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %16, align 8
  %18 = bitcast %struct.CF2_HintMaskRec_* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 48, i1 false)
  %19 = icmp ne i8 %5, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 1
  %22 = load %struct.CF2_HintMapRec_*, %struct.CF2_HintMapRec_** %21, align 8
  %23 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %22, i64 0, i32 3
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast %struct.CF2_HintMaskRec_* %3 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 40, i1 false) #11
  %30 = bitcast %struct.CF2_HintMaskRec_* %8 to i64*
  store i64 %28, i64* %30, align 8
  call fastcc void @cf2_hintmap_build(%struct.CF2_HintMapRec_* %22, %struct.CF2_ArrStackRec_* %1, %struct.CF2_ArrStackRec_* %2, %struct.CF2_HintMaskRec_* nonnull %8, i32 %4, i8 zeroext 1)
  br label %31

31:                                               ; preds = %20, %26, %6
  %32 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %3, i64 0, i32 1
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %88

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %2, i64 0, i32 4
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %37
  %41 = trunc i64 %40 to i32
  %42 = sub nsw i32 0, %41
  %43 = and i32 %42, 7
  %44 = shl nsw i32 -1, %43
  %45 = icmp ugt i64 %40, 96
  br i1 %45, label %46, label %54

46:                                               ; preds = %35
  %47 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %3, i64 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %77, label %50

50:                                               ; preds = %46
  %51 = load i32, i32* %48, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %77

53:                                               ; preds = %50
  store i32 18, i32* %48, align 4
  br label %77

54:                                               ; preds = %35
  %55 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %3, i64 0, i32 3
  store i64 %40, i64* %55, align 8
  %56 = add nuw nsw i64 %40, 7
  %57 = lshr i64 %56, 3
  %58 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %3, i64 0, i32 4
  store i64 %57, i64* %58, align 8
  store i8 1, i8* %32, align 8
  %59 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %3, i64 0, i32 2
  store i8 1, i8* %59, align 1
  %60 = icmp eq i64 %40, 0
  br i1 %60, label %88, label %61

61:                                               ; preds = %54
  %62 = icmp eq i64 %57, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %61, %63
  %64 = phi i64 [ %66, %63 ], [ 0, %61 ]
  %65 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %3, i64 0, i32 5, i64 %64
  store i8 -1, i8* %65, align 1
  %66 = add nuw i64 %64, 1
  %67 = load i64, i64* %58, align 8
  %68 = icmp ult i64 %66, %67
  br i1 %68, label %63, label %69

69:                                               ; preds = %63
  %70 = add i64 %67, -1
  br label %71

71:                                               ; preds = %69, %61
  %72 = phi i64 [ -1, %61 ], [ %70, %69 ]
  %73 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %3, i64 0, i32 5, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = trunc i32 %44 to i8
  %76 = and i8 %74, %75
  store i8 %76, i8* %73, align 1
  br label %77

77:                                               ; preds = %46, %50, %53, %71
  %78 = load i8, i8* %32, align 8
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %88

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 2
  %82 = load i8, i8* %81, align 4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %774, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %3, i64 0, i32 0
  %86 = load i32*, i32** %85, align 8
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 4
  store i8 0, i8* %87, align 1
  br label %774

88:                                               ; preds = %54, %77, %31
  %89 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 6
  store i32 0, i32* %89, align 8
  %90 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 7
  store i32 0, i32* %90, align 4
  %91 = bitcast %struct.CF2_HintMaskRec_* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %91, i64 48, i1 false)
  %92 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %8, i64 0, i32 5, i64 0
  %93 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 4
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %3, i64 0, i32 3
  %96 = load i64, i64* %95, align 8
  %97 = icmp ugt i64 %94, %96
  br i1 %97, label %774, label %98

98:                                               ; preds = %88
  %99 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 3
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %98
  %103 = bitcast %struct.CF2_HintRec_* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 0, i64 32, i1 false) #11
  %104 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 9
  call fastcc void @cf2_hintmap_insertHint(%struct.CF2_HintMapRec_* %0, %struct.CF2_HintRec_* %104, %struct.CF2_HintRec_* nonnull %9)
  %105 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 8
  call fastcc void @cf2_hintmap_insertHint(%struct.CF2_HintMapRec_* %0, %struct.CF2_HintRec_* nonnull %9, %struct.CF2_HintRec_* %105)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #11
  br label %106

106:                                              ; preds = %98, %102
  %107 = icmp eq i64 %94, 0
  br i1 %107, label %365, label %108

108:                                              ; preds = %106
  %109 = bitcast %struct.CF2_HintRec_* %10 to i8*
  %110 = bitcast %struct.CF2_HintRec_* %11 to i8*
  %111 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 5
  %112 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 1
  %113 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 6
  %114 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 2
  %115 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %10, i64 0, i32 0
  %116 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %10, i64 0, i32 2
  %117 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %10, i64 0, i32 4
  %118 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %10, i64 0, i32 1
  %119 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %10, i64 0, i32 3
  %120 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %11, i64 0, i32 2
  %121 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %11, i64 0, i32 0
  %122 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 26
  %123 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %11, i64 0, i32 4
  %124 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %11, i64 0, i32 1
  %125 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %11, i64 0, i32 3
  %126 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 6
  %127 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 1
  %128 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 2
  %129 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 5
  br label %130

130:                                              ; preds = %355, %108
  %131 = phi i32 [ 128, %108 ], [ %362, %355 ]
  %132 = phi i64 [ 0, %108 ], [ %363, %355 ]
  %133 = phi i8* [ %92, %108 ], [ %361, %355 ]
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = and i32 %131, %135
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %355, label %138

138:                                              ; preds = %130
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 32, i1 false)
  %139 = load i32, i32* %111, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 32, i1 false) #11
  %140 = load i64, i64* %93, align 8
  %141 = icmp ugt i64 %140, %132
  br i1 %141, label %149, label %142

142:                                              ; preds = %138
  %143 = load i32*, i32** %112, align 8
  %144 = icmp eq i32* %143, null
  br i1 %144, label %149, label %145

145:                                              ; preds = %142
  %146 = load i32, i32* %143, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  store i32 130, i32* %143, align 4
  br label %149

149:                                              ; preds = %148, %145, %142, %138
  %150 = phi i64 [ %132, %138 ], [ 0, %142 ], [ 0, %145 ], [ 0, %148 ]
  %151 = load i8*, i8** %113, align 8
  %152 = load i64, i64* %114, align 8
  %153 = mul i64 %152, %150
  %154 = getelementptr inbounds i8, i8* %151, i64 %153
  %155 = getelementptr inbounds i8, i8* %154, i64 8
  %156 = bitcast i8* %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds i8, i8* %154, i64 4
  %159 = bitcast i8* %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = sub i32 %157, %160
  switch i32 %161, label %162 [
    i32 -1376256, label %166
    i32 -1310720, label %165
  ]

162:                                              ; preds = %149
  %163 = icmp slt i32 %161, 0
  %164 = select i1 %163, i32 %157, i32 %160
  br label %166

165:                                              ; preds = %149
  store i32 0, i32* %115, align 8
  store i32 %4, i32* %116, align 8
  store i32 %139, i32* %117, align 8
  store i64 %132, i64* %118, align 8
  br label %177

166:                                              ; preds = %162, %149
  %167 = phi i32 [ %157, %149 ], [ %164, %162 ]
  %168 = phi i32 [ 1, %149 ], [ 4, %162 ]
  store i32 %167, i32* %116, align 8
  store i32 %168, i32* %115, align 8
  %169 = add i32 %167, %4
  store i32 %169, i32* %116, align 8
  store i32 %139, i32* %117, align 8
  store i64 %132, i64* %118, align 8
  %170 = load i8, i8* %154, align 4
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %177, label %172

172:                                              ; preds = %166
  %173 = getelementptr inbounds i8, i8* %154, i64 12
  %174 = bitcast i8* %173 to i32*
  %175 = load i32, i32* %174, align 4
  store i32 %175, i32* %119, align 4
  %176 = or i32 %168, 16
  store i32 %176, i32* %115, align 8
  br label %188

177:                                              ; preds = %165, %166
  %178 = phi i32 [ %169, %166 ], [ %4, %165 ]
  %179 = phi i32 [ %168, %166 ], [ 0, %165 ]
  %180 = sext i32 %178 to i64
  %181 = sext i32 %139 to i64
  %182 = mul nsw i64 %180, %181
  %183 = ashr i64 %182, 63
  %184 = add nsw i64 %182, 32768
  %185 = add nsw i64 %184, %183
  %186 = lshr i64 %185, 16
  %187 = trunc i64 %186 to i32
  store i32 %187, i32* %119, align 4
  br label %188

188:                                              ; preds = %172, %177
  %189 = phi i32 [ %169, %172 ], [ %178, %177 ]
  %190 = phi i32 [ %175, %172 ], [ %187, %177 ]
  %191 = phi i32 [ %176, %172 ], [ %179, %177 ]
  %192 = load i32, i32* %111, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 0, i64 32, i1 false) #11
  %193 = load i64, i64* %93, align 8
  %194 = icmp ugt i64 %193, %132
  br i1 %194, label %204, label %195

195:                                              ; preds = %188
  %196 = load i32*, i32** %112, align 8
  %197 = icmp eq i32* %196, null
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = load i32, i32* %196, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %198
  store i32 130, i32* %196, align 4
  %202 = load i8*, i8** %113, align 8
  %203 = load i64, i64* %114, align 8
  br label %204

204:                                              ; preds = %201, %198, %195, %188
  %205 = phi i64 [ %152, %188 ], [ %152, %195 ], [ %152, %198 ], [ %203, %201 ]
  %206 = phi i8* [ %151, %188 ], [ %151, %195 ], [ %151, %198 ], [ %202, %201 ]
  %207 = phi i64 [ %132, %188 ], [ 0, %195 ], [ 0, %198 ], [ 0, %201 ]
  %208 = mul i64 %205, %207
  %209 = getelementptr inbounds i8, i8* %206, i64 %208
  %210 = getelementptr inbounds i8, i8* %209, i64 8
  %211 = bitcast i8* %210 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds i8, i8* %209, i64 4
  %214 = bitcast i8* %213 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = sub i32 %212, %215
  switch i32 %216, label %218 [
    i32 -1376256, label %217
    i32 -1310720, label %221
  ]

217:                                              ; preds = %204
  store i32 0, i32* %121, align 8
  store i32 %4, i32* %120, align 8
  store i32 %192, i32* %123, align 8
  store i64 %132, i64* %124, align 8
  br label %235

218:                                              ; preds = %204
  %219 = icmp slt i32 %216, 0
  %220 = select i1 %219, i32 %215, i32 %212
  br label %221

221:                                              ; preds = %218, %204
  %222 = phi i32 [ %215, %204 ], [ %220, %218 ]
  %223 = phi i32 [ 2, %204 ], [ 8, %218 ]
  store i32 %222, i32* %120, align 8
  store i32 %223, i32* %121, align 8
  %224 = load i32, i32* %122, align 8
  %225 = shl i32 %224, 1
  %226 = add i32 %225, %222
  %227 = add i32 %226, %4
  store i32 %227, i32* %120, align 8
  store i32 %192, i32* %123, align 8
  store i64 %132, i64* %124, align 8
  %228 = load i8, i8* %209, align 4
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %235, label %230

230:                                              ; preds = %221
  %231 = getelementptr inbounds i8, i8* %209, i64 16
  %232 = bitcast i8* %231 to i32*
  %233 = load i32, i32* %232, align 4
  store i32 %233, i32* %125, align 4
  %234 = or i32 %223, 16
  store i32 %234, i32* %121, align 8
  br label %246

235:                                              ; preds = %217, %221
  %236 = phi i32 [ %4, %217 ], [ %227, %221 ]
  %237 = phi i32 [ 0, %217 ], [ %223, %221 ]
  %238 = sext i32 %236 to i64
  %239 = sext i32 %192 to i64
  %240 = mul nsw i64 %238, %239
  %241 = ashr i64 %240, 63
  %242 = add nsw i64 %240, 32768
  %243 = add nsw i64 %242, %241
  %244 = lshr i64 %243, 16
  %245 = trunc i64 %244 to i32
  store i32 %245, i32* %125, align 4
  br label %246

246:                                              ; preds = %230, %235
  %247 = phi i32 [ %227, %230 ], [ %236, %235 ]
  %248 = phi i32 [ %233, %230 ], [ %245, %235 ]
  %249 = phi i32 [ %234, %230 ], [ %237, %235 ]
  %250 = or i32 %191, %249
  %251 = and i32 %250, 16
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %349

253:                                              ; preds = %246
  %254 = load i32, i32* %126, align 4
  %255 = load i32, i32* %127, align 4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %354, label %257

257:                                              ; preds = %253
  %258 = zext i32 %255 to i64
  %259 = and i32 %191, 5
  %260 = icmp eq i32 %259, 0
  %261 = and i32 %249, 10
  %262 = icmp eq i32 %261, 0
  br label %263

263:                                              ; preds = %335, %257
  %264 = phi i64 [ 0, %257 ], [ %336, %335 ]
  %265 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 10, i64 %264
  %266 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 10, i64 %264, i32 4
  %267 = load i8, i8* %266, align 4
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %302, label %269

269:                                              ; preds = %263
  br i1 %260, label %335, label %270

270:                                              ; preds = %269
  %271 = getelementptr inbounds %struct.CF2_BlueRec_, %struct.CF2_BlueRec_* %265, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = sub i32 %272, %254
  %274 = icmp sgt i32 %273, %189
  br i1 %274, label %335, label %275

275:                                              ; preds = %270
  %276 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 10, i64 %264, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = add i32 %277, %254
  %279 = icmp sgt i32 %189, %278
  br i1 %279, label %335, label %280

280:                                              ; preds = %275
  %281 = and i64 %264, 4294967295
  %282 = load i8, i8* %128, align 8
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %287, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 10, i64 %281, i32 3
  %286 = load i32, i32* %285, align 4
  br label %299

287:                                              ; preds = %280
  %288 = sub i32 %277, %189
  %289 = load i32, i32* %129, align 8
  %290 = icmp slt i32 %288, %289
  %291 = add i32 %190, 32768
  %292 = and i32 %291, -65536
  br i1 %290, label %299, label %293

293:                                              ; preds = %287
  %294 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 10, i64 %281, i32 3
  %295 = load i32, i32* %294, align 4
  %296 = add i32 %295, -65536
  %297 = icmp slt i32 %292, %296
  %298 = select i1 %297, i32 %292, i32 %296
  br label %299

299:                                              ; preds = %293, %287, %284
  %300 = phi i32 [ %286, %284 ], [ %298, %293 ], [ %292, %287 ]
  %301 = sub i32 %300, %190
  br label %338

302:                                              ; preds = %263
  br i1 %262, label %335, label %303

303:                                              ; preds = %302
  %304 = getelementptr inbounds %struct.CF2_BlueRec_, %struct.CF2_BlueRec_* %265, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  %306 = sub i32 %305, %254
  %307 = icmp sgt i32 %306, %247
  br i1 %307, label %335, label %308

308:                                              ; preds = %303
  %309 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 10, i64 %264, i32 1
  %310 = load i32, i32* %309, align 4
  %311 = add i32 %310, %254
  %312 = icmp sgt i32 %247, %311
  br i1 %312, label %335, label %313

313:                                              ; preds = %308
  %314 = and i64 %264, 4294967295
  %315 = load i8, i8* %128, align 8
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %320, label %317

317:                                              ; preds = %313
  %318 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 10, i64 %314, i32 3
  %319 = load i32, i32* %318, align 4
  br label %332

320:                                              ; preds = %313
  %321 = sub i32 %247, %305
  %322 = load i32, i32* %129, align 8
  %323 = icmp slt i32 %321, %322
  %324 = add i32 %248, 32768
  %325 = and i32 %324, -65536
  br i1 %323, label %332, label %326

326:                                              ; preds = %320
  %327 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 28, i32 10, i64 %314, i32 3
  %328 = load i32, i32* %327, align 4
  %329 = add nsw i32 %328, 65536
  %330 = icmp sgt i32 %325, %329
  %331 = select i1 %330, i32 %325, i32 %329
  br label %332

332:                                              ; preds = %326, %320, %317
  %333 = phi i32 [ %319, %317 ], [ %331, %326 ], [ %325, %320 ]
  %334 = sub i32 %333, %248
  br label %338

335:                                              ; preds = %308, %303, %302, %275, %270, %269
  %336 = add nuw nsw i64 %264, 1
  %337 = icmp eq i64 %336, %258
  br i1 %337, label %354, label %263

338:                                              ; preds = %332, %299
  %339 = phi i32 [ %334, %332 ], [ %301, %299 ]
  %340 = icmp eq i32 %191, 0
  br i1 %340, label %344, label %341

341:                                              ; preds = %338
  %342 = add i32 %190, %339
  store i32 %342, i32* %119, align 4
  %343 = or i32 %191, 16
  store i32 %343, i32* %115, align 8
  br label %344

344:                                              ; preds = %341, %338
  %345 = icmp eq i32 %249, 0
  br i1 %345, label %349, label %346

346:                                              ; preds = %344
  %347 = add i32 %248, %339
  store i32 %347, i32* %125, align 4
  %348 = or i32 %249, 16
  store i32 %348, i32* %121, align 8
  br label %349

349:                                              ; preds = %346, %344, %246
  call fastcc void @cf2_hintmap_insertHint(%struct.CF2_HintMapRec_* %0, %struct.CF2_HintRec_* nonnull %10, %struct.CF2_HintRec_* nonnull %11)
  %350 = load i8, i8* %133, align 1
  %351 = trunc i32 %131 to i8
  %352 = xor i8 %351, -1
  %353 = and i8 %350, %352
  store i8 %353, i8* %133, align 1
  br label %354

354:                                              ; preds = %335, %253, %349
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #11
  br label %355

355:                                              ; preds = %130, %354
  %356 = and i64 %132, 7
  %357 = icmp eq i64 %356, 7
  %358 = getelementptr inbounds i8, i8* %133, i64 1
  %359 = lshr i32 %131, 1
  %360 = and i32 %359, 127
  %361 = select i1 %357, i8* %358, i8* %133
  %362 = select i1 %357, i32 128, i32 %360
  %363 = add nuw i64 %132, 1
  %364 = icmp eq i64 %363, %94
  br i1 %364, label %365, label %130

365:                                              ; preds = %355, %106
  br i1 %19, label %385, label %366

366:                                              ; preds = %365
  br i1 %107, label %527, label %367

367:                                              ; preds = %366
  %368 = bitcast %struct.CF2_HintRec_* %14 to i8*
  %369 = bitcast %struct.CF2_HintRec_* %15 to i8*
  %370 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 5
  %371 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 1
  %372 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 6
  %373 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 2
  %374 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %14, i64 0, i32 0
  %375 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %14, i64 0, i32 2
  %376 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %14, i64 0, i32 4
  %377 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %14, i64 0, i32 1
  %378 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %14, i64 0, i32 3
  %379 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %15, i64 0, i32 2
  %380 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %15, i64 0, i32 0
  %381 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %17, i64 0, i32 26
  %382 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %15, i64 0, i32 4
  %383 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %15, i64 0, i32 1
  %384 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %15, i64 0, i32 3
  br label %405

385:                                              ; preds = %365
  %386 = load i32, i32* %89, align 8
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %398, label %388

388:                                              ; preds = %385
  %389 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 0, i32 2
  %390 = load i32, i32* %389, align 8
  %391 = icmp sgt i32 %390, 0
  br i1 %391, label %398, label %392

392:                                              ; preds = %388
  %393 = add i32 %386, -1
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %394, i32 2
  %396 = load i32, i32* %395, align 8
  %397 = icmp slt i32 %396, 0
  br i1 %397, label %398, label %527

398:                                              ; preds = %392, %388, %385
  %399 = bitcast %struct.CF2_HintRec_* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %399) #11
  %400 = bitcast %struct.CF2_HintRec_* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %400) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 0, i64 32, i1 false) #11
  %401 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %12, i64 0, i32 0
  store i32 49, i32* %401, align 8
  %402 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 5
  %403 = load i32, i32* %402, align 4
  %404 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %12, i64 0, i32 4
  store i32 %403, i32* %404, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %400, i8 0, i64 32, i1 false) #11
  call fastcc void @cf2_hintmap_insertHint(%struct.CF2_HintMapRec_* %0, %struct.CF2_HintRec_* nonnull %12, %struct.CF2_HintRec_* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %400) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %399) #11
  br label %527

405:                                              ; preds = %517, %367
  %406 = phi i32 [ 128, %367 ], [ %524, %517 ]
  %407 = phi i64 [ 0, %367 ], [ %525, %517 ]
  %408 = phi i8* [ %92, %367 ], [ %523, %517 ]
  %409 = load i8, i8* %408, align 1
  %410 = zext i8 %409 to i32
  %411 = and i32 %406, %410
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %517, label %413

413:                                              ; preds = %405
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %368) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %369) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %369, i8 -86, i64 32, i1 false)
  %414 = load i32, i32* %370, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %368, i8 0, i64 32, i1 false) #11
  %415 = load i64, i64* %93, align 8
  %416 = icmp ugt i64 %415, %407
  br i1 %416, label %424, label %417

417:                                              ; preds = %413
  %418 = load i32*, i32** %371, align 8
  %419 = icmp eq i32* %418, null
  br i1 %419, label %424, label %420

420:                                              ; preds = %417
  %421 = load i32, i32* %418, align 4
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %420
  store i32 130, i32* %418, align 4
  br label %424

424:                                              ; preds = %423, %420, %417, %413
  %425 = phi i64 [ %407, %413 ], [ 0, %417 ], [ 0, %420 ], [ 0, %423 ]
  %426 = load i8*, i8** %372, align 8
  %427 = load i64, i64* %373, align 8
  %428 = mul i64 %427, %425
  %429 = getelementptr inbounds i8, i8* %426, i64 %428
  %430 = getelementptr inbounds i8, i8* %429, i64 8
  %431 = bitcast i8* %430 to i32*
  %432 = load i32, i32* %431, align 4
  %433 = getelementptr inbounds i8, i8* %429, i64 4
  %434 = bitcast i8* %433 to i32*
  %435 = load i32, i32* %434, align 4
  %436 = sub i32 %432, %435
  switch i32 %436, label %437 [
    i32 -1376256, label %441
    i32 -1310720, label %440
  ]

437:                                              ; preds = %424
  %438 = icmp slt i32 %436, 0
  %439 = select i1 %438, i32 %432, i32 %435
  br label %441

440:                                              ; preds = %424
  store i32 0, i32* %374, align 8
  store i32 %4, i32* %375, align 8
  store i32 %414, i32* %376, align 8
  store i64 %407, i64* %377, align 8
  br label %452

441:                                              ; preds = %437, %424
  %442 = phi i32 [ %432, %424 ], [ %439, %437 ]
  %443 = phi i32 [ 1, %424 ], [ 4, %437 ]
  %444 = phi i32 [ 17, %424 ], [ 20, %437 ]
  store i32 %442, i32* %375, align 8
  store i32 %443, i32* %374, align 8
  %445 = add i32 %442, %4
  store i32 %445, i32* %375, align 8
  store i32 %414, i32* %376, align 8
  store i64 %407, i64* %377, align 8
  %446 = load i8, i8* %429, align 4
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %452, label %448

448:                                              ; preds = %441
  %449 = getelementptr inbounds i8, i8* %429, i64 12
  %450 = bitcast i8* %449 to i32*
  %451 = load i32, i32* %450, align 4
  store i32 %451, i32* %378, align 4
  store i32 %444, i32* %374, align 8
  br label %462

452:                                              ; preds = %440, %441
  %453 = phi i32 [ %445, %441 ], [ %4, %440 ]
  %454 = sext i32 %453 to i64
  %455 = sext i32 %414 to i64
  %456 = mul nsw i64 %454, %455
  %457 = ashr i64 %456, 63
  %458 = add nsw i64 %456, 32768
  %459 = add nsw i64 %458, %457
  %460 = lshr i64 %459, 16
  %461 = trunc i64 %460 to i32
  store i32 %461, i32* %378, align 4
  br label %462

462:                                              ; preds = %448, %452
  %463 = load i32, i32* %370, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %369, i8 0, i64 32, i1 false) #11
  %464 = load i64, i64* %93, align 8
  %465 = icmp ugt i64 %464, %407
  br i1 %465, label %475, label %466

466:                                              ; preds = %462
  %467 = load i32*, i32** %371, align 8
  %468 = icmp eq i32* %467, null
  br i1 %468, label %475, label %469

469:                                              ; preds = %466
  %470 = load i32, i32* %467, align 4
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %475

472:                                              ; preds = %469
  store i32 130, i32* %467, align 4
  %473 = load i8*, i8** %372, align 8
  %474 = load i64, i64* %373, align 8
  br label %475

475:                                              ; preds = %472, %469, %466, %462
  %476 = phi i64 [ %427, %462 ], [ %427, %466 ], [ %427, %469 ], [ %474, %472 ]
  %477 = phi i8* [ %426, %462 ], [ %426, %466 ], [ %426, %469 ], [ %473, %472 ]
  %478 = phi i64 [ %407, %462 ], [ 0, %466 ], [ 0, %469 ], [ 0, %472 ]
  %479 = mul i64 %476, %478
  %480 = getelementptr inbounds i8, i8* %477, i64 %479
  %481 = getelementptr inbounds i8, i8* %480, i64 8
  %482 = bitcast i8* %481 to i32*
  %483 = load i32, i32* %482, align 4
  %484 = getelementptr inbounds i8, i8* %480, i64 4
  %485 = bitcast i8* %484 to i32*
  %486 = load i32, i32* %485, align 4
  %487 = sub i32 %483, %486
  switch i32 %487, label %489 [
    i32 -1376256, label %488
    i32 -1310720, label %492
  ]

488:                                              ; preds = %475
  store i32 0, i32* %380, align 8
  store i32 %4, i32* %379, align 8
  store i32 %463, i32* %382, align 8
  store i64 %407, i64* %383, align 8
  br label %506

489:                                              ; preds = %475
  %490 = icmp slt i32 %487, 0
  %491 = select i1 %490, i32 %486, i32 %483
  br label %492

492:                                              ; preds = %489, %475
  %493 = phi i32 [ %486, %475 ], [ %491, %489 ]
  %494 = phi i32 [ 2, %475 ], [ 8, %489 ]
  %495 = phi i32 [ 18, %475 ], [ 24, %489 ]
  store i32 %493, i32* %379, align 8
  store i32 %494, i32* %380, align 8
  %496 = load i32, i32* %381, align 8
  %497 = shl i32 %496, 1
  %498 = add i32 %497, %493
  %499 = add i32 %498, %4
  store i32 %499, i32* %379, align 8
  store i32 %463, i32* %382, align 8
  store i64 %407, i64* %383, align 8
  %500 = load i8, i8* %480, align 4
  %501 = icmp eq i8 %500, 0
  br i1 %501, label %506, label %502

502:                                              ; preds = %492
  %503 = getelementptr inbounds i8, i8* %480, i64 16
  %504 = bitcast i8* %503 to i32*
  %505 = load i32, i32* %504, align 4
  store i32 %505, i32* %384, align 4
  store i32 %495, i32* %380, align 8
  br label %516

506:                                              ; preds = %488, %492
  %507 = phi i32 [ %4, %488 ], [ %499, %492 ]
  %508 = sext i32 %507 to i64
  %509 = sext i32 %463 to i64
  %510 = mul nsw i64 %508, %509
  %511 = ashr i64 %510, 63
  %512 = add nsw i64 %510, 32768
  %513 = add nsw i64 %512, %511
  %514 = lshr i64 %513, 16
  %515 = trunc i64 %514 to i32
  store i32 %515, i32* %384, align 4
  br label %516

516:                                              ; preds = %502, %506
  call fastcc void @cf2_hintmap_insertHint(%struct.CF2_HintMapRec_* %0, %struct.CF2_HintRec_* nonnull %14, %struct.CF2_HintRec_* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %369) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %368) #11
  br label %517

517:                                              ; preds = %405, %516
  %518 = and i64 %407, 7
  %519 = icmp eq i64 %518, 7
  %520 = getelementptr inbounds i8, i8* %408, i64 1
  %521 = lshr i32 %406, 1
  %522 = and i32 %521, 127
  %523 = select i1 %519, i8* %520, i8* %408
  %524 = select i1 %519, i32 128, i32 %522
  %525 = add nuw i64 %407, 1
  %526 = icmp eq i64 %525, %94
  br i1 %526, label %527, label %405

527:                                              ; preds = %517, %366, %392, %398
  %528 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 2
  %529 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %528, align 8
  %530 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %529, i64 0, i32 4
  store i64 0, i64* %530, align 8
  %531 = load i32, i32* %89, align 8
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %666, label %533

533:                                              ; preds = %527
  %534 = bitcast %struct.CF2_HintMoveRec_* %7 to i8*
  %535 = getelementptr inbounds %struct.CF2_HintMoveRec_, %struct.CF2_HintMoveRec_* %7, i64 0, i32 0
  %536 = getelementptr inbounds %struct.CF2_HintMoveRec_, %struct.CF2_HintMoveRec_* %7, i64 0, i32 1
  br label %537

537:                                              ; preds = %660, %533
  %538 = phi i32 [ %531, %533 ], [ %663, %660 ]
  %539 = phi i64 [ 0, %533 ], [ %662, %660 ]
  %540 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %539, i32 0
  %541 = load i32, i32* %540, align 8
  %542 = and i32 %541, 12
  %543 = icmp eq i32 %542, 0
  %544 = add nuw i64 %539, 1
  %545 = select i1 %543, i64 %539, i64 %544
  %546 = and i32 %541, 16
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %619

548:                                              ; preds = %537
  %549 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %539, i32 3
  %550 = load i32, i32* %549, align 4
  %551 = and i32 %550, 65535
  %552 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %545, i32 3
  %553 = load i32, i32* %552, align 4
  %554 = and i32 %553, 65535
  %555 = sub nsw i32 0, %551
  %556 = sub nsw i32 0, %554
  %557 = icmp eq i32 %551, 0
  %558 = sub nuw nsw i32 65536, %551
  %559 = select i1 %557, i32 0, i32 %558
  %560 = icmp eq i32 %554, 0
  %561 = sub nuw nsw i32 65536, %554
  %562 = select i1 %560, i32 0, i32 %561
  %563 = icmp ult i32 %559, %562
  %564 = select i1 %563, i32 %559, i32 %562
  %565 = icmp sgt i32 %555, %556
  %566 = select i1 %565, i32 %555, i32 %556
  %567 = add i32 %538, -1
  %568 = zext i32 %567 to i64
  %569 = icmp ult i64 %545, %568
  br i1 %569, label %570, label %577

570:                                              ; preds = %548
  %571 = add nuw i64 %545, 1
  %572 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %571, i32 3
  %573 = load i32, i32* %572, align 4
  %574 = add i32 %553, 32768
  %575 = add i32 %574, %564
  %576 = icmp slt i32 %573, %575
  br i1 %576, label %590, label %577

577:                                              ; preds = %570, %548
  %578 = icmp eq i64 %539, 0
  br i1 %578, label %586, label %579

579:                                              ; preds = %577
  %580 = add i64 %539, -1
  %581 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %580, i32 3
  %582 = load i32, i32* %581, align 4
  %583 = add i32 %550, -32768
  %584 = add i32 %583, %566
  %585 = icmp sgt i32 %582, %584
  br i1 %585, label %612, label %586

586:                                              ; preds = %579, %577
  %587 = sub nsw i32 0, %566
  %588 = icmp sgt i32 %564, %587
  %589 = select i1 %588, i32 %566, i32 %564
  br label %612

590:                                              ; preds = %570
  %591 = icmp eq i64 %539, 0
  br i1 %591, label %599, label %592

592:                                              ; preds = %590
  %593 = add i64 %539, -1
  %594 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %593, i32 3
  %595 = load i32, i32* %594, align 4
  %596 = add i32 %550, -32768
  %597 = add i32 %596, %566
  %598 = icmp sgt i32 %595, %597
  br i1 %598, label %602, label %599

599:                                              ; preds = %592, %590
  %600 = sub nsw i32 0, %566
  %601 = icmp slt i32 %564, %600
  br i1 %601, label %602, label %612

602:                                              ; preds = %599, %592
  %603 = phi i32 [ %566, %599 ], [ 0, %592 ]
  %604 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %571, i32 0
  %605 = load i32, i32* %604, align 8
  %606 = and i32 %605, 16
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %612

608:                                              ; preds = %602
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %534) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %534, i8 -86, i64 16, i1 false) #11
  store i64 %545, i64* %535, align 8
  %609 = sub nsw i32 %564, %603
  store i32 %609, i32* %536, align 8
  %610 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %528, align 8
  call fastcc void @cf2_arrstack_push(%struct.CF2_ArrStackRec_* %610, i8* nonnull %534) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %534) #11
  %611 = load i32, i32* %549, align 4
  br label %612

612:                                              ; preds = %608, %602, %599, %586, %579
  %613 = phi i32 [ %550, %602 ], [ %550, %599 ], [ %611, %608 ], [ %550, %579 ], [ %550, %586 ]
  %614 = phi i32 [ %603, %602 ], [ %566, %599 ], [ %603, %608 ], [ %564, %579 ], [ %589, %586 ]
  %615 = add i32 %614, %613
  store i32 %615, i32* %549, align 4
  br i1 %543, label %619, label %616

616:                                              ; preds = %612
  %617 = load i32, i32* %552, align 4
  %618 = add i32 %617, %614
  store i32 %618, i32* %552, align 4
  br label %619

619:                                              ; preds = %616, %612, %537
  %620 = icmp eq i64 %539, 0
  br i1 %620, label %640, label %621

621:                                              ; preds = %619
  %622 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %539, i32 2
  %623 = load i32, i32* %622, align 8
  %624 = add i64 %539, -1
  %625 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %624, i32 2
  %626 = load i32, i32* %625, align 8
  %627 = icmp eq i32 %623, %626
  br i1 %627, label %640, label %628

628:                                              ; preds = %621
  %629 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %539, i32 3
  %630 = load i32, i32* %629, align 4
  %631 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %624, i32 3
  %632 = load i32, i32* %631, align 4
  %633 = sub i32 %630, %632
  %634 = sext i32 %633 to i64
  %635 = sub i32 %623, %626
  %636 = sext i32 %635 to i64
  %637 = tail call i64 @FT_DivFix(i64 %634, i64 %636) #11
  %638 = trunc i64 %637 to i32
  %639 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %624, i32 4
  store i32 %638, i32* %639, align 8
  br label %640

640:                                              ; preds = %628, %621, %619
  br i1 %543, label %660, label %641

641:                                              ; preds = %640
  %642 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %545, i32 2
  %643 = load i32, i32* %642, align 8
  %644 = add i64 %545, -1
  %645 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %644, i32 2
  %646 = load i32, i32* %645, align 8
  %647 = icmp eq i32 %643, %646
  br i1 %647, label %660, label %648

648:                                              ; preds = %641
  %649 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %545, i32 3
  %650 = load i32, i32* %649, align 4
  %651 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %644, i32 3
  %652 = load i32, i32* %651, align 4
  %653 = sub i32 %650, %652
  %654 = sext i32 %653 to i64
  %655 = sub i32 %643, %646
  %656 = sext i32 %655 to i64
  %657 = tail call i64 @FT_DivFix(i64 %654, i64 %656) #11
  %658 = trunc i64 %657 to i32
  %659 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %644, i32 4
  store i32 %658, i32* %659, align 8
  br label %660

660:                                              ; preds = %648, %641, %640
  %661 = phi i64 [ %539, %640 ], [ %544, %641 ], [ %544, %648 ]
  %662 = add i64 %661, 1
  %663 = load i32, i32* %89, align 8
  %664 = zext i32 %663 to i64
  %665 = icmp ult i64 %662, %664
  br i1 %665, label %537, label %666

666:                                              ; preds = %660, %527
  %667 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %528, align 8
  %668 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %667, i64 0, i32 4
  %669 = load i64, i64* %668, align 8
  %670 = icmp eq i64 %669, 0
  br i1 %670, label %723, label %671

671:                                              ; preds = %666, %719
  %672 = phi i64 [ %722, %719 ], [ %669, %666 ]
  %673 = phi %struct.CF2_ArrStackRec_* [ %720, %719 ], [ %667, %666 ]
  %674 = phi i64 [ %675, %719 ], [ %669, %666 ]
  %675 = add i64 %674, -1
  %676 = icmp ugt i64 %672, %675
  br i1 %676, label %685, label %677

677:                                              ; preds = %671
  %678 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %673, i64 0, i32 1
  %679 = load i32*, i32** %678, align 8
  %680 = icmp eq i32* %679, null
  br i1 %680, label %685, label %681

681:                                              ; preds = %677
  %682 = load i32, i32* %679, align 4
  %683 = icmp eq i32 %682, 0
  br i1 %683, label %684, label %685

684:                                              ; preds = %681
  store i32 130, i32* %679, align 4
  br label %685

685:                                              ; preds = %684, %681, %677, %671
  %686 = phi i64 [ %675, %671 ], [ 0, %677 ], [ 0, %681 ], [ 0, %684 ]
  %687 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %673, i64 0, i32 6
  %688 = load i8*, i8** %687, align 8
  %689 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %673, i64 0, i32 2
  %690 = load i64, i64* %689, align 8
  %691 = mul i64 %690, %686
  %692 = getelementptr inbounds i8, i8* %688, i64 %691
  %693 = bitcast i8* %692 to i64*
  %694 = load i64, i64* %693, align 8
  %695 = add i64 %694, 1
  %696 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %695, i32 3
  %697 = load i32, i32* %696, align 4
  %698 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %694, i32 3
  %699 = load i32, i32* %698, align 4
  %700 = getelementptr inbounds i8, i8* %692, i64 8
  %701 = bitcast i8* %700 to i32*
  %702 = load i32, i32* %701, align 8
  %703 = add i32 %702, %699
  %704 = add i32 %703, 32768
  %705 = icmp slt i32 %697, %704
  br i1 %705, label %717, label %706

706:                                              ; preds = %685
  store i32 %703, i32* %698, align 4
  %707 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %694, i32 0
  %708 = load i32, i32* %707, align 8
  %709 = and i32 %708, 12
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %717, label %711

711:                                              ; preds = %706
  %712 = add i64 %694, -1
  %713 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %712, i32 3
  %714 = load i32, i32* %713, align 4
  %715 = load i32, i32* %701, align 8
  %716 = add i32 %715, %714
  store i32 %716, i32* %713, align 4
  br label %717

717:                                              ; preds = %711, %706, %685
  %718 = icmp eq i64 %675, 0
  br i1 %718, label %723, label %719

719:                                              ; preds = %717
  %720 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %528, align 8
  %721 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %720, i64 0, i32 4
  %722 = load i64, i64* %721, align 8
  br label %671

723:                                              ; preds = %717, %666
  br i1 %19, label %771, label %724

724:                                              ; preds = %723
  %725 = load i32, i32* %89, align 8
  %726 = icmp eq i32 %725, 0
  br i1 %726, label %771, label %727

727:                                              ; preds = %724
  %728 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 1
  %729 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 6
  %730 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %1, i64 0, i32 2
  br label %731

731:                                              ; preds = %727, %766
  %732 = phi i32 [ %725, %727 ], [ %767, %766 ]
  %733 = phi i64 [ 0, %727 ], [ %768, %766 ]
  %734 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %733, i32 0
  %735 = load i32, i32* %734, align 8
  %736 = and i32 %735, 32
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %766

738:                                              ; preds = %731
  %739 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %733, i32 1
  %740 = load i64, i64* %739, align 8
  %741 = load i64, i64* %93, align 8
  %742 = icmp ugt i64 %741, %740
  br i1 %742, label %751, label %743

743:                                              ; preds = %738
  %744 = load i32*, i32** %728, align 8
  %745 = icmp eq i32* %744, null
  br i1 %745, label %751, label %746

746:                                              ; preds = %743
  %747 = load i32, i32* %744, align 4
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %749, label %751

749:                                              ; preds = %746
  store i32 130, i32* %744, align 4
  %750 = load i32, i32* %734, align 8
  br label %751

751:                                              ; preds = %738, %743, %746, %749
  %752 = phi i32 [ %735, %738 ], [ %735, %743 ], [ %735, %746 ], [ %750, %749 ]
  %753 = phi i64 [ %740, %738 ], [ 0, %743 ], [ 0, %746 ], [ 0, %749 ]
  %754 = load i8*, i8** %729, align 8
  %755 = load i64, i64* %730, align 8
  %756 = mul i64 %755, %753
  %757 = getelementptr inbounds i8, i8* %754, i64 %756
  %758 = and i32 %752, 10
  %759 = icmp eq i32 %758, 0
  %760 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %733, i32 3
  %761 = load i32, i32* %760, align 4
  %762 = select i1 %759, i64 12, i64 16
  %763 = getelementptr inbounds i8, i8* %757, i64 %762
  %764 = bitcast i8* %763 to i32*
  store i32 %761, i32* %764, align 4
  store i8 1, i8* %757, align 4
  %765 = load i32, i32* %89, align 8
  br label %766

766:                                              ; preds = %731, %751
  %767 = phi i32 [ %732, %731 ], [ %765, %751 ]
  %768 = add nuw nsw i64 %733, 1
  %769 = zext i32 %767 to i64
  %770 = icmp ult i64 %768, %769
  br i1 %770, label %731, label %771

771:                                              ; preds = %766, %724, %723
  %772 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 3
  store i8 1, i8* %772, align 8
  %773 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %3, i64 0, i32 2
  store i8 0, i8* %773, align 1
  br label %774

774:                                              ; preds = %88, %84, %80, %771
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #11
  ret void
}

declare hidden i8* @ft_mem_qrealloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_arrstack_push(%struct.CF2_ArrStackRec_* nocapture, i8* nocapture readonly) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %0, i64 0, i32 6
  %11 = load i8*, i8** %10, align 8
  br label %52

12:                                               ; preds = %2
  %13 = shl i64 %5, 1
  %14 = add i64 %13, 16
  %15 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  store i32 0, i32* %3, align 4
  %16 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %0, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = mul i64 %17, %14
  %19 = udiv i64 9223372036854775807, %17
  %20 = icmp ult i64 %19, %14
  br i1 %20, label %43, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %0, i64 0, i32 0
  %23 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %22, align 8
  %24 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %0, i64 0, i32 5
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %0, i64 0, i32 6
  %27 = load i8*, i8** %26, align 8
  %28 = call i8* @ft_mem_qrealloc(%struct.FT_MemoryRec_* %23, i64 1, i64 %25, i64 %18, i8* %27, i32* nonnull %3) #11
  store i8* %28, i8** %26, align 8
  %29 = load i32, i32* %3, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %21
  store i64 %14, i64* %6, align 8
  store i64 %18, i64* %24, align 8
  %32 = load i64, i64* %4, align 8
  %33 = icmp ugt i64 %32, %14
  br i1 %33, label %34, label %51

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %0, i64 0, i32 1
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = load i32, i32* %36, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  store i32 130, i32* %36, align 4
  br label %42

42:                                               ; preds = %34, %38, %41
  store i64 %14, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  br label %61

43:                                               ; preds = %21, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  %44 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %0, i64 0, i32 1
  %45 = load i32*, i32** %44, align 8
  %46 = icmp eq i32* %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %43
  %48 = load i32, i32* %45, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %61

50:                                               ; preds = %47
  store i32 64, i32* %45, align 4
  br label %61

51:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  br label %52

52:                                               ; preds = %9, %51
  %53 = phi i8* [ %28, %51 ], [ %11, %9 ]
  %54 = phi i64 [ %32, %51 ], [ %5, %9 ]
  %55 = getelementptr inbounds %struct.CF2_ArrStackRec_, %struct.CF2_ArrStackRec_* %0, i64 0, i32 2
  %56 = load i64, i64* %55, align 8
  %57 = mul i64 %56, %54
  %58 = getelementptr inbounds i8, i8* %53, i64 %57
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %1, i64 %56, i1 false)
  %59 = load i64, i64* %4, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %4, align 8
  br label %61

61:                                               ; preds = %50, %47, %43, %42, %52
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @cf2_glyphpath_computeOffset(%struct.CF2_GlyphPathRec_* nocapture readonly, i32, i32, i32, i32, i32* nocapture, i32* nocapture) unnamed_addr #2 {
  %8 = sub i32 %3, %1
  %9 = sub i32 %4, %2
  %10 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 0
  %11 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %10, align 8
  %12 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %11, i64 0, i32 27
  %13 = load i8, i8* %12, align 4
  %14 = icmp eq i8 %13, 0
  %15 = sub i32 0, %8
  %16 = sub i32 0, %9
  %17 = select i1 %14, i32 %8, i32 %15
  %18 = select i1 %14, i32 %9, i32 %16
  store i32 0, i32* %6, align 4
  store i32 0, i32* %5, align 4
  %19 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 12
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %168, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 1
  %24 = load %struct.CF2_OutlineCallbacksRec_*, %struct.CF2_OutlineCallbacksRec_** %23, align 8
  %25 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %24, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = ashr i32 %1, 16
  %28 = ashr i32 %9, 16
  %29 = mul nsw i32 %28, %27
  %30 = ashr i32 %2, 16
  %31 = ashr i32 %8, 16
  %32 = mul nsw i32 %31, %30
  %33 = sub nsw i32 %29, %32
  %34 = add i32 %33, %26
  store i32 %34, i32* %25, align 8
  %35 = icmp sgt i32 %17, -1
  %36 = icmp sgt i32 %18, -1
  br i1 %35, label %37, label %98

37:                                               ; preds = %22
  br i1 %36, label %38, label %67

38:                                               ; preds = %37
  %39 = shl i32 %18, 1
  %40 = icmp sgt i32 %17, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  store i32 0, i32* %5, align 4
  br label %166

42:                                               ; preds = %38
  %43 = shl i32 %17, 1
  %44 = icmp sgt i32 %18, %43
  %45 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 19
  %46 = load i32, i32* %45, align 8
  br i1 %44, label %47, label %50

47:                                               ; preds = %42
  store i32 %46, i32* %5, align 4
  %48 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 20
  %49 = load i32, i32* %48, align 4
  br label %166

50:                                               ; preds = %42
  %51 = sext i32 %46 to i64
  %52 = mul nsw i64 %51, 45875
  %53 = ashr i64 %52, 63
  %54 = add nsw i64 %52, 32768
  %55 = add nsw i64 %54, %53
  %56 = lshr i64 %55, 16
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* %5, align 4
  %58 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 20
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = mul nsw i64 %60, 19661
  %62 = ashr i64 %61, 63
  %63 = add nsw i64 %61, 32768
  %64 = add nsw i64 %63, %62
  %65 = lshr i64 %64, 16
  %66 = trunc i64 %65 to i32
  br label %166

67:                                               ; preds = %37
  %68 = mul i32 %18, -2
  %69 = icmp sgt i32 %17, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  store i32 0, i32* %5, align 4
  br label %166

71:                                               ; preds = %67
  %72 = sub i32 0, %18
  %73 = shl i32 %17, 1
  %74 = icmp slt i32 %73, %72
  %75 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 19
  %76 = load i32, i32* %75, align 8
  br i1 %74, label %77, label %81

77:                                               ; preds = %71
  %78 = sub i32 0, %76
  store i32 %78, i32* %5, align 4
  %79 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 20
  %80 = load i32, i32* %79, align 4
  br label %166

81:                                               ; preds = %71
  %82 = sext i32 %76 to i64
  %83 = mul nsw i64 %82, -45874
  %84 = ashr i64 %83, 63
  %85 = add nsw i64 %83, 32768
  %86 = add nsw i64 %85, %84
  %87 = lshr i64 %86, 16
  %88 = trunc i64 %87 to i32
  store i32 %88, i32* %5, align 4
  %89 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 20
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = mul nsw i64 %91, 19661
  %93 = ashr i64 %92, 63
  %94 = add nsw i64 %92, 32768
  %95 = add nsw i64 %94, %93
  %96 = lshr i64 %95, 16
  %97 = trunc i64 %96 to i32
  br label %166

98:                                               ; preds = %22
  %99 = sub i32 0, %17
  br i1 %36, label %100, label %132

100:                                              ; preds = %98
  %101 = shl i32 %18, 1
  %102 = icmp slt i32 %101, %99
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  store i32 0, i32* %5, align 4
  %104 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 20
  %105 = load i32, i32* %104, align 4
  %106 = shl i32 %105, 1
  br label %166

107:                                              ; preds = %100
  %108 = mul i32 %17, -2
  %109 = icmp sgt i32 %18, %108
  %110 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 19
  %111 = load i32, i32* %110, align 8
  br i1 %109, label %112, label %115

112:                                              ; preds = %107
  store i32 %111, i32* %5, align 4
  %113 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 20
  %114 = load i32, i32* %113, align 4
  br label %166

115:                                              ; preds = %107
  %116 = sext i32 %111 to i64
  %117 = mul nsw i64 %116, 45875
  %118 = ashr i64 %117, 63
  %119 = add nsw i64 %117, 32768
  %120 = add nsw i64 %119, %118
  %121 = lshr i64 %120, 16
  %122 = trunc i64 %121 to i32
  store i32 %122, i32* %5, align 4
  %123 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 20
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = mul nsw i64 %125, 111411
  %127 = ashr i64 %126, 63
  %128 = add nsw i64 %126, 32768
  %129 = add nsw i64 %128, %127
  %130 = lshr i64 %129, 16
  %131 = trunc i64 %130 to i32
  br label %166

132:                                              ; preds = %98
  %133 = mul i32 %18, -2
  %134 = icmp slt i32 %133, %99
  br i1 %134, label %135, label %139

135:                                              ; preds = %132
  store i32 0, i32* %5, align 4
  %136 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 20
  %137 = load i32, i32* %136, align 4
  %138 = shl i32 %137, 1
  br label %166

139:                                              ; preds = %132
  %140 = sub i32 0, %18
  %141 = mul i32 %17, -2
  %142 = icmp slt i32 %141, %140
  %143 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 19
  %144 = load i32, i32* %143, align 8
  br i1 %142, label %145, label %149

145:                                              ; preds = %139
  %146 = sub i32 0, %144
  store i32 %146, i32* %5, align 4
  %147 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 20
  %148 = load i32, i32* %147, align 4
  br label %166

149:                                              ; preds = %139
  %150 = sext i32 %144 to i64
  %151 = mul nsw i64 %150, -45874
  %152 = ashr i64 %151, 63
  %153 = add nsw i64 %151, 32768
  %154 = add nsw i64 %153, %152
  %155 = lshr i64 %154, 16
  %156 = trunc i64 %155 to i32
  store i32 %156, i32* %5, align 4
  %157 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 20
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = mul nsw i64 %159, 111411
  %161 = ashr i64 %160, 63
  %162 = add nsw i64 %160, 32768
  %163 = add nsw i64 %162, %161
  %164 = lshr i64 %163, 16
  %165 = trunc i64 %164 to i32
  br label %166

166:                                              ; preds = %112, %115, %103, %145, %149, %135, %47, %50, %41, %77, %81, %70
  %167 = phi i32 [ 0, %70 ], [ %97, %81 ], [ %80, %77 ], [ 0, %41 ], [ %66, %50 ], [ %49, %47 ], [ %138, %135 ], [ %165, %149 ], [ %148, %145 ], [ %106, %103 ], [ %131, %115 ], [ %114, %112 ]
  store i32 %167, i32* %6, align 4
  br label %168

168:                                              ; preds = %166, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_glyphpath_pushMove(%struct.CF2_GlyphPathRec_*, i64, i64) unnamed_addr #0 {
  %4 = alloca %struct.CF2_CallbackParamsRec_, align 8
  %5 = bitcast %struct.CF2_CallbackParamsRec_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #11
  %6 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %4, i64 0, i32 1
  %7 = bitcast %struct.FT_Vector_* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  %8 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %4, i64 0, i32 4
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 26
  %10 = bitcast %struct.FT_Vector_* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 2
  %12 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %66

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 27, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 27, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 10
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %40, label %23

23:                                               ; preds = %15
  %24 = trunc i64 %19 to i32
  %25 = trunc i64 %17 to i32
  %26 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 11
  store i8 1, i8* %26, align 1
  tail call fastcc void @cf2_glyphpath_lineTo(%struct.CF2_GlyphPathRec_* %0, i32 %25, i32 %24) #11
  %27 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 28
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 23
  %32 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 24, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 24, i32 1
  %35 = load i64, i64* %34, align 8
  tail call fastcc void @cf2_glyphpath_pushPrevElem(%struct.CF2_GlyphPathRec_* %0, %struct.CF2_HintMapRec_* %11, %struct.FT_Vector_* %31, i64 %33, i64 %35, i8 zeroext 1) #11
  br label %36

36:                                               ; preds = %30, %23
  %37 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 13
  store i8 1, i8* %37, align 1
  store i8 0, i8* %20, align 8
  store i8 0, i8* %26, align 1
  store i8 0, i8* %27, align 8
  %38 = load i8, i8* %12, align 8
  %39 = icmp eq i8 %38, 0
  br label %40

40:                                               ; preds = %15, %36
  %41 = phi i1 [ true, %15 ], [ %39, %36 ]
  %42 = shl i64 %17, 32
  %43 = ashr exact i64 %42, 32
  store i64 %43, i64* %16, align 8
  %44 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 25, i32 0
  store i64 %43, i64* %44, align 8
  %45 = shl i64 %19, 32
  %46 = ashr exact i64 %45, 32
  store i64 %46, i64* %18, align 8
  %47 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 25, i32 1
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 13
  store i8 1, i8* %48, align 1
  %49 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 16
  %50 = load %struct.CF2_HintMaskRec_*, %struct.CF2_HintMaskRec_** %49, align 8
  br i1 %41, label %55, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %struct.CF2_HintMaskRec_, %struct.CF2_HintMaskRec_* %50, i64 0, i32 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %40, %51
  %56 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 14
  %57 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %56, align 8
  %58 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 15
  %59 = load %struct.CF2_ArrStackRec_*, %struct.CF2_ArrStackRec_** %58, align 8
  %60 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 17
  %61 = load i32, i32* %60, align 8
  tail call fastcc void @cf2_hintmap_build(%struct.CF2_HintMapRec_* %11, %struct.CF2_ArrStackRec_* %57, %struct.CF2_ArrStackRec_* %59, %struct.CF2_HintMaskRec_* %50, i32 %61, i8 zeroext 0) #11
  br label %62

62:                                               ; preds = %51, %55
  %63 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 3
  %64 = bitcast %struct.CF2_HintMapRec_* %63 to i8*
  %65 = bitcast %struct.CF2_HintMapRec_* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 6184, i1 false) #11
  br label %66

66:                                               ; preds = %3, %62
  %67 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %4, i64 0, i32 1
  %68 = trunc i64 %2 to i32
  %69 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 6
  %70 = load i32, i32* %69, align 8
  %71 = sext i32 %70 to i64
  %72 = shl i64 %1, 32
  %73 = ashr exact i64 %72, 32
  %74 = mul nsw i64 %73, %71
  %75 = ashr i64 %74, 63
  %76 = add nsw i64 %74, 32768
  %77 = add nsw i64 %76, %75
  %78 = lshr i64 %77, 16
  %79 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 7
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = shl i64 %2, 32
  %83 = ashr exact i64 %82, 32
  %84 = mul nsw i64 %83, %81
  %85 = ashr i64 %84, 63
  %86 = add nsw i64 %84, 32768
  %87 = add nsw i64 %86, %85
  %88 = lshr i64 %87, 16
  %89 = add nuw nsw i64 %88, %78
  %90 = tail call fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* %11, i32 %68) #11
  %91 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 0
  %92 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %91, align 8
  %93 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %92, i64 0, i32 7, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = sext i32 %94 to i64
  %96 = shl i64 %89, 32
  %97 = ashr exact i64 %96, 32
  %98 = mul nsw i64 %97, %95
  %99 = ashr i64 %98, 63
  %100 = add nsw i64 %98, 32768
  %101 = add nsw i64 %100, %99
  %102 = lshr i64 %101, 16
  %103 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %92, i64 0, i32 7, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = sext i32 %90 to i64
  %107 = mul nsw i64 %105, %106
  %108 = ashr i64 %107, 63
  %109 = add nsw i64 %107, 32768
  %110 = add nsw i64 %109, %108
  %111 = lshr i64 %110, 16
  %112 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 9, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %111, %113
  %115 = add i64 %114, %102
  %116 = shl i64 %115, 32
  %117 = ashr exact i64 %116, 32
  %118 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %67, i64 0, i32 0
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %92, i64 0, i32 7, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = sext i32 %120 to i64
  %122 = mul nsw i64 %97, %121
  %123 = ashr i64 %122, 63
  %124 = add nsw i64 %122, 32768
  %125 = add nsw i64 %124, %123
  %126 = lshr i64 %125, 16
  %127 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %92, i64 0, i32 7, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = sext i32 %128 to i64
  %130 = mul nsw i64 %129, %106
  %131 = ashr i64 %130, 63
  %132 = add nsw i64 %130, 32768
  %133 = add nsw i64 %132, %131
  %134 = lshr i64 %133, 16
  %135 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 9, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %126, %136
  %138 = add i64 %137, %134
  %139 = shl i64 %138, 32
  %140 = ashr exact i64 %139, 32
  %141 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %4, i64 0, i32 1, i32 1
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 1
  %143 = load %struct.CF2_OutlineCallbacksRec_*, %struct.CF2_OutlineCallbacksRec_** %142, align 8
  %144 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %143, i64 0, i32 0
  %145 = load void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*, void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)** %144, align 8
  call void %145(%struct.CF2_OutlineCallbacksRec_* %143, %struct.CF2_CallbackParamsRec_* nonnull %4) #11
  %146 = bitcast %struct.FT_Vector_* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %146, i64 16, i1 false)
  %147 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 23, i32 0
  store i64 %1, i64* %147, align 8
  %148 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 23, i32 1
  store i64 %2, i64* %148, align 8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_glyphpath_pushPrevElem(%struct.CF2_GlyphPathRec_*, %struct.CF2_HintMapRec_* nocapture, %struct.FT_Vector_* nocapture, i64, i64, i8 zeroext) unnamed_addr #0 {
  %7 = alloca %struct.CF2_CallbackParamsRec_, align 8
  %8 = bitcast %struct.CF2_CallbackParamsRec_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 72, i1 false)
  %9 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 29
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 2
  %12 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 30
  %13 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31
  %14 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 32
  %15 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 33
  %16 = select i1 %11, %struct.FT_Vector_* %12, %struct.FT_Vector_* %14
  %17 = select i1 %11, %struct.FT_Vector_* %13, %struct.FT_Vector_* %15
  %18 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %17, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %19, %21
  %23 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %17, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %24, %26
  %28 = and i1 %22, %27
  br i1 %28, label %211, label %29

29:                                               ; preds = %6
  %30 = trunc i64 %19 to i32
  %31 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %16, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = add i32 %30, 16
  %35 = sub i32 %34, %33
  %36 = ashr i32 %35, 5
  %37 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %17, i64 0, i32 1
  %38 = trunc i64 %24 to i32
  %39 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %16, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i32
  %42 = add i32 %38, 16
  %43 = sub i32 %42, %41
  %44 = ashr i32 %43, 5
  %45 = trunc i64 %3 to i32
  %46 = trunc i64 %21 to i32
  %47 = add i32 %45, 16
  %48 = sub i32 %47, %46
  %49 = ashr i32 %48, 5
  %50 = trunc i64 %4 to i32
  %51 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 1
  %52 = trunc i64 %26 to i32
  %53 = add i32 %50, 16
  %54 = sub i32 %53, %52
  %55 = ashr i32 %54, 5
  %56 = sext i32 %36 to i64
  %57 = sext i32 %55 to i64
  %58 = mul nsw i64 %57, %56
  %59 = ashr i64 %58, 63
  %60 = add nsw i64 %58, 32768
  %61 = add nsw i64 %60, %59
  %62 = lshr i64 %61, 16
  %63 = trunc i64 %62 to i32
  %64 = sext i32 %44 to i64
  %65 = sext i32 %49 to i64
  %66 = mul nsw i64 %64, %65
  %67 = ashr i64 %66, 63
  %68 = add nsw i64 %66, 32768
  %69 = add nsw i64 %68, %67
  %70 = lshr i64 %69, 16
  %71 = trunc i64 %70 to i32
  %72 = sub nsw i32 %63, %71
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %211, label %74

74:                                               ; preds = %29
  %75 = sub i32 16, %41
  %76 = add i32 %75, %52
  %77 = ashr i32 %76, 5
  %78 = add i32 %46, 16
  %79 = sub i32 %78, %33
  %80 = ashr i32 %79, 5
  %81 = sext i32 %80 to i64
  %82 = mul nsw i64 %57, %81
  %83 = ashr i64 %82, 63
  %84 = add nsw i64 %82, 32768
  %85 = add nsw i64 %84, %83
  %86 = lshr i64 %85, 16
  %87 = sext i32 %77 to i64
  %88 = mul nsw i64 %87, %65
  %89 = ashr i64 %88, 63
  %90 = add nsw i64 %88, 32768
  %91 = add nsw i64 %90, %89
  %92 = lshr i64 %91, 16
  %93 = sub nsw i64 %86, %92
  %94 = shl i64 %93, 32
  %95 = ashr exact i64 %94, 32
  %96 = sext i32 %72 to i64
  %97 = tail call i64 @FT_DivFix(i64 %95, i64 %96) #11
  %98 = load i64, i64* %31, align 8
  %99 = load i64, i64* %18, align 8
  %100 = sub i64 %99, %98
  %101 = shl i64 %97, 32
  %102 = ashr exact i64 %101, 32
  %103 = shl i64 %100, 32
  %104 = ashr exact i64 %103, 32
  %105 = mul nsw i64 %104, %102
  %106 = ashr i64 %105, 63
  %107 = add nsw i64 %105, 32768
  %108 = add nsw i64 %107, %106
  %109 = lshr i64 %108, 16
  %110 = trunc i64 %109 to i32
  %111 = add i64 %109, %98
  %112 = shl i64 %111, 32
  %113 = ashr exact i64 %112, 32
  %114 = load i64, i64* %39, align 8
  %115 = load i64, i64* %37, align 8
  %116 = sub i64 %115, %114
  %117 = shl i64 %116, 32
  %118 = ashr exact i64 %117, 32
  %119 = mul nsw i64 %118, %102
  %120 = ashr i64 %119, 63
  %121 = add nsw i64 %119, 32768
  %122 = add nsw i64 %121, %120
  %123 = lshr i64 %122, 16
  %124 = trunc i64 %123 to i32
  %125 = add i64 %123, %114
  %126 = shl i64 %125, 32
  %127 = ashr exact i64 %126, 32
  %128 = icmp eq i64 %99, %98
  br i1 %128, label %129, label %137

129:                                              ; preds = %74
  %130 = icmp slt i32 %110, 0
  %131 = sub i32 0, %110
  %132 = select i1 %130, i32 %131, i32 %110
  %133 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 22
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %132, %134
  %136 = select i1 %135, i64 %98, i64 %113
  br label %137

137:                                              ; preds = %129, %74
  %138 = phi i64 [ %113, %74 ], [ %136, %129 ]
  %139 = icmp eq i64 %115, %114
  br i1 %139, label %140, label %148

140:                                              ; preds = %137
  %141 = icmp slt i32 %124, 0
  %142 = sub i32 0, %124
  %143 = select i1 %141, i32 %142, i32 %124
  %144 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 22
  %145 = load i32, i32* %144, align 4
  %146 = icmp slt i32 %143, %145
  %147 = select i1 %146, i64 %114, i64 %127
  br label %148

148:                                              ; preds = %140, %137
  %149 = phi i64 [ %127, %137 ], [ %147, %140 ]
  %150 = load i64, i64* %20, align 8
  %151 = icmp eq i64 %150, %3
  br i1 %151, label %152, label %163

152:                                              ; preds = %148
  %153 = trunc i64 %138 to i32
  %154 = sub i32 %153, %45
  %155 = icmp slt i32 %154, 0
  %156 = sub i32 0, %154
  %157 = select i1 %155, i32 %156, i32 %154
  %158 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 22
  %159 = load i32, i32* %158, align 4
  %160 = icmp slt i32 %157, %159
  %161 = select i1 %160, i64 %3, i64 %138
  %162 = select i1 %160, i64 %3, i64 %138
  br label %163

163:                                              ; preds = %152, %148
  %164 = phi i64 [ %138, %148 ], [ %161, %152 ]
  %165 = phi i64 [ %138, %148 ], [ %162, %152 ]
  %166 = load i64, i64* %51, align 8
  %167 = icmp eq i64 %166, %4
  br i1 %167, label %168, label %179

168:                                              ; preds = %163
  %169 = trunc i64 %149 to i32
  %170 = sub i32 %169, %50
  %171 = icmp slt i32 %170, 0
  %172 = sub i32 0, %170
  %173 = select i1 %171, i32 %172, i32 %170
  %174 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 22
  %175 = load i32, i32* %174, align 4
  %176 = icmp slt i32 %173, %175
  %177 = select i1 %176, i64 %4, i64 %149
  %178 = select i1 %176, i64 %4, i64 %149
  br label %179

179:                                              ; preds = %168, %163
  %180 = phi i64 [ %149, %163 ], [ %177, %168 ]
  %181 = phi i64 [ %149, %163 ], [ %178, %168 ]
  %182 = trunc i64 %99 to i32
  %183 = trunc i64 %150 to i32
  %184 = add i32 %183, %182
  %185 = sdiv i32 %184, 2
  %186 = sext i32 %185 to i64
  %187 = sub nsw i64 %165, %186
  %188 = icmp slt i64 %187, 0
  %189 = shl i64 %187, 32
  %190 = sub i64 0, %189
  %191 = ashr exact i64 %190, 32
  %192 = select i1 %188, i64 %191, i64 %187
  %193 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 21
  %194 = load i32, i32* %193, align 8
  %195 = sext i32 %194 to i64
  %196 = icmp sgt i64 %192, %195
  br i1 %196, label %211, label %197

197:                                              ; preds = %179
  %198 = trunc i64 %115 to i32
  %199 = trunc i64 %166 to i32
  %200 = add i32 %199, %198
  %201 = sdiv i32 %200, 2
  %202 = sext i32 %201 to i64
  %203 = sub nsw i64 %181, %202
  %204 = icmp slt i64 %203, 0
  %205 = shl i64 %203, 32
  %206 = sub i64 0, %205
  %207 = ashr exact i64 %206, 32
  %208 = select i1 %204, i64 %207, i64 %203
  %209 = icmp sgt i64 %208, %195
  br i1 %209, label %211, label %210

210:                                              ; preds = %197
  store i64 %164, i64* %18, align 8
  store i64 %180, i64* %37, align 8
  br label %211

211:                                              ; preds = %6, %29, %179, %197, %210
  %212 = phi i64 [ %164, %197 ], [ %164, %210 ], [ %164, %179 ], [ 0, %29 ], [ 0, %6 ]
  %213 = phi i64 [ %180, %197 ], [ %180, %210 ], [ %180, %179 ], [ 0, %29 ], [ 0, %6 ]
  %214 = phi i8 [ 0, %197 ], [ 1, %210 ], [ 0, %179 ], [ 0, %29 ], [ 0, %6 ]
  %215 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 26
  %216 = bitcast %struct.FT_Vector_* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %216, i64 16, i1 false)
  %217 = load i32, i32* %9, align 4
  switch i32 %217, label %597 [
    i32 2, label %218
    i32 4, label %365
  ]

218:                                              ; preds = %211
  %219 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 4
  store i32 2, i32* %219, align 8
  %220 = icmp eq i8 %5, 0
  br i1 %220, label %266, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 3
  %223 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31, i32 1
  %226 = load i64, i64* %225, align 8
  %227 = trunc i64 %226 to i32
  %228 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 6
  %229 = load i32, i32* %228, align 8
  %230 = sext i32 %229 to i64
  %231 = shl i64 %224, 32
  %232 = ashr exact i64 %231, 32
  %233 = mul nsw i64 %232, %230
  %234 = ashr i64 %233, 63
  %235 = add nsw i64 %233, 32768
  %236 = add nsw i64 %235, %234
  %237 = lshr i64 %236, 16
  %238 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 7
  %239 = load i32, i32* %238, align 4
  %240 = sext i32 %239 to i64
  %241 = shl i64 %226, 32
  %242 = ashr exact i64 %241, 32
  %243 = mul nsw i64 %242, %240
  %244 = ashr i64 %243, 63
  %245 = add nsw i64 %243, 32768
  %246 = add nsw i64 %245, %244
  %247 = lshr i64 %246, 16
  %248 = add nuw nsw i64 %247, %237
  %249 = tail call fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* %222, i32 %227) #11
  %250 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 0
  %251 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %250, align 8
  %252 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %251, i64 0, i32 7, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = sext i32 %253 to i64
  %255 = shl i64 %248, 32
  %256 = ashr exact i64 %255, 32
  %257 = mul nsw i64 %256, %254
  %258 = ashr i64 %257, 63
  %259 = add nsw i64 %257, 32768
  %260 = add nsw i64 %259, %258
  %261 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %251, i64 0, i32 7, i32 2
  %262 = load i32, i32* %261, align 4
  %263 = sext i32 %262 to i64
  %264 = sext i32 %249 to i64
  %265 = mul nsw i64 %263, %264
  br label %310

266:                                              ; preds = %218
  %267 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31, i32 0
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31, i32 1
  %270 = load i64, i64* %269, align 8
  %271 = trunc i64 %270 to i32
  %272 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 6
  %273 = load i32, i32* %272, align 8
  %274 = sext i32 %273 to i64
  %275 = shl i64 %268, 32
  %276 = ashr exact i64 %275, 32
  %277 = mul nsw i64 %276, %274
  %278 = ashr i64 %277, 63
  %279 = add nsw i64 %277, 32768
  %280 = add nsw i64 %279, %278
  %281 = lshr i64 %280, 16
  %282 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 7
  %283 = load i32, i32* %282, align 4
  %284 = sext i32 %283 to i64
  %285 = shl i64 %270, 32
  %286 = ashr exact i64 %285, 32
  %287 = mul nsw i64 %286, %284
  %288 = ashr i64 %287, 63
  %289 = add nsw i64 %287, 32768
  %290 = add nsw i64 %289, %288
  %291 = lshr i64 %290, 16
  %292 = add nuw nsw i64 %291, %281
  %293 = tail call fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* %1, i32 %271) #11
  %294 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 0
  %295 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %294, align 8
  %296 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %295, i64 0, i32 7, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = sext i32 %297 to i64
  %299 = shl i64 %292, 32
  %300 = ashr exact i64 %299, 32
  %301 = mul nsw i64 %300, %298
  %302 = ashr i64 %301, 63
  %303 = add nsw i64 %301, 32768
  %304 = add nsw i64 %303, %302
  %305 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %295, i64 0, i32 7, i32 2
  %306 = load i32, i32* %305, align 4
  %307 = sext i32 %306 to i64
  %308 = sext i32 %293 to i64
  %309 = mul nsw i64 %307, %308
  br label %310

310:                                              ; preds = %266, %221
  %311 = phi i64 [ %309, %266 ], [ %265, %221 ]
  %312 = phi i64 [ %304, %266 ], [ %260, %221 ]
  %313 = phi %struct.CF2_FontRec_* [ %295, %266 ], [ %251, %221 ]
  %314 = phi i64 [ %300, %266 ], [ %256, %221 ]
  %315 = phi i64 [ %308, %266 ], [ %264, %221 ]
  %316 = lshr i64 %312, 16
  %317 = ashr i64 %311, 63
  %318 = add nsw i64 %311, 32768
  %319 = add nsw i64 %318, %317
  %320 = lshr i64 %319, 16
  %321 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 9, i32 0
  %322 = load i64, i64* %321, align 8
  %323 = add i64 %320, %322
  %324 = add i64 %323, %316
  %325 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %313, i64 0, i32 7, i32 1
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = mul nsw i64 %314, %327
  %329 = ashr i64 %328, 63
  %330 = add nsw i64 %328, 32768
  %331 = add nsw i64 %330, %329
  %332 = lshr i64 %331, 16
  %333 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %313, i64 0, i32 7, i32 3
  %334 = load i32, i32* %333, align 4
  %335 = sext i32 %334 to i64
  %336 = mul nsw i64 %315, %335
  %337 = ashr i64 %336, 63
  %338 = add nsw i64 %336, 32768
  %339 = add nsw i64 %338, %337
  %340 = lshr i64 %339, 16
  %341 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 9, i32 1
  %342 = load i64, i64* %341, align 8
  %343 = add i64 %332, %342
  %344 = add i64 %343, %340
  %345 = shl i64 %344, 32
  %346 = shl i64 %324, 32
  %347 = ashr exact i64 %345, 32
  %348 = ashr exact i64 %346, 32
  %349 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 1, i32 0
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 1, i32 1
  store i64 %347, i64* %350, align 8
  %351 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 0, i32 0
  %352 = load i64, i64* %351, align 8
  %353 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 1
  %354 = icmp eq i64 %352, %348
  br i1 %354, label %355, label %359

355:                                              ; preds = %310
  %356 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 0, i32 1
  %357 = load i64, i64* %356, align 8
  %358 = icmp eq i64 %357, %347
  br i1 %358, label %597, label %359

359:                                              ; preds = %355, %310
  %360 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 1
  %361 = load %struct.CF2_OutlineCallbacksRec_*, %struct.CF2_OutlineCallbacksRec_** %360, align 8
  %362 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %361, i64 0, i32 1
  %363 = load void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*, void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)** %362, align 8
  call void %363(%struct.CF2_OutlineCallbacksRec_* %361, %struct.CF2_CallbackParamsRec_* nonnull %7) #11
  %364 = bitcast %struct.FT_Vector_* %353 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %364, i64 16, i1 false)
  br label %597

365:                                              ; preds = %211
  %366 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 4
  store i32 4, i32* %366, align 8
  %367 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31, i32 0
  %368 = load i64, i64* %367, align 8
  %369 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 31, i32 1
  %370 = load i64, i64* %369, align 8
  %371 = trunc i64 %370 to i32
  %372 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 6
  %373 = load i32, i32* %372, align 8
  %374 = sext i32 %373 to i64
  %375 = shl i64 %368, 32
  %376 = ashr exact i64 %375, 32
  %377 = mul nsw i64 %376, %374
  %378 = ashr i64 %377, 63
  %379 = add nsw i64 %377, 32768
  %380 = add nsw i64 %379, %378
  %381 = lshr i64 %380, 16
  %382 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 7
  %383 = load i32, i32* %382, align 4
  %384 = sext i32 %383 to i64
  %385 = shl i64 %370, 32
  %386 = ashr exact i64 %385, 32
  %387 = mul nsw i64 %386, %384
  %388 = ashr i64 %387, 63
  %389 = add nsw i64 %387, 32768
  %390 = add nsw i64 %389, %388
  %391 = lshr i64 %390, 16
  %392 = add nuw nsw i64 %391, %381
  %393 = tail call fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* %1, i32 %371) #11
  %394 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 0
  %395 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %394, align 8
  %396 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %395, i64 0, i32 7, i32 0
  %397 = load i32, i32* %396, align 4
  %398 = sext i32 %397 to i64
  %399 = shl i64 %392, 32
  %400 = ashr exact i64 %399, 32
  %401 = mul nsw i64 %400, %398
  %402 = ashr i64 %401, 63
  %403 = add nsw i64 %401, 32768
  %404 = add nsw i64 %403, %402
  %405 = lshr i64 %404, 16
  %406 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %395, i64 0, i32 7, i32 2
  %407 = load i32, i32* %406, align 4
  %408 = sext i32 %407 to i64
  %409 = sext i32 %393 to i64
  %410 = mul nsw i64 %408, %409
  %411 = ashr i64 %410, 63
  %412 = add nsw i64 %410, 32768
  %413 = add nsw i64 %412, %411
  %414 = lshr i64 %413, 16
  %415 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 9, i32 0
  %416 = load i64, i64* %415, align 8
  %417 = add i64 %414, %416
  %418 = add i64 %417, %405
  %419 = shl i64 %418, 32
  %420 = ashr exact i64 %419, 32
  %421 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 1, i32 0
  store i64 %420, i64* %421, align 8
  %422 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %395, i64 0, i32 7, i32 1
  %423 = load i32, i32* %422, align 4
  %424 = sext i32 %423 to i64
  %425 = mul nsw i64 %400, %424
  %426 = ashr i64 %425, 63
  %427 = add nsw i64 %425, 32768
  %428 = add nsw i64 %427, %426
  %429 = lshr i64 %428, 16
  %430 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %395, i64 0, i32 7, i32 3
  %431 = load i32, i32* %430, align 4
  %432 = sext i32 %431 to i64
  %433 = mul nsw i64 %432, %409
  %434 = ashr i64 %433, 63
  %435 = add nsw i64 %433, 32768
  %436 = add nsw i64 %435, %434
  %437 = lshr i64 %436, 16
  %438 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 9, i32 1
  %439 = load i64, i64* %438, align 8
  %440 = add i64 %429, %439
  %441 = add i64 %440, %437
  %442 = shl i64 %441, 32
  %443 = ashr exact i64 %442, 32
  %444 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 1, i32 1
  store i64 %443, i64* %444, align 8
  %445 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 32, i32 0
  %446 = load i64, i64* %445, align 8
  %447 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 32, i32 1
  %448 = load i64, i64* %447, align 8
  %449 = trunc i64 %448 to i32
  %450 = load i32, i32* %372, align 8
  %451 = sext i32 %450 to i64
  %452 = shl i64 %446, 32
  %453 = ashr exact i64 %452, 32
  %454 = mul nsw i64 %453, %451
  %455 = ashr i64 %454, 63
  %456 = add nsw i64 %454, 32768
  %457 = add nsw i64 %456, %455
  %458 = lshr i64 %457, 16
  %459 = load i32, i32* %382, align 4
  %460 = sext i32 %459 to i64
  %461 = shl i64 %448, 32
  %462 = ashr exact i64 %461, 32
  %463 = mul nsw i64 %462, %460
  %464 = ashr i64 %463, 63
  %465 = add nsw i64 %463, 32768
  %466 = add nsw i64 %465, %464
  %467 = lshr i64 %466, 16
  %468 = add nuw nsw i64 %467, %458
  %469 = tail call fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* %1, i32 %449) #11
  %470 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %394, align 8
  %471 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %470, i64 0, i32 7, i32 0
  %472 = load i32, i32* %471, align 4
  %473 = sext i32 %472 to i64
  %474 = shl i64 %468, 32
  %475 = ashr exact i64 %474, 32
  %476 = mul nsw i64 %475, %473
  %477 = ashr i64 %476, 63
  %478 = add nsw i64 %476, 32768
  %479 = add nsw i64 %478, %477
  %480 = lshr i64 %479, 16
  %481 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %470, i64 0, i32 7, i32 2
  %482 = load i32, i32* %481, align 4
  %483 = sext i32 %482 to i64
  %484 = sext i32 %469 to i64
  %485 = mul nsw i64 %483, %484
  %486 = ashr i64 %485, 63
  %487 = add nsw i64 %485, 32768
  %488 = add nsw i64 %487, %486
  %489 = lshr i64 %488, 16
  %490 = load i64, i64* %415, align 8
  %491 = add i64 %489, %490
  %492 = add i64 %491, %480
  %493 = shl i64 %492, 32
  %494 = ashr exact i64 %493, 32
  %495 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 2, i32 0
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %470, i64 0, i32 7, i32 1
  %497 = load i32, i32* %496, align 4
  %498 = sext i32 %497 to i64
  %499 = mul nsw i64 %475, %498
  %500 = ashr i64 %499, 63
  %501 = add nsw i64 %499, 32768
  %502 = add nsw i64 %501, %500
  %503 = lshr i64 %502, 16
  %504 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %470, i64 0, i32 7, i32 3
  %505 = load i32, i32* %504, align 4
  %506 = sext i32 %505 to i64
  %507 = mul nsw i64 %506, %484
  %508 = ashr i64 %507, 63
  %509 = add nsw i64 %507, 32768
  %510 = add nsw i64 %509, %508
  %511 = lshr i64 %510, 16
  %512 = load i64, i64* %438, align 8
  %513 = add i64 %503, %512
  %514 = add i64 %513, %511
  %515 = shl i64 %514, 32
  %516 = ashr exact i64 %515, 32
  %517 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 2, i32 1
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 3
  %519 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 33, i32 0
  %520 = load i64, i64* %519, align 8
  %521 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 33, i32 1
  %522 = load i64, i64* %521, align 8
  %523 = trunc i64 %522 to i32
  %524 = load i32, i32* %372, align 8
  %525 = sext i32 %524 to i64
  %526 = shl i64 %520, 32
  %527 = ashr exact i64 %526, 32
  %528 = mul nsw i64 %527, %525
  %529 = ashr i64 %528, 63
  %530 = add nsw i64 %528, 32768
  %531 = add nsw i64 %530, %529
  %532 = lshr i64 %531, 16
  %533 = load i32, i32* %382, align 4
  %534 = sext i32 %533 to i64
  %535 = shl i64 %522, 32
  %536 = ashr exact i64 %535, 32
  %537 = mul nsw i64 %536, %534
  %538 = ashr i64 %537, 63
  %539 = add nsw i64 %537, 32768
  %540 = add nsw i64 %539, %538
  %541 = lshr i64 %540, 16
  %542 = add nuw nsw i64 %541, %532
  %543 = tail call fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* %1, i32 %523) #11
  %544 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %394, align 8
  %545 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %544, i64 0, i32 7, i32 0
  %546 = load i32, i32* %545, align 4
  %547 = sext i32 %546 to i64
  %548 = shl i64 %542, 32
  %549 = ashr exact i64 %548, 32
  %550 = mul nsw i64 %549, %547
  %551 = ashr i64 %550, 63
  %552 = add nsw i64 %550, 32768
  %553 = add nsw i64 %552, %551
  %554 = lshr i64 %553, 16
  %555 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %544, i64 0, i32 7, i32 2
  %556 = load i32, i32* %555, align 4
  %557 = sext i32 %556 to i64
  %558 = sext i32 %543 to i64
  %559 = mul nsw i64 %557, %558
  %560 = ashr i64 %559, 63
  %561 = add nsw i64 %559, 32768
  %562 = add nsw i64 %561, %560
  %563 = lshr i64 %562, 16
  %564 = load i64, i64* %415, align 8
  %565 = add i64 %563, %564
  %566 = add i64 %565, %554
  %567 = shl i64 %566, 32
  %568 = ashr exact i64 %567, 32
  %569 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %518, i64 0, i32 0
  store i64 %568, i64* %569, align 8
  %570 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %544, i64 0, i32 7, i32 1
  %571 = load i32, i32* %570, align 4
  %572 = sext i32 %571 to i64
  %573 = mul nsw i64 %549, %572
  %574 = ashr i64 %573, 63
  %575 = add nsw i64 %573, 32768
  %576 = add nsw i64 %575, %574
  %577 = lshr i64 %576, 16
  %578 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %544, i64 0, i32 7, i32 3
  %579 = load i32, i32* %578, align 4
  %580 = sext i32 %579 to i64
  %581 = mul nsw i64 %580, %558
  %582 = ashr i64 %581, 63
  %583 = add nsw i64 %581, 32768
  %584 = add nsw i64 %583, %582
  %585 = lshr i64 %584, 16
  %586 = load i64, i64* %438, align 8
  %587 = add i64 %577, %586
  %588 = add i64 %587, %585
  %589 = shl i64 %588, 32
  %590 = ashr exact i64 %589, 32
  %591 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 3, i32 1
  store i64 %590, i64* %591, align 8
  %592 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 1
  %593 = load %struct.CF2_OutlineCallbacksRec_*, %struct.CF2_OutlineCallbacksRec_** %592, align 8
  %594 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %593, i64 0, i32 3
  %595 = load void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*, void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)** %594, align 8
  call void %595(%struct.CF2_OutlineCallbacksRec_* %593, %struct.CF2_CallbackParamsRec_* nonnull %7) #11
  %596 = bitcast %struct.FT_Vector_* %518 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %596, i64 16, i1 false)
  br label %597

597:                                              ; preds = %355, %359, %211, %365
  %598 = icmp ne i8 %214, 0
  %599 = icmp eq i8 %5, 0
  %600 = and i1 %599, %598
  br i1 %600, label %745, label %601

601:                                              ; preds = %597
  br i1 %599, label %646, label %602

602:                                              ; preds = %601
  %603 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 3
  %604 = load i64, i64* %20, align 8
  %605 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 1
  %606 = load i64, i64* %605, align 8
  %607 = trunc i64 %606 to i32
  %608 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 6
  %609 = load i32, i32* %608, align 8
  %610 = sext i32 %609 to i64
  %611 = shl i64 %604, 32
  %612 = ashr exact i64 %611, 32
  %613 = mul nsw i64 %612, %610
  %614 = ashr i64 %613, 63
  %615 = add nsw i64 %613, 32768
  %616 = add nsw i64 %615, %614
  %617 = lshr i64 %616, 16
  %618 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 7
  %619 = load i32, i32* %618, align 4
  %620 = sext i32 %619 to i64
  %621 = shl i64 %606, 32
  %622 = ashr exact i64 %621, 32
  %623 = mul nsw i64 %622, %620
  %624 = ashr i64 %623, 63
  %625 = add nsw i64 %623, 32768
  %626 = add nsw i64 %625, %624
  %627 = lshr i64 %626, 16
  %628 = add nuw nsw i64 %627, %617
  %629 = call fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* %603, i32 %607) #11
  %630 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 0
  %631 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %630, align 8
  %632 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %631, i64 0, i32 7, i32 0
  %633 = load i32, i32* %632, align 4
  %634 = sext i32 %633 to i64
  %635 = shl i64 %628, 32
  %636 = ashr exact i64 %635, 32
  %637 = mul nsw i64 %636, %634
  %638 = ashr i64 %637, 63
  %639 = add nsw i64 %637, 32768
  %640 = add nsw i64 %639, %638
  %641 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %631, i64 0, i32 7, i32 2
  %642 = load i32, i32* %641, align 4
  %643 = sext i32 %642 to i64
  %644 = sext i32 %629 to i64
  %645 = mul nsw i64 %643, %644
  br label %689

646:                                              ; preds = %601
  %647 = load i64, i64* %20, align 8
  %648 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 1
  %649 = load i64, i64* %648, align 8
  %650 = trunc i64 %649 to i32
  %651 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 6
  %652 = load i32, i32* %651, align 8
  %653 = sext i32 %652 to i64
  %654 = shl i64 %647, 32
  %655 = ashr exact i64 %654, 32
  %656 = mul nsw i64 %655, %653
  %657 = ashr i64 %656, 63
  %658 = add nsw i64 %656, 32768
  %659 = add nsw i64 %658, %657
  %660 = lshr i64 %659, 16
  %661 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 7
  %662 = load i32, i32* %661, align 4
  %663 = sext i32 %662 to i64
  %664 = shl i64 %649, 32
  %665 = ashr exact i64 %664, 32
  %666 = mul nsw i64 %665, %663
  %667 = ashr i64 %666, 63
  %668 = add nsw i64 %666, 32768
  %669 = add nsw i64 %668, %667
  %670 = lshr i64 %669, 16
  %671 = add nuw nsw i64 %670, %660
  %672 = call fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* %1, i32 %650) #11
  %673 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 0
  %674 = load %struct.CF2_FontRec_*, %struct.CF2_FontRec_** %673, align 8
  %675 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %674, i64 0, i32 7, i32 0
  %676 = load i32, i32* %675, align 4
  %677 = sext i32 %676 to i64
  %678 = shl i64 %671, 32
  %679 = ashr exact i64 %678, 32
  %680 = mul nsw i64 %679, %677
  %681 = ashr i64 %680, 63
  %682 = add nsw i64 %680, 32768
  %683 = add nsw i64 %682, %681
  %684 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %674, i64 0, i32 7, i32 2
  %685 = load i32, i32* %684, align 4
  %686 = sext i32 %685 to i64
  %687 = sext i32 %672 to i64
  %688 = mul nsw i64 %686, %687
  br label %689

689:                                              ; preds = %646, %602
  %690 = phi i64 [ %688, %646 ], [ %645, %602 ]
  %691 = phi i64 [ %683, %646 ], [ %640, %602 ]
  %692 = phi %struct.CF2_FontRec_* [ %674, %646 ], [ %631, %602 ]
  %693 = phi i64 [ %679, %646 ], [ %636, %602 ]
  %694 = phi i64 [ %687, %646 ], [ %644, %602 ]
  %695 = lshr i64 %691, 16
  %696 = ashr i64 %690, 63
  %697 = add nsw i64 %690, 32768
  %698 = add nsw i64 %697, %696
  %699 = lshr i64 %698, 16
  %700 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 9, i32 0
  %701 = load i64, i64* %700, align 8
  %702 = add i64 %699, %701
  %703 = add i64 %702, %695
  %704 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %692, i64 0, i32 7, i32 1
  %705 = load i32, i32* %704, align 4
  %706 = sext i32 %705 to i64
  %707 = mul nsw i64 %693, %706
  %708 = ashr i64 %707, 63
  %709 = add nsw i64 %707, 32768
  %710 = add nsw i64 %709, %708
  %711 = lshr i64 %710, 16
  %712 = getelementptr inbounds %struct.CF2_FontRec_, %struct.CF2_FontRec_* %692, i64 0, i32 7, i32 3
  %713 = load i32, i32* %712, align 4
  %714 = sext i32 %713 to i64
  %715 = mul nsw i64 %694, %714
  %716 = ashr i64 %715, 63
  %717 = add nsw i64 %715, 32768
  %718 = add nsw i64 %717, %716
  %719 = lshr i64 %718, 16
  %720 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 9, i32 1
  %721 = load i64, i64* %720, align 8
  %722 = add i64 %711, %721
  %723 = add i64 %722, %719
  %724 = shl i64 %723, 32
  %725 = shl i64 %703, 32
  %726 = ashr exact i64 %724, 32
  %727 = ashr exact i64 %725, 32
  %728 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 1, i32 0
  store i64 %727, i64* %728, align 8
  %729 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 1, i32 1
  store i64 %726, i64* %729, align 8
  %730 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 1
  %731 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %215, i64 0, i32 0
  %732 = load i64, i64* %731, align 8
  %733 = icmp eq i64 %727, %732
  br i1 %733, label %734, label %738

734:                                              ; preds = %689
  %735 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 26, i32 1
  %736 = load i64, i64* %735, align 8
  %737 = icmp eq i64 %726, %736
  br i1 %737, label %745, label %738

738:                                              ; preds = %734, %689
  %739 = getelementptr inbounds %struct.CF2_CallbackParamsRec_, %struct.CF2_CallbackParamsRec_* %7, i64 0, i32 4
  store i32 2, i32* %739, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %216, i64 16, i1 false)
  %740 = getelementptr inbounds %struct.CF2_GlyphPathRec_, %struct.CF2_GlyphPathRec_* %0, i64 0, i32 1
  %741 = load %struct.CF2_OutlineCallbacksRec_*, %struct.CF2_OutlineCallbacksRec_** %740, align 8
  %742 = getelementptr inbounds %struct.CF2_OutlineCallbacksRec_, %struct.CF2_OutlineCallbacksRec_* %741, i64 0, i32 1
  %743 = load void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)*, void (%struct.CF2_OutlineCallbacksRec_*, %struct.CF2_CallbackParamsRec_*)** %742, align 8
  call void %743(%struct.CF2_OutlineCallbacksRec_* %741, %struct.CF2_CallbackParamsRec_* nonnull %7) #11
  %744 = bitcast %struct.FT_Vector_* %730 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %744, i64 16, i1 false)
  br label %745

745:                                              ; preds = %597, %734, %738
  br i1 %598, label %746, label %748

746:                                              ; preds = %745
  store i64 %212, i64* %20, align 8
  %747 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 1
  store i64 %213, i64* %747, align 8
  br label %748

748:                                              ; preds = %746, %745
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* nocapture, i32) unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %1 to i64
  %14 = sext i32 %12 to i64
  %15 = mul nsw i64 %14, %13
  %16 = ashr i64 %15, 63
  %17 = add nsw i64 %15, 32768
  %18 = add nsw i64 %17, %16
  %19 = lshr i64 %18, 16
  %20 = trunc i64 %19 to i32
  br label %85

21:                                               ; preds = %6
  %22 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 7
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %4, -1
  %25 = zext i32 %23 to i64
  %26 = zext i32 %24 to i64
  br label %27

27:                                               ; preds = %30, %21
  %28 = phi i64 [ %31, %30 ], [ %25, %21 ]
  %29 = icmp ult i64 %28, %26
  br i1 %29, label %30, label %35

30:                                               ; preds = %27
  %31 = add nuw nsw i64 %28, 1
  %32 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %31, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, %1
  br i1 %34, label %35, label %27

35:                                               ; preds = %30, %27
  %36 = trunc i64 %28 to i32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %35, %44
  %39 = phi i32 [ %45, %44 ], [ %36, %35 ]
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %40, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, %1
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = add i32 %39, -1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %38

47:                                               ; preds = %38
  store i32 %39, i32* %22, align 4
  br label %67

48:                                               ; preds = %44, %35
  store i32 0, i32* %22, align 4
  %49 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, %1
  br i1 %51, label %52, label %67

52:                                               ; preds = %48
  %53 = sub i32 %1, %50
  %54 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 5
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %53 to i64
  %57 = sext i32 %55 to i64
  %58 = mul nsw i64 %57, %56
  %59 = ashr i64 %58, 63
  %60 = add nsw i64 %58, 32768
  %61 = add nsw i64 %60, %59
  %62 = lshr i64 %61, 16
  %63 = trunc i64 %62 to i32
  %64 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = add i32 %65, %63
  br label %85

67:                                               ; preds = %48, %47
  %68 = phi i32 [ %42, %47 ], [ %50, %48 ]
  %69 = phi i32 [ %39, %47 ], [ 0, %48 ]
  %70 = zext i32 %69 to i64
  %71 = sub i32 %1, %68
  %72 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %70, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = sext i32 %71 to i64
  %75 = sext i32 %73 to i64
  %76 = mul nsw i64 %75, %74
  %77 = ashr i64 %76, 63
  %78 = add nsw i64 %76, 32768
  %79 = add nsw i64 %78, %77
  %80 = lshr i64 %79, 16
  %81 = trunc i64 %80 to i32
  %82 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %70, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = add i32 %83, %81
  br label %85

85:                                               ; preds = %52, %67, %10
  %86 = phi i32 [ %20, %10 ], [ %66, %52 ], [ %84, %67 ]
  ret i32 %86
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @cf2_hintmap_insertHint(%struct.CF2_HintMapRec_* nocapture, %struct.CF2_HintRec_* nocapture, %struct.CF2_HintRec_* nocapture) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %2, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %186, label %17

17:                                               ; preds = %7, %3, %11
  %18 = phi i1 [ true, %11 ], [ false, %7 ], [ false, %3 ]
  %19 = phi %struct.CF2_HintRec_* [ %1, %11 ], [ %1, %7 ], [ %2, %3 ]
  %20 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 6
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %53, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %19, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %21 to i64
  br label %27

27:                                               ; preds = %23, %32
  %28 = phi i64 [ 0, %23 ], [ %33, %32 ]
  %29 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %28, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %30, %25
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = add nuw nsw i64 %28, 1
  %34 = icmp ult i64 %33, %26
  br i1 %34, label %27, label %51

35:                                               ; preds = %27
  %36 = trunc i64 %28 to i32
  %37 = and i64 %28, 4294967295
  %38 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %37, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, %25
  br i1 %40, label %186, label %41

41:                                               ; preds = %35
  br i1 %18, label %42, label %46

42:                                               ; preds = %41
  %43 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %2, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %39, %44
  br i1 %45, label %46, label %186

46:                                               ; preds = %42, %41
  %47 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %37, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %53, label %186

51:                                               ; preds = %32
  %52 = trunc i64 %33 to i32
  br label %53

53:                                               ; preds = %51, %17, %46
  %54 = phi i32 [ %36, %46 ], [ 0, %17 ], [ %52, %51 ]
  %55 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 1
  %56 = load %struct.CF2_HintMapRec_*, %struct.CF2_HintMapRec_** %55, align 8
  %57 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %56, i64 0, i32 3
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %97, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %19, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 16
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %97

65:                                               ; preds = %60
  br i1 %18, label %66, label %92

66:                                               ; preds = %65
  %67 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %2, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %19, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, %68
  %72 = sdiv i32 %71, 2
  %73 = tail call fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* %56, i32 %72)
  %74 = load i32, i32* %67, align 8
  %75 = load i32, i32* %69, align 8
  %76 = sub i32 %74, %75
  %77 = sdiv i32 %76, 2
  %78 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 5
  %79 = load i32, i32* %78, align 4
  %80 = sext i32 %77 to i64
  %81 = sext i32 %79 to i64
  %82 = mul nsw i64 %80, %81
  %83 = ashr i64 %82, 63
  %84 = add nsw i64 %82, 32768
  %85 = add nsw i64 %84, %83
  %86 = lshr i64 %85, 16
  %87 = trunc i64 %86 to i32
  %88 = sub i32 %73, %87
  %89 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %19, i64 0, i32 3
  store i32 %88, i32* %89, align 4
  %90 = add i32 %73, %87
  %91 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %2, i64 0, i32 3
  store i32 %90, i32* %91, align 4
  br label %97

92:                                               ; preds = %65
  %93 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %19, i64 0, i32 2
  %94 = load i32, i32* %93, align 8
  %95 = tail call fastcc i32 @cf2_hintmap_map(%struct.CF2_HintMapRec_* %56, i32 %94)
  %96 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %19, i64 0, i32 3
  store i32 %95, i32* %96, align 4
  br label %97

97:                                               ; preds = %60, %53, %66, %92
  %98 = icmp eq i32 %54, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %19, i64 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %54, -1
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %103, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %101, %105
  br i1 %106, label %186, label %107

107:                                              ; preds = %97, %99
  %108 = load i32, i32* %20, align 8
  %109 = icmp ugt i32 %108, %54
  br i1 %109, label %110, label %125

110:                                              ; preds = %107
  br i1 %18, label %111, label %118

111:                                              ; preds = %110
  %112 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %2, i64 0, i32 3
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %54 to i64
  %115 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %114, i32 3
  %116 = load i32, i32* %115, align 4
  %117 = icmp sgt i32 %113, %116
  br i1 %117, label %186, label %125

118:                                              ; preds = %110
  %119 = getelementptr inbounds %struct.CF2_HintRec_, %struct.CF2_HintRec_* %19, i64 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %54 to i64
  %122 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %121, i32 3
  %123 = load i32, i32* %122, align 4
  %124 = icmp sgt i32 %120, %123
  br i1 %124, label %186, label %125

125:                                              ; preds = %111, %118, %107
  %126 = zext i1 %18 to i32
  %127 = add i32 %108, %126
  %128 = sub i32 %108, %54
  %129 = icmp ugt i32 %127, 191
  br i1 %129, label %186, label %130

130:                                              ; preds = %125
  %131 = icmp eq i32 %128, 0
  br i1 %131, label %173, label %132

132:                                              ; preds = %130
  %133 = and i32 %128, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %145, label %135

135:                                              ; preds = %132
  %136 = add i32 %108, -1
  %137 = add i32 %128, -1
  %138 = add i32 %127, -1
  %139 = zext i32 %127 to i64
  %140 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %139
  %141 = zext i32 %136 to i64
  %142 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %141
  %143 = bitcast %struct.CF2_HintRec_* %140 to i8*
  %144 = bitcast %struct.CF2_HintRec_* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 32, i1 false)
  br label %145

145:                                              ; preds = %132, %135
  %146 = phi i32 [ %108, %132 ], [ %136, %135 ]
  %147 = phi i32 [ %128, %132 ], [ %137, %135 ]
  %148 = phi i32 [ %127, %132 ], [ %138, %135 ]
  %149 = add i32 %54, 1
  %150 = icmp eq i32 %108, %149
  br i1 %150, label %173, label %151

151:                                              ; preds = %145, %151
  %152 = phi i32 [ %163, %151 ], [ %146, %145 ]
  %153 = phi i32 [ %164, %151 ], [ %147, %145 ]
  %154 = phi i32 [ %165, %151 ], [ %148, %145 ]
  %155 = add i32 %152, -1
  %156 = add i32 %154, -1
  %157 = zext i32 %154 to i64
  %158 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %157
  %159 = zext i32 %155 to i64
  %160 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %159
  %161 = bitcast %struct.CF2_HintRec_* %158 to i8*
  %162 = bitcast %struct.CF2_HintRec_* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 32, i1 false)
  %163 = add i32 %152, -2
  %164 = add i32 %153, -2
  %165 = add i32 %154, -2
  %166 = zext i32 %156 to i64
  %167 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %166
  %168 = zext i32 %163 to i64
  %169 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %168
  %170 = bitcast %struct.CF2_HintRec_* %167 to i8*
  %171 = bitcast %struct.CF2_HintRec_* %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %171, i64 32, i1 false)
  %172 = icmp eq i32 %164, 0
  br i1 %172, label %173, label %151

173:                                              ; preds = %145, %151, %130
  %174 = zext i32 %54 to i64
  %175 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %174
  %176 = bitcast %struct.CF2_HintRec_* %175 to i8*
  %177 = bitcast %struct.CF2_HintRec_* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %177, i64 32, i1 false)
  %178 = add i32 %108, 1
  store i32 %178, i32* %20, align 8
  br i1 %18, label %179, label %186

179:                                              ; preds = %173
  %180 = add i32 %54, 1
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %struct.CF2_HintMapRec_, %struct.CF2_HintMapRec_* %0, i64 0, i32 8, i64 %181
  %183 = bitcast %struct.CF2_HintRec_* %182 to i8*
  %184 = bitcast %struct.CF2_HintRec_* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 32, i1 false)
  %185 = add i32 %108, 2
  store i32 %185, i32* %20, align 8
  br label %186

186:                                              ; preds = %125, %173, %179, %118, %111, %99, %46, %42, %35, %11
  ret void
}

declare hidden void @FT_GlyphLoader_Add(%struct.FT_GlyphLoaderRec_*) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !8}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !8}
!26 = distinct !{!26, !10}
!27 = distinct !{!27, !8}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !8}
!34 = distinct !{!34, !10}
!35 = distinct !{!35, !8}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !8}
!42 = distinct !{!42, !10}
!43 = distinct !{!43, !8}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !8}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !8}
!52 = !{i32 0, i32 33}
