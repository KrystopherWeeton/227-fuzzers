; ModuleID = '../../net/filter/brotli_source_stream.cc'
source_filename = "../../net/filter/brotli_source_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::FilterSourceStream" = type <{ %"class.net::SourceStream.base", [4 x i8], %"class.std::__1::unique_ptr.0", i32, [4 x i8], %class.scoped_refptr, %class.scoped_refptr.5, %class.scoped_refptr, i32, [4 x i8], %"class.base::OnceCallback", i8, [7 x i8] }>
%"class.net::SourceStream.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::SourceStream"* }
%class.scoped_refptr.5 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr, i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.7", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::SourceStream" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.BrotliDecoderStateStruct = type opaque
%"class.net::(anonymous namespace)::BrotliSourceStream" = type { %"class.net::FilterSourceStream.base", %struct.BrotliDecoderStateStruct*, i32, i64, i64, i64, i64 }
%"class.net::FilterSourceStream.base" = type <{ %"class.net::SourceStream.base", [4 x i8], %"class.std::__1::unique_ptr.0", i32, [4 x i8], %class.scoped_refptr, %class.scoped_refptr.5, %class.scoped_refptr, i32, [4 x i8], %"class.base::OnceCallback", i8 }>
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.25", [4 x i8] }>
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN3net12_GLOBAL__N_118BrotliSourceStreamE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::BrotliSourceStream"*)* @_ZN3net12_GLOBAL__N_118BrotliSourceStreamD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::BrotliSourceStream"*)* @_ZN3net12_GLOBAL__N_118BrotliSourceStreamD0Ev to i8*), i8* bitcast (i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net18FilterSourceStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream11DescriptionEv to i8*), i8* bitcast (i1 (%"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream16MayHaveMoreBytesEv to i8*), i8* bitcast (i32 (%"class.net::(anonymous namespace)::BrotliSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)* @_ZN3net12_GLOBAL__N_118BrotliSourceStream10FilterDataEPNS_8IOBufferEiS3_iPib to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::(anonymous namespace)::BrotliSourceStream"*)* @_ZNK3net12_GLOBAL__N_118BrotliSourceStream15GetTypeAsStringEv to i8*), i8* bitcast (i1 (%"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream12NeedMoreDataEv to i8*)] }, align 8
@.str = private unnamed_addr constant [41 x i8] c"../../net/filter/brotli_source_stream.cc\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"brotli_state_\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"BrotliFilter.Status\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"BrotliFilter.CompressionPercent\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"BrotliFilter.ErrorCode\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"BrotliFilter.UsedMemoryKB\00", align 1
@_ZN3net12_GLOBAL__N_17kBrotliE = internal unnamed_addr constant [7 x i8] c"BROTLI\00", align 1
@_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::FilterSourceStream"* @_ZN3net24CreateBrotliSourceStreamENSt3__110unique_ptrINS_12SourceStreamENS0_14default_deleteIS2_EEEE(%"class.net::SourceStream"*) local_unnamed_addr #0 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = tail call i8* @_Znwm(i64 128) #8
  %4 = bitcast i8* %3 to %"class.net::FilterSourceStream"*
  tail call void @_ZN3net18FilterSourceStreamC2ENS_12SourceStream10SourceTypeENSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE(%"class.net::FilterSourceStream"* nonnull %4, i32 0, %"class.net::SourceStream"* %0) #9
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net12_GLOBAL__N_118BrotliSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 88
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #9
  %9 = tail call %struct.BrotliDecoderStateStruct* @BrotliDecoderCreateInstance(i8* (i8*, i64)* nonnull @_ZN3net12_GLOBAL__N_118BrotliSourceStream14AllocateMemoryEPvm, void (i8*, i8*)* nonnull @_ZN3net12_GLOBAL__N_118BrotliSourceStream10FreeMemoryEPvS2_, i8* nonnull %3) #9
  %10 = getelementptr inbounds i8, i8* %3, i64 80
  %11 = bitcast i8* %10 to %struct.BrotliDecoderStateStruct**
  store %struct.BrotliDecoderStateStruct* %9, %struct.BrotliDecoderStateStruct** %11, align 8
  %12 = icmp eq %struct.BrotliDecoderStateStruct* %9, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #9
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %16

16:                                               ; preds = %1, %13
  ret %"class.net::FilterSourceStream"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN3net18FilterSourceStreamC2ENS_12SourceStream10SourceTypeENSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE(%"class.net::FilterSourceStream"*, i32, %"class.net::SourceStream"*) unnamed_addr #3

declare %struct.BrotliDecoderStateStruct* @BrotliDecoderCreateInstance(i8* (i8*, i64)*, void (i8*, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define internal noalias i8* @_ZN3net12_GLOBAL__N_118BrotliSourceStream14AllocateMemoryEPvm(i8* nocapture, i64) #4 align 2 {
  %3 = add i64 %1, 8
  %4 = tail call noalias i8* @malloc(i64 %3) #9
  %5 = bitcast i8* %4 to i64*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %0, i64 96
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %1
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 104
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %11
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  store i64 %11, i64* %13, align 8
  br label %17

17:                                               ; preds = %16, %7
  store i64 %1, i64* %5, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 8
  br label %19

19:                                               ; preds = %2, %17
  %20 = phi i8* [ %18, %17 ], [ null, %2 ]
  ret i8* %20
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_118BrotliSourceStream10FreeMemoryEPvS2_(i8* nocapture, i8*) #0 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -8
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 96
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %7
  store i64 %11, i64* %9, align 8
  tail call void @free(i8* %5) #9
  br label %12

12:                                               ; preds = %2, %4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_118BrotliSourceStreamD2Ev(%"class.net::(anonymous namespace)::BrotliSourceStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::BrotliSourceStream", %"class.net::(anonymous namespace)::BrotliSourceStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net12_GLOBAL__N_118BrotliSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::BrotliSourceStream", %"class.net::(anonymous namespace)::BrotliSourceStream"* %0, i64 0, i32 1
  %4 = load %struct.BrotliDecoderStateStruct*, %struct.BrotliDecoderStateStruct** %3, align 8
  %5 = tail call i32 @BrotliDecoderGetErrorCode(%struct.BrotliDecoderStateStruct* %4) #9
  %6 = load %struct.BrotliDecoderStateStruct*, %struct.BrotliDecoderStateStruct** %3, align 8
  tail call void @BrotliDecoderDestroyInstance(%struct.BrotliDecoderStateStruct* %6) #9
  store %struct.BrotliDecoderStateStruct* null, %struct.BrotliDecoderStateStruct** %3, align 8
  %7 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %8 = inttoptr i64 %7 to %"class.base::HistogramBase"*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #9
  %12 = ptrtoint %"class.base::HistogramBase"* %11 to i64
  store atomic i64 %12, i64* @_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi %"class.base::HistogramBase"* [ %8, %1 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.net::(anonymous namespace)::BrotliSourceStream", %"class.net::(anonymous namespace)::BrotliSourceStream"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = bitcast %"class.base::HistogramBase"* %14 to void (%"class.base::HistogramBase"*, i32)***
  %18 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %18, i64 6
  %20 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %19, align 8
  tail call void %20(%"class.base::HistogramBase"* %14, i32 %16) #9
  %21 = load i32, i32* %15, align 8
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %46

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.net::(anonymous namespace)::BrotliSourceStream", %"class.net::(anonymous namespace)::BrotliSourceStream"* %0, i64 0, i32 6
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %46, label %27

27:                                               ; preds = %23
  %28 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %29 = inttoptr i64 %28 to %"class.base::HistogramBase"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 101, i32 102, i32 1) #9
  %33 = ptrtoint %"class.base::HistogramBase"* %32 to i64
  store atomic i64 %33, i64* @_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %34

34:                                               ; preds = %27, %31
  %35 = phi %"class.base::HistogramBase"* [ %29, %27 ], [ %32, %31 ]
  %36 = getelementptr inbounds %"class.net::(anonymous namespace)::BrotliSourceStream", %"class.net::(anonymous namespace)::BrotliSourceStream"* %0, i64 0, i32 5
  %37 = load i64, i64* %36, align 8
  %38 = mul i64 %37, 100
  %39 = load i64, i64* %24, align 8
  %40 = udiv i64 %38, %39
  %41 = trunc i64 %40 to i32
  %42 = bitcast %"class.base::HistogramBase"* %35 to void (%"class.base::HistogramBase"*, i32)***
  %43 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %43, i64 6
  %45 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %44, align 8
  tail call void %45(%"class.base::HistogramBase"* %35, i32 %41) #9
  br label %46

46:                                               ; preds = %23, %34, %13
  %47 = icmp slt i32 %5, 0
  br i1 %47, label %48, label %62

48:                                               ; preds = %46
  %49 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %50 = inttoptr i64 %49 to %"class.base::HistogramBase"*
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 32, i32 33, i32 1) #9
  %54 = ptrtoint %"class.base::HistogramBase"* %53 to i64
  store atomic i64 %54, i64* @_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %55

55:                                               ; preds = %48, %52
  %56 = phi %"class.base::HistogramBase"* [ %50, %48 ], [ %53, %52 ]
  %57 = sub nsw i32 0, %5
  %58 = bitcast %"class.base::HistogramBase"* %56 to void (%"class.base::HistogramBase"*, i32)***
  %59 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %59, i64 6
  %61 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %60, align 8
  tail call void %61(%"class.base::HistogramBase"* %56, i32 %57) #9
  br label %62

62:                                               ; preds = %55, %46
  %63 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %64 = inttoptr i64 %63 to %"class.base::HistogramBase"*
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %62
  %67 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 65536, i32 48, i32 1) #9
  %68 = ptrtoint %"class.base::HistogramBase"* %67 to i64
  store atomic i64 %68, i64* @_ZZN3net12_GLOBAL__N_118BrotliSourceStreamD1EvE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %69

69:                                               ; preds = %62, %66
  %70 = phi %"class.base::HistogramBase"* [ %64, %62 ], [ %67, %66 ]
  %71 = getelementptr inbounds %"class.net::(anonymous namespace)::BrotliSourceStream", %"class.net::(anonymous namespace)::BrotliSourceStream"* %0, i64 0, i32 4
  %72 = load i64, i64* %71, align 8
  %73 = lshr i64 %72, 10
  %74 = trunc i64 %73 to i32
  %75 = bitcast %"class.base::HistogramBase"* %70 to void (%"class.base::HistogramBase"*, i32)***
  %76 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %76, i64 6
  %78 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %77, align 8
  tail call void %78(%"class.base::HistogramBase"* %70, i32 %74) #9
  %79 = bitcast %"class.net::(anonymous namespace)::BrotliSourceStream"* %0 to %"class.net::FilterSourceStream"*
  tail call void @_ZN3net18FilterSourceStreamD2Ev(%"class.net::FilterSourceStream"* %79) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_118BrotliSourceStreamD0Ev(%"class.net::(anonymous namespace)::BrotliSourceStream"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net12_GLOBAL__N_118BrotliSourceStreamD2Ev(%"class.net::(anonymous namespace)::BrotliSourceStream"* %0) #9
  %2 = bitcast %"class.net::(anonymous namespace)::BrotliSourceStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

declare i32 @_ZN3net18FilterSourceStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) unnamed_addr #3

declare void @_ZNK3net18FilterSourceStream11DescriptionEv(%"class.std::__1::basic_string"* sret, %"class.net::FilterSourceStream"*) unnamed_addr #3

declare zeroext i1 @_ZNK3net18FilterSourceStream16MayHaveMoreBytesEv(%"class.net::FilterSourceStream"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3net12_GLOBAL__N_118BrotliSourceStream10FilterDataEPNS_8IOBufferEiS3_iPib(%"class.net::(anonymous namespace)::BrotliSourceStream"* nocapture, %"class.net::IOBuffer"* nocapture readonly, i32, %"class.net::IOBuffer"* nocapture readonly, i32, i32* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = getelementptr inbounds %"class.net::(anonymous namespace)::BrotliSourceStream", %"class.net::(anonymous namespace)::BrotliSourceStream"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %53 [
    i32 1, label %14
    i32 0, label %15
  ]

14:                                               ; preds = %7
  store i32 %4, i32* %5, align 4
  br label %53

15:                                               ; preds = %7
  %16 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8** %8 to i64*
  store i64 %19, i64* %20, align 8
  %21 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = sext i32 %4 to i64
  store i64 %22, i64* %9, align 8
  %23 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 2
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8** %10 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = sext i32 %2 to i64
  store i64 %29, i64* %11, align 8
  %30 = getelementptr inbounds %"class.net::(anonymous namespace)::BrotliSourceStream", %"class.net::(anonymous namespace)::BrotliSourceStream"* %0, i64 0, i32 1
  %31 = load %struct.BrotliDecoderStateStruct*, %struct.BrotliDecoderStateStruct** %30, align 8
  %32 = call i32 @BrotliDecoderDecompressStream(%struct.BrotliDecoderStateStruct* %31, i64* nonnull %9, i8** nonnull %8, i64* nonnull %11, i8** nonnull %10, i64* null) #9
  %33 = load i64, i64* %9, align 8
  %34 = sub i64 %22, %33
  %35 = load i64, i64* %11, align 8
  %36 = sub i64 %29, %35
  %37 = getelementptr inbounds %"class.net::(anonymous namespace)::BrotliSourceStream", %"class.net::(anonymous namespace)::BrotliSourceStream"* %0, i64 0, i32 6
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, %36
  store i64 %39, i64* %37, align 8
  %40 = getelementptr inbounds %"class.net::(anonymous namespace)::BrotliSourceStream", %"class.net::(anonymous namespace)::BrotliSourceStream"* %0, i64 0, i32 5
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %34
  store i64 %42, i64* %40, align 8
  %43 = trunc i64 %34 to i32
  store i32 %43, i32* %5, align 4
  switch i32 %32, label %50 [
    i32 3, label %44
    i32 1, label %46
    i32 2, label %48
  ]

44:                                               ; preds = %15
  %45 = trunc i64 %36 to i32
  br label %51

46:                                               ; preds = %15
  store i32 1, i32* %12, align 8
  store i32 %4, i32* %5, align 4
  %47 = trunc i64 %36 to i32
  br label %51

48:                                               ; preds = %15
  store i32 0, i32* %12, align 8
  %49 = trunc i64 %36 to i32
  br label %51

50:                                               ; preds = %15
  store i32 2, i32* %12, align 8
  br label %51

51:                                               ; preds = %50, %48, %46, %44
  %52 = phi i32 [ -330, %50 ], [ %49, %48 ], [ %47, %46 ], [ %45, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %53

53:                                               ; preds = %7, %51, %14
  %54 = phi i32 [ 0, %14 ], [ %52, %51 ], [ -330, %7 ]
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK3net12_GLOBAL__N_118BrotliSourceStream15GetTypeAsStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::(anonymous namespace)::BrotliSourceStream"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 6, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN3net12_GLOBAL__N_17kBrotliE, i64 0, i64 0), i64 6, i1 false) #9
  %6 = getelementptr inbounds i8, i8* %5, i64 6
  store i8 0, i8* %6, align 2
  ret void
}

declare zeroext i1 @_ZNK3net18FilterSourceStream12NeedMoreDataEv(%"class.net::FilterSourceStream"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare i32 @BrotliDecoderGetErrorCode(%struct.BrotliDecoderStateStruct*) local_unnamed_addr #3

declare void @BrotliDecoderDestroyInstance(%struct.BrotliDecoderStateStruct*) local_unnamed_addr #3

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #3

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net18FilterSourceStreamD2Ev(%"class.net::FilterSourceStream"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i32 @BrotliDecoderDecompressStream(%struct.BrotliDecoderStateStruct*, i64*, i8**, i64*, i8**, i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
