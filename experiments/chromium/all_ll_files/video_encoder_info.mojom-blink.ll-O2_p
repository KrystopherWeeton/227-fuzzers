; ModuleID = 'gen/media/mojo/mojom/video_encoder_info.mojom-blink.cc'
source_filename = "gen/media/mojo/mojom/video_encoder_info.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::mojom::blink::ResolutionBitrateLimit" = type { %"class.gfx::Size", i32, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.media::mojom::blink::VideoEncoderInfo" = type { %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::Vector", %"class.WTF::Vector.36" }
%"class.WTF::String" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::Vector.31"*, i32, i32 }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33" }
%"class.WTF::VectorBufferBase.33" = type { i8*, i32, i32 }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38" }
%"class.WTF::VectorBufferBase.38" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.media::mojom::blink::ResolutionBitrateLimit"* }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.6"*, %"class.mojo::ScopedHandleBase.6"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedHandleBase.6" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedHandleBase.6"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.14" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.23, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.25", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.perfetto::TracedArray" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.media::mojom::internal::ResolutionBitrateLimit_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", i32, i32, i32, [4 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.media::mojom::internal::VideoEncoderInfo_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.44", i8, [7 x i8], %"struct.mojo::internal::Pointer.45", %"struct.mojo::internal::Pointer.46" }
%"struct.mojo::internal::Pointer.44" = type { i64 }
%"struct.mojo::internal::Pointer.45" = type { i64 }
%"struct.mojo::internal::Pointer.46" = type { i64 }
%"class.mojo::StructPtr.47" = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.media::mojom::blink::VideoEncoderInfo"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.mojo::internal::Array_Data.66" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.mojo::internal::Array_Data.75" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.mojo::internal::Array_Data.71" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN8perfetto8internal9WriteImplIRKN3WTF6VectorINS3_IhLj0ENS2_18PartitionAllocatorEEELj0ES4_EEEENS_26check_traced_value_supportIDTdeclsr3stdE5beginclsr3stdE7declvalIRT_EEEEvvE4typeENS_4base12priority_tagILm1EEENS_11TracedValueEOSA_ = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS2_IhEEEEN3WTF6VectorINS6_IhLj0ENS5_18PartitionAllocatorEEELj0ES7_EENS0_13ArrayIteratorINS_11ArrayTraitsIS9_EES9_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSF_IhEEEEEEPS9_PNS_7MessageE = comdat any

$_ZN3WTF6VectorINS0_IhLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIhLj0ES0_EEEEmm = comdat any

$_ZN3WTF6VectorINS0_IhLj0ENS_18PartitionAllocatorEEELj0ES1_E6resizeEj = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIhEEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsIS7_EES7_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataIhEEPS7_PNS_7MessageE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS0_IhLj0ENS_18PartitionAllocatorEEELj0ES1_E2atEj = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5media5mojom30ResolutionBitrateLimitDataViewEEEN3WTF6VectorINS_9StructPtrINS4_5blink22ResolutionBitrateLimitEEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal27ResolutionBitrateLimit_DataEEEEEPSE_PNS_7MessageE = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [11 x i8] c"frame_size\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"min_start_bitrate_bps\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"min_bitrate_bps\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"max_bitrate_bps\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"implementation_name\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"supports_native_handle\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"has_trusted_rate_controller\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"is_hardware_accelerated\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"supports_simulcast\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"fps_allocation\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"resolution_bitrate_limits\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<unsigned char, 0, WTF::PartitionAllocator>]\00", align 1
@.str.15 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEEEEPKcv = private unnamed_addr constant [108 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<media::mojom::blink::ResolutionBitrateLimit>]\00", align 1

@_ZN5media5mojom5blink22ResolutionBitrateLimitC1Ev = hidden unnamed_addr alias void (%"class.media::mojom::blink::ResolutionBitrateLimit"*), void (%"class.media::mojom::blink::ResolutionBitrateLimit"*)* @_ZN5media5mojom5blink22ResolutionBitrateLimitC2Ev
@_ZN5media5mojom5blink22ResolutionBitrateLimitC1ERKN3gfx4SizeEiii = hidden unnamed_addr alias void (%"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.gfx::Size"*, i32, i32, i32), void (%"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.gfx::Size"*, i32, i32, i32)* @_ZN5media5mojom5blink22ResolutionBitrateLimitC2ERKN3gfx4SizeEiii
@_ZN5media5mojom5blink22ResolutionBitrateLimitD1Ev = hidden unnamed_addr alias void (%"class.media::mojom::blink::ResolutionBitrateLimit"*), void (%"class.media::mojom::blink::ResolutionBitrateLimit"*)* @_ZN5media5mojom5blink22ResolutionBitrateLimitD2Ev
@_ZN5media5mojom5blink16VideoEncoderInfoC1Ev = hidden unnamed_addr alias void (%"class.media::mojom::blink::VideoEncoderInfo"*), void (%"class.media::mojom::blink::VideoEncoderInfo"*)* @_ZN5media5mojom5blink16VideoEncoderInfoC2Ev
@_ZN5media5mojom5blink16VideoEncoderInfoC1ERKN3WTF6StringEbbbbNS3_6VectorINS7_IhLj0ENS3_18PartitionAllocatorEEELj0ES8_EENS7_IN4mojo9StructPtrINS1_22ResolutionBitrateLimitEEELj0ES8_EE = hidden unnamed_addr alias void (%"class.media::mojom::blink::VideoEncoderInfo"*, %"class.WTF::String"*, i1, i1, i1, i1, %"class.WTF::Vector"*, %"class.WTF::Vector.36"*), void (%"class.media::mojom::blink::VideoEncoderInfo"*, %"class.WTF::String"*, i1, i1, i1, i1, %"class.WTF::Vector"*, %"class.WTF::Vector.36"*)* @_ZN5media5mojom5blink16VideoEncoderInfoC2ERKN3WTF6StringEbbbbNS3_6VectorINS7_IhLj0ENS3_18PartitionAllocatorEEELj0ES8_EENS7_IN4mojo9StructPtrINS1_22ResolutionBitrateLimitEEELj0ES8_EE
@_ZN5media5mojom5blink16VideoEncoderInfoD1Ev = hidden unnamed_addr alias void (%"class.media::mojom::blink::VideoEncoderInfo"*), void (%"class.media::mojom::blink::VideoEncoderInfo"*)* @_ZN5media5mojom5blink16VideoEncoderInfoD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media5mojom5blink22ResolutionBitrateLimitC2Ev(%"class.media::mojom::blink::ResolutionBitrateLimit"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::mojom::blink::ResolutionBitrateLimit"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink22ResolutionBitrateLimitC2ERKN3gfx4SizeEiii(%"class.media::mojom::blink::ResolutionBitrateLimit"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i32, i32) unnamed_addr #1 align 2 {
  %6 = bitcast %"class.gfx::Size"* %1 to i64*
  %7 = bitcast %"class.media::mojom::blink::ResolutionBitrateLimit"* %0 to i64*
  %8 = load i64, i64* %6, align 4
  store i64 %8, i64* %7, align 4
  %9 = getelementptr inbounds %"class.media::mojom::blink::ResolutionBitrateLimit", %"class.media::mojom::blink::ResolutionBitrateLimit"* %0, i64 0, i32 1
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"class.media::mojom::blink::ResolutionBitrateLimit", %"class.media::mojom::blink::ResolutionBitrateLimit"* %0, i64 0, i32 2
  store i32 %3, i32* %10, align 4
  %11 = getelementptr inbounds %"class.media::mojom::blink::ResolutionBitrateLimit", %"class.media::mojom::blink::ResolutionBitrateLimit"* %0, i64 0, i32 3
  store i32 %4, i32* %11, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media5mojom5blink22ResolutionBitrateLimitD2Ev(%"class.media::mojom::blink::ResolutionBitrateLimit"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5media5mojom5blink22ResolutionBitrateLimit14WriteIntoTraceEN8perfetto11TracedValueE(%"class.media::mojom::blink::ResolutionBitrateLimit"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedDictionary", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = bitcast %"class.perfetto::TracedDictionary"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  %13 = bitcast %"class.perfetto::TracedDictionary"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %6, %"class.perfetto::TracedValue"* %1) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedDictionary"* nonnull %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #12
  %14 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 7, i8* %16, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #12
  %17 = getelementptr inbounds i8, i8* %14, i64 7
  store i8 0, i8* %17, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #12
  %18 = load i8, i8* %16, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %20, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %9, %"class.perfetto::TracedDictionary"* nonnull %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #12
  %24 = getelementptr inbounds %"class.media::mojom::blink::ResolutionBitrateLimit", %"class.media::mojom::blink::ResolutionBitrateLimit"* %0, i64 0, i32 1
  %25 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  %26 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %25, i64 16, i1 false) #12
  %27 = load i32, i32* %24, align 4
  %28 = sext i32 %27 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %4, i64 %28) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #12
  %29 = getelementptr inbounds %"class.media::mojom::blink::ResolutionBitrateLimit", %"class.media::mojom::blink::ResolutionBitrateLimit"* %0, i64 0, i32 2
  %30 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  %31 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %30, i64 16, i1 false) #12
  %32 = load i32, i32* %29, align 4
  %33 = sext i32 %32 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %3, i64 %33) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #12
  %34 = getelementptr inbounds %"class.media::mojom::blink::ResolutionBitrateLimit", %"class.media::mojom::blink::ResolutionBitrateLimit"* %0, i64 0, i32 3
  %35 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  %36 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %35, i64 16, i1 false) #12
  %37 = load i32, i32* %34, align 4
  %38 = sext i32 %37 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %5, i64 %38) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #5

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media5mojom5blink22ResolutionBitrateLimit8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZN5media5mojom8internal27ResolutionBitrateLimit_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #12
  ret i1 %3
}

declare zeroext i1 @_ZN5media5mojom8internal27ResolutionBitrateLimit_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink16VideoEncoderInfoC2Ev(%"class.media::mojom::blink::VideoEncoderInfo"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 5
  %3 = bitcast %"class.media::mojom::blink::VideoEncoderInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 12, i1 false)
  %4 = bitcast %"class.WTF::Vector"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink16VideoEncoderInfoC2ERKN3WTF6StringEbbbbNS3_6VectorINS7_IhLj0ENS3_18PartitionAllocatorEEELj0ES8_EENS7_IN4mojo9StructPtrINS1_22ResolutionBitrateLimitEEELj0ES8_EE(%"class.media::mojom::blink::VideoEncoderInfo"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, %"class.WTF::Vector"* nocapture, %"class.WTF::Vector.36"* nocapture) unnamed_addr #4 align 2 {
  %9 = zext i1 %2 to i8
  %10 = zext i1 %3 to i8
  %11 = zext i1 %4 to i8
  %12 = zext i1 %5 to i8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #12
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !2

31:                                               ; preds = %22
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %8, %17, %32
  %35 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 1
  store i8 %9, i8* %35, align 8
  %36 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 2
  store i8 %10, i8* %36, align 1
  %37 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 3
  store i8 %11, i8* %37, align 2
  %38 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 4
  store i8 %12, i8* %38, align 1
  %39 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 5
  %40 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %42 = bitcast %"class.WTF::Vector"* %6 to i64*
  %43 = bitcast %"class.WTF::Vector"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #12
  %44 = load i64, i64* %42, align 8
  %45 = bitcast %"class.WTF::Vector"* %39 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  store atomic i64 %44, i64* %45 monotonic, align 8
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %40, align 4
  %48 = load i32, i32* %46, align 4
  store i32 %48, i32* %40, align 4
  store i32 %47, i32* %46, align 4
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %41, align 4
  %51 = load i32, i32* %49, align 4
  store i32 %51, i32* %41, align 4
  store i32 %50, i32* %49, align 4
  %52 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 6
  %53 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %55 = bitcast %"class.WTF::Vector.36"* %7 to i64*
  %56 = bitcast %"class.WTF::Vector.36"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #12
  %57 = load i64, i64* %55, align 8
  %58 = bitcast %"class.WTF::Vector.36"* %52 to i64*
  store atomic i64 0, i64* %55 monotonic, align 8
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %7, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %53, align 4
  %61 = load i32, i32* %59, align 4
  store i32 %61, i32* %53, align 4
  store i32 %60, i32* %59, align 4
  %62 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %7, i64 0, i32 0, i32 0, i32 2
  %63 = load i32, i32* %54, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %54, align 4
  store i32 %63, i32* %62, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink16VideoEncoderInfoD2Ev(%"class.media::mojom::blink::VideoEncoderInfo"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %3, align 8
  %5 = icmp eq %"class.mojo::StructPtr"* %4, null
  br i1 %5, label %29, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::StructPtr"* %4 to i8*
  %8 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 %12
  br label %14

14:                                               ; preds = %21, %11
  %15 = phi %"class.mojo::StructPtr"* [ %22, %21 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.media::mojom::blink::ResolutionBitrateLimit"** %16, align 8
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %16, align 8
  %18 = icmp eq %"class.media::mojom::blink::ResolutionBitrateLimit"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.media::mojom::blink::ResolutionBitrateLimit"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %15, i64 1
  %23 = icmp eq %"class.mojo::StructPtr"* %22, %13
  br i1 %23, label %24, label %14

24:                                               ; preds = %21
  store i32 0, i32* %8, align 4
  %25 = bitcast %"class.WTF::Vector.36"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #12
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %3, align 8
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 5
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::Vector.31"*, %"class.WTF::Vector.31"** %31, align 8
  %33 = icmp eq %"class.WTF::Vector.31"* %32, null
  br i1 %33, label %61, label %34, !prof !3

34:                                               ; preds = %29
  %35 = bitcast %"class.WTF::Vector.31"* %32 to i8*
  %36 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %59, label %39, !prof !2

39:                                               ; preds = %34
  %40 = zext i32 %37 to i64
  %41 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %32, i64 %40
  br label %42

42:                                               ; preds = %53, %39
  %43 = phi %"class.WTF::Vector.31"* [ %54, %53 ], [ %32, %39 ]
  %44 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %53, label %47, !prof !3

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %43, i64 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %47
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %47
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #12
  store i8* null, i8** %44, align 8
  br label %53

53:                                               ; preds = %52, %42
  %54 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %43, i64 1
  %55 = icmp eq %"class.WTF::Vector.31"* %54, %41
  br i1 %55, label %56, label %42

56:                                               ; preds = %53
  store i32 0, i32* %36, align 4
  %57 = bitcast %"class.WTF::Vector"* %30 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %34
  %60 = phi i8* [ %58, %56 ], [ %35, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #12
  store %"class.WTF::Vector.31"* null, %"class.WTF::Vector.31"** %31, align 8
  br label %61

61:                                               ; preds = %29, %59
  %62 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #12
  br label %78

78:                                               ; preds = %61, %74, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5media5mojom5blink16VideoEncoderInfo14WriteIntoTraceEN8perfetto11TracedValueE(%"class.media::mojom::blink::VideoEncoderInfo"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedArray", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedDictionary", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = alloca %"class.perfetto::TracedValue", align 8
  %17 = alloca %"class.perfetto::TracedValue", align 8
  %18 = alloca %"class.perfetto::TracedValue", align 8
  %19 = alloca %"class.perfetto::TracedValue", align 8
  %20 = alloca %"class.perfetto::TracedValue", align 8
  %21 = alloca %"class.perfetto::TracedValue", align 8
  %22 = bitcast %"class.perfetto::TracedDictionary"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  %23 = bitcast %"class.perfetto::TracedDictionary"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %14, %"class.perfetto::TracedValue"* %1) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %15, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #12
  %24 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 0
  %25 = bitcast %"class.perfetto::TracedValue"* %15 to i8*
  %26 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %25, i64 16, i1 false) #12
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %24, %"class.perfetto::TracedValue"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %16, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0)) #12
  %27 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 1
  %28 = bitcast %"class.perfetto::TracedValue"* %16 to i8*
  %29 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* nonnull align 8 %28, i64 16, i1 false) #12
  %30 = load i8, i8* %27, align 1, !range !4
  %31 = icmp ne i8 %30, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %7, i1 zeroext %31) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %17, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #12
  %32 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 2
  %33 = bitcast %"class.perfetto::TracedValue"* %17 to i8*
  %34 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %33, i64 16, i1 false) #12
  %35 = load i8, i8* %32, align 1, !range !4
  %36 = icmp ne i8 %35, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %6, i1 zeroext %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %18, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0)) #12
  %37 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 3
  %38 = bitcast %"class.perfetto::TracedValue"* %18 to i8*
  %39 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %38, i64 16, i1 false) #12
  %40 = load i8, i8* %37, align 1, !range !4
  %41 = icmp ne i8 %40, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %5, i1 zeroext %41) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %19, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0)) #12
  %42 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 4
  %43 = bitcast %"class.perfetto::TracedValue"* %19 to i8*
  %44 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 8 %43, i64 16, i1 false) #12
  %45 = load i8, i8* %42, align 1, !range !4
  %46 = icmp ne i8 %45, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %4, i1 zeroext %46) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %20, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #12
  %47 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 5
  %48 = bitcast %"class.perfetto::TracedValue"* %20 to i8*
  %49 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* nonnull align 8 %48, i64 16, i1 false) #12
  call void @_ZN8perfetto8internal9WriteImplIRKN3WTF6VectorINS3_IhLj0ENS2_18PartitionAllocatorEEELj0ES4_EEEENS_26check_traced_value_supportIDTdeclsr3stdE5beginclsr3stdE7declvalIRT_EEEEvvE4typeENS_4base12priority_tagILm1EEENS_11TracedValueEOSA_(%"class.perfetto::TracedValue"* nonnull %3, %"class.WTF::Vector"* dereferenceable(16) %47) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #12
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %21, %"class.perfetto::TracedDictionary"* nonnull %14, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #12
  %50 = bitcast %"class.perfetto::TracedValue"* %21 to i8*
  %51 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %50, i64 16, i1 false) #12
  %52 = bitcast %"class.perfetto::TracedArray"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false) #12
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %12, %"class.perfetto::TracedValue"* nonnull %13) #12
  %53 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %54 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %53, align 8
  %55 = getelementptr inbounds %"class.media::mojom::blink::VideoEncoderInfo", %"class.media::mojom::blink::VideoEncoderInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %54, i64 %57
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %74, label %60

60:                                               ; preds = %2
  %61 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  %62 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  %63 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  br label %64

64:                                               ; preds = %71, %60
  %65 = phi %"class.mojo::StructPtr"* [ %54, %60 ], [ %72, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #12
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedArray"* nonnull %12) #12
  %66 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.media::mojom::blink::ResolutionBitrateLimit"** %66, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* nonnull align 8 %61, i64 16, i1 false) #12
  %68 = icmp eq %"class.media::mojom::blink::ResolutionBitrateLimit"* %67, null
  br i1 %68, label %69, label %70

69:                                               ; preds = %64
  call void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"* nonnull %10, i8* null) #12
  br label %71

70:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* nonnull align 8 %62, i64 16, i1 false) #12
  call void @_ZNK5media5mojom5blink22ResolutionBitrateLimit14WriteIntoTraceEN8perfetto11TracedValueE(%"class.media::mojom::blink::ResolutionBitrateLimit"* nonnull %67, %"class.perfetto::TracedValue"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #12
  br label %71

71:                                               ; preds = %70, %69
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #12
  %72 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %65, i64 1
  %73 = icmp eq %"class.mojo::StructPtr"* %72, %58
  br i1 %73, label %74, label %64

74:                                               ; preds = %71, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media5mojom5blink16VideoEncoderInfo8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZN5media5mojom8internal21VideoEncoderInfo_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #12
  ret i1 %3
}

declare zeroext i1 @_ZN5media5mojom8internal21VideoEncoderInfo_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5media5mojom30ResolutionBitrateLimitDataViewENS_9StructPtrINS2_5blink22ResolutionBitrateLimitEEEE4ReadES3_PS7_(%"class.media::mojom::internal::ResolutionBitrateLimit_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #4 align 2 {
  %4 = tail call i8* @_Znwm(i64 20) #13, !noalias !5
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 20, i1 false) #12, !noalias !5
  %5 = ptrtoint i8* %4 to i64
  %6 = getelementptr inbounds %"class.media::mojom::internal::ResolutionBitrateLimit_Data", %"class.media::mojom::internal::ResolutionBitrateLimit_Data"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %6, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = bitcast %"struct.mojo::internal::Pointer"* %6 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  br i1 %9, label %28, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 1
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %41, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i8, i8* %11, i64 12
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 1
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %41, label %22

22:                                               ; preds = %17
  %23 = icmp sgt i32 %15, 0
  %24 = select i1 %23, i32 %15, i32 0
  %25 = bitcast i8* %4 to i32*
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %4, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 %20, i32* %27, align 4
  br label %28

28:                                               ; preds = %3, %22
  %29 = getelementptr inbounds %"class.media::mojom::internal::ResolutionBitrateLimit_Data", %"class.media::mojom::internal::ResolutionBitrateLimit_Data"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds i8, i8* %4, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 4
  %33 = getelementptr inbounds %"class.media::mojom::internal::ResolutionBitrateLimit_Data", %"class.media::mojom::internal::ResolutionBitrateLimit_Data"* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 1
  %35 = getelementptr inbounds i8, i8* %4, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 4
  %37 = getelementptr inbounds %"class.media::mojom::internal::ResolutionBitrateLimit_Data", %"class.media::mojom::internal::ResolutionBitrateLimit_Data"* %0, i64 0, i32 4
  %38 = load i32, i32* %37, align 1
  %39 = getelementptr inbounds i8, i8* %4, i64 16
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  br label %41

41:                                               ; preds = %12, %17, %28
  %42 = phi i1 [ true, %28 ], [ false, %17 ], [ false, %12 ]
  %43 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.media::mojom::blink::ResolutionBitrateLimit"** %43, align 8
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %43, align 8
  %45 = icmp eq %"class.media::mojom::blink::ResolutionBitrateLimit"* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %5, i64* %47, align 8
  br label %55

48:                                               ; preds = %41
  %49 = bitcast %"class.media::mojom::blink::ResolutionBitrateLimit"* %44 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  %50 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %51 = load %"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.media::mojom::blink::ResolutionBitrateLimit"** %43, align 8
  store i64 %5, i64* %50, align 8
  %52 = icmp eq %"class.media::mojom::blink::ResolutionBitrateLimit"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.media::mojom::blink::ResolutionBitrateLimit"* %51 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %46, %48, %53
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5media5mojom24VideoEncoderInfoDataViewENS_9StructPtrINS2_5blink16VideoEncoderInfoEEEE4ReadES3_PS7_(%"class.media::mojom::internal::VideoEncoderInfo_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr.47"* nocapture) local_unnamed_addr #4 align 2 {
  %4 = tail call i8* @_Znwm(i64 48) #13, !noalias !8
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 12, i1 false) #12, !noalias !8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #12, !noalias !8
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast i8* %4 to %"class.WTF::String"*
  %8 = getelementptr inbounds %"class.media::mojom::internal::VideoEncoderInfo_Data", %"class.media::mojom::internal::VideoEncoderInfo_Data"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.mojo::internal::Pointer.44", %"struct.mojo::internal::Pointer.44"* %8, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* nonnull %7) #12
  br label %21

13:                                               ; preds = %3
  %14 = bitcast %"struct.mojo::internal::Pointer.44"* %8 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %10
  %16 = bitcast i8* %15 to %"class.mojo::internal::Array_Data"*
  %17 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %16, %"class.WTF::String"* nonnull %7) #12
  br i1 %17, label %18, label %122

18:                                               ; preds = %13
  %19 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  br i1 %19, label %21, label %20

20:                                               ; preds = %18
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #12
  br label %21

21:                                               ; preds = %12, %20, %18
  %22 = getelementptr inbounds %"class.media::mojom::internal::VideoEncoderInfo_Data", %"class.media::mojom::internal::VideoEncoderInfo_Data"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds i8, i8* %4, i64 8
  store i8 %24, i8* %25, align 8
  %26 = getelementptr inbounds i8, i8* %4, i64 9
  %27 = lshr i8 %23, 1
  %28 = and i8 %27, 1
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds i8, i8* %4, i64 10
  %30 = lshr i8 %23, 2
  %31 = and i8 %30, 1
  store i8 %31, i8* %29, align 2
  %32 = getelementptr inbounds i8, i8* %4, i64 11
  %33 = lshr i8 %23, 3
  %34 = and i8 %33, 1
  store i8 %34, i8* %32, align 1
  %35 = getelementptr inbounds %"class.media::mojom::internal::VideoEncoderInfo_Data", %"class.media::mojom::internal::VideoEncoderInfo_Data"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"struct.mojo::internal::Pointer.45", %"struct.mojo::internal::Pointer.45"* %35, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %73

39:                                               ; preds = %21
  %40 = getelementptr inbounds i8, i8* %4, i64 24
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %79, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds i8, i8* %4, i64 28
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = bitcast i8* %5 to %"class.WTF::Vector.31"**
  %51 = load %"class.WTF::Vector.31"*, %"class.WTF::Vector.31"** %50, align 8
  %52 = zext i32 %47 to i64
  %53 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %51, i64 %52
  br label %54

54:                                               ; preds = %65, %49
  %55 = phi %"class.WTF::Vector.31"* [ %66, %65 ], [ %51, %49 ]
  %56 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %65, label %59, !prof !3

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %55, i64 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !2

63:                                               ; preds = %59
  store i32 0, i32* %60, align 4
  br label %64

64:                                               ; preds = %63, %59
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #12
  store i8* null, i8** %56, align 8
  br label %65

65:                                               ; preds = %64, %54
  %66 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %55, i64 1
  %67 = icmp eq %"class.WTF::Vector.31"* %66, %53
  br i1 %67, label %68, label %54

68:                                               ; preds = %65
  store i32 0, i32* %46, align 4
  br label %69

69:                                               ; preds = %68, %44
  %70 = bitcast i8* %5 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast i8* %5 to i64*
  store atomic i64 0, i64* %72 monotonic, align 8
  store i32 0, i32* %41, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #12
  br label %79

73:                                               ; preds = %21
  %74 = bitcast i8* %5 to %"class.WTF::Vector"*
  %75 = bitcast %"struct.mojo::internal::Pointer.45"* %35 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 %37
  %77 = bitcast i8* %76 to %"class.mojo::internal::Array_Data.66"*
  %78 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS2_IhEEEEN3WTF6VectorINS6_IhLj0ENS5_18PartitionAllocatorEEELj0ES7_EENS0_13ArrayIteratorINS_11ArrayTraitsIS9_EES9_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSF_IhEEEEEEPS9_PNS_7MessageE(%"class.mojo::internal::Array_Data.66"* nonnull %77, %"class.WTF::Vector"* %74, %"class.mojo::Message"* %1) #12
  br i1 %78, label %79, label %122

79:                                               ; preds = %69, %39, %73
  %80 = getelementptr inbounds i8, i8* %4, i64 32
  %81 = getelementptr inbounds %"class.media::mojom::internal::VideoEncoderInfo_Data", %"class.media::mojom::internal::VideoEncoderInfo_Data"* %0, i64 0, i32 5
  %82 = getelementptr inbounds %"struct.mojo::internal::Pointer.46", %"struct.mojo::internal::Pointer.46"* %81, i64 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %115

85:                                               ; preds = %79
  %86 = getelementptr inbounds i8, i8* %4, i64 40
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %121, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds i8, i8* %4, i64 44
  %92 = bitcast i8* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %111, label %95

95:                                               ; preds = %90
  %96 = bitcast i8* %80 to %"class.mojo::StructPtr"**
  %97 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %96, align 8
  %98 = zext i32 %93 to i64
  %99 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %97, i64 %98
  br label %100

100:                                              ; preds = %107, %95
  %101 = phi %"class.mojo::StructPtr"* [ %108, %107 ], [ %97, %95 ]
  %102 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %101, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.media::mojom::blink::ResolutionBitrateLimit"** %102, align 8
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %102, align 8
  %104 = icmp eq %"class.media::mojom::blink::ResolutionBitrateLimit"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = bitcast %"class.media::mojom::blink::ResolutionBitrateLimit"* %103 to i8*
  tail call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %105, %100
  %108 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %101, i64 1
  %109 = icmp eq %"class.mojo::StructPtr"* %108, %99
  br i1 %109, label %110, label %100

110:                                              ; preds = %107
  store i32 0, i32* %92, align 4
  br label %111

111:                                              ; preds = %110, %90
  %112 = bitcast i8* %80 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = bitcast i8* %80 to i64*
  store atomic i64 0, i64* %114 monotonic, align 8
  store i32 0, i32* %87, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %113) #12
  br label %121

115:                                              ; preds = %79
  %116 = bitcast i8* %80 to %"class.WTF::Vector.36"*
  %117 = bitcast %"struct.mojo::internal::Pointer.46"* %81 to i8*
  %118 = getelementptr inbounds i8, i8* %117, i64 %83
  %119 = bitcast i8* %118 to %"class.mojo::internal::Array_Data.75"*
  %120 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5media5mojom30ResolutionBitrateLimitDataViewEEEN3WTF6VectorINS_9StructPtrINS4_5blink22ResolutionBitrateLimitEEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal27ResolutionBitrateLimit_DataEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data.75"* nonnull %119, %"class.WTF::Vector.36"* %116, %"class.mojo::Message"* %1) #12
  br i1 %120, label %121, label %122

121:                                              ; preds = %111, %85, %115
  br label %122

122:                                              ; preds = %73, %13, %121, %115
  %123 = phi i8 [ 1, %121 ], [ 0, %115 ], [ 0, %13 ], [ 0, %73 ]
  %124 = getelementptr inbounds %"class.mojo::StructPtr.47", %"class.mojo::StructPtr.47"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %"class.media::mojom::blink::VideoEncoderInfo"*, %"class.media::mojom::blink::VideoEncoderInfo"** %124, align 8
  store %"class.media::mojom::blink::VideoEncoderInfo"* null, %"class.media::mojom::blink::VideoEncoderInfo"** %124, align 8
  %126 = icmp eq %"class.media::mojom::blink::VideoEncoderInfo"* %125, null
  br i1 %126, label %127, label %130

127:                                              ; preds = %122
  %128 = bitcast %"class.mojo::StructPtr.47"* %2 to i64*
  store i64 %6, i64* %128, align 8
  %129 = icmp ne i8 %123, 0
  br label %138

130:                                              ; preds = %122
  tail call void @_ZN5media5mojom5blink16VideoEncoderInfoD2Ev(%"class.media::mojom::blink::VideoEncoderInfo"* nonnull %125) #12
  %131 = bitcast %"class.media::mojom::blink::VideoEncoderInfo"* %125 to i8*
  tail call void @_ZdlPv(i8* %131) #13
  %132 = bitcast %"class.mojo::StructPtr.47"* %2 to i64*
  %133 = load %"class.media::mojom::blink::VideoEncoderInfo"*, %"class.media::mojom::blink::VideoEncoderInfo"** %124, align 8
  store i64 %6, i64* %132, align 8
  %134 = icmp ne i8 %123, 0
  %135 = icmp eq %"class.media::mojom::blink::VideoEncoderInfo"* %133, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %130
  tail call void @_ZN5media5mojom5blink16VideoEncoderInfoD2Ev(%"class.media::mojom::blink::VideoEncoderInfo"* nonnull %133) #12
  %137 = bitcast %"class.media::mojom::blink::VideoEncoderInfo"* %133 to i8*
  tail call void @_ZdlPv(i8* %137) #13
  br label %138

138:                                              ; preds = %127, %130, %136
  %139 = phi i1 [ %129, %127 ], [ %134, %130 ], [ %134, %136 ]
  ret i1 %139
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #5

declare void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #5

declare void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto8internal9WriteImplIRKN3WTF6VectorINS3_IhLj0ENS2_18PartitionAllocatorEEELj0ES4_EEEENS_26check_traced_value_supportIDTdeclsr3stdE5beginclsr3stdE7declvalIRT_EEEEvvE4typeENS_4base12priority_tagILm1EEENS_11TracedValueEOSA_(%"class.perfetto::TracedValue"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedArray", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedArray", align 8
  %9 = bitcast %"class.perfetto::TracedArray"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = bitcast %"class.perfetto::TracedArray"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %8, %"class.perfetto::TracedValue"* %0) #12
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::Vector.31"*, %"class.WTF::Vector.31"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  %20 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  %21 = bitcast %"class.perfetto::TracedArray"* %5 to i8*
  %22 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  %23 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  br label %25

24:                                               ; preds = %40, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret void

25:                                               ; preds = %18, %40
  %26 = phi %"class.WTF::Vector.31"* [ %12, %18 ], [ %41, %40 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19)
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedArray"* nonnull %8) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %19, i64 16, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false) #12
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %5, %"class.perfetto::TracedValue"* nonnull %6) #12
  %27 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %26, i64 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %28, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %25, %34
  %35 = phi i8* [ %38, %34 ], [ %28, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedArray"* nonnull %5) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %22, i64 16, i1 false) #12
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %3, i64 %37) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  %38 = getelementptr inbounds i8, i8* %35, i64 1
  %39 = icmp eq i8* %38, %32
  br i1 %39, label %40, label %34

40:                                               ; preds = %34, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19)
  %41 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %26, i64 1
  %42 = icmp eq %"class.WTF::Vector.31"* %41, %16
  br i1 %42, label %24, label %25
}

declare void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #5

declare void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #5

declare void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #5

declare void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"*, i8*) local_unnamed_addr #5

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"*, %"class.WTF::String"*) local_unnamed_addr #5

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #5

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #5

declare void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS2_IhEEEEN3WTF6VectorINS6_IhLj0ENS5_18PartitionAllocatorEEELj0ES7_EENS0_13ArrayIteratorINS_11ArrayTraitsIS9_EES9_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSF_IhEEEEEEPS9_PNS_7MessageE(%"class.mojo::internal::Array_Data.66"*, %"class.WTF::Vector"*, %"class.mojo::Message"*) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.66", %"class.mojo::internal::Array_Data.66"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  tail call void @_ZN3WTF6VectorINS0_IhLj0ENS_18PartitionAllocatorEEELj0ES1_E6resizeEj(%"class.WTF::Vector"* %1, i32 %5) #12
  %6 = load i32, i32* %4, align 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %43, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.mojo::internal::Array_Data.66", %"class.mojo::internal::Array_Data.66"* %0, i64 1
  br label %10

10:                                               ; preds = %8, %39
  %11 = phi i64 [ 0, %8 ], [ %18, %39 ]
  %12 = getelementptr inbounds %"class.mojo::internal::Array_Data.66", %"class.mojo::internal::Array_Data.66"* %9, i64 %11
  %13 = bitcast %"class.mojo::internal::Array_Data.66"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = bitcast %"class.mojo::internal::Array_Data.66"* %12 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %14
  %18 = add nuw nsw i64 %11, 1
  %19 = trunc i64 %11 to i32
  %20 = tail call dereferenceable(16) %"class.WTF::Vector.31"* @_ZN3WTF6VectorINS0_IhLj0ENS_18PartitionAllocatorEEELj0ES1_E2atEj(%"class.WTF::Vector"* %1, i32 %19) #12
  %21 = icmp eq i8* %17, null
  %22 = or i1 %15, %21
  br i1 %22, label %23, label %36

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %20, i64 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %20, i64 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %27
  %33 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %20, i64 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.WTF::Vector.31"* %20 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  store i32 0, i32* %24, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %34) #12
  br label %39

36:                                               ; preds = %10
  %37 = bitcast i8* %17 to %"class.mojo::internal::Array_Data.71"*
  %38 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIhEEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsIS7_EES7_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataIhEEPS7_PNS_7MessageE(%"class.mojo::internal::Array_Data.71"* nonnull %37, %"class.WTF::Vector.31"* %20, %"class.mojo::Message"* %2) #12
  br i1 %38, label %39, label %43

39:                                               ; preds = %32, %23, %36
  %40 = load i32, i32* %4, align 1
  %41 = zext i32 %40 to i64
  %42 = icmp ult i64 %18, %41
  br i1 %42, label %10, label %43

43:                                               ; preds = %39, %36, %3
  %44 = phi i1 [ true, %3 ], [ false, %36 ], [ true, %39 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_IhLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %42

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector.31"*, %"class.WTF::Vector.31"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %40, label %14

14:                                               ; preds = %4, %36
  %15 = phi %"class.WTF::Vector.31"* [ %38, %36 ], [ %6, %4 ]
  %16 = phi %"class.WTF::Vector.31"* [ %37, %36 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::Vector.31"* %16 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %16, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector.31"* %15 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #12
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::Vector.31"* %16 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %15, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %18, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %18, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %15, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %19, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %19, align 4
  store i32 %27, i32* %26, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %15, i64 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %36, label %32, !prof !3

32:                                               ; preds = %14
  %33 = icmp eq i32 %27, 0
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %32
  store i32 0, i32* %26, align 4
  br label %35

35:                                               ; preds = %34, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #12
  store i8* null, i8** %29, align 8
  br label %36

36:                                               ; preds = %35, %14
  %37 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %16, i64 1
  %38 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %15, i64 1
  %39 = icmp eq %"class.WTF::Vector.31"* %38, %10
  br i1 %39, label %40, label %14

40:                                               ; preds = %36, %4
  %41 = bitcast %"class.WTF::Vector.31"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #12
  br label %93

42:                                               ; preds = %2
  %43 = zext i32 %1 to i64
  %44 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIhLj0ES0_EEEEmm(i64 %43) #12
  %45 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %44, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  %46 = lshr i64 %44, 4
  %47 = ptrtoint i8* %45 to i64
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::Vector.31"*, %"class.WTF::Vector.31"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %49, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %42
  %56 = bitcast %"class.WTF::Vector.31"* %49 to i8*
  br label %88

57:                                               ; preds = %42
  %58 = bitcast i8* %45 to %"class.WTF::Vector.31"*
  br label %59

59:                                               ; preds = %57, %81
  %60 = phi %"class.WTF::Vector.31"* [ %83, %81 ], [ %49, %57 ]
  %61 = phi %"class.WTF::Vector.31"* [ %82, %81 ], [ %58, %57 ]
  %62 = bitcast %"class.WTF::Vector.31"* %61 to i8*
  %63 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %61, i64 0, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %61, i64 0, i32 0, i32 0, i32 2
  %65 = bitcast %"class.WTF::Vector.31"* %60 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #12
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.WTF::Vector.31"* %61 to i64*
  store atomic i64 0, i64* %65 monotonic, align 8
  store atomic i64 %66, i64* %67 monotonic, align 8
  %68 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %60, i64 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %63, align 4
  %70 = load i32, i32* %68, align 4
  store i32 %70, i32* %63, align 4
  store i32 %69, i32* %68, align 4
  %71 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %60, i64 0, i32 0, i32 0, i32 2
  %72 = load i32, i32* %64, align 4
  %73 = load i32, i32* %71, align 4
  store i32 %73, i32* %64, align 4
  store i32 %72, i32* %71, align 4
  %74 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %60, i64 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %81, label %77, !prof !3

77:                                               ; preds = %59
  %78 = icmp eq i32 %72, 0
  br i1 %78, label %80, label %79, !prof !2

79:                                               ; preds = %77
  store i32 0, i32* %71, align 4
  br label %80

80:                                               ; preds = %79, %77
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %75) #12
  store i8* null, i8** %74, align 8
  br label %81

81:                                               ; preds = %80, %59
  %82 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %61, i64 1
  %83 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %60, i64 1
  %84 = icmp eq %"class.WTF::Vector.31"* %83, %53
  br i1 %84, label %85, label %59

85:                                               ; preds = %81
  %86 = bitcast %"class.WTF::Vector"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %55, %85
  %89 = phi i8* [ %87, %85 ], [ %56, %55 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #12
  %90 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %47, i64* %90 monotonic, align 8
  %91 = trunc i64 %46 to i32
  %92 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %91, i32* %92, align 8
  br label %93

93:                                               ; preds = %88, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIhLj0ES0_EEEEmm(i64) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_IhLj0ENS_18PartitionAllocatorEEELj0ES1_E6resizeEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::Vector.31"*, %"class.WTF::Vector.31"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %72, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %26
  %16 = phi %"class.WTF::Vector.31"* [ %27, %26 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %26, label %20, !prof !3

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %16, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24, !prof !2

24:                                               ; preds = %20
  store i32 0, i32* %21, align 4
  br label %25

25:                                               ; preds = %24, %20
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %18) #12
  store i8* null, i8** %17, align 8
  br label %26

26:                                               ; preds = %25, %15
  %27 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %16, i64 1
  %28 = icmp eq %"class.WTF::Vector.31"* %27, %10
  br i1 %28, label %72, label %15

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp ult i32 %31, %1
  br i1 %32, label %33, label %55

33:                                               ; preds = %29
  %34 = lshr i32 %31, 2
  %35 = add nuw i32 %31, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %1
  %40 = select i1 %39, i32 %38, i32 %1
  %41 = icmp ult i32 %31, %40
  br i1 %41, label %42, label %55, !prof !3

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::Vector.31"*, %"class.WTF::Vector.31"** %43, align 8
  %45 = icmp eq %"class.WTF::Vector.31"* %44, null
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = zext i32 %40 to i64
  %48 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIhLj0ES0_EEEEmm(i64 %47) #12
  %49 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %48, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  %50 = ptrtoint i8* %49 to i64
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = lshr i64 %48, 4
  %53 = trunc i64 %52 to i32
  store i32 %53, i32* %30, align 8
  br label %55

54:                                               ; preds = %42
  tail call void @_ZN3WTF6VectorINS0_IhLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %40) #12
  br label %55

55:                                               ; preds = %54, %46, %33, %29
  %56 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::Vector.31"*, %"class.WTF::Vector.31"** %56, align 8
  %58 = load i32, i32* %3, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %57, i64 %59
  %61 = icmp eq i32 %58, %1
  br i1 %61, label %72, label %62

62:                                               ; preds = %55
  %63 = zext i32 %1 to i64
  %64 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %57, i64 %63
  %65 = bitcast %"class.WTF::Vector.31"* %60 to i8*
  %66 = ptrtoint %"class.WTF::Vector.31"* %60 to i64
  %67 = getelementptr %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %64, i64 -1, i32 0, i32 0, i32 0
  %68 = ptrtoint i8** %67 to i64
  %69 = add i64 %68, 16
  %70 = sub i64 %69, %66
  %71 = and i64 %70, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 %71, i1 false) #12
  br label %72

72:                                               ; preds = %26, %6, %62, %55
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIhEEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsIS7_EES7_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataIhEEPS7_PNS_7MessageE(%"class.mojo::internal::Array_Data.71"*, %"class.WTF::Vector.31"*, %"class.mojo::Message"*) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.71", %"class.mojo::internal::Array_Data.71"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, %5
  br i1 %8, label %9, label %57

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, %5
  br i1 %12, label %13, label %46

13:                                               ; preds = %9
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %5
  %20 = select i1 %19, i32 %18, i32 %5
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %46, !prof !3

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %22
  %31 = bitcast %"class.WTF::Vector.31"* %1 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %10, align 8
  br label %46

33:                                               ; preds = %22
  %34 = load i8*, i8** %23, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !3

38:                                               ; preds = %33
  %39 = load i32, i32* %6, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #12
  %41 = load i8*, i8** %23, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #12
  %44 = bitcast %"class.WTF::Vector.31"* %1 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %10, align 8
  br label %46

46:                                               ; preds = %42, %30, %13, %9
  %47 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1, i64 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i32, i32* %6, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = zext i32 %5 to i64
  %53 = getelementptr inbounds i8, i8* %48, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = ptrtoint i8* %51 to i64
  %56 = sub i64 %54, %55
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 0, i64 %56, i1 false) #12
  br label %57

57:                                               ; preds = %46, %3
  store i32 %5, i32* %6, align 4
  %58 = load i32, i32* %4, align 1
  %59 = zext i32 %58 to i64
  %60 = icmp eq i32 %58, 0
  br i1 %60, label %78, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1, i64 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  %65 = getelementptr inbounds %"class.mojo::internal::Array_Data.71", %"class.mojo::internal::Array_Data.71"* %0, i64 1
  %66 = bitcast %"class.mojo::internal::Array_Data.71"* %65 to i8*
  br i1 %64, label %68, label %67

67:                                               ; preds = %61
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %63, i8* align 1 %66, i64 %59, i1 false)
  br label %78

68:                                               ; preds = %61, %68
  %69 = phi i64 [ %72, %68 ], [ 0, %61 ]
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = add nuw nsw i64 %69, 1
  %73 = trunc i64 %69 to i32
  %74 = tail call dereferenceable(1) i8* @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.31"* %1, i32 %73) #12
  store i8 %71, i8* %74, align 1
  %75 = load i32, i32* %4, align 1
  %76 = zext i32 %75 to i64
  %77 = icmp ult i64 %72, %76
  br i1 %77, label %68, label %78

78:                                               ; preds = %68, %57, %67
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.31"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  ret i8* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.31"* @_ZN3WTF6VectorINS0_IhLj0ENS_18PartitionAllocatorEEELj0ES1_E2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::Vector.31"*, %"class.WTF::Vector.31"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %24, i64 %25
  ret %"class.WTF::Vector.31"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5media5mojom30ResolutionBitrateLimitDataViewEEEN3WTF6VectorINS_9StructPtrINS4_5blink22ResolutionBitrateLimitEEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal27ResolutionBitrateLimit_DataEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data.75"*, %"class.WTF::Vector.36"*, %"class.mojo::Message"*) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.75", %"class.mojo::internal::Array_Data.75"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, %5
  br i1 %8, label %28, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %10, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %11, i64 %12
  %14 = icmp eq i32 %7, %5
  br i1 %14, label %71, label %15

15:                                               ; preds = %9
  %16 = zext i32 %5 to i64
  %17 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %11, i64 %16
  br label %18

18:                                               ; preds = %25, %15
  %19 = phi %"class.mojo::StructPtr"* [ %26, %25 ], [ %17, %15 ]
  %20 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.media::mojom::blink::ResolutionBitrateLimit"** %20, align 8
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %20, align 8
  %22 = icmp eq %"class.media::mojom::blink::ResolutionBitrateLimit"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.media::mojom::blink::ResolutionBitrateLimit"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %23, %18
  %26 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %19, i64 1
  %27 = icmp eq %"class.mojo::StructPtr"* %26, %13
  br i1 %27, label %71, label %18

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %1, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp ult i32 %30, %5
  br i1 %31, label %32, label %54

32:                                               ; preds = %28
  %33 = lshr i32 %30, 2
  %34 = add nuw i32 %30, 1
  %35 = add i32 %34, %33
  %36 = icmp ugt i32 %35, 4
  %37 = select i1 %36, i32 %35, i32 4
  %38 = icmp ugt i32 %37, %5
  %39 = select i1 %38, i32 %37, i32 %5
  %40 = icmp ult i32 %30, %39
  br i1 %40, label %41, label %54, !prof !3

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %1, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %42, align 8
  %44 = icmp eq %"class.mojo::StructPtr"* %43, null
  br i1 %44, label %45, label %53

45:                                               ; preds = %41
  %46 = zext i32 %39 to i64
  %47 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEEEEmm(i64 %46) #12
  %48 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %47, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEEEEPKcv, i64 0, i64 0)) #12
  %49 = ptrtoint i8* %48 to i64
  %50 = bitcast %"class.WTF::Vector.36"* %1 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = lshr i64 %47, 3
  %52 = trunc i64 %51 to i32
  store i32 %52, i32* %29, align 8
  br label %54

53:                                               ; preds = %41
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.36"* %1, i32 %39) #12
  br label %54

54:                                               ; preds = %53, %45, %32, %28
  %55 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %1, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %55, align 8
  %57 = load i32, i32* %6, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %56, i64 %58
  %60 = icmp eq i32 %57, %5
  br i1 %60, label %71, label %61

61:                                               ; preds = %54
  %62 = zext i32 %5 to i64
  %63 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %56, i64 %62
  %64 = bitcast %"class.mojo::StructPtr"* %59 to i8*
  %65 = ptrtoint %"class.mojo::StructPtr"* %59 to i64
  %66 = getelementptr %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %63, i64 -1, i32 0, i32 0, i32 0, i32 0
  %67 = ptrtoint %"class.media::mojom::blink::ResolutionBitrateLimit"** %66 to i64
  %68 = add i64 %67, 8
  %69 = sub i64 %68, %65
  %70 = and i64 %69, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 %70, i1 false) #12
  br label %71

71:                                               ; preds = %25, %61, %54, %9
  store i32 %5, i32* %6, align 4
  %72 = load i32, i32* %4, align 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %154, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.mojo::internal::Array_Data.75", %"class.mojo::internal::Array_Data.75"* %0, i64 1
  br label %76

76:                                               ; preds = %74, %150
  %77 = phi i64 [ 0, %74 ], [ %84, %150 ]
  %78 = getelementptr inbounds %"class.mojo::internal::Array_Data.75", %"class.mojo::internal::Array_Data.75"* %75, i64 %77
  %79 = bitcast %"class.mojo::internal::Array_Data.75"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  %82 = bitcast %"class.mojo::internal::Array_Data.75"* %78 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 %80
  %84 = add nuw nsw i64 %77, 1
  %85 = trunc i64 %77 to i32
  %86 = tail call dereferenceable(8) %"class.mojo::StructPtr"* @_ZN3WTF6VectorIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.36"* %1, i32 %85) #12
  %87 = icmp eq i8* %83, null
  %88 = or i1 %81, %87
  br i1 %88, label %89, label %95

89:                                               ; preds = %76
  %90 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.media::mojom::blink::ResolutionBitrateLimit"** %90, align 8
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %90, align 8
  %92 = icmp eq %"class.media::mojom::blink::ResolutionBitrateLimit"* %91, null
  br i1 %92, label %150, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.media::mojom::blink::ResolutionBitrateLimit"* %91 to i8*
  tail call void @_ZdlPv(i8* %94) #13
  br label %150

95:                                               ; preds = %76
  %96 = tail call i8* @_Znwm(i64 20) #13, !noalias !11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %96, i8 0, i64 20, i1 false) #12, !noalias !11
  %97 = ptrtoint i8* %96 to i64
  %98 = getelementptr inbounds i8, i8* %83, i64 8
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, 0
  %102 = getelementptr inbounds i8, i8* %98, i64 %100
  br i1 %101, label %119, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds i8, i8* %102, i64 8
  %105 = bitcast i8* %104 to i32*
  %106 = load i32, i32* %105, align 1
  %107 = icmp slt i32 %106, 0
  br i1 %107, label %135, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds i8, i8* %102, i64 12
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 1
  %112 = icmp slt i32 %111, 0
  br i1 %112, label %135, label %113

113:                                              ; preds = %108
  %114 = icmp sgt i32 %106, 0
  %115 = select i1 %114, i32 %106, i32 0
  %116 = bitcast i8* %96 to i32*
  store i32 %115, i32* %116, align 4
  %117 = getelementptr inbounds i8, i8* %96, i64 4
  %118 = bitcast i8* %117 to i32*
  store i32 %111, i32* %118, align 4
  br label %119

119:                                              ; preds = %113, %95
  %120 = getelementptr inbounds i8, i8* %83, i64 16
  %121 = bitcast i8* %120 to i32*
  %122 = load i32, i32* %121, align 1
  %123 = getelementptr inbounds i8, i8* %96, i64 8
  %124 = bitcast i8* %123 to i32*
  store i32 %122, i32* %124, align 4
  %125 = getelementptr inbounds i8, i8* %83, i64 20
  %126 = bitcast i8* %125 to i32*
  %127 = load i32, i32* %126, align 1
  %128 = getelementptr inbounds i8, i8* %96, i64 12
  %129 = bitcast i8* %128 to i32*
  store i32 %127, i32* %129, align 4
  %130 = getelementptr inbounds i8, i8* %83, i64 24
  %131 = bitcast i8* %130 to i32*
  %132 = load i32, i32* %131, align 1
  %133 = getelementptr inbounds i8, i8* %96, i64 16
  %134 = bitcast i8* %133 to i32*
  store i32 %132, i32* %134, align 4
  br label %135

135:                                              ; preds = %119, %108, %103
  %136 = phi i1 [ true, %119 ], [ false, %108 ], [ false, %103 ]
  %137 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.media::mojom::blink::ResolutionBitrateLimit"** %137, align 8
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %137, align 8
  %139 = icmp eq %"class.media::mojom::blink::ResolutionBitrateLimit"* %138, null
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  %141 = bitcast %"class.mojo::StructPtr"* %86 to i64*
  store i64 %97, i64* %141, align 8
  br i1 %136, label %150, label %154

142:                                              ; preds = %135
  %143 = bitcast %"class.media::mojom::blink::ResolutionBitrateLimit"* %138 to i8*
  tail call void @_ZdlPv(i8* %143) #13
  %144 = bitcast %"class.mojo::StructPtr"* %86 to i64*
  %145 = load %"class.media::mojom::blink::ResolutionBitrateLimit"*, %"class.media::mojom::blink::ResolutionBitrateLimit"** %137, align 8
  store i64 %97, i64* %144, align 8
  %146 = icmp eq %"class.media::mojom::blink::ResolutionBitrateLimit"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  %148 = bitcast %"class.media::mojom::blink::ResolutionBitrateLimit"* %145 to i8*
  tail call void @_ZdlPv(i8* %148) #13
  br i1 %136, label %150, label %154

149:                                              ; preds = %142
  br i1 %136, label %150, label %154

150:                                              ; preds = %93, %89, %147, %140, %149
  %151 = load i32, i32* %4, align 1
  %152 = zext i32 %151 to i64
  %153 = icmp ult i64 %84, %152
  br i1 %153, label %76, label %154

154:                                              ; preds = %150, %149, %140, %147, %71
  %155 = phi i1 [ true, %71 ], [ false, %147 ], [ false, %140 ], [ false, %149 ], [ true, %150 ]
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.36"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !14

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEEEEmm(i64 %73) #12
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEEEEPKcv, i64 0, i64 0)) #12
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !16

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::blink::ResolutionBitrateLimit"* null, %"class.media::mojom::blink::ResolutionBitrateLimit"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #12
  %149 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEEEEmm(i64) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.mojo::StructPtr"* @_ZN3WTF6VectorIN4mojo9StructPtrIN5media5mojom5blink22ResolutionBitrateLimitEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.36"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 %25
  ret %"class.mojo::StructPtr"* %26
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5media5mojom5blink22ResolutionBitrateLimit3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZN5media5mojom5blink22ResolutionBitrateLimit3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5media5mojom5blink16VideoEncoderInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN5media5mojom5blink16VideoEncoderInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5media5mojom5blink22ResolutionBitrateLimit3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZN5media5mojom5blink22ResolutionBitrateLimit3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !15}
