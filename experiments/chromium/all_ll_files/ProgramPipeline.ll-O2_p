; ModuleID = '../../third_party/angle/src/libANGLE/ProgramPipeline.cpp'
source_filename = "../../third_party/angle/src/libANGLE/ProgramPipeline.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array.626" = type { [5 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.rx::Serial" = type { i64 }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.147" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::BitSetT" = type { i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.663" }
%"struct.std::__1::pair.663" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.angle::BitSetT.201" = type { i64 }
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.angle::BitSetT.166" = type { i64 }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.168" = type { i64 }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%struct.Optional.225 = type { i8, i8 }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type { i32 (...)**, %"class.gl::ProgramPipelineState"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.665" }
%"struct.std::__1::pair.665" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.667" }
%"struct.std::__1::pair.667" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.669" }
%"struct.std::__1::pair.669" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.671" }
%"struct.std::__1::pair.671" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.673" }
%"struct.std::__1::pair.673" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.622, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.623", %"class.angle::BitSetT.147", %struct.Optional.624 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.615", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.622 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.623" = type { i64 }
%struct.Optional.624 = type { i8, %"class.angle::BitSetT.623" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type opaque
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.536" = type { i64 }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.628" = type { %"class.std::__1::__vector_base.629" }
%"class.std::__1::__vector_base.629" = type { %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"*, %"class.std::__1::__compressed_pair.630" }
%"struct.gl::ProgramVaryingRef" = type <{ %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"struct.gl::ProgramVaryingRef"* }
%"class.gl::ProgramVaryingPacking" = type <{ [8 x i8], %"class.angle::PackedEnumMap.635", %"class.angle::PackedEnumMap.660", [2 x i8] }>
%"class.angle::PackedEnumMap.635" = type { %"struct.std::__1::array.636" }
%"struct.std::__1::array.636" = type { [6 x %"class.gl::VaryingPacking"] }
%"class.gl::VaryingPacking" = type { %"class.std::__1::vector.637", %"class.std::__1::vector.644", %"class.std::__1::vector.651", %"class.angle::PackedEnumMap.658", %"class.angle::PackedEnumMap.658" }
%"class.std::__1::vector.637" = type { %"class.std::__1::__vector_base.638" }
%"class.std::__1::__vector_base.638" = type { %"struct.gl::VaryingPacking::Register"*, %"struct.gl::VaryingPacking::Register"*, %"class.std::__1::__compressed_pair.639" }
%"struct.gl::VaryingPacking::Register" = type { [4 x i8] }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"struct.gl::VaryingPacking::Register"* }
%"class.std::__1::vector.644" = type { %"class.std::__1::__vector_base.645" }
%"class.std::__1::__vector_base.645" = type { %"struct.gl::PackedVaryingRegister"*, %"struct.gl::PackedVaryingRegister"*, %"class.std::__1::__compressed_pair.646" }
%"struct.gl::PackedVaryingRegister" = type { %"struct.gl::PackedVarying"*, i32, i32, i32, i32 }
%"struct.gl::PackedVarying" = type <{ [8 x i8], %"struct.gl::VaryingInShaderRef", %"struct.gl::VaryingInShaderRef", i32, i32, i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.gl::VaryingInShaderRef" = type { %"struct.sh::ShaderVariable"*, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"struct.gl::PackedVaryingRegister"* }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"struct.gl::PackedVarying"*, %"struct.gl::PackedVarying"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"struct.gl::PackedVarying"* }
%"class.angle::PackedEnumMap.658" = type { %"struct.std::__1::array.659" }
%"struct.std::__1::array.659" = type { [6 x %"class.std::__1::vector.125"] }
%"class.angle::PackedEnumMap.660" = type { %"struct.std::__1::array.661" }
%"struct.std::__1::array.661" = type { [6 x i8] }
%"class.gl::InfoLog::StreamHelper" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }

$_ZN2gl7InfoLog12StreamHelperD2Ev = comdat any

$_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEE9onDestroyEPKS2_ = comdat any

$_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED2Ev = comdat any

$_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED0Ev = comdat any

$_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl15ProgramPipelineEmEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_ = comdat any

$_ZN2gl14InterfaceBlockD2Ev = comdat any

$_ZN2gl14InterfaceBlockD0Ev = comdat any

$_ZNSt3__16vectorIN2gl12ImageBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZN2gl7InfoLog17ensureInitializedEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN5angle14RefCountObjectIN2gl7ContextENS_6ResultEEE = comdat any

$_ZTVN2gl14InterfaceBlockE = comdat any

@_ZTVN2gl15ProgramPipelineE = hidden unnamed_addr constant { [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::ProgramPipeline"*, %"class.gl::Context"*)* @_ZN2gl15ProgramPipeline9onDestroyEPKNS_7ContextE to i8*), i8* bitcast (void (%"class.gl::ProgramPipeline"*)* @_ZN2gl15ProgramPipelineD2Ev to i8*), i8* bitcast (void (%"class.gl::ProgramPipeline"*)* @_ZN2gl15ProgramPipelineD0Ev to i8*), i8* bitcast (void (%"class.gl::ProgramPipeline"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)* @_ZN2gl15ProgramPipeline8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.gl::ProgramPipeline"*)* @_ZNK2gl15ProgramPipeline8getLabelEv to i8*), i8* bitcast (void (%"class.gl::ProgramPipeline"*, i64, i32)* @_ZN2gl15ProgramPipeline20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*), i8* bitcast (%"class.gl::Shader"* (%"class.gl::ProgramPipeline"*, i8)* @_ZNK2gl15ProgramPipeline17getAttachedShaderENS_10ShaderTypeE to i8*)], [6 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.gl::ProgramPipeline"*)* @_ZThn32_N2gl15ProgramPipelineD1Ev to i8*), i8* bitcast (void (%"class.gl::ProgramPipeline"*)* @_ZThn32_N2gl15ProgramPipelineD0Ev to i8*), i8* bitcast (void (%"class.gl::ProgramPipeline"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)* @_ZThn32_N2gl15ProgramPipeline8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.gl::ProgramPipeline"*)* @_ZThn32_NK2gl15ProgramPipeline8getLabelEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%"class.gl::ProgramPipeline"*)* @_ZThn40_N2gl15ProgramPipelineD1Ev to i8*), i8* bitcast (void (%"class.gl::ProgramPipeline"*)* @_ZThn40_N2gl15ProgramPipelineD0Ev to i8*), i8* bitcast (void (%"class.gl::ProgramPipeline"*, i64, i32)* @_ZThn40_N2gl15ProgramPipeline20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)], [5 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (%"class.gl::Shader"* (%"class.gl::ProgramPipeline"*, i8)* @_ZThn48_NK2gl15ProgramPipeline17getAttachedShaderENS_10ShaderTypeE to i8*), i8* bitcast (void (%"class.gl::ProgramPipeline"*)* @_ZThn48_N2gl15ProgramPipelineD1Ev to i8*), i8* bitcast (void (%"class.gl::ProgramPipeline"*)* @_ZThn48_N2gl15ProgramPipelineD0Ev to i8*)] }, align 8
@_ZN2glL23kAllGraphicsShaderTypesE = internal constant %"struct.std::__1::array.626" { [5 x i8] c"\00\01\02\03\04" }, align 1
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c" is not marked separable.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN5angle14RefCountObjectIN2gl7ContextENS_6ResultEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)* @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEE9onDestroyEPKS2_ to i8*), i8* bitcast (void (%"class.angle::RefCountObject"*)* @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.angle::RefCountObject"*)* @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED0Ev to i8*)] }, comdat, align 8
@_ZTVN2gl14InterfaceBlockE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.gl::InterfaceBlock"*)* @_ZN2gl14InterfaceBlockD2Ev to i8*), i8* bitcast (void (%"struct.gl::InterfaceBlock"*)* @_ZN2gl14InterfaceBlockD0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8

@_ZN2gl20ProgramPipelineStateC1Ev = hidden unnamed_addr alias void (%"class.gl::ProgramPipelineState"*), void (%"class.gl::ProgramPipelineState"*)* @_ZN2gl20ProgramPipelineStateC2Ev
@_ZN2gl20ProgramPipelineStateD1Ev = hidden unnamed_addr alias void (%"class.gl::ProgramPipelineState"*), void (%"class.gl::ProgramPipelineState"*)* @_ZN2gl20ProgramPipelineStateD2Ev
@_ZN2gl15ProgramPipelineC1EPN2rx13GLImplFactoryENS_17ProgramPipelineIDE = hidden unnamed_addr alias void (%"class.gl::ProgramPipeline"*, %"class.rx::GLImplFactory"*, i32), void (%"class.gl::ProgramPipeline"*, %"class.rx::GLImplFactory"*, i32)* @_ZN2gl15ProgramPipelineC2EPN2rx13GLImplFactoryENS_17ProgramPipelineIDE
@_ZN2gl15ProgramPipelineD1Ev = hidden unnamed_addr alias void (%"class.gl::ProgramPipeline"*), void (%"class.gl::ProgramPipeline"*)* @_ZN2gl15ProgramPipelineD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ProgramPipelineStateC2Ev(%"class.gl::ProgramPipelineState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 3
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 5
  %4 = bitcast %"class.gl::ProgramPipelineState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  %5 = tail call i8* @_Znwm(i64 1728) #15
  %6 = bitcast i8* %5 to %"class.gl::ProgramExecutable"*
  tail call void @_ZN2gl17ProgramExecutableC1Ev(%"class.gl::ProgramExecutable"* nonnull %6) #16
  %7 = bitcast %"class.gl::ProgramExecutable"** %3 to i8**
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 6
  store i8 0, i8* %8, align 8
  %9 = getelementptr %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %10 = bitcast %"class.gl::Program"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN2gl17ProgramExecutableC1Ev(%"class.gl::ProgramExecutable"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ProgramPipelineStateD2Ev(%"class.gl::ProgramPipelineState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 5
  %3 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %4 = icmp eq %"class.gl::ProgramExecutable"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.gl::ProgramExecutable"* %3 to void (%"class.gl::ProgramExecutable"*)***
  %7 = load void (%"class.gl::ProgramExecutable"*)**, void (%"class.gl::ProgramExecutable"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gl::ProgramExecutable"*)*, void (%"class.gl::ProgramExecutable"*)** %7, i64 1
  %9 = load void (%"class.gl::ProgramExecutable"*)*, void (%"class.gl::ProgramExecutable"*)** %8, align 8
  tail call void %9(%"class.gl::ProgramExecutable"* nonnull %3) #16
  br label %10

10:                                               ; preds = %1, %5
  store %"class.gl::ProgramExecutable"* null, %"class.gl::ProgramExecutable"** %2, align 8
  %11 = bitcast %"class.gl::ProgramPipelineState"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %10, %15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2gl20ProgramPipelineState8getLabelEv(%"class.gl::ProgramPipelineState"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 0
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl20ProgramPipelineState19activeShaderProgramEPNS_7ProgramE(%"class.gl::ProgramPipelineState"* nocapture, %"class.gl::Program"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 1
  store %"class.gl::Program"* %1, %"class.gl::Program"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ProgramPipelineState15useProgramStageEPKNS_7ContextENS_10ShaderTypeEPNS_7ProgramEPN5angle15ObserverBindingE(%"class.gl::ProgramPipelineState"* nocapture, %"class.gl::Context"*, i8 zeroext, %"class.gl::Program"*, %"class.angle::ObserverBinding"*) local_unnamed_addr #0 align 2 {
  %6 = zext i8 %2 to i64
  %7 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 2, i32 0, i32 0, i64 %6
  %8 = load %"class.gl::Program"*, %"class.gl::Program"** %7, align 8
  %9 = icmp eq %"class.gl::Program"* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %8, i64 0, i32 13
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  store i32 %13, i32* %11, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %8, i64 0, i32 12
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %8, %"class.gl::Context"* %1) #16
  br label %20

20:                                               ; preds = %19, %15, %10, %5
  %21 = icmp eq %"class.gl::Program"* %3, null
  br i1 %21, label %48, label %22

22:                                               ; preds = %20
  %23 = tail call i32 @_ZNK2gl7Program2idEv(%"class.gl::Program"* nonnull %3) #16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %48, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %3, i64 0, i32 4, i32 23, i32 0
  %27 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %26, align 8
  %28 = icmp eq i8 %2, 5
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %27, i64 0, i32 3, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, 32
  br label %40

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %27, i64 0, i32 2, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %2 to i32
  %37 = shl i32 1, %36
  %38 = trunc i32 %37 to i8
  %39 = and i8 %35, %38
  br label %40

40:                                               ; preds = %29, %33
  %41 = phi i8 [ %32, %29 ], [ %39, %33 ]
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  store %"class.gl::Program"* %3, %"class.gl::Program"** %7, align 8
  %44 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %3, i64 0, i32 13
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %44, align 4
  %47 = load %"class.gl::Program"*, %"class.gl::Program"** %7, align 8
  br label %49

48:                                               ; preds = %40, %20, %22
  store %"class.gl::Program"* null, %"class.gl::Program"** %7, align 8
  br label %49

49:                                               ; preds = %48, %43
  %50 = phi %"class.gl::Program"* [ null, %48 ], [ %47, %43 ]
  %51 = icmp eq %"class.gl::Program"* %50, null
  %52 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %50, i64 0, i32 1
  %53 = select i1 %51, %"class.angle::Subject"* null, %"class.angle::Subject"* %52
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %4, %"class.angle::Subject"* %53) #16
  ret void
}

declare i32 @_ZNK2gl7Program2idEv(%"class.gl::Program"*) local_unnamed_addr #2

declare void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"*, %"class.angle::Subject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ProgramPipelineState16useProgramStagesEPKNS_7ContextEjPNS_7ProgramEPNSt3__16vectorIN5angle15ObserverBindingENS6_9allocatorIS9_EEEE(%"class.gl::ProgramPipelineState"* nocapture, %"class.gl::Context"*, i32, %"class.gl::Program"*, %"class.std::__1::vector.337"*) local_unnamed_addr #0 align 2 {
  %6 = trunc i32 %2 to i16
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %45, label %8

8:                                                ; preds = %5
  %9 = and i32 %2, 65535
  %10 = tail call i32 @llvm.cttz.i32(i32 %9, i1 true) #16, !range !3
  %11 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %4, i64 0, i32 0, i32 1
  %12 = bitcast %"class.angle::ObserverBinding"** %11 to i64*
  %13 = bitcast %"class.std::__1::vector.337"* %4 to i64*
  %14 = zext i32 %10 to i64
  %15 = shl i64 1, %14
  %16 = tail call zeroext i8 @_ZN2gl25GetShaderTypeFromBitfieldEm(i64 %15) #16
  %17 = icmp eq i8 %16, 6
  br i1 %17, label %45, label %18

18:                                               ; preds = %8, %38
  %19 = phi i8 [ %43, %38 ], [ %16, %8 ]
  %20 = phi i16 [ %36, %38 ], [ %6, %8 ]
  %21 = phi i32 [ %40, %38 ], [ %10, %8 ]
  %22 = zext i8 %19 to i64
  %23 = load i64, i64* %12, align 8
  %24 = load i64, i64* %13, align 8
  %25 = sub i64 %23, %24
  %26 = ashr exact i64 %25, 5
  %27 = icmp ugt i64 %26, %22
  br i1 %27, label %30, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.std::__1::vector.337"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %29) #17
  unreachable

30:                                               ; preds = %18
  %31 = inttoptr i64 %24 to %"class.angle::ObserverBinding"*
  %32 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %31, i64 %22
  tail call void @_ZN2gl20ProgramPipelineState15useProgramStageEPKNS_7ContextENS_10ShaderTypeEPNS_7ProgramEPN5angle15ObserverBindingE(%"class.gl::ProgramPipelineState"* %0, %"class.gl::Context"* %1, i8 zeroext %19, %"class.gl::Program"* %3, %"class.angle::ObserverBinding"* %32)
  %33 = shl i32 1, %21
  %34 = trunc i32 %33 to i16
  %35 = xor i16 %34, -1
  %36 = and i16 %20, %35
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %30
  %39 = zext i16 %36 to i32
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 true) #16, !range !3
  %41 = zext i32 %40 to i64
  %42 = shl i64 1, %41
  %43 = tail call zeroext i8 @_ZN2gl25GetShaderTypeFromBitfieldEm(i64 %42) #16
  %44 = icmp eq i8 %43, 6
  br i1 %44, label %45, label %18

45:                                               ; preds = %38, %30, %8, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i8 @_ZN2gl25GetShaderTypeFromBitfieldEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl20ProgramPipelineState17usesShaderProgramENS_15ShaderProgramIDE(%"class.gl::ProgramPipelineState"* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %4 = load %"class.gl::Program"*, %"class.gl::Program"** %3, align 8
  %5 = icmp eq %"class.gl::Program"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @_ZNK2gl7Program2idEv(%"class.gl::Program"* nonnull %4) #16
  %8 = icmp eq i32 %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %6, %2
  %10 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 2, i32 0, i32 0, i64 1
  %11 = load %"class.gl::Program"*, %"class.gl::Program"** %10, align 8
  %12 = icmp eq %"class.gl::Program"* %11, null
  br i1 %12, label %18, label %15

13:                                               ; preds = %46, %43, %36, %29, %22, %15, %6
  %14 = phi i1 [ true, %6 ], [ true, %15 ], [ true, %22 ], [ true, %29 ], [ true, %36 ], [ true, %43 ], [ false, %46 ]
  ret i1 %14

15:                                               ; preds = %9
  %16 = tail call i32 @_ZNK2gl7Program2idEv(%"class.gl::Program"* nonnull %11) #16
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %13, label %18

18:                                               ; preds = %15, %9
  %19 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 2, i32 0, i32 0, i64 2
  %20 = load %"class.gl::Program"*, %"class.gl::Program"** %19, align 8
  %21 = icmp eq %"class.gl::Program"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = tail call i32 @_ZNK2gl7Program2idEv(%"class.gl::Program"* nonnull %20) #16
  %24 = icmp eq i32 %23, %1
  br i1 %24, label %13, label %25

25:                                               ; preds = %22, %18
  %26 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 2, i32 0, i32 0, i64 3
  %27 = load %"class.gl::Program"*, %"class.gl::Program"** %26, align 8
  %28 = icmp eq %"class.gl::Program"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = tail call i32 @_ZNK2gl7Program2idEv(%"class.gl::Program"* nonnull %27) #16
  %31 = icmp eq i32 %30, %1
  br i1 %31, label %13, label %32

32:                                               ; preds = %29, %25
  %33 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 2, i32 0, i32 0, i64 4
  %34 = load %"class.gl::Program"*, %"class.gl::Program"** %33, align 8
  %35 = icmp eq %"class.gl::Program"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = tail call i32 @_ZNK2gl7Program2idEv(%"class.gl::Program"* nonnull %34) #16
  %38 = icmp eq i32 %37, %1
  br i1 %38, label %13, label %39

39:                                               ; preds = %36, %32
  %40 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 2, i32 0, i32 0, i64 5
  %41 = load %"class.gl::Program"*, %"class.gl::Program"** %40, align 8
  %42 = icmp eq %"class.gl::Program"* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = tail call i32 @_ZNK2gl7Program2idEv(%"class.gl::Program"* nonnull %41) #16
  %45 = icmp eq i32 %44, %1
  br i1 %45, label %13, label %46

46:                                               ; preds = %43, %39
  br label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl20ProgramPipelineState24updateExecutableTexturesEv(%"class.gl::ProgramPipelineState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 5
  %3 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %3, i64 0, i32 55
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %3, i64 0, i32 3
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %3, i64 0, i32 2
  %9 = select i1 %6, %"class.angle::BitSetT.141"* %8, %"class.angle::BitSetT.141"* %7
  %10 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = zext i8 %11 to i32
  %15 = tail call i32 @llvm.cttz.i32(i32 %14, i1 true) #16, !range !3
  br label %17

16:                                               ; preds = %17, %1
  ret void

17:                                               ; preds = %45, %13
  %18 = phi %"class.gl::ProgramExecutable"* [ %48, %45 ], [ %3, %13 ]
  %19 = phi i32 [ %47, %45 ], [ %15, %13 ]
  %20 = phi i8 [ %43, %45 ], [ %11, %13 ]
  %21 = zext i32 %19 to i64
  %22 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %0, i64 0, i32 2, i32 0, i32 0, i64 %21
  %23 = load %"class.gl::Program"*, %"class.gl::Program"** %22, align 8
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %23, i64 0, i32 4, i32 23, i32 0
  %25 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %24, align 8
  %26 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %25, i64 0, i32 10, i32 0, i32 0, i64 0, i32 0
  %27 = bitcast i64* %26 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 8
  %29 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %18, i64 0, i32 10, i32 0, i32 0, i64 0, i32 0
  %30 = bitcast i64* %29 to <2 x i64>*
  store <2 x i64> %28, <2 x i64>* %30, align 8
  %31 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %32 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %24, align 8
  %33 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %32, i64 0, i32 16, i32 0, i32 0, i64 0, i32 0
  %34 = bitcast i64* %33 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %31, i64 0, i32 16, i32 0, i32 0, i64 0, i32 0
  %37 = bitcast i64* %36 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %37, align 8
  %38 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %39 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %23, i64 0, i32 4
  tail call void @_ZN2gl17ProgramExecutable20updateActiveSamplersERKNS_12ProgramStateE(%"class.gl::ProgramExecutable"* %38, %"class.gl::ProgramState"* dereferenceable(304) %39) #16
  %40 = shl i32 1, %19
  %41 = trunc i32 %40 to i8
  %42 = xor i8 %41, -1
  %43 = and i8 %20, %42
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %16, label %45

45:                                               ; preds = %17
  %46 = zext i8 %43 to i32
  %47 = tail call i32 @llvm.cttz.i32(i32 %46, i1 true) #16, !range !3
  %48 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  br label %17
}

declare void @_ZN2gl17ProgramExecutable20updateActiveSamplersERKNS_12ProgramStateE(%"class.gl::ProgramExecutable"*, %"class.gl::ProgramState"* dereferenceable(304)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl20ProgramPipelineState21getSpecConstUsageBitsEv(%"class.angle::BitSetT"* noalias nocapture sret, %"class.gl::ProgramPipelineState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %1, i64 0, i32 5
  %5 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %5, i64 0, i32 55
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %5, i64 0, i32 3
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %5, i64 0, i32 2
  %11 = select i1 %8, %"class.angle::BitSetT.141"* %10, %"class.angle::BitSetT.141"* %9
  %12 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %11, i64 0, i32 0
  %13 = load i8, i8* %12, align 1, !noalias !7
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %30, label %15

15:                                               ; preds = %2
  %16 = zext i8 %13 to i32
  %17 = tail call i32 @llvm.cttz.i32(i32 %16, i1 true) #16, !range !3
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %1, i64 0, i32 2, i32 0, i32 0, i64 %18
  %20 = load %"class.gl::Program"*, %"class.gl::Program"** %19, align 8
  %21 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %20, i64 0, i32 4, i32 15, i32 0
  %22 = load i32, i32* %21, align 4, !noalias !10
  %23 = shl i32 1, %17
  %24 = trunc i32 %23 to i8
  %25 = xor i8 %24, -1
  %26 = and i8 %13, %25
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %31, %15
  %29 = phi i32 [ %22, %15 ], [ %41, %31 ]
  store i32 %29, i32* %3, align 4
  br label %30

30:                                               ; preds = %2, %28
  ret void

31:                                               ; preds = %15, %31
  %32 = phi i8 [ %45, %31 ], [ %26, %15 ]
  %33 = phi i32 [ %41, %31 ], [ %22, %15 ]
  %34 = zext i8 %32 to i32
  %35 = tail call i32 @llvm.cttz.i32(i32 %34, i1 true) #16, !range !3
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %1, i64 0, i32 2, i32 0, i32 0, i64 %36
  %38 = load %"class.gl::Program"*, %"class.gl::Program"** %37, align 8
  %39 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %38, i64 0, i32 4, i32 15, i32 0
  %40 = load i32, i32* %39, align 4, !noalias !10
  %41 = or i32 %33, %40
  %42 = shl i32 1, %35
  %43 = trunc i32 %42 to i8
  %44 = xor i8 %43, -1
  %45 = and i8 %32, %44
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %28, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipelineC2EPN2rx13GLImplFactoryENS_17ProgramPipelineIDE(%"class.gl::ProgramPipeline"*, %"class.rx::GLImplFactory"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.gl::ProgramPipeline"*, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.rx::GLImplFactory", %"class.rx::GLImplFactory"* %1, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 %2, i32* %12, align 8
  %13 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN2gl15ProgramPipelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %16 = bitcast i32 (...)*** %13 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN2gl15ProgramPipelineE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN2gl15ProgramPipelineE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN2gl15ProgramPipelineE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %17 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5
  %19 = bitcast %"class.rx::GLImplFactory"* %1 to %"class.rx::ProgramPipelineImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::ProgramPipelineState"*)***
  %20 = load %"class.rx::ProgramPipelineImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::ProgramPipelineState"*)**, %"class.rx::ProgramPipelineImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::ProgramPipelineState"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.rx::ProgramPipelineImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::ProgramPipelineState"*)*, %"class.rx::ProgramPipelineImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::ProgramPipelineState"*)** %20, i64 15
  %22 = load %"class.rx::ProgramPipelineImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::ProgramPipelineState"*)*, %"class.rx::ProgramPipelineImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::ProgramPipelineState"*)** %21, align 8
  %23 = tail call %"class.rx::ProgramPipelineImpl"* %22(%"class.rx::GLImplFactory"* %1, %"class.gl::ProgramPipelineState"* dereferenceable(104) %18) #16
  %24 = ptrtoint %"class.rx::ProgramPipelineImpl"* %23 to i64
  %25 = bitcast %"class.std::__1::unique_ptr.329"* %17 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 3
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %28 = bitcast %"class.gl::ProgramPipelineState"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 32, i1 false) #16
  %29 = tail call i8* @_Znwm(i64 1728) #15
  %30 = bitcast i8* %29 to %"class.gl::ProgramExecutable"*
  tail call void @_ZN2gl17ProgramExecutableC1Ev(%"class.gl::ProgramExecutable"* nonnull %30) #16
  %31 = bitcast %"class.gl::ProgramExecutable"** %27 to i8**
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 6
  store i8 0, i8* %32, align 8
  %33 = getelementptr %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 0
  %34 = bitcast %"class.gl::Program"** %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 48, i1 false) #16
  %35 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 6
  %36 = bitcast %"class.std::__1::vector.337"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #16
  %37 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 7
  tail call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %37, %"class.angle::ObserverInterface"* %14, i64 0) #16
  %38 = bitcast %"class.gl::ProgramPipeline"** %4 to i8*
  %39 = bitcast i64* %5 to i8*
  %40 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 6, i32 0, i32 1
  %41 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %42 = icmp eq %"class.gl::ProgramPipeline"* %0, null
  %43 = select i1 %42, %"class.angle::ObserverInterface"* null, %"class.angle::ObserverInterface"* %14
  %44 = bitcast %"class.angle::ObserverBinding"** %40 to i64*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  store %"class.gl::ProgramPipeline"* %0, %"class.gl::ProgramPipeline"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  store i64 0, i64* %5, align 8
  %45 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %40, align 8
  %46 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %41, align 8
  %47 = icmp ult %"class.angle::ObserverBinding"* %45, %46
  br i1 %47, label %48, label %51

48:                                               ; preds = %3
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %45, %"class.angle::ObserverInterface"* %43, i64 0) #16
  %49 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %45, i64 1
  %50 = ptrtoint %"class.angle::ObserverBinding"* %49 to i64
  store i64 %50, i64* %44, align 8
  br label %53

51:                                               ; preds = %3
  call void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl15ProgramPipelineEmEEEvDpOT_(%"class.std::__1::vector.337"* %35, %"class.gl::ProgramPipeline"** nonnull dereferenceable(8) %4, i64* nonnull dereferenceable(8) %5) #16
  %52 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %40, align 8
  br label %53

53:                                               ; preds = %48, %51
  %54 = phi %"class.angle::ObserverBinding"* [ %49, %48 ], [ %52, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  store %"class.gl::ProgramPipeline"* %0, %"class.gl::ProgramPipeline"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  store i64 1, i64* %5, align 8
  %55 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %41, align 8
  %56 = icmp ult %"class.angle::ObserverBinding"* %54, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  call void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl15ProgramPipelineEmEEEvDpOT_(%"class.std::__1::vector.337"* %35, %"class.gl::ProgramPipeline"** nonnull dereferenceable(8) %4, i64* nonnull dereferenceable(8) %5) #16
  %58 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %40, align 8
  br label %62

59:                                               ; preds = %53
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %54, %"class.angle::ObserverInterface"* %43, i64 1) #16
  %60 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %54, i64 1
  %61 = ptrtoint %"class.angle::ObserverBinding"* %60 to i64
  store i64 %61, i64* %44, align 8
  br label %62

62:                                               ; preds = %59, %57
  %63 = phi %"class.angle::ObserverBinding"* [ %60, %59 ], [ %58, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  store %"class.gl::ProgramPipeline"* %0, %"class.gl::ProgramPipeline"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  store i64 2, i64* %5, align 8
  %64 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %41, align 8
  %65 = icmp ult %"class.angle::ObserverBinding"* %63, %64
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  call void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl15ProgramPipelineEmEEEvDpOT_(%"class.std::__1::vector.337"* %35, %"class.gl::ProgramPipeline"** nonnull dereferenceable(8) %4, i64* nonnull dereferenceable(8) %5) #16
  %67 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %40, align 8
  br label %71

68:                                               ; preds = %62
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %63, %"class.angle::ObserverInterface"* %43, i64 2) #16
  %69 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %63, i64 1
  %70 = ptrtoint %"class.angle::ObserverBinding"* %69 to i64
  store i64 %70, i64* %44, align 8
  br label %71

71:                                               ; preds = %68, %66
  %72 = phi %"class.angle::ObserverBinding"* [ %69, %68 ], [ %67, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  store %"class.gl::ProgramPipeline"* %0, %"class.gl::ProgramPipeline"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  store i64 3, i64* %5, align 8
  %73 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %41, align 8
  %74 = icmp ult %"class.angle::ObserverBinding"* %72, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  call void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl15ProgramPipelineEmEEEvDpOT_(%"class.std::__1::vector.337"* %35, %"class.gl::ProgramPipeline"** nonnull dereferenceable(8) %4, i64* nonnull dereferenceable(8) %5) #16
  %76 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %40, align 8
  br label %80

77:                                               ; preds = %71
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %72, %"class.angle::ObserverInterface"* %43, i64 3) #16
  %78 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %72, i64 1
  %79 = ptrtoint %"class.angle::ObserverBinding"* %78 to i64
  store i64 %79, i64* %44, align 8
  br label %80

80:                                               ; preds = %77, %75
  %81 = phi %"class.angle::ObserverBinding"* [ %78, %77 ], [ %76, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  store %"class.gl::ProgramPipeline"* %0, %"class.gl::ProgramPipeline"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  store i64 4, i64* %5, align 8
  %82 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %41, align 8
  %83 = icmp ult %"class.angle::ObserverBinding"* %81, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  call void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl15ProgramPipelineEmEEEvDpOT_(%"class.std::__1::vector.337"* %35, %"class.gl::ProgramPipeline"** nonnull dereferenceable(8) %4, i64* nonnull dereferenceable(8) %5) #16
  %85 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %40, align 8
  br label %89

86:                                               ; preds = %80
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %81, %"class.angle::ObserverInterface"* %43, i64 4) #16
  %87 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %81, i64 1
  %88 = ptrtoint %"class.angle::ObserverBinding"* %87 to i64
  store i64 %88, i64* %44, align 8
  br label %89

89:                                               ; preds = %86, %84
  %90 = phi %"class.angle::ObserverBinding"* [ %87, %86 ], [ %85, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  store %"class.gl::ProgramPipeline"* %0, %"class.gl::ProgramPipeline"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  store i64 5, i64* %5, align 8
  %91 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %41, align 8
  %92 = icmp ult %"class.angle::ObserverBinding"* %90, %91
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  call void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl15ProgramPipelineEmEEEvDpOT_(%"class.std::__1::vector.337"* %35, %"class.gl::ProgramPipeline"** nonnull dereferenceable(8) %4, i64* nonnull dereferenceable(8) %5) #16
  br label %97

94:                                               ; preds = %89
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %90, %"class.angle::ObserverInterface"* %43, i64 5) #16
  %95 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %90, i64 1
  %96 = ptrtoint %"class.angle::ObserverBinding"* %95 to i64
  store i64 %96, i64* %44, align 8
  br label %97

97:                                               ; preds = %94, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16
  %98 = bitcast %"class.gl::ProgramExecutable"** %27 to %"class.angle::Subject"**
  %99 = load %"class.angle::Subject"*, %"class.angle::Subject"** %98, align 8
  call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %37, %"class.angle::Subject"* %99) #16
  ret void
}

declare void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"*, %"class.angle::ObserverInterface"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipelineD2Ev(%"class.gl::ProgramPipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN2gl15ProgramPipelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 2
  %5 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN2gl15ProgramPipelineE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN2gl15ProgramPipelineE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN2gl15ProgramPipelineE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store %"class.rx::ProgramPipelineImpl"* null, %"class.rx::ProgramPipelineImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 7
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %8) #16
  %9 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %10, align 8
  %12 = icmp eq %"class.angle::ObserverBinding"* %11, null
  br i1 %12, label %27, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.angle::ObserverBinding"* %11 to i8*
  %15 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 6, i32 0, i32 1
  %16 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %15, align 8
  %17 = icmp eq %"class.angle::ObserverBinding"* %16, %11
  br i1 %17, label %25, label %18

18:                                               ; preds = %13, %18
  %19 = phi %"class.angle::ObserverBinding"* [ %20, %18 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %19, i64 -1
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %20) #16
  %21 = icmp eq %"class.angle::ObserverBinding"* %20, %11
  br i1 %21, label %22, label %18

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::vector.337"* %9 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %13
  %26 = phi i8* [ %24, %22 ], [ %14, %13 ]
  store %"class.angle::ObserverBinding"* %11, %"class.angle::ObserverBinding"** %15, align 8
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %1, %25
  %28 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5
  %29 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %30 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %29, align 8
  %31 = icmp eq %"class.gl::ProgramExecutable"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.gl::ProgramExecutable"* %30 to void (%"class.gl::ProgramExecutable"*)***
  %34 = load void (%"class.gl::ProgramExecutable"*)**, void (%"class.gl::ProgramExecutable"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.gl::ProgramExecutable"*)*, void (%"class.gl::ProgramExecutable"*)** %34, i64 1
  %36 = load void (%"class.gl::ProgramExecutable"*)*, void (%"class.gl::ProgramExecutable"*)** %35, align 8
  tail call void %36(%"class.gl::ProgramExecutable"* nonnull %30) #16
  br label %37

37:                                               ; preds = %32, %27
  store %"class.gl::ProgramExecutable"* null, %"class.gl::ProgramExecutable"** %29, align 8
  %38 = bitcast %"class.gl::ProgramPipelineState"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #15
  br label %45

45:                                               ; preds = %37, %42
  %46 = load %"class.rx::ProgramPipelineImpl"*, %"class.rx::ProgramPipelineImpl"** %7, align 8
  store %"class.rx::ProgramPipelineImpl"* null, %"class.rx::ProgramPipelineImpl"** %7, align 8
  %47 = icmp eq %"class.rx::ProgramPipelineImpl"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.rx::ProgramPipelineImpl"* %46 to void (%"class.rx::ProgramPipelineImpl"*)***
  %50 = load void (%"class.rx::ProgramPipelineImpl"*)**, void (%"class.rx::ProgramPipelineImpl"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.rx::ProgramPipelineImpl"*)*, void (%"class.rx::ProgramPipelineImpl"*)** %50, i64 1
  %52 = load void (%"class.rx::ProgramPipelineImpl"*)*, void (%"class.rx::ProgramPipelineImpl"*)** %51, align 8
  tail call void %52(%"class.rx::ProgramPipelineImpl"* nonnull %46) #16
  br label %53

53:                                               ; preds = %45, %48
  tail call void @_ZN5angle17ObserverInterfaceD2Ev(%"class.angle::ObserverInterface"* %4) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle14RefCountObjectIN2gl7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5angle17ObserverInterfaceD2Ev(%"class.angle::ObserverInterface"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N2gl15ProgramPipelineD1Ev(%"class.gl::ProgramPipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 -1, i32 7
  %3 = bitcast %"class.angle::ObserverBinding"* %2 to %"class.gl::ProgramPipeline"*
  tail call void @_ZN2gl15ProgramPipelineD2Ev(%"class.gl::ProgramPipeline"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N2gl15ProgramPipelineD1Ev(%"class.gl::ProgramPipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 -1, i32 6, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.339"* %2 to %"class.gl::ProgramPipeline"*
  tail call void @_ZN2gl15ProgramPipelineD2Ev(%"class.gl::ProgramPipeline"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N2gl15ProgramPipelineD1Ev(%"class.gl::ProgramPipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 -1, i32 6, i32 0, i32 1
  %3 = bitcast %"class.angle::ObserverBinding"** %2 to %"class.gl::ProgramPipeline"*
  tail call void @_ZN2gl15ProgramPipelineD2Ev(%"class.gl::ProgramPipeline"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipelineD0Ev(%"class.gl::ProgramPipeline"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2gl15ProgramPipelineD2Ev(%"class.gl::ProgramPipeline"* %0) #16
  %2 = bitcast %"class.gl::ProgramPipeline"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N2gl15ProgramPipelineD0Ev(%"class.gl::ProgramPipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 -1, i32 7
  %3 = bitcast %"class.angle::ObserverBinding"* %2 to %"class.gl::ProgramPipeline"*
  tail call void @_ZN2gl15ProgramPipelineD2Ev(%"class.gl::ProgramPipeline"* %3) #16
  %4 = bitcast %"class.angle::ObserverBinding"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N2gl15ProgramPipelineD0Ev(%"class.gl::ProgramPipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 -1, i32 6, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.339"* %2 to %"class.gl::ProgramPipeline"*
  tail call void @_ZN2gl15ProgramPipelineD2Ev(%"class.gl::ProgramPipeline"* %3) #16
  %4 = bitcast %"class.std::__1::__compressed_pair.339"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N2gl15ProgramPipelineD0Ev(%"class.gl::ProgramPipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 -1, i32 6, i32 0, i32 1
  %3 = bitcast %"class.angle::ObserverBinding"** %2 to %"class.gl::ProgramPipeline"*
  tail call void @_ZN2gl15ProgramPipelineD2Ev(%"class.gl::ProgramPipeline"* %3) #16
  %4 = bitcast %"class.angle::ObserverBinding"** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline9onDestroyEPKNS_7ContextE(%"class.gl::ProgramPipeline"* readonly, %"class.gl::Context"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 0
  %4 = load %"class.gl::Program"*, %"class.gl::Program"** %3, align 8
  %5 = icmp eq %"class.gl::Program"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %4, i64 0, i32 13
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  store i32 %9, i32* %7, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %4, i64 0, i32 12
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %4, %"class.gl::Context"* %1) #16
  br label %16

16:                                               ; preds = %15, %11, %6, %2
  %17 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 1
  %18 = load %"class.gl::Program"*, %"class.gl::Program"** %17, align 8
  %19 = icmp eq %"class.gl::Program"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %18, i64 0, i32 13
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %18, i64 0, i32 12
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %18, %"class.gl::Context"* %1) #16
  br label %30

30:                                               ; preds = %29, %25, %20, %16
  %31 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 2
  %32 = load %"class.gl::Program"*, %"class.gl::Program"** %31, align 8
  %33 = icmp eq %"class.gl::Program"* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %32, i64 0, i32 13
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, -1
  store i32 %37, i32* %35, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %32, i64 0, i32 12
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %32, %"class.gl::Context"* %1) #16
  br label %44

44:                                               ; preds = %43, %39, %34, %30
  %45 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 3
  %46 = load %"class.gl::Program"*, %"class.gl::Program"** %45, align 8
  %47 = icmp eq %"class.gl::Program"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %46, i64 0, i32 13
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, -1
  store i32 %51, i32* %49, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %46, i64 0, i32 12
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %46, %"class.gl::Context"* %1) #16
  br label %58

58:                                               ; preds = %57, %53, %48, %44
  %59 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 4
  %60 = load %"class.gl::Program"*, %"class.gl::Program"** %59, align 8
  %61 = icmp eq %"class.gl::Program"* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %60, i64 0, i32 13
  %64 = load i32, i32* %63, align 4
  %65 = add i32 %64, -1
  store i32 %65, i32* %63, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %60, i64 0, i32 12
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %60, %"class.gl::Context"* %1) #16
  br label %72

72:                                               ; preds = %71, %67, %62, %58
  %73 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 5
  %74 = load %"class.gl::Program"*, %"class.gl::Program"** %73, align 8
  %75 = icmp eq %"class.gl::Program"* %74, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %74, i64 0, i32 13
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, -1
  store i32 %79, i32* %77, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %86

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %74, i64 0, i32 12
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %81
  tail call void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"* nonnull %74, %"class.gl::Context"* %1) #16
  br label %86

86:                                               ; preds = %85, %81, %76, %72
  %87 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %88 = load %"class.rx::ProgramPipelineImpl"*, %"class.rx::ProgramPipelineImpl"** %87, align 8
  %89 = bitcast %"class.rx::ProgramPipelineImpl"* %88 to void (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*)***
  %90 = load void (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*)**, void (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*)*, void (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*)** %90, i64 2
  %92 = load void (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*)*, void (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*)** %91, align 8
  tail call void %92(%"class.rx::ProgramPipelineImpl"* %88, %"class.gl::Context"* %1) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::ProgramPipelineImpl"* @_ZNK2gl15ProgramPipeline17getImplementationEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.rx::ProgramPipelineImpl"*, %"class.rx::ProgramPipelineImpl"** %2, align 8
  ret %"class.rx::ProgramPipelineImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.gl::ProgramPipeline"*, %"class.gl::Context"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 0
  %5 = icmp eq %"class.std::__1::basic_string"* %4, %2
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %10, label %25, label %15

15:                                               ; preds = %6
  br i1 %14, label %19, label %16

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #16
  br label %35

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %21, i64 %23) #16
  br label %35

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %31 = zext i8 %13 to i64
  %32 = select i1 %14, i8* %27, i8* %30
  %33 = select i1 %14, i64 %29, i64 %31
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %32, i64 %33) #16
  br label %35

35:                                               ; preds = %3, %16, %19, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N2gl15ProgramPipeline8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.gl::ProgramPipeline"*, %"class.gl::Context"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 -1, i32 7
  %5 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %4, i64 2
  %6 = bitcast %"class.angle::ObserverBinding"* %5 to %"class.std::__1::basic_string"*
  %7 = icmp eq %"class.std::__1::basic_string"* %6, %2
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.angle::ObserverBinding"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %12, label %27, label %17

17:                                               ; preds = %8
  br i1 %16, label %21, label %18

18:                                               ; preds = %17
  %19 = bitcast %"class.angle::ObserverBinding"* %5 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #16
  br label %37

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %23, i64 %25) #16
  br label %37

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %33 = zext i8 %15 to i64
  %34 = select i1 %16, i8* %29, i8* %32
  %35 = select i1 %16, i64 %31, i64 %33
  %36 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %34, i64 %35) #16
  br label %37

37:                                               ; preds = %3, %18, %21, %27
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2gl15ProgramPipeline8getLabelEv(%"class.gl::ProgramPipeline"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 0
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZThn32_NK2gl15ProgramPipeline8getLabelEv(%"class.gl::ProgramPipeline"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %2, i64 2
  %4 = bitcast %"class.angle::ObserverBinding"* %3 to %"class.std::__1::basic_string"*
  ret %"class.std::__1::basic_string"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl15ProgramPipeline19activeShaderProgramEPNS_7ProgramE(%"class.gl::ProgramPipeline"* nocapture, %"class.gl::Program"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 1
  store %"class.gl::Program"* %1, %"class.gl::Program"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline16useProgramStagesEPKNS_7ContextEjPNS_7ProgramE(%"class.gl::ProgramPipeline"*, %"class.gl::Context"*, i32, %"class.gl::Program"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 6
  %7 = trunc i32 %2 to i16
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %46, label %9

9:                                                ; preds = %4
  %10 = and i32 %2, 65535
  %11 = tail call i32 @llvm.cttz.i32(i32 %10, i1 true) #16, !range !3
  %12 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"class.angle::ObserverBinding"** %12 to i64*
  %14 = bitcast %"class.std::__1::vector.337"* %6 to i64*
  %15 = zext i32 %11 to i64
  %16 = shl i64 1, %15
  %17 = tail call zeroext i8 @_ZN2gl25GetShaderTypeFromBitfieldEm(i64 %16) #16
  %18 = icmp eq i8 %17, 6
  br i1 %18, label %46, label %19

19:                                               ; preds = %9, %39
  %20 = phi i8 [ %44, %39 ], [ %17, %9 ]
  %21 = phi i16 [ %37, %39 ], [ %7, %9 ]
  %22 = phi i32 [ %41, %39 ], [ %11, %9 ]
  %23 = zext i8 %20 to i64
  %24 = load i64, i64* %13, align 8
  %25 = load i64, i64* %14, align 8
  %26 = sub i64 %24, %25
  %27 = ashr exact i64 %26, 5
  %28 = icmp ugt i64 %27, %23
  br i1 %28, label %31, label %29

29:                                               ; preds = %19
  %30 = bitcast %"class.std::__1::vector.337"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %30) #17
  unreachable

31:                                               ; preds = %19
  %32 = inttoptr i64 %25 to %"class.angle::ObserverBinding"*
  %33 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %32, i64 %23
  tail call void @_ZN2gl20ProgramPipelineState15useProgramStageEPKNS_7ContextENS_10ShaderTypeEPNS_7ProgramEPN5angle15ObserverBindingE(%"class.gl::ProgramPipelineState"* %5, %"class.gl::Context"* %1, i8 zeroext %20, %"class.gl::Program"* %3, %"class.angle::ObserverBinding"* %33) #16
  %34 = shl i32 1, %22
  %35 = trunc i32 %34 to i16
  %36 = xor i16 %35, -1
  %37 = and i16 %21, %36
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %31
  %40 = zext i16 %37 to i32
  %41 = tail call i32 @llvm.cttz.i32(i32 %40, i1 true) #16, !range !3
  %42 = zext i32 %41 to i64
  %43 = shl i64 1, %42
  %44 = tail call zeroext i8 @_ZN2gl25GetShaderTypeFromBitfieldEm(i64 %43) #16
  %45 = icmp eq i8 %44, 6
  br i1 %45, label %46, label %19

46:                                               ; preds = %31, %39, %9, %4
  tail call void @_ZN2gl15ProgramPipeline24updateLinkedShaderStagesEv(%"class.gl::ProgramPipeline"* %0)
  tail call void @_ZN2gl15ProgramPipeline16updateExecutableEv(%"class.gl::ProgramPipeline"* %0)
  %47 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 6
  store i8 0, i8* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline24updateLinkedShaderStagesEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %3 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %3, i64 0, i32 3, i32 0
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %3, i64 0, i32 2, i32 0
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 0
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %11 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 2, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = or i8 %12, 1
  store i8 %13, i8* %11, align 1
  tail call void @_ZN2gl17ProgramExecutable17updateCanDrawWithEv(%"class.gl::ProgramExecutable"* %10) #16
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 1
  %16 = load %"class.gl::Program"*, %"class.gl::Program"** %15, align 8
  %17 = icmp eq %"class.gl::Program"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %20 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %19, i64 0, i32 2, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = or i8 %21, 2
  store i8 %22, i8* %20, align 1
  tail call void @_ZN2gl17ProgramExecutable17updateCanDrawWithEv(%"class.gl::ProgramExecutable"* %19) #16
  br label %23

23:                                               ; preds = %18, %14
  %24 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 2
  %25 = load %"class.gl::Program"*, %"class.gl::Program"** %24, align 8
  %26 = icmp eq %"class.gl::Program"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %29 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %28, i64 0, i32 2, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = or i8 %30, 4
  store i8 %31, i8* %29, align 1
  tail call void @_ZN2gl17ProgramExecutable17updateCanDrawWithEv(%"class.gl::ProgramExecutable"* %28) #16
  br label %32

32:                                               ; preds = %27, %23
  %33 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 3
  %34 = load %"class.gl::Program"*, %"class.gl::Program"** %33, align 8
  %35 = icmp eq %"class.gl::Program"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %38 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %37, i64 0, i32 2, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = or i8 %39, 8
  store i8 %40, i8* %38, align 1
  tail call void @_ZN2gl17ProgramExecutable17updateCanDrawWithEv(%"class.gl::ProgramExecutable"* %37) #16
  br label %41

41:                                               ; preds = %36, %32
  %42 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 4
  %43 = load %"class.gl::Program"*, %"class.gl::Program"** %42, align 8
  %44 = icmp eq %"class.gl::Program"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %47 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %46, i64 0, i32 2, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = or i8 %48, 16
  store i8 %49, i8* %47, align 1
  tail call void @_ZN2gl17ProgramExecutable17updateCanDrawWithEv(%"class.gl::ProgramExecutable"* %46) #16
  br label %50

50:                                               ; preds = %45, %41
  %51 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 5
  %52 = load %"class.gl::Program"*, %"class.gl::Program"** %51, align 8
  %53 = icmp eq %"class.gl::Program"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %56 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %55, i64 0, i32 3, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = or i8 %57, 32
  store i8 %58, i8* %56, align 1
  tail call void @_ZN2gl17ProgramExecutable17updateCanDrawWithEv(%"class.gl::ProgramExecutable"* %55) #16
  br label %59

59:                                               ; preds = %54, %50
  %60 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  tail call void @_ZN2gl17ProgramExecutable17updateCanDrawWithEv(%"class.gl::ProgramExecutable"* %60) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline16updateExecutableEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.angle::BitSetT.141", align 1
  %3 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %4 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  tail call void @_ZN2gl17ProgramExecutable5resetEv(%"class.gl::ProgramExecutable"* %4) #16
  %5 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 0
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 4, i32 23, i32 0
  %10 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %9, align 8
  %11 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 5, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %11, i64 0, i32 5, i32 0
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 6
  %16 = load i32, i32* %15, align 8
  %17 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %17, i64 0, i32 6
  store i32 %16, i32* %18, align 8
  %19 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %20 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 8, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %19, i64 0, i32 8, i32 0
  store i64 %21, i64* %22, align 8
  %23 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %24 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 9, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %23, i64 0, i32 9, i32 0
  store i64 %25, i64* %26, align 8
  br label %27

27:                                               ; preds = %1, %8
  %28 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28)
  %29 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %30 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 55
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 3
  %34 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 2
  %35 = select i1 %32, %"class.angle::BitSetT.141"* %34, %"class.angle::BitSetT.141"* %33
  %36 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %35, i64 0, i32 0
  %37 = load i8, i8* %36, align 1
  store i8 %37, i8* %28, align 1
  %38 = call zeroext i8 @_ZN2gl23GetLastPreFragmentStageEN5angle7BitSetTILm6EhNS_10ShaderTypeEEE(%"class.angle::BitSetT.141"* nonnull %2) #16
  %39 = icmp eq i8 %38, 6
  br i1 %39, label %62, label %40

40:                                               ; preds = %27
  %41 = zext i8 %38 to i64
  %42 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %41
  %43 = load %"class.gl::Program"*, %"class.gl::Program"** %42, align 8
  %44 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %43, i64 0, i32 4, i32 23, i32 0
  %45 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %44, align 8
  %46 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %47 = icmp eq %"class.gl::ProgramExecutable"* %46, %45
  br i1 %47, label %62, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %46, i64 0, i32 27
  %50 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %45, i64 0, i32 27, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %45, i64 0, i32 27, i32 0, i32 1
  %53 = load i32*, i32** %52, align 8
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.180"* %49, i32* %51, i32* %53) #16
  %54 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %55 = icmp eq %"class.gl::ProgramExecutable"* %54, %45
  br i1 %55, label %62, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %54, i64 0, i32 26
  %58 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %45, i64 0, i32 26, i32 0, i32 0
  %59 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %58, align 8
  %60 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %45, i64 0, i32 26, i32 0, i32 1
  %61 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %60, align 8
  call void @_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.173"* %57, %"struct.gl::TransformFeedbackVarying"* %59, %"struct.gl::TransformFeedbackVarying"* %61) #16
  br label %62

62:                                               ; preds = %27, %40, %48, %56
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28)
  call void @_ZN2gl15ProgramPipeline25updateShaderStorageBlocksEv(%"class.gl::ProgramPipeline"* %0)
  call void @_ZN2gl15ProgramPipeline19updateImageBindingsEv(%"class.gl::ProgramPipeline"* %0)
  %63 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 3
  %64 = load %"class.gl::Program"*, %"class.gl::Program"** %63, align 8
  %65 = icmp eq %"class.gl::Program"* %64, null
  br i1 %65, label %85, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %64, i64 0, i32 4, i32 23, i32 0
  %68 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %67, align 8
  %69 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %68, i64 0, i32 60
  %70 = load i8, i8* %69, align 8
  %71 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %72 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %71, i64 0, i32 60
  store i8 %70, i8* %72, align 8
  %73 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %68, i64 0, i32 61
  %74 = load i8, i8* %73, align 1
  %75 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %76 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %75, i64 0, i32 61
  store i8 %74, i8* %76, align 1
  %77 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %68, i64 0, i32 63
  %78 = load i32, i32* %77, align 4
  %79 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %80 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %79, i64 0, i32 63
  store i32 %78, i32* %80, align 4
  %81 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %68, i64 0, i32 64
  %82 = load i32, i32* %81, align 8
  %83 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %84 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %83, i64 0, i32 64
  store i32 %82, i32* %84, align 8
  br label %85

85:                                               ; preds = %62, %66
  %86 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 1
  %87 = load %"class.gl::Program"*, %"class.gl::Program"** %86, align 8
  %88 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 2
  %89 = load %"class.gl::Program"*, %"class.gl::Program"** %88, align 8
  %90 = icmp eq %"class.gl::Program"* %87, null
  br i1 %90, label %98, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %87, i64 0, i32 4, i32 23, i32 0
  %93 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %92, align 8
  %94 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %93, i64 0, i32 65
  %95 = load i32, i32* %94, align 4
  %96 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %97 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %96, i64 0, i32 65
  store i32 %95, i32* %97, align 4
  br label %98

98:                                               ; preds = %91, %85
  %99 = icmp eq %"class.gl::Program"* %89, null
  br i1 %99, label %119, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %89, i64 0, i32 4, i32 23, i32 0
  %102 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %101, align 8
  %103 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %102, i64 0, i32 66
  %104 = load i32, i32* %103, align 8
  %105 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %106 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %105, i64 0, i32 66
  store i32 %104, i32* %106, align 8
  %107 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %102, i64 0, i32 67
  %108 = load i32, i32* %107, align 4
  %109 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %110 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %109, i64 0, i32 67
  store i32 %108, i32* %110, align 4
  %111 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %102, i64 0, i32 68
  %112 = load i32, i32* %111, align 8
  %113 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %114 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %113, i64 0, i32 68
  store i32 %112, i32* %114, align 8
  %115 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %102, i64 0, i32 69
  %116 = load i32, i32* %115, align 4
  %117 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %118 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %117, i64 0, i32 69
  store i32 %116, i32* %118, align 4
  br label %119

119:                                              ; preds = %98, %100
  %120 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 4
  %121 = load %"class.gl::Program"*, %"class.gl::Program"** %120, align 8
  %122 = icmp eq %"class.gl::Program"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %121, i64 0, i32 4, i32 23, i32 0
  %125 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %124, align 8
  %126 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %125, i64 0, i32 39
  %127 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %128 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %127, i64 0, i32 39
  %129 = bitcast %"class.gl::Range"* %126 to i64*
  %130 = bitcast %"class.gl::Range"* %128 to i64*
  %131 = load i64, i64* %129, align 4
  store i64 %131, i64* %130, align 8
  br label %132

132:                                              ; preds = %119, %123
  %133 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %134 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %133, i64 0, i32 55
  %135 = load i8, i8* %134, align 4, !range !2
  %136 = icmp eq i8 %135, 0
  %137 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %133, i64 0, i32 3
  %138 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %133, i64 0, i32 2
  %139 = select i1 %136, %"class.angle::BitSetT.141"* %138, %"class.angle::BitSetT.141"* %137
  %140 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %139, i64 0, i32 0
  %141 = load i8, i8* %140, align 1, !noalias !13
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %178, label %143

143:                                              ; preds = %132
  %144 = zext i8 %141 to i32
  %145 = call i32 @llvm.cttz.i32(i32 %144, i1 true) #16, !range !3
  br label %146

146:                                              ; preds = %174, %143
  %147 = phi %"class.gl::ProgramExecutable"* [ %177, %174 ], [ %133, %143 ]
  %148 = phi i32 [ %176, %174 ], [ %145, %143 ]
  %149 = phi i8 [ %172, %174 ], [ %141, %143 ]
  %150 = zext i32 %148 to i64
  %151 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %150
  %152 = load %"class.gl::Program"*, %"class.gl::Program"** %151, align 8
  %153 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %152, i64 0, i32 4, i32 23, i32 0
  %154 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %153, align 8
  %155 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %154, i64 0, i32 10, i32 0, i32 0, i64 0, i32 0
  %156 = bitcast i64* %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 8
  %158 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %147, i64 0, i32 10, i32 0, i32 0, i64 0, i32 0
  %159 = bitcast i64* %158 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %159, align 8
  %160 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %161 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %153, align 8
  %162 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %161, i64 0, i32 16, i32 0, i32 0, i64 0, i32 0
  %163 = bitcast i64* %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8
  %165 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %160, i64 0, i32 16, i32 0, i32 0, i64 0, i32 0
  %166 = bitcast i64* %165 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %166, align 8
  %167 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %168 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %152, i64 0, i32 4
  call void @_ZN2gl17ProgramExecutable20updateActiveSamplersERKNS_12ProgramStateE(%"class.gl::ProgramExecutable"* %167, %"class.gl::ProgramState"* dereferenceable(304) %168) #16
  %169 = shl i32 1, %148
  %170 = trunc i32 %169 to i8
  %171 = xor i8 %170, -1
  %172 = and i8 %149, %171
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %178, label %174

174:                                              ; preds = %146
  %175 = zext i8 %172 to i32
  %176 = call i32 @llvm.cttz.i32(i32 %175, i1 true) #16, !range !3
  %177 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  br label %146

178:                                              ; preds = %146, %132
  call void @_ZN2gl15ProgramPipeline20updateLinkedVaryingsEv(%"class.gl::ProgramPipeline"* %0)
  call void @_ZN2gl15ProgramPipeline17updateHasBooleansEv(%"class.gl::ProgramPipeline"* %0)
  ret void
}

declare void @_ZN2gl17ProgramExecutable17updateCanDrawWithEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline26updateExecutableAttributesEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 0
  %3 = load %"class.gl::Program"*, %"class.gl::Program"** %2, align 8
  %4 = icmp eq %"class.gl::Program"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %3, i64 0, i32 4, i32 23, i32 0
  %7 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 5, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 5, i32 0
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %15, i64 0, i32 6
  store i32 %14, i32* %16, align 8
  %17 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 8, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %17, i64 0, i32 8, i32 0
  store i64 %19, i64* %20, align 8
  %21 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 9, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %21, i64 0, i32 9, i32 0
  store i64 %23, i64* %24, align 8
  br label %25

25:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline30updateTransformFeedbackMembersEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.angle::BitSetT.141", align 1
  %3 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %4 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 55
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 3
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 2
  %10 = select i1 %7, %"class.angle::BitSetT.141"* %9, %"class.angle::BitSetT.141"* %8
  %11 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %2, i64 0, i32 0
  %12 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %10, i64 0, i32 0
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %11, align 1
  %14 = call zeroext i8 @_ZN2gl23GetLastPreFragmentStageEN5angle7BitSetTILm6EhNS_10ShaderTypeEEE(%"class.angle::BitSetT.141"* nonnull %2) #16
  %15 = icmp eq i8 %14, 6
  br i1 %15, label %38, label %16

16:                                               ; preds = %1
  %17 = zext i8 %14 to i64
  %18 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %17
  %19 = load %"class.gl::Program"*, %"class.gl::Program"** %18, align 8
  %20 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %19, i64 0, i32 4, i32 23, i32 0
  %21 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %20, align 8
  %22 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %23 = icmp eq %"class.gl::ProgramExecutable"* %22, %21
  br i1 %23, label %38, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %22, i64 0, i32 27
  %26 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %21, i64 0, i32 27, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %21, i64 0, i32 27, i32 0, i32 1
  %29 = load i32*, i32** %28, align 8
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.180"* %25, i32* %27, i32* %29) #16
  %30 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %31 = icmp eq %"class.gl::ProgramExecutable"* %30, %21
  br i1 %31, label %38, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %30, i64 0, i32 26
  %34 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %21, i64 0, i32 26, i32 0, i32 0
  %35 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %34, align 8
  %36 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %21, i64 0, i32 26, i32 0, i32 1
  %37 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %36, align 8
  call void @_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.173"* %33, %"struct.gl::TransformFeedbackVarying"* %35, %"struct.gl::TransformFeedbackVarying"* %37) #16
  br label %38

38:                                               ; preds = %16, %32, %24, %1
  ret void
}

declare zeroext i8 @_ZN2gl23GetLastPreFragmentStageEN5angle7BitSetTILm6EhNS_10ShaderTypeEEE(%"class.angle::BitSetT.141"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline25updateShaderStorageBlocksEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %3 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %3, i64 0, i32 37, i32 0, i32 0
  %5 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %3, i64 0, i32 37, i32 0, i32 1
  %7 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %6, align 8
  %8 = icmp eq %"struct.gl::InterfaceBlock"* %7, %5
  br i1 %8, label %16, label %9

9:                                                ; preds = %1, %9
  %10 = phi %"struct.gl::InterfaceBlock"* [ %11, %9 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %10, i64 -1
  %12 = bitcast %"struct.gl::InterfaceBlock"* %11 to void (%"struct.gl::InterfaceBlock"*)***
  %13 = load void (%"struct.gl::InterfaceBlock"*)**, void (%"struct.gl::InterfaceBlock"*)*** %12, align 8
  %14 = load void (%"struct.gl::InterfaceBlock"*)*, void (%"struct.gl::InterfaceBlock"*)** %13, align 8
  tail call void %14(%"struct.gl::InterfaceBlock"* %11) #16
  %15 = icmp eq %"struct.gl::InterfaceBlock"* %11, %5
  br i1 %15, label %16, label %9

16:                                               ; preds = %9, %1
  store %"struct.gl::InterfaceBlock"* %5, %"struct.gl::InterfaceBlock"** %6, align 8
  %17 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %17, i64 0, i32 38, i32 0, i32 0
  %19 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %18, align 8
  %20 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %17, i64 0, i32 38, i32 0, i32 1
  %21 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %20, align 8
  %22 = icmp eq %"struct.gl::InterfaceBlock"* %21, %19
  br i1 %22, label %30, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"struct.gl::InterfaceBlock"* [ %25, %23 ], [ %21, %16 ]
  %25 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %24, i64 -1
  %26 = bitcast %"struct.gl::InterfaceBlock"* %25 to void (%"struct.gl::InterfaceBlock"*)***
  %27 = load void (%"struct.gl::InterfaceBlock"*)**, void (%"struct.gl::InterfaceBlock"*)*** %26, align 8
  %28 = load void (%"struct.gl::InterfaceBlock"*)*, void (%"struct.gl::InterfaceBlock"*)** %27, align 8
  tail call void %28(%"struct.gl::InterfaceBlock"* %25) #16
  %29 = icmp eq %"struct.gl::InterfaceBlock"* %25, %19
  br i1 %29, label %30, label %23

30:                                               ; preds = %23, %16
  store %"struct.gl::InterfaceBlock"* %19, %"struct.gl::InterfaceBlock"** %20, align 8
  br label %35

31:                                               ; preds = %121
  %32 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 5
  %33 = load %"class.gl::Program"*, %"class.gl::Program"** %32, align 8
  %34 = icmp eq %"class.gl::Program"* %33, null
  br i1 %34, label %191, label %125

35:                                               ; preds = %30, %121
  %36 = phi i8* [ getelementptr inbounds (%"struct.std::__1::array.626", %"struct.std::__1::array.626"* @_ZN2glL23kAllGraphicsShaderTypesE, i64 0, i32 0, i64 0), %30 ], [ %123, %121 ]
  %37 = phi i8 [ 0, %30 ], [ %122, %121 ]
  %38 = load i8, i8* %36, align 1
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %39
  %41 = load %"class.gl::Program"*, %"class.gl::Program"** %40, align 8
  %42 = icmp eq %"class.gl::Program"* %41, null
  br i1 %42, label %121, label %43

43:                                               ; preds = %35
  %44 = zext i8 %38 to i32
  %45 = shl i32 1, %44
  %46 = trunc i32 %45 to i8
  %47 = and i8 %37, %46
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %121

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %41, i64 0, i32 4, i32 23, i32 0
  %51 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %50, align 8
  %52 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %51, i64 0, i32 55
  %53 = load i8, i8* %52, align 4, !range !2
  %54 = icmp eq i8 %53, 0
  %55 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %51, i64 0, i32 3
  %56 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %51, i64 0, i32 2
  %57 = select i1 %54, %"class.angle::BitSetT.141"* %56, %"class.angle::BitSetT.141"* %55
  %58 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %57, i64 0, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = or i8 %59, %37
  %61 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %51, i64 0, i32 37
  %62 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %51, i64 0, i32 38
  %63 = select i1 %54, %"class.std::__1::vector.194"* %62, %"class.std::__1::vector.194"* %61
  %64 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %63, i64 0, i32 0, i32 0
  %65 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %63, i64 0, i32 0, i32 1
  %67 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %66, align 8
  %68 = icmp eq %"struct.gl::InterfaceBlock"* %65, %67
  br i1 %68, label %121, label %69

69:                                               ; preds = %49, %118
  %70 = phi %"struct.gl::InterfaceBlock"* [ %119, %118 ], [ %65, %49 ]
  %71 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %72 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %71, i64 0, i32 38, i32 0, i32 1
  %73 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %72, align 8
  %74 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %71, i64 0, i32 38, i32 0, i32 2, i32 0, i32 0
  %75 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %74, align 8
  %76 = icmp ult %"struct.gl::InterfaceBlock"* %73, %75
  br i1 %76, label %77, label %116

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %73, i64 0, i32 0
  %79 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %70, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* %78, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %79) #16
  %80 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %73, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %73, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %70, i64 0, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %77
  %88 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %89 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false) #16
  br label %95

90:                                               ; preds = %77
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %70, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %81, i8* %92, i64 %94) #16
  br label %95

95:                                               ; preds = %90, %87
  %96 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %73, i64 0, i32 2
  %97 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %70, i64 0, i32 2
  %98 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %95
  %103 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %104 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 24, i1 false) #16
  br label %110

105:                                              ; preds = %95
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %96, i8* %107, i64 %109) #16
  br label %110

110:                                              ; preds = %105, %102
  %111 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %73, i64 0, i32 3
  %112 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %70, i64 0, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 12, i1 false) #16
  %113 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %73, i64 1
  %114 = ptrtoint %"struct.gl::InterfaceBlock"* %113 to i64
  %115 = bitcast %"struct.gl::InterfaceBlock"** %72 to i64*
  store i64 %114, i64* %115, align 8
  br label %118

116:                                              ; preds = %69
  %117 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %71, i64 0, i32 38
  tail call void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.194"* %117, %"struct.gl::InterfaceBlock"* dereferenceable(112) %70) #16
  br label %118

118:                                              ; preds = %110, %116
  %119 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %70, i64 1
  %120 = icmp eq %"struct.gl::InterfaceBlock"* %119, %67
  br i1 %120, label %121, label %69

121:                                              ; preds = %118, %49, %43, %35
  %122 = phi i8 [ %37, %35 ], [ %37, %43 ], [ %60, %49 ], [ %60, %118 ]
  %123 = getelementptr inbounds i8, i8* %36, i64 1
  %124 = icmp eq i8* %123, getelementptr inbounds (%"struct.std::__1::array.626", %"struct.std::__1::array.626"* @_ZN2glL23kAllGraphicsShaderTypesE, i64 1, i32 0, i64 0)
  br i1 %124, label %31, label %35

125:                                              ; preds = %31
  %126 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %33, i64 0, i32 4, i32 23, i32 0
  %127 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %126, align 8
  %128 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %127, i64 0, i32 55
  %129 = load i8, i8* %128, align 4, !range !2
  %130 = icmp eq i8 %129, 0
  %131 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %127, i64 0, i32 37
  %132 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %127, i64 0, i32 38
  %133 = select i1 %130, %"class.std::__1::vector.194"* %132, %"class.std::__1::vector.194"* %131
  %134 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %133, i64 0, i32 0, i32 0
  %135 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %133, i64 0, i32 0, i32 1
  %137 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %136, align 8
  %138 = icmp eq %"struct.gl::InterfaceBlock"* %135, %137
  br i1 %138, label %191, label %139

139:                                              ; preds = %125, %188
  %140 = phi %"struct.gl::InterfaceBlock"* [ %189, %188 ], [ %135, %125 ]
  %141 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %142 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %141, i64 0, i32 37, i32 0, i32 1
  %143 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %142, align 8
  %144 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %141, i64 0, i32 37, i32 0, i32 2, i32 0, i32 0
  %145 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %144, align 8
  %146 = icmp ult %"struct.gl::InterfaceBlock"* %143, %145
  br i1 %146, label %147, label %186

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %143, i64 0, i32 0
  %149 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %140, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* %148, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %149) #16
  %150 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %143, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %151 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %143, i64 0, i32 1
  %152 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %140, i64 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"* %152 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %160, label %157

157:                                              ; preds = %147
  %158 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  %159 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 24, i1 false) #16
  br label %165

160:                                              ; preds = %147
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %140, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %164 = load i64, i64* %163, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %151, i8* %162, i64 %164) #16
  br label %165

165:                                              ; preds = %160, %157
  %166 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %143, i64 0, i32 2
  %167 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %140, i64 0, i32 2
  %168 = bitcast %"class.std::__1::basic_string"* %167 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %175, label %172

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::basic_string"* %166 to i8*
  %174 = bitcast %"class.std::__1::basic_string"* %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 24, i1 false) #16
  br label %180

175:                                              ; preds = %165
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %179 = load i64, i64* %178, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %166, i8* %177, i64 %179) #16
  br label %180

180:                                              ; preds = %175, %172
  %181 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %143, i64 0, i32 3
  %182 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %140, i64 0, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 12, i1 false) #16
  %183 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %143, i64 1
  %184 = ptrtoint %"struct.gl::InterfaceBlock"* %183 to i64
  %185 = bitcast %"struct.gl::InterfaceBlock"** %142 to i64*
  store i64 %184, i64* %185, align 8
  br label %188

186:                                              ; preds = %139
  %187 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %141, i64 0, i32 37
  tail call void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.194"* %187, %"struct.gl::InterfaceBlock"* dereferenceable(112) %140) #16
  br label %188

188:                                              ; preds = %180, %186
  %189 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %140, i64 1
  %190 = icmp eq %"struct.gl::InterfaceBlock"* %189, %137
  br i1 %190, label %191, label %139

191:                                              ; preds = %188, %125, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline19updateImageBindingsEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %3 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %3, i64 0, i32 41, i32 0, i32 0
  %5 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %3, i64 0, i32 41, i32 0, i32 1
  %7 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %6, align 8
  %8 = icmp eq %"struct.gl::ImageBinding"* %7, %5
  br i1 %8, label %13, label %9

9:                                                ; preds = %1, %9
  %10 = phi %"struct.gl::ImageBinding"* [ %11, %9 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %10, i64 -1
  tail call void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"* %11) #16
  %12 = icmp eq %"struct.gl::ImageBinding"* %11, %5
  br i1 %12, label %13, label %9

13:                                               ; preds = %9, %1
  store %"struct.gl::ImageBinding"* %5, %"struct.gl::ImageBinding"** %6, align 8
  %14 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %15 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %14, i64 0, i32 42, i32 0, i32 0
  %16 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %15, align 8
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %14, i64 0, i32 42, i32 0, i32 1
  %18 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %17, align 8
  %19 = icmp eq %"struct.gl::ImageBinding"* %18, %16
  br i1 %19, label %24, label %20

20:                                               ; preds = %13, %20
  %21 = phi %"struct.gl::ImageBinding"* [ %22, %20 ], [ %18, %13 ]
  %22 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %21, i64 -1
  tail call void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"* %22) #16
  %23 = icmp eq %"struct.gl::ImageBinding"* %22, %16
  br i1 %23, label %24, label %20

24:                                               ; preds = %20, %13
  store %"struct.gl::ImageBinding"* %16, %"struct.gl::ImageBinding"** %17, align 8
  %25 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %26 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %25, i64 0, i32 17, i32 0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 96, i1 false)
  br label %31

27:                                               ; preds = %89
  %28 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 5
  %29 = load %"class.gl::Program"*, %"class.gl::Program"** %28, align 8
  %30 = icmp eq %"class.gl::Program"* %29, null
  br i1 %30, label %133, label %93

31:                                               ; preds = %24, %89
  %32 = phi i8* [ %91, %89 ], [ getelementptr inbounds (%"struct.std::__1::array.626", %"struct.std::__1::array.626"* @_ZN2glL23kAllGraphicsShaderTypesE, i64 0, i32 0, i64 0), %24 ]
  %33 = phi i8 [ %90, %89 ], [ 0, %24 ]
  %34 = load i8, i8* %32, align 1
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %35
  %37 = load %"class.gl::Program"*, %"class.gl::Program"** %36, align 8
  %38 = icmp eq %"class.gl::Program"* %37, null
  br i1 %38, label %89, label %39

39:                                               ; preds = %31
  %40 = zext i8 %34 to i32
  %41 = shl i32 1, %40
  %42 = trunc i32 %41 to i8
  %43 = and i8 %33, %42
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %89

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %37, i64 0, i32 4, i32 23, i32 0
  %47 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %46, align 8
  %48 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %47, i64 0, i32 55
  %49 = load i8, i8* %48, align 4, !range !2
  %50 = icmp eq i8 %49, 0
  %51 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %47, i64 0, i32 3
  %52 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %47, i64 0, i32 2
  %53 = select i1 %50, %"class.angle::BitSetT.141"* %52, %"class.angle::BitSetT.141"* %51
  %54 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %53, i64 0, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = or i8 %55, %33
  %57 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %47, i64 0, i32 41
  %58 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %47, i64 0, i32 42
  %59 = select i1 %50, %"class.std::__1::vector.216"* %58, %"class.std::__1::vector.216"* %57
  %60 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %59, i64 0, i32 0, i32 0
  %61 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %59, i64 0, i32 0, i32 1
  %63 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %62, align 8
  %64 = icmp eq %"struct.gl::ImageBinding"* %61, %63
  %65 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  br i1 %64, label %68, label %71

66:                                               ; preds = %85
  %67 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %46, align 8
  br label %68

68:                                               ; preds = %66, %45
  %69 = phi %"class.gl::ProgramExecutable"* [ %47, %45 ], [ %67, %66 ]
  %70 = phi %"class.gl::ProgramExecutable"* [ %65, %45 ], [ %88, %66 ]
  tail call void @_ZN2gl17ProgramExecutable18updateActiveImagesERKS0_(%"class.gl::ProgramExecutable"* %70, %"class.gl::ProgramExecutable"* dereferenceable(1728) %69) #16
  br label %89

71:                                               ; preds = %45, %85
  %72 = phi %"class.gl::ProgramExecutable"* [ %88, %85 ], [ %65, %45 ]
  %73 = phi %"struct.gl::ImageBinding"* [ %86, %85 ], [ %61, %45 ]
  %74 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %72, i64 0, i32 42, i32 0, i32 1
  %75 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %74, align 8
  %76 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %72, i64 0, i32 42, i32 0, i32 2, i32 0, i32 0
  %77 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %76, align 8
  %78 = icmp ult %"struct.gl::ImageBinding"* %75, %77
  br i1 %78, label %79, label %83

79:                                               ; preds = %71
  tail call void @_ZN2gl12ImageBindingC1ERKS0_(%"struct.gl::ImageBinding"* %75, %"struct.gl::ImageBinding"* dereferenceable(32) %73) #16
  %80 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %75, i64 1
  %81 = ptrtoint %"struct.gl::ImageBinding"* %80 to i64
  %82 = bitcast %"struct.gl::ImageBinding"** %74 to i64*
  store i64 %81, i64* %82, align 8
  br label %85

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %72, i64 0, i32 42
  tail call void @_ZNSt3__16vectorIN2gl12ImageBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.216"* %84, %"struct.gl::ImageBinding"* dereferenceable(32) %73) #16
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %73, i64 1
  %87 = icmp eq %"struct.gl::ImageBinding"* %86, %63
  %88 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  br i1 %87, label %66, label %71

89:                                               ; preds = %39, %31, %68
  %90 = phi i8 [ %33, %31 ], [ %33, %39 ], [ %56, %68 ]
  %91 = getelementptr inbounds i8, i8* %32, i64 1
  %92 = icmp eq i8* %91, getelementptr inbounds (%"struct.std::__1::array.626", %"struct.std::__1::array.626"* @_ZN2glL23kAllGraphicsShaderTypesE, i64 1, i32 0, i64 0)
  br i1 %92, label %27, label %31

93:                                               ; preds = %27
  %94 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %29, i64 0, i32 4, i32 23, i32 0
  %95 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %94, align 8
  %96 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %95, i64 0, i32 55
  %97 = load i8, i8* %96, align 4, !range !2
  %98 = icmp eq i8 %97, 0
  %99 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %95, i64 0, i32 41
  %100 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %95, i64 0, i32 42
  %101 = select i1 %98, %"class.std::__1::vector.216"* %100, %"class.std::__1::vector.216"* %99
  %102 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %101, i64 0, i32 0, i32 0
  %103 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %101, i64 0, i32 0, i32 1
  %105 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %104, align 8
  %106 = icmp eq %"struct.gl::ImageBinding"* %103, %105
  %107 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  br i1 %106, label %108, label %115

108:                                              ; preds = %129, %93
  %109 = phi %"class.gl::ProgramExecutable"* [ %107, %93 ], [ %132, %129 ]
  %110 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %109, i64 0, i32 55
  store i8 1, i8* %110, align 4
  %111 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %112 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %94, align 8
  tail call void @_ZN2gl17ProgramExecutable18updateActiveImagesERKS0_(%"class.gl::ProgramExecutable"* %111, %"class.gl::ProgramExecutable"* dereferenceable(1728) %112) #16
  %113 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %114 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %113, i64 0, i32 55
  store i8 0, i8* %114, align 4
  br label %133

115:                                              ; preds = %93, %129
  %116 = phi %"class.gl::ProgramExecutable"* [ %132, %129 ], [ %107, %93 ]
  %117 = phi %"struct.gl::ImageBinding"* [ %130, %129 ], [ %103, %93 ]
  %118 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %116, i64 0, i32 41, i32 0, i32 1
  %119 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %118, align 8
  %120 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %116, i64 0, i32 41, i32 0, i32 2, i32 0, i32 0
  %121 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %120, align 8
  %122 = icmp ult %"struct.gl::ImageBinding"* %119, %121
  br i1 %122, label %123, label %127

123:                                              ; preds = %115
  tail call void @_ZN2gl12ImageBindingC1ERKS0_(%"struct.gl::ImageBinding"* %119, %"struct.gl::ImageBinding"* dereferenceable(32) %117) #16
  %124 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %119, i64 1
  %125 = ptrtoint %"struct.gl::ImageBinding"* %124 to i64
  %126 = bitcast %"struct.gl::ImageBinding"** %118 to i64*
  store i64 %125, i64* %126, align 8
  br label %129

127:                                              ; preds = %115
  %128 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %116, i64 0, i32 41
  tail call void @_ZNSt3__16vectorIN2gl12ImageBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.216"* %128, %"struct.gl::ImageBinding"* dereferenceable(32) %117) #16
  br label %129

129:                                              ; preds = %123, %127
  %130 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %117, i64 1
  %131 = icmp eq %"struct.gl::ImageBinding"* %130, %105
  %132 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  br i1 %131, label %108, label %115

133:                                              ; preds = %27, %108
  ret void
}

declare void @_ZN2gl17ProgramExecutable18updateActiveImagesERKS0_(%"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"* dereferenceable(1728)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline34updateExecutableGeometryPropertiesEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 3
  %3 = load %"class.gl::Program"*, %"class.gl::Program"** %2, align 8
  %4 = icmp eq %"class.gl::Program"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %3, i64 0, i32 4, i32 23, i32 0
  %7 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 60
  %9 = load i8, i8* %8, align 8
  %10 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %11 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %11, i64 0, i32 60
  store i8 %9, i8* %12, align 8
  %13 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 61
  %14 = load i8, i8* %13, align 1
  %15 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %10, align 8
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %15, i64 0, i32 61
  store i8 %14, i8* %16, align 1
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 63
  %18 = load i32, i32* %17, align 4
  %19 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %10, align 8
  %20 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %19, i64 0, i32 63
  store i32 %18, i32* %20, align 4
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 64
  %22 = load i32, i32* %21, align 8
  %23 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %10, align 8
  %24 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %23, i64 0, i32 64
  store i32 %22, i32* %24, align 8
  br label %25

25:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline38updateExecutableTessellationPropertiesEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 1
  %3 = load %"class.gl::Program"*, %"class.gl::Program"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 2
  %5 = load %"class.gl::Program"*, %"class.gl::Program"** %4, align 8
  %6 = icmp eq %"class.gl::Program"* %3, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %3, i64 0, i32 4, i32 23, i32 0
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 65
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %13 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %13, i64 0, i32 65
  store i32 %11, i32* %14, align 4
  br label %15

15:                                               ; preds = %1, %7
  %16 = icmp eq %"class.gl::Program"* %5, null
  br i1 %16, label %37, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %5, i64 0, i32 4, i32 23, i32 0
  %19 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %18, align 8
  %20 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %19, i64 0, i32 66
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %23 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %22, align 8
  %24 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %23, i64 0, i32 66
  store i32 %21, i32* %24, align 8
  %25 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %19, i64 0, i32 67
  %26 = load i32, i32* %25, align 4
  %27 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %22, align 8
  %28 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %27, i64 0, i32 67
  store i32 %26, i32* %28, align 4
  %29 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %19, i64 0, i32 68
  %30 = load i32, i32* %29, align 8
  %31 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %22, align 8
  %32 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %31, i64 0, i32 68
  store i32 %30, i32* %32, align 8
  %33 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %19, i64 0, i32 69
  %34 = load i32, i32* %33, align 4
  %35 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %22, align 8
  %36 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %35, i64 0, i32 69
  store i32 %34, i32* %36, align 4
  br label %37

37:                                               ; preds = %15, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline24updateFragmentInoutRangeEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 4
  %3 = load %"class.gl::Program"*, %"class.gl::Program"** %2, align 8
  %4 = icmp eq %"class.gl::Program"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %3, i64 0, i32 4, i32 23, i32 0
  %7 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 39
  %9 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %10 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 39
  %12 = bitcast %"class.gl::Range"* %8 to i64*
  %13 = bitcast %"class.gl::Range"* %11 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 8
  br label %15

15:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline20updateLinkedVaryingsEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  br label %7

3:                                                ; preds = %37
  %4 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 5
  %5 = load %"class.gl::Program"*, %"class.gl::Program"** %4, align 8
  %6 = icmp eq %"class.gl::Program"* %5, null
  br i1 %6, label %63, label %40

7:                                                ; preds = %1, %37
  %8 = phi i8* [ getelementptr inbounds (%"struct.std::__1::array.626", %"struct.std::__1::array.626"* @_ZN2glL23kAllGraphicsShaderTypesE, i64 0, i32 0, i64 0), %1 ], [ %38, %37 ]
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %10
  %12 = load %"class.gl::Program"*, %"class.gl::Program"** %11, align 8
  %13 = icmp eq %"class.gl::Program"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %12, i64 0, i32 10
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %37, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %12, i64 0, i32 4, i32 23, i32 0
  %20 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %19, align 8
  %21 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %22 = icmp eq %"class.gl::ProgramExecutable"* %21, %20
  br i1 %22, label %37, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %21, i64 0, i32 57, i32 0, i32 0, i64 %10
  %25 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %20, i64 0, i32 57, i32 0, i32 0, i64 %10, i32 0, i32 0
  %26 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %20, i64 0, i32 57, i32 0, i32 0, i64 %10, i32 0, i32 1
  %28 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %27, align 8
  tail call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.70"* %24, %"struct.sh::ShaderVariable"* %26, %"struct.sh::ShaderVariable"* %28) #16
  %29 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %30 = icmp eq %"class.gl::ProgramExecutable"* %29, %20
  br i1 %30, label %37, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 58, i32 0, i32 0, i64 %10
  %33 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %20, i64 0, i32 58, i32 0, i32 0, i64 %10, i32 0, i32 0
  %34 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %33, align 8
  %35 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %20, i64 0, i32 58, i32 0, i32 0, i64 %10, i32 0, i32 1
  %36 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %35, align 8
  tail call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.70"* %32, %"struct.sh::ShaderVariable"* %34, %"struct.sh::ShaderVariable"* %36) #16
  br label %37

37:                                               ; preds = %18, %14, %31, %23, %7
  %38 = getelementptr inbounds i8, i8* %8, i64 1
  %39 = icmp eq i8* %38, getelementptr inbounds (%"struct.std::__1::array.626", %"struct.std::__1::array.626"* @_ZN2glL23kAllGraphicsShaderTypesE, i64 1, i32 0, i64 0)
  br i1 %39, label %3, label %7

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %5, i64 0, i32 10
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %5, i64 0, i32 4, i32 23, i32 0
  %46 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %45, align 8
  %47 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %48 = icmp eq %"class.gl::ProgramExecutable"* %47, %46
  br i1 %48, label %63, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %47, i64 0, i32 57, i32 0, i32 0, i64 5
  %51 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %46, i64 0, i32 57, i32 0, i32 0, i64 5, i32 0, i32 0
  %52 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %51, align 8
  %53 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %46, i64 0, i32 57, i32 0, i32 0, i64 5, i32 0, i32 1
  %54 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %53, align 8
  tail call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.70"* %50, %"struct.sh::ShaderVariable"* %52, %"struct.sh::ShaderVariable"* %54) #16
  %55 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %56 = icmp eq %"class.gl::ProgramExecutable"* %55, %46
  br i1 %56, label %63, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %55, i64 0, i32 58, i32 0, i32 0, i64 5
  %59 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %46, i64 0, i32 58, i32 0, i32 0, i64 5, i32 0, i32 0
  %60 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %59, align 8
  %61 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %46, i64 0, i32 58, i32 0, i32 0, i64 5, i32 0, i32 1
  %62 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %61, align 8
  tail call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.70"* %58, %"struct.sh::ShaderVariable"* %60, %"struct.sh::ShaderVariable"* %62) #16
  br label %63

63:                                               ; preds = %44, %40, %57, %49, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline17updateHasBooleansEv(%"class.gl::ProgramPipeline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  br label %7

3:                                                ; preds = %46
  %4 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 5
  %5 = load %"class.gl::Program"*, %"class.gl::Program"** %4, align 8
  %6 = icmp eq %"class.gl::Program"* %5, null
  br i1 %6, label %81, label %49

7:                                                ; preds = %1, %46
  %8 = phi i8* [ getelementptr inbounds (%"struct.std::__1::array.626", %"struct.std::__1::array.626"* @_ZN2glL23kAllGraphicsShaderTypesE, i64 0, i32 0, i64 0), %1 ], [ %47, %46 ]
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %10
  %12 = load %"class.gl::Program"*, %"class.gl::Program"** %11, align 8
  %13 = icmp eq %"class.gl::Program"* %12, null
  br i1 %13, label %46, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %12, i64 0, i32 4, i32 23, i32 0
  %16 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable17hasUniformBuffersEv(%"class.gl::ProgramExecutable"* %16) #16
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %20 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %19, i64 0, i32 43
  store i8 1, i8* %20, align 8
  br label %21

21:                                               ; preds = %18, %14
  %22 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable25hasGraphicsStorageBuffersEv(%"class.gl::ProgramExecutable"* %16) #16
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %25 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %24, i64 0, i32 45
  store i8 1, i8* %25, align 2
  br label %26

26:                                               ; preds = %23, %21
  %27 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable23hasAtomicCounterBuffersEv(%"class.gl::ProgramExecutable"* %16) #16
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %30 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 47
  store i8 1, i8* %30, align 4
  br label %31

31:                                               ; preds = %28, %26
  %32 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable18hasDefaultUniformsEv(%"class.gl::ProgramExecutable"* %16) #16
  br i1 %32, label %33, label %36

33:                                               ; preds = %31
  %34 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %35 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %34, i64 0, i32 49
  store i8 1, i8* %35, align 2
  br label %36

36:                                               ; preds = %33, %31
  %37 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable11hasTexturesEv(%"class.gl::ProgramExecutable"* %16) #16
  br i1 %37, label %38, label %41

38:                                               ; preds = %36
  %39 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %40 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %39, i64 0, i32 51
  store i8 1, i8* %40, align 8
  br label %41

41:                                               ; preds = %38, %36
  %42 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable17hasGraphicsImagesEv(%"class.gl::ProgramExecutable"* %16) #16
  br i1 %42, label %43, label %46

43:                                               ; preds = %41
  %44 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %45 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %44, i64 0, i32 53
  store i8 1, i8* %45, align 2
  br label %46

46:                                               ; preds = %41, %43, %7
  %47 = getelementptr inbounds i8, i8* %8, i64 1
  %48 = icmp eq i8* %47, getelementptr inbounds (%"struct.std::__1::array.626", %"struct.std::__1::array.626"* @_ZN2glL23kAllGraphicsShaderTypesE, i64 1, i32 0, i64 0)
  br i1 %48, label %3, label %7

49:                                               ; preds = %3
  %50 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %5, i64 0, i32 4, i32 23, i32 0
  %51 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %50, align 8
  %52 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable17hasUniformBuffersEv(%"class.gl::ProgramExecutable"* %51) #16
  br i1 %52, label %53, label %56

53:                                               ; preds = %49
  %54 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %55 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %54, i64 0, i32 44
  store i8 1, i8* %55, align 1
  br label %56

56:                                               ; preds = %53, %49
  %57 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable24hasComputeStorageBuffersEv(%"class.gl::ProgramExecutable"* %51) #16
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %60 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %59, i64 0, i32 46
  store i8 1, i8* %60, align 1
  br label %61

61:                                               ; preds = %58, %56
  %62 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable23hasAtomicCounterBuffersEv(%"class.gl::ProgramExecutable"* %51) #16
  br i1 %62, label %63, label %66

63:                                               ; preds = %61
  %64 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %65 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %64, i64 0, i32 48
  store i8 1, i8* %65, align 1
  br label %66

66:                                               ; preds = %63, %61
  %67 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable18hasDefaultUniformsEv(%"class.gl::ProgramExecutable"* %51) #16
  br i1 %67, label %68, label %71

68:                                               ; preds = %66
  %69 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %70 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %69, i64 0, i32 50
  store i8 1, i8* %70, align 1
  br label %71

71:                                               ; preds = %68, %66
  %72 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable11hasTexturesEv(%"class.gl::ProgramExecutable"* %51) #16
  br i1 %72, label %73, label %76

73:                                               ; preds = %71
  %74 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %75 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %74, i64 0, i32 52
  store i8 1, i8* %75, align 1
  br label %76

76:                                               ; preds = %73, %71
  %77 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable16hasComputeImagesEv(%"class.gl::ProgramExecutable"* %51) #16
  br i1 %77, label %78, label %81

78:                                               ; preds = %76
  %79 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %2, align 8
  %80 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %79, i64 0, i32 54
  store i8 1, i8* %80, align 1
  br label %81

81:                                               ; preds = %76, %78, %3
  ret void
}

declare zeroext i1 @_ZNK2gl17ProgramExecutable17hasUniformBuffersEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl17ProgramExecutable25hasGraphicsStorageBuffersEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl17ProgramExecutable23hasAtomicCounterBuffersEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl17ProgramExecutable18hasDefaultUniformsEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl17ProgramExecutable11hasTexturesEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl17ProgramExecutable17hasGraphicsImagesEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl17ProgramExecutable24hasComputeStorageBuffersEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl17ProgramExecutable16hasComputeImagesEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #2

declare void @_ZN2gl17ProgramExecutable5resetEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl15ProgramPipeline4linkEPKNS_7ContextE(%"class.gl::ProgramPipeline"*, %"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.628", align 8
  %4 = alloca %"class.gl::ProgramVaryingPacking", align 8
  %5 = alloca %"class.std::__1::vector.628", align 8
  %6 = alloca %"class.angle::BitSetT.141", align 1
  %7 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 6
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %94

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.628"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.std::__1::vector.628", %"class.std::__1::vector.628"* %3, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.628", %"class.std::__1::vector.628"* %3, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.628", %"class.std::__1::vector.628"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #16
  %15 = getelementptr inbounds %"class.gl::ProgramVaryingPacking", %"class.gl::ProgramVaryingPacking"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2176, i8* nonnull %15) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 2176, i1 false)
  call void @_ZN2gl21ProgramVaryingPackingC1Ev(%"class.gl::ProgramVaryingPacking"* nonnull %4) #16
  %16 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %17 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %16, align 8
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %17, i64 0, i32 55
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %75

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %17, i64 0, i32 1
  call void @_ZN2gl7InfoLog5resetEv(%"class.gl::InfoLog"* %22) #16
  %23 = call zeroext i1 @_ZNK2gl15ProgramPipeline12linkVaryingsERNS_7InfoLogE(%"class.gl::ProgramPipeline"* %0, %"class.gl::InfoLog"* dereferenceable(8) %22)
  br i1 %23, label %24, label %85

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 3
  %26 = call zeroext i1 @_ZN2gl30LinkValidateProgramGlobalNamesERNS_7InfoLogERKNS_18HasAttachedShadersE(%"class.gl::InfoLog"* dereferenceable(8) %22, %"class.gl::HasAttachedShaders"* dereferenceable(8) %25) #16
  br i1 %26, label %27, label %85

27:                                               ; preds = %24
  %28 = bitcast %"class.std::__1::vector.628"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #16
  %29 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %16, align 8
  call void @_ZN2gl28GetMergedVaryingsFromShadersERKNS_18HasAttachedShadersERKNS_17ProgramExecutableE(%"class.std::__1::vector.628"* nonnull sret %5, %"class.gl::HasAttachedShaders"* dereferenceable(8) %25, %"class.gl::ProgramExecutable"* dereferenceable(1728) %29) #16
  %30 = load %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"** %12, align 8
  %31 = icmp eq %"struct.gl::ProgramVaryingRef"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = bitcast %"struct.gl::ProgramVaryingRef"** %13 to i64*
  br label %38

34:                                               ; preds = %27
  %35 = ptrtoint %"struct.gl::ProgramVaryingRef"* %30 to i64
  %36 = bitcast %"struct.gl::ProgramVaryingRef"** %13 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"struct.gl::ProgramVaryingRef"* %30 to i8*
  call void @_ZdlPv(i8* %37) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #16
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = bitcast %"class.std::__1::vector.628"* %5 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.628"* %3 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.628", %"class.std::__1::vector.628"* %5, i64 0, i32 0, i32 1
  %44 = bitcast %"struct.gl::ProgramVaryingRef"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %39, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.628", %"class.std::__1::vector.628"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"struct.gl::ProgramVaryingRef"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"struct.gl::ProgramVaryingRef"** %14 to i64*
  store i64 %48, i64* %49, align 8
  %50 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %16, align 8
  %51 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %50, i64 0, i32 55
  %52 = load i8, i8* %51, align 4, !range !2
  %53 = icmp eq i8 %52, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #16
  %54 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %50, i64 0, i32 3
  %55 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %50, i64 0, i32 2
  %56 = select i1 %53, %"class.angle::BitSetT.141"* %55, %"class.angle::BitSetT.141"* %54
  %57 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %6, i64 0, i32 0
  %58 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %56, i64 0, i32 0
  %59 = load i8, i8* %58, align 1
  store i8 %59, i8* %57, align 1
  %60 = call zeroext i8 @_ZN2gl23GetLastPreFragmentStageEN5angle7BitSetTILm6EhNS_10ShaderTypeEEE(%"class.angle::BitSetT.141"* nonnull %6) #16
  %61 = icmp eq i8 %60, 6
  br i1 %61, label %85, label %62

62:                                               ; preds = %38
  %63 = zext i8 %60 to i64
  %64 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %63
  %65 = load %"class.gl::Program"*, %"class.gl::Program"** %64, align 8
  %66 = icmp eq %"class.gl::Program"* %65, null
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 0
  %69 = load %"class.gl::Program"*, %"class.gl::Program"** %68, align 8
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi %"class.gl::Program"* [ %65, %62 ], [ %69, %67 ]
  %72 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %71, i64 0, i32 4, i32 4
  %73 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %16, align 8
  %74 = call zeroext i1 @_ZN2gl17ProgramExecutable18linkMergedVaryingsEPKNS_7ContextERKNS_18HasAttachedShadersERKNSt3__16vectorINS_17ProgramVaryingRefENS7_9allocatorIS9_EEEERKNS8_INS7_12basic_stringIcNS7_11char_traitsIcEENSA_IcEEEENSA_ISJ_EEEEbPNS_21ProgramVaryingPackingE(%"class.gl::ProgramExecutable"* %73, %"class.gl::Context"* %1, %"class.gl::HasAttachedShaders"* dereferenceable(8) %25, %"class.std::__1::vector.628"* nonnull dereferenceable(24) %3, %"class.std::__1::vector.125"* dereferenceable(24) %72, i1 zeroext false, %"class.gl::ProgramVaryingPacking"* nonnull %4) #16
  br i1 %74, label %75, label %85

75:                                               ; preds = %10, %70
  %76 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %77 = load %"class.rx::ProgramPipelineImpl"*, %"class.rx::ProgramPipelineImpl"** %76, align 8
  %78 = bitcast %"class.rx::ProgramPipelineImpl"* %77 to i32 (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*, %"class.std::__1::vector.628"*, %"class.gl::ProgramVaryingPacking"*)***
  %79 = load i32 (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*, %"class.std::__1::vector.628"*, %"class.gl::ProgramVaryingPacking"*)**, i32 (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*, %"class.std::__1::vector.628"*, %"class.gl::ProgramVaryingPacking"*)*** %78, align 8
  %80 = getelementptr inbounds i32 (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*, %"class.std::__1::vector.628"*, %"class.gl::ProgramVaryingPacking"*)*, i32 (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*, %"class.std::__1::vector.628"*, %"class.gl::ProgramVaryingPacking"*)** %79, i64 3
  %81 = load i32 (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*, %"class.std::__1::vector.628"*, %"class.gl::ProgramVaryingPacking"*)*, i32 (%"class.rx::ProgramPipelineImpl"*, %"class.gl::Context"*, %"class.std::__1::vector.628"*, %"class.gl::ProgramVaryingPacking"*)** %80, align 8
  %82 = call i32 %81(%"class.rx::ProgramPipelineImpl"* %77, %"class.gl::Context"* %1, %"class.std::__1::vector.628"* nonnull dereferenceable(24) %3, %"class.gl::ProgramVaryingPacking"* nonnull dereferenceable(2176) %4) #16
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %85, label %84

84:                                               ; preds = %75
  store i8 1, i8* %7, align 8
  br label %85

85:                                               ; preds = %75, %38, %70, %24, %21, %84
  %86 = phi i32 [ 0, %84 ], [ 1, %75 ], [ 1, %21 ], [ 1, %24 ], [ 1, %70 ], [ 1, %38 ]
  call void @_ZN2gl21ProgramVaryingPackingD1Ev(%"class.gl::ProgramVaryingPacking"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 2176, i8* nonnull %15) #16
  %87 = load %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"** %12, align 8
  %88 = icmp eq %"struct.gl::ProgramVaryingRef"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = ptrtoint %"struct.gl::ProgramVaryingRef"* %87 to i64
  %91 = bitcast %"struct.gl::ProgramVaryingRef"** %13 to i64*
  store i64 %90, i64* %91, align 8
  %92 = bitcast %"struct.gl::ProgramVaryingRef"* %87 to i8*
  call void @_ZdlPv(i8* %92) #15
  br label %93

93:                                               ; preds = %85, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  br label %94

94:                                               ; preds = %2, %93
  %95 = phi i32 [ %86, %93 ], [ 0, %2 ]
  ret i32 %95
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN2gl21ProgramVaryingPackingC1Ev(%"class.gl::ProgramVaryingPacking"*) unnamed_addr #2

declare void @_ZN2gl7InfoLog5resetEv(%"class.gl::InfoLog"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl15ProgramPipeline12linkVaryingsERNS_7InfoLogE(%"class.gl::ProgramPipeline"* nocapture readonly, %"class.gl::InfoLog"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %4 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 55
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 3
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 2
  %10 = select i1 %7, %"class.angle::BitSetT.141"* %9, %"class.angle::BitSetT.141"* %8
  %11 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %10, i64 0, i32 0
  %12 = load i8, i8* %11, align 1, !noalias !16
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %2, %39
  %15 = phi i8 [ %43, %39 ], [ %12, %2 ]
  %16 = phi i8 [ %20, %39 ], [ 6, %2 ]
  %17 = zext i8 %15 to i32
  %18 = tail call i32 @llvm.cttz.i32(i32 %17, i1 true) #16, !range !3
  %19 = zext i32 %18 to i64
  %20 = trunc i32 %18 to i8
  %21 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %19
  %22 = load %"class.gl::Program"*, %"class.gl::Program"** %21, align 8
  %23 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %22, i64 0, i32 4, i32 23, i32 0
  %24 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %23, align 8
  %25 = icmp eq i8 %16, 6
  br i1 %25, label %39, label %26

26:                                               ; preds = %14
  %27 = zext i8 %16 to i64
  %28 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %27
  %29 = load %"class.gl::Program"*, %"class.gl::Program"** %28, align 8
  %30 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %29, i64 0, i32 4, i32 23, i32 0
  %31 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %30, align 8
  %32 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %31, i64 0, i32 57, i32 0, i32 0, i64 %27
  %33 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %24, i64 0, i32 58, i32 0, i32 0, i64 %19
  %34 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %31, i64 0, i32 59, i32 0, i32 0, i64 %27
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %24, i64 0, i32 59, i32 0, i32 0, i64 %19
  %37 = load i32, i32* %36, align 4
  %38 = tail call zeroext i1 @_ZN2gl35LinkValidateShaderInterfaceMatchingERKNSt3__16vectorIN2sh14ShaderVariableENS0_9allocatorIS3_EEEES8_NS_10ShaderTypeES9_iibRNS_7InfoLogE(%"class.std::__1::vector.70"* dereferenceable(24) %32, %"class.std::__1::vector.70"* dereferenceable(24) %33, i8 zeroext %16, i8 zeroext %20, i32 %35, i32 %37, i1 zeroext true, %"class.gl::InfoLog"* dereferenceable(8) %1) #16
  br i1 %38, label %39, label %65

39:                                               ; preds = %14, %26
  %40 = shl i32 1, %18
  %41 = trunc i32 %40 to i8
  %42 = xor i8 %41, -1
  %43 = and i8 %15, %42
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %14

45:                                               ; preds = %39, %2
  %46 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 0
  %47 = load %"class.gl::Program"*, %"class.gl::Program"** %46, align 8
  %48 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 4
  %49 = load %"class.gl::Program"*, %"class.gl::Program"** %48, align 8
  %50 = icmp ne %"class.gl::Program"* %47, null
  %51 = icmp ne %"class.gl::Program"* %49, null
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %65

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %47, i64 0, i32 4, i32 23, i32 0
  %55 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %54, align 8
  %56 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %49, i64 0, i32 4, i32 23, i32 0
  %57 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %56, align 8
  %58 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %55, i64 0, i32 57, i32 0, i32 0, i64 0
  %59 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %57, i64 0, i32 58, i32 0, i32 0, i64 4
  %60 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %55, i64 0, i32 59, i32 0, i32 0, i64 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %57, i64 0, i32 59, i32 0, i32 0, i64 4
  %63 = load i32, i32* %62, align 4
  %64 = tail call zeroext i1 @_ZN2gl27LinkValidateBuiltInVaryingsERKNSt3__16vectorIN2sh14ShaderVariableENS0_9allocatorIS3_EEEES8_NS_10ShaderTypeES9_iiRNS_7InfoLogE(%"class.std::__1::vector.70"* dereferenceable(24) %58, %"class.std::__1::vector.70"* dereferenceable(24) %59, i8 zeroext 0, i8 zeroext 4, i32 %61, i32 %63, %"class.gl::InfoLog"* dereferenceable(8) %1) #16
  br label %65

65:                                               ; preds = %26, %53, %45
  %66 = phi i1 [ %64, %53 ], [ false, %45 ], [ false, %26 ]
  ret i1 %66
}

declare zeroext i1 @_ZN2gl30LinkValidateProgramGlobalNamesERNS_7InfoLogERKNS_18HasAttachedShadersE(%"class.gl::InfoLog"* dereferenceable(8), %"class.gl::HasAttachedShaders"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2gl28GetMergedVaryingsFromShadersERKNS_18HasAttachedShadersERKNS_17ProgramExecutableE(%"class.std::__1::vector.628"* sret, %"class.gl::HasAttachedShaders"* dereferenceable(8), %"class.gl::ProgramExecutable"* dereferenceable(1728)) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl17ProgramExecutable18linkMergedVaryingsEPKNS_7ContextERKNS_18HasAttachedShadersERKNSt3__16vectorINS_17ProgramVaryingRefENS7_9allocatorIS9_EEEERKNS8_INS7_12basic_stringIcNS7_11char_traitsIcEENSA_IcEEEENSA_ISJ_EEEEbPNS_21ProgramVaryingPackingE(%"class.gl::ProgramExecutable"*, %"class.gl::Context"*, %"class.gl::HasAttachedShaders"* dereferenceable(8), %"class.std::__1::vector.628"* dereferenceable(24), %"class.std::__1::vector.125"* dereferenceable(24), i1 zeroext, %"class.gl::ProgramVaryingPacking"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl21ProgramVaryingPackingD1Ev(%"class.gl::ProgramVaryingPacking"*) unnamed_addr #6

declare zeroext i1 @_ZN2gl35LinkValidateShaderInterfaceMatchingERKNSt3__16vectorIN2sh14ShaderVariableENS0_9allocatorIS3_EEEES8_NS_10ShaderTypeES9_iibRNS_7InfoLogE(%"class.std::__1::vector.70"* dereferenceable(24), %"class.std::__1::vector.70"* dereferenceable(24), i8 zeroext, i8 zeroext, i32, i32, i1 zeroext, %"class.gl::InfoLog"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl27LinkValidateBuiltInVaryingsERKNSt3__16vectorIN2sh14ShaderVariableENS0_9allocatorIS3_EEEES8_NS_10ShaderTypeES9_iiRNS_7InfoLogE(%"class.std::__1::vector.70"* dereferenceable(24), %"class.std::__1::vector.70"* dereferenceable(24), i8 zeroext, i8 zeroext, i32, i32, %"class.gl::InfoLog"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline8validateEPKNS_7ContextE(%"class.gl::ProgramPipeline"* nocapture, %"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %5 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 5
  %9 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 3
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %11 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %11, i64 0, i32 1
  tail call void @_ZN2gl7InfoLog5resetEv(%"class.gl::InfoLog"* %12) #16
  %13 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %10, align 8
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %13, i64 0, i32 55
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %13, i64 0, i32 3
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %13, i64 0, i32 2
  %19 = select i1 %16, %"class.angle::BitSetT.141"* %18, %"class.angle::BitSetT.141"* %17
  %20 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %19, i64 0, i32 0
  %21 = load i8, i8* %20, align 1, !noalias !19
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %113, label %23

23:                                               ; preds = %2
  %24 = zext i8 %21 to i32
  %25 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true) #16, !range !3
  %26 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = bitcast %"class.gl::InfoLog::StreamHelper"* %4 to i8*
  %32 = bitcast %"class.gl::InfoLog"* %12 to i64*
  %33 = bitcast %"class.gl::InfoLog::StreamHelper"* %4 to i64*
  %34 = bitcast %"class.gl::InfoLog::StreamHelper"* %4 to i8**
  %35 = bitcast %"class.gl::InfoLog::StreamHelper"* %5 to i8*
  %36 = bitcast %"class.gl::InfoLog::StreamHelper"* %5 to i64*
  %37 = bitcast %"class.gl::InfoLog::StreamHelper"* %5 to i8**
  %38 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %39

39:                                               ; preds = %110, %23
  %40 = phi i32 [ %25, %23 ], [ %112, %110 ]
  %41 = phi i8 [ %21, %23 ], [ %108, %110 ]
  %42 = zext i32 %40 to i64
  %43 = trunc i32 %40 to i8
  %44 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %42
  %45 = load %"class.gl::Program"*, %"class.gl::Program"** %44, align 8
  %46 = icmp eq %"class.gl::Program"* %45, null
  br i1 %46, label %104, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %45, i64 0, i32 11, i32 0, i32 0, i32 0
  %49 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %48, align 8
  %50 = icmp eq %"struct.gl::Program::LinkingState"* %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %45, %"class.gl::Context"* %1) #16
  br label %52

52:                                               ; preds = %47, %51
  call void @_ZN2gl7Program8validateERKNS_4CapsE(%"class.gl::Program"* nonnull %45, %"struct.gl::Caps"* dereferenceable(872) %8) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #16
  %53 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %45, i64 0, i32 4, i32 23, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  %54 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %53, align 8
  call void @_ZNK2gl17ProgramExecutable16getInfoLogStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gl::ProgramExecutable"* %54) #16
  %55 = load i8, i8* %30, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i64, i64* %28, align 8
  %58 = zext i8 %55 to i64
  %59 = select i1 %56, i64 %57, i64 %58
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %74, label %61

61:                                               ; preds = %52
  store i8 0, i8* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %12) #16, !noalias !22
  %62 = load i64, i64* %32, align 8, !noalias !22
  store i64 %62, i64* %33, align 8, !alias.scope !22
  %63 = inttoptr i64 %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 16
  %65 = bitcast i8* %64 to %"class.std::__1::basic_ostream"*
  %66 = load i8, i8* %30, align 1, !noalias !22
  %67 = icmp slt i8 %66, 0
  %68 = load i8*, i8** %27, align 8, !noalias !22
  %69 = load i64, i64* %28, align 8, !noalias !22
  %70 = zext i8 %66 to i64
  %71 = select i1 %67, i8* %68, i8* %26
  %72 = select i1 %67, i64 %69, i64 %70
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %65, i8* %71, i64 %72) #16, !noalias !22
  br label %88

74:                                               ; preds = %52
  %75 = call zeroext i1 @_ZNK2gl7Program11isSeparableEv(%"class.gl::Program"* nonnull %45) #16
  br i1 %75, label %96, label %76

76:                                               ; preds = %74
  store i8 0, i8* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  %77 = call i8* @_ZN2gl19GetShaderTypeStringENS_10ShaderTypeE(i8 zeroext %43) #16
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %12) #16, !noalias !25
  %78 = load i64, i64* %32, align 8, !noalias !25
  store i64 %78, i64* %36, align 8, !alias.scope !25
  %79 = inttoptr i64 %78 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 16
  %81 = bitcast i8* %80 to %"class.std::__1::basic_ostream"*
  %82 = call i64 @strlen(i8* %77) #16, !noalias !25
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %81, i8* %77, i64 %82) #16, !noalias !25
  %84 = load i8*, i8** %37, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 16
  %86 = bitcast i8* %85 to %"class.std::__1::basic_ostream"*
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %86, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i64 25) #16
  br label %88

88:                                               ; preds = %61, %76
  %89 = phi i8** [ %37, %76 ], [ %34, %61 ]
  %90 = phi %"class.gl::InfoLog::StreamHelper"* [ %5, %76 ], [ %4, %61 ]
  %91 = phi i8* [ %35, %76 ], [ %31, %61 ]
  %92 = load i8*, i8** %89, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 16
  %94 = bitcast i8* %93 to %"class.std::__1::basic_ostream"*
  %95 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %94, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %90) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #16
  br label %96

96:                                               ; preds = %88, %74
  %97 = phi i32 [ 0, %74 ], [ 1, %88 ]
  %98 = load i8, i8* %30, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  %101 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %101) #15
  br label %102

102:                                              ; preds = %96, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #16
  %103 = icmp eq i32 %97, 0
  br i1 %103, label %104, label %185

104:                                              ; preds = %102, %39
  %105 = shl i32 1, %40
  %106 = trunc i32 %105 to i8
  %107 = xor i8 %106, -1
  %108 = and i8 %41, %107
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %104
  %111 = zext i8 %108 to i32
  %112 = call i32 @llvm.cttz.i32(i32 %111, i1 true) #16, !range !3
  br label %39

113:                                              ; preds = %104, %2
  %114 = call zeroext i1 @_ZNK2gl15ProgramPipeline12linkVaryingsERNS_7InfoLogE(%"class.gl::ProgramPipeline"* %0, %"class.gl::InfoLog"* dereferenceable(8) %12)
  br i1 %114, label %185, label %115

115:                                              ; preds = %113
  store i8 0, i8* %9, align 8
  %116 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %10, align 8
  %117 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %116, i64 0, i32 55
  %118 = load i8, i8* %117, align 4, !range !2
  %119 = icmp eq i8 %118, 0
  %120 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %116, i64 0, i32 3
  %121 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %116, i64 0, i32 2
  %122 = select i1 %119, %"class.angle::BitSetT.141"* %121, %"class.angle::BitSetT.141"* %120
  %123 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %122, i64 0, i32 0
  %124 = load i8, i8* %123, align 1, !noalias !28
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %185, label %126

126:                                              ; preds = %115
  %127 = zext i8 %124 to i32
  %128 = call i32 @llvm.cttz.i32(i32 %127, i1 true) #16, !range !3
  %129 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = bitcast %"class.gl::InfoLog::StreamHelper"* %7 to i8*
  %135 = bitcast %"class.gl::InfoLog"* %12 to i64*
  %136 = bitcast %"class.gl::InfoLog::StreamHelper"* %7 to i64*
  %137 = bitcast %"class.gl::InfoLog::StreamHelper"* %7 to i8**
  %138 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %139

139:                                              ; preds = %182, %126
  %140 = phi i8 [ %124, %126 ], [ %180, %182 ]
  %141 = phi i32 [ %128, %126 ], [ %184, %182 ]
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %142
  %144 = load %"class.gl::Program"*, %"class.gl::Program"** %143, align 8
  call void @_ZN2gl7Program8validateERKNS_4CapsE(%"class.gl::Program"* %144, %"struct.gl::Caps"* dereferenceable(872) %8) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #16
  %145 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %144, i64 0, i32 4, i32 23, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 -86, i64 24, i1 false)
  %146 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %145, align 8
  call void @_ZNK2gl17ProgramExecutable16getInfoLogStringEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.gl::ProgramExecutable"* %146) #16
  %147 = load i8, i8* %133, align 1
  %148 = icmp slt i8 %147, 0
  %149 = load i64, i64* %131, align 8
  %150 = zext i8 %147 to i64
  %151 = select i1 %148, i64 %149, i64 %150
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %139
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #16
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %12) #16, !noalias !31
  %154 = load i64, i64* %135, align 8, !noalias !31
  store i64 %154, i64* %136, align 8, !alias.scope !31
  %155 = inttoptr i64 %154 to i8*
  %156 = getelementptr inbounds i8, i8* %155, i64 16
  %157 = bitcast i8* %156 to %"class.std::__1::basic_ostream"*
  %158 = load i8, i8* %133, align 1, !noalias !31
  %159 = icmp slt i8 %158, 0
  %160 = load i8*, i8** %130, align 8, !noalias !31
  %161 = load i64, i64* %131, align 8, !noalias !31
  %162 = zext i8 %158 to i64
  %163 = select i1 %159, i8* %160, i8* %129
  %164 = select i1 %159, i64 %161, i64 %162
  %165 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %157, i8* %163, i64 %164) #16, !noalias !31
  %166 = load i8*, i8** %137, align 8
  %167 = getelementptr inbounds i8, i8* %166, i64 16
  %168 = bitcast i8* %167 to %"class.std::__1::basic_ostream"*
  %169 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %168, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #16
  %170 = load i8, i8* %133, align 1
  br label %171

171:                                              ; preds = %139, %153
  %172 = phi i8 [ %147, %139 ], [ %170, %153 ]
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  %175 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %175) #15
  br label %176

176:                                              ; preds = %171, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #16
  %177 = shl i32 1, %141
  %178 = trunc i32 %177 to i8
  %179 = xor i8 %178, -1
  %180 = and i8 %140, %179
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %176
  %183 = zext i8 %180 to i32
  %184 = call i32 @llvm.cttz.i32(i32 %183, i1 true) #16, !range !3
  br label %139

185:                                              ; preds = %102, %176, %115, %113
  ret void
}

declare void @_ZN2gl7Program8validateERKNS_4CapsE(%"class.gl::Program"*, %"struct.gl::Caps"* dereferenceable(872)) local_unnamed_addr #2

declare void @_ZNK2gl17ProgramExecutable16getInfoLogStringEv(%"class.std::__1::basic_string"* sret, %"class.gl::ProgramExecutable"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.gl::InfoLog::StreamHelper", %"class.gl::InfoLog::StreamHelper"* %0, i64 0, i32 0
  %5 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_stringstream"* %5, null
  br i1 %6, label %45, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_stringbuf"* %9) #16
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %13, label %19, label %22

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #15
  br label %22

22:                                               ; preds = %19, %7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  br i1 %18, label %45, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.gl::InfoLog::StreamHelper"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %"class.std::__1::basic_ostream"*
  %28 = bitcast i8* %26 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr i8, i8* %29, i64 -24
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %26, i64 %32
  %34 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = bitcast i8* %33 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %35) #16
  %36 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %2, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %37 = bitcast %"class.std::__1::locale::facet"* %36 to %"class.std::__1::ctype"*
  %38 = bitcast %"class.std::__1::locale::facet"* %36 to i8 (%"class.std::__1::ctype"*, i8)***
  %39 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %38, align 8
  %40 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %39, i64 7
  %41 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %40, align 8
  %42 = call signext i8 %41(%"class.std::__1::ctype"* %37, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %27, i8 signext %42) #16
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %27) #16
  br label %45

45:                                               ; preds = %22, %1, %23
  ret void
}

declare zeroext i1 @_ZNK2gl7Program11isSeparableEv(%"class.gl::Program"*) local_unnamed_addr #2

declare i8* @_ZN2gl19GetShaderTypeStringENS_10ShaderTypeE(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ProgramPipeline20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.gl::ProgramPipeline"* nocapture, i64, i32) unnamed_addr #0 align 2 {
  switch i32 %2, label %61 [
    i32 7, label %4
    i32 8, label %55
    i32 9, label %57
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %7 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %6, align 8
  %8 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 11, i32 0, i64 0
  %9 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 384, i1 false)
  %10 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %6, align 8
  %11 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 55
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 3
  %15 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 2
  %16 = select i1 %13, %"class.angle::BitSetT.141"* %15, %"class.angle::BitSetT.141"* %14
  %17 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %16, i64 0, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !34
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %61, label %20

20:                                               ; preds = %4
  %21 = zext i8 %18 to i32
  %22 = tail call i32 @llvm.cttz.i32(i32 %21, i1 true) #16, !range !3
  br label %23

23:                                               ; preds = %51, %20
  %24 = phi %"class.gl::ProgramExecutable"* [ %54, %51 ], [ %10, %20 ]
  %25 = phi i32 [ %53, %51 ], [ %22, %20 ]
  %26 = phi i8 [ %49, %51 ], [ %18, %20 ]
  %27 = zext i32 %25 to i64
  %28 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %27
  %29 = load %"class.gl::Program"*, %"class.gl::Program"** %28, align 8
  %30 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %29, i64 0, i32 4, i32 23, i32 0
  %31 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %30, align 8
  %32 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %31, i64 0, i32 10, i32 0, i32 0, i64 0, i32 0
  %33 = bitcast i64* %32 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 8
  %35 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %24, i64 0, i32 10, i32 0, i32 0, i64 0, i32 0
  %36 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> %34, <2 x i64>* %36, align 8
  %37 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %6, align 8
  %38 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %30, align 8
  %39 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %38, i64 0, i32 16, i32 0, i32 0, i64 0, i32 0
  %40 = bitcast i64* %39 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  %42 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %37, i64 0, i32 16, i32 0, i32 0, i64 0, i32 0
  %43 = bitcast i64* %42 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %43, align 8
  %44 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %6, align 8
  %45 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %29, i64 0, i32 4
  tail call void @_ZN2gl17ProgramExecutable20updateActiveSamplersERKNS_12ProgramStateE(%"class.gl::ProgramExecutable"* %44, %"class.gl::ProgramState"* dereferenceable(304) %45) #16
  %46 = shl i32 1, %25
  %47 = trunc i32 %46 to i8
  %48 = xor i8 %47, -1
  %49 = and i8 %26, %48
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %23
  %52 = zext i8 %49 to i32
  %53 = tail call i32 @llvm.cttz.i32(i32 %52, i1 true) #16, !range !3
  %54 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %6, align 8
  br label %23

55:                                               ; preds = %3
  %56 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 6
  store i8 0, i8* %56, align 8
  tail call void @_ZN2gl15ProgramPipeline16updateExecutableEv(%"class.gl::ProgramPipeline"* %0)
  br label %61

57:                                               ; preds = %3
  %58 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 5
  %59 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %58, align 8
  %60 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %59, i64 0, i32 70, i32 0
  store i8 0, i8* %60, align 1
  br label %61

61:                                               ; preds = %23, %4, %3, %57, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N2gl15ProgramPipeline20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.gl::ProgramPipeline"* nocapture, i64, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 -1, i32 6, i32 0, i32 2
  %5 = bitcast %"class.std::__1::__compressed_pair.339"* %4 to %"class.gl::ProgramPipeline"*
  tail call void @_ZN2gl15ProgramPipeline20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.gl::ProgramPipeline"* %5, i64 undef, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Shader"* @_ZNK2gl15ProgramPipeline17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramPipeline"* nocapture readonly, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = zext i8 %1 to i64
  %4 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %3
  %5 = load %"class.gl::Program"*, %"class.gl::Program"** %4, align 8
  %6 = icmp eq %"class.gl::Program"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call %"class.gl::Shader"* @_ZNK2gl7Program17getAttachedShaderENS_10ShaderTypeE(%"class.gl::Program"* nonnull %5, i8 zeroext %1) #16
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi %"class.gl::Shader"* [ %8, %7 ], [ null, %2 ]
  ret %"class.gl::Shader"* %10
}

declare %"class.gl::Shader"* @_ZNK2gl7Program17getAttachedShaderENS_10ShaderTypeE(%"class.gl::Program"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Shader"* @_ZThn48_NK2gl15ProgramPipeline17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramPipeline"* nocapture readonly, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %0, i64 -1, i32 6, i32 0, i32 1
  %4 = bitcast %"class.angle::ObserverBinding"** %3 to %"class.gl::ProgramPipeline"*
  %5 = zext i8 %1 to i64
  %6 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %4, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %5
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = icmp eq %"class.gl::Program"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = tail call %"class.gl::Shader"* @_ZNK2gl7Program17getAttachedShaderENS_10ShaderTypeE(%"class.gl::Program"* nonnull %7, i8 zeroext %1) #16
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi %"class.gl::Shader"* [ %10, %9 ], [ null, %2 ]
  ret %"class.gl::Shader"* %12
}

declare void @_ZN2gl7Program10deleteSelfEPKNS_7ContextE(%"class.gl::Program"*, %"class.gl::Context"*) local_unnamed_addr #2

declare void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"*, %"class.gl::Context"*) local_unnamed_addr #2

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEE9onDestroyEPKS2_(%"class.angle::RefCountObject"*, %"class.gl::Context"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED2Ev(%"class.angle::RefCountObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.angle::RefCountObject", %"class.angle::RefCountObject"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle14RefCountObjectIN2gl7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14RefCountObjectIN2gl7ContextENS_6ResultEED0Ev(%"class.angle::RefCountObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.angle::RefCountObject"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl15ProgramPipelineEmEEEvDpOT_(%"class.std::__1::vector.337"*, %"class.gl::ProgramPipeline"** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.angle::ObserverBinding"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.337"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.337"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #17
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.angle::ObserverBinding"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #17
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #15
  %34 = bitcast i8* %33 to %"class.angle::ObserverBinding"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.angle::ObserverBinding"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %37, i64 %10
  %39 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %37, i64 %36
  %40 = ptrtoint %"class.angle::ObserverBinding"* %39 to i64
  %41 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %1, align 8
  %42 = icmp eq %"class.gl::ProgramPipeline"* %41, null
  %43 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %41, i64 0, i32 2
  %44 = select i1 %42, %"class.angle::ObserverInterface"* null, %"class.angle::ObserverInterface"* %43
  %45 = load i64, i64* %2, align 8
  tail call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %38, %"class.angle::ObserverInterface"* %44, i64 %45) #16
  %46 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %38, i64 1
  %47 = ptrtoint %"class.angle::ObserverBinding"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %0, i64 0, i32 0, i32 0
  %49 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %48, align 8
  %50 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %4, align 8
  %51 = icmp eq %"class.angle::ObserverBinding"* %50, %49
  br i1 %51, label %52, label %54

52:                                               ; preds = %35
  %53 = ptrtoint %"class.angle::ObserverBinding"* %49 to i64
  br label %63

54:                                               ; preds = %35, %54
  %55 = phi %"class.angle::ObserverBinding"* [ %57, %54 ], [ %38, %35 ]
  %56 = phi %"class.angle::ObserverBinding"* [ %58, %54 ], [ %50, %35 ]
  %57 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %55, i64 -1
  %58 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %56, i64 -1
  tail call void @_ZN5angle15ObserverBindingC1ERKS0_(%"class.angle::ObserverBinding"* %57, %"class.angle::ObserverBinding"* dereferenceable(32) %58) #16
  %59 = icmp eq %"class.angle::ObserverBinding"* %58, %49
  br i1 %59, label %60, label %54

60:                                               ; preds = %54
  %61 = load i64, i64* %7, align 8
  %62 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %4, align 8
  br label %63

63:                                               ; preds = %52, %60
  %64 = phi %"class.angle::ObserverBinding"* [ %49, %52 ], [ %62, %60 ]
  %65 = phi %"class.angle::ObserverBinding"* [ %38, %52 ], [ %57, %60 ]
  %66 = phi i64 [ %53, %52 ], [ %61, %60 ]
  %67 = ptrtoint %"class.angle::ObserverBinding"* %65 to i64
  store i64 %67, i64* %7, align 8
  store i64 %47, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %68 = inttoptr i64 %66 to %"class.angle::ObserverBinding"*
  %69 = icmp eq %"class.angle::ObserverBinding"* %64, %68
  br i1 %69, label %74, label %70

70:                                               ; preds = %63, %70
  %71 = phi %"class.angle::ObserverBinding"* [ %72, %70 ], [ %64, %63 ]
  %72 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %71, i64 -1
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %72) #16
  %73 = icmp eq %"class.angle::ObserverBinding"* %72, %68
  br i1 %73, label %74, label %70

74:                                               ; preds = %70, %63
  %75 = icmp eq i64 %66, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %77) #15
  br label %78

78:                                               ; preds = %74, %76
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

declare void @_ZN5angle15ObserverBindingC1ERKS0_(%"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.180"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.180"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #16
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #16
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  %55 = bitcast %"class.std::__1::vector.180"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #16
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.180"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #17
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.180"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #17
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #15
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.180"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #16
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.173"*, %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %2 to i64
  %5 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 216
  %8 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.gl::TransformFeedbackVarying"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.173"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 216
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.gl::TransformFeedbackVarying"*
  br i1 %15, label %70, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.gl::TransformFeedbackVarying"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 216
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %1, i64 %22
  %25 = select i1 %23, %"struct.gl::TransformFeedbackVarying"* %24, %"struct.gl::TransformFeedbackVarying"* %2
  %26 = icmp eq %"struct.gl::TransformFeedbackVarying"* %25, %1
  br i1 %26, label %39, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.gl::TransformFeedbackVarying"* [ %37, %27 ], [ %16, %17 ]
  %29 = phi %"struct.gl::TransformFeedbackVarying"* [ %36, %27 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %28, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %29, i64 0, i32 0
  %32 = tail call dereferenceable(208) %"struct.sh::ShaderVariable"* @_ZN2sh14ShaderVariableaSERKS0_(%"struct.sh::ShaderVariable"* %30, %"struct.sh::ShaderVariable"* dereferenceable(208) %31) #16
  %33 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %29, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %28, i64 0, i32 1
  store i32 %34, i32* %35, align 8
  %36 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %29, i64 1
  %37 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %28, i64 1
  %38 = icmp eq %"struct.gl::TransformFeedbackVarying"* %36, %25
  br i1 %38, label %39, label %27

39:                                               ; preds = %27, %17
  %40 = phi %"struct.gl::TransformFeedbackVarying"* [ %16, %17 ], [ %37, %27 ]
  br i1 %23, label %41, label %61

41:                                               ; preds = %39
  %42 = load i64, i64* %19, align 8
  %43 = icmp eq %"struct.gl::TransformFeedbackVarying"* %25, %2
  br i1 %43, label %59, label %44

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %"struct.gl::TransformFeedbackVarying"*
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi %"struct.gl::TransformFeedbackVarying"* [ %55, %46 ], [ %45, %44 ]
  %48 = phi %"struct.gl::TransformFeedbackVarying"* [ %54, %46 ], [ %24, %44 ]
  %49 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %47, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %48, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"* %49, %"struct.sh::ShaderVariable"* dereferenceable(208) %50) #16
  %51 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %47, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %48, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  store i32 %53, i32* %51, align 8
  %54 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %48, i64 1
  %55 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %47, i64 1
  %56 = icmp eq %"struct.gl::TransformFeedbackVarying"* %54, %2
  br i1 %56, label %57, label %46

57:                                               ; preds = %46
  %58 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %55 to i64
  br label %59

59:                                               ; preds = %41, %57
  %60 = phi i64 [ %42, %41 ], [ %58, %57 ]
  store i64 %60, i64* %19, align 8
  br label %127

61:                                               ; preds = %39
  %62 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %18, align 8
  %63 = icmp eq %"struct.gl::TransformFeedbackVarying"* %62, %40
  br i1 %63, label %69, label %64

64:                                               ; preds = %61, %64
  %65 = phi %"struct.gl::TransformFeedbackVarying"* [ %66, %64 ], [ %62, %61 ]
  %66 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %65, i64 -1
  %67 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %66, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableD2Ev(%"struct.sh::ShaderVariable"* %67) #16
  %68 = icmp eq %"struct.gl::TransformFeedbackVarying"* %66, %40
  br i1 %68, label %69, label %64

69:                                               ; preds = %64, %61
  store %"struct.gl::TransformFeedbackVarying"* %40, %"struct.gl::TransformFeedbackVarying"** %18, align 8
  br label %127

70:                                               ; preds = %3
  %71 = icmp eq i64 %12, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %70
  %73 = inttoptr i64 %12 to i8*
  %74 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 1
  %75 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %74, align 8
  %76 = icmp eq %"struct.gl::TransformFeedbackVarying"* %75, %16
  br i1 %76, label %85, label %77

77:                                               ; preds = %72, %77
  %78 = phi %"struct.gl::TransformFeedbackVarying"* [ %79, %77 ], [ %75, %72 ]
  %79 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %78, i64 -1
  %80 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %79, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableD2Ev(%"struct.sh::ShaderVariable"* %80) #16
  %81 = icmp eq %"struct.gl::TransformFeedbackVarying"* %79, %16
  br i1 %81, label %82, label %77

82:                                               ; preds = %77
  %83 = bitcast %"class.std::__1::vector.173"* %0 to i8**
  %84 = load i8*, i8** %83, align 8
  br label %85

85:                                               ; preds = %82, %72
  %86 = phi i8* [ %84, %82 ], [ %73, %72 ]
  store %"struct.gl::TransformFeedbackVarying"* %16, %"struct.gl::TransformFeedbackVarying"** %74, align 8
  tail call void @_ZdlPv(i8* %86) #15
  %87 = bitcast %"class.std::__1::vector.173"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #16
  br label %88

88:                                               ; preds = %70, %85
  %89 = phi i64 [ %10, %70 ], [ 0, %85 ]
  %90 = icmp ugt i64 %7, 85401592933840516
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  %92 = bitcast %"class.std::__1::vector.173"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %92) #17
  unreachable

93:                                               ; preds = %88
  %94 = sdiv exact i64 %89, 216
  %95 = icmp ult i64 %94, 42700796466920258
  br i1 %95, label %96, label %100

96:                                               ; preds = %93
  %97 = shl nsw i64 %94, 1
  %98 = icmp ult i64 %97, %7
  %99 = select i1 %98, i64 %7, i64 %97
  br label %100

100:                                              ; preds = %96, %93
  %101 = phi i64 [ %99, %96 ], [ 85401592933840516, %93 ]
  %102 = mul i64 %101, 216
  %103 = tail call i8* @_Znwm(i64 %102) #15
  %104 = bitcast i8* %103 to %"struct.gl::TransformFeedbackVarying"*
  %105 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 1
  %106 = bitcast %"struct.gl::TransformFeedbackVarying"** %105 to i8**
  store i8* %103, i8** %106, align 8
  %107 = bitcast %"class.std::__1::vector.173"* %0 to i8**
  store i8* %103, i8** %107, align 8
  %108 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %104, i64 %101
  store %"struct.gl::TransformFeedbackVarying"* %108, %"struct.gl::TransformFeedbackVarying"** %8, align 8
  %109 = bitcast %"struct.gl::TransformFeedbackVarying"** %105 to i64*
  %110 = ptrtoint i8* %103 to i64
  %111 = icmp eq %"struct.gl::TransformFeedbackVarying"* %1, %2
  br i1 %111, label %125, label %112

112:                                              ; preds = %100, %112
  %113 = phi %"struct.gl::TransformFeedbackVarying"* [ %121, %112 ], [ %104, %100 ]
  %114 = phi %"struct.gl::TransformFeedbackVarying"* [ %120, %112 ], [ %1, %100 ]
  %115 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %113, i64 0, i32 0
  %116 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %114, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"* %115, %"struct.sh::ShaderVariable"* dereferenceable(208) %116) #16
  %117 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %113, i64 0, i32 1
  %118 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %114, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  store i32 %119, i32* %117, align 8
  %120 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %114, i64 1
  %121 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %113, i64 1
  %122 = icmp eq %"struct.gl::TransformFeedbackVarying"* %120, %2
  br i1 %122, label %123, label %112

123:                                              ; preds = %112
  %124 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %121 to i64
  br label %125

125:                                              ; preds = %100, %123
  %126 = phi i64 [ %110, %100 ], [ %124, %123 ]
  store i64 %126, i64* %109, align 8
  br label %127

127:                                              ; preds = %59, %69, %125
  ret void
}

declare dereferenceable(208) %"struct.sh::ShaderVariable"* @_ZN2sh14ShaderVariableaSERKS0_(%"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) local_unnamed_addr #2

declare void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2sh14ShaderVariableD2Ev(%"struct.sh::ShaderVariable"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.194"*, %"struct.gl::InterfaceBlock"* dereferenceable(112)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.gl::InterfaceBlock"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.194"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 112
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 164703072086692425
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.194"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.gl::InterfaceBlock"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 112
  %20 = icmp ult i64 %19, 82351536043346212
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 164703072086692425, %14 ]
  %28 = mul i64 %27, 112
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"struct.gl::InterfaceBlock"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.gl::InterfaceBlock"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 %32
  %36 = ptrtoint %"struct.gl::InterfaceBlock"* %35 to i64
  %37 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* %37, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %38) #16
  %39 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %31
  %47 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #16
  br label %54

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %40, i8* %51, i64 %53) #16
  br label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 %9, i32 2
  %56 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 2
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #16
  br label %69

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %55, i8* %66, i64 %68) #16
  br label %69

69:                                               ; preds = %61, %64
  %70 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 %9, i32 3
  %71 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 12, i1 false) #16
  %72 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 1
  %73 = ptrtoint %"struct.gl::InterfaceBlock"* %72 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %0, i64 0, i32 0, i32 0
  %75 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %74, align 8
  %76 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %3, align 8
  %77 = icmp eq %"struct.gl::InterfaceBlock"* %76, %75
  br i1 %77, label %78, label %80

78:                                               ; preds = %69
  %79 = ptrtoint %"struct.gl::InterfaceBlock"* %75 to i64
  br label %102

80:                                               ; preds = %69, %80
  %81 = phi %"struct.gl::InterfaceBlock"* [ %83, %80 ], [ %34, %69 ]
  %82 = phi %"struct.gl::InterfaceBlock"* [ %84, %80 ], [ %76, %69 ]
  %83 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %81, i64 -1
  %84 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %82, i64 -1
  %85 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %83, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %84, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* %85, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %86) #16
  %87 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %83, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %88 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %81, i64 -1, i32 1
  %89 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %82, i64 -1, i32 1
  %90 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  %91 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #16
  %92 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %81, i64 -1, i32 2
  %93 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %82, i64 -1, i32 2
  %94 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  %95 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #16
  %96 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %81, i64 -1, i32 3
  %97 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %82, i64 -1, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 12, i1 false) #16
  %98 = icmp eq %"struct.gl::InterfaceBlock"* %84, %75
  br i1 %98, label %99, label %80

99:                                               ; preds = %80
  %100 = load i64, i64* %6, align 8
  %101 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %3, align 8
  br label %102

102:                                              ; preds = %78, %99
  %103 = phi %"struct.gl::InterfaceBlock"* [ %75, %78 ], [ %101, %99 ]
  %104 = phi %"struct.gl::InterfaceBlock"* [ %34, %78 ], [ %83, %99 ]
  %105 = phi i64 [ %79, %78 ], [ %100, %99 ]
  %106 = ptrtoint %"struct.gl::InterfaceBlock"* %104 to i64
  store i64 %106, i64* %6, align 8
  store i64 %73, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %107 = inttoptr i64 %105 to %"struct.gl::InterfaceBlock"*
  %108 = icmp eq %"struct.gl::InterfaceBlock"* %103, %107
  br i1 %108, label %116, label %109

109:                                              ; preds = %102, %109
  %110 = phi %"struct.gl::InterfaceBlock"* [ %111, %109 ], [ %103, %102 ]
  %111 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %110, i64 -1
  %112 = bitcast %"struct.gl::InterfaceBlock"* %111 to void (%"struct.gl::InterfaceBlock"*)***
  %113 = load void (%"struct.gl::InterfaceBlock"*)**, void (%"struct.gl::InterfaceBlock"*)*** %112, align 8
  %114 = load void (%"struct.gl::InterfaceBlock"*)*, void (%"struct.gl::InterfaceBlock"*)** %113, align 8
  tail call void %114(%"struct.gl::InterfaceBlock"* %111) #16
  %115 = icmp eq %"struct.gl::InterfaceBlock"* %111, %107
  br i1 %115, label %116, label %109

116:                                              ; preds = %109, %102
  %117 = icmp eq i64 %105, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = inttoptr i64 %105 to i8*
  tail call void @_ZdlPv(i8* %119) #15
  br label %120

120:                                              ; preds = %116, %118
  ret void
}

declare void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14InterfaceBlockD2Ev(%"struct.gl::InterfaceBlock"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"* %21) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14InterfaceBlockD0Ev(%"struct.gl::InterfaceBlock"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"* %21) #16
  %22 = bitcast %"struct.gl::InterfaceBlock"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #15
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl12ImageBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.216"*, %"struct.gl::ImageBinding"* dereferenceable(32)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.gl::ImageBinding"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.216"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.216"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.gl::ImageBinding"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"struct.gl::ImageBinding"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.gl::ImageBinding"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %36, i64 %35
  %39 = ptrtoint %"struct.gl::ImageBinding"* %38 to i64
  tail call void @_ZN2gl12ImageBindingC1ERKS0_(%"struct.gl::ImageBinding"* %37, %"struct.gl::ImageBinding"* dereferenceable(32) %1) #16
  %40 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %37, i64 1
  %41 = ptrtoint %"struct.gl::ImageBinding"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %42, align 8
  %44 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %3, align 8
  %45 = icmp eq %"struct.gl::ImageBinding"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.gl::ImageBinding"* %37 to i64
  store i64 %47, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  br label %63

48:                                               ; preds = %34, %48
  %49 = phi %"struct.gl::ImageBinding"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.gl::ImageBinding"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %50, i64 -1
  tail call void @_ZN2gl12ImageBindingC1ERKS0_(%"struct.gl::ImageBinding"* %51, %"struct.gl::ImageBinding"* dereferenceable(32) %52) #16
  %53 = icmp eq %"struct.gl::ImageBinding"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %42, align 8
  %56 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %3, align 8
  %57 = ptrtoint %"struct.gl::ImageBinding"* %51 to i64
  store i64 %57, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %58 = icmp eq %"struct.gl::ImageBinding"* %56, %55
  br i1 %58, label %63, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.gl::ImageBinding"* [ %61, %59 ], [ %56, %54 ]
  %61 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %60, i64 -1
  tail call void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"* %61) #16
  %62 = icmp eq %"struct.gl::ImageBinding"* %61, %55
  br i1 %62, label %63, label %59

63:                                               ; preds = %59, %46, %54
  %64 = phi %"struct.gl::ImageBinding"* [ %43, %46 ], [ %55, %54 ], [ %55, %59 ]
  %65 = icmp eq %"struct.gl::ImageBinding"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %64, i64 0, i32 0
  tail call void @_ZdlPv(i8* %67) #15
  br label %68

68:                                               ; preds = %63, %66
  ret void
}

declare void @_ZN2gl12ImageBindingC1ERKS0_(%"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.70"*, %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.sh::ShaderVariable"* %2 to i64
  %5 = ptrtoint %"struct.sh::ShaderVariable"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 208
  %8 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.sh::ShaderVariable"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.70"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 208
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.sh::ShaderVariable"*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.sh::ShaderVariable"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 208
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %1, i64 %22
  %25 = select i1 %23, %"struct.sh::ShaderVariable"* %24, %"struct.sh::ShaderVariable"* %2
  %26 = icmp eq %"struct.sh::ShaderVariable"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.sh::ShaderVariable"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"struct.sh::ShaderVariable"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(208) %"struct.sh::ShaderVariable"* @_ZN2sh14ShaderVariableaSERKS0_(%"struct.sh::ShaderVariable"* %28, %"struct.sh::ShaderVariable"* dereferenceable(208) %29) #16
  %31 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %29, i64 1
  %32 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %28, i64 1
  %33 = icmp eq %"struct.sh::ShaderVariable"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"struct.sh::ShaderVariable"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"struct.sh::ShaderVariable"* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"struct.sh::ShaderVariable"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"struct.sh::ShaderVariable"* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %"struct.sh::ShaderVariable"* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %42, %"struct.sh::ShaderVariable"* dereferenceable(208) %43) #16
  %44 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %43, i64 1
  %45 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %42, i64 1
  %46 = icmp eq %"struct.sh::ShaderVariable"* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %"struct.sh::ShaderVariable"* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %110

51:                                               ; preds = %34
  %52 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %18, align 8
  %53 = icmp eq %"struct.sh::ShaderVariable"* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %"struct.sh::ShaderVariable"* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %55, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %56) #16
  %57 = icmp eq %"struct.sh::ShaderVariable"* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %"struct.sh::ShaderVariable"* %35, %"struct.sh::ShaderVariable"** %18, align 8
  br label %110

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %64 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %63, align 8
  %65 = icmp eq %"struct.sh::ShaderVariable"* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.sh::ShaderVariable"* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %67, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %68) #16
  %69 = icmp eq %"struct.sh::ShaderVariable"* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector.70"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %"struct.sh::ShaderVariable"* %16, %"struct.sh::ShaderVariable"** %63, align 8
  tail call void @_ZdlPv(i8* %74) #15
  %75 = bitcast %"class.std::__1::vector.70"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #16
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 88686269585142075
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector.70"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #17
  unreachable

81:                                               ; preds = %76
  %82 = sdiv exact i64 %77, 208
  %83 = icmp ult i64 %82, 44343134792571037
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %7
  %87 = select i1 %86, i64 %7, i64 %85
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi i64 [ %87, %84 ], [ 88686269585142075, %81 ]
  %90 = mul i64 %89, 208
  %91 = tail call i8* @_Znwm(i64 %90) #15
  %92 = bitcast i8* %91 to %"struct.sh::ShaderVariable"*
  %93 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %94 = bitcast %"struct.sh::ShaderVariable"** %93 to i8**
  store i8* %91, i8** %94, align 8
  %95 = bitcast %"class.std::__1::vector.70"* %0 to i8**
  store i8* %91, i8** %95, align 8
  %96 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %92, i64 %89
  store %"struct.sh::ShaderVariable"* %96, %"struct.sh::ShaderVariable"** %8, align 8
  %97 = bitcast %"struct.sh::ShaderVariable"** %93 to i64*
  %98 = ptrtoint i8* %91 to i64
  %99 = icmp eq %"struct.sh::ShaderVariable"* %1, %2
  br i1 %99, label %108, label %100

100:                                              ; preds = %88, %100
  %101 = phi %"struct.sh::ShaderVariable"* [ %104, %100 ], [ %92, %88 ]
  %102 = phi %"struct.sh::ShaderVariable"* [ %103, %100 ], [ %1, %88 ]
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %101, %"struct.sh::ShaderVariable"* dereferenceable(208) %102) #16
  %103 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %102, i64 1
  %104 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %101, i64 1
  %105 = icmp eq %"struct.sh::ShaderVariable"* %103, %2
  br i1 %105, label %106, label %100

106:                                              ; preds = %100
  %107 = ptrtoint %"struct.sh::ShaderVariable"* %104 to i64
  br label %108

108:                                              ; preds = %88, %106
  %109 = phi i64 [ %98, %88 ], [ %107, %106 ]
  store i64 %109, i64* %97, align 8
  br label %110

110:                                              ; preds = %49, %58, %108
  ret void
}

declare void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::InfoLog", %"class.gl::InfoLog"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %2, align 8
  %4 = icmp eq %"class.std::__1::basic_stringstream"* %3, null
  br i1 %4, label %5, label %65

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 280) #15
  %7 = getelementptr inbounds i8, i8* %6, i64 128
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 24
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %15 = bitcast i8* %6 to i64*
  store i64 %14, i64* %15, align 8
  %16 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %17 = bitcast i8* %6 to i8**
  %18 = inttoptr i64 %14 to i8*
  %19 = getelementptr i8, i8* %18, i64 -24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 %21
  %23 = bitcast i8* %22 to i64*
  store i64 %16, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %6, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = load i8*, i8** %17, align 8
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %6, i64 %29
  %31 = bitcast i8* %30 to %"class.std::__1::ios_base"*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %31, i8* %12) #16
  %32 = getelementptr inbounds i8, i8* %30, i64 136
  %33 = bitcast i8* %32 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 144
  %35 = bitcast i8* %34 to i32*
  store i32 -1, i32* %35, align 8
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast i8* %10 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %10, i64 %42
  %44 = bitcast i8* %43 to i64*
  store i64 %38, i64* %44, align 8
  %45 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %45, i64* %15, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %6, i64 %50
  %52 = bitcast i8* %51 to i64*
  store i64 %46, i64* %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %13) #16
  %53 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds i8, i8* %6, i64 88
  %55 = getelementptr inbounds i8, i8* %6, i64 120
  %56 = bitcast i8* %55 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #16
  store i32 24, i32* %56, align 8
  %57 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %2, align 8
  %58 = bitcast %"class.gl::InfoLog"* %0 to i8**
  store i8* %6, i8** %58, align 8
  %59 = icmp eq %"class.std::__1::basic_stringstream"* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %5
  %61 = bitcast %"class.std::__1::basic_stringstream"* %57 to void (%"class.std::__1::basic_stringstream"*)***
  %62 = load void (%"class.std::__1::basic_stringstream"*)**, void (%"class.std::__1::basic_stringstream"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.std::__1::basic_stringstream"*)*, void (%"class.std::__1::basic_stringstream"*)** %62, i64 1
  %64 = load void (%"class.std::__1::basic_stringstream"*)*, void (%"class.std::__1::basic_stringstream"*)** %63, align 8
  tail call void %64(%"class.std::__1::basic_stringstream"* nonnull %57) #16
  br label %65

65:                                               ; preds = %1, %60, %5
  ret void
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #16
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #16
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #16
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #16
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #16
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #16
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #16
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i32 0, i32 33}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK2gl12ProgramState21getSpecConstUsageBitsEv: argument 0"}
!12 = distinct !{!12, !"_ZNK2gl12ProgramState21getSpecConstUsageBitsEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN2gl7InfoLoglsINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEENS0_12StreamHelperERKT_: argument 0"}
!24 = distinct !{!24, !"_ZN2gl7InfoLoglsINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEENS0_12StreamHelperERKT_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN2gl7InfoLoglsIPKcEENS0_12StreamHelperERKT_: argument 0"}
!27 = distinct !{!27, !"_ZN2gl7InfoLoglsIPKcEENS0_12StreamHelperERKT_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!30 = distinct !{!30, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN2gl7InfoLoglsINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEENS0_12StreamHelperERKT_: argument 0"}
!33 = distinct !{!33, !"_ZN2gl7InfoLoglsINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEENS0_12StreamHelperERKT_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
