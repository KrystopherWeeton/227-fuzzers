; ModuleID = '../../third_party/boringssl/src/crypto/pem/pem_pkey.c'
source_filename = "../../third_party/boringssl/src/crypto/pem/pem_pkey.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.pkcs8_priv_key_info_st = type opaque
%struct.X509_sig_st = type opaque
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.dh_st = type { %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, i8*, i32, %struct.bignum_st*, i32, i32 }
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.bn_mont_ctx_st = type { %struct.bignum_st, %struct.bignum_st, [2 x i64] }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [16 x i8] c"ANY PRIVATE KEY\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"PRIVATE KEY\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"ENCRYPTED PRIVATE KEY\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"../../third_party/boringssl/src/crypto/pem/pem_pkey.c\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"RSA PRIVATE KEY\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"EC PRIVATE KEY\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"DSA PRIVATE KEY\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"DH PARAMETERS\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @PEM_read_bio_PrivateKey(%struct.bio_st*, %struct.evp_pkey_st**, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca [1024 x i8], align 16
  %10 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  store i8* null, i8** %5, align 8
  %11 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #4
  store i8* null, i8** %6, align 8
  %12 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #4
  store i8* null, i8** %7, align 8
  %13 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #4
  store i64 -6148914691236517206, i64* %8, align 8
  %14 = call i32 @PEM_bytes_read_bio(i8** nonnull %7, i64* nonnull %8, i8** nonnull %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), %struct.bio_st* %0, i32 (i8*, i32, i32, i8*)* %2, i8* %3) #4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %91, label %16

16:                                               ; preds = %4
  %17 = bitcast i8** %7 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i8** %6 to i64*
  store i64 %18, i64* %19, align 8
  %20 = load i8*, i8** %5, align 8
  %21 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)) #5
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %36

23:                                               ; preds = %16
  %24 = load i64, i64* %8, align 8
  %25 = call %struct.pkcs8_priv_key_info_st* @d2i_PKCS8_PRIV_KEY_INFO(%struct.pkcs8_priv_key_info_st** null, i8** nonnull %6, i64 %24) #4
  %26 = icmp eq %struct.pkcs8_priv_key_info_st* %25, null
  br i1 %26, label %86, label %27

27:                                               ; preds = %23
  %28 = call %struct.evp_pkey_st* @EVP_PKCS82PKEY(%struct.pkcs8_priv_key_info_st* nonnull %25) #4
  %29 = icmp eq %struct.evp_pkey_st** %1, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %1, align 8
  %32 = icmp eq %struct.evp_pkey_st* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %31) #4
  br label %34

34:                                               ; preds = %30, %33
  store %struct.evp_pkey_st* %28, %struct.evp_pkey_st** %1, align 8
  br label %35

35:                                               ; preds = %27, %34
  call void @PKCS8_PRIV_KEY_INFO_free(%struct.pkcs8_priv_key_info_st* nonnull %25) #4
  br label %83

36:                                               ; preds = %16
  %37 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #5
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %65

39:                                               ; preds = %36
  %40 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %40) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 1024, i1 false)
  %41 = load i64, i64* %8, align 8
  %42 = call %struct.X509_sig_st* @d2i_X509_SIG(%struct.X509_sig_st** null, i8** nonnull %6, i64 %41) #4
  %43 = icmp eq %struct.X509_sig_st* %42, null
  br i1 %43, label %62, label %44

44:                                               ; preds = %39
  %45 = icmp eq i32 (i8*, i32, i32, i8*)* %2, null
  %46 = select i1 %45, i32 (i8*, i32, i32, i8*)* @PEM_def_callback, i32 (i8*, i32, i32, i8*)* %2
  %47 = call i32 %46(i8* nonnull %40, i32 1024, i32 0, i8* %3) #4
  %48 = icmp slt i32 %47, 1
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = call %struct.pkcs8_priv_key_info_st* @PKCS8_decrypt(%struct.X509_sig_st* nonnull %42, i8* nonnull %40, i32 %47) #4
  call void @X509_SIG_free(%struct.X509_sig_st* nonnull %42) #4
  %51 = sext i32 %47 to i64
  call void @OPENSSL_cleanse(i8* nonnull %40, i64 %51) #4
  %52 = icmp eq %struct.pkcs8_priv_key_info_st* %50, null
  br i1 %52, label %62, label %53

53:                                               ; preds = %49
  %54 = call %struct.evp_pkey_st* @EVP_PKCS82PKEY(%struct.pkcs8_priv_key_info_st* nonnull %50) #4
  %55 = icmp eq %struct.evp_pkey_st** %1, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %53
  %57 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %1, align 8
  %58 = icmp eq %struct.evp_pkey_st* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %57) #4
  br label %60

60:                                               ; preds = %56, %59
  store %struct.evp_pkey_st* %54, %struct.evp_pkey_st** %1, align 8
  br label %61

61:                                               ; preds = %53, %60
  call void @PKCS8_PRIV_KEY_INFO_free(%struct.pkcs8_priv_key_info_st* nonnull %50) #4
  br label %62

62:                                               ; preds = %61, %39, %49
  %63 = phi %struct.evp_pkey_st* [ null, %49 ], [ null, %39 ], [ %54, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %40) #4
  br label %83

64:                                               ; preds = %44
  call void @ERR_put_error(i32 9, i32 0, i32 104, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 110) #4
  call void @X509_SIG_free(%struct.X509_sig_st* nonnull %42) #4
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %40) #4
  br label %87

65:                                               ; preds = %36
  %66 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #5
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %65
  %69 = load i64, i64* %8, align 8
  %70 = call %struct.evp_pkey_st* @d2i_PrivateKey(i32 6, %struct.evp_pkey_st** %1, i8** nonnull %6, i64 %69) #4
  br label %83

71:                                               ; preds = %65
  %72 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #5
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %71
  %75 = load i64, i64* %8, align 8
  %76 = call %struct.evp_pkey_st* @d2i_PrivateKey(i32 408, %struct.evp_pkey_st** %1, i8** nonnull %6, i64 %75) #4
  br label %83

77:                                               ; preds = %71
  %78 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #5
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %86

80:                                               ; preds = %77
  %81 = load i64, i64* %8, align 8
  %82 = call %struct.evp_pkey_st* @d2i_PrivateKey(i32 116, %struct.evp_pkey_st** %1, i8** nonnull %6, i64 %81) #4
  br label %83

83:                                               ; preds = %62, %35, %68, %80, %74
  %84 = phi %struct.evp_pkey_st* [ %70, %68 ], [ %76, %74 ], [ %82, %80 ], [ %28, %35 ], [ %63, %62 ]
  %85 = icmp eq %struct.evp_pkey_st* %84, null
  br i1 %85, label %86, label %87

86:                                               ; preds = %23, %77, %83
  call void @ERR_put_error(i32 9, i32 0, i32 12, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 138) #4
  br label %87

87:                                               ; preds = %64, %83, %86
  %88 = phi %struct.evp_pkey_st* [ null, %86 ], [ %84, %83 ], [ null, %64 ]
  %89 = load i8*, i8** %5, align 8
  call void @OPENSSL_free(i8* %89) #4
  %90 = load i8*, i8** %7, align 8
  call void @OPENSSL_free(i8* %90) #4
  br label %91

91:                                               ; preds = %4, %87
  %92 = phi %struct.evp_pkey_st* [ %88, %87 ], [ null, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  ret %struct.evp_pkey_st* %92
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @PEM_bytes_read_bio(i8**, i64*, i8**, i8*, %struct.bio_st*, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

declare %struct.pkcs8_priv_key_info_st* @d2i_PKCS8_PRIV_KEY_INFO(%struct.pkcs8_priv_key_info_st**, i8**, i64) local_unnamed_addr #2

declare %struct.evp_pkey_st* @EVP_PKCS82PKEY(%struct.pkcs8_priv_key_info_st*) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @PKCS8_PRIV_KEY_INFO_free(%struct.pkcs8_priv_key_info_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.X509_sig_st* @d2i_X509_SIG(%struct.X509_sig_st**, i8**, i64) local_unnamed_addr #2

declare i32 @PEM_def_callback(i8*, i32, i32, i8*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @X509_SIG_free(%struct.X509_sig_st*) local_unnamed_addr #2

declare %struct.pkcs8_priv_key_info_st* @PKCS8_decrypt(%struct.X509_sig_st*, i8*, i32) local_unnamed_addr #2

declare void @OPENSSL_cleanse(i8*, i64) local_unnamed_addr #2

declare %struct.evp_pkey_st* @d2i_PrivateKey(i32, %struct.evp_pkey_st**, i8**, i64) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PEM_write_bio_PrivateKey(%struct.bio_st*, %struct.evp_pkey_st*, %struct.evp_cipher_st*, i8*, i32, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #0 {
  %8 = tail call i32 @PEM_write_bio_PKCS8PrivateKey(%struct.bio_st* %0, %struct.evp_pkey_st* %1, %struct.evp_cipher_st* %2, i8* %3, i32 %4, i32 (i8*, i32, i32, i8*)* %5, i8* %6) #4
  ret i32 %8
}

declare i32 @PEM_write_bio_PKCS8PrivateKey(%struct.bio_st*, %struct.evp_pkey_st*, %struct.evp_cipher_st*, i8*, i32, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @PEM_read_PrivateKey(%struct._IO_FILE*, %struct.evp_pkey_st**, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #0 {
  %5 = tail call %struct.bio_st* @BIO_new_fp(%struct._IO_FILE* %0, i32 0) #4
  %6 = icmp eq %struct.bio_st* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 9, i32 0, i32 7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 159) #4
  br label %11

8:                                                ; preds = %4
  %9 = tail call %struct.evp_pkey_st* @PEM_read_bio_PrivateKey(%struct.bio_st* nonnull %5, %struct.evp_pkey_st** %1, i32 (i8*, i32, i32, i8*)* %2, i8* %3)
  %10 = tail call i32 @BIO_free(%struct.bio_st* nonnull %5) #4
  br label %11

11:                                               ; preds = %8, %7
  %12 = phi %struct.evp_pkey_st* [ null, %7 ], [ %9, %8 ]
  ret %struct.evp_pkey_st* %12
}

declare %struct.bio_st* @BIO_new_fp(%struct._IO_FILE*, i32) local_unnamed_addr #2

declare i32 @BIO_free(%struct.bio_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PEM_write_PrivateKey(%struct._IO_FILE*, %struct.evp_pkey_st*, %struct.evp_cipher_st*, i8*, i32, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #0 {
  %8 = tail call %struct.bio_st* @BIO_new_fp(%struct._IO_FILE* %0, i32 0) #4
  %9 = icmp eq %struct.bio_st* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  tail call void @ERR_put_error(i32 9, i32 0, i32 7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 173) #4
  br label %14

11:                                               ; preds = %7
  %12 = tail call i32 @PEM_write_bio_PKCS8PrivateKey(%struct.bio_st* nonnull %8, %struct.evp_pkey_st* %1, %struct.evp_cipher_st* %2, i8* %3, i32 %4, i32 (i8*, i32, i32, i8*)* %5, i8* %6) #4
  %13 = tail call i32 @BIO_free(%struct.bio_st* nonnull %8) #4
  br label %14

14:                                               ; preds = %11, %10
  %15 = phi i32 [ 0, %10 ], [ %12, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dh_st* @PEM_read_bio_DHparams(%struct.bio_st*, %struct.dh_st**, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  store i8* null, i8** %5, align 8
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  store i8* null, i8** %6, align 8
  %11 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #4
  store i8* null, i8** %7, align 8
  %12 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #4
  store i64 -6148914691236517206, i64* %8, align 8
  %13 = call i32 @PEM_bytes_read_bio(i8** nonnull %7, i64* nonnull %8, i8** nonnull %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), %struct.bio_st* %0, i32 (i8*, i32, i32, i8*)* %2, i8* %3) #4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %4
  %16 = bitcast i8** %7 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8** %6 to i64*
  store i64 %17, i64* %18, align 8
  %19 = load i64, i64* %8, align 8
  %20 = call %struct.dh_st* @d2i_DHparams(%struct.dh_st** %1, i8** nonnull %6, i64 %19) #4
  %21 = icmp eq %struct.dh_st* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %15
  call void @ERR_put_error(i32 9, i32 0, i32 12, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 200) #4
  br label %23

23:                                               ; preds = %22, %15
  %24 = load i8*, i8** %5, align 8
  call void @OPENSSL_free(i8* %24) #4
  %25 = load i8*, i8** %7, align 8
  call void @OPENSSL_free(i8* %25) #4
  br label %26

26:                                               ; preds = %4, %23
  %27 = phi %struct.dh_st* [ %20, %23 ], [ null, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  ret %struct.dh_st* %27
}

declare %struct.dh_st* @d2i_DHparams(%struct.dh_st**, i8**, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dh_st* @PEM_read_DHparams(%struct._IO_FILE*, %struct.dh_st**, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #0 {
  %5 = tail call %struct.bio_st* @BIO_new_fp(%struct._IO_FILE* %0, i32 0) #4
  %6 = icmp eq %struct.bio_st* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 9, i32 0, i32 7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 211) #4
  br label %11

8:                                                ; preds = %4
  %9 = tail call %struct.dh_st* @PEM_read_bio_DHparams(%struct.bio_st* nonnull %5, %struct.dh_st** %1, i32 (i8*, i32, i32, i8*)* %2, i8* %3)
  %10 = tail call i32 @BIO_free(%struct.bio_st* nonnull %5) #4
  br label %11

11:                                               ; preds = %8, %7
  %12 = phi %struct.dh_st* [ null, %7 ], [ %9, %8 ]
  ret %struct.dh_st* %12
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
