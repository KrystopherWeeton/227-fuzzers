; ModuleID = '../../net/ssl/ssl_cipher_suite_names.cc'
source_filename = "../../net/ssl/ssl_cipher_suite_names.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ssl_cipher_st = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"RSA\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"ECDHE_RSA\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"ECDHE_ECDSA\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"AES_128_GCM\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"AES_256_GCM\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"CHACHA20_POLY1305\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"AES_128_CBC\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"AES_256_CBC\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"3DES_EDE_CBC\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"HMAC-SHA1\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"HMAC-SHA256\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"HMAC-SHA384\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"SSL 2.0\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"SSL 3.0\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"TLS 1.0\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"TLS 1.1\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"TLS 1.2\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"TLS 1.3\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"QUIC\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@switch.table._ZN3net18SSLVersionToStringEPPKci = private unnamed_addr constant [7 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23SSLCipherSuiteToStringsEPPKcS2_S2_PbS3_t(i8** nocapture, i8** nocapture, i8** nocapture, i8* nocapture, i8* nocapture, i16 zeroext) local_unnamed_addr #0 {
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %2, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %1, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %0, align 8
  store i8 0, i8* %3, align 1
  store i8 0, i8* %4, align 1
  %7 = tail call %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext %5) #4
  %8 = icmp eq %struct.ssl_cipher_st* %7, null
  br i1 %8, label %35, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @SSL_CIPHER_get_kx_nid(%struct.ssl_cipher_st* nonnull %7) #4
  switch i32 %10, label %17 [
    i32 957, label %11
    i32 951, label %12
    i32 952, label %13
  ]

11:                                               ; preds = %9
  store i8* null, i8** %0, align 8
  store i8 1, i8* %4, align 1
  br label %17

12:                                               ; preds = %9
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %0, align 8
  br label %17

13:                                               ; preds = %9
  %14 = tail call i32 @SSL_CIPHER_get_auth_nid(%struct.ssl_cipher_st* nonnull %7) #4
  switch i32 %14, label %17 [
    i32 954, label %15
    i32 955, label %16
  ]

15:                                               ; preds = %13
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8** %0, align 8
  br label %17

16:                                               ; preds = %13
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8** %0, align 8
  br label %17

17:                                               ; preds = %15, %16, %13, %9, %12, %11
  %18 = tail call i32 @SSL_CIPHER_get_cipher_nid(%struct.ssl_cipher_st* nonnull %7) #4
  switch i32 %18, label %26 [
    i32 895, label %24
    i32 901, label %19
    i32 950, label %20
    i32 419, label %21
    i32 427, label %22
    i32 44, label %23
  ]

19:                                               ; preds = %17
  br label %24

20:                                               ; preds = %17
  br label %24

21:                                               ; preds = %17
  br label %24

22:                                               ; preds = %17
  br label %24

23:                                               ; preds = %17
  br label %24

24:                                               ; preds = %17, %19, %20, %21, %22, %23
  %25 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), %23 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), %22 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), %21 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), %20 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), %19 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), %17 ]
  store i8* %25, i8** %1, align 8
  br label %26

26:                                               ; preds = %24, %17
  %27 = tail call i32 @SSL_CIPHER_is_aead(%struct.ssl_cipher_st* nonnull %7) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  store i8 1, i8* %3, align 1
  store i8* null, i8** %2, align 8
  br label %35

30:                                               ; preds = %26
  %31 = tail call i32 @SSL_CIPHER_get_digest_nid(%struct.ssl_cipher_st* nonnull %7) #4
  switch i32 %31, label %35 [
    i32 64, label %32
    i32 672, label %33
    i32 673, label %34
  ]

32:                                               ; preds = %30
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8** %2, align 8
  br label %35

33:                                               ; preds = %30
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i8** %2, align 8
  br label %35

34:                                               ; preds = %30
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8** %2, align 8
  br label %35

35:                                               ; preds = %29, %30, %34, %33, %32, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext) local_unnamed_addr #2

declare i32 @SSL_CIPHER_get_kx_nid(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare i32 @SSL_CIPHER_get_auth_nid(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare i32 @SSL_CIPHER_get_cipher_nid(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare i32 @SSL_CIPHER_is_aead(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare i32 @SSL_CIPHER_get_digest_nid(%struct.ssl_cipher_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net18SSLVersionToStringEPPKci(i8** nocapture, i32) local_unnamed_addr #3 {
  %3 = add i32 %1, -1
  %4 = icmp ult i32 %3, 7
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [7 x i8*], [7 x i8*]* @switch.table._ZN3net18SSLVersionToStringEPPKci, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  br label %9

9:                                                ; preds = %2, %5
  %10 = phi i8* [ %8, %5 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), %2 ]
  store i8* %10, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net20ParseSSLCipherStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPt(%"class.std::__1::basic_string"* dereferenceable(24), i16* nocapture) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #4
  store i32 0, i32* %3, align 4
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp eq i64 %12, 6
  br i1 %13, label %14, label %32

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %18 = select i1 %8, i8* %16, i8* %17
  %19 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %18, i64 6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i64 2, i32 1) #4
  br i1 %19, label %20, label %32

20:                                               ; preds = %14
  %21 = load i8, i8* %6, align 1
  %22 = icmp slt i8 %21, 0
  %23 = load i8*, i8** %15, align 8
  %24 = select i1 %22, i8* %23, i8* %17
  %25 = load i64, i64* %9, align 8
  %26 = zext i8 %21 to i64
  %27 = select i1 %22, i64 %25, i64 %26
  %28 = call zeroext i1 @_ZN4base14HexStringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %24, i64 %27, i32* nonnull %3) #4
  br i1 %28, label %29, label %32

29:                                               ; preds = %20
  %30 = load i32, i32* %3, align 4
  %31 = trunc i32 %30 to i16
  store i16 %31, i16* %1, align 2
  br label %32

32:                                               ; preds = %20, %14, %2, %29
  %33 = phi i1 [ true, %29 ], [ false, %2 ], [ false, %14 ], [ false, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #4
  ret i1 %33
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14HexStringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net17ObsoleteSSLStatusEit(i32, i16 zeroext) local_unnamed_addr #0 {
  %3 = and i32 %0, 7340032
  %4 = icmp ult i32 %3, 5242880
  %5 = zext i1 %4 to i32
  %6 = trunc i32 %0 to i16
  %7 = tail call %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext %6) #4
  %8 = icmp eq %struct.ssl_cipher_st* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = tail call i32 @SSL_CIPHER_get_kx_nid(%struct.ssl_cipher_st* nonnull %7) #4
  %11 = icmp eq i32 %10, 951
  %12 = select i1 %11, i32 2, i32 0
  %13 = tail call i32 @SSL_CIPHER_is_aead(%struct.ssl_cipher_st* nonnull %7) #4
  %14 = icmp eq i32 %13, 0
  %15 = or i32 %12, 4
  %16 = select i1 %14, i32 %15, i32 %12
  br label %17

17:                                               ; preds = %2, %9
  %18 = phi i32 [ 6, %2 ], [ %16, %9 ]
  %19 = or i32 %18, %5
  switch i16 %1, label %20 [
    i16 515, label %21
    i16 -255, label %21
    i16 513, label %21
  ]

20:                                               ; preds = %17
  br label %21

21:                                               ; preds = %17, %17, %17, %20
  %22 = phi i32 [ 0, %20 ], [ 8, %17 ], [ 8, %17 ], [ 8, %17 ]
  %23 = or i32 %19, %22
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net30IsTLSCipherSuiteAllowedByHTTP2Et(i16 zeroext) local_unnamed_addr #0 {
  %2 = tail call %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext %0) #4
  %3 = icmp eq %struct.ssl_cipher_st* %2, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @SSL_CIPHER_get_kx_nid(%struct.ssl_cipher_st* nonnull %2) #4
  %6 = icmp eq i32 %5, 951
  %7 = select i1 %6, i32 2, i32 0
  %8 = tail call i32 @SSL_CIPHER_is_aead(%struct.ssl_cipher_st* nonnull %2) #4
  %9 = icmp eq i32 %8, 0
  %10 = or i32 %7, 4
  %11 = select i1 %9, i32 %10, i32 %7
  %12 = icmp eq i32 %11, 0
  br label %13

13:                                               ; preds = %1, %4
  %14 = phi i1 [ false, %1 ], [ %12, %4 ]
  ret i1 %14
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
