; ModuleID = '../../net/nqe/event_creator.cc'
source_filename = "../../net/nqe/event_creator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::nqe::internal::EventCreator" = type { %"class.net::NetLogWithSource", i32, [4 x i8], %"class.net::nqe::internal::NetworkQuality" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.3" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::nqe::internal::NetworkQuality" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.8" }
%"union.absl::variant_internal::DestructibleUnionImpl.8" = type { %"union.absl::variant_internal::DestructibleUnionImpl.9" }
%"union.absl::variant_internal::DestructibleUnionImpl.9" = type { %"union.absl::variant_internal::DestructibleUnionImpl.10" }
%"union.absl::variant_internal::DestructibleUnionImpl.10" = type { %"union.absl::variant_internal::DestructibleUnionImpl.11" }
%"union.absl::variant_internal::DestructibleUnionImpl.11" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [12 x i8] c"http_rtt_ms\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"transport_rtt_ms\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"downstream_throughput_kbps\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"effective_connection_type\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"s\00", align 1

@_ZN3net3nqe8internal12EventCreatorC1ENS_16NetLogWithSourceE = hidden unnamed_addr alias void (%"class.net::nqe::internal::EventCreator"*, %"class.net::NetLogWithSource"*), void (%"class.net::nqe::internal::EventCreator"*, %"class.net::NetLogWithSource"*)* @_ZN3net3nqe8internal12EventCreatorC2ENS_16NetLogWithSourceE
@_ZN3net3nqe8internal12EventCreatorD1Ev = hidden unnamed_addr alias void (%"class.net::nqe::internal::EventCreator"*), void (%"class.net::nqe::internal::EventCreator"*)* @_ZN3net3nqe8internal12EventCreatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal12EventCreatorC2ENS_16NetLogWithSourceE(%"class.net::nqe::internal::EventCreator"*, %"class.net::NetLogWithSource"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::nqe::internal::EventCreator"* %0 to i8*
  %4 = bitcast %"class.net::NetLogWithSource"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = getelementptr inbounds %"class.net::nqe::internal::EventCreator", %"class.net::nqe::internal::EventCreator"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.net::nqe::internal::EventCreator", %"class.net::nqe::internal::EventCreator"* %0, i64 0, i32 3
  tail call void @_ZN3net3nqe8internal14NetworkQualityC1Ev(%"class.net::nqe::internal::NetworkQuality"* %6) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3net3nqe8internal14NetworkQualityC1Ev(%"class.net::nqe::internal::NetworkQuality"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal12EventCreatorD2Ev(%"class.net::nqe::internal::EventCreator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::EventCreator", %"class.net::nqe::internal::EventCreator"* %0, i64 0, i32 3
  tail call void @_ZN3net3nqe8internal14NetworkQualityD1Ev(%"class.net::nqe::internal::NetworkQuality"* %2) #5
  %3 = getelementptr inbounds %"class.net::nqe::internal::EventCreator", %"class.net::nqe::internal::EventCreator"* %0, i64 0, i32 0
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %3) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net3nqe8internal14NetworkQualityD1Ev(%"class.net::nqe::internal::NetworkQuality"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal12EventCreator42MaybeAddNetworkQualityChangedEventToNetLogENS_23EffectiveConnectionTypeERKNS1_14NetworkQualityE(%"class.net::nqe::internal::EventCreator"*, i32, %"class.net::nqe::internal::NetworkQuality"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = alloca %"class.base::DictionaryValue", align 8
  %8 = alloca %"class.base::Value", align 8
  %9 = getelementptr inbounds %"class.net::nqe::internal::EventCreator", %"class.net::nqe::internal::EventCreator"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, %1
  %12 = getelementptr inbounds %"class.net::nqe::internal::EventCreator", %"class.net::nqe::internal::EventCreator"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.net::nqe::internal::NetworkQuality", %"class.net::nqe::internal::NetworkQuality"* %12, i64 0, i32 0
  %14 = tail call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* %13) #5
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.net::nqe::internal::NetworkQuality", %"class.net::nqe::internal::NetworkQuality"* %2, i64 0, i32 0
  %17 = tail call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* %16) #5
  %18 = trunc i64 %17 to i32
  %19 = icmp eq i32 %15, -1
  %20 = icmp eq i32 %18, -1
  %21 = xor i1 %19, %20
  br i1 %21, label %40, label %22

22:                                               ; preds = %3
  %23 = and i64 %17, %14
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %40, label %26

26:                                               ; preds = %22
  %27 = sub nsw i32 %15, %18
  %28 = icmp slt i32 %27, 0
  %29 = sub nsw i32 0, %27
  %30 = select i1 %28, i32 %29, i32 %27
  %31 = icmp slt i32 %30, 100
  br i1 %31, label %40, label %32

32:                                               ; preds = %26
  %33 = sitofp i32 %15 to float
  %34 = sitofp i32 %18 to float
  %35 = fmul float %34, 0x3FF3333340000000
  %36 = fcmp ule float %35, %33
  %37 = fmul float %33, 0x3FF3333340000000
  %38 = fcmp ule float %37, %34
  %39 = or i1 %38, %36
  br label %40

40:                                               ; preds = %3, %22, %26, %32
  %41 = phi i1 [ %39, %32 ], [ true, %3 ], [ false, %22 ], [ false, %26 ]
  %42 = getelementptr inbounds %"class.net::nqe::internal::EventCreator", %"class.net::nqe::internal::EventCreator"* %0, i64 0, i32 3, i32 1
  %43 = tail call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* %42) #5
  %44 = trunc i64 %43 to i32
  %45 = getelementptr inbounds %"class.net::nqe::internal::NetworkQuality", %"class.net::nqe::internal::NetworkQuality"* %2, i64 0, i32 1
  %46 = tail call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* %45) #5
  %47 = trunc i64 %46 to i32
  %48 = icmp eq i32 %44, -1
  %49 = icmp eq i32 %47, -1
  %50 = xor i1 %48, %49
  br i1 %50, label %69, label %51

51:                                               ; preds = %40
  %52 = and i64 %46, %43
  %53 = trunc i64 %52 to i32
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %69, label %55

55:                                               ; preds = %51
  %56 = sub nsw i32 %44, %47
  %57 = icmp slt i32 %56, 0
  %58 = sub nsw i32 0, %56
  %59 = select i1 %57, i32 %58, i32 %56
  %60 = icmp slt i32 %59, 100
  br i1 %60, label %69, label %61

61:                                               ; preds = %55
  %62 = sitofp i32 %44 to float
  %63 = sitofp i32 %47 to float
  %64 = fmul float %63, 0x3FF3333340000000
  %65 = fcmp ule float %64, %62
  %66 = fmul float %62, 0x3FF3333340000000
  %67 = fcmp ule float %66, %63
  %68 = or i1 %67, %65
  br label %69

69:                                               ; preds = %40, %51, %55, %61
  %70 = phi i1 [ %68, %61 ], [ true, %40 ], [ false, %51 ], [ false, %55 ]
  %71 = getelementptr inbounds %"class.net::nqe::internal::EventCreator", %"class.net::nqe::internal::EventCreator"* %0, i64 0, i32 3, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"class.net::nqe::internal::NetworkQuality", %"class.net::nqe::internal::NetworkQuality"* %2, i64 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %72, -1
  %76 = icmp eq i32 %74, -1
  %77 = xor i1 %75, %76
  br i1 %77, label %100, label %78

78:                                               ; preds = %69
  %79 = and i32 %74, %72
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %95, label %81

81:                                               ; preds = %78
  %82 = sub nsw i32 %72, %74
  %83 = icmp slt i32 %82, 0
  %84 = sub nsw i32 0, %82
  %85 = select i1 %83, i32 %84, i32 %82
  %86 = icmp slt i32 %85, 100
  br i1 %86, label %95, label %87

87:                                               ; preds = %81
  %88 = sitofp i32 %72 to float
  %89 = sitofp i32 %74 to float
  %90 = fmul float %89, 0x3FF3333340000000
  %91 = fcmp ule float %90, %88
  %92 = fmul float %88, 0x3FF3333340000000
  %93 = fcmp ule float %92, %89
  %94 = or i1 %93, %91
  br label %95

95:                                               ; preds = %78, %81, %87
  %96 = phi i1 [ %94, %87 ], [ false, %78 ], [ false, %81 ]
  %97 = or i1 %11, %41
  %98 = or i1 %97, %70
  %99 = or i1 %98, %96
  br i1 %99, label %100, label %138

100:                                              ; preds = %69, %95
  store i32 %1, i32* %9, align 8
  %101 = tail call dereferenceable(24) %"class.net::nqe::internal::NetworkQuality"* @_ZN3net3nqe8internal14NetworkQualityaSERKS2_(%"class.net::nqe::internal::NetworkQuality"* %12, %"class.net::nqe::internal::NetworkQuality"* dereferenceable(24) %2) #5
  %102 = getelementptr inbounds %"class.net::nqe::internal::EventCreator", %"class.net::nqe::internal::EventCreator"* %0, i64 0, i32 0, i32 1
  %103 = load %"class.net::NetLog"*, %"class.net::NetLog"** %102, align 8
  %104 = getelementptr inbounds %"class.net::nqe::internal::EventCreator", %"class.net::nqe::internal::EventCreator"* %0, i64 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %103, i64 0, i32 3
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %138, label %108, !prof !2

108:                                              ; preds = %100
  %109 = bitcast %"class.base::Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #5
  %110 = getelementptr inbounds %"class.net::nqe::internal::NetworkQuality", %"class.net::nqe::internal::NetworkQuality"* %2, i64 0, i32 0, i32 0
  %111 = load i64, i64* %110, align 8, !noalias !3
  %112 = getelementptr inbounds %"class.net::nqe::internal::NetworkQuality", %"class.net::nqe::internal::NetworkQuality"* %2, i64 0, i32 1, i32 0
  %113 = load i64, i64* %112, align 8, !noalias !3
  %114 = load i32, i32* %73, align 8, !noalias !3
  %115 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #5, !noalias !3
  %116 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #5, !noalias !3
  %117 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %111, i64* %117, align 8, !noalias !6
  %118 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  store i64 %113, i64* %118, align 8, !noalias !6
  %119 = bitcast %"class.base::DictionaryValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #5, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 32, i1 false) #5, !noalias !6
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %7) #5, !noalias !6
  %120 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %5) #5, !noalias !6
  %121 = trunc i64 %120 to i32
  %122 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11, i32 %121) #5, !noalias !6
  %123 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %6) #5, !noalias !6
  %124 = trunc i64 %123 to i32
  %125 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 16, i32 %124) #5, !noalias !6
  %126 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i64 26, i32 %114) #5, !noalias !6
  %127 = call i8* @_ZN3net33GetNameForEffectiveConnectionTypeENS_23EffectiveConnectionTypeE(i32 %1) #5, !noalias !6
  %128 = icmp eq i8* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %108
  %130 = call i64 @strlen(i8* nonnull %127) #5
  br label %134

131:                                              ; preds = %108
  %132 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #5, !noalias !6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #5
  %133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #5, !noalias !6
  br label %134

134:                                              ; preds = %131, %129
  %135 = phi i64 [ 0, %131 ], [ %130, %129 ]
  %136 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i64 25, i8* %127, i64 %135) #5, !noalias !6
  %137 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %7, i64 0, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %8, %"class.base::Value"* nonnull dereferenceable(32) %137) #5
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %137) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #5, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #5, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #5, !noalias !3
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %103, i32 427, %"struct.net::NetLogSource"* dereferenceable(16) %104, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %8) #5
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #5
  br label %138

138:                                              ; preds = %134, %100, %95
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.net::nqe::internal::NetworkQuality"* @_ZN3net3nqe8internal14NetworkQualityaSERKS2_(%"class.net::nqe::internal::NetworkQuality"*, %"class.net::nqe::internal::NetworkQuality"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"*, i8*, i64, i32) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #2

declare i8* @_ZN3net33GetNameForEffectiveConnectionTypeENS_23EffectiveConnectionTypeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZZN3net3nqe8internal12EventCreator42MaybeAddNetworkQualityChangedEventToNetLogENS_23EffectiveConnectionTypeERKNS1_14NetworkQualityEENK3$_0clEv: argument 0"}
!5 = distinct !{!5, !"_ZZN3net3nqe8internal12EventCreator42MaybeAddNetworkQualityChangedEventToNetLogENS_23EffectiveConnectionTypeERKNS1_14NetworkQualityEENK3$_0clEv"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZN3net3nqe8internal12_GLOBAL__N_133NetworkQualityChangedNetLogParamsEN4base9TimeDeltaES4_iNS_23EffectiveConnectionTypeE: argument 0"}
!8 = distinct !{!8, !"_ZN3net3nqe8internal12_GLOBAL__N_133NetworkQualityChangedNetLogParamsEN4base9TimeDeltaES4_iNS_23EffectiveConnectionTypeE"}
