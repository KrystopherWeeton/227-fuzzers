; ModuleID = '../../third_party/pdfium/fxbarcode/oned/BC_OnedUPCAWriter.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/oned/BC_OnedUPCAWriter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_OnedUPCAWriter = type { %class.CBC_OneDimEANWriter.base, %"class.std::__1::unique_ptr" }
%class.CBC_OneDimEANWriter.base = type { %class.CBC_OneDimWriter.base }
%class.CBC_OneDimWriter.base = type <{ %class.CBC_Writer.base, i8, i8, i8, i8, [6 x i8], %"class.fxcrt::UnownedPtr", float, i32, i32, i8, [3 x i8], i32, [4 x i8], i64, %"class.std::__1::vector", i32, i32, float }>
%class.CBC_Writer.base = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16 }>
%"class.fxcrt::UnownedPtr" = type { %class.CFX_Font* }
%class.CFX_Font = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.CFX_PathData*, %class.CFX_PathData*, %"class.std::__1::__compressed_pair" }
%class.CFX_PathData = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_PathData* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.CBC_OnedEAN13Writer* }
%class.CBC_OnedEAN13Writer = type { %class.CBC_OneDimEANWriter.base, i32 }
%class.CBC_OneDimEANWriter = type { %class.CBC_OneDimWriter.base, [4 x i8] }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.4", i64 }
%"class.fxcrt::UnownedPtr.4" = type { i32* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.9" }
%"class.fxcrt::RetainPtr.9" = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.fxcrt::StringDataTemplate.13"* }
%"class.fxcrt::StringDataTemplate.13" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::StringViewTemplate.38" = type { %"class.pdfium::span.39" }
%"class.pdfium::span.39" = type { %"class.fxcrt::UnownedPtr.40", i64 }
%"class.fxcrt::UnownedPtr.40" = type { i8* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr.17", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.23" }
%"class.fxcrt::RetainPtr.17" = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %class.TextCharPos*, %class.TextCharPos*, %"class.std::__1::__compressed_pair.31" }
%class.TextCharPos = type { %class.CFX_PTemplate, i32, i32, i32, i32, i8, i8, [4 x float] }
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.TextCharPos* }
%class.CFX_FloatRect = type { float, float, float, float }
%struct.CFX_TextRenderOptions = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CBC_OneDimWriter = type <{ %class.CBC_Writer.base, i8, i8, i8, i8, [6 x i8], %"class.fxcrt::UnownedPtr", float, i32, i32, i8, [3 x i8], i32, [4 x i8], i64, %"class.std::__1::vector", i32, i32, float, [4 x i8] }>
%class.CBC_Writer = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16, [2 x i8] }>

@_ZTV18CBC_OnedUPCAWriter = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_OnedUPCAWriter*)* @_ZN18CBC_OnedUPCAWriterD2Ev to i8*), i8* bitcast (void (%class.CBC_OnedUPCAWriter*)* @_ZN18CBC_OnedUPCAWriterD0Ev to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetCharEncodingEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetModuleHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer14SetModuleWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer9SetHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer8SetWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer15SetTextLocationE11BC_TEXT_LOC to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer18SetWideNarrowRatioEa to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer12SetStartCharEc to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer10SetEndCharEc to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer23SetErrorCorrectionLevelEi to i8*), i8* bitcast (i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, i8*, i32)* @_ZN16CBC_OneDimWriter12RenderResultEN5fxcrt18StringViewTemplateIwEEPhi to i8*), i8* bitcast (i1 (%class.CBC_OnedUPCAWriter*, %"class.fxcrt::StringViewTemplate"*)* @_ZN18CBC_OnedUPCAWriter20CheckContentValidityEN5fxcrt18StringViewTemplateIwEE to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CBC_OnedUPCAWriter*, %"class.fxcrt::StringViewTemplate"*)* @_ZN18CBC_OnedUPCAWriter14FilterContentsEN5fxcrt18StringViewTemplateIwEE to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i1)* @_ZN16CBC_OneDimWriter16SetPrintChecksumEb to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter13SetDataLengthEi to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i1)* @_ZN16CBC_OneDimWriter15SetCalcChecksumEb to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, float)* @_ZN16CBC_OneDimWriter11SetFontSizeEf to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter12SetFontStyleEi to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter12SetFontColorEj to i8*), i8* bitcast (i8* (%class.CBC_OnedUPCAWriter*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)* @_ZN18CBC_OnedUPCAWriter14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i to i8*), i8* bitcast (i8* (%class.CBC_OnedUPCAWriter*, %"class.fxcrt::ByteString"*, i32*)* @_ZN18CBC_OnedUPCAWriter10EncodeImplERKN5fxcrt10ByteStringERi to i8*), i8* bitcast (i1 (%class.CBC_OnedUPCAWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)* @_ZN18CBC_OnedUPCAWriter9ShowCharsEN5fxcrt18StringViewTemplateIwEEP16CFX_RenderDeviceRK10CFX_Matrixii to i8*), i8* bitcast (void (%class.CBC_OnedUPCAWriter*)* @_ZN18CBC_OnedUPCAWriter13InitEANWriterEv to i8*), i8* bitcast (i32 (%class.CBC_OnedUPCAWriter*, %"class.fxcrt::ByteString"*)* @_ZN18CBC_OnedUPCAWriter12CalcChecksumERKN5fxcrt10ByteStringE to i8*)] }, align 8

@_ZN18CBC_OnedUPCAWriterC1Ev = hidden unnamed_addr alias void (%class.CBC_OnedUPCAWriter*), void (%class.CBC_OnedUPCAWriter*)* @_ZN18CBC_OnedUPCAWriterC2Ev
@_ZN18CBC_OnedUPCAWriterD1Ev = hidden unnamed_addr alias void (%class.CBC_OnedUPCAWriter*), void (%class.CBC_OnedUPCAWriter*)* @_ZN18CBC_OnedUPCAWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_OnedUPCAWriterC2Ev(%class.CBC_OnedUPCAWriter*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_OnedUPCAWriter* %0 to %class.CBC_OneDimEANWriter*
  tail call void @_ZN19CBC_OneDimEANWriterC2Ev(%class.CBC_OneDimEANWriter* %2) #9
  %3 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV18CBC_OnedUPCAWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 3
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 4
  store i8 1, i8* %7, align 1
  ret void
}

declare void @_ZN19CBC_OneDimEANWriterC2Ev(%class.CBC_OneDimEANWriter*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_OnedUPCAWriterD2Ev(%class.CBC_OnedUPCAWriter*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV18CBC_OnedUPCAWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_OnedEAN13Writer*, %class.CBC_OnedEAN13Writer** %3, align 8
  store %class.CBC_OnedEAN13Writer* null, %class.CBC_OnedEAN13Writer** %3, align 8
  %5 = icmp eq %class.CBC_OnedEAN13Writer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.CBC_OnedEAN13Writer* %4 to void (%class.CBC_OnedEAN13Writer*)***
  %8 = load void (%class.CBC_OnedEAN13Writer*)**, void (%class.CBC_OnedEAN13Writer*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CBC_OnedEAN13Writer*)*, void (%class.CBC_OnedEAN13Writer*)** %8, i64 1
  %10 = load void (%class.CBC_OnedEAN13Writer*)*, void (%class.CBC_OnedEAN13Writer*)** %9, align 8
  tail call void %10(%class.CBC_OnedEAN13Writer* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %class.CBC_OnedUPCAWriter* %0 to %class.CBC_OneDimEANWriter*
  tail call void @_ZN19CBC_OneDimEANWriterD2Ev(%class.CBC_OneDimEANWriter* %12) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN19CBC_OneDimEANWriterD2Ev(%class.CBC_OneDimEANWriter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_OnedUPCAWriterD0Ev(%class.CBC_OnedUPCAWriter*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV18CBC_OnedUPCAWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_OnedEAN13Writer*, %class.CBC_OnedEAN13Writer** %3, align 8
  store %class.CBC_OnedEAN13Writer* null, %class.CBC_OnedEAN13Writer** %3, align 8
  %5 = icmp eq %class.CBC_OnedEAN13Writer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.CBC_OnedEAN13Writer* %4 to void (%class.CBC_OnedEAN13Writer*)***
  %8 = load void (%class.CBC_OnedEAN13Writer*)**, void (%class.CBC_OnedEAN13Writer*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CBC_OnedEAN13Writer*)*, void (%class.CBC_OnedEAN13Writer*)** %8, i64 1
  %10 = load void (%class.CBC_OnedEAN13Writer*)*, void (%class.CBC_OnedEAN13Writer*)** %9, align 8
  tail call void %10(%class.CBC_OnedEAN13Writer* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %class.CBC_OnedUPCAWriter* %0 to %class.CBC_OneDimEANWriter*
  tail call void @_ZN19CBC_OneDimEANWriterD2Ev(%class.CBC_OneDimEANWriter* %12) #9
  %13 = bitcast %class.CBC_OnedUPCAWriter* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CBC_OnedUPCAWriter20CheckContentValidityEN5fxcrt18StringViewTemplateIwEE(%class.CBC_OnedUPCAWriter* nocapture readnone, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  %5 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = call zeroext i1 @_ZN16CBC_OneDimWriter19HasValidContentSizeEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %3) #9
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i32, i32* %9, i64 %11
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %24, label %16

14:                                               ; preds = %20
  %15 = icmp eq i32* %23, %12
  br i1 %15, label %24, label %16

16:                                               ; preds = %7, %14
  %17 = phi i32* [ %23, %14 ], [ %9, %7 ]
  %18 = load i32, i32* %17, align 4
  %19 = icmp ugt i32 %18, 127
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = call i32 @iswdigit(i32 %18) #9
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds i32, i32* %17, i64 1
  br i1 %22, label %24, label %14

24:                                               ; preds = %20, %16, %14, %7, %2
  %25 = phi i1 [ false, %2 ], [ true, %7 ], [ true, %14 ], [ false, %16 ], [ false, %20 ]
  ret i1 %25
}

declare zeroext i1 @_ZN16CBC_OneDimWriter19HasValidContentSizeEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_OnedUPCAWriter14FilterContentsEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* noalias sret, %class.CBC_OnedUPCAWriter* nocapture readnone, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %4, align 8
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #9
  %5 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* %0, i64 %6) #9
  %7 = load i64, i64* %5, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %9, %26
  %12 = phi i64 [ 0, %9 ], [ %28, %26 ]
  %13 = load i32*, i32** %10, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 %12
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 175
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = add nuw i64 %12, 1
  br label %26

19:                                               ; preds = %11
  %20 = icmp ugt i32 %15, 127
  br i1 %20, label %26, label %21

21:                                               ; preds = %19
  %22 = tail call i32 @iswdigit(i32 %15) #9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %0, i32 signext %15) #9
  br label %26

26:                                               ; preds = %21, %19, %24, %17
  %27 = phi i64 [ %18, %17 ], [ %12, %24 ], [ %12, %21 ], [ %12, %19 ]
  %28 = add i64 %27, 1
  %29 = load i64, i64* %5, align 8
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %11, label %31

31:                                               ; preds = %26, %3
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

declare void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_OnedUPCAWriter13InitEANWriterEv(%class.CBC_OnedUPCAWriter* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 120) #10
  %3 = bitcast i8* %2 to %class.CBC_OnedEAN13Writer*
  tail call void @_ZN19CBC_OnedEAN13WriterC1Ev(%class.CBC_OnedEAN13Writer* nonnull %3) #9
  %4 = ptrtoint i8* %2 to i64
  %5 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.CBC_OnedEAN13Writer*, %class.CBC_OnedEAN13Writer** %6, align 8
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %4, i64* %8, align 8
  %9 = icmp eq %class.CBC_OnedEAN13Writer* %7, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %class.CBC_OnedEAN13Writer* %7 to void (%class.CBC_OnedEAN13Writer*)***
  %12 = load void (%class.CBC_OnedEAN13Writer*)**, void (%class.CBC_OnedEAN13Writer*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.CBC_OnedEAN13Writer*)*, void (%class.CBC_OnedEAN13Writer*)** %12, i64 1
  %14 = load void (%class.CBC_OnedEAN13Writer*)*, void (%class.CBC_OnedEAN13Writer*)** %13, align 8
  tail call void %14(%class.CBC_OnedEAN13Writer* nonnull %7) #9
  br label %15

15:                                               ; preds = %10, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN18CBC_OnedUPCAWriter12CalcChecksumERKN5fxcrt10ByteStringE(%class.CBC_OnedUPCAWriter* nocapture readnone, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.fxcrt::StringDataTemplate.13"*, %"class.fxcrt::StringDataTemplate.13"** %3, align 8
  %5 = icmp eq %"class.fxcrt::StringDataTemplate.13"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.13", %"class.fxcrt::StringDataTemplate.13"* %4, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.13", %"class.fxcrt::StringDataTemplate.13"* %4, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %22

13:                                               ; preds = %41
  %14 = mul i32 %46, 3
  br label %15

15:                                               ; preds = %2, %13, %6
  %16 = phi i32 [ 0, %6 ], [ %44, %13 ], [ 0, %2 ]
  %17 = phi i32 [ 0, %6 ], [ %14, %13 ], [ 0, %2 ]
  %18 = add nsw i32 %17, %16
  %19 = srem i32 %18, 10
  %20 = sub nsw i32 10, %19
  %21 = srem i32 %20, 10
  ret i32 %21

22:                                               ; preds = %10, %41
  %23 = phi i32 [ %46, %41 ], [ 0, %10 ]
  %24 = phi i64 [ %29, %41 ], [ %8, %10 ]
  %25 = phi i64 [ %47, %41 ], [ 1, %10 ]
  %26 = phi i32 [ %44, %41 ], [ 0, %10 ]
  %27 = and i64 %25, 1
  %28 = icmp eq i64 %27, 0
  %29 = add i64 %24, -1
  %30 = icmp ugt i64 %12, %29
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %22
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !4
  unreachable

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.13", %"class.fxcrt::StringDataTemplate.13"* %4, i64 0, i32 3, i64 %29
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = sext i8 %34 to i32
  %38 = add nsw i32 %37, -48
  %39 = icmp ult i32 %38, 10
  %40 = select i1 %39, i32 %38, i32 0
  br label %41

41:                                               ; preds = %32, %36
  %42 = phi i32 [ %40, %36 ], [ 0, %32 ]
  %43 = select i1 %28, i32 %42, i32 0
  %44 = add nsw i32 %43, %26
  %45 = select i1 %28, i32 0, i32 %42
  %46 = add nsw i32 %45, %23
  %47 = add i64 %25, 1
  %48 = icmp eq i64 %29, 0
  br i1 %48, label %13, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN18CBC_OnedUPCAWriter14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i(%class.CBC_OnedUPCAWriter* nocapture, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8), i32, i32* dereferenceable(4), i32* dereferenceable(4), i32) unnamed_addr #0 align 2 {
  %7 = alloca i8, align 1
  %8 = alloca %"class.fxcrt::StringViewTemplate.38", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate.38", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = icmp eq i32 %2, 6
  br i1 %11, label %12, label %35

12:                                               ; preds = %6
  %13 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.13"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.13"*), %"class.fxcrt::StringDataTemplate.13"** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7)
  %15 = bitcast %"class.fxcrt::StringViewTemplate.38"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15)
  %16 = bitcast %"class.fxcrt::StringViewTemplate.38"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  store i8 48, i8* %7, align 1, !noalias !5
  %17 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.38", %"class.fxcrt::StringViewTemplate.38"* %8, i64 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %17, align 8, !noalias !5
  %18 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.38", %"class.fxcrt::StringViewTemplate.38"* %8, i64 0, i32 0, i32 1
  store i64 1, i64* %18, align 8, !noalias !5
  %19 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.fxcrt::StringDataTemplate.13"*, %"class.fxcrt::StringDataTemplate.13"** %19, align 8, !noalias !8
  %21 = icmp eq %"class.fxcrt::StringDataTemplate.13"* %20, null
  %22 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.13", %"class.fxcrt::StringDataTemplate.13"* %20, i64 0, i32 3, i64 0
  %23 = select i1 %21, i8* null, i8* %22
  br i1 %21, label %27, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.13", %"class.fxcrt::StringDataTemplate.13"* %20, i64 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !11
  br label %27

27:                                               ; preds = %12, %24
  %28 = phi i64 [ %26, %24 ], [ 0, %12 ]
  %29 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.38", %"class.fxcrt::StringViewTemplate.38"* %9, i64 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %29, align 8, !alias.scope !11, !noalias !5
  %30 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.38", %"class.fxcrt::StringViewTemplate.38"* %9, i64 0, i32 0, i32 1
  store i64 %28, i64* %30, align 8, !alias.scope !11, !noalias !5
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEES2_(%"class.fxcrt::ByteString"* nonnull %10, %"class.fxcrt::StringViewTemplate.38"* nonnull %8, %"class.fxcrt::StringViewTemplate.38"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  %31 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 12
  store i32 13, i32* %31, align 8
  %32 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %class.CBC_OnedEAN13Writer*, %class.CBC_OnedEAN13Writer** %32, align 8
  %34 = call i8* @_ZN19CBC_OnedEAN13Writer14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i(%class.CBC_OnedEAN13Writer* %33, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10, i32 7, i32* dereferenceable(4) %3, i32* dereferenceable(4) %4, i32 %5) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br label %35

35:                                               ; preds = %6, %27
  %36 = phi i8* [ %34, %27 ], [ null, %6 ]
  ret i8* %36
}

declare i8* @_ZN19CBC_OnedEAN13Writer14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i(%class.CBC_OnedEAN13Writer*, %"class.fxcrt::ByteString"* dereferenceable(8), i32, i32* dereferenceable(4), i32* dereferenceable(4), i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias i8* @_ZN18CBC_OnedUPCAWriter10EncodeImplERKN5fxcrt10ByteStringERi(%class.CBC_OnedUPCAWriter* nocapture readnone, %"class.fxcrt::ByteString"* nocapture readnone dereferenceable(8), i32* nocapture readnone dereferenceable(4)) unnamed_addr #5 align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CBC_OnedUPCAWriter9ShowCharsEN5fxcrt18StringViewTemplateIwEEP16CFX_RenderDeviceRK10CFX_Matrixii(%class.CBC_OnedUPCAWriter*, %"class.fxcrt::StringViewTemplate"* nocapture readonly, %class.CFX_RenderDevice*, %class.CFX_Matrix* readonly dereferenceable(24), i32, i32) unnamed_addr #0 align 2 {
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.std::__1::vector.29", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca float, align 4
  %12 = alloca %class.CFX_Matrix, align 16
  %13 = alloca %class.CFX_FloatRect, align 4
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %struct.FX_RECT*
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = alloca %class.CFX_Matrix, align 16
  %18 = alloca %class.CFX_FloatRect, align 4
  %19 = alloca { <2 x float>, <2 x float> }, align 8
  %20 = alloca %class.CFX_Matrix, align 16
  %21 = alloca %class.CFX_FloatRect, align 4
  %22 = alloca { <2 x float>, <2 x float> }, align 8
  %23 = alloca %class.CFX_Matrix, align 16
  %24 = alloca %class.CFX_FloatRect, align 4
  %25 = alloca { <2 x float>, <2 x float> }, align 8
  %26 = alloca %class.CFX_Matrix, align 16
  %27 = alloca i64, align 8
  %28 = alloca %"class.fxcrt::ByteString", align 8
  %29 = alloca %class.CFX_Matrix, align 16
  %30 = alloca i64, align 8
  %31 = alloca %"class.fxcrt::ByteString", align 8
  %32 = alloca %class.CFX_Matrix, align 16
  %33 = alloca i64, align 8
  %34 = alloca %"class.fxcrt::ByteString", align 8
  %35 = alloca %class.CFX_Matrix, align 16
  %36 = alloca i64, align 8
  %37 = icmp eq %class.CFX_RenderDevice* %2, null
  br i1 %37, label %526, label %38

38:                                               ; preds = %6
  %39 = bitcast i64* %36 to %struct.CFX_TextRenderOptions*
  %40 = bitcast i64* %33 to %struct.CFX_TextRenderOptions*
  %41 = bitcast i64* %30 to %struct.CFX_TextRenderOptions*
  %42 = bitcast i64* %27 to %struct.CFX_TextRenderOptions*
  %43 = bitcast { <2 x float>, <2 x float> }* %25 to %class.CFX_FloatRect*
  %44 = bitcast { <2 x float>, <2 x float> }* %22 to %class.CFX_FloatRect*
  %45 = bitcast { <2 x float>, <2 x float> }* %19 to %class.CFX_FloatRect*
  %46 = bitcast { <2 x float>, <2 x float> }* %16 to %class.CFX_FloatRect*
  %47 = mul nsw i32 %5, 17
  %48 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #9
  %49 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.13"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.13"*), %"class.fxcrt::StringDataTemplate.13"** %49, align 8
  %50 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  %51 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 8 %51, i64 16, i1 false)
  call void @_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::ByteString"* nonnull sret %7, %"class.fxcrt::StringViewTemplate"* nonnull %8) #9
  %52 = load %"class.fxcrt::StringDataTemplate.13"*, %"class.fxcrt::StringDataTemplate.13"** %49, align 8
  %53 = icmp eq %"class.fxcrt::StringDataTemplate.13"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.13", %"class.fxcrt::StringDataTemplate.13"* %52, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  br label %57

57:                                               ; preds = %38, %54
  %58 = phi i64 [ %56, %54 ], [ 0, %38 ]
  %59 = bitcast %"class.std::__1::vector.29"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #9
  %60 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %9, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %9, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #9
  %63 = icmp eq i64 %58, 0
  br i1 %63, label %82, label %64

64:                                               ; preds = %57
  %65 = icmp ugt i64 %58, 419244183493398900
  br i1 %65, label %66, label %68

66:                                               ; preds = %64
  %67 = bitcast %"class.std::__1::vector.29"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %67) #11
  unreachable

68:                                               ; preds = %64
  %69 = mul i64 %58, 44
  %70 = call i8* @_Znwm(i64 %69) #10
  %71 = bitcast i8* %70 to %class.TextCharPos*
  %72 = bitcast %class.TextCharPos** %61 to i8**
  store i8* %70, i8** %72, align 8
  %73 = bitcast %"class.std::__1::vector.29"* %9 to i8**
  store i8* %70, i8** %73, align 8
  %74 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %71, i64 %58
  store %class.TextCharPos* %74, %class.TextCharPos** %62, align 8
  br label %75

75:                                               ; preds = %75, %68
  %76 = phi %class.TextCharPos* [ %77, %75 ], [ %71, %68 ]
  call void @_ZN11TextCharPosC1Ev(%class.TextCharPos* %76) #9
  %77 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %76, i64 1
  %78 = icmp eq %class.TextCharPos* %77, %74
  br i1 %78, label %79, label %75

79:                                               ; preds = %75
  %80 = bitcast %class.TextCharPos** %61 to i64*
  %81 = ptrtoint %class.TextCharPos* %74 to i64
  store i64 %81, i64* %80, align 8
  br label %82

82:                                               ; preds = %57, %79
  %83 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #9
  %84 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.13"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.13"*), %"class.fxcrt::StringDataTemplate.13"** %84, align 8
  call void @_ZNK5fxcrt10ByteString6SubstrEmm(%"class.fxcrt::ByteString"* nonnull sret %10, %"class.fxcrt::ByteString"* nonnull %7, i64 1, i64 5) #9
  %85 = sitofp i32 %5 to float
  %86 = fmul float %85, 3.500000e+01
  %87 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #9
  store float 0.000000e+00, float* %11, align 4
  %88 = load %"class.fxcrt::StringDataTemplate.13"*, %"class.fxcrt::StringDataTemplate.13"** %84, align 8
  %89 = icmp eq %"class.fxcrt::StringDataTemplate.13"* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.13", %"class.fxcrt::StringDataTemplate.13"* %88, i64 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = trunc i64 %92 to i32
  br label %94

94:                                               ; preds = %82, %90
  %95 = phi i32 [ %93, %90 ], [ 0, %82 ]
  %96 = bitcast %class.CBC_OnedUPCAWriter* %0 to %class.CBC_OneDimWriter*
  %97 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 7
  %98 = load float, float* %97, align 8
  %99 = call float @llvm.fabs.f32(float %98) #9
  %100 = fptosi float %99 to i32
  %101 = add nsw i32 %100, 1
  %102 = bitcast %class.CFX_Matrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #9
  %103 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %12, i64 0, i32 4
  %104 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %12, i64 0, i32 5
  %105 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 18
  %106 = load float, float* %105, align 8
  %107 = bitcast %class.CFX_FloatRect* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #9
  %108 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %13, i64 0, i32 0
  %109 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %13, i64 0, i32 1
  %110 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %13, i64 0, i32 2
  %111 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %13, i64 0, i32 3
  %112 = sitofp i32 %47 to float
  %113 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %114 = load i32, i32* %113, align 4
  %115 = sub nsw i32 %114, %101
  %116 = sitofp i32 %115 to float
  %117 = fadd float %86, %112
  %118 = fadd float %117, -5.000000e-01
  %119 = sitofp i32 %114 to float
  store float %112, float* %108, align 4
  store float %116, float* %109, align 4
  store float %118, float* %110, align 4
  store float %119, float* %111, align 4
  %120 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 2
  %121 = bitcast %class.CFX_Matrix* %3 to <2 x float>*
  %122 = load <2 x float>, <2 x float>* %121, align 4, !noalias !12
  %123 = shufflevector <2 x float> %122, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %124 = shufflevector <2 x float> %122, <2 x float> undef, <4 x i32> <i32 undef, i32 1, i32 undef, i32 undef>
  %125 = shufflevector <2 x float> %122, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %126 = bitcast float* %120 to <2 x float>*
  %127 = load <2 x float>, <2 x float>* %126, align 4, !noalias !12
  %128 = fmul <2 x float> %127, zeroinitializer
  %129 = insertelement <4 x float> undef, float %106, i32 0
  %130 = shufflevector <4 x float> %129, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %131 = shufflevector <4 x float> %130, <4 x float> %125, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %132 = shufflevector <4 x float> %123, <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x i32> <i32 0, i32 undef, i32 6, i32 7>
  %133 = shufflevector <4 x float> %132, <4 x float> %124, <4 x i32> <i32 0, i32 5, i32 2, i32 3>
  %134 = fmul <4 x float> %131, %133
  %135 = extractelement <2 x float> %128, i32 0
  %136 = extractelement <2 x float> %128, i32 1
  %137 = shufflevector <2 x float> %128, <2 x float> %127, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %138 = fadd <4 x float> %134, %137
  %139 = extractelement <4 x float> %134, i32 2
  %140 = fadd float %139, %135
  %141 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 4
  %142 = load float, float* %141, align 4, !noalias !12
  %143 = fadd float %140, %142
  %144 = extractelement <4 x float> %134, i32 3
  %145 = fadd float %144, %136
  %146 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 5
  %147 = load float, float* %146, align 4, !noalias !12
  %148 = fadd float %145, %147
  %149 = bitcast %class.CFX_Matrix* %12 to <4 x float>*
  store <4 x float> %138, <4 x float>* %149, align 16
  store float %143, float* %103, align 16
  store float %148, float* %104, align 4
  %150 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #9
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %152 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #9
  %153 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %12, %class.CFX_FloatRect* nonnull dereferenceable(16) %13) #9
  %154 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  %155 = extractvalue { <2 x float>, <2 x float> } %153, 0
  store <2 x float> %155, <2 x float>* %154, align 8
  %156 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  %157 = extractvalue { <2 x float>, <2 x float> } %153, 1
  store <2 x float> %157, <2 x float>* %156, align 8
  %158 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %46) #9
  %159 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  %160 = extractvalue { i64, i64 } %158, 0
  store i64 %160, i64* %159, align 8
  %161 = extractvalue { i64, i64 } %158, 1
  store i64 %161, i64* %151, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #9
  %162 = call zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice* nonnull %2, %struct.FX_RECT* nonnull dereferenceable(16) %15, i32 -1, i32 0) #9
  %163 = bitcast %class.CFX_Matrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #9
  %164 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 4
  %165 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 5
  %166 = load float, float* %105, align 8
  %167 = bitcast %class.CFX_FloatRect* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167) #9
  %168 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %18, i64 0, i32 0
  %169 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %18, i64 0, i32 1
  %170 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %18, i64 0, i32 2
  %171 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %18, i64 0, i32 3
  %172 = mul nsw i32 %5, 57
  %173 = sitofp i32 %172 to float
  %174 = load i32, i32* %113, align 4
  %175 = sub nsw i32 %174, %101
  %176 = sitofp i32 %175 to float
  %177 = fadd float %86, %173
  %178 = fadd float %177, -5.000000e-01
  %179 = sitofp i32 %174 to float
  store float %173, float* %168, align 4
  store float %176, float* %169, align 4
  store float %178, float* %170, align 4
  store float %179, float* %171, align 4
  %180 = bitcast %class.CFX_Matrix* %3 to <2 x float>*
  %181 = load <2 x float>, <2 x float>* %180, align 4, !noalias !15
  %182 = shufflevector <2 x float> %181, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %183 = shufflevector <2 x float> %181, <2 x float> undef, <4 x i32> <i32 undef, i32 1, i32 undef, i32 undef>
  %184 = shufflevector <2 x float> %181, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %185 = bitcast float* %120 to <2 x float>*
  %186 = load <2 x float>, <2 x float>* %185, align 4, !noalias !15
  %187 = fmul <2 x float> %186, zeroinitializer
  %188 = insertelement <4 x float> undef, float %166, i32 0
  %189 = shufflevector <4 x float> %188, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %190 = shufflevector <4 x float> %189, <4 x float> %184, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %191 = shufflevector <4 x float> %182, <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x i32> <i32 0, i32 undef, i32 6, i32 7>
  %192 = shufflevector <4 x float> %191, <4 x float> %183, <4 x i32> <i32 0, i32 5, i32 2, i32 3>
  %193 = fmul <4 x float> %190, %192
  %194 = extractelement <2 x float> %187, i32 0
  %195 = extractelement <2 x float> %187, i32 1
  %196 = shufflevector <2 x float> %187, <2 x float> %186, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %197 = fadd <4 x float> %193, %196
  %198 = extractelement <4 x float> %193, i32 2
  %199 = fadd float %198, %194
  %200 = load float, float* %141, align 4, !noalias !15
  %201 = fadd float %199, %200
  %202 = extractelement <4 x float> %193, i32 3
  %203 = fadd float %202, %195
  %204 = load float, float* %146, align 4, !noalias !15
  %205 = fadd float %203, %204
  %206 = bitcast %class.CFX_Matrix* %17 to <4 x float>*
  store <4 x float> %197, <4 x float>* %206, align 16
  store float %201, float* %164, align 16
  store float %205, float* %165, align 4
  %207 = bitcast { <2 x float>, <2 x float> }* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %207) #9
  %208 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %17, %class.CFX_FloatRect* nonnull dereferenceable(16) %18) #9
  %209 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 0
  %210 = extractvalue { <2 x float>, <2 x float> } %208, 0
  store <2 x float> %210, <2 x float>* %209, align 8
  %211 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 1
  %212 = extractvalue { <2 x float>, <2 x float> } %208, 1
  store <2 x float> %212, <2 x float>* %211, align 8
  %213 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %45) #9
  %214 = extractvalue { i64, i64 } %213, 0
  %215 = extractvalue { i64, i64 } %213, 1
  store i64 %214, i64* %159, align 8
  store i64 %215, i64* %151, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %207) #9
  %216 = call zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice* nonnull %2, %struct.FX_RECT* nonnull dereferenceable(16) %15, i32 -1, i32 0) #9
  %217 = fmul float %85, 7.000000e+00
  %218 = bitcast %class.CFX_Matrix* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #9
  %219 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %20, i64 0, i32 4
  %220 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %20, i64 0, i32 5
  %221 = load float, float* %105, align 8
  %222 = bitcast %class.CFX_FloatRect* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %222) #9
  %223 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %21, i64 0, i32 0
  %224 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %21, i64 0, i32 1
  %225 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %21, i64 0, i32 2
  %226 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %21, i64 0, i32 3
  %227 = load i32, i32* %113, align 4
  %228 = sub nsw i32 %227, %101
  %229 = sitofp i32 %228 to float
  %230 = fadd float %217, -1.000000e+00
  %231 = sitofp i32 %227 to float
  store float 0.000000e+00, float* %223, align 4
  store float %229, float* %224, align 4
  store float %230, float* %225, align 4
  store float %231, float* %226, align 4
  %232 = bitcast %class.CFX_Matrix* %3 to <2 x float>*
  %233 = load <2 x float>, <2 x float>* %232, align 4, !noalias !18
  %234 = shufflevector <2 x float> %233, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %235 = shufflevector <2 x float> %233, <2 x float> undef, <4 x i32> <i32 undef, i32 1, i32 undef, i32 undef>
  %236 = shufflevector <2 x float> %233, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %237 = bitcast float* %120 to <2 x float>*
  %238 = load <2 x float>, <2 x float>* %237, align 4, !noalias !18
  %239 = fmul <2 x float> %238, zeroinitializer
  %240 = insertelement <4 x float> undef, float %221, i32 0
  %241 = shufflevector <4 x float> %240, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %242 = shufflevector <4 x float> %241, <4 x float> %236, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %243 = shufflevector <4 x float> %234, <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x i32> <i32 0, i32 undef, i32 6, i32 7>
  %244 = shufflevector <4 x float> %243, <4 x float> %235, <4 x i32> <i32 0, i32 5, i32 2, i32 3>
  %245 = fmul <4 x float> %242, %244
  %246 = extractelement <2 x float> %239, i32 0
  %247 = extractelement <2 x float> %239, i32 1
  %248 = shufflevector <2 x float> %239, <2 x float> %238, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %249 = fadd <4 x float> %245, %248
  %250 = extractelement <4 x float> %245, i32 2
  %251 = fadd float %250, %246
  %252 = load float, float* %141, align 4, !noalias !18
  %253 = fadd float %251, %252
  %254 = extractelement <4 x float> %245, i32 3
  %255 = fadd float %254, %247
  %256 = load float, float* %146, align 4, !noalias !18
  %257 = fadd float %255, %256
  %258 = bitcast %class.CFX_Matrix* %20 to <4 x float>*
  store <4 x float> %249, <4 x float>* %258, align 16
  store float %253, float* %219, align 16
  store float %257, float* %220, align 4
  %259 = bitcast { <2 x float>, <2 x float> }* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %259) #9
  %260 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %20, %class.CFX_FloatRect* nonnull dereferenceable(16) %21) #9
  %261 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %22, i64 0, i32 0
  %262 = extractvalue { <2 x float>, <2 x float> } %260, 0
  store <2 x float> %262, <2 x float>* %261, align 8
  %263 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %22, i64 0, i32 1
  %264 = extractvalue { <2 x float>, <2 x float> } %260, 1
  store <2 x float> %264, <2 x float>* %263, align 8
  %265 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %44) #9
  %266 = extractvalue { i64, i64 } %265, 0
  %267 = extractvalue { i64, i64 } %265, 1
  store i64 %266, i64* %159, align 8
  store i64 %267, i64* %151, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %259) #9
  %268 = call zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice* nonnull %2, %struct.FX_RECT* nonnull dereferenceable(16) %15, i32 -1, i32 0) #9
  %269 = bitcast %class.CFX_Matrix* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %269) #9
  %270 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %23, i64 0, i32 4
  %271 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %23, i64 0, i32 5
  %272 = load float, float* %105, align 8
  %273 = bitcast %class.CFX_FloatRect* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %273) #9
  %274 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %24, i64 0, i32 0
  %275 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %24, i64 0, i32 1
  %276 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %24, i64 0, i32 2
  %277 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %24, i64 0, i32 3
  %278 = mul nsw i32 %5, 102
  %279 = sitofp i32 %278 to float
  %280 = load i32, i32* %113, align 4
  %281 = sub nsw i32 %280, %101
  %282 = sitofp i32 %281 to float
  %283 = fadd float %217, %279
  %284 = fadd float %283, -5.000000e-01
  %285 = sitofp i32 %280 to float
  store float %279, float* %274, align 4
  store float %282, float* %275, align 4
  store float %284, float* %276, align 4
  store float %285, float* %277, align 4
  %286 = bitcast %class.CFX_Matrix* %3 to <2 x float>*
  %287 = load <2 x float>, <2 x float>* %286, align 4, !noalias !21
  %288 = shufflevector <2 x float> %287, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %289 = shufflevector <2 x float> %287, <2 x float> undef, <4 x i32> <i32 undef, i32 1, i32 undef, i32 undef>
  %290 = shufflevector <2 x float> %287, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %291 = bitcast float* %120 to <2 x float>*
  %292 = load <2 x float>, <2 x float>* %291, align 4, !noalias !21
  %293 = fmul <2 x float> %292, zeroinitializer
  %294 = insertelement <4 x float> undef, float %272, i32 0
  %295 = shufflevector <4 x float> %294, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %296 = shufflevector <4 x float> %295, <4 x float> %290, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %297 = shufflevector <4 x float> %288, <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x i32> <i32 0, i32 undef, i32 6, i32 7>
  %298 = shufflevector <4 x float> %297, <4 x float> %289, <4 x i32> <i32 0, i32 5, i32 2, i32 3>
  %299 = fmul <4 x float> %296, %298
  %300 = extractelement <2 x float> %293, i32 0
  %301 = extractelement <2 x float> %293, i32 1
  %302 = shufflevector <2 x float> %293, <2 x float> %292, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %303 = fadd <4 x float> %299, %302
  %304 = extractelement <4 x float> %299, i32 2
  %305 = fadd float %304, %300
  %306 = load float, float* %141, align 4, !noalias !21
  %307 = fadd float %305, %306
  %308 = extractelement <4 x float> %299, i32 3
  %309 = fadd float %308, %301
  %310 = load float, float* %146, align 4, !noalias !21
  %311 = fadd float %309, %310
  %312 = bitcast %class.CFX_Matrix* %23 to <4 x float>*
  store <4 x float> %303, <4 x float>* %312, align 16
  store float %307, float* %270, align 16
  store float %311, float* %271, align 4
  %313 = bitcast { <2 x float>, <2 x float> }* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313) #9
  %314 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %23, %class.CFX_FloatRect* nonnull dereferenceable(16) %24) #9
  %315 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 0
  %316 = extractvalue { <2 x float>, <2 x float> } %314, 0
  store <2 x float> %316, <2 x float>* %315, align 8
  %317 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 1
  %318 = extractvalue { <2 x float>, <2 x float> } %314, 1
  store <2 x float> %318, <2 x float>* %317, align 8
  %319 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %43) #9
  %320 = extractvalue { i64, i64 } %319, 0
  %321 = extractvalue { i64, i64 } %319, 1
  store i64 %320, i64* %159, align 8
  store i64 %321, i64* %151, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #9
  %322 = call zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice* nonnull %2, %struct.FX_RECT* nonnull dereferenceable(16) %15, i32 -1, i32 0) #9
  %323 = load float, float* %105, align 8
  %324 = fmul float %86, %323
  %325 = load %class.TextCharPos*, %class.TextCharPos** %60, align 8
  %326 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %325, i64 1
  %327 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 6, i32 0
  %328 = load %class.CFX_Font*, %class.CFX_Font** %327, align 8
  call void @_ZN16CBC_OneDimWriter12CalcTextInfoERKN5fxcrt10ByteStringEP11TextCharPosP8CFX_FontfiRf(%class.CBC_OneDimWriter* %96, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10, %class.TextCharPos* %326, %class.CFX_Font* %328, float %324, i32 %100, float* nonnull dereferenceable(4) %11) #9
  %329 = bitcast %class.CFX_Matrix* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %329) #9
  %330 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %26, i64 0, i32 4
  %331 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %26, i64 0, i32 5
  %332 = load float, float* %105, align 8
  %333 = fmul float %332, %112
  %334 = load i32, i32* %113, align 4
  %335 = add i32 %334, -1
  %336 = sitofp i32 %335 to float
  %337 = bitcast %class.CFX_Matrix* %3 to <4 x float>*
  %338 = load <4 x float>, <4 x float>* %337, align 4, !noalias !24
  %339 = fmul <4 x float> %338, zeroinitializer
  %340 = shufflevector <4 x float> %339, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %341 = extractelement <4 x float> %338, i32 0
  %342 = extractelement <4 x float> %338, i32 1
  %343 = extractelement <4 x float> %338, i32 2
  %344 = extractelement <4 x float> %338, i32 3
  %345 = fadd <4 x float> %340, %338
  %346 = fsub <4 x float> %340, %338
  %347 = shufflevector <4 x float> %345, <4 x float> %346, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %348 = fmul float %333, %341
  %349 = fmul float %343, %336
  %350 = fadd float %348, %349
  %351 = load float, float* %141, align 4, !noalias !24
  %352 = fadd float %350, %351
  %353 = fmul float %333, %342
  %354 = fmul float %344, %336
  %355 = fadd float %353, %354
  %356 = load float, float* %146, align 4, !noalias !24
  %357 = fadd float %355, %356
  %358 = bitcast %class.CFX_Matrix* %26 to <4 x float>*
  store <4 x float> %347, <4 x float>* %358, align 16
  store float %352, float* %330, align 16
  store float %357, float* %331, align 4
  %359 = load %class.TextCharPos*, %class.TextCharPos** %60, align 8
  %360 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %359, i64 1
  %361 = load %class.CFX_Font*, %class.CFX_Font** %327, align 8
  %362 = sitofp i32 %100 to float
  %363 = getelementptr inbounds %class.CBC_OnedUPCAWriter, %class.CBC_OnedUPCAWriter* %0, i64 0, i32 0, i32 0, i32 9
  %364 = load i32, i32* %363, align 8
  %365 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %365) #9
  store i64 1099511627778, i64* %27, align 8
  %366 = call zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice* nonnull %2, i32 %95, %class.TextCharPos* %360, %class.CFX_Font* %361, float %362, %class.CFX_Matrix* nonnull dereferenceable(24) %26, i32 %364, %struct.CFX_TextRenderOptions* nonnull dereferenceable(8) %42) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %365) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %329) #9
  %367 = bitcast %"class.fxcrt::ByteString"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %367) #9
  call void @_ZNK5fxcrt10ByteString6SubstrEmm(%"class.fxcrt::ByteString"* nonnull sret %28, %"class.fxcrt::ByteString"* nonnull %7, i64 6, i64 5) #9
  %368 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %10, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %28) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %367) #9
  %369 = load %"class.fxcrt::StringDataTemplate.13"*, %"class.fxcrt::StringDataTemplate.13"** %84, align 8
  %370 = icmp eq %"class.fxcrt::StringDataTemplate.13"* %369, null
  br i1 %370, label %375, label %371

371:                                              ; preds = %94
  %372 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.13", %"class.fxcrt::StringDataTemplate.13"* %369, i64 0, i32 1
  %373 = load i64, i64* %372, align 8
  %374 = trunc i64 %373 to i32
  br label %375

375:                                              ; preds = %94, %371
  %376 = phi i32 [ %374, %371 ], [ 0, %94 ]
  %377 = load %class.TextCharPos*, %class.TextCharPos** %60, align 8
  %378 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %377, i64 6
  %379 = load %class.CFX_Font*, %class.CFX_Font** %327, align 8
  call void @_ZN16CBC_OneDimWriter12CalcTextInfoERKN5fxcrt10ByteStringEP11TextCharPosP8CFX_FontfiRf(%class.CBC_OneDimWriter* %96, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10, %class.TextCharPos* %378, %class.CFX_Font* %379, float %324, i32 %100, float* nonnull dereferenceable(4) %11) #9
  %380 = bitcast %class.CFX_Matrix* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %380) #9
  %381 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %29, i64 0, i32 4
  %382 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %29, i64 0, i32 5
  %383 = load float, float* %105, align 8
  %384 = fmul float %383, %173
  %385 = load i32, i32* %113, align 4
  %386 = add i32 %385, -1
  %387 = sitofp i32 %386 to float
  %388 = bitcast %class.CFX_Matrix* %3 to <4 x float>*
  %389 = load <4 x float>, <4 x float>* %388, align 4, !noalias !27
  %390 = fmul <4 x float> %389, zeroinitializer
  %391 = shufflevector <4 x float> %390, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %392 = extractelement <4 x float> %389, i32 0
  %393 = extractelement <4 x float> %389, i32 1
  %394 = extractelement <4 x float> %389, i32 2
  %395 = extractelement <4 x float> %389, i32 3
  %396 = fadd <4 x float> %391, %389
  %397 = fsub <4 x float> %391, %389
  %398 = shufflevector <4 x float> %396, <4 x float> %397, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %399 = fmul float %384, %392
  %400 = fmul float %394, %387
  %401 = fadd float %399, %400
  %402 = load float, float* %141, align 4, !noalias !27
  %403 = fadd float %401, %402
  %404 = fmul float %384, %393
  %405 = fmul float %395, %387
  %406 = fadd float %404, %405
  %407 = load float, float* %146, align 4, !noalias !27
  %408 = fadd float %406, %407
  %409 = bitcast %class.CFX_Matrix* %29 to <4 x float>*
  store <4 x float> %398, <4 x float>* %409, align 16
  store float %403, float* %381, align 16
  store float %408, float* %382, align 4
  %410 = load %class.TextCharPos*, %class.TextCharPos** %60, align 8
  %411 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %410, i64 6
  %412 = load %class.CFX_Font*, %class.CFX_Font** %327, align 8
  %413 = load i32, i32* %363, align 8
  %414 = bitcast i64* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %414) #9
  store i64 1099511627778, i64* %30, align 8
  %415 = call zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice* nonnull %2, i32 %376, %class.TextCharPos* %411, %class.CFX_Font* %412, float %362, %class.CFX_Matrix* nonnull dereferenceable(24) %29, i32 %413, %struct.CFX_TextRenderOptions* nonnull dereferenceable(8) %41) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %380) #9
  %416 = bitcast %"class.fxcrt::ByteString"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %416) #9
  call void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* nonnull sret %31, %"class.fxcrt::ByteString"* nonnull %7, i64 1) #9
  %417 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %10, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %31) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %416) #9
  %418 = load %"class.fxcrt::StringDataTemplate.13"*, %"class.fxcrt::StringDataTemplate.13"** %84, align 8
  %419 = icmp eq %"class.fxcrt::StringDataTemplate.13"* %418, null
  br i1 %419, label %424, label %420

420:                                              ; preds = %375
  %421 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.13", %"class.fxcrt::StringDataTemplate.13"* %418, i64 0, i32 1
  %422 = load i64, i64* %421, align 8
  %423 = trunc i64 %422 to i32
  br label %424

424:                                              ; preds = %375, %420
  %425 = phi i32 [ %423, %420 ], [ 0, %375 ]
  %426 = load float, float* %105, align 8
  %427 = fmul float %217, %426
  %428 = load %class.TextCharPos*, %class.TextCharPos** %60, align 8
  %429 = load %class.CFX_Font*, %class.CFX_Font** %327, align 8
  call void @_ZN16CBC_OneDimWriter12CalcTextInfoERKN5fxcrt10ByteStringEP11TextCharPosP8CFX_FontfiRf(%class.CBC_OneDimWriter* %96, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10, %class.TextCharPos* %428, %class.CFX_Font* %429, float %427, i32 %100, float* nonnull dereferenceable(4) %11) #9
  %430 = bitcast %class.CFX_Matrix* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %430) #9
  %431 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %32, i64 0, i32 4
  %432 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %32, i64 0, i32 5
  %433 = load i32, i32* %113, align 4
  %434 = add i32 %433, -1
  %435 = sitofp i32 %434 to float
  %436 = bitcast %class.CFX_Matrix* %3 to <4 x float>*
  %437 = load <4 x float>, <4 x float>* %436, align 4, !noalias !30
  %438 = fmul <4 x float> %437, zeroinitializer
  %439 = shufflevector <4 x float> %438, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %440 = extractelement <4 x float> %437, i32 2
  %441 = extractelement <4 x float> %437, i32 3
  %442 = fadd <4 x float> %439, %437
  %443 = fsub <4 x float> %439, %437
  %444 = shufflevector <4 x float> %442, <4 x float> %443, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %445 = fmul float %440, %435
  %446 = extractelement <4 x float> %438, i32 0
  %447 = fadd float %446, %445
  %448 = load float, float* %141, align 4, !noalias !30
  %449 = fadd float %447, %448
  %450 = fmul float %441, %435
  %451 = extractelement <4 x float> %438, i32 1
  %452 = fadd float %451, %450
  %453 = load float, float* %146, align 4, !noalias !30
  %454 = fadd float %452, %453
  %455 = bitcast %class.CFX_Matrix* %32 to <4 x float>*
  store <4 x float> %444, <4 x float>* %455, align 16
  store float %449, float* %431, align 16
  store float %454, float* %432, align 4
  %456 = load %class.TextCharPos*, %class.TextCharPos** %60, align 8
  %457 = load %class.CFX_Font*, %class.CFX_Font** %327, align 8
  %458 = load i32, i32* %363, align 8
  %459 = bitcast i64* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %459) #9
  store i64 1099511627778, i64* %33, align 8
  %460 = call zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice* nonnull %2, i32 %425, %class.TextCharPos* %456, %class.CFX_Font* %457, float %362, %class.CFX_Matrix* nonnull dereferenceable(24) %32, i32 %458, %struct.CFX_TextRenderOptions* nonnull dereferenceable(8) %40) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %459) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %430) #9
  %461 = bitcast %"class.fxcrt::ByteString"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %461) #9
  call void @_ZNK5fxcrt10ByteString6SubstrEmm(%"class.fxcrt::ByteString"* nonnull sret %34, %"class.fxcrt::ByteString"* nonnull %7, i64 11, i64 1) #9
  %462 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %10, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %34) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %461) #9
  %463 = load %"class.fxcrt::StringDataTemplate.13"*, %"class.fxcrt::StringDataTemplate.13"** %84, align 8
  %464 = icmp eq %"class.fxcrt::StringDataTemplate.13"* %463, null
  br i1 %464, label %469, label %465

465:                                              ; preds = %424
  %466 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.13", %"class.fxcrt::StringDataTemplate.13"* %463, i64 0, i32 1
  %467 = load i64, i64* %466, align 8
  %468 = trunc i64 %467 to i32
  br label %469

469:                                              ; preds = %424, %465
  %470 = phi i32 [ %468, %465 ], [ 0, %424 ]
  %471 = load %class.TextCharPos*, %class.TextCharPos** %60, align 8
  %472 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %471, i64 11
  %473 = load %class.CFX_Font*, %class.CFX_Font** %327, align 8
  call void @_ZN16CBC_OneDimWriter12CalcTextInfoERKN5fxcrt10ByteStringEP11TextCharPosP8CFX_FontfiRf(%class.CBC_OneDimWriter* %96, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10, %class.TextCharPos* %472, %class.CFX_Font* %473, float %427, i32 %100, float* nonnull dereferenceable(4) %11) #9
  %474 = bitcast %class.CFX_Matrix* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %474) #9
  %475 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %35, i64 0, i32 4
  %476 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %35, i64 0, i32 5
  %477 = load float, float* %105, align 8
  %478 = fmul float %477, %279
  %479 = load i32, i32* %113, align 4
  %480 = add i32 %479, -1
  %481 = sitofp i32 %480 to float
  %482 = bitcast %class.CFX_Matrix* %3 to <4 x float>*
  %483 = load <4 x float>, <4 x float>* %482, align 4, !noalias !33
  %484 = fmul <4 x float> %483, zeroinitializer
  %485 = shufflevector <4 x float> %484, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %486 = extractelement <4 x float> %483, i32 0
  %487 = extractelement <4 x float> %483, i32 1
  %488 = extractelement <4 x float> %483, i32 2
  %489 = extractelement <4 x float> %483, i32 3
  %490 = fadd <4 x float> %485, %483
  %491 = fsub <4 x float> %485, %483
  %492 = shufflevector <4 x float> %490, <4 x float> %491, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %493 = fmul float %478, %486
  %494 = fmul float %488, %481
  %495 = fadd float %493, %494
  %496 = load float, float* %141, align 4, !noalias !33
  %497 = fadd float %495, %496
  %498 = fmul float %478, %487
  %499 = fmul float %489, %481
  %500 = fadd float %498, %499
  %501 = load float, float* %146, align 4, !noalias !33
  %502 = fadd float %500, %501
  %503 = bitcast %class.CFX_Matrix* %35 to <4 x float>*
  store <4 x float> %492, <4 x float>* %503, align 16
  store float %497, float* %475, align 16
  store float %502, float* %476, align 4
  %504 = load %class.TextCharPos*, %class.TextCharPos** %60, align 8
  %505 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %504, i64 11
  %506 = load %class.CFX_Font*, %class.CFX_Font** %327, align 8
  %507 = load i32, i32* %363, align 8
  %508 = bitcast i64* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %508) #9
  store i64 1099511627778, i64* %36, align 8
  %509 = call zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice* nonnull %2, i32 %470, %class.TextCharPos* %505, %class.CFX_Font* %506, float %362, %class.CFX_Matrix* nonnull dereferenceable(24) %35, i32 %507, %struct.CFX_TextRenderOptions* nonnull dereferenceable(8) %39) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %508) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %474) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %273) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %269) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %222) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #9
  %510 = load %class.TextCharPos*, %class.TextCharPos** %60, align 8
  %511 = icmp eq %class.TextCharPos* %510, null
  br i1 %511, label %525, label %512

512:                                              ; preds = %469
  %513 = bitcast %class.TextCharPos* %510 to i8*
  %514 = load %class.TextCharPos*, %class.TextCharPos** %61, align 8
  %515 = icmp eq %class.TextCharPos* %514, %510
  br i1 %515, label %523, label %516

516:                                              ; preds = %512, %516
  %517 = phi %class.TextCharPos* [ %518, %516 ], [ %514, %512 ]
  %518 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %517, i64 -1
  call void @_ZN11TextCharPosD1Ev(%class.TextCharPos* %518) #9
  %519 = icmp eq %class.TextCharPos* %518, %510
  br i1 %519, label %520, label %516

520:                                              ; preds = %516
  %521 = bitcast %"class.std::__1::vector.29"* %9 to i8**
  %522 = load i8*, i8** %521, align 8
  br label %523

523:                                              ; preds = %520, %512
  %524 = phi i8* [ %522, %520 ], [ %513, %512 ]
  store %class.TextCharPos* %510, %class.TextCharPos** %61, align 8
  call void @_ZdlPv(i8* %524) #10
  br label %525

525:                                              ; preds = %469, %523
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #9
  br label %526

526:                                              ; preds = %6, %525
  %527 = phi i1 [ true, %525 ], [ false, %6 ]
  ret i1 %527
}

declare void @_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

declare void @_ZNK5fxcrt10ByteString6SubstrEmm(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::ByteString"*, i64, i64) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect*) local_unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter12CalcTextInfoERKN5fxcrt10ByteStringEP11TextCharPosP8CFX_FontfiRf(%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"* dereferenceable(8), %class.TextCharPos*, %class.CFX_Font*, float, i32, float* dereferenceable(4)) local_unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice*, i32, %class.TextCharPos*, %class.CFX_Font*, float, %class.CFX_Matrix* dereferenceable(24), i32, %struct.CFX_TextRenderOptions* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::ByteString"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetCharEncodingEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetModuleHeightEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer14SetModuleWidthEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer9SetHeightEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer8SetWidthEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetTextLocationE11BC_TEXT_LOC(%class.CBC_Writer*, i8 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer18SetWideNarrowRatioEa(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer12SetStartCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer10SetEndCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer23SetErrorCorrectionLevelEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN16CBC_OneDimWriter12RenderResultEN5fxcrt18StringViewTemplateIwEEPhi(%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, i8*, i32) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter16SetPrintChecksumEb(%class.CBC_OneDimWriter*, i1 zeroext) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter13SetDataLengthEi(%class.CBC_OneDimWriter*, i32) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter15SetCalcChecksumEb(%class.CBC_OneDimWriter*, i1 zeroext) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter11SetFontSizeEf(%class.CBC_OneDimWriter*, float) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter12SetFontStyleEi(%class.CBC_OneDimWriter*, i32) unnamed_addr #1

declare void @_ZN16CBC_OneDimWriter12SetFontColorEj(%class.CBC_OneDimWriter*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @iswdigit(i32) local_unnamed_addr #2

declare void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEES2_(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate.38"*, %"class.fxcrt::StringViewTemplate.38"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

declare zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice*, %struct.FX_RECT* dereferenceable(16), i32, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN19CBC_OnedEAN13WriterC1Ev(%class.CBC_OnedEAN13Writer*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN11TextCharPosC1Ev(%class.TextCharPos*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11TextCharPosD1Ev(%class.TextCharPos*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 -2143840706}
!4 = !{i32 -2143840685}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5fxcrtplEcRKNS_10ByteStringE: argument 0"}
!7 = distinct !{!7, !"_ZN5fxcrtplEcRKNS_10ByteStringE"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!11 = !{!9}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!14 = distinct !{!14, !"_ZNK10CFX_MatrixmlERKS_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!17 = distinct !{!17, !"_ZNK10CFX_MatrixmlERKS_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!20 = distinct !{!20, !"_ZNK10CFX_MatrixmlERKS_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!23 = distinct !{!23, !"_ZNK10CFX_MatrixmlERKS_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!26 = distinct !{!26, !"_ZNK10CFX_MatrixmlERKS_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!29 = distinct !{!29, !"_ZNK10CFX_MatrixmlERKS_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!32 = distinct !{!32, !"_ZNK10CFX_MatrixmlERKS_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!35 = distinct !{!35, !"_ZNK10CFX_MatrixmlERKS_"}
