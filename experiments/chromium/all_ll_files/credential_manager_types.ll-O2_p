; ModuleID = '../../components/password_manager/core/common/credential_manager_types.cc'
source_filename = "../../components/password_manager/core/common/credential_manager_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.password_manager::CredentialInfo" = type { i32, %"class.absl::optional", %"class.absl::optional", %class.GURL, %"class.absl::optional", %"class.url::Origin" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.GURL* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.std::__1::basic_string.2" }
%"class.std::__1::basic_string.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.14" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.6 }
%struct.anon.6 = type { %"struct.std::__1::__padding.7", i8 }
%"struct.std::__1::__padding.7" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [38 x i8] c"CredentialType::CREDENTIAL_TYPE_EMPTY\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"CredentialType::CREDENTIAL_TYPE_PASSWORD\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"CredentialType::CREDENTIAL_TYPE_FEDERATED\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"Unknown CredentialType value: \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN16password_manager14CredentialInfoC1Ev = hidden unnamed_addr alias void (%"struct.password_manager::CredentialInfo"*), void (%"struct.password_manager::CredentialInfo"*)* @_ZN16password_manager14CredentialInfoC2Ev
@_ZN16password_manager14CredentialInfoC1ENS_14CredentialTypeEN4absl8optionalINSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEESB_4GURLSB_N3url6OriginE = hidden unnamed_addr alias void (%"struct.password_manager::CredentialInfo"*, i32, %"class.absl::optional"*, %"class.absl::optional"*, %class.GURL*, %"class.absl::optional"*, %"class.url::Origin"*), void (%"struct.password_manager::CredentialInfo"*, i32, %"class.absl::optional"*, %"class.absl::optional"*, %class.GURL*, %"class.absl::optional"*, %"class.url::Origin"*)* @_ZN16password_manager14CredentialInfoC2ENS_14CredentialTypeEN4absl8optionalINSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEESB_4GURLSB_N3url6OriginE
@_ZN16password_manager14CredentialInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.password_manager::CredentialInfo"*, %"struct.password_manager::CredentialInfo"*), void (%"struct.password_manager::CredentialInfo"*, %"struct.password_manager::CredentialInfo"*)* @_ZN16password_manager14CredentialInfoC2ERKS0_
@_ZN16password_manager14CredentialInfoD1Ev = hidden unnamed_addr alias void (%"struct.password_manager::CredentialInfo"*), void (%"struct.password_manager::CredentialInfo"*)* @_ZN16password_manager14CredentialInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager22CredentialTypeToStringENS_14CredentialTypeE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  switch i32 %1, label %22 [
    i32 0, label %4
    i32 1, label %10
    i32 2, label %16
  ]

4:                                                ; preds = %2
  %5 = tail call i8* @_Znwm(i64 48) #10
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %8, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i64 37, i1 false) #11
  %9 = getelementptr inbounds i8, i8* %5, i64 37
  store i8 0, i8* %9, align 1
  br label %35

10:                                               ; preds = %2
  %11 = tail call i8* @_Znwm(i64 48) #10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 40, i64 -9223372036854775760>, <2 x i64>* %14, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i64 40, i1 false) #11
  %15 = getelementptr inbounds i8, i8* %11, i64 40
  store i8 0, i8* %15, align 1
  br label %35

16:                                               ; preds = %2
  %17 = tail call i8* @_Znwm(i64 48) #10
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i64* %19 to <2 x i64>*
  store <2 x i64> <i64 41, i64 -9223372036854775760>, <2 x i64>* %20, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i64 41, i1 false) #11
  %21 = getelementptr inbounds i8, i8* %17, i64 41
  store i8 0, i8* %21, align 1
  br label %35

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %3, i32 %1) #11
  %24 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %3, i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0)) #11, !noalias !2
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #11, !noalias !2
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %22, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  br label %35

35:                                               ; preds = %34, %16, %10, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN16password_managerlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_14CredentialTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  call void @_ZN16password_manager22CredentialTypeToStringENS_14CredentialTypeE(%"class.std::__1::basic_string"* nonnull sret %3, i32 %1)
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %7 to i64
  %14 = select i1 %8, i8* %10, i8* %4
  %15 = select i1 %8, i64 %12, i64 %13
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %14, i64 %15) #11
  %17 = load i8, i8* %6, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %2, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret %"class.std::__1::basic_ostream"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager14CredentialInfoC2Ev(%"struct.password_manager::CredentialInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %union.anon.1* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 3
  %8 = bitcast %union.anon.1* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false)
  tail call void @_ZN4GURLC1Ev(%class.GURL* %7) #11
  %9 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon.1* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11
  %12 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 5
  tail call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %12) #11
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

declare void @_ZN3url6OriginC1Ev(%"class.url::Origin"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager14CredentialInfoC2ENS_14CredentialTypeEN4absl8optionalINSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEESB_4GURLSB_N3url6OriginE(%"struct.password_manager::CredentialInfo"*, i32, %"class.absl::optional"* nocapture, %"class.absl::optional"* nocapture, %class.GURL*, %"class.absl::optional"* nocapture, %"class.url::Origin"*) unnamed_addr #0 align 2 {
  %8 = alloca [15 x i8], align 8
  %9 = alloca %"class.url::Origin", align 8
  %10 = alloca %"class.url::Origin", align 8
  %11 = alloca [15 x i8], align 8
  %12 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #11
  %15 = load i8, i8* %14, align 8, !range !5
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = bitcast %"class.std::__1::basic_string.2"* %19 to i8*
  %21 = bitcast %"class.std::__1::basic_string.2"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %13, align 8
  br label %22

22:                                               ; preds = %7, %17
  %23 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #11
  %25 = load i8, i8* %24, align 8, !range !5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = bitcast %"class.std::__1::basic_string.2"* %29 to i8*
  %31 = bitcast %"class.std::__1::basic_string.2"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %23, align 8
  br label %32

32:                                               ; preds = %22, %27
  %33 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 3
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %33, %class.GURL* dereferenceable(120) %4) #11
  %34 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false) #11
  %36 = load i8, i8* %35, align 8, !range !5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = bitcast %"class.std::__1::basic_string.2"* %40 to i8*
  %42 = bitcast %"class.std::__1::basic_string.2"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %34, align 8
  br label %43

43:                                               ; preds = %32, %38
  %44 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 5
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %44, %"class.url::Origin"* dereferenceable(80) %6) #11
  switch i32 %1, label %102 [
    i32 0, label %45
    i32 1, label %73
    i32 2, label %76
  ]

45:                                               ; preds = %43
  %46 = getelementptr inbounds [15 x i8], [15 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %46)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 15, i1 false)
  %47 = load i8, i8* %35, align 8, !range !5
  %48 = icmp eq i8 %47, 0
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %48, label %64, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.std::__1::basic_string.2"* %49 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = bitcast %"class.std::__1::basic_string.2"* %49 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %55, %50
  %59 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast %union.anon.1* %59 to i8**
  store i8* null, i8** %60, align 8
  %61 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast i64* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %46, i64 15, i1 false)
  %63 = getelementptr inbounds i8, i8* %35, i64 31
  store i8 0, i8* %63, align 1
  br label %70

64:                                               ; preds = %45
  %65 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast %union.anon.1* %65 to i8**
  store i8* null, i8** %66, align 8
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast i64* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %46, i64 15, i1 false)
  %69 = getelementptr inbounds i8, i8* %35, i64 31
  store i8 0, i8* %69, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 15, i1 false)
  store i8 1, i8* %35, align 8
  br label %70

70:                                               ; preds = %64, %58
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %46)
  %71 = bitcast %"class.url::Origin"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %71) #11
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* nonnull %9) #11
  %72 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %6, %"class.url::Origin"* nonnull dereferenceable(80) %9) #11
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %71) #11
  br label %102

73:                                               ; preds = %43
  %74 = bitcast %"class.url::Origin"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %74) #11
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* nonnull %10) #11
  %75 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %6, %"class.url::Origin"* nonnull dereferenceable(80) %10) #11
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %74) #11
  br label %102

76:                                               ; preds = %43
  %77 = getelementptr inbounds [15 x i8], [15 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %77)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 15, i1 false)
  %78 = load i8, i8* %35, align 8, !range !5
  %79 = icmp eq i8 %78, 0
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %79, label %95, label %81

81:                                               ; preds = %76
  %82 = bitcast %"class.std::__1::basic_string.2"* %80 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %82, i64 0, i32 1, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  %87 = bitcast %"class.std::__1::basic_string.2"* %80 to i8**
  %88 = load i8*, i8** %87, align 8
  tail call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %86, %81
  %90 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %91 = bitcast %union.anon.1* %90 to i8**
  store i8* null, i8** %91, align 8
  %92 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast i64* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* nonnull align 8 %77, i64 15, i1 false)
  %94 = getelementptr inbounds i8, i8* %35, i64 31
  store i8 0, i8* %94, align 1
  br label %101

95:                                               ; preds = %76
  %96 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %97 = bitcast %union.anon.1* %96 to i8**
  store i8* null, i8** %97, align 8
  %98 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = bitcast i64* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %77, i64 15, i1 false)
  %100 = getelementptr inbounds i8, i8* %35, i64 31
  store i8 0, i8* %100, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 15, i1 false)
  store i8 1, i8* %35, align 8
  br label %101

101:                                              ; preds = %95, %89
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %77)
  br label %102

102:                                              ; preds = %43, %101, %73, %70
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager14CredentialInfoC2ERKS0_(%"struct.password_manager::CredentialInfo"*, %"struct.password_manager::CredentialInfo"* dereferenceable(304)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #11
  %8 = load i8, i8* %7, align 8, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %196, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string.2"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string.2"* %12 to i8*
  %19 = bitcast %"class.std::__1::basic_string.2"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #11
  br label %195

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string.2"* %12 to i16*
  %28 = trunc i64 %24 to i8
  %29 = bitcast %"class.std::__1::basic_string.2"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 %28, i8* %30, align 1
  br label %48

31:                                               ; preds = %20
  %32 = icmp ugt i64 %24, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::basic_string.2"* %12 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #12
  unreachable

35:                                               ; preds = %31
  %36 = add nuw nsw i64 %24, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #12
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #10
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast %"class.std::__1::basic_string.2"* %12 to i8**
  store i8* %42, i8** %44, align 8
  %45 = or i64 %37, -9223372036854775808
  %46 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %47, align 8
  br label %48

48:                                               ; preds = %40, %26
  %49 = phi i16* [ %27, %26 ], [ %43, %40 ]
  %50 = add nuw nsw i64 %24, 1
  %51 = add i64 %24, 1
  %52 = icmp ult i64 %51, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %48
  %54 = add i64 %24, 1
  %55 = getelementptr i16, i16* %49, i64 %54
  %56 = getelementptr i16, i16* %22, i64 %54
  %57 = icmp ult i16* %49, %56
  %58 = icmp ult i16* %22, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %51, -16
  %62 = sub i64 %50, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %49, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %49, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !6
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !6
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !9, !noalias !6
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !9, !noalias !6
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %49, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !6
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !6
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !9, !noalias !6
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !9, !noalias !6
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %49, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !6
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !6
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !9, !noalias !6
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !9, !noalias !6
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %49, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !6
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !6
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !9, !noalias !6
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !9, !noalias !6
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !11

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %49, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !6
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !6
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !9, !noalias !6
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !9, !noalias !6
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !13

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %51, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %48
  %143 = phi i64 [ %50, %53 ], [ %50, %48 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %48 ], [ %63, %140 ]
  %145 = phi i16* [ %49, %53 ], [ %49, %48 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !15

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !16

195:                                              ; preds = %160, %165, %140, %17
  store i8 1, i8* %6, align 8
  br label %196

196:                                              ; preds = %2, %195
  %197 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 32, i1 false) #11
  %199 = load i8, i8* %198, align 8, !range !5
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %387, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %203 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %204 = bitcast %"class.std::__1::basic_string.2"* %202 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  %206 = load i8, i8* %205, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %211, label %208

208:                                              ; preds = %201
  %209 = bitcast %"class.std::__1::basic_string.2"* %203 to i8*
  %210 = bitcast %"class.std::__1::basic_string.2"* %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 8 %210, i64 24, i1 false) #11
  br label %386

211:                                              ; preds = %201
  %212 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i16*, i16** %212, align 8
  %214 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = icmp ult i64 %215, 11
  br i1 %216, label %217, label %222

217:                                              ; preds = %211
  %218 = bitcast %"class.std::__1::basic_string.2"* %203 to i16*
  %219 = trunc i64 %215 to i8
  %220 = bitcast %"class.std::__1::basic_string.2"* %203 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %220, i64 0, i32 1, i32 1
  store i8 %219, i8* %221, align 1
  br label %239

222:                                              ; preds = %211
  %223 = icmp ugt i64 %215, 9223372036854775791
  br i1 %223, label %224, label %226

224:                                              ; preds = %222
  %225 = bitcast %"class.std::__1::basic_string.2"* %203 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %225) #12
  unreachable

226:                                              ; preds = %222
  %227 = add nuw nsw i64 %215, 8
  %228 = and i64 %227, -8
  %229 = icmp slt i64 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %226
  tail call void @abort() #12
  unreachable

231:                                              ; preds = %226
  %232 = shl i64 %228, 1
  %233 = tail call i8* @_Znwm(i64 %232) #10
  %234 = bitcast i8* %233 to i16*
  %235 = bitcast %"class.std::__1::basic_string.2"* %203 to i8**
  store i8* %233, i8** %235, align 8
  %236 = or i64 %228, -9223372036854775808
  %237 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %215, i64* %238, align 8
  br label %239

239:                                              ; preds = %231, %217
  %240 = phi i16* [ %218, %217 ], [ %234, %231 ]
  %241 = add nuw nsw i64 %215, 1
  %242 = add i64 %215, 1
  %243 = icmp ult i64 %242, 16
  br i1 %243, label %333, label %244

244:                                              ; preds = %239
  %245 = add i64 %215, 1
  %246 = getelementptr i16, i16* %240, i64 %245
  %247 = getelementptr i16, i16* %213, i64 %245
  %248 = icmp ult i16* %240, %247
  %249 = icmp ult i16* %213, %246
  %250 = and i1 %248, %249
  br i1 %250, label %333, label %251

251:                                              ; preds = %244
  %252 = and i64 %242, -16
  %253 = sub i64 %241, %252
  %254 = getelementptr i16, i16* %213, i64 %252
  %255 = getelementptr i16, i16* %240, i64 %252
  %256 = add i64 %252, -16
  %257 = lshr exact i64 %256, 4
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 3
  %260 = icmp ult i64 %256, 48
  br i1 %260, label %312, label %261

261:                                              ; preds = %251
  %262 = sub nsw i64 %258, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 0, %261 ], [ %309, %263 ]
  %265 = phi i64 [ %262, %261 ], [ %310, %263 ]
  %266 = getelementptr i16, i16* %213, i64 %264
  %267 = getelementptr i16, i16* %240, i64 %264
  %268 = bitcast i16* %266 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !17
  %270 = getelementptr i16, i16* %266, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !17
  %273 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %273, align 2, !alias.scope !20, !noalias !17
  %274 = getelementptr i16, i16* %267, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %275, align 2, !alias.scope !20, !noalias !17
  %276 = or i64 %264, 16
  %277 = getelementptr i16, i16* %213, i64 %276
  %278 = getelementptr i16, i16* %240, i64 %276
  %279 = bitcast i16* %277 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !17
  %281 = getelementptr i16, i16* %277, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !17
  %284 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %284, align 2, !alias.scope !20, !noalias !17
  %285 = getelementptr i16, i16* %278, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %286, align 2, !alias.scope !20, !noalias !17
  %287 = or i64 %264, 32
  %288 = getelementptr i16, i16* %213, i64 %287
  %289 = getelementptr i16, i16* %240, i64 %287
  %290 = bitcast i16* %288 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !17
  %292 = getelementptr i16, i16* %288, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !17
  %295 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %295, align 2, !alias.scope !20, !noalias !17
  %296 = getelementptr i16, i16* %289, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %294, <8 x i16>* %297, align 2, !alias.scope !20, !noalias !17
  %298 = or i64 %264, 48
  %299 = getelementptr i16, i16* %213, i64 %298
  %300 = getelementptr i16, i16* %240, i64 %298
  %301 = bitcast i16* %299 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !17
  %303 = getelementptr i16, i16* %299, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !17
  %306 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %306, align 2, !alias.scope !20, !noalias !17
  %307 = getelementptr i16, i16* %300, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %308, align 2, !alias.scope !20, !noalias !17
  %309 = add i64 %264, 64
  %310 = add i64 %265, -4
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %263, !llvm.loop !22

312:                                              ; preds = %263, %251
  %313 = phi i64 [ 0, %251 ], [ %309, %263 ]
  %314 = icmp eq i64 %259, 0
  br i1 %314, label %331, label %315

315:                                              ; preds = %312, %315
  %316 = phi i64 [ %328, %315 ], [ %313, %312 ]
  %317 = phi i64 [ %329, %315 ], [ %259, %312 ]
  %318 = getelementptr i16, i16* %213, i64 %316
  %319 = getelementptr i16, i16* %240, i64 %316
  %320 = bitcast i16* %318 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !17
  %322 = getelementptr i16, i16* %318, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  %324 = load <8 x i16>, <8 x i16>* %323, align 2, !alias.scope !17
  %325 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %325, align 2, !alias.scope !20, !noalias !17
  %326 = getelementptr i16, i16* %319, i64 8
  %327 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %324, <8 x i16>* %327, align 2, !alias.scope !20, !noalias !17
  %328 = add i64 %316, 16
  %329 = add i64 %317, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %315, !llvm.loop !23

331:                                              ; preds = %315, %312
  %332 = icmp eq i64 %242, %252
  br i1 %332, label %386, label %333

333:                                              ; preds = %331, %244, %239
  %334 = phi i64 [ %241, %244 ], [ %241, %239 ], [ %253, %331 ]
  %335 = phi i16* [ %213, %244 ], [ %213, %239 ], [ %254, %331 ]
  %336 = phi i16* [ %240, %244 ], [ %240, %239 ], [ %255, %331 ]
  %337 = add i64 %334, -1
  %338 = and i64 %334, 7
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %351, label %340

340:                                              ; preds = %333, %340
  %341 = phi i64 [ %346, %340 ], [ %334, %333 ]
  %342 = phi i16* [ %348, %340 ], [ %335, %333 ]
  %343 = phi i16* [ %347, %340 ], [ %336, %333 ]
  %344 = phi i64 [ %349, %340 ], [ %338, %333 ]
  %345 = load i16, i16* %342, align 2
  store i16 %345, i16* %343, align 2
  %346 = add i64 %341, -1
  %347 = getelementptr inbounds i16, i16* %343, i64 1
  %348 = getelementptr inbounds i16, i16* %342, i64 1
  %349 = add i64 %344, -1
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %351, label %340, !llvm.loop !24

351:                                              ; preds = %340, %333
  %352 = phi i64 [ %334, %333 ], [ %346, %340 ]
  %353 = phi i16* [ %335, %333 ], [ %348, %340 ]
  %354 = phi i16* [ %336, %333 ], [ %347, %340 ]
  %355 = icmp ult i64 %337, 7
  br i1 %355, label %386, label %356

356:                                              ; preds = %351, %356
  %357 = phi i64 [ %382, %356 ], [ %352, %351 ]
  %358 = phi i16* [ %384, %356 ], [ %353, %351 ]
  %359 = phi i16* [ %383, %356 ], [ %354, %351 ]
  %360 = load i16, i16* %358, align 2
  store i16 %360, i16* %359, align 2
  %361 = getelementptr inbounds i16, i16* %359, i64 1
  %362 = getelementptr inbounds i16, i16* %358, i64 1
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %359, i64 2
  %365 = getelementptr inbounds i16, i16* %358, i64 2
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %359, i64 3
  %368 = getelementptr inbounds i16, i16* %358, i64 3
  %369 = load i16, i16* %368, align 2
  store i16 %369, i16* %367, align 2
  %370 = getelementptr inbounds i16, i16* %359, i64 4
  %371 = getelementptr inbounds i16, i16* %358, i64 4
  %372 = load i16, i16* %371, align 2
  store i16 %372, i16* %370, align 2
  %373 = getelementptr inbounds i16, i16* %359, i64 5
  %374 = getelementptr inbounds i16, i16* %358, i64 5
  %375 = load i16, i16* %374, align 2
  store i16 %375, i16* %373, align 2
  %376 = getelementptr inbounds i16, i16* %359, i64 6
  %377 = getelementptr inbounds i16, i16* %358, i64 6
  %378 = load i16, i16* %377, align 2
  store i16 %378, i16* %376, align 2
  %379 = getelementptr inbounds i16, i16* %359, i64 7
  %380 = getelementptr inbounds i16, i16* %358, i64 7
  %381 = load i16, i16* %380, align 2
  store i16 %381, i16* %379, align 2
  %382 = add i64 %357, -8
  %383 = getelementptr inbounds i16, i16* %359, i64 8
  %384 = getelementptr inbounds i16, i16* %358, i64 8
  %385 = icmp eq i64 %382, 0
  br i1 %385, label %386, label %356, !llvm.loop !25

386:                                              ; preds = %351, %356, %331, %208
  store i8 1, i8* %197, align 8
  br label %387

387:                                              ; preds = %196, %386
  %388 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 3
  %389 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 3
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %388, %class.GURL* dereferenceable(120) %389) #11
  %390 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %391 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %390, i8 0, i64 32, i1 false) #11
  %392 = load i8, i8* %391, align 8, !range !5
  %393 = icmp eq i8 %392, 0
  br i1 %393, label %580, label %394

394:                                              ; preds = %387
  %395 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %396 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %397 = bitcast %"class.std::__1::basic_string.2"* %395 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %397, i64 0, i32 1, i32 1
  %399 = load i8, i8* %398, align 1
  %400 = icmp slt i8 %399, 0
  br i1 %400, label %404, label %401

401:                                              ; preds = %394
  %402 = bitcast %"class.std::__1::basic_string.2"* %396 to i8*
  %403 = bitcast %"class.std::__1::basic_string.2"* %395 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %402, i8* align 8 %403, i64 24, i1 false) #11
  br label %579

404:                                              ; preds = %394
  %405 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %395, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = load i16*, i16** %405, align 8
  %407 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %408 = load i64, i64* %407, align 8
  %409 = icmp ult i64 %408, 11
  br i1 %409, label %410, label %415

410:                                              ; preds = %404
  %411 = bitcast %"class.std::__1::basic_string.2"* %396 to i16*
  %412 = trunc i64 %408 to i8
  %413 = bitcast %"class.std::__1::basic_string.2"* %396 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %414 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %413, i64 0, i32 1, i32 1
  store i8 %412, i8* %414, align 1
  br label %432

415:                                              ; preds = %404
  %416 = icmp ugt i64 %408, 9223372036854775791
  br i1 %416, label %417, label %419

417:                                              ; preds = %415
  %418 = bitcast %"class.std::__1::basic_string.2"* %396 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %418) #12
  unreachable

419:                                              ; preds = %415
  %420 = add nuw nsw i64 %408, 8
  %421 = and i64 %420, -8
  %422 = icmp slt i64 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %419
  tail call void @abort() #12
  unreachable

424:                                              ; preds = %419
  %425 = shl i64 %421, 1
  %426 = tail call i8* @_Znwm(i64 %425) #10
  %427 = bitcast i8* %426 to i16*
  %428 = bitcast %"class.std::__1::basic_string.2"* %396 to i8**
  store i8* %426, i8** %428, align 8
  %429 = or i64 %421, -9223372036854775808
  %430 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %429, i64* %430, align 8
  %431 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %408, i64* %431, align 8
  br label %432

432:                                              ; preds = %424, %410
  %433 = phi i16* [ %411, %410 ], [ %427, %424 ]
  %434 = add nuw nsw i64 %408, 1
  %435 = add i64 %408, 1
  %436 = icmp ult i64 %435, 16
  br i1 %436, label %526, label %437

437:                                              ; preds = %432
  %438 = add i64 %408, 1
  %439 = getelementptr i16, i16* %433, i64 %438
  %440 = getelementptr i16, i16* %406, i64 %438
  %441 = icmp ult i16* %433, %440
  %442 = icmp ult i16* %406, %439
  %443 = and i1 %441, %442
  br i1 %443, label %526, label %444

444:                                              ; preds = %437
  %445 = and i64 %435, -16
  %446 = sub i64 %434, %445
  %447 = getelementptr i16, i16* %406, i64 %445
  %448 = getelementptr i16, i16* %433, i64 %445
  %449 = add i64 %445, -16
  %450 = lshr exact i64 %449, 4
  %451 = add nuw nsw i64 %450, 1
  %452 = and i64 %451, 3
  %453 = icmp ult i64 %449, 48
  br i1 %453, label %505, label %454

454:                                              ; preds = %444
  %455 = sub nsw i64 %451, %452
  br label %456

456:                                              ; preds = %456, %454
  %457 = phi i64 [ 0, %454 ], [ %502, %456 ]
  %458 = phi i64 [ %455, %454 ], [ %503, %456 ]
  %459 = getelementptr i16, i16* %406, i64 %457
  %460 = getelementptr i16, i16* %433, i64 %457
  %461 = bitcast i16* %459 to <8 x i16>*
  %462 = load <8 x i16>, <8 x i16>* %461, align 2, !alias.scope !26
  %463 = getelementptr i16, i16* %459, i64 8
  %464 = bitcast i16* %463 to <8 x i16>*
  %465 = load <8 x i16>, <8 x i16>* %464, align 2, !alias.scope !26
  %466 = bitcast i16* %460 to <8 x i16>*
  store <8 x i16> %462, <8 x i16>* %466, align 2, !alias.scope !29, !noalias !26
  %467 = getelementptr i16, i16* %460, i64 8
  %468 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %465, <8 x i16>* %468, align 2, !alias.scope !29, !noalias !26
  %469 = or i64 %457, 16
  %470 = getelementptr i16, i16* %406, i64 %469
  %471 = getelementptr i16, i16* %433, i64 %469
  %472 = bitcast i16* %470 to <8 x i16>*
  %473 = load <8 x i16>, <8 x i16>* %472, align 2, !alias.scope !26
  %474 = getelementptr i16, i16* %470, i64 8
  %475 = bitcast i16* %474 to <8 x i16>*
  %476 = load <8 x i16>, <8 x i16>* %475, align 2, !alias.scope !26
  %477 = bitcast i16* %471 to <8 x i16>*
  store <8 x i16> %473, <8 x i16>* %477, align 2, !alias.scope !29, !noalias !26
  %478 = getelementptr i16, i16* %471, i64 8
  %479 = bitcast i16* %478 to <8 x i16>*
  store <8 x i16> %476, <8 x i16>* %479, align 2, !alias.scope !29, !noalias !26
  %480 = or i64 %457, 32
  %481 = getelementptr i16, i16* %406, i64 %480
  %482 = getelementptr i16, i16* %433, i64 %480
  %483 = bitcast i16* %481 to <8 x i16>*
  %484 = load <8 x i16>, <8 x i16>* %483, align 2, !alias.scope !26
  %485 = getelementptr i16, i16* %481, i64 8
  %486 = bitcast i16* %485 to <8 x i16>*
  %487 = load <8 x i16>, <8 x i16>* %486, align 2, !alias.scope !26
  %488 = bitcast i16* %482 to <8 x i16>*
  store <8 x i16> %484, <8 x i16>* %488, align 2, !alias.scope !29, !noalias !26
  %489 = getelementptr i16, i16* %482, i64 8
  %490 = bitcast i16* %489 to <8 x i16>*
  store <8 x i16> %487, <8 x i16>* %490, align 2, !alias.scope !29, !noalias !26
  %491 = or i64 %457, 48
  %492 = getelementptr i16, i16* %406, i64 %491
  %493 = getelementptr i16, i16* %433, i64 %491
  %494 = bitcast i16* %492 to <8 x i16>*
  %495 = load <8 x i16>, <8 x i16>* %494, align 2, !alias.scope !26
  %496 = getelementptr i16, i16* %492, i64 8
  %497 = bitcast i16* %496 to <8 x i16>*
  %498 = load <8 x i16>, <8 x i16>* %497, align 2, !alias.scope !26
  %499 = bitcast i16* %493 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %499, align 2, !alias.scope !29, !noalias !26
  %500 = getelementptr i16, i16* %493, i64 8
  %501 = bitcast i16* %500 to <8 x i16>*
  store <8 x i16> %498, <8 x i16>* %501, align 2, !alias.scope !29, !noalias !26
  %502 = add i64 %457, 64
  %503 = add i64 %458, -4
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %456, !llvm.loop !31

505:                                              ; preds = %456, %444
  %506 = phi i64 [ 0, %444 ], [ %502, %456 ]
  %507 = icmp eq i64 %452, 0
  br i1 %507, label %524, label %508

508:                                              ; preds = %505, %508
  %509 = phi i64 [ %521, %508 ], [ %506, %505 ]
  %510 = phi i64 [ %522, %508 ], [ %452, %505 ]
  %511 = getelementptr i16, i16* %406, i64 %509
  %512 = getelementptr i16, i16* %433, i64 %509
  %513 = bitcast i16* %511 to <8 x i16>*
  %514 = load <8 x i16>, <8 x i16>* %513, align 2, !alias.scope !26
  %515 = getelementptr i16, i16* %511, i64 8
  %516 = bitcast i16* %515 to <8 x i16>*
  %517 = load <8 x i16>, <8 x i16>* %516, align 2, !alias.scope !26
  %518 = bitcast i16* %512 to <8 x i16>*
  store <8 x i16> %514, <8 x i16>* %518, align 2, !alias.scope !29, !noalias !26
  %519 = getelementptr i16, i16* %512, i64 8
  %520 = bitcast i16* %519 to <8 x i16>*
  store <8 x i16> %517, <8 x i16>* %520, align 2, !alias.scope !29, !noalias !26
  %521 = add i64 %509, 16
  %522 = add i64 %510, -1
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %524, label %508, !llvm.loop !32

524:                                              ; preds = %508, %505
  %525 = icmp eq i64 %435, %445
  br i1 %525, label %579, label %526

526:                                              ; preds = %524, %437, %432
  %527 = phi i64 [ %434, %437 ], [ %434, %432 ], [ %446, %524 ]
  %528 = phi i16* [ %406, %437 ], [ %406, %432 ], [ %447, %524 ]
  %529 = phi i16* [ %433, %437 ], [ %433, %432 ], [ %448, %524 ]
  %530 = add i64 %527, -1
  %531 = and i64 %527, 7
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %544, label %533

533:                                              ; preds = %526, %533
  %534 = phi i64 [ %539, %533 ], [ %527, %526 ]
  %535 = phi i16* [ %541, %533 ], [ %528, %526 ]
  %536 = phi i16* [ %540, %533 ], [ %529, %526 ]
  %537 = phi i64 [ %542, %533 ], [ %531, %526 ]
  %538 = load i16, i16* %535, align 2
  store i16 %538, i16* %536, align 2
  %539 = add i64 %534, -1
  %540 = getelementptr inbounds i16, i16* %536, i64 1
  %541 = getelementptr inbounds i16, i16* %535, i64 1
  %542 = add i64 %537, -1
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %533, !llvm.loop !33

544:                                              ; preds = %533, %526
  %545 = phi i64 [ %527, %526 ], [ %539, %533 ]
  %546 = phi i16* [ %528, %526 ], [ %541, %533 ]
  %547 = phi i16* [ %529, %526 ], [ %540, %533 ]
  %548 = icmp ult i64 %530, 7
  br i1 %548, label %579, label %549

549:                                              ; preds = %544, %549
  %550 = phi i64 [ %575, %549 ], [ %545, %544 ]
  %551 = phi i16* [ %577, %549 ], [ %546, %544 ]
  %552 = phi i16* [ %576, %549 ], [ %547, %544 ]
  %553 = load i16, i16* %551, align 2
  store i16 %553, i16* %552, align 2
  %554 = getelementptr inbounds i16, i16* %552, i64 1
  %555 = getelementptr inbounds i16, i16* %551, i64 1
  %556 = load i16, i16* %555, align 2
  store i16 %556, i16* %554, align 2
  %557 = getelementptr inbounds i16, i16* %552, i64 2
  %558 = getelementptr inbounds i16, i16* %551, i64 2
  %559 = load i16, i16* %558, align 2
  store i16 %559, i16* %557, align 2
  %560 = getelementptr inbounds i16, i16* %552, i64 3
  %561 = getelementptr inbounds i16, i16* %551, i64 3
  %562 = load i16, i16* %561, align 2
  store i16 %562, i16* %560, align 2
  %563 = getelementptr inbounds i16, i16* %552, i64 4
  %564 = getelementptr inbounds i16, i16* %551, i64 4
  %565 = load i16, i16* %564, align 2
  store i16 %565, i16* %563, align 2
  %566 = getelementptr inbounds i16, i16* %552, i64 5
  %567 = getelementptr inbounds i16, i16* %551, i64 5
  %568 = load i16, i16* %567, align 2
  store i16 %568, i16* %566, align 2
  %569 = getelementptr inbounds i16, i16* %552, i64 6
  %570 = getelementptr inbounds i16, i16* %551, i64 6
  %571 = load i16, i16* %570, align 2
  store i16 %571, i16* %569, align 2
  %572 = getelementptr inbounds i16, i16* %552, i64 7
  %573 = getelementptr inbounds i16, i16* %551, i64 7
  %574 = load i16, i16* %573, align 2
  store i16 %574, i16* %572, align 2
  %575 = add i64 %550, -8
  %576 = getelementptr inbounds i16, i16* %552, i64 8
  %577 = getelementptr inbounds i16, i16* %551, i64 8
  %578 = icmp eq i64 %575, 0
  br i1 %578, label %579, label %549, !llvm.loop !34

579:                                              ; preds = %544, %549, %524, %401
  store i8 1, i8* %390, align 8
  br label %580

580:                                              ; preds = %387, %579
  %581 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 5
  %582 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 5
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %581, %"class.url::Origin"* dereferenceable(80) %582) #11
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager14CredentialInfoD2Ev(%"struct.password_manager::CredentialInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 5
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %2) #11
  %3 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !5
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = bitcast %"class.std::__1::basic_string.2"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = bitcast %"class.std::__1::basic_string.2"* %7 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %12, %6
  store i8 0, i8* %3, align 8
  br label %16

16:                                               ; preds = %1, %15
  %17 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 3
  tail call void @_ZN4GURLD1Ev(%class.GURL* %17) #11
  %18 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !5
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = bitcast %"class.std::__1::basic_string.2"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::basic_string.2"* %22 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %27, %21
  store i8 0, i8* %18, align 8
  br label %31

31:                                               ; preds = %16, %30
  %32 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = bitcast %"class.std::__1::basic_string.2"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::basic_string.2"* %36 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %41, %35
  store i8 0, i8* %32, align 8
  br label %45

45:                                               ; preds = %31, %44
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16password_manager14CredentialInfoeqERKS0_(%"struct.password_manager::CredentialInfo"*, %"struct.password_manager::CredentialInfo"* dereferenceable(304)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %250

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp ne i8 %12, 0
  %14 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !5
  %16 = icmp ne i8 %15, 0
  %17 = xor i1 %13, %16
  %18 = xor i1 %13, true
  %19 = or i1 %17, %18
  br i1 %19, label %66, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = icmp eq i8 %15, 0
  br i1 %22, label %23, label %24, !prof !35

23:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::basic_string.2"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = bitcast %"class.std::__1::basic_string.2"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = icmp eq i64 %33, %41
  br i1 %42, label %43, label %250

43:                                               ; preds = %24
  %44 = icmp eq i64 %33, 0
  br i1 %44, label %67, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i16*, i16** %46, align 8
  %48 = bitcast %"class.std::__1::basic_string.2"* %25 to i16*
  %49 = select i1 %37, i16* %47, i16* %48
  %50 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = bitcast %"class.std::__1::basic_string.2"* %21 to i16*
  %53 = select i1 %29, i16* %51, i16* %52
  br label %54

54:                                               ; preds = %61, %45
  %55 = phi i64 [ %62, %61 ], [ %33, %45 ]
  %56 = phi i16* [ %64, %61 ], [ %49, %45 ]
  %57 = phi i16* [ %63, %61 ], [ %53, %45 ]
  %58 = load i16, i16* %57, align 2
  %59 = load i16, i16* %56, align 2
  %60 = icmp eq i16 %59, %58
  br i1 %60, label %61, label %250

61:                                               ; preds = %54
  %62 = add i64 %55, -1
  %63 = getelementptr inbounds i16, i16* %57, i64 1
  %64 = getelementptr inbounds i16, i16* %56, i64 1
  %65 = icmp eq i64 %62, 0
  br i1 %65, label %67, label %54

66:                                               ; preds = %10
  br i1 %17, label %250, label %67

67:                                               ; preds = %61, %66, %43
  %68 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !5
  %70 = icmp ne i8 %69, 0
  %71 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !5
  %73 = icmp ne i8 %72, 0
  %74 = xor i1 %70, %73
  %75 = xor i1 %70, true
  %76 = or i1 %74, %75
  br i1 %76, label %123, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = icmp eq i8 %72, 0
  br i1 %79, label %80, label %81, !prof !35

80:                                               ; preds = %77
  tail call void @llvm.trap() #11
  unreachable

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %83 = bitcast %"class.std::__1::basic_string.2"* %78 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %83, i64 0, i32 1, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %85 to i64
  %90 = select i1 %86, i64 %88, i64 %89
  %91 = bitcast %"class.std::__1::basic_string.2"* %82 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  %95 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = zext i8 %93 to i64
  %98 = select i1 %94, i64 %96, i64 %97
  %99 = icmp eq i64 %90, %98
  br i1 %99, label %100, label %250

100:                                              ; preds = %81
  %101 = icmp eq i64 %90, 0
  br i1 %101, label %124, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i16*, i16** %103, align 8
  %105 = bitcast %"class.std::__1::basic_string.2"* %82 to i16*
  %106 = select i1 %94, i16* %104, i16* %105
  %107 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i16*, i16** %107, align 8
  %109 = bitcast %"class.std::__1::basic_string.2"* %78 to i16*
  %110 = select i1 %86, i16* %108, i16* %109
  br label %111

111:                                              ; preds = %118, %102
  %112 = phi i64 [ %119, %118 ], [ %90, %102 ]
  %113 = phi i16* [ %121, %118 ], [ %106, %102 ]
  %114 = phi i16* [ %120, %118 ], [ %110, %102 ]
  %115 = load i16, i16* %114, align 2
  %116 = load i16, i16* %113, align 2
  %117 = icmp eq i16 %116, %115
  br i1 %117, label %118, label %250

118:                                              ; preds = %111
  %119 = add i64 %112, -1
  %120 = getelementptr inbounds i16, i16* %114, i64 1
  %121 = getelementptr inbounds i16, i16* %113, i64 1
  %122 = icmp eq i64 %119, 0
  br i1 %122, label %124, label %111

123:                                              ; preds = %67
  br i1 %74, label %250, label %124

124:                                              ; preds = %118, %123, %100
  %125 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 3
  %126 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 3
  %127 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %125, %class.GURL* dereferenceable(120) %126) #11
  br i1 %127, label %128, label %250

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %130 = load i8, i8* %129, align 8, !range !5
  %131 = icmp ne i8 %130, 0
  %132 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %133 = load i8, i8* %132, align 8, !range !5
  %134 = icmp ne i8 %133, 0
  %135 = xor i1 %131, %134
  %136 = xor i1 %131, true
  %137 = or i1 %135, %136
  br i1 %137, label %184, label %138

138:                                              ; preds = %128
  %139 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %140 = icmp eq i8 %133, 0
  br i1 %140, label %141, label %142, !prof !35

141:                                              ; preds = %138
  tail call void @llvm.trap() #11
  unreachable

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %144 = bitcast %"class.std::__1::basic_string.2"* %139 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %144, i64 0, i32 1, i32 1
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  %148 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = zext i8 %146 to i64
  %151 = select i1 %147, i64 %149, i64 %150
  %152 = bitcast %"class.std::__1::basic_string.2"* %143 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %152, i64 0, i32 1, i32 1
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  %156 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = load i64, i64* %156, align 8
  %158 = zext i8 %154 to i64
  %159 = select i1 %155, i64 %157, i64 %158
  %160 = icmp eq i64 %151, %159
  br i1 %160, label %161, label %250

161:                                              ; preds = %142
  %162 = icmp eq i64 %151, 0
  br i1 %162, label %185, label %163

163:                                              ; preds = %161
  %164 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i16*, i16** %164, align 8
  %166 = bitcast %"class.std::__1::basic_string.2"* %143 to i16*
  %167 = select i1 %155, i16* %165, i16* %166
  %168 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i16*, i16** %168, align 8
  %170 = bitcast %"class.std::__1::basic_string.2"* %139 to i16*
  %171 = select i1 %147, i16* %169, i16* %170
  br label %172

172:                                              ; preds = %179, %163
  %173 = phi i64 [ %180, %179 ], [ %151, %163 ]
  %174 = phi i16* [ %182, %179 ], [ %167, %163 ]
  %175 = phi i16* [ %181, %179 ], [ %171, %163 ]
  %176 = load i16, i16* %175, align 2
  %177 = load i16, i16* %174, align 2
  %178 = icmp eq i16 %177, %176
  br i1 %178, label %179, label %250

179:                                              ; preds = %172
  %180 = add i64 %173, -1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = getelementptr inbounds i16, i16* %174, i64 1
  %183 = icmp eq i64 %180, 0
  br i1 %183, label %185, label %172

184:                                              ; preds = %128
  br i1 %135, label %250, label %185

185:                                              ; preds = %179, %184, %161
  %186 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #11
  %187 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 5
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.url::Origin"* %187) #11
  %188 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #11
  %189 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %1, i64 0, i32 5
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* %189) #11
  %190 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %190, i64 0, i32 1, i32 0
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  %194 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = zext i8 %192 to i64
  %197 = select i1 %193, i64 %195, i64 %196
  %198 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %203 = load i64, i64* %202, align 8
  %204 = zext i8 %200 to i64
  %205 = select i1 %201, i64 %203, i64 %204
  %206 = icmp eq i64 %197, %205
  br i1 %206, label %207, label %237

207:                                              ; preds = %185
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  %210 = select i1 %193, i8* %209, i8* %186
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = select i1 %201, i8* %212, i8* %188
  %214 = icmp eq i64 %197, 0
  br i1 %193, label %221, label %215

215:                                              ; preds = %207
  br i1 %214, label %237, label %216

216:                                              ; preds = %215
  %217 = ptrtoint i8* %209 to i64
  %218 = trunc i64 %217 to i8
  %219 = load i8, i8* %213, align 1
  %220 = icmp eq i8 %219, %218
  br i1 %220, label %225, label %237

221:                                              ; preds = %207
  br i1 %214, label %237, label %222

222:                                              ; preds = %221
  %223 = call i32 @bcmp(i8* %210, i8* %213, i64 %197) #11
  %224 = icmp eq i32 %223, 0
  br label %237

225:                                              ; preds = %216, %232
  %226 = phi i64 [ %229, %232 ], [ %196, %216 ]
  %227 = phi i8* [ %230, %232 ], [ %186, %216 ]
  %228 = phi i8* [ %233, %232 ], [ %213, %216 ]
  %229 = add i64 %226, -1
  %230 = getelementptr inbounds i8, i8* %227, i64 1
  %231 = icmp eq i64 %229, 0
  br i1 %231, label %237, label %232

232:                                              ; preds = %225
  %233 = getelementptr inbounds i8, i8* %228, i64 1
  %234 = load i8, i8* %230, align 1
  %235 = load i8, i8* %233, align 1
  %236 = icmp eq i8 %234, %235
  br i1 %236, label %225, label %237

237:                                              ; preds = %225, %232, %216, %185, %215, %221, %222
  %238 = phi i1 [ false, %185 ], [ %224, %222 ], [ true, %221 ], [ true, %215 ], [ false, %216 ], [ false, %232 ], [ true, %225 ]
  br i1 %201, label %239, label %243

239:                                              ; preds = %237
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  call void @_ZdlPv(i8* %241) #10
  %242 = load i8, i8* %191, align 1
  br label %243

243:                                              ; preds = %237, %239
  %244 = phi i8 [ %192, %237 ], [ %242, %239 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #11
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %249

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  call void @_ZdlPv(i8* %248) #10
  br label %249

249:                                              ; preds = %243, %246
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #11
  br label %250

250:                                              ; preds = %54, %111, %172, %66, %123, %184, %142, %81, %24, %2, %124, %249
  %251 = phi i1 [ %238, %249 ], [ false, %184 ], [ false, %124 ], [ false, %123 ], [ false, %66 ], [ false, %2 ], [ false, %24 ], [ false, %81 ], [ false, %142 ], [ false, %172 ], [ false, %111 ], [ false, %54 ]
  ret i1 %251
}

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.url::Origin"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !12}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !12}
!32 = distinct !{!32, !14}
!33 = distinct !{!33, !14}
!34 = distinct !{!34, !12}
!35 = !{!"branch_weights", i32 1, i32 2000}
