; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_simple_buffer_allocator.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_simple_buffer_allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.quic::SimpleBufferAllocator" = type { %"class.quic::QuicBufferAllocator" }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }

$_ZN4quic21SimpleBufferAllocatorD0Ev = comdat any

$_ZN4quic19QuicBufferAllocator17MarkAllocatorIdleEv = comdat any

@_ZTVN4quic21SimpleBufferAllocatorE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicBufferAllocator"*)* @_ZN4quic19QuicBufferAllocatorD2Ev to i8*), i8* bitcast (void (%"class.quic::SimpleBufferAllocator"*)* @_ZN4quic21SimpleBufferAllocatorD0Ev to i8*), i8* bitcast (i8* (%"class.quic::SimpleBufferAllocator"*, i64)* @_ZN4quic21SimpleBufferAllocator3NewEm to i8*), i8* bitcast (i8* (%"class.quic::SimpleBufferAllocator"*, i64, i1)* @_ZN4quic21SimpleBufferAllocator3NewEmb to i8*), i8* bitcast (void (%"class.quic::SimpleBufferAllocator"*, i8*)* @_ZN4quic21SimpleBufferAllocator6DeleteEPc to i8*), i8* bitcast (void (%"class.quic::QuicBufferAllocator"*)* @_ZN4quic19QuicBufferAllocator17MarkAllocatorIdleEv to i8*)] }, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull i8* @_ZN4quic21SimpleBufferAllocator3NewEm(%"class.quic::SimpleBufferAllocator"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znam(i64 %1) #6
  ret i8* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4quic21SimpleBufferAllocator3NewEmb(%"class.quic::SimpleBufferAllocator"*, i64, i1 zeroext) unnamed_addr #2 align 2 {
  %4 = bitcast %"class.quic::SimpleBufferAllocator"* %0 to i8* (%"class.quic::SimpleBufferAllocator"*, i64)***
  %5 = load i8* (%"class.quic::SimpleBufferAllocator"*, i64)**, i8* (%"class.quic::SimpleBufferAllocator"*, i64)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.quic::SimpleBufferAllocator"*, i64)*, i8* (%"class.quic::SimpleBufferAllocator"*, i64)** %5, i64 2
  %7 = load i8* (%"class.quic::SimpleBufferAllocator"*, i64)*, i8* (%"class.quic::SimpleBufferAllocator"*, i64)** %6, align 8
  %8 = tail call i8* %7(%"class.quic::SimpleBufferAllocator"* %0, i64 %1) #7
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21SimpleBufferAllocator6DeleteEPc(%"class.quic::SimpleBufferAllocator"* nocapture readnone, i8*) unnamed_addr #2 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %1) #6
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4quic19QuicBufferAllocatorD2Ev(%"class.quic::QuicBufferAllocator"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic21SimpleBufferAllocatorD0Ev(%"class.quic::SimpleBufferAllocator"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::SimpleBufferAllocator", %"class.quic::SimpleBufferAllocator"* %0, i64 0, i32 0
  tail call void @_ZN4quic19QuicBufferAllocatorD2Ev(%"class.quic::QuicBufferAllocator"* %2) #7
  %3 = bitcast %"class.quic::SimpleBufferAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic19QuicBufferAllocator17MarkAllocatorIdleEv(%"class.quic::QuicBufferAllocator"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
