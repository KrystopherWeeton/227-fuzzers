; ModuleID = '../../chrome/browser/ui/views/exclusive_access_bubble_views.cc'
source_filename = "../../chrome/browser/ui/views/exclusive_access_bubble_views.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ExclusiveAccessBubbleViews = type { %class.ExclusiveAccessBubble, %class.FullscreenObserver, %"class.views::WidgetObserver", %class.ExclusiveAccessBubbleViewsContext*, %"class.views::Widget"*, %"class.base::OnceCallback.282", %"class.std::__1::unique_ptr.283", %class.SubtleNotificationView*, %"class.std::__1::basic_string.266", %"class.base::ScopedObservation.295" }
%class.ExclusiveAccessBubble = type { %"class.gfx::AnimationDelegate", %class.ExclusiveAccessManager*, %class.GURL, i32, %"class.base::OneShotTimer", %"class.base::OneShotTimer", %"class.base::OneShotTimer", %"class.base::RepeatingTimer", %"class.gfx::Point" }
%"class.gfx::AnimationDelegate" = type { i32 (...)** }
%class.ExclusiveAccessManager = type { %class.ExclusiveAccessContext*, %class.FullscreenController, %class.KeyboardLockController, %class.MouseLockController }
%class.ExclusiveAccessContext = type opaque
%class.FullscreenController = type { %class.ExclusiveAccessControllerBase.base, %class.GURL, %class.GURL, i32, i8, i8, %"class.content::WebContents"*, i8, [7 x i8], %"class.base::ObserverList", %"class.base::WeakPtrFactory" }
%class.ExclusiveAccessControllerBase.base = type <{ %"class.content::NotificationObserver", %class.ExclusiveAccessManager*, %"class.content::NotificationRegistrar", %"class.content::WebContents"*, i32 }>
%"class.content::NotificationObserver" = type { i32 (...)** }
%"class.content::NotificationRegistrar" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::NotificationRegistrar::Record"*, %"struct.content::NotificationRegistrar::Record"*, %"class.std::__1::__compressed_pair" }
%"struct.content::NotificationRegistrar::Record" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.content::NotificationRegistrar::Record"* }
%"class.content::WebContents" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.9", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.17" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::WeakReference::Flag"* }
%class.KeyboardLockController = type { %class.ExclusiveAccessControllerBase.base, %"class.base::RepeatingCallback", %"class.base::OnceCallback", i32, i32, %"class.base::OneShotTimer", %"class.base::TimeDelta", %"class.base::TickClock"*, %"class.base::circular_deque" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.24", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::TimeTicks"*, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.MouseLockController = type { %class.ExclusiveAccessControllerBase.base, i32, %"class.content::WebContents"*, i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.base::TimeTicks", %"class.base::WeakPtrFactory.28" }
%"class.base::WeakPtrFactory.28" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.GURL* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.25, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.27" }
%class.scoped_refptr.25 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.26" }>
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.27" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.29" }
%"class.base::RepeatingCallback.29" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.gfx::Point" = type { i32, i32 }
%class.FullscreenObserver = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.30" }
%"class.base::WeakPtrFactory.30" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.views::WidgetObserver" = type { %"class.base::CheckedObserver" }
%"class.views::Widget" = type { %"class.views::internal::NativeWidgetDelegate", %"class.ui::EventSource", %"class.views::FocusTraversable", %"class.ui::NativeThemeObserver", %"class.ui::metadata::MetaDataProvider", %"class.views::internal::NativeWidgetPrivate"*, %"class.base::ObserverList.43", %"class.base::ObserverList.47", %"class.base::RepeatingCallbackList", %"class.views::WidgetDelegate"*, %"class.views::Widget"*, %"class.std::__1::unique_ptr.66", %"class.views::NonClientView"*, %"class.std::__1::unique_ptr.275", %"class.views::View"*, i32, i8, i32, i8, i64, i8, i32, i32, %"class.gfx::Rect", i8, i8, i8, i8, i8, i8, i8, %"class.gfx::Point", i8, %"class.std::__1::vector.121", i8, i8, i8, %"class.ui::NativeTheme"*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.281" }
%"class.views::internal::NativeWidgetDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.31" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i64 }
%"class.views::FocusTraversable" = type { i32 (...)** }
%"class.ui::NativeThemeObserver" = type { i32 (...)** }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.views::internal::NativeWidgetPrivate" = type opaque
%"class.base::ObserverList.43" = type <{ %"class.std::__1::vector.9", %"class.base::LinkedList.44", i64, i32, [4 x i8] }>
%"class.base::LinkedList.44" = type { %"class.base::LinkNode.45" }
%"class.base::LinkNode.45" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.47" = type <{ %"class.std::__1::vector.48", %"class.base::LinkedList.55", i64, i32, [4 x i8] }>
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.50" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.55" = type { %"class.base::LinkNode.56" }
%"class.base::LinkNode.56" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list.58", i8, %"class.base::RepeatingCallback.29", %"class.base::WeakPtrFactory.65" }
%"class.std::__1::list.58" = type { %"class.std::__1::__list_imp.59" }
%"class.std::__1::__list_imp.59" = type { %"struct.std::__1::__list_node_base.60", %"class.std::__1::__compressed_pair.61" }
%"struct.std::__1::__list_node_base.60" = type { %"struct.std::__1::__list_node_base.60"*, %"struct.std::__1::__list_node_base.60"* }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.base::WeakPtrFactory.65" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.views::WidgetDelegate" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.views::internal::RootView"* }
%"class.views::internal::RootView" = type opaque
%"class.views::NonClientView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::ClientView"*, %"class.std::__1::unique_ptr.260", %"class.views::View"*, %"class.std::__1::basic_string.266" }
%"class.views::View.base" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.121", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.129", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.142", %"class.absl::optional.148", i8, [7 x i8], %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.185", i8, i8, [3 x i8], %"class.std::__1::vector.190", %"class.std::__1::unique_ptr.197", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.230", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.250", %"class.base::ObserverList.256", i32 }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.72", %"class.ui::Layer"*, %"class.base::ObserverList.78" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList.78" = type <{ %"class.std::__1::vector.48", %"class.base::LinkedList.79", i64, i32, [4 x i8] }>
%"class.base::LinkedList.79" = type { %"class.base::LinkNode.80" }
%"class.base::LinkNode.80" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.82", %"class.std::__1::vector.100", %"class.ui::EventHandler"* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.107" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque.84" }
%"class.base::circular_deque.84" = type { %"class.base::internal::VectorBuffer.85", i64, i64 }
%"class.base::internal::VectorBuffer.85" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.100" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.93" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.86" }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.88" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.base::flat_map.96"* }
%"class.base::flat_map.96" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.112" }
%"class.std::__1::map.112" = type { %"class.std::__1::__tree.113" }
%"class.std::__1::__tree.113" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.128 }
%union.anon.128 = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::vector.121"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.12", %"struct.std::__1::atomic.12", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.135, %class.SkTDArray.136, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.135 = type { i8*, i32, i32 }
%class.SkTDArray.136 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.137 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.12" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.137 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.138", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.138" = type { %"struct.std::__1::__atomic_base.139" }
%"struct.std::__1::__atomic_base.139" = type { %"struct.std::__1::__cxx_atomic_impl.140" }
%"struct.std::__1::__cxx_atomic_impl.140" = type { %"struct.std::__1::__cxx_atomic_base_impl.141" }
%"struct.std::__1::__cxx_atomic_base_impl.141" = type { i8 }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.148" = type { %"class.absl::optional_internal::optional_data.149" }
%"class.absl::optional_internal::optional_data.149" = type { %"class.absl::optional_internal::optional_data_base.150" }
%"class.absl::optional_internal::optional_data_base.150" = type { %"class.absl::optional_internal::optional_data_dtor_base.151" }
%"class.absl::optional_internal::optional_data_dtor_base.151" = type { i8, %union.anon.152 }
%union.anon.152 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.views::Background"* }
%"class.views::Background" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.views::Border"* }
%"class.views::Border" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.ui::PaintCache" = type <{ %class.sk_sp.165, float, [4 x i8] }>
%class.sk_sp.165 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.166", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { i8* }
%"class.absl::optional.185" = type { %"class.absl::optional_internal::optional_data.186" }
%"class.absl::optional_internal::optional_data.186" = type { %"class.absl::optional_internal::optional_data_base.187" }
%"class.absl::optional_internal::optional_data_base.187" = type { %"class.absl::optional_internal::optional_data_dtor_base.188" }
%"class.absl::optional_internal::optional_data_dtor_base.188" = type { i8, %union.anon.189 }
%union.anon.189 = type { i8 }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr.203", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.220", i32, [4 x i8], %"class.base::ObserverList.226", i8, i8, i32 }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map.209" }
%"class.std::__1::map.209" = type { %"class.std::__1::__tree.210" }
%"class.std::__1::__tree.210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type opaque
%"class.base::ObserverList.226" = type <{ %"class.std::__1::vector.48", %"class.base::LinkedList.227", i64, i32, [4 x i8] }>
%"class.base::LinkedList.227" = type { %"class.base::LinkNode.228" }
%"class.base::LinkNode.228" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.std::__1::vector.233"* }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"class.ui::Accelerator"*, %"class.ui::Accelerator"*, %"class.std::__1::__compressed_pair.235" }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.ui::Accelerator"* }
%"class.views::ContextMenuController" = type { i32 (...)**, i8, %"class.base::WeakPtrFactory.243" }
%"class.base::WeakPtrFactory.243" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.256" = type <{ %"class.std::__1::vector.48", %"class.base::LinkedList.257", i64, i32, [4 x i8] }>
%"class.base::LinkedList.257" = type { %"class.base::LinkNode.258" }
%"class.base::LinkNode.258" = type { %"class.base::internal::LinkNodeBase" }
%"class.views::ViewTargeterDelegate" = type { i32 (...)** }
%"class.views::ClientView" = type { %"class.views::View.base", %"class.views::View"* }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.views::NonClientFrameView"* }
%"class.views::NonClientFrameView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.views::FocusManager"* }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.121", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.129", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.142", %"class.absl::optional.148", i8, [7 x i8], %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.185", i8, i8, [3 x i8], %"class.std::__1::vector.190", %"class.std::__1::unique_ptr.197", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.230", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.250", %"class.base::ObserverList.256", i32, [4 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.views::View"** }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.170", %"class.base::ObserverList.181", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.170" = type { %"class.std::__1::__tree.171" }
%"class.std::__1::__tree.171" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.base::ObserverList.181" = type <{ %"class.std::__1::vector.48", %"class.base::LinkedList.182", i64, i32, [4 x i8] }>
%"class.base::LinkedList.182" = type { %"class.base::LinkNode.183" }
%"class.base::LinkNode.183" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ScopedObservation" = type { %"class.ui::NativeThemeObserver"*, %"class.ui::NativeTheme"* }
%"class.base::WeakPtrFactory.281" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback.282" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.gfx::SlideAnimation"* }
%"class.gfx::SlideAnimation" = type { %"class.gfx::LinearAnimation.base", %"class.gfx::AnimationDelegate"*, i32, %"class.absl::optional.287", double, double, double, %"class.base::TimeDelta", double }
%"class.gfx::LinearAnimation.base" = type <{ %"class.gfx::Animation", %"class.base::TimeDelta", double, i8 }>
%"class.gfx::Animation" = type { %"class.gfx::AnimationContainerElement", %"class.base::TimeDelta", i8, %"class.gfx::AnimationDelegate"*, %class.scoped_refptr.286, %"class.base::TimeTicks" }
%"class.gfx::AnimationContainerElement" = type { i32 (...)** }
%class.scoped_refptr.286 = type { %"class.gfx::AnimationContainer"* }
%"class.gfx::AnimationContainer" = type opaque
%"class.absl::optional.287" = type { %"class.absl::optional_internal::optional_data.288" }
%"class.absl::optional_internal::optional_data.288" = type { %"class.absl::optional_internal::optional_data_base.289" }
%"class.absl::optional_internal::optional_data_base.289" = type { %"class.absl::optional_internal::optional_data_dtor_base.290" }
%"class.absl::optional_internal::optional_data_dtor_base.290" = type { i8, %union.anon.291 }
%union.anon.291 = type { i32 }
%class.SubtleNotificationView = type { %"class.views::View.base", %"class.SubtleNotificationView::InstructionView"* }
%"class.SubtleNotificationView::InstructionView" = type opaque
%"class.std::__1::basic_string.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.269 }
%union.anon.269 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::ScopedObservation.295" = type { %class.FullscreenObserver*, %class.FullscreenController* }
%class.ExclusiveAccessBubbleViewsContext = type { i32 (...)** }
%"class.ui::AcceleratorProvider" = type { i32 (...)** }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.270 }
%struct.anon.270 = type { %"struct.std::__1::__padding.271", i8 }
%"struct.std::__1::__padding.271" = type { [1 x i8] }
%"class.aura::Window" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.scoped_refptr.302 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN4base17ScopedObservationI20FullscreenController18FullscreenObserverXadL_ZNS1_11AddObserverEPS2_EEXadL_ZNS1_14RemoveObserverES3_EEE7ObserveEPS1_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN3gfx17AnimationDelegate17AnimationCanceledEPKNS_9AnimationE = comdat any

$_ZN3gfx17AnimationDelegate24AnimationContainerWasSetEPNS_18AnimationContainerE = comdat any

$_ZN5views14WidgetObserver15OnWidgetClosingEPNS_6WidgetE = comdat any

$_ZN5views14WidgetObserver15OnWidgetCreatedEPNS_6WidgetE = comdat any

$_ZN5views14WidgetObserver18OnWidgetDestroyingEPNS_6WidgetE = comdat any

$_ZN5views14WidgetObserver21OnWidgetDragWillStartEPNS_6WidgetE = comdat any

$_ZN5views14WidgetObserver20OnWidgetDragCompleteEPNS_6WidgetE = comdat any

$_ZN5views14WidgetObserver26OnWidgetVisibilityChangingEPNS_6WidgetEb = comdat any

$_ZN5views14WidgetObserver25OnWidgetActivationChangedEPNS_6WidgetEb = comdat any

$_ZN5views14WidgetObserver21OnWidgetBoundsChangedEPNS_6WidgetERKN3gfx4RectE = comdat any

$_ZN5views14WidgetObserver20OnWidgetThemeChangedEPNS_6WidgetE = comdat any

$_ZN18FullscreenObserverD0Ev = comdat any

$_ZZN7logging15CheckOpValueStrIP20FullscreenControllerEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZN4base12DeleteHelperIN5views6WidgetEE8DoDeleteEPKv = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZTV18FullscreenObserver = comdat any

@_ZTV26ExclusiveAccessBubbleViews = hidden unnamed_addr constant { [19 x i8*], [5 x i8*], [15 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ExclusiveAccessBubbleViews*)* @_ZN26ExclusiveAccessBubbleViewsD2Ev to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*)* @_ZN26ExclusiveAccessBubbleViewsD0Ev to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*, %"class.gfx::Animation"*)* @_ZN26ExclusiveAccessBubbleViews14AnimationEndedEPKN3gfx9AnimationE to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*, %"class.gfx::Animation"*)* @_ZN26ExclusiveAccessBubbleViews19AnimationProgressedEPKN3gfx9AnimationE to i8*), i8* bitcast (void (%"class.gfx::AnimationDelegate"*, %"class.gfx::Animation"*)* @_ZN3gfx17AnimationDelegate17AnimationCanceledEPKNS_9AnimationE to i8*), i8* bitcast (void (%"class.gfx::AnimationDelegate"*, %"class.gfx::AnimationContainer"*)* @_ZN3gfx17AnimationDelegate24AnimationContainerWasSetEPNS_18AnimationContainerE to i8*), i8* bitcast ({ i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)* @_ZNK26ExclusiveAccessBubbleViews12GetPopupRectEb to i8*), i8* bitcast (i64 (%class.ExclusiveAccessBubbleViews*)* @_ZN26ExclusiveAccessBubbleViews20GetCursorScreenPointEv to i8*), i8* bitcast (i1 (%class.ExclusiveAccessBubbleViews*, i64)* @_ZN26ExclusiveAccessBubbleViews19WindowContainsPointEN3gfx5PointE to i8*), i8* bitcast (i1 (%class.ExclusiveAccessBubbleViews*)* @_ZN26ExclusiveAccessBubbleViews14IsWindowActiveEv to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*)* @_ZN26ExclusiveAccessBubbleViews4HideEv to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*)* @_ZN26ExclusiveAccessBubbleViews4ShowEv to i8*), i8* bitcast (i1 (%class.ExclusiveAccessBubbleViews*)* @_ZN26ExclusiveAccessBubbleViews11IsAnimatingEv to i8*), i8* bitcast (i1 (%class.ExclusiveAccessBubbleViews*)* @_ZNK26ExclusiveAccessBubbleViews17CanTriggerOnMouseEv to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*)* @_ZN26ExclusiveAccessBubbleViews24OnFullscreenStateChangedEv to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*, %"class.views::Widget"*)* @_ZN26ExclusiveAccessBubbleViews17OnWidgetDestroyedEPN5views6WidgetE to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*, %"class.views::Widget"*, i1)* @_ZN26ExclusiveAccessBubbleViews25OnWidgetVisibilityChangedEPN5views6WidgetEb to i8*)], [5 x i8*] [i8* inttoptr (i64 -664 to i8*), i8* null, i8* bitcast (void (%class.ExclusiveAccessBubbleViews*)* @_ZThn664_N26ExclusiveAccessBubbleViewsD1Ev to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*)* @_ZThn664_N26ExclusiveAccessBubbleViewsD0Ev to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*)* @_ZThn664_N26ExclusiveAccessBubbleViews24OnFullscreenStateChangedEv to i8*)], [15 x i8*] [i8* inttoptr (i64 -688 to i8*), i8* null, i8* bitcast (void (%class.ExclusiveAccessBubbleViews*)* @_ZThn688_N26ExclusiveAccessBubbleViewsD1Ev to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*)* @_ZThn688_N26ExclusiveAccessBubbleViewsD0Ev to i8*), i8* bitcast (void (%"class.views::WidgetObserver"*, %"class.views::Widget"*)* @_ZN5views14WidgetObserver15OnWidgetClosingEPNS_6WidgetE to i8*), i8* bitcast (void (%"class.views::WidgetObserver"*, %"class.views::Widget"*)* @_ZN5views14WidgetObserver15OnWidgetCreatedEPNS_6WidgetE to i8*), i8* bitcast (void (%"class.views::WidgetObserver"*, %"class.views::Widget"*)* @_ZN5views14WidgetObserver18OnWidgetDestroyingEPNS_6WidgetE to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*, %"class.views::Widget"*)* @_ZThn688_N26ExclusiveAccessBubbleViews17OnWidgetDestroyedEPN5views6WidgetE to i8*), i8* bitcast (void (%"class.views::WidgetObserver"*, %"class.views::Widget"*)* @_ZN5views14WidgetObserver21OnWidgetDragWillStartEPNS_6WidgetE to i8*), i8* bitcast (void (%"class.views::WidgetObserver"*, %"class.views::Widget"*)* @_ZN5views14WidgetObserver20OnWidgetDragCompleteEPNS_6WidgetE to i8*), i8* bitcast (void (%"class.views::WidgetObserver"*, %"class.views::Widget"*, i1)* @_ZN5views14WidgetObserver26OnWidgetVisibilityChangingEPNS_6WidgetEb to i8*), i8* bitcast (void (%class.ExclusiveAccessBubbleViews*, %"class.views::Widget"*, i1)* @_ZThn688_N26ExclusiveAccessBubbleViews25OnWidgetVisibilityChangedEPN5views6WidgetEb to i8*), i8* bitcast (void (%"class.views::WidgetObserver"*, %"class.views::Widget"*, i1)* @_ZN5views14WidgetObserver25OnWidgetActivationChangedEPNS_6WidgetEb to i8*), i8* bitcast (void (%"class.views::WidgetObserver"*, %"class.views::Widget"*, %"class.gfx::Rect"*)* @_ZN5views14WidgetObserver21OnWidgetBoundsChangedEPNS_6WidgetERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.views::WidgetObserver"*, %"class.views::Widget"*)* @_ZN5views14WidgetObserver20OnWidgetThemeChangedEPNS_6WidgetE to i8*)] }, align 8
@.str = private unnamed_addr constant [28 x i8] c"~ExclusiveAccessBubbleViews\00", align 1
@.str.1 = private unnamed_addr constant [63 x i8] c"../../chrome/browser/ui/views/exclusive_access_bubble_views.cc\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"!views::WidgetObserver::IsInObserverList()\00", align 1
@_ZN21ExclusiveAccessBubble21kSimplifiedPopupTopPxE = external local_unnamed_addr constant i32, align 4
@_ZTV18FullscreenObserver = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::CheckedObserver"*)* @_ZN4base15CheckedObserverD2Ev to i8*), i8* bitcast (void (%class.FullscreenObserver*)* @_ZN18FullscreenObserverD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [19 x i8] c"source_ == nullptr\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"../../base/scoped_observation.h\00", align 1

@_ZN26ExclusiveAccessBubbleViewsC1EP33ExclusiveAccessBubbleViewsContextRK4GURL25ExclusiveAccessBubbleTypeN4base12OnceCallbackIFv31ExclusiveAccessBubbleHideReasonEEE = hidden unnamed_addr alias void (%class.ExclusiveAccessBubbleViews*, %class.ExclusiveAccessBubbleViewsContext*, %class.GURL*, i32, %"class.base::OnceCallback.282"*), void (%class.ExclusiveAccessBubbleViews*, %class.ExclusiveAccessBubbleViewsContext*, %class.GURL*, i32, %"class.base::OnceCallback.282"*)* @_ZN26ExclusiveAccessBubbleViewsC2EP33ExclusiveAccessBubbleViewsContextRK4GURL25ExclusiveAccessBubbleTypeN4base12OnceCallbackIFv31ExclusiveAccessBubbleHideReasonEEE
@_ZN26ExclusiveAccessBubbleViewsD1Ev = hidden unnamed_addr alias void (%class.ExclusiveAccessBubbleViews*), void (%class.ExclusiveAccessBubbleViews*)* @_ZN26ExclusiveAccessBubbleViewsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViewsC2EP33ExclusiveAccessBubbleViewsContextRK4GURL25ExclusiveAccessBubbleTypeN4base12OnceCallbackIFv31ExclusiveAccessBubbleHideReasonEEE(%class.ExclusiveAccessBubbleViews*, %class.ExclusiveAccessBubbleViewsContext*, %class.GURL* dereferenceable(120), i32, %"class.base::OnceCallback.282"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.ui::Accelerator", align 8
  %7 = alloca %"class.std::__1::basic_string.266", align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.gfx::Rect"*
  %10 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0
  %11 = bitcast %class.ExclusiveAccessBubbleViewsContext* %1 to %class.ExclusiveAccessManager* (%class.ExclusiveAccessBubbleViewsContext*)***
  %12 = load %class.ExclusiveAccessManager* (%class.ExclusiveAccessBubbleViewsContext*)**, %class.ExclusiveAccessManager* (%class.ExclusiveAccessBubbleViewsContext*)*** %11, align 8
  %13 = load %class.ExclusiveAccessManager* (%class.ExclusiveAccessBubbleViewsContext*)*, %class.ExclusiveAccessManager* (%class.ExclusiveAccessBubbleViewsContext*)** %12, align 8
  %14 = tail call %class.ExclusiveAccessManager* %13(%class.ExclusiveAccessBubbleViewsContext* %1) #11
  tail call void @_ZN21ExclusiveAccessBubbleC2EP22ExclusiveAccessManagerRK4GURL25ExclusiveAccessBubbleType(%class.ExclusiveAccessBubble* %10, %class.ExclusiveAccessManager* %14, %class.GURL* dereferenceable(120) %2, i32 %3) #11
  %15 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 1
  %16 = getelementptr inbounds %class.FullscreenObserver, %class.FullscreenObserver* %15, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %16) #11
  %17 = getelementptr inbounds %class.FullscreenObserver, %class.FullscreenObserver* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV18FullscreenObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.views::WidgetObserver", %"class.views::WidgetObserver"* %18, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %19) #11
  %20 = getelementptr inbounds %"class.views::WidgetObserver", %"class.views::WidgetObserver"* %18, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [5 x i8*], [15 x i8*] }, { [19 x i8*], [5 x i8*], [15 x i8*] }* @_ZTV26ExclusiveAccessBubbleViews, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [5 x i8*], [15 x i8*] }, { [19 x i8*], [5 x i8*], [15 x i8*] }* @_ZTV26ExclusiveAccessBubbleViews, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [5 x i8*], [15 x i8*] }, { [19 x i8*], [5 x i8*], [15 x i8*] }* @_ZTV26ExclusiveAccessBubbleViews, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %22 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 3
  store %class.ExclusiveAccessBubbleViewsContext* %1, %class.ExclusiveAccessBubbleViewsContext** %22, align 8
  %23 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 4
  store %"class.views::Widget"* null, %"class.views::Widget"** %23, align 8
  %24 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 5
  %25 = getelementptr inbounds %"class.base::OnceCallback.282", %"class.base::OnceCallback.282"* %4, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback.282"* %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::OnceCallback.282"* %24 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %29 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 6
  %30 = tail call i8* @_Znwm(i64 136) #12
  %31 = bitcast i8* %30 to %"class.gfx::SlideAnimation"*
  %32 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gfx14SlideAnimationC1EPNS_17AnimationDelegateE(%"class.gfx::SlideAnimation"* nonnull %31, %"class.gfx::AnimationDelegate"* %32) #11
  %33 = ptrtoint i8* %30 to i64
  %34 = bitcast %"class.std::__1::unique_ptr.283"* %29 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 8
  %36 = bitcast %"class.std::__1::basic_string.266"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #11
  %37 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 9
  %38 = getelementptr inbounds %"class.base::ScopedObservation.295", %"class.base::ScopedObservation.295"* %37, i64 0, i32 0
  store %class.FullscreenObserver* %15, %class.FullscreenObserver** %38, align 8
  %39 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 9, i32 1
  store %class.FullscreenController* null, %class.FullscreenController** %39, align 8
  %40 = tail call i8* @_Znwm(i64 672) #12
  %41 = bitcast i8* %40 to %class.SubtleNotificationView*
  tail call void @_ZN22SubtleNotificationViewC1Ev(%class.SubtleNotificationView* nonnull %41) #11
  %42 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 7
  %43 = bitcast %class.SubtleNotificationView** %42 to i8**
  store i8* %40, i8** %43, align 8
  %44 = bitcast %"class.ui::Accelerator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 32, i1 false)
  call void @_ZN2ui11AcceleratorC1ENS_12KeyboardCodeEiNS0_8KeyStateEN4base9TimeTicksE(%"class.ui::Accelerator"* nonnull %6, i32 0, i32 0, i32 0, i64 0) #11
  %45 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %22, align 8
  %46 = bitcast %class.ExclusiveAccessBubbleViewsContext* %45 to %"class.ui::AcceleratorProvider"* (%class.ExclusiveAccessBubbleViewsContext*)***
  %47 = load %"class.ui::AcceleratorProvider"* (%class.ExclusiveAccessBubbleViewsContext*)**, %"class.ui::AcceleratorProvider"* (%class.ExclusiveAccessBubbleViewsContext*)*** %46, align 8
  %48 = getelementptr inbounds %"class.ui::AcceleratorProvider"* (%class.ExclusiveAccessBubbleViewsContext*)*, %"class.ui::AcceleratorProvider"* (%class.ExclusiveAccessBubbleViewsContext*)** %47, i64 2
  %49 = load %"class.ui::AcceleratorProvider"* (%class.ExclusiveAccessBubbleViewsContext*)*, %"class.ui::AcceleratorProvider"* (%class.ExclusiveAccessBubbleViewsContext*)** %48, align 8
  %50 = call %"class.ui::AcceleratorProvider"* %49(%class.ExclusiveAccessBubbleViewsContext* %45) #11
  %51 = bitcast %"class.ui::AcceleratorProvider"* %50 to i1 (%"class.ui::AcceleratorProvider"*, i32, %"class.ui::Accelerator"*)***
  %52 = load i1 (%"class.ui::AcceleratorProvider"*, i32, %"class.ui::Accelerator"*)**, i1 (%"class.ui::AcceleratorProvider"*, i32, %"class.ui::Accelerator"*)*** %51, align 8
  %53 = load i1 (%"class.ui::AcceleratorProvider"*, i32, %"class.ui::Accelerator"*)*, i1 (%"class.ui::AcceleratorProvider"*, i32, %"class.ui::Accelerator"*)** %52, align 8
  %54 = call zeroext i1 %53(%"class.ui::AcceleratorProvider"* %50, i32 34030, %"class.ui::Accelerator"* nonnull %6) #11
  %55 = bitcast %"class.std::__1::basic_string.266"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #11
  call void @_ZNK2ui11Accelerator15GetShortcutTextEv(%"class.std::__1::basic_string.266"* nonnull sret %7, %"class.ui::Accelerator"* nonnull %6) #11
  %56 = bitcast %"class.std::__1::basic_string.266"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %5
  %61 = bitcast %"class.std::__1::basic_string.266"* %35 to i8**
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %60, %5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %55, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #11
  %64 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0, i32 3
  %65 = load i32, i32* %64, align 8
  call void @_ZN26ExclusiveAccessBubbleViews17UpdateViewContentE25ExclusiveAccessBubbleType(%class.ExclusiveAccessBubbleViews* %0, i32 %65)
  %66 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %22, align 8
  %67 = bitcast %class.ExclusiveAccessBubbleViewsContext* %66 to %"class.aura::Window"* (%class.ExclusiveAccessBubbleViewsContext*)***
  %68 = load %"class.aura::Window"* (%class.ExclusiveAccessBubbleViewsContext*)**, %"class.aura::Window"* (%class.ExclusiveAccessBubbleViewsContext*)*** %67, align 8
  %69 = getelementptr inbounds %"class.aura::Window"* (%class.ExclusiveAccessBubbleViewsContext*)*, %"class.aura::Window"* (%class.ExclusiveAccessBubbleViewsContext*)** %68, i64 3
  %70 = load %"class.aura::Window"* (%class.ExclusiveAccessBubbleViewsContext*)*, %"class.aura::Window"* (%class.ExclusiveAccessBubbleViewsContext*)** %69, align 8
  %71 = call %"class.aura::Window"* %70(%class.ExclusiveAccessBubbleViewsContext* %66) #11
  %72 = call %"class.views::Widget"* @_ZN22SubtleNotificationView17CreatePopupWidgetEPN4aura6WindowENSt3__110unique_ptrIS_NS3_14default_deleteIS_EEEE(%"class.aura::Window"* %71, %class.SubtleNotificationView* nonnull %41) #11
  store %"class.views::Widget"* %72, %"class.views::Widget"** %23, align 8
  %73 = bitcast %class.ExclusiveAccessBubbleViews* %0 to { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)***
  %74 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)**, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*** %73, align 8
  %75 = getelementptr inbounds { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %74, i64 6
  %76 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %75, align 8
  %77 = call { i64, i64 } %76(%class.ExclusiveAccessBubbleViews* %0, i1 zeroext true) #11
  %78 = extractvalue { i64, i64 } %77, 1
  %79 = trunc i64 %78 to i32
  %80 = lshr i64 %78, 32
  %81 = trunc i64 %80 to i32
  %82 = load %"class.views::Widget"*, %"class.views::Widget"** %23, align 8
  %83 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #11
  %84 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)**, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*** %73, align 8
  %85 = getelementptr inbounds { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %84, i64 6
  %86 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %85, align 8
  %87 = call { i64, i64 } %86(%class.ExclusiveAccessBubbleViews* %0, i1 zeroext false) #11
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %89 = extractvalue { i64, i64 } %87, 0
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %91 = extractvalue { i64, i64 } %87, 1
  store i64 %91, i64* %90, align 8
  call void @_ZN5views6Widget9SetBoundsERKN3gfx4RectE(%"class.views::Widget"* %82, %"class.gfx::Rect"* nonnull dereferenceable(16) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  %92 = load %"class.views::Widget"*, %"class.views::Widget"** %23, align 8
  call void @_ZN5views6Widget14SetZOrderLevelEN2ui11ZOrderLevelE(%"class.views::Widget"* %92, i32 3) #11
  %93 = bitcast %class.SubtleNotificationView** %42 to %"class.views::View"**
  %94 = load %"class.views::View"*, %"class.views::View"** %93, align 8
  call void @_ZN5views4View9SetBoundsEiiii(%"class.views::View"* %94, i32 0, i32 0, i32 %79, i32 %81) #11
  %95 = load %"class.views::Widget"*, %"class.views::Widget"** %23, align 8
  call void @_ZN5views6Widget11AddObserverEPNS_14WidgetObserverE(%"class.views::Widget"* %95, %"class.views::WidgetObserver"* %18) #11
  %96 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %22, align 8
  %97 = bitcast %class.ExclusiveAccessBubbleViewsContext* %96 to %class.ExclusiveAccessManager* (%class.ExclusiveAccessBubbleViewsContext*)***
  %98 = load %class.ExclusiveAccessManager* (%class.ExclusiveAccessBubbleViewsContext*)**, %class.ExclusiveAccessManager* (%class.ExclusiveAccessBubbleViewsContext*)*** %97, align 8
  %99 = load %class.ExclusiveAccessManager* (%class.ExclusiveAccessBubbleViewsContext*)*, %class.ExclusiveAccessManager* (%class.ExclusiveAccessBubbleViewsContext*)** %98, align 8
  %100 = call %class.ExclusiveAccessManager* %99(%class.ExclusiveAccessBubbleViewsContext* %96) #11
  %101 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %100, i64 0, i32 1
  call void @_ZN4base17ScopedObservationI20FullscreenController18FullscreenObserverXadL_ZNS1_11AddObserverEPS2_EEXadL_ZNS1_14RemoveObserverES3_EEE7ObserveEPS1_(%"class.base::ScopedObservation.295"* %37, %class.FullscreenController* %101)
  %102 = load %"class.views::Widget"*, %"class.views::Widget"** %23, align 8
  %103 = bitcast %"class.views::Widget"* %102 to i1 (%"class.views::Widget"*)***
  %104 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %103, align 8
  %105 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %104, i64 45
  %106 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %105, align 8
  %107 = call zeroext i1 %106(%"class.views::Widget"* %102) #11
  br i1 %107, label %108, label %110

108:                                              ; preds = %63
  %109 = call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %10) #11
  br i1 %109, label %121, label %119

110:                                              ; preds = %63
  %111 = bitcast %class.ExclusiveAccessBubbleViews* %0 to i1 (%class.ExclusiveAccessBubbleViews*)***
  %112 = load i1 (%class.ExclusiveAccessBubbleViews*)**, i1 (%class.ExclusiveAccessBubbleViews*)*** %111, align 8
  %113 = getelementptr inbounds i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %112, i64 13
  %114 = load i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %113, align 8
  %115 = call zeroext i1 %114(%class.ExclusiveAccessBubbleViews* %0) #11
  %116 = call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %10) #11
  %117 = xor i1 %115, %116
  br i1 %117, label %118, label %121

118:                                              ; preds = %110
  br i1 %115, label %119, label %120

119:                                              ; preds = %118, %108
  call void @_ZN21ExclusiveAccessBubble18StartWatchingMouseEv(%class.ExclusiveAccessBubble* %10) #11
  br label %121

120:                                              ; preds = %118
  call void @_ZN21ExclusiveAccessBubble17StopWatchingMouseEv(%class.ExclusiveAccessBubble* %10) #11
  br label %121

121:                                              ; preds = %120, %119, %110, %108
  call void @_ZN2ui11AcceleratorD1Ev(%"class.ui::Accelerator"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #11
  ret void
}

declare void @_ZN21ExclusiveAccessBubbleC2EP22ExclusiveAccessManagerRK4GURL25ExclusiveAccessBubbleType(%class.ExclusiveAccessBubble*, %class.ExclusiveAccessManager*, %class.GURL* dereferenceable(120), i32) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN3gfx14SlideAnimationC1EPNS_17AnimationDelegateE(%"class.gfx::SlideAnimation"*, %"class.gfx::AnimationDelegate"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN2ui11AcceleratorC1ENS_12KeyboardCodeEiNS0_8KeyStateEN4base9TimeTicksE(%"class.ui::Accelerator"*, i32, i32, i32, i64) unnamed_addr #1

declare void @_ZNK2ui11Accelerator15GetShortcutTextEv(%"class.std::__1::basic_string.266"* sret, %"class.ui::Accelerator"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews17UpdateViewContentE25ExclusiveAccessBubbleType(%class.ExclusiveAccessBubbleViews*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.266", align 8
  %4 = alloca %"class.std::__1::basic_string.266", align 8
  %5 = alloca %"class.std::__1::basic_string.266", align 8
  %6 = bitcast %"class.std::__1::basic_string.266"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = add i32 %1, -5
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 8
  %11 = call dereferenceable(24) %"class.std::__1::basic_string.266"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.266"* nonnull %3, %"class.std::__1::basic_string.266"* dereferenceable(24) %10)
  br label %22

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string.266"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.266"* nonnull sret %4, i32 29055) #11
  %14 = bitcast %"class.std::__1::basic_string.266"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = bitcast %"class.std::__1::basic_string.266"* %3 to i8**
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %18, %12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %13, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  br label %22

22:                                               ; preds = %21, %9
  %23 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 7
  %24 = load %class.SubtleNotificationView*, %class.SubtleNotificationView** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string.266"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0
  call void @_ZNK21ExclusiveAccessBubble18GetInstructionTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.266"* nonnull sret %5, %class.ExclusiveAccessBubble* %26, %"class.std::__1::basic_string.266"* nonnull dereferenceable(24) %3) #11
  call void @_ZN22SubtleNotificationView13UpdateContentERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SubtleNotificationView* %24, %"class.std::__1::basic_string.266"* nonnull dereferenceable(24) %5) #11
  %27 = bitcast %"class.std::__1::basic_string.266"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::basic_string.266"* %5 to i8**
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %22, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  %35 = bitcast %"class.std::__1::basic_string.266"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = bitcast %"class.std::__1::basic_string.266"* %3 to i8**
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %34, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

declare %"class.views::Widget"* @_ZN22SubtleNotificationView17CreatePopupWidgetEPN4aura6WindowENSt3__110unique_ptrIS_NS3_14default_deleteIS_EEEE(%"class.aura::Window"*, %class.SubtleNotificationView*) local_unnamed_addr #1

declare void @_ZN5views6Widget9SetBoundsERKN3gfx4RectE(%"class.views::Widget"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5views6Widget14SetZOrderLevelEN2ui11ZOrderLevelE(%"class.views::Widget"*, i32) local_unnamed_addr #1

declare void @_ZN5views4View9SetBoundsEiiii(%"class.views::View"*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN5views6Widget11AddObserverEPNS_14WidgetObserverE(%"class.views::Widget"*, %"class.views::WidgetObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base17ScopedObservationI20FullscreenController18FullscreenObserverXadL_ZNS1_11AddObserverEPS2_EEXadL_ZNS1_14RemoveObserverES3_EEE7ObserveEPS1_(%"class.base::ScopedObservation.295"*, %class.FullscreenController*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::ScopedObservation.295", %"class.base::ScopedObservation.295"* %0, i64 0, i32 1
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %class.FullscreenController*, %class.FullscreenController** %8, align 8
  %11 = icmp eq %class.FullscreenController* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %7, align 8
  br label %23

13:                                               ; preds = %2
  %14 = bitcast %class.FullscreenController** %8 to i8*
  %15 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %14, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIP20FullscreenControllerEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEDn(i8* null) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %18, i8** %7, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 61, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %12, %13, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  store %class.FullscreenController* %1, %class.FullscreenController** %8, align 8
  %24 = getelementptr inbounds %"class.base::ScopedObservation.295", %"class.base::ScopedObservation.295"* %0, i64 0, i32 0
  %25 = load %class.FullscreenObserver*, %class.FullscreenObserver** %24, align 8
  call void @_ZN20FullscreenController11AddObserverEP18FullscreenObserver(%class.FullscreenController* %1, %class.FullscreenObserver* %25) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews18UpdateMouseWatcherEv(%class.ExclusiveAccessBubbleViews*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 4
  %3 = load %"class.views::Widget"*, %"class.views::Widget"** %2, align 8
  %4 = bitcast %"class.views::Widget"* %3 to i1 (%"class.views::Widget"*)***
  %5 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %5, i64 45
  %7 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.views::Widget"* %3) #11
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %10) #11
  br i1 %11, label %25, label %22

12:                                               ; preds = %1
  %13 = bitcast %class.ExclusiveAccessBubbleViews* %0 to i1 (%class.ExclusiveAccessBubbleViews*)***
  %14 = load i1 (%class.ExclusiveAccessBubbleViews*)**, i1 (%class.ExclusiveAccessBubbleViews*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %14, i64 13
  %16 = load i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.ExclusiveAccessBubbleViews* %0) #11
  %18 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0
  %19 = tail call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %18) #11
  %20 = xor i1 %17, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %12
  br i1 %17, label %22, label %24

22:                                               ; preds = %9, %21
  %23 = phi %class.ExclusiveAccessBubble* [ %18, %21 ], [ %10, %9 ]
  tail call void @_ZN21ExclusiveAccessBubble18StartWatchingMouseEv(%class.ExclusiveAccessBubble* %23) #11
  br label %25

24:                                               ; preds = %21
  tail call void @_ZN21ExclusiveAccessBubble17StopWatchingMouseEv(%class.ExclusiveAccessBubble* %18) #11
  br label %25

25:                                               ; preds = %9, %22, %24, %12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui11AcceleratorD1Ev(%"class.ui::Accelerator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViewsD2Ev(%class.ExclusiveAccessBubbleViews*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.282", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [5 x i8*], [15 x i8*] }, { [19 x i8*], [5 x i8*], [15 x i8*] }* @_ZTV26ExclusiveAccessBubbleViews, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.FullscreenObserver, %class.FullscreenObserver* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [5 x i8*], [15 x i8*] }, { [19 x i8*], [5 x i8*], [15 x i8*] }* @_ZTV26ExclusiveAccessBubbleViews, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.views::WidgetObserver", %"class.views::WidgetObserver"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [5 x i8*], [15 x i8*] }, { [19 x i8*], [5 x i8*], [15 x i8*] }* @_ZTV26ExclusiveAccessBubbleViews, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %12 = icmp eq %"class.base::internal::BindStateBase"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %1
  %14 = ptrtoint %"class.base::internal::BindStateBase"* %11 to i64
  %15 = bitcast %"class.base::OnceCallback.282"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = bitcast %"class.base::OnceCallback.282"* %2 to i64*
  store i64 %14, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback.282", %"class.base::OnceCallback.282"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %19 = bitcast void ()** %18 to void (%"class.base::internal::BindStateBase"*, i32)**
  %20 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %19, align 8
  tail call void %20(%"class.base::internal::BindStateBase"* nonnull %11, i32 1) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br label %21

21:                                               ; preds = %1, %13
  %22 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 4
  %23 = load %"class.views::Widget"*, %"class.views::Widget"** %22, align 8
  call void @_ZN5views6Widget14RemoveObserverEPNS_14WidgetObserverE(%"class.views::Widget"* %23, %"class.views::WidgetObserver"* %8) #11
  %24 = load %"class.views::Widget"*, %"class.views::Widget"** %22, align 8
  call void @_ZN5views6Widget5CloseEv(%"class.views::Widget"* %24) #11
  %25 = call dereferenceable(8) %class.scoped_refptr.302* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #11
  %26 = bitcast %class.scoped_refptr.302* %25 to %"class.base::SequencedTaskRunner"**
  %27 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %26, align 8
  %28 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i32 125) #11
  %29 = bitcast %"class.views::Widget"** %22 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = call zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"* %27, %"class.base::Location"* nonnull dereferenceable(32) %3, void (i8*)* nonnull @_ZN4base12DeleteHelperIN5views6WidgetEE8DoDeleteEPKv, i8* %30) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  %32 = getelementptr inbounds %"class.views::WidgetObserver", %"class.views::WidgetObserver"* %8, i64 0, i32 0
  %33 = call zeroext i1 @_ZNK4base15CheckedObserver16IsInObserverListEv(%"class.base::CheckedObserver"* %32) #11
  br i1 %33, label %34, label %37

34:                                               ; preds = %21
  %35 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0)) #11
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  br label %37

37:                                               ; preds = %21, %34
  %38 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 9, i32 1
  %39 = load %class.FullscreenController*, %class.FullscreenController** %38, align 8
  %40 = icmp eq %class.FullscreenController* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 9, i32 0
  %43 = load %class.FullscreenObserver*, %class.FullscreenObserver** %42, align 8
  call void @_ZN20FullscreenController14RemoveObserverEP18FullscreenObserver(%class.FullscreenController* nonnull %39, %class.FullscreenObserver* %43) #11
  store %class.FullscreenController* null, %class.FullscreenController** %38, align 8
  br label %44

44:                                               ; preds = %37, %41
  %45 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 8
  %46 = bitcast %"class.std::__1::basic_string.266"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string.266"* %45 to i8**
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %44, %50
  %54 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %55 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %54, align 8
  store %"class.gfx::SlideAnimation"* null, %"class.gfx::SlideAnimation"** %54, align 8
  %56 = icmp eq %"class.gfx::SlideAnimation"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.gfx::SlideAnimation"* %55 to void (%"class.gfx::SlideAnimation"*)***
  %59 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %59, i64 4
  %61 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %60, align 8
  call void %61(%"class.gfx::SlideAnimation"* nonnull %55) #11
  br label %62

62:                                               ; preds = %53, %57
  %63 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 5, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %63) #11
  call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %32) #11
  %64 = getelementptr inbounds %class.FullscreenObserver, %class.FullscreenObserver* %6, i64 0, i32 0
  call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %64) #11
  %65 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0
  call void @_ZN21ExclusiveAccessBubbleD2Ev(%class.ExclusiveAccessBubble* %65) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews23RunHideCallbackIfNeededE31ExclusiveAccessBubbleHideReason(%class.ExclusiveAccessBubbleViews* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.282", align 8
  %4 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = ptrtoint %"class.base::internal::BindStateBase"* %5 to i64
  %9 = bitcast %"class.base::OnceCallback.282"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = bitcast %"class.base::OnceCallback.282"* %3 to i64*
  store i64 %8, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.282", %"class.base::OnceCallback.282"* %3, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, i32)**
  %14 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* nonnull %5, i32 %1) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %15

15:                                               ; preds = %2, %7
  ret void
}

declare void @_ZN5views6Widget14RemoveObserverEPNS_14WidgetObserverE(%"class.views::Widget"*, %"class.views::WidgetObserver"*) local_unnamed_addr #1

declare void @_ZN5views6Widget5CloseEv(%"class.views::Widget"*) local_unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr.302* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base15CheckedObserver16IsInObserverListEv(%"class.base::CheckedObserver"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN21ExclusiveAccessBubbleD2Ev(%class.ExclusiveAccessBubble*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn664_N26ExclusiveAccessBubbleViewsD1Ev(%class.ExclusiveAccessBubbleViews*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 -1, i32 0, i32 2, i32 3
  %3 = bitcast %"class.std::__1::unique_ptr"* %2 to %class.ExclusiveAccessBubbleViews*
  tail call void @_ZN26ExclusiveAccessBubbleViewsD2Ev(%class.ExclusiveAccessBubbleViews* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn688_N26ExclusiveAccessBubbleViewsD1Ev(%class.ExclusiveAccessBubbleViews*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 -1, i32 0, i32 2, i32 2, i32 7
  %3 = bitcast %"struct.url::Component"* %2 to %class.ExclusiveAccessBubbleViews*
  tail call void @_ZN26ExclusiveAccessBubbleViewsD2Ev(%class.ExclusiveAccessBubbleViews* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViewsD0Ev(%class.ExclusiveAccessBubbleViews*) unnamed_addr #0 align 2 {
  tail call void @_ZN26ExclusiveAccessBubbleViewsD2Ev(%class.ExclusiveAccessBubbleViews* %0) #11
  %2 = bitcast %class.ExclusiveAccessBubbleViews* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn664_N26ExclusiveAccessBubbleViewsD0Ev(%class.ExclusiveAccessBubbleViews*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 -1, i32 0, i32 2, i32 3
  %3 = bitcast %"class.std::__1::unique_ptr"* %2 to %class.ExclusiveAccessBubbleViews*
  tail call void @_ZN26ExclusiveAccessBubbleViewsD2Ev(%class.ExclusiveAccessBubbleViews* %3) #11
  %4 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn688_N26ExclusiveAccessBubbleViewsD0Ev(%class.ExclusiveAccessBubbleViews*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 -1, i32 0, i32 2, i32 2, i32 7
  %3 = bitcast %"struct.url::Component"* %2 to %class.ExclusiveAccessBubbleViews*
  tail call void @_ZN26ExclusiveAccessBubbleViewsD2Ev(%class.ExclusiveAccessBubbleViews* %3) #11
  %4 = bitcast %"struct.url::Component"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews13UpdateContentERK4GURL25ExclusiveAccessBubbleTypeN4base12OnceCallbackIFv31ExclusiveAccessBubbleHideReasonEEEb(%class.ExclusiveAccessBubbleViews*, %class.GURL* dereferenceable(120), i32, %"class.base::OnceCallback.282"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback.282", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.gfx::Size"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %11 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0
  %12 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, %2
  br i1 %14, label %15, label %20

15:                                               ; preds = %5
  %16 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0, i32 2
  %17 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %16, %class.GURL* dereferenceable(120) %1) #11
  %18 = xor i1 %17, true
  %19 = or i1 %18, %4
  br i1 %19, label %20, label %83

20:                                               ; preds = %15, %5
  %21 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %21, align 8
  %23 = icmp eq %"class.base::internal::BindStateBase"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.base::internal::BindStateBase"* %22 to i64
  %26 = bitcast %"class.base::OnceCallback.282"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = bitcast %"class.base::OnceCallback.282"* %6 to i64*
  store i64 %25, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %28 = getelementptr inbounds %"class.base::OnceCallback.282", %"class.base::OnceCallback.282"* %6, i64 0, i32 0
  %29 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %22, i64 0, i32 1
  %30 = bitcast void ()** %29 to void (%"class.base::internal::BindStateBase"*, i32)**
  %31 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %30, align 8
  tail call void %31(%"class.base::internal::BindStateBase"* nonnull %22, i32 1) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br label %32

32:                                               ; preds = %20, %24
  %33 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 5, i32 0
  %34 = getelementptr inbounds %"class.base::OnceCallback.282", %"class.base::OnceCallback.282"* %3, i64 0, i32 0
  %35 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %33, %"class.base::internal::CallbackBase"* dereferenceable(8) %34) #11
  %36 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0, i32 2
  %37 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %36, %class.GURL* dereferenceable(120) %1) #11
  store i32 %2, i32* %12, align 8
  call void @_ZN26ExclusiveAccessBubbleViews17UpdateViewContentE25ExclusiveAccessBubbleType(%class.ExclusiveAccessBubbleViews* %0, i32 %2)
  %38 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = bitcast %class.ExclusiveAccessBubbleViews* %0 to { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)***
  %40 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)**, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*** %39, align 8
  %41 = getelementptr inbounds { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %40, i64 6
  %42 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %41, align 8
  %43 = call { i64, i64 } %42(%class.ExclusiveAccessBubbleViews* %0, i1 zeroext true) #11
  %44 = extractvalue { i64, i64 } %43, 1
  store i64 %44, i64* %7, align 8
  %45 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 7
  %46 = bitcast %class.SubtleNotificationView** %45 to %"class.views::View"**
  %47 = load %"class.views::View"*, %"class.views::View"** %46, align 8
  call void @_ZN5views4View7SetSizeERKN3gfx4SizeE(%"class.views::View"* %47, %"class.gfx::Size"* nonnull dereferenceable(8) %8) #11
  %48 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 4
  %49 = load %"class.views::Widget"*, %"class.views::Widget"** %48, align 8
  %50 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #11
  %51 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)**, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*** %39, align 8
  %52 = getelementptr inbounds { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %51, i64 6
  %53 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %52, align 8
  %54 = call { i64, i64 } %53(%class.ExclusiveAccessBubbleViews* %0, i1 zeroext false) #11
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %56 = extractvalue { i64, i64 } %54, 0
  store i64 %56, i64* %55, align 8
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %58 = extractvalue { i64, i64 } %54, 1
  store i64 %58, i64* %57, align 8
  call void @_ZN5views6Widget9SetBoundsERKN3gfx4RectE(%"class.views::Widget"* %49, %"class.gfx::Rect"* nonnull dereferenceable(16) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #11
  %59 = bitcast %class.ExclusiveAccessBubbleViews* %0 to void (%class.ExclusiveAccessBubbleViews*)***
  %60 = load void (%class.ExclusiveAccessBubbleViews*)**, void (%class.ExclusiveAccessBubbleViews*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.ExclusiveAccessBubbleViews*)*, void (%class.ExclusiveAccessBubbleViews*)** %60, i64 11
  %62 = load void (%class.ExclusiveAccessBubbleViews*)*, void (%class.ExclusiveAccessBubbleViews*)** %61, align 8
  call void %62(%class.ExclusiveAccessBubbleViews* %0) #11
  call void @_ZN21ExclusiveAccessBubble17StopWatchingMouseEv(%class.ExclusiveAccessBubble* %11) #11
  %63 = load %"class.views::Widget"*, %"class.views::Widget"** %48, align 8
  %64 = bitcast %"class.views::Widget"* %63 to i1 (%"class.views::Widget"*)***
  %65 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %65, i64 45
  %67 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %66, align 8
  %68 = call zeroext i1 %67(%"class.views::Widget"* %63) #11
  br i1 %68, label %69, label %71

69:                                               ; preds = %32
  %70 = call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %11) #11
  br i1 %70, label %82, label %80

71:                                               ; preds = %32
  %72 = bitcast %class.ExclusiveAccessBubbleViews* %0 to i1 (%class.ExclusiveAccessBubbleViews*)***
  %73 = load i1 (%class.ExclusiveAccessBubbleViews*)**, i1 (%class.ExclusiveAccessBubbleViews*)*** %72, align 8
  %74 = getelementptr inbounds i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %73, i64 13
  %75 = load i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %74, align 8
  %76 = call zeroext i1 %75(%class.ExclusiveAccessBubbleViews* %0) #11
  %77 = call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %11) #11
  %78 = xor i1 %76, %77
  br i1 %78, label %79, label %82

79:                                               ; preds = %71
  br i1 %76, label %80, label %81

80:                                               ; preds = %79, %69
  call void @_ZN21ExclusiveAccessBubble18StartWatchingMouseEv(%class.ExclusiveAccessBubble* %11) #11
  br label %82

81:                                               ; preds = %79
  call void @_ZN21ExclusiveAccessBubble17StopWatchingMouseEv(%class.ExclusiveAccessBubble* %11) #11
  br label %82

82:                                               ; preds = %69, %71, %80, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  br label %83

83:                                               ; preds = %15, %82
  ret void
}

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN5views4View7SetSizeERKN3gfx4SizeE(%"class.views::View"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN21ExclusiveAccessBubble17StopWatchingMouseEv(%class.ExclusiveAccessBubble*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews19RepositionIfVisibleEv(%class.ExclusiveAccessBubbleViews*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 4
  %4 = load %"class.views::Widget"*, %"class.views::Widget"** %3, align 8
  %5 = bitcast %"class.views::Widget"* %4 to i1 (%"class.views::Widget"*)***
  %6 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %6, i64 45
  %8 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.views::Widget"* %4) #11
  br i1 %9, label %10, label %37

10:                                               ; preds = %1
  %11 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %12 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %14 = bitcast %class.ExclusiveAccessBubbleViews* %0 to { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)***
  %15 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)**, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*** %14, align 8
  %16 = getelementptr inbounds { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %15, i64 6
  %17 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %16, align 8
  %18 = tail call { i64, i64 } %17(%class.ExclusiveAccessBubbleViews* %0, i1 zeroext false) #11
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %20 = extractvalue { i64, i64 } %18, 0
  store i64 %20, i64* %19, align 8
  %21 = extractvalue { i64, i64 } %18, 1
  store i64 %21, i64* %13, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %22, 0
  %24 = icmp ult i64 %21, 4294967296
  %25 = or i1 %24, %23
  br i1 %25, label %36, label %26

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 1
  %28 = load %"class.views::Widget"*, %"class.views::Widget"** %3, align 8
  call void @_ZN5views6Widget9SetBoundsERKN3gfx4RectE(%"class.views::Widget"* %28, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #11
  %29 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 7
  %30 = bitcast %class.SubtleNotificationView** %29 to %"class.views::View"**
  %31 = load %"class.views::View"*, %"class.views::View"** %30, align 8
  %32 = load i32, i32* %27, align 4
  %33 = getelementptr inbounds %"class.views::View", %"class.views::View"* %31, i64 0, i32 18, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sub nsw i32 %32, %34
  call void @_ZN5views4View4SetYEi(%"class.views::View"* %31, i32 %35) #11
  br label %36

36:                                               ; preds = %10, %26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  br label %37

37:                                               ; preds = %36, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews12UpdateBoundsEv(%class.ExclusiveAccessBubbleViews*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %4 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %6 = bitcast %class.ExclusiveAccessBubbleViews* %0 to { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)***
  %7 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)**, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %7, i64 6
  %9 = load { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)*, { i64, i64 } (%class.ExclusiveAccessBubbleViews*, i1)** %8, align 8
  %10 = tail call { i64, i64 } %9(%class.ExclusiveAccessBubbleViews* %0, i1 zeroext false) #11
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %12 = extractvalue { i64, i64 } %10, 0
  store i64 %12, i64* %11, align 8
  %13 = extractvalue { i64, i64 } %10, 1
  store i64 %13, i64* %5, align 8
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %14, 0
  %16 = icmp ult i64 %13, 4294967296
  %17 = or i1 %15, %16
  br i1 %17, label %29, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 4
  %21 = load %"class.views::Widget"*, %"class.views::Widget"** %20, align 8
  call void @_ZN5views6Widget9SetBoundsERKN3gfx4RectE(%"class.views::Widget"* %21, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #11
  %22 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 7
  %23 = bitcast %class.SubtleNotificationView** %22 to %"class.views::View"**
  %24 = load %"class.views::View"*, %"class.views::View"** %23, align 8
  %25 = load i32, i32* %19, align 4
  %26 = getelementptr inbounds %"class.views::View", %"class.views::View"* %24, i64 0, i32 18, i32 1, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub nsw i32 %25, %27
  call void @_ZN5views4View4SetYEi(%"class.views::View"* %24, i32 %28) #11
  br label %29

29:                                               ; preds = %1, %18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews15HideImmediatelyEv(%class.ExclusiveAccessBubbleViews* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.282", align 8
  %3 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %4, i64 0, i32 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %20

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %4, i64 0, i32 6
  %18 = load double, double* %17, align 8
  %19 = fcmp oeq double %18, 1.000000e+00
  br i1 %19, label %28, label %20

20:                                               ; preds = %1, %12, %16
  %21 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 4
  %22 = load %"class.views::Widget"*, %"class.views::Widget"** %21, align 8
  %23 = bitcast %"class.views::Widget"* %22 to i1 (%"class.views::Widget"*)***
  %24 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %24, i64 45
  %26 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.views::Widget"* %22) #11
  br i1 %27, label %28, label %51

28:                                               ; preds = %12, %20, %16
  %29 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %30 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %29, align 8
  %31 = icmp eq %"class.base::internal::BindStateBase"* %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = ptrtoint %"class.base::internal::BindStateBase"* %30 to i64
  %34 = bitcast %"class.base::OnceCallback.282"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = bitcast %"class.base::OnceCallback.282"* %2 to i64*
  store i64 %33, i64* %35, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %36 = getelementptr inbounds %"class.base::OnceCallback.282", %"class.base::OnceCallback.282"* %2, i64 0, i32 0
  %37 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %30, i64 0, i32 1
  %38 = bitcast void ()** %37 to void (%"class.base::internal::BindStateBase"*, i32)**
  %39 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %38, align 8
  tail call void %39(%"class.base::internal::BindStateBase"* nonnull %30, i32 1) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %40

40:                                               ; preds = %28, %32
  %41 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %3, align 8
  %42 = bitcast %"class.gfx::SlideAnimation"* %41 to void (%"class.gfx::SlideAnimation"*, i64)***
  %43 = load void (%"class.gfx::SlideAnimation"*, i64)**, void (%"class.gfx::SlideAnimation"*, i64)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*, i64)*, void (%"class.gfx::SlideAnimation"*, i64)** %43, i64 13
  %45 = load void (%"class.gfx::SlideAnimation"*, i64)*, void (%"class.gfx::SlideAnimation"*, i64)** %44, align 8
  call void %45(%"class.gfx::SlideAnimation"* %41, i64 150000) #11
  %46 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %3, align 8
  %47 = bitcast %"class.gfx::SlideAnimation"* %46 to void (%"class.gfx::SlideAnimation"*)***
  %48 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %48, i64 12
  %50 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %49, align 8
  call void %50(%"class.gfx::SlideAnimation"* %46) #11
  br label %51

51:                                               ; preds = %20, %40
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK26ExclusiveAccessBubbleViews9IsShowingEv(%class.ExclusiveAccessBubbleViews* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %3, i64 0, i32 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br label %19

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %3, i64 0, i32 6
  %17 = load double, double* %16, align 8
  %18 = fcmp oeq double %17, 1.000000e+00
  br label %19

19:                                               ; preds = %1, %11, %15
  %20 = phi i1 [ false, %1 ], [ %14, %11 ], [ %18, %15 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.views::View"* @_ZN26ExclusiveAccessBubbleViews7GetViewEv(%class.ExclusiveAccessBubbleViews* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 7
  %3 = bitcast %class.SubtleNotificationView** %2 to %"class.views::View"**
  %4 = load %"class.views::View"*, %"class.views::View"** %3, align 8
  ret %"class.views::View"* %4
}

declare zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble*) local_unnamed_addr #1

declare void @_ZN21ExclusiveAccessBubble18StartWatchingMouseEv(%class.ExclusiveAccessBubble*) local_unnamed_addr #1

declare void @_ZN5views4View4SetYEi(%"class.views::View"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.266"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.266"*, %"class.std::__1::basic_string.266"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.266"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.266"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.266"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.266"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.266"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.266"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.266"*
  %35 = icmp ugt %"class.std::__1::basic_string.266"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !3
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !3
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !6, !noalias !3
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !6, !noalias !3
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !3
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !3
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !6, !noalias !3
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !6, !noalias !3
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !3
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !3
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !6, !noalias !3
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !6, !noalias !3
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !3
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !3
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !6, !noalias !3
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !6, !noalias !3
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !8

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !3
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !3
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !6, !noalias !3
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !6, !noalias !3
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !10

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !12

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !13

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.266"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !14
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !14
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !17, !noalias !14
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !17, !noalias !14
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !14
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !14
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !17, !noalias !14
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !17, !noalias !14
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !14
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !14
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !17, !noalias !14
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !17, !noalias !14
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !14
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !14
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !17, !noalias !14
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !17, !noalias !14
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !19

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !14
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !14
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !17, !noalias !14
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !17, !noalias !14
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !20

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !21

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !22

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.266"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.266"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !23
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !23
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !26, !noalias !23
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !26, !noalias !23
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !23
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !23
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !26, !noalias !23
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !26, !noalias !23
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !23
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !23
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !26, !noalias !23
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !26, !noalias !23
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !23
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !23
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !26, !noalias !23
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !26, !noalias !23
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !28

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !23
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !23
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !26, !noalias !23
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !26, !noalias !23
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !29

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !30

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !31

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.266"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.266"* %0
}

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.266"* sret, i32) local_unnamed_addr #1

declare void @_ZN22SubtleNotificationView13UpdateContentERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SubtleNotificationView*, %"class.std::__1::basic_string.266"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK21ExclusiveAccessBubble18GetInstructionTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.266"* sret, %class.ExclusiveAccessBubble*, %"class.std::__1::basic_string.266"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZNK26ExclusiveAccessBubbleViews18GetBrowserRootViewEv(%class.ExclusiveAccessBubbleViews* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 3
  %3 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %2, align 8
  %4 = bitcast %class.ExclusiveAccessBubbleViewsContext* %3 to %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)***
  %5 = load %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)**, %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)*** %4, align 8
  %6 = getelementptr inbounds %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)*, %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)** %5, i64 1
  %7 = load %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)*, %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)** %6, align 8
  %8 = tail call %"class.views::Widget"* %7(%class.ExclusiveAccessBubbleViewsContext* %3) #11
  %9 = tail call %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"* %8) #11
  ret %"class.views::View"* %9
}

declare %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews19AnimationProgressedEPKN3gfx9AnimationE(%class.ExclusiveAccessBubbleViews* nocapture readonly, %"class.gfx::Animation"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %4, i64 0, i32 0, i32 0
  %6 = tail call double @_ZNK3gfx9Animation19CurrentValueBetweenEdd(%"class.gfx::Animation"* %5, double 0.000000e+00, double 1.000000e+00) #11
  %7 = fptrunc double %6 to float
  %8 = fcmp oeq float %7, 0.000000e+00
  %9 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 4
  %10 = load %"class.views::Widget"*, %"class.views::Widget"** %9, align 8
  br i1 %8, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZN5views6Widget4HideEv(%"class.views::Widget"* %10) #11
  br label %14

12:                                               ; preds = %2
  tail call void @_ZN5views6Widget4ShowEv(%"class.views::Widget"* %10) #11
  %13 = load %"class.views::Widget"*, %"class.views::Widget"** %9, align 8
  tail call void @_ZN5views6Widget10SetOpacityEf(%"class.views::Widget"* %13, float %7) #11
  br label %14

14:                                               ; preds = %12, %11
  ret void
}

declare double @_ZNK3gfx9Animation19CurrentValueBetweenEdd(%"class.gfx::Animation"*, double, double) local_unnamed_addr #1

declare void @_ZN5views6Widget4HideEv(%"class.views::Widget"*) local_unnamed_addr #1

declare void @_ZN5views6Widget4ShowEv(%"class.views::Widget"*) local_unnamed_addr #1

declare void @_ZN5views6Widget10SetOpacityEf(%"class.views::Widget"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews14AnimationEndedEPKN3gfx9AnimationE(%class.ExclusiveAccessBubbleViews*, %"class.gfx::Animation"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %20

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %4, i64 0, i32 6
  %14 = load double, double* %13, align 8
  %15 = fcmp oeq double %14, 1.000000e+00
  br i1 %15, label %16, label %20

16:                                               ; preds = %8, %12
  %17 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 7
  %18 = bitcast %class.SubtleNotificationView** %17 to %"class.views::View"**
  %19 = load %"class.views::View"*, %"class.views::View"** %18, align 8
  tail call void @_ZN5views4View24NotifyAccessibilityEventEN2ax5mojom5EventEb(%"class.views::View"* %19, i32 2, i1 zeroext true) #11
  br label %20

20:                                               ; preds = %8, %16, %12
  %21 = bitcast %class.ExclusiveAccessBubbleViews* %0 to void (%class.ExclusiveAccessBubbleViews*, %"class.gfx::Animation"*)***
  %22 = load void (%class.ExclusiveAccessBubbleViews*, %"class.gfx::Animation"*)**, void (%class.ExclusiveAccessBubbleViews*, %"class.gfx::Animation"*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.ExclusiveAccessBubbleViews*, %"class.gfx::Animation"*)*, void (%class.ExclusiveAccessBubbleViews*, %"class.gfx::Animation"*)** %22, i64 3
  %24 = load void (%class.ExclusiveAccessBubbleViews*, %"class.gfx::Animation"*)*, void (%class.ExclusiveAccessBubbleViews*, %"class.gfx::Animation"*)** %23, align 8
  tail call void %24(%class.ExclusiveAccessBubbleViews* %0, %"class.gfx::Animation"* %1) #11
  ret void
}

declare void @_ZN5views4View24NotifyAccessibilityEventEN2ax5mojom5EventEb(%"class.views::View"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK26ExclusiveAccessBubbleViews12GetPopupRectEb(%class.ExclusiveAccessBubbleViews* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 7
  %4 = bitcast %class.SubtleNotificationView** %3 to %"class.views::View"**
  %5 = load %"class.views::View"*, %"class.views::View"** %4, align 8
  %6 = tail call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %5) #11
  %7 = trunc i64 %6 to i32
  %8 = lshr i64 %6, 32
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 3
  %11 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %10, align 8
  %12 = bitcast %class.ExclusiveAccessBubbleViewsContext* %11 to { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)***
  %13 = load { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)**, { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)*** %12, align 8
  %14 = getelementptr inbounds { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)*, { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)** %13, i64 5
  %15 = load { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)*, { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)** %14, align 8
  %16 = tail call { i64, i64 } %15(%class.ExclusiveAccessBubbleViewsContext* %11) #11
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = trunc i64 %17 to i32
  %19 = lshr i64 %17, 32
  %20 = trunc i64 %19 to i32
  %21 = extractvalue { i64, i64 } %16, 1
  %22 = trunc i64 %21 to i32
  %23 = sub nsw i32 %22, %7
  %24 = sdiv i32 %23, 2
  %25 = add nsw i32 %24, %18
  %26 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %10, align 8
  %27 = bitcast %class.ExclusiveAccessBubbleViewsContext* %26 to i1 (%class.ExclusiveAccessBubbleViewsContext*)***
  %28 = load i1 (%class.ExclusiveAccessBubbleViewsContext*)**, i1 (%class.ExclusiveAccessBubbleViewsContext*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%class.ExclusiveAccessBubbleViewsContext*)*, i1 (%class.ExclusiveAccessBubbleViewsContext*)** %28, i64 6
  %30 = load i1 (%class.ExclusiveAccessBubbleViewsContext*)*, i1 (%class.ExclusiveAccessBubbleViewsContext*)** %29, align 8
  %31 = tail call zeroext i1 %30(%class.ExclusiveAccessBubbleViewsContext* %26) #11
  br i1 %31, label %32, label %46

32:                                               ; preds = %2
  %33 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %10, align 8
  %34 = bitcast %class.ExclusiveAccessBubbleViewsContext* %33 to { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)***
  %35 = load { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)**, { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)*** %34, align 8
  %36 = getelementptr inbounds { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)*, { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)** %35, i64 7
  %37 = load { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)*, { i64, i64 } (%class.ExclusiveAccessBubbleViewsContext*)** %36, align 8
  %38 = tail call { i64, i64 } %37(%class.ExclusiveAccessBubbleViewsContext* %33) #11
  %39 = extractvalue { i64, i64 } %38, 0
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = extractvalue { i64, i64 } %38, 1
  %43 = lshr i64 %42, 32
  %44 = trunc i64 %43 to i32
  %45 = add nsw i32 %44, %41
  br label %46

46:                                               ; preds = %32, %2
  %47 = phi i32 [ %45, %32 ], [ %20, %2 ]
  %48 = load i32, i32* @_ZN21ExclusiveAccessBubble21kSimplifiedPopupTopPxE, align 4
  %49 = load %"class.views::View"*, %"class.views::View"** %4, align 8
  %50 = getelementptr inbounds %"class.views::View", %"class.views::View"* %49, i64 0, i32 33, i32 0, i32 0, i32 0
  %51 = load %"class.views::Border"*, %"class.views::Border"** %50, align 8
  %52 = bitcast %"class.views::Border"* %51 to { i64, i64 } (%"class.views::Border"*)***
  %53 = load { i64, i64 } (%"class.views::Border"*)**, { i64, i64 } (%"class.views::Border"*)*** %52, align 8
  %54 = getelementptr inbounds { i64, i64 } (%"class.views::Border"*)*, { i64, i64 } (%"class.views::Border"*)** %53, i64 3
  %55 = load { i64, i64 } (%"class.views::Border"*)*, { i64, i64 } (%"class.views::Border"*)** %54, align 8
  %56 = tail call { i64, i64 } %55(%"class.views::Border"* %51) #11
  %57 = extractvalue { i64, i64 } %56, 0
  %58 = trunc i64 %57 to i32
  %59 = sub nsw i32 %48, %58
  %60 = add nsw i32 %59, %47
  %61 = zext i32 %60 to i64
  %62 = shl nuw i64 %61, 32
  %63 = zext i32 %25 to i64
  %64 = or i64 %62, %63
  %65 = icmp sgt i32 %25, 0
  %66 = icmp sgt i32 %7, 0
  %67 = and i1 %66, %65
  %68 = sub nuw nsw i32 2147483647, %25
  %69 = icmp ult i32 %68, %7
  %70 = and i1 %69, %67
  %71 = select i1 %70, i32 %68, i32 %7
  %72 = icmp sgt i32 %60, 0
  %73 = icmp sgt i32 %9, 0
  %74 = and i1 %73, %72
  %75 = sub nuw nsw i32 2147483647, %60
  %76 = icmp ult i32 %75, %9
  %77 = and i1 %76, %74
  %78 = select i1 %77, i32 %75, i32 %9
  %79 = icmp sgt i32 %71, 0
  %80 = select i1 %79, i32 %71, i32 0
  %81 = icmp sgt i32 %78, 0
  %82 = select i1 %81, i32 %78, i32 0
  %83 = insertvalue { i64, i64 } undef, i64 %64, 0
  %84 = zext i32 %82 to i64
  %85 = shl nuw nsw i64 %84, 32
  %86 = zext i32 %80 to i64
  %87 = or i64 %85, %86
  %88 = insertvalue { i64, i64 } %83, i64 %87, 1
  ret { i64, i64 } %88
}

declare i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN26ExclusiveAccessBubbleViews20GetCursorScreenPointEv(%class.ExclusiveAccessBubbleViews* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 3
  %3 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %2, align 8
  %4 = bitcast %class.ExclusiveAccessBubbleViewsContext* %3 to i64 (%class.ExclusiveAccessBubbleViewsContext*)***
  %5 = load i64 (%class.ExclusiveAccessBubbleViewsContext*)**, i64 (%class.ExclusiveAccessBubbleViewsContext*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%class.ExclusiveAccessBubbleViewsContext*)*, i64 (%class.ExclusiveAccessBubbleViewsContext*)** %5, i64 4
  %7 = load i64 (%class.ExclusiveAccessBubbleViewsContext*)*, i64 (%class.ExclusiveAccessBubbleViewsContext*)** %6, align 8
  %8 = tail call i64 %7(%class.ExclusiveAccessBubbleViewsContext* %3) #11
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN26ExclusiveAccessBubbleViews19WindowContainsPointEN3gfx5PointE(%class.ExclusiveAccessBubbleViews* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Point"*
  store i64 %1, i64* %3, align 8
  %5 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 3
  %6 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %5, align 8
  %7 = bitcast %class.ExclusiveAccessBubbleViewsContext* %6 to %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)***
  %8 = load %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)**, %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)*** %7, align 8
  %9 = getelementptr inbounds %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)*, %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)** %8, i64 1
  %10 = load %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)*, %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)** %9, align 8
  %11 = tail call %"class.views::Widget"* %10(%class.ExclusiveAccessBubbleViewsContext* %6) #11
  %12 = tail call %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"* %11) #11
  %13 = call zeroext i1 @_ZNK5views4View12HitTestPointERKN3gfx5PointE(%"class.views::View"* %12, %"class.gfx::Point"* nonnull dereferenceable(8) %4) #11
  ret i1 %13
}

declare zeroext i1 @_ZNK5views4View12HitTestPointERKN3gfx5PointE(%"class.views::View"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN26ExclusiveAccessBubbleViews14IsWindowActiveEv(%class.ExclusiveAccessBubbleViews* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 3
  %3 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %2, align 8
  %4 = bitcast %class.ExclusiveAccessBubbleViewsContext* %3 to %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)***
  %5 = load %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)**, %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)*** %4, align 8
  %6 = getelementptr inbounds %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)*, %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)** %5, i64 1
  %7 = load %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)*, %"class.views::Widget"* (%class.ExclusiveAccessBubbleViewsContext*)** %6, align 8
  %8 = tail call %"class.views::Widget"* %7(%class.ExclusiveAccessBubbleViewsContext* %3) #11
  %9 = bitcast %"class.views::Widget"* %8 to i1 (%"class.views::Widget"*)***
  %10 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %10, i64 43
  %12 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.views::Widget"* %8) #11
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews4HideEv(%class.ExclusiveAccessBubbleViews* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.282", align 8
  %3 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.base::internal::BindStateBase"* %4 to i64
  %8 = bitcast %"class.base::OnceCallback.282"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = bitcast %"class.base::OnceCallback.282"* %2 to i64*
  store i64 %7, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %3, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback.282", %"class.base::OnceCallback.282"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*, i32)**
  %13 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* nonnull %4, i32 2) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  br label %14

14:                                               ; preds = %1, %6
  %15 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %16 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %15, align 8
  %17 = bitcast %"class.gfx::SlideAnimation"* %16 to void (%"class.gfx::SlideAnimation"*, i64)***
  %18 = load void (%"class.gfx::SlideAnimation"*, i64)**, void (%"class.gfx::SlideAnimation"*, i64)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*, i64)*, void (%"class.gfx::SlideAnimation"*, i64)** %18, i64 13
  %20 = load void (%"class.gfx::SlideAnimation"*, i64)*, void (%"class.gfx::SlideAnimation"*, i64)** %19, align 8
  call void %20(%"class.gfx::SlideAnimation"* %16, i64 700000) #11
  %21 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %15, align 8
  %22 = bitcast %"class.gfx::SlideAnimation"* %21 to void (%"class.gfx::SlideAnimation"*)***
  %23 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %23, i64 12
  %25 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %24, align 8
  call void %25(%"class.gfx::SlideAnimation"* %21) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews4ShowEv(%class.ExclusiveAccessBubbleViews* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %25, label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %3, i64 0, i32 6
  %13 = load double, double* %12, align 8
  %14 = fcmp oeq double %13, 1.000000e+00
  br i1 %14, label %25, label %15

15:                                               ; preds = %7, %11
  %16 = bitcast %"class.gfx::SlideAnimation"* %3 to void (%"class.gfx::SlideAnimation"*, i64)***
  %17 = load void (%"class.gfx::SlideAnimation"*, i64)**, void (%"class.gfx::SlideAnimation"*, i64)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*, i64)*, void (%"class.gfx::SlideAnimation"*, i64)** %17, i64 13
  %19 = load void (%"class.gfx::SlideAnimation"*, i64)*, void (%"class.gfx::SlideAnimation"*, i64)** %18, align 8
  tail call void %19(%"class.gfx::SlideAnimation"* %3, i64 350000) #11
  %20 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %2, align 8
  %21 = bitcast %"class.gfx::SlideAnimation"* %20 to void (%"class.gfx::SlideAnimation"*)***
  %22 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %22, i64 11
  %24 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %23, align 8
  tail call void %24(%"class.gfx::SlideAnimation"* %20) #11
  br label %25

25:                                               ; preds = %7, %11, %15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN26ExclusiveAccessBubbleViews11IsAnimatingEv(%class.ExclusiveAccessBubbleViews* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::SlideAnimation", %"class.gfx::SlideAnimation"* %3, i64 0, i32 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK26ExclusiveAccessBubbleViews17CanTriggerOnMouseEv(%class.ExclusiveAccessBubbleViews* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 3
  %3 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %2, align 8
  %4 = bitcast %class.ExclusiveAccessBubbleViewsContext* %3 to i1 (%class.ExclusiveAccessBubbleViewsContext*)***
  %5 = load i1 (%class.ExclusiveAccessBubbleViewsContext*)**, i1 (%class.ExclusiveAccessBubbleViewsContext*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.ExclusiveAccessBubbleViewsContext*)*, i1 (%class.ExclusiveAccessBubbleViewsContext*)** %5, i64 9
  %7 = load i1 (%class.ExclusiveAccessBubbleViewsContext*)*, i1 (%class.ExclusiveAccessBubbleViewsContext*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.ExclusiveAccessBubbleViewsContext* %3) #11
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews24OnFullscreenStateChangedEv(%class.ExclusiveAccessBubbleViews*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 4
  %3 = load %"class.views::Widget"*, %"class.views::Widget"** %2, align 8
  %4 = bitcast %"class.views::Widget"* %3 to i1 (%"class.views::Widget"*)***
  %5 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %5, i64 45
  %7 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.views::Widget"* %3) #11
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %10) #11
  br i1 %11, label %25, label %22

12:                                               ; preds = %1
  %13 = bitcast %class.ExclusiveAccessBubbleViews* %0 to i1 (%class.ExclusiveAccessBubbleViews*)***
  %14 = load i1 (%class.ExclusiveAccessBubbleViews*)**, i1 (%class.ExclusiveAccessBubbleViews*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %14, i64 13
  %16 = load i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.ExclusiveAccessBubbleViews* %0) #11
  %18 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0
  %19 = tail call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %18) #11
  %20 = xor i1 %17, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %12
  br i1 %17, label %22, label %24

22:                                               ; preds = %21, %9
  %23 = phi %class.ExclusiveAccessBubble* [ %18, %21 ], [ %10, %9 ]
  tail call void @_ZN21ExclusiveAccessBubble18StartWatchingMouseEv(%class.ExclusiveAccessBubble* %23) #11
  br label %25

24:                                               ; preds = %21
  tail call void @_ZN21ExclusiveAccessBubble17StopWatchingMouseEv(%class.ExclusiveAccessBubble* %18) #11
  br label %25

25:                                               ; preds = %9, %12, %22, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn664_N26ExclusiveAccessBubbleViews24OnFullscreenStateChangedEv(%class.ExclusiveAccessBubbleViews*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 -1, i32 0, i32 2, i32 3
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 90
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to %"class.views::Widget"**
  %5 = load %"class.views::Widget"*, %"class.views::Widget"** %4, align 8
  %6 = bitcast %"class.views::Widget"* %5 to i1 (%"class.views::Widget"*)***
  %7 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %7, i64 45
  %9 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.views::Widget"* %5) #11
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::unique_ptr"* %2 to %class.ExclusiveAccessBubble*
  %13 = tail call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %12) #11
  br i1 %13, label %28, label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.std::__1::unique_ptr"* %2 to %class.ExclusiveAccessBubbleViews*
  %16 = bitcast %"class.std::__1::unique_ptr"* %2 to i1 (%class.ExclusiveAccessBubbleViews*)***
  %17 = load i1 (%class.ExclusiveAccessBubbleViews*)**, i1 (%class.ExclusiveAccessBubbleViews*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %17, i64 13
  %19 = load i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %18, align 8
  %20 = tail call zeroext i1 %19(%class.ExclusiveAccessBubbleViews* %15) #11
  %21 = bitcast %"class.std::__1::unique_ptr"* %2 to %class.ExclusiveAccessBubble*
  %22 = tail call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %21) #11
  %23 = xor i1 %20, %22
  br i1 %23, label %24, label %28

24:                                               ; preds = %14
  br i1 %20, label %25, label %27

25:                                               ; preds = %24, %11
  %26 = phi %class.ExclusiveAccessBubble* [ %21, %24 ], [ %12, %11 ]
  tail call void @_ZN21ExclusiveAccessBubble18StartWatchingMouseEv(%class.ExclusiveAccessBubble* %26) #11
  br label %28

27:                                               ; preds = %24
  tail call void @_ZN21ExclusiveAccessBubble17StopWatchingMouseEv(%class.ExclusiveAccessBubble* %21) #11
  br label %28

28:                                               ; preds = %11, %14, %25, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews17OnWidgetDestroyedEPN5views6WidgetE(%class.ExclusiveAccessBubbleViews* nocapture readonly, %"class.views::Widget"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 3
  %4 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %3, align 8
  %5 = bitcast %class.ExclusiveAccessBubbleViewsContext* %4 to void (%class.ExclusiveAccessBubbleViewsContext*)***
  %6 = load void (%class.ExclusiveAccessBubbleViewsContext*)**, void (%class.ExclusiveAccessBubbleViewsContext*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.ExclusiveAccessBubbleViewsContext*)*, void (%class.ExclusiveAccessBubbleViewsContext*)** %6, i64 8
  %8 = load void (%class.ExclusiveAccessBubbleViewsContext*)*, void (%class.ExclusiveAccessBubbleViewsContext*)** %7, align 8
  tail call void %8(%class.ExclusiveAccessBubbleViewsContext* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn688_N26ExclusiveAccessBubbleViews17OnWidgetDestroyedEPN5views6WidgetE(%class.ExclusiveAccessBubbleViews* nocapture readonly, %"class.views::Widget"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 -1, i32 0, i32 2, i32 2, i32 7
  %4 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 89
  %5 = bitcast %"struct.url::Component"* %4 to %class.ExclusiveAccessBubbleViewsContext**
  %6 = load %class.ExclusiveAccessBubbleViewsContext*, %class.ExclusiveAccessBubbleViewsContext** %5, align 8
  %7 = bitcast %class.ExclusiveAccessBubbleViewsContext* %6 to void (%class.ExclusiveAccessBubbleViewsContext*)***
  %8 = load void (%class.ExclusiveAccessBubbleViewsContext*)**, void (%class.ExclusiveAccessBubbleViewsContext*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.ExclusiveAccessBubbleViewsContext*)*, void (%class.ExclusiveAccessBubbleViewsContext*)** %8, i64 8
  %10 = load void (%class.ExclusiveAccessBubbleViewsContext*)*, void (%class.ExclusiveAccessBubbleViewsContext*)** %9, align 8
  tail call void %10(%class.ExclusiveAccessBubbleViewsContext* %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExclusiveAccessBubbleViews25OnWidgetVisibilityChangedEPN5views6WidgetEb(%class.ExclusiveAccessBubbleViews*, %"class.views::Widget"* nocapture readnone, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 4
  %5 = load %"class.views::Widget"*, %"class.views::Widget"** %4, align 8
  %6 = bitcast %"class.views::Widget"* %5 to i1 (%"class.views::Widget"*)***
  %7 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %7, i64 45
  %9 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.views::Widget"* %5) #11
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %12) #11
  br i1 %13, label %27, label %24

14:                                               ; preds = %3
  %15 = bitcast %class.ExclusiveAccessBubbleViews* %0 to i1 (%class.ExclusiveAccessBubbleViews*)***
  %16 = load i1 (%class.ExclusiveAccessBubbleViews*)**, i1 (%class.ExclusiveAccessBubbleViews*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %16, i64 13
  %18 = load i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %17, align 8
  %19 = tail call zeroext i1 %18(%class.ExclusiveAccessBubbleViews* %0) #11
  %20 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %20) #11
  %22 = xor i1 %19, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %14
  br i1 %19, label %24, label %26

24:                                               ; preds = %23, %11
  %25 = phi %class.ExclusiveAccessBubble* [ %20, %23 ], [ %12, %11 ]
  tail call void @_ZN21ExclusiveAccessBubble18StartWatchingMouseEv(%class.ExclusiveAccessBubble* %25) #11
  br label %27

26:                                               ; preds = %23
  tail call void @_ZN21ExclusiveAccessBubble17StopWatchingMouseEv(%class.ExclusiveAccessBubble* %20) #11
  br label %27

27:                                               ; preds = %11, %14, %24, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn688_N26ExclusiveAccessBubbleViews25OnWidgetVisibilityChangedEPN5views6WidgetEb(%class.ExclusiveAccessBubbleViews*, %"class.views::Widget"* nocapture readnone, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ExclusiveAccessBubbleViews, %class.ExclusiveAccessBubbleViews* %0, i64 -1, i32 0, i32 2, i32 2, i32 7
  %5 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 90
  %6 = bitcast %"struct.url::Component"* %5 to %"class.views::Widget"**
  %7 = load %"class.views::Widget"*, %"class.views::Widget"** %6, align 8
  %8 = bitcast %"class.views::Widget"* %7 to i1 (%"class.views::Widget"*)***
  %9 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %9, i64 45
  %11 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.views::Widget"* %7) #11
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = bitcast %"struct.url::Component"* %4 to %class.ExclusiveAccessBubble*
  %15 = tail call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %14) #11
  br i1 %15, label %30, label %27

16:                                               ; preds = %3
  %17 = bitcast %"struct.url::Component"* %4 to %class.ExclusiveAccessBubbleViews*
  %18 = bitcast %"struct.url::Component"* %4 to i1 (%class.ExclusiveAccessBubbleViews*)***
  %19 = load i1 (%class.ExclusiveAccessBubbleViews*)**, i1 (%class.ExclusiveAccessBubbleViews*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %19, i64 13
  %21 = load i1 (%class.ExclusiveAccessBubbleViews*)*, i1 (%class.ExclusiveAccessBubbleViews*)** %20, align 8
  %22 = tail call zeroext i1 %21(%class.ExclusiveAccessBubbleViews* %17) #11
  %23 = bitcast %"struct.url::Component"* %4 to %class.ExclusiveAccessBubble*
  %24 = tail call zeroext i1 @_ZNK21ExclusiveAccessBubble15IsWatchingMouseEv(%class.ExclusiveAccessBubble* %23) #11
  %25 = xor i1 %22, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %16
  br i1 %22, label %27, label %29

27:                                               ; preds = %26, %13
  %28 = phi %class.ExclusiveAccessBubble* [ %23, %26 ], [ %14, %13 ]
  tail call void @_ZN21ExclusiveAccessBubble18StartWatchingMouseEv(%class.ExclusiveAccessBubble* %28) #11
  br label %30

29:                                               ; preds = %26
  tail call void @_ZN21ExclusiveAccessBubble17StopWatchingMouseEv(%class.ExclusiveAccessBubble* %23) #11
  br label %30

30:                                               ; preds = %13, %16, %27, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx17AnimationDelegate17AnimationCanceledEPKNS_9AnimationE(%"class.gfx::AnimationDelegate"*, %"class.gfx::Animation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx17AnimationDelegate24AnimationContainerWasSetEPNS_18AnimationContainerE(%"class.gfx::AnimationDelegate"*, %"class.gfx::AnimationContainer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views14WidgetObserver15OnWidgetClosingEPNS_6WidgetE(%"class.views::WidgetObserver"*, %"class.views::Widget"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views14WidgetObserver15OnWidgetCreatedEPNS_6WidgetE(%"class.views::WidgetObserver"*, %"class.views::Widget"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views14WidgetObserver18OnWidgetDestroyingEPNS_6WidgetE(%"class.views::WidgetObserver"*, %"class.views::Widget"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views14WidgetObserver21OnWidgetDragWillStartEPNS_6WidgetE(%"class.views::WidgetObserver"*, %"class.views::Widget"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views14WidgetObserver20OnWidgetDragCompleteEPNS_6WidgetE(%"class.views::WidgetObserver"*, %"class.views::Widget"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views14WidgetObserver26OnWidgetVisibilityChangingEPNS_6WidgetEb(%"class.views::WidgetObserver"*, %"class.views::Widget"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views14WidgetObserver25OnWidgetActivationChangedEPNS_6WidgetEb(%"class.views::WidgetObserver"*, %"class.views::Widget"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views14WidgetObserver21OnWidgetBoundsChangedEPNS_6WidgetERKN3gfx4RectE(%"class.views::WidgetObserver"*, %"class.views::Widget"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views14WidgetObserver20OnWidgetThemeChangedEPNS_6WidgetE(%"class.views::WidgetObserver"*, %"class.views::Widget"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18FullscreenObserverD0Ev(%class.FullscreenObserver*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN20FullscreenController14RemoveObserverEP18FullscreenObserver(%class.FullscreenController*, %class.FullscreenObserver*) local_unnamed_addr #1

declare void @_ZN22SubtleNotificationViewC1Ev(%class.SubtleNotificationView*) unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare void @_ZN20FullscreenController11AddObserverEP18FullscreenObserver(%class.FullscreenController*, %class.FullscreenObserver*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEDn(i8*) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIP20FullscreenControllerEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12DeleteHelperIN5views6WidgetEE8DoDeleteEPKv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %"class.views::Widget"*
  %5 = bitcast i8* %0 to void (%"class.views::Widget"*)***
  %6 = load void (%"class.views::Widget"*)**, void (%"class.views::Widget"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.views::Widget"*)*, void (%"class.views::Widget"*)** %6, i64 1
  %8 = load void (%"class.views::Widget"*)*, void (%"class.views::Widget"*)** %7, align 8
  tail call void %8(%"class.views::Widget"* nonnull %4) #11
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.266"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.266"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.266"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.266"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !32
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !32
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !35, !noalias !32
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !35, !noalias !32
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !32
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !32
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !35, !noalias !32
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !35, !noalias !32
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !32
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !32
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !35, !noalias !32
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !35, !noalias !32
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !32
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !32
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !35, !noalias !32
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !35, !noalias !32
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !37

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !32
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !32
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !35, !noalias !32
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !35, !noalias !32
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !38

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !39

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !40

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !41

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !42

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !43

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !45
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !45
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !48, !noalias !45
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !48, !noalias !45
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !45
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !45
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !48, !noalias !45
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !48, !noalias !45
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !45
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !45
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !48, !noalias !45
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !48, !noalias !45
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !45
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !45
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !48, !noalias !45
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !48, !noalias !45
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !50

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !45
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !45
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !48, !noalias !45
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !48, !noalias !45
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !51

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !52

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !53

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.266"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.266", %"class.std::__1::basic_string.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !9}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !9}
!41 = distinct !{!41, !9}
!42 = distinct !{!42, !11}
!43 = distinct !{!43, !44, !9}
!44 = !{!"llvm.loop.unroll.runtime.disable"}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !9}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !11}
!53 = distinct !{!53, !9}
