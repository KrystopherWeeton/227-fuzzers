; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/encoder/denoising.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/encoder/denoising.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.vp8_denoiser = type { [4 x %struct.yv12_buffer_config], %struct.yv12_buffer_config, %struct.yv12_buffer_config, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.denoise_params }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.denoise_params = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.macroblock = type { [400 x i16], [400 x i16], [256 x i8], i8*, [25 x %struct.block], %struct.yv12_buffer_config, %struct.macroblockd, %struct.PARTITION_INFO*, %struct.PARTITION_INFO*, %struct.PARTITION_INFO*, [4 x i32], %struct.search_site*, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32, i32, [2 x i32*], [2 x i32*], [10 x i32]*, [10 x i32]*, [10 x [10 x i32]]*, i32*, [8 x [3 x [12 x i32]]]*, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.mv_context*, i32, i32, i32, i32, i32, i32, %union.int_mv, i32, i32, i8, i32, [4 x [8 x [3 x [12 x i32]]]], [2 x [2047 x i32]], [5 x i32], [4 x i32], i64, i64, [4 x i32], [20 x i32], [20 x i32], i32, [20 x i32], i32, i32, i32, i32, i32, [1024 x i32], void (i16*, i16*, i32)*, void (i16*, i16*, i32)*, void (i16*, i16*, i32)*, void (%struct.block*, %struct.blockd*)*, i32, i32, [8 x i8] }
%struct.block = type { i16*, i16*, i16*, i16*, i16*, i16*, i16*, i16*, i16, i8**, i32, i32 }
%struct.macroblockd = type { [384 x i8], [400 x i16], [400 x i16], [25 x i8], [7 x i8], [16 x i16], [16 x i16], [16 x i16], [16 x i16], [25 x %struct.blockd], i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, %struct.modeinfo*, i32, i32, i32, i32, [3 x i8*], [3 x i8*], [2 x i32], %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES*, i8, i8, i8, i8, [3 x i8], [2 x [4 x i8]], i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], i32, i32, i32, i32, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, i8*, i32, %struct.vpx_internal_error_info, [16 x i8], [704 x i8] }
%struct.blockd = type { i16*, i16*, i8*, i16*, i32, i8*, %union.b_mode_info }
%union.b_mode_info = type { i32 }
%struct.modeinfo = type { %struct.MB_MODE_INFO, [16 x %union.b_mode_info] }
%struct.MB_MODE_INFO = type { i8, i8, i8, i8, %union.int_mv, i8, i8, i8, i8 }
%struct.ENTROPY_CONTEXT_PLANES = type { [4 x i8], [2 x i8], [2 x i8], i8 }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.PARTITION_INFO = type { i32, [16 x %struct.anon] }
%struct.anon = type { i32, %union.int_mv }
%struct.search_site = type { %struct.MV, i32 }
%struct.MV = type { i16, i16 }
%struct.mv_context = type { [19 x i8] }
%union.int_mv = type { i32 }
%struct.loop_filter_info_n = type { [64 x [16 x i8]], [64 x [16 x i8]], [64 x [16 x i8]], [4 x [16 x i8]], [4 x [4 x [4 x i8]]], [2 x [64 x i8]], [10 x i8], [6 x i8] }
%struct.loop_filter_info = type { i8*, i8*, i8*, i8* }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_denoiser_filter_c(i8* nocapture readonly, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = alloca [16 x i32], align 16
  %10 = bitcast [16 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 64, i1 false)
  %11 = icmp ult i32 %6, 25
  br i1 %11, label %12, label %20

12:                                               ; preds = %8
  %13 = icmp eq i32 %7, 0
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i32
  %16 = select i1 %13, i32 1, i32 2
  %17 = add nuw nsw i32 %16, 3
  %18 = or i32 %16, 4
  %19 = add nuw nsw i32 %16, 6
  br label %20

20:                                               ; preds = %12, %8
  %21 = phi i32 [ %19, %12 ], [ 6, %8 ]
  %22 = phi i32 [ %18, %12 ], [ 4, %8 ]
  %23 = phi i32 [ %17, %12 ], [ 3, %8 ]
  %24 = phi i32 [ %15, %12 ], [ 0, %8 ]
  %25 = add nuw nsw i32 %24, 3
  %26 = or i32 %24, 4
  %27 = sext i32 %5 to i64
  %28 = sext i32 %1 to i64
  %29 = sext i32 %3 to i64
  br label %30

30:                                               ; preds = %89, %20
  %31 = phi i32 [ 0, %20 ], [ %93, %89 ]
  %32 = phi i8* [ %0, %20 ], [ %91, %89 ]
  %33 = phi i8* [ %2, %20 ], [ %92, %89 ]
  %34 = phi i8* [ %4, %20 ], [ %90, %89 ]
  br label %39

35:                                               ; preds = %89
  %36 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 0
  %37 = load i32, i32* %36, align 16
  %38 = icmp sgt i32 %37, 127
  br i1 %38, label %95, label %96

39:                                               ; preds = %86, %30
  %40 = phi i64 [ 0, %30 ], [ %87, %86 ]
  %41 = getelementptr inbounds i8, i8* %32, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds i8, i8* %34, i64 %40
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = sub nsw i32 %43, %46
  %48 = icmp slt i32 %47, 0
  %49 = sub nsw i32 0, %47
  %50 = select i1 %48, i32 %49, i32 %47
  %51 = icmp sgt i32 %50, %25
  br i1 %51, label %57, label %52

52:                                               ; preds = %39
  %53 = getelementptr inbounds i8, i8* %33, i64 %40
  store i8 %42, i8* %53, align 1
  %54 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 %40
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, %47
  store i32 %56, i32* %54, align 4
  br label %86

57:                                               ; preds = %39
  %58 = icmp sge i32 %50, %26
  %59 = icmp slt i32 %50, 8
  %60 = and i1 %58, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = and i32 %50, 2147483640
  %63 = icmp eq i32 %62, 8
  %64 = select i1 %63, i32 %22, i32 %21
  br label %65

65:                                               ; preds = %61, %57
  %66 = phi i32 [ %23, %57 ], [ %64, %61 ]
  %67 = icmp sgt i32 %47, 0
  br i1 %67, label %68, label %77

68:                                               ; preds = %65
  %69 = add nsw i32 %66, %46
  %70 = icmp slt i32 %69, 255
  %71 = select i1 %70, i32 %69, i32 255
  %72 = trunc i32 %71 to i8
  %73 = getelementptr inbounds i8, i8* %33, i64 %40
  store i8 %72, i8* %73, align 1
  %74 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 %40
  %75 = load i32, i32* %74, align 4
  %76 = add nsw i32 %75, %66
  store i32 %76, i32* %74, align 4
  br label %86

77:                                               ; preds = %65
  %78 = sub nsw i32 %46, %66
  %79 = icmp sgt i32 %78, 0
  %80 = select i1 %79, i32 %78, i32 0
  %81 = trunc i32 %80 to i8
  %82 = getelementptr inbounds i8, i8* %33, i64 %40
  store i8 %81, i8* %82, align 1
  %83 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 %40
  %84 = load i32, i32* %83, align 4
  %85 = sub nsw i32 %84, %66
  store i32 %85, i32* %83, align 4
  br label %86

86:                                               ; preds = %68, %77, %52
  %87 = add nuw nsw i64 %40, 1
  %88 = icmp eq i64 %87, 16
  br i1 %88, label %89, label %39

89:                                               ; preds = %86
  %90 = getelementptr inbounds i8, i8* %34, i64 %27
  %91 = getelementptr inbounds i8, i8* %32, i64 %28
  %92 = getelementptr inbounds i8, i8* %33, i64 %29
  %93 = add nuw nsw i32 %31, 1
  %94 = icmp eq i32 %93, 16
  br i1 %94, label %35, label %30

95:                                               ; preds = %35
  store i32 127, i32* %36, align 16
  br label %96

96:                                               ; preds = %95, %35
  %97 = phi i32 [ 127, %95 ], [ %37, %35 ]
  %98 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp sgt i32 %99, 127
  br i1 %100, label %274, label %275

101:                                              ; preds = %373
  %102 = sub nsw i32 %380, %377
  %103 = ashr i32 %102, 8
  %104 = add nsw i32 %103, 1
  %105 = icmp slt i32 %104, 4
  br i1 %105, label %106, label %180

106:                                              ; preds = %101
  %107 = shl nsw i32 %5, 4
  %108 = sext i32 %107 to i64
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds i8, i8* %90, i64 %109
  %111 = shl nsw i32 %1, 4
  %112 = sext i32 %111 to i64
  %113 = sub nsw i64 0, %112
  %114 = getelementptr inbounds i8, i8* %91, i64 %113
  %115 = shl nsw i32 %3, 4
  %116 = sext i32 %115 to i64
  %117 = sub nsw i64 0, %116
  %118 = getelementptr inbounds i8, i8* %92, i64 %117
  br label %119

119:                                              ; preds = %165, %106
  %120 = phi i32 [ 0, %106 ], [ %169, %165 ]
  %121 = phi i8* [ %114, %106 ], [ %167, %165 ]
  %122 = phi i8* [ %118, %106 ], [ %168, %165 ]
  %123 = phi i8* [ %110, %106 ], [ %166, %165 ]
  br label %124

124:                                              ; preds = %162, %119
  %125 = phi i64 [ 0, %119 ], [ %163, %162 ]
  %126 = getelementptr inbounds i8, i8* %121, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = getelementptr inbounds i8, i8* %123, i64 %125
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = sub nsw i32 %128, %131
  %133 = icmp slt i32 %132, 0
  %134 = sub nsw i32 0, %132
  %135 = select i1 %133, i32 %134, i32 %132
  %136 = icmp sgt i32 %135, %104
  %137 = select i1 %136, i32 %104, i32 %135
  %138 = icmp sgt i32 %132, 0
  br i1 %138, label %139, label %150

139:                                              ; preds = %124
  %140 = getelementptr inbounds i8, i8* %122, i64 %125
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = sub nsw i32 %142, %137
  %144 = icmp sgt i32 %143, 0
  %145 = select i1 %144, i32 %143, i32 0
  %146 = trunc i32 %145 to i8
  store i8 %146, i8* %140, align 1
  %147 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 %125
  %148 = load i32, i32* %147, align 4
  %149 = sub nsw i32 %148, %137
  store i32 %149, i32* %147, align 4
  br label %162

150:                                              ; preds = %124
  br i1 %133, label %151, label %162

151:                                              ; preds = %150
  %152 = getelementptr inbounds i8, i8* %122, i64 %125
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = add nsw i32 %137, %154
  %156 = icmp slt i32 %155, 255
  %157 = select i1 %156, i32 %155, i32 255
  %158 = trunc i32 %157 to i8
  store i8 %158, i8* %152, align 1
  %159 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 %125
  %160 = load i32, i32* %159, align 4
  %161 = add nsw i32 %160, %137
  store i32 %161, i32* %159, align 4
  br label %162

162:                                              ; preds = %150, %151, %139
  %163 = add nuw nsw i64 %125, 1
  %164 = icmp eq i64 %163, 16
  br i1 %164, label %165, label %124

165:                                              ; preds = %162
  %166 = getelementptr inbounds i8, i8* %123, i64 %27
  %167 = getelementptr inbounds i8, i8* %121, i64 %28
  %168 = getelementptr inbounds i8, i8* %122, i64 %29
  %169 = add nuw nsw i32 %120, 1
  %170 = icmp eq i32 %169, 16
  br i1 %170, label %171, label %119

171:                                              ; preds = %165
  %172 = load i32, i32* %36, align 16
  %173 = icmp sgt i32 %172, 127
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  store i32 127, i32* %36, align 16
  br label %175

175:                                              ; preds = %174, %171
  %176 = phi i32 [ 127, %174 ], [ %172, %171 ]
  %177 = load i32, i32* %98, align 4
  %178 = icmp sgt i32 %177, 127
  br i1 %178, label %182, label %183

179:                                              ; preds = %267, %373
  tail call void @vp8_copy_mem16x16_sse2(i8* %2, i32 %3, i8* %4, i32 %5) #4
  br label %180

180:                                              ; preds = %267, %101, %179
  %181 = phi i32 [ 1, %179 ], [ 0, %267 ], [ 0, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #4
  ret i32 %181

182:                                              ; preds = %175
  store i32 127, i32* %98, align 4
  br label %183

183:                                              ; preds = %182, %175
  %184 = phi i32 [ 127, %182 ], [ %177, %175 ]
  %185 = add nsw i32 %184, %176
  %186 = load i32, i32* %278, align 8
  %187 = icmp sgt i32 %186, 127
  br i1 %187, label %188, label %189

188:                                              ; preds = %183
  store i32 127, i32* %278, align 8
  br label %189

189:                                              ; preds = %188, %183
  %190 = phi i32 [ 127, %188 ], [ %186, %183 ]
  %191 = add nsw i32 %190, %185
  %192 = load i32, i32* %285, align 4
  %193 = icmp sgt i32 %192, 127
  br i1 %193, label %194, label %195

194:                                              ; preds = %189
  store i32 127, i32* %285, align 4
  br label %195

195:                                              ; preds = %194, %189
  %196 = phi i32 [ 127, %194 ], [ %192, %189 ]
  %197 = add nsw i32 %196, %191
  %198 = load i32, i32* %292, align 16
  %199 = icmp sgt i32 %198, 127
  br i1 %199, label %200, label %201

200:                                              ; preds = %195
  store i32 127, i32* %292, align 16
  br label %201

201:                                              ; preds = %200, %195
  %202 = phi i32 [ 127, %200 ], [ %198, %195 ]
  %203 = add nsw i32 %202, %197
  %204 = load i32, i32* %299, align 4
  %205 = icmp sgt i32 %204, 127
  br i1 %205, label %206, label %207

206:                                              ; preds = %201
  store i32 127, i32* %299, align 4
  br label %207

207:                                              ; preds = %206, %201
  %208 = phi i32 [ 127, %206 ], [ %204, %201 ]
  %209 = add nsw i32 %208, %203
  %210 = load i32, i32* %306, align 8
  %211 = icmp sgt i32 %210, 127
  br i1 %211, label %212, label %213

212:                                              ; preds = %207
  store i32 127, i32* %306, align 8
  br label %213

213:                                              ; preds = %212, %207
  %214 = phi i32 [ 127, %212 ], [ %210, %207 ]
  %215 = add nsw i32 %214, %209
  %216 = load i32, i32* %313, align 4
  %217 = icmp sgt i32 %216, 127
  br i1 %217, label %218, label %219

218:                                              ; preds = %213
  store i32 127, i32* %313, align 4
  br label %219

219:                                              ; preds = %218, %213
  %220 = phi i32 [ 127, %218 ], [ %216, %213 ]
  %221 = add nsw i32 %220, %215
  %222 = load i32, i32* %320, align 16
  %223 = icmp sgt i32 %222, 127
  br i1 %223, label %224, label %225

224:                                              ; preds = %219
  store i32 127, i32* %320, align 16
  br label %225

225:                                              ; preds = %224, %219
  %226 = phi i32 [ 127, %224 ], [ %222, %219 ]
  %227 = add nsw i32 %226, %221
  %228 = load i32, i32* %327, align 4
  %229 = icmp sgt i32 %228, 127
  br i1 %229, label %230, label %231

230:                                              ; preds = %225
  store i32 127, i32* %327, align 4
  br label %231

231:                                              ; preds = %230, %225
  %232 = phi i32 [ 127, %230 ], [ %228, %225 ]
  %233 = add nsw i32 %232, %227
  %234 = load i32, i32* %334, align 8
  %235 = icmp sgt i32 %234, 127
  br i1 %235, label %236, label %237

236:                                              ; preds = %231
  store i32 127, i32* %334, align 8
  br label %237

237:                                              ; preds = %236, %231
  %238 = phi i32 [ 127, %236 ], [ %234, %231 ]
  %239 = add nsw i32 %238, %233
  %240 = load i32, i32* %341, align 4
  %241 = icmp sgt i32 %240, 127
  br i1 %241, label %242, label %243

242:                                              ; preds = %237
  store i32 127, i32* %341, align 4
  br label %243

243:                                              ; preds = %242, %237
  %244 = phi i32 [ 127, %242 ], [ %240, %237 ]
  %245 = add nsw i32 %244, %239
  %246 = load i32, i32* %348, align 16
  %247 = icmp sgt i32 %246, 127
  br i1 %247, label %248, label %249

248:                                              ; preds = %243
  store i32 127, i32* %348, align 16
  br label %249

249:                                              ; preds = %248, %243
  %250 = phi i32 [ 127, %248 ], [ %246, %243 ]
  %251 = add nsw i32 %250, %245
  %252 = load i32, i32* %355, align 4
  %253 = icmp sgt i32 %252, 127
  br i1 %253, label %254, label %255

254:                                              ; preds = %249
  store i32 127, i32* %355, align 4
  br label %255

255:                                              ; preds = %254, %249
  %256 = phi i32 [ 127, %254 ], [ %252, %249 ]
  %257 = add nsw i32 %256, %251
  %258 = load i32, i32* %362, align 8
  %259 = icmp sgt i32 %258, 127
  br i1 %259, label %260, label %261

260:                                              ; preds = %255
  store i32 127, i32* %362, align 8
  br label %261

261:                                              ; preds = %260, %255
  %262 = phi i32 [ 127, %260 ], [ %258, %255 ]
  %263 = add nsw i32 %262, %257
  %264 = load i32, i32* %369, align 4
  %265 = icmp sgt i32 %264, 127
  br i1 %265, label %266, label %267

266:                                              ; preds = %261
  store i32 127, i32* %369, align 4
  br label %267

267:                                              ; preds = %266, %261
  %268 = phi i32 [ 127, %266 ], [ %264, %261 ]
  %269 = add nsw i32 %268, %263
  %270 = icmp slt i32 %269, 0
  %271 = sub nsw i32 0, %269
  %272 = select i1 %270, i32 %271, i32 %269
  %273 = icmp sgt i32 %272, %377
  br i1 %273, label %180, label %179

274:                                              ; preds = %96
  store i32 127, i32* %98, align 4
  br label %275

275:                                              ; preds = %274, %96
  %276 = phi i32 [ 127, %274 ], [ %99, %96 ]
  %277 = add nsw i32 %276, %97
  %278 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 2
  %279 = load i32, i32* %278, align 8
  %280 = icmp sgt i32 %279, 127
  br i1 %280, label %281, label %282

281:                                              ; preds = %275
  store i32 127, i32* %278, align 8
  br label %282

282:                                              ; preds = %281, %275
  %283 = phi i32 [ 127, %281 ], [ %279, %275 ]
  %284 = add nsw i32 %283, %277
  %285 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 3
  %286 = load i32, i32* %285, align 4
  %287 = icmp sgt i32 %286, 127
  br i1 %287, label %288, label %289

288:                                              ; preds = %282
  store i32 127, i32* %285, align 4
  br label %289

289:                                              ; preds = %288, %282
  %290 = phi i32 [ 127, %288 ], [ %286, %282 ]
  %291 = add nsw i32 %290, %284
  %292 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 4
  %293 = load i32, i32* %292, align 16
  %294 = icmp sgt i32 %293, 127
  br i1 %294, label %295, label %296

295:                                              ; preds = %289
  store i32 127, i32* %292, align 16
  br label %296

296:                                              ; preds = %295, %289
  %297 = phi i32 [ 127, %295 ], [ %293, %289 ]
  %298 = add nsw i32 %297, %291
  %299 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 5
  %300 = load i32, i32* %299, align 4
  %301 = icmp sgt i32 %300, 127
  br i1 %301, label %302, label %303

302:                                              ; preds = %296
  store i32 127, i32* %299, align 4
  br label %303

303:                                              ; preds = %302, %296
  %304 = phi i32 [ 127, %302 ], [ %300, %296 ]
  %305 = add nsw i32 %304, %298
  %306 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 6
  %307 = load i32, i32* %306, align 8
  %308 = icmp sgt i32 %307, 127
  br i1 %308, label %309, label %310

309:                                              ; preds = %303
  store i32 127, i32* %306, align 8
  br label %310

310:                                              ; preds = %309, %303
  %311 = phi i32 [ 127, %309 ], [ %307, %303 ]
  %312 = add nsw i32 %311, %305
  %313 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 7
  %314 = load i32, i32* %313, align 4
  %315 = icmp sgt i32 %314, 127
  br i1 %315, label %316, label %317

316:                                              ; preds = %310
  store i32 127, i32* %313, align 4
  br label %317

317:                                              ; preds = %316, %310
  %318 = phi i32 [ 127, %316 ], [ %314, %310 ]
  %319 = add nsw i32 %318, %312
  %320 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 8
  %321 = load i32, i32* %320, align 16
  %322 = icmp sgt i32 %321, 127
  br i1 %322, label %323, label %324

323:                                              ; preds = %317
  store i32 127, i32* %320, align 16
  br label %324

324:                                              ; preds = %323, %317
  %325 = phi i32 [ 127, %323 ], [ %321, %317 ]
  %326 = add nsw i32 %325, %319
  %327 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 9
  %328 = load i32, i32* %327, align 4
  %329 = icmp sgt i32 %328, 127
  br i1 %329, label %330, label %331

330:                                              ; preds = %324
  store i32 127, i32* %327, align 4
  br label %331

331:                                              ; preds = %330, %324
  %332 = phi i32 [ 127, %330 ], [ %328, %324 ]
  %333 = add nsw i32 %332, %326
  %334 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 10
  %335 = load i32, i32* %334, align 8
  %336 = icmp sgt i32 %335, 127
  br i1 %336, label %337, label %338

337:                                              ; preds = %331
  store i32 127, i32* %334, align 8
  br label %338

338:                                              ; preds = %337, %331
  %339 = phi i32 [ 127, %337 ], [ %335, %331 ]
  %340 = add nsw i32 %339, %333
  %341 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 11
  %342 = load i32, i32* %341, align 4
  %343 = icmp sgt i32 %342, 127
  br i1 %343, label %344, label %345

344:                                              ; preds = %338
  store i32 127, i32* %341, align 4
  br label %345

345:                                              ; preds = %344, %338
  %346 = phi i32 [ 127, %344 ], [ %342, %338 ]
  %347 = add nsw i32 %346, %340
  %348 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 12
  %349 = load i32, i32* %348, align 16
  %350 = icmp sgt i32 %349, 127
  br i1 %350, label %351, label %352

351:                                              ; preds = %345
  store i32 127, i32* %348, align 16
  br label %352

352:                                              ; preds = %351, %345
  %353 = phi i32 [ 127, %351 ], [ %349, %345 ]
  %354 = add nsw i32 %353, %347
  %355 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 13
  %356 = load i32, i32* %355, align 4
  %357 = icmp sgt i32 %356, 127
  br i1 %357, label %358, label %359

358:                                              ; preds = %352
  store i32 127, i32* %355, align 4
  br label %359

359:                                              ; preds = %358, %352
  %360 = phi i32 [ 127, %358 ], [ %356, %352 ]
  %361 = add nsw i32 %360, %354
  %362 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 14
  %363 = load i32, i32* %362, align 8
  %364 = icmp sgt i32 %363, 127
  br i1 %364, label %365, label %366

365:                                              ; preds = %359
  store i32 127, i32* %362, align 8
  br label %366

366:                                              ; preds = %365, %359
  %367 = phi i32 [ 127, %365 ], [ %363, %359 ]
  %368 = add nsw i32 %367, %361
  %369 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 15
  %370 = load i32, i32* %369, align 4
  %371 = icmp sgt i32 %370, 127
  br i1 %371, label %372, label %373

372:                                              ; preds = %366
  store i32 127, i32* %369, align 4
  br label %373

373:                                              ; preds = %372, %366
  %374 = phi i32 [ 127, %372 ], [ %370, %366 ]
  %375 = add nsw i32 %374, %368
  %376 = icmp eq i32 %7, 0
  %377 = select i1 %376, i32 512, i32 600
  %378 = icmp slt i32 %375, 0
  %379 = sub nsw i32 0, %375
  %380 = select i1 %378, i32 %379, i32 %375
  %381 = icmp sgt i32 %380, %377
  br i1 %381, label %101, label %179
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @vp8_copy_mem16x16_sse2(i8*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_denoiser_filter_uv_c(i8* nocapture readonly, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = icmp ult i32 %6, 25
  br i1 %9, label %10, label %17

10:                                               ; preds = %8
  %11 = icmp eq i32 %7, 0
  %12 = select i1 %11, i32 1, i32 2
  %13 = add nuw nsw i32 %12, 3
  %14 = or i32 %12, 4
  %15 = add nuw nsw i32 %12, 6
  %16 = select i1 %11, i32 3, i32 4
  br label %17

17:                                               ; preds = %10, %8
  %18 = phi i32 [ %15, %10 ], [ 6, %8 ]
  %19 = phi i32 [ %14, %10 ], [ 4, %8 ]
  %20 = phi i32 [ %13, %10 ], [ 3, %8 ]
  %21 = phi i32 [ %16, %10 ], [ 3, %8 ]
  %22 = sext i32 %5 to i64
  %23 = load i8, i8* %4, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds i8, i8* %4, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = add nuw nsw i32 %24, %27
  %29 = getelementptr inbounds i8, i8* %4, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = add nuw nsw i32 %28, %31
  %33 = getelementptr inbounds i8, i8* %4, i64 3
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = add nuw nsw i32 %32, %35
  %37 = getelementptr inbounds i8, i8* %4, i64 4
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = add nuw nsw i32 %36, %39
  %41 = getelementptr inbounds i8, i8* %4, i64 5
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = add nuw nsw i32 %40, %43
  %45 = getelementptr inbounds i8, i8* %4, i64 6
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = add nuw nsw i32 %44, %47
  %49 = getelementptr inbounds i8, i8* %4, i64 7
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = add nuw nsw i32 %48, %51
  %53 = getelementptr inbounds i8, i8* %4, i64 %22
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = add nuw nsw i32 %52, %55
  %57 = getelementptr inbounds i8, i8* %53, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = add nuw nsw i32 %56, %59
  %61 = getelementptr inbounds i8, i8* %53, i64 2
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = add nuw nsw i32 %60, %63
  %65 = getelementptr inbounds i8, i8* %53, i64 3
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = add nuw nsw i32 %64, %67
  %69 = getelementptr inbounds i8, i8* %53, i64 4
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = add nuw nsw i32 %68, %71
  %73 = getelementptr inbounds i8, i8* %53, i64 5
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = add nuw nsw i32 %72, %75
  %77 = getelementptr inbounds i8, i8* %53, i64 6
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = add nuw nsw i32 %76, %79
  %81 = getelementptr inbounds i8, i8* %53, i64 7
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = add nuw nsw i32 %80, %83
  %85 = getelementptr inbounds i8, i8* %53, i64 %22
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = add nuw nsw i32 %84, %87
  %89 = getelementptr inbounds i8, i8* %85, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = add nuw nsw i32 %88, %91
  %93 = getelementptr inbounds i8, i8* %85, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = add nuw nsw i32 %92, %95
  %97 = getelementptr inbounds i8, i8* %85, i64 3
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = add nuw nsw i32 %96, %99
  %101 = getelementptr inbounds i8, i8* %85, i64 4
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = add nuw nsw i32 %100, %103
  %105 = getelementptr inbounds i8, i8* %85, i64 5
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = add nuw nsw i32 %104, %107
  %109 = getelementptr inbounds i8, i8* %85, i64 6
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = add nuw nsw i32 %108, %111
  %113 = getelementptr inbounds i8, i8* %85, i64 7
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = add nuw nsw i32 %112, %115
  %117 = getelementptr inbounds i8, i8* %85, i64 %22
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = add nuw nsw i32 %116, %119
  %121 = getelementptr inbounds i8, i8* %117, i64 1
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = add nuw nsw i32 %120, %123
  %125 = getelementptr inbounds i8, i8* %117, i64 2
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = add nuw nsw i32 %124, %127
  %129 = getelementptr inbounds i8, i8* %117, i64 3
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = add nuw nsw i32 %128, %131
  %133 = getelementptr inbounds i8, i8* %117, i64 4
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = add nuw nsw i32 %132, %135
  %137 = getelementptr inbounds i8, i8* %117, i64 5
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = add nuw nsw i32 %136, %139
  %141 = getelementptr inbounds i8, i8* %117, i64 6
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = add nuw nsw i32 %140, %143
  %145 = getelementptr inbounds i8, i8* %117, i64 7
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = add nuw nsw i32 %144, %147
  %149 = getelementptr inbounds i8, i8* %117, i64 %22
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = add nuw nsw i32 %148, %151
  %153 = getelementptr inbounds i8, i8* %149, i64 1
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = add nuw nsw i32 %152, %155
  %157 = getelementptr inbounds i8, i8* %149, i64 2
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = add nuw nsw i32 %156, %159
  %161 = getelementptr inbounds i8, i8* %149, i64 3
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = add nuw nsw i32 %160, %163
  %165 = getelementptr inbounds i8, i8* %149, i64 4
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = add nuw nsw i32 %164, %167
  %169 = getelementptr inbounds i8, i8* %149, i64 5
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = add nuw nsw i32 %168, %171
  %173 = getelementptr inbounds i8, i8* %149, i64 6
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = add nuw nsw i32 %172, %175
  %177 = getelementptr inbounds i8, i8* %149, i64 7
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = add nuw nsw i32 %176, %179
  %181 = getelementptr inbounds i8, i8* %149, i64 %22
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = add nuw nsw i32 %180, %183
  %185 = getelementptr inbounds i8, i8* %181, i64 1
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = add nuw nsw i32 %184, %187
  %189 = getelementptr inbounds i8, i8* %181, i64 2
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = add nuw nsw i32 %188, %191
  %193 = getelementptr inbounds i8, i8* %181, i64 3
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = add nuw nsw i32 %192, %195
  %197 = getelementptr inbounds i8, i8* %181, i64 4
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = add nuw nsw i32 %196, %199
  %201 = getelementptr inbounds i8, i8* %181, i64 5
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = add nuw nsw i32 %200, %203
  %205 = getelementptr inbounds i8, i8* %181, i64 6
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = add nuw nsw i32 %204, %207
  %209 = getelementptr inbounds i8, i8* %181, i64 7
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = add nuw nsw i32 %208, %211
  %213 = getelementptr inbounds i8, i8* %181, i64 %22
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  %216 = add nuw nsw i32 %212, %215
  %217 = getelementptr inbounds i8, i8* %213, i64 1
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = add nuw nsw i32 %216, %219
  %221 = getelementptr inbounds i8, i8* %213, i64 2
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = add nuw nsw i32 %220, %223
  %225 = getelementptr inbounds i8, i8* %213, i64 3
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = add nuw nsw i32 %224, %227
  %229 = getelementptr inbounds i8, i8* %213, i64 4
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = add nuw nsw i32 %228, %231
  %233 = getelementptr inbounds i8, i8* %213, i64 5
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = add nuw nsw i32 %232, %235
  %237 = getelementptr inbounds i8, i8* %213, i64 6
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = add nuw nsw i32 %236, %239
  %241 = getelementptr inbounds i8, i8* %213, i64 7
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = add nuw nsw i32 %240, %243
  %245 = getelementptr inbounds i8, i8* %213, i64 %22
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i32
  %248 = add nuw nsw i32 %244, %247
  %249 = getelementptr inbounds i8, i8* %245, i64 1
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = add nuw nsw i32 %248, %251
  %253 = getelementptr inbounds i8, i8* %245, i64 2
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = add nuw nsw i32 %252, %255
  %257 = getelementptr inbounds i8, i8* %245, i64 3
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = add nuw nsw i32 %256, %259
  %261 = getelementptr inbounds i8, i8* %245, i64 4
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = add nuw nsw i32 %260, %263
  %265 = getelementptr inbounds i8, i8* %245, i64 5
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = add nuw nsw i32 %264, %267
  %269 = getelementptr inbounds i8, i8* %245, i64 6
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i32
  %272 = add nuw nsw i32 %268, %271
  %273 = getelementptr inbounds i8, i8* %245, i64 7
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add nuw nsw i32 %272, %275
  %277 = add nsw i32 %276, -8192
  %278 = icmp slt i32 %277, 0
  %279 = sub nsw i32 8192, %276
  %280 = select i1 %278, i32 %279, i32 %277
  %281 = icmp slt i32 %280, 512
  br i1 %281, label %427, label %282

282:                                              ; preds = %17
  %283 = shl nsw i64 %22, 3
  %284 = getelementptr i8, i8* %4, i64 %283
  %285 = shl nsw i32 %5, 3
  %286 = sext i32 %285 to i64
  %287 = sub nsw i64 0, %286
  %288 = getelementptr inbounds i8, i8* %284, i64 %287
  %289 = sext i32 %1 to i64
  %290 = sext i32 %3 to i64
  br label %291

291:                                              ; preds = %342, %282
  %292 = phi i32 [ 0, %282 ], [ %339, %342 ]
  %293 = phi i32 [ 0, %282 ], [ %346, %342 ]
  %294 = phi i8* [ %0, %282 ], [ %344, %342 ]
  %295 = phi i8* [ %2, %282 ], [ %345, %342 ]
  %296 = phi i8* [ %288, %282 ], [ %343, %342 ]
  br label %297

297:                                              ; preds = %338, %291
  %298 = phi i64 [ 0, %291 ], [ %340, %338 ]
  %299 = phi i32 [ %292, %291 ], [ %339, %338 ]
  %300 = getelementptr inbounds i8, i8* %294, i64 %298
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  %303 = getelementptr inbounds i8, i8* %296, i64 %298
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i32
  %306 = sub nsw i32 %302, %305
  %307 = icmp slt i32 %306, 0
  %308 = sub nsw i32 0, %306
  %309 = select i1 %307, i32 %308, i32 %306
  %310 = icmp sgt i32 %309, %21
  br i1 %310, label %314, label %311

311:                                              ; preds = %297
  %312 = getelementptr inbounds i8, i8* %295, i64 %298
  store i8 %301, i8* %312, align 1
  %313 = add nsw i32 %306, %299
  br label %338

314:                                              ; preds = %297
  %315 = and i32 %309, 2147483644
  %316 = icmp eq i32 %315, 4
  br i1 %316, label %321, label %317

317:                                              ; preds = %314
  %318 = and i32 %309, 2147483640
  %319 = icmp eq i32 %318, 8
  %320 = select i1 %319, i32 %19, i32 %18
  br label %321

321:                                              ; preds = %317, %314
  %322 = phi i32 [ %20, %314 ], [ %320, %317 ]
  %323 = icmp sgt i32 %306, 0
  br i1 %323, label %324, label %331

324:                                              ; preds = %321
  %325 = add nsw i32 %322, %305
  %326 = icmp slt i32 %325, 255
  %327 = select i1 %326, i32 %325, i32 255
  %328 = trunc i32 %327 to i8
  %329 = getelementptr inbounds i8, i8* %295, i64 %298
  store i8 %328, i8* %329, align 1
  %330 = add nsw i32 %322, %299
  br label %338

331:                                              ; preds = %321
  %332 = sub nsw i32 %305, %322
  %333 = icmp sgt i32 %332, 0
  %334 = select i1 %333, i32 %332, i32 0
  %335 = trunc i32 %334 to i8
  %336 = getelementptr inbounds i8, i8* %295, i64 %298
  store i8 %335, i8* %336, align 1
  %337 = sub nsw i32 %299, %322
  br label %338

338:                                              ; preds = %324, %331, %311
  %339 = phi i32 [ %313, %311 ], [ %330, %324 ], [ %337, %331 ]
  %340 = add nuw nsw i64 %298, 1
  %341 = icmp eq i64 %340, 8
  br i1 %341, label %342, label %297

342:                                              ; preds = %338
  %343 = getelementptr inbounds i8, i8* %296, i64 %22
  %344 = getelementptr inbounds i8, i8* %294, i64 %289
  %345 = getelementptr inbounds i8, i8* %295, i64 %290
  %346 = add nuw nsw i32 %293, 1
  %347 = icmp eq i32 %346, 8
  br i1 %347, label %348, label %291

348:                                              ; preds = %342
  %349 = icmp eq i32 %7, 0
  %350 = select i1 %349, i32 96, i32 128
  %351 = icmp slt i32 %339, 0
  %352 = sub nsw i32 0, %339
  %353 = select i1 %351, i32 %352, i32 %339
  %354 = icmp sgt i32 %353, %350
  br i1 %354, label %355, label %426

355:                                              ; preds = %348
  %356 = sub nsw i32 %353, %350
  %357 = ashr i32 %356, 8
  %358 = add nsw i32 %357, 1
  %359 = icmp slt i32 %358, 4
  br i1 %359, label %360, label %427

360:                                              ; preds = %355
  %361 = getelementptr inbounds i8, i8* %343, i64 %287
  %362 = shl nsw i32 %1, 3
  %363 = sext i32 %362 to i64
  %364 = sub nsw i64 0, %363
  %365 = getelementptr inbounds i8, i8* %344, i64 %364
  %366 = shl nsw i32 %3, 3
  %367 = sext i32 %366 to i64
  %368 = sub nsw i64 0, %367
  %369 = getelementptr inbounds i8, i8* %345, i64 %368
  br label %370

370:                                              ; preds = %415, %360
  %371 = phi i32 [ %339, %360 ], [ %412, %415 ]
  %372 = phi i32 [ 0, %360 ], [ %419, %415 ]
  %373 = phi i8* [ %365, %360 ], [ %417, %415 ]
  %374 = phi i8* [ %369, %360 ], [ %418, %415 ]
  %375 = phi i8* [ %361, %360 ], [ %416, %415 ]
  br label %376

376:                                              ; preds = %411, %370
  %377 = phi i64 [ 0, %370 ], [ %413, %411 ]
  %378 = phi i32 [ %371, %370 ], [ %412, %411 ]
  %379 = getelementptr inbounds i8, i8* %373, i64 %377
  %380 = load i8, i8* %379, align 1
  %381 = zext i8 %380 to i32
  %382 = getelementptr inbounds i8, i8* %375, i64 %377
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i32
  %385 = sub nsw i32 %381, %384
  %386 = icmp slt i32 %385, 0
  %387 = sub nsw i32 0, %385
  %388 = select i1 %386, i32 %387, i32 %385
  %389 = icmp sgt i32 %388, %358
  %390 = select i1 %389, i32 %358, i32 %388
  %391 = icmp sgt i32 %385, 0
  br i1 %391, label %392, label %401

392:                                              ; preds = %376
  %393 = getelementptr inbounds i8, i8* %374, i64 %377
  %394 = load i8, i8* %393, align 1
  %395 = zext i8 %394 to i32
  %396 = sub nsw i32 %395, %390
  %397 = icmp sgt i32 %396, 0
  %398 = select i1 %397, i32 %396, i32 0
  %399 = trunc i32 %398 to i8
  store i8 %399, i8* %393, align 1
  %400 = sub nsw i32 %378, %390
  br label %411

401:                                              ; preds = %376
  br i1 %386, label %402, label %411

402:                                              ; preds = %401
  %403 = getelementptr inbounds i8, i8* %374, i64 %377
  %404 = load i8, i8* %403, align 1
  %405 = zext i8 %404 to i32
  %406 = add nsw i32 %390, %405
  %407 = icmp slt i32 %406, 255
  %408 = select i1 %407, i32 %406, i32 255
  %409 = trunc i32 %408 to i8
  store i8 %409, i8* %403, align 1
  %410 = add nsw i32 %390, %378
  br label %411

411:                                              ; preds = %401, %402, %392
  %412 = phi i32 [ %400, %392 ], [ %410, %402 ], [ %378, %401 ]
  %413 = add nuw nsw i64 %377, 1
  %414 = icmp eq i64 %413, 8
  br i1 %414, label %415, label %376

415:                                              ; preds = %411
  %416 = getelementptr inbounds i8, i8* %375, i64 %22
  %417 = getelementptr inbounds i8, i8* %373, i64 %289
  %418 = getelementptr inbounds i8, i8* %374, i64 %290
  %419 = add nuw nsw i32 %372, 1
  %420 = icmp eq i32 %419, 8
  br i1 %420, label %421, label %370

421:                                              ; preds = %415
  %422 = icmp slt i32 %412, 0
  %423 = sub nsw i32 0, %412
  %424 = select i1 %422, i32 %423, i32 %412
  %425 = icmp sgt i32 %424, %350
  br i1 %425, label %427, label %426

426:                                              ; preds = %421, %348
  tail call void @vp8_copy_mem8x8_mmx(i8* %2, i32 %3, i8* %4, i32 %5) #4
  br label %427

427:                                              ; preds = %421, %355, %17, %426
  %428 = phi i32 [ 1, %426 ], [ 0, %421 ], [ 0, %17 ], [ 0, %355 ]
  ret i32 %428
}

declare void @vp8_copy_mem8x8_mmx(i8*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_denoiser_set_parameters(%struct.vp8_denoiser* nocapture, i32) local_unnamed_addr #3 {
  switch i32 %1, label %7 [
    i32 1, label %3
    i32 2, label %5
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 5
  store i32 1, i32* %4, align 4
  br label %12

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 5
  store i32 2, i32* %6, align 4
  br label %12

7:                                                ; preds = %2
  %8 = icmp eq i32 %1, 3
  %9 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 5
  br i1 %8, label %11, label %10

10:                                               ; preds = %7
  store i32 2, i32* %9, align 4
  br label %12

11:                                               ; preds = %7
  store i32 3, i32* %9, align 4
  br label %12

12:                                               ; preds = %3, %10, %5, %11
  %13 = phi i32 [ 75, %11 ], [ 100, %5 ], [ 100, %10 ], [ 100, %3 ]
  %14 = phi i32 [ 80, %11 ], [ 0, %5 ], [ 0, %10 ], [ 0, %3 ]
  %15 = phi i32 [ 15, %11 ], [ -1, %5 ], [ -1, %10 ], [ -1, %3 ]
  %16 = phi <4 x i32> [ <i32 2, i32 16, i32 1, i32 60>, %11 ], [ <i32 1, i32 8, i32 0, i32 95>, %5 ], [ <i32 1, i32 8, i32 0, i32 95>, %10 ], [ <i32 1, i32 8, i32 0, i32 95>, %3 ]
  %17 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 0
  %18 = bitcast i32* %17 to <4 x i32>*
  store <4 x i32> %16, <4 x i32>* %18, align 4
  %19 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 4
  store i32 %13, i32* %19, align 4
  %20 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 5
  store i32 %14, i32* %20, align 4
  %21 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 6
  store i32 %15, i32* %21, align 4
  %22 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 7
  store i32 0, i32* %22, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_denoiser_allocate(%struct.vp8_denoiser*, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 4
  store i32 %4, i32* %7, align 8
  %8 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0
  %9 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 29
  store i32 0, i32* %9, align 8
  %10 = tail call i32 @vp8_yv12_alloc_frame_buffer(%struct.yv12_buffer_config* %8, i32 %1, i32 %2, i32 32) #4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %126, %117, %26, %6
  %13 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %8) #4
  %14 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 1
  %15 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %14) #4
  %16 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 2
  %17 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %16) #4
  %18 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 3
  %19 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %18) #4
  %20 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1
  %21 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %20) #4
  %22 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 2
  %23 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %22) #4
  %24 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 3
  %25 = load i8*, i8** %24, align 8
  tail call void @vpx_free(i8* %25) #4
  br label %115

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 17
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 20
  %30 = load i64, i64* %29, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %28, i8 0, i64 %30, i1 false)
  %31 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 1
  %32 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 1, i32 29
  store i32 0, i32* %32, align 8
  %33 = tail call i32 @vp8_yv12_alloc_frame_buffer(%struct.yv12_buffer_config* %31, i32 %1, i32 %2, i32 32) #4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %12, label %117

35:                                               ; preds = %135
  %36 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %8) #4
  %37 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %31) #4
  %38 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %122) #4
  %39 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %131) #4
  %40 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %140) #4
  %41 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 2
  %42 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %41) #4
  %43 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 3
  %44 = load i8*, i8** %43, align 8
  tail call void @vpx_free(i8* %44) #4
  br label %115

45:                                               ; preds = %135
  %46 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1, i32 17
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1, i32 20
  %49 = load i64, i64* %48, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 0, i64 %49, i1 false)
  %50 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 2
  %51 = tail call i32 @vp8_yv12_alloc_frame_buffer(%struct.yv12_buffer_config* %50, i32 %1, i32 %2, i32 32) #4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %62

53:                                               ; preds = %45
  %54 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %8) #4
  %55 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %31) #4
  %56 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %122) #4
  %57 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %131) #4
  %58 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %140) #4
  %59 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %50) #4
  %60 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 3
  %61 = load i8*, i8** %60, align 8
  tail call void @vpx_free(i8* %61) #4
  br label %115

62:                                               ; preds = %45
  %63 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 2, i32 17
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 2, i32 20
  %66 = load i64, i64* %65, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %64, i8 0, i64 %66, i1 false)
  %67 = mul nsw i32 %4, %3
  %68 = sext i32 %67 to i64
  %69 = tail call i8* @vpx_calloc(i64 %68, i64 1) #4
  %70 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 3
  store i8* %69, i8** %70, align 8
  %71 = icmp eq i8* %69, null
  br i1 %71, label %72, label %80

72:                                               ; preds = %62
  %73 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %8) #4
  %74 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %31) #4
  %75 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %122) #4
  %76 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %131) #4
  %77 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %140) #4
  %78 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %50) #4
  %79 = load i8*, i8** %70, align 8
  tail call void @vpx_free(i8* %79) #4
  br label %115

80:                                               ; preds = %62
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %69, i8 0, i64 %68, i1 false)
  switch i32 %5, label %85 [
    i32 1, label %81
    i32 2, label %83
  ]

81:                                               ; preds = %80
  %82 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 5
  store i32 1, i32* %82, align 4
  br label %90

83:                                               ; preds = %80
  %84 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 5
  store i32 2, i32* %84, align 4
  br label %90

85:                                               ; preds = %80
  %86 = icmp eq i32 %5, 3
  %87 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 5
  br i1 %86, label %89, label %88

88:                                               ; preds = %85
  store i32 2, i32* %87, align 4
  br label %90

89:                                               ; preds = %85
  store i32 3, i32* %87, align 4
  br label %90

90:                                               ; preds = %81, %83, %88, %89
  %91 = phi i32 [ 75, %89 ], [ 100, %88 ], [ 100, %83 ], [ 100, %81 ]
  %92 = phi i32 [ 80, %89 ], [ 0, %88 ], [ 0, %83 ], [ 0, %81 ]
  %93 = phi i32 [ 15, %89 ], [ -1, %88 ], [ -1, %83 ], [ -1, %81 ]
  %94 = phi <4 x i32> [ <i32 2, i32 16, i32 1, i32 60>, %89 ], [ <i32 1, i32 8, i32 0, i32 95>, %88 ], [ <i32 1, i32 8, i32 0, i32 95>, %83 ], [ <i32 1, i32 8, i32 0, i32 95>, %81 ]
  %95 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 0
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %94, <4 x i32>* %96, align 4
  %97 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 4
  store i32 %91, i32* %97, align 4
  %98 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 5
  store i32 %92, i32* %98, align 4
  %99 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 6
  store i32 %93, i32* %99, align 4
  %100 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 7
  store i32 0, i32* %100, align 4
  %101 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 10
  store i32 80, i32* %101, align 8
  %102 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 11
  store i32 128, i32* %102, align 4
  %103 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 12
  store i32 400000, i32* %103, align 8
  %104 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 6
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> <i32 80, i32 0, i32 0, i32 0>, <4 x i32>* %105, align 8
  %106 = mul nsw i32 %2, %1
  %107 = icmp sgt i32 %106, 921600
  br i1 %107, label %108, label %109

108:                                              ; preds = %90
  store i32 3000000, i32* %103, align 8
  store i32 200, i32* %104, align 8
  br label %115

109:                                              ; preds = %90
  %110 = icmp sgt i32 %106, 518400
  br i1 %110, label %111, label %112

111:                                              ; preds = %109
  store i32 1200000, i32* %103, align 8
  store i32 120, i32* %104, align 8
  br label %115

112:                                              ; preds = %109
  %113 = icmp sgt i32 %106, 307200
  br i1 %113, label %114, label %115

114:                                              ; preds = %112
  store i32 600000, i32* %103, align 8
  store i32 100, i32* %104, align 8
  br label %115

115:                                              ; preds = %108, %112, %114, %111, %72, %53, %35, %12
  %116 = phi i32 [ 1, %12 ], [ 1, %35 ], [ 1, %53 ], [ 1, %72 ], [ 0, %111 ], [ 0, %114 ], [ 0, %112 ], [ 0, %108 ]
  ret i32 %116

117:                                              ; preds = %26
  %118 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 1, i32 17
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 1, i32 20
  %121 = load i64, i64* %120, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %119, i8 0, i64 %121, i1 false)
  %122 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 2
  %123 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 2, i32 29
  store i32 0, i32* %123, align 8
  %124 = tail call i32 @vp8_yv12_alloc_frame_buffer(%struct.yv12_buffer_config* %122, i32 %1, i32 %2, i32 32) #4
  %125 = icmp slt i32 %124, 0
  br i1 %125, label %12, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 2, i32 17
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 2, i32 20
  %130 = load i64, i64* %129, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %128, i8 0, i64 %130, i1 false)
  %131 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 3
  %132 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 3, i32 29
  store i32 0, i32* %132, align 8
  %133 = tail call i32 @vp8_yv12_alloc_frame_buffer(%struct.yv12_buffer_config* %131, i32 %1, i32 %2, i32 32) #4
  %134 = icmp slt i32 %133, 0
  br i1 %134, label %12, label %135

135:                                              ; preds = %126
  %136 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 3, i32 17
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 3, i32 20
  %139 = load i64, i64* %138, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %137, i8 0, i64 %139, i1 false)
  %140 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1
  %141 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1, i32 29
  store i32 0, i32* %141, align 8
  %142 = tail call i32 @vp8_yv12_alloc_frame_buffer(%struct.yv12_buffer_config* %140, i32 %1, i32 %2, i32 32) #4
  %143 = icmp slt i32 %142, 0
  br i1 %143, label %35, label %45
}

declare i32 @vp8_yv12_alloc_frame_buffer(%struct.yv12_buffer_config*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_denoiser_free(%struct.vp8_denoiser*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0
  %3 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %2) #4
  %4 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 1
  %5 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %4) #4
  %6 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 2
  %7 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %6) #4
  %8 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 3
  %9 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %8) #4
  %10 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1
  %11 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %10) #4
  %12 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 2
  %13 = tail call i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config* %12) #4
  %14 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  tail call void @vpx_free(i8* %15) #4
  ret void
}

declare i8* @vpx_calloc(i64, i64) local_unnamed_addr #2

declare i32 @vp8_yv12_de_alloc_frame_buffer(%struct.yv12_buffer_config*) local_unnamed_addr #2

declare void @vpx_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_denoiser_denoise_mb(%struct.vp8_denoiser* readonly, %struct.macroblock*, i32, i32, i32, i32, %struct.loop_filter_info_n*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %12 = alloca %struct.yv12_buffer_config, align 8
  %13 = alloca %struct.yv12_buffer_config, align 8
  %14 = alloca %struct.loop_filter_info, align 8
  %15 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 46
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 47
  %18 = load i32, i32* %17, align 32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %223, label %20

20:                                               ; preds = %11
  %21 = bitcast %struct.yv12_buffer_config* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %21)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 160, i1 false)
  %22 = bitcast %struct.yv12_buffer_config* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %22)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 160, i1 false)
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6
  %24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 13
  %25 = load %struct.modeinfo*, %struct.modeinfo** %24, align 32
  %26 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %3 to i64
  %29 = sext i32 %27 to i64
  %30 = mul nsw i64 %29, %28
  %31 = sdiv i64 %30, 100
  %32 = trunc i64 %31 to i32
  %33 = sub nsw i32 %32, %2
  %34 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 4
  %36 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 2
  %39 = load i8, i8* %38, align 2
  %40 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 3
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 4, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 5
  %45 = load i8, i8* %44, align 4
  %46 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 6
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 7
  %49 = load i8, i8* %48, align 2
  %50 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %25, i64 0, i32 0, i32 8
  %51 = load i8, i8* %50, align 1
  %52 = trunc i32 %16 to i8
  store i8 %52, i8* %38, align 2
  %53 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 44
  %54 = load i32, i32* %53, align 4
  %55 = trunc i32 %54 to i8
  store i8 %55, i8* %34, align 4
  %56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 45
  %57 = getelementptr inbounds %union.int_mv, %union.int_mv* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %42, align 4
  %59 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 48
  %60 = load i8, i8* %59, align 4
  store i8 %60, i8* %48, align 2
  %61 = bitcast %union.int_mv* %56 to %struct.MV*
  %62 = getelementptr inbounds %struct.MV, %struct.MV* %61, i64 0, i32 1
  %63 = load i16, i16* %62, align 2
  %64 = sext i16 %63 to i32
  %65 = bitcast %union.int_mv* %56 to i16*
  %66 = load i16, i16* %65, align 8
  %67 = sext i16 %66 to i32
  %68 = mul nsw i32 %67, %67
  %69 = mul nsw i32 %64, %64
  %70 = add nuw nsw i32 %68, %69
  %71 = icmp ult i32 %70, 626
  %72 = select i1 %71, i32 5120, i32 0
  %73 = icmp ne i32 %16, 0
  %74 = icmp sgt i32 %33, %72
  %75 = and i1 %73, %74
  br i1 %75, label %80, label %76

76:                                               ; preds = %20
  %77 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 42
  store i32 1, i32* %77, align 4
  %78 = load i32, i32* %17, align 32
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %38, align 2
  store i8 7, i8* %34, align 4
  store i32 0, i32* %42, align 4
  store i32 7, i32* %53, align 4
  store i32 0, i32* %57, align 8
  br label %80

80:                                               ; preds = %20, %76
  %81 = phi i16 [ 0, %76 ], [ %63, %20 ]
  %82 = phi i16 [ 0, %76 ], [ %66, %20 ]
  %83 = phi i32 [ %18, %76 ], [ %16, %20 ]
  %84 = phi i32 [ %32, %76 ], [ %2, %20 ]
  %85 = zext i32 %83 to i64
  %86 = sext i16 %82 to i32
  %87 = sext i16 %81 to i32
  %88 = mul nsw i32 %86, %86
  %89 = mul nsw i32 %87, %87
  %90 = add nuw nsw i32 %89, %88
  %91 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = mul i32 %92, 625
  %94 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = mul i32 %95, 625
  %97 = icmp ult i32 %90, %96
  %98 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 43
  br i1 %97, label %103, label %99

99:                                               ; preds = %80
  %100 = load i32, i32* %98, align 16
  %101 = icmp eq i32 %100, 0
  %102 = select i1 %101, i32 10240, i32 20480
  br label %104

103:                                              ; preds = %80
  store i32 1, i32* %98, align 16
  br label %104

104:                                              ; preds = %99, %103
  %105 = phi i32 [ %102, %99 ], [ 20480, %103 ]
  %106 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 13, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 43
  %109 = mul i32 %105, %107
  %110 = icmp ule i32 %84, %109
  %111 = icmp ule i32 %90, %93
  %112 = and i1 %111, %110
  %113 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 41
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %104
  %117 = icmp sgt i32 %10, 1
  %118 = icmp eq i32 %90, 0
  %119 = and i1 %117, %118
  %120 = and i1 %119, %112
  br i1 %120, label %122, label %162

121:                                              ; preds = %104
  br i1 %112, label %122, label %162

122:                                              ; preds = %116, %121
  %123 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 11
  %124 = bitcast %struct.yv12_buffer_config* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 32 %124, i64 160, i1 false)
  %125 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 12
  %126 = bitcast %struct.yv12_buffer_config* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 32 %126, i64 160, i1 false)
  %127 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 %85, i32 13
  %128 = load i8*, i8** %127, align 8
  %129 = sext i32 %4 to i64
  %130 = getelementptr inbounds i8, i8* %128, i64 %129
  %131 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 11, i32 13
  store i8* %130, i8** %131, align 8
  %132 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 %85, i32 14
  %133 = load i8*, i8** %132, align 8
  %134 = sext i32 %5 to i64
  %135 = getelementptr inbounds i8, i8* %133, i64 %134
  %136 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 11, i32 14
  store i8* %135, i8** %136, align 32
  %137 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 %85, i32 15
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %134
  %140 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 11, i32 15
  store i8* %139, i8** %140, align 8
  %141 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1, i32 13
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 %129
  %144 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 12, i32 13
  store i8* %143, i8** %144, align 8
  %145 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1, i32 14
  %146 = load i8*, i8** %145, align 8
  %147 = getelementptr inbounds i8, i8* %146, i64 %134
  %148 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 12, i32 14
  store i8* %147, i8** %148, align 32
  %149 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1, i32 15
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 %134
  %152 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 12, i32 15
  store i8* %151, i8** %152, align 8
  %153 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 34
  %154 = load i32, i32* %153, align 32
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %122
  tail call void @vp8_build_inter_predictors_mb(%struct.macroblockd* %23) #4
  br label %163

157:                                              ; preds = %122
  %158 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 12, i32 4
  %159 = load i32, i32* %158, align 16
  %160 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 6, i32 12, i32 9
  %161 = load i32, i32* %160, align 4
  tail call void @vp8_build_inter16x16_predictors_mb(%struct.macroblockd* %23, i8* %143, i8* %147, i8* %151, i32 %159, i32 %161) #4
  br label %163

162:                                              ; preds = %116, %121
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %21)
  br label %223

163:                                              ; preds = %157, %156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 32 %124, i8* nonnull align 8 %21, i64 160, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 32 %126, i8* nonnull align 8 %22, i64 160, i1 false)
  store i8 %35, i8* %34, align 4
  store i8 %37, i8* %36, align 1
  store i8 %39, i8* %38, align 2
  store i8 %41, i8* %40, align 1
  store i32 %43, i32* %42, align 4
  store i8 %45, i8* %44, align 4
  store i8 %47, i8* %46, align 1
  store i8 %49, i8* %48, align 2
  store i8 %51, i8* %50, align 1
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %21)
  %164 = load i8*, i8** %141, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 %129
  %166 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1, i32 4
  %167 = load i32, i32* %166, align 8
  %168 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 13
  %169 = load i8*, i8** %168, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 %129
  %171 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 4
  %172 = load i32, i32* %171, align 8
  %173 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i64 0
  %174 = load i32, i32* %108, align 16
  %175 = tail call i32 @vp8_denoiser_filter_sse2(i8* %165, i32 %167, i8* %170, i32 %172, i8* %173, i32 16, i32 %90, i32 %174) #4
  %176 = icmp eq i32 %90, 0
  %177 = select i1 %176, i8 1, i8 2
  %178 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 3
  %179 = load i8*, i8** %178, align 8
  %180 = sext i32 %9 to i64
  %181 = getelementptr inbounds i8, i8* %179, i64 %180
  store i8 %177, i8* %181, align 1
  %182 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 5
  %183 = load i32, i32* %182, align 4
  %184 = icmp ne i32 %183, 1
  %185 = and i1 %176, %184
  %186 = icmp eq i32 %175, 1
  %187 = and i1 %186, %185
  br i1 %187, label %188, label %221

188:                                              ; preds = %163
  %189 = load i8*, i8** %145, align 8
  %190 = getelementptr inbounds i8, i8* %189, i64 %134
  %191 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 14
  %192 = load i8*, i8** %191, align 8
  %193 = getelementptr inbounds i8, i8* %192, i64 %134
  %194 = load i8*, i8** %149, align 8
  %195 = getelementptr inbounds i8, i8* %194, i64 %134
  %196 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 15
  %197 = load i8*, i8** %196, align 8
  %198 = getelementptr inbounds i8, i8* %197, i64 %134
  %199 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 1, i32 9
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 9
  %202 = load i32, i32* %201, align 4
  %203 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 16, i32 11
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 16, i32 10
  %206 = load i32, i32* %205, align 8
  %207 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 16, i32 9
  %208 = load i8**, i8*** %207, align 8
  %209 = load i8*, i8** %208, align 8
  %210 = sext i32 %206 to i64
  %211 = getelementptr inbounds i8, i8* %209, i64 %210
  %212 = tail call i32 @vp8_denoiser_filter_uv_sse2(i8* %190, i32 %200, i8* %193, i32 %202, i8* %211, i32 %204, i32 0, i32 0) #4
  %213 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 20, i32 10
  %214 = load i32, i32* %213, align 8
  %215 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 20, i32 9
  %216 = load i8**, i8*** %215, align 8
  %217 = load i8*, i8** %216, align 8
  %218 = sext i32 %214 to i64
  %219 = getelementptr inbounds i8, i8* %217, i64 %218
  %220 = tail call i32 @vp8_denoiser_filter_uv_sse2(i8* %195, i32 %200, i8* %198, i32 %202, i8* %219, i32 %204, i32 0, i32 0) #4
  br label %236

221:                                              ; preds = %163
  %222 = icmp eq i32 %175, 0
  br i1 %222, label %223, label %236

223:                                              ; preds = %11, %162, %221
  %224 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 42
  store i32 0, i32* %224, align 4
  %225 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i64 0
  %226 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 13
  %227 = load i8*, i8** %226, align 8
  %228 = sext i32 %4 to i64
  %229 = getelementptr inbounds i8, i8* %227, i64 %228
  %230 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 4
  %231 = load i32, i32* %230, align 8
  tail call void @vp8_copy_mem16x16_sse2(i8* %225, i32 16, i8* %229, i32 %231) #4
  %232 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 3
  %233 = load i8*, i8** %232, align 8
  %234 = sext i32 %9 to i64
  %235 = getelementptr inbounds i8, i8* %233, i64 %234
  store i8 0, i8* %235, align 1
  br label %236

236:                                              ; preds = %188, %223, %221
  %237 = phi i32 [ 0, %223 ], [ 0, %221 ], [ %212, %188 ]
  %238 = phi i32 [ 0, %223 ], [ 0, %221 ], [ %220, %188 ]
  %239 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 5
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 1
  br i1 %241, label %278, label %242

242:                                              ; preds = %236
  %243 = icmp eq i32 %237, 0
  br i1 %243, label %244, label %260

244:                                              ; preds = %242
  %245 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 16, i32 10
  %246 = load i32, i32* %245, align 8
  %247 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 16, i32 9
  %248 = load i8**, i8*** %247, align 8
  %249 = load i8*, i8** %248, align 8
  %250 = sext i32 %246 to i64
  %251 = getelementptr inbounds i8, i8* %249, i64 %250
  %252 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 16, i32 11
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 14
  %255 = load i8*, i8** %254, align 8
  %256 = sext i32 %5 to i64
  %257 = getelementptr inbounds i8, i8* %255, i64 %256
  %258 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 9
  %259 = load i32, i32* %258, align 4
  tail call void @vp8_copy_mem8x8_mmx(i8* %251, i32 %253, i8* %257, i32 %259) #4
  br label %260

260:                                              ; preds = %244, %242
  %261 = icmp eq i32 %238, 0
  br i1 %261, label %262, label %278

262:                                              ; preds = %260
  %263 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 20, i32 10
  %264 = load i32, i32* %263, align 8
  %265 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 20, i32 9
  %266 = load i8**, i8*** %265, align 8
  %267 = load i8*, i8** %266, align 8
  %268 = sext i32 %264 to i64
  %269 = getelementptr inbounds i8, i8* %267, i64 %268
  %270 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4, i64 16, i32 11
  %271 = load i32, i32* %270, align 4
  %272 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 15
  %273 = load i8*, i8** %272, align 8
  %274 = sext i32 %5 to i64
  %275 = getelementptr inbounds i8, i8* %273, i64 %274
  %276 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 9
  %277 = load i32, i32* %276, align 4
  tail call void @vp8_copy_mem8x8_mmx(i8* %269, i32 %271, i8* %275, i32 %277) #4
  br label %278

278:                                              ; preds = %262, %260, %236
  %279 = bitcast %struct.loop_filter_info* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %279) #4
  %280 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %14, i64 0, i32 0
  %281 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %14, i64 0, i32 1
  %282 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %14, i64 0, i32 2
  %283 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %14, i64 0, i32 3
  %284 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 4
  %285 = load i32, i32* %284, align 8
  %286 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 9
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds %struct.loop_filter_info_n, %struct.loop_filter_info_n* %6, i64 0, i32 5, i64 1, i64 48
  %289 = load i8, i8* %288, align 1
  %290 = getelementptr inbounds %struct.loop_filter_info_n, %struct.loop_filter_info_n* %6, i64 0, i32 0, i64 48, i64 0
  store i8* %290, i8** %280, align 8
  %291 = getelementptr inbounds %struct.loop_filter_info_n, %struct.loop_filter_info_n* %6, i64 0, i32 1, i64 48, i64 0
  store i8* %291, i8** %281, align 8
  %292 = getelementptr inbounds %struct.loop_filter_info_n, %struct.loop_filter_info_n* %6, i64 0, i32 2, i64 48, i64 0
  store i8* %292, i8** %282, align 8
  %293 = zext i8 %289 to i64
  %294 = getelementptr inbounds %struct.loop_filter_info_n, %struct.loop_filter_info_n* %6, i64 0, i32 3, i64 %293, i64 0
  store i8* %294, i8** %283, align 8
  %295 = icmp sgt i32 %8, 0
  br i1 %295, label %296, label %314

296:                                              ; preds = %278
  %297 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 3
  %298 = load i8*, i8** %297, align 8
  %299 = sext i32 %9 to i64
  %300 = getelementptr inbounds i8, i8* %298, i64 %299
  %301 = load i8, i8* %300, align 1
  %302 = add nsw i32 %9, -1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i8, i8* %298, i64 %303
  %305 = load i8, i8* %304, align 1
  %306 = icmp ne i8 %301, %305
  %307 = icmp eq i8 %301, 2
  %308 = or i1 %307, %306
  br i1 %308, label %309, label %314

309:                                              ; preds = %296
  %310 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 13
  %311 = load i8*, i8** %310, align 8
  %312 = sext i32 %4 to i64
  %313 = getelementptr inbounds i8, i8* %311, i64 %312
  call void @vp8_loop_filter_mbv_sse2(i8* %313, i8* null, i8* null, i32 %285, i32 %287, %struct.loop_filter_info* nonnull %14) #4
  br label %314

314:                                              ; preds = %296, %309, %278
  %315 = phi i32 [ 1, %309 ], [ 0, %296 ], [ 0, %278 ]
  %316 = icmp sgt i32 %7, 0
  br i1 %316, label %317, label %337

317:                                              ; preds = %314
  %318 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 3
  %319 = load i8*, i8** %318, align 8
  %320 = sext i32 %9 to i64
  %321 = getelementptr inbounds i8, i8* %319, i64 %320
  %322 = load i8, i8* %321, align 1
  %323 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 4
  %324 = load i32, i32* %323, align 8
  %325 = sub nsw i32 %9, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %319, i64 %326
  %328 = load i8, i8* %327, align 1
  %329 = icmp ne i8 %322, %328
  %330 = icmp eq i8 %322, 2
  %331 = or i1 %330, %329
  br i1 %331, label %332, label %337

332:                                              ; preds = %317
  %333 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 13
  %334 = load i8*, i8** %333, align 8
  %335 = sext i32 %4 to i64
  %336 = getelementptr inbounds i8, i8* %334, i64 %335
  call void @vp8_loop_filter_mbh_sse2(i8* %336, i8* null, i8* null, i32 %285, i32 %287, %struct.loop_filter_info* nonnull %14) #4
  br label %341

337:                                              ; preds = %317, %314
  %338 = icmp eq i32 %315, 0
  br i1 %338, label %347, label %339

339:                                              ; preds = %337
  %340 = sext i32 %4 to i64
  br label %341

341:                                              ; preds = %339, %332
  %342 = phi i64 [ %340, %339 ], [ %335, %332 ]
  %343 = getelementptr inbounds %struct.vp8_denoiser, %struct.vp8_denoiser* %0, i64 0, i32 0, i64 0, i32 13
  %344 = load i8*, i8** %343, align 8
  %345 = getelementptr inbounds i8, i8* %344, i64 %342
  %346 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i64 0
  call void @vp8_copy_mem16x16_sse2(i8* %345, i32 %285, i8* %346, i32 16) #4
  br label %347

347:                                              ; preds = %337, %341
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %279) #4
  ret void
}

declare void @vp8_build_inter_predictors_mb(%struct.macroblockd*) local_unnamed_addr #2

declare void @vp8_build_inter16x16_predictors_mb(%struct.macroblockd*, i8*, i8*, i8*, i32, i32) local_unnamed_addr #2

declare i32 @vp8_denoiser_filter_sse2(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #2

declare i32 @vp8_denoiser_filter_uv_sse2(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #2

declare void @vp8_loop_filter_mbv_sse2(i8*, i8*, i8*, i32, i32, %struct.loop_filter_info*) local_unnamed_addr #2

declare void @vp8_loop_filter_mbh_sse2(i8*, i8*, i8*, i32, i32, %struct.loop_filter_info*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
