; ModuleID = '../../third_party/unrar/src/strlist.cpp'
source_filename = "../../third_party/unrar/src/strlist.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ErrorHandler = type <{ i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.StringList = type { %class.Array, i64, i64, [16 x i64], i64 }
%class.Array = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>

$_ZN5ArrayIwE3AddEm = comdat any

@.str = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@ErrHandler = external global %class.ErrorHandler, align 4
@.str.1 = private unnamed_addr constant [44 x i32] [i32 77, i32 97, i32 120, i32 105, i32 109, i32 117, i32 109, i32 32, i32 97, i32 108, i32 108, i32 111, i32 119, i32 101, i32 100, i32 32, i32 97, i32 114, i32 114, i32 97, i32 121, i32 32, i32 115, i32 105, i32 122, i32 101, i32 32, i32 40, i32 37, i32 117, i32 41, i32 32, i32 105, i32 115, i32 32, i32 101, i32 120, i32 99, i32 101, i32 101, i32 100, i32 101, i32 100, i32 0], align 4

@_ZN10StringListC1Ev = hidden unnamed_addr alias void (%class.StringList*), void (%class.StringList*)* @_ZN10StringListC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10StringListC2Ev(%class.StringList* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.StringList* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 33, i1 false) #10
  %3 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 1
  %5 = bitcast i64* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  %6 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 4
  store i64 0, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10StringList5ResetEv(%class.StringList* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i32* %4 to i8*
  tail call void @free(i8* %7) #10
  store i32* null, i32** %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 1
  %10 = bitcast i64* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  %11 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 2
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 4
  store i64 0, i64* %12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10StringList6RewindEv(%class.StringList* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10StringList10AddStringAEPKc(%class.StringList*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.Array, align 8
  %4 = bitcast %class.Array* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  %5 = tail call i64 @strlen(i8* %1) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 33, i1 false) #10
  call void @_ZN5ArrayIwE3AddEm(%class.Array* nonnull %3, i64 %5) #10
  %6 = getelementptr inbounds %class.Array, %class.Array* %3, i64 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = getelementptr inbounds %class.Array, %class.Array* %3, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* %1, i32* %7, i64 %9) #10
  %11 = load i32*, i32** %6, align 8
  %12 = icmp eq i32* %11, null
  %13 = select i1 %12, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str, i64 0, i64 0), i32* %11
  %14 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0
  %15 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = call i64 @wcslen(i32* %13) #11
  %18 = add i64 %17, 1
  call void @_ZN5ArrayIwE3AddEm(%class.Array* %14, i64 %18) #10
  %19 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %16
  %22 = call i32* @wcscpy(i32* %21, i32* %13) #10
  %23 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %23, align 8
  %26 = load i32*, i32** %6, align 8
  %27 = icmp eq i32* %26, null
  %28 = bitcast i32* %26 to i8*
  br i1 %27, label %41, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %class.Array, %class.Array* %3, i64 0, i32 4
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.Array, %class.Array* %3, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = shl i64 %35, 2
  call void @_Z9cleandataPvm(i8* nonnull %28, i64 %36) #10
  %37 = bitcast %class.Array* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %33, %29
  %40 = phi i8* [ %38, %33 ], [ %28, %29 ]
  call void @free(i8* %40) #10
  br label %41

41:                                               ; preds = %2, %39
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare zeroext i1 @_Z10CharToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10StringList9AddStringEPKw(%class.StringList*, i32*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32* %1, null
  %4 = select i1 %3, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str, i64 0, i64 0), i32* %1
  %5 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = tail call i64 @wcslen(i32* %4) #11
  %9 = add i64 %8, 1
  tail call void @_ZN5ArrayIwE3AddEm(%class.Array* %5, i64 %9)
  %10 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 %7
  %13 = tail call i32* @wcscpy(i32* %12, i32* %4) #10
  %14 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 1
  store i64 %16, i64* %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIwE3AddEm(%class.Array*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %56

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str.1, i64 0, i64 0), i64 %11) #10
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #10
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %18
  %30 = shl i64 %25, 2
  %31 = tail call noalias i8* @malloc(i64 %30) #10
  %32 = bitcast i8* %31 to i32*
  %33 = icmp eq i8* %31, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #10
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  %39 = bitcast i32* %37 to i8*
  br i1 %38, label %53, label %40

40:                                               ; preds = %35
  %41 = load i64, i64* %6, align 8
  %42 = shl i64 %41, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* nonnull align 4 %39, i64 %42, i1 false)
  %43 = bitcast %class.Array* %0 to i8**
  tail call void @_Z9cleandataPvm(i8* nonnull %39, i64 %42) #10
  %44 = load i8*, i8** %43, align 8
  tail call void @free(i8* %44) #10
  br label %53

45:                                               ; preds = %18
  %46 = bitcast %class.Array* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = shl i64 %25, 2
  %49 = tail call i8* @realloc(i8* %47, i64 %48) #10
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i8* %49, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #10
  br label %53

53:                                               ; preds = %35, %45, %52, %40
  %54 = phi i32* [ %32, %40 ], [ %32, %35 ], [ null, %52 ], [ %50, %45 ]
  %55 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  store i32* %54, i32** %55, align 8
  store i64 %25, i64* %6, align 8
  br label %56

56:                                               ; preds = %53, %2
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32* @wcscpy(i32*, i32*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10StringList10GetStringAEPcm(%class.StringList* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.Array, align 8
  %5 = bitcast %class.Array* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 33, i1 false) #10
  call void @_ZN5ArrayIwE3AddEm(%class.Array* nonnull %4, i64 %2) #10
  %6 = getelementptr inbounds %class.Array, %class.Array* %4, i64 0, i32 0
  %7 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %24

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.Array, %class.Array* %4, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %8
  %19 = call i64 @wcslen(i32* %18) #11
  %20 = add nuw i64 %8, 1
  %21 = add i64 %20, %19
  store i64 %21, i64* %7, align 8
  call void @_Z8wcsncpyzPwPKwm(i32* %15, i32* %18, i64 %14) #10
  %22 = load i32*, i32** %6, align 8
  %23 = call zeroext i1 @_Z10WideToCharPKwPcm(i32* %22, i8* %1, i64 %2) #10
  br label %24

24:                                               ; preds = %3, %12
  %25 = phi i1 [ true, %12 ], [ false, %3 ]
  %26 = load i32*, i32** %6, align 8
  %27 = icmp eq i32* %26, null
  %28 = bitcast i32* %26 to i8*
  br i1 %27, label %41, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.Array, %class.Array* %4, i64 0, i32 4
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.Array, %class.Array* %4, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = shl i64 %35, 2
  call void @_Z9cleandataPvm(i8* nonnull %28, i64 %36) #10
  %37 = bitcast %class.Array* %4 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %33, %29
  %40 = phi i8* [ %38, %33 ], [ %28, %29 ]
  call void @free(i8* %40) #10
  br label %41

41:                                               ; preds = %24, %39
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10StringList9GetStringEPwm(%class.StringList* nocapture, i32*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %16

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 %5
  %13 = tail call i64 @wcslen(i32* %12) #11
  %14 = add nuw i64 %5, 1
  %15 = add i64 %14, %13
  store i64 %15, i64* %4, align 8
  tail call void @_Z8wcsncpyzPwPKwm(i32* %1, i32* %12, i64 %2) #10
  br label %16

16:                                               ; preds = %3, %9
  %17 = phi i1 [ true, %9 ], [ false, %3 ]
  ret i1 %17
}

declare zeroext i1 @_Z10WideToCharPKwPcm(i32*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN10StringList9GetStringEPPw(%class.StringList* nocapture, i32**) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = icmp eq i32** %1, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %8
  store i32* null, i32** %1, align 8
  br label %20

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 %4
  %15 = tail call i64 @wcslen(i32* %14) #11
  %16 = add nuw i64 %4, 1
  %17 = add i64 %16, %15
  store i64 %17, i64* %3, align 8
  %18 = icmp eq i32** %1, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %11
  store i32* %14, i32** %1, align 8
  br label %20

20:                                               ; preds = %19, %11, %10, %8
  %21 = phi i1 [ false, %8 ], [ false, %10 ], [ true, %11 ], [ true, %19 ]
  ret i1 %21
}

declare void @_Z8wcsncpyzPwPKwm(i32*, i32*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10StringList9GetStringEPwmi(%class.StringList* nocapture, i32*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 16
  br i1 %7, label %8, label %14

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 3, i64 %6
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, 1
  store i64 %13, i64* %5, align 8
  br label %14

14:                                               ; preds = %4, %8
  %15 = phi i64 [ %6, %4 ], [ %13, %8 ]
  %16 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  store i64 0, i64* %16, align 8
  %17 = icmp sgt i32 %3, -1
  br i1 %17, label %18, label %40

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 0
  %21 = load i64, i64* %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %18, %32
  %24 = phi i32 [ %33, %32 ], [ %3, %18 ]
  %25 = phi i64 [ %34, %32 ], [ 0, %18 ]
  %26 = load i32*, i32** %20, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 %25
  %28 = tail call i64 @wcslen(i32* %27) #11
  %29 = add nuw i64 %25, 1
  %30 = add i64 %29, %28
  store i64 %30, i64* %16, align 8
  tail call void @_Z8wcsncpyzPwPKwm(i32* %1, i32* %27, i64 %2) #10
  %31 = icmp sgt i32 %24, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %23
  %33 = add nsw i32 %24, -1
  %34 = load i64, i64* %16, align 8
  %35 = load i64, i64* %19, align 8
  %36 = icmp ult i64 %34, %35
  br i1 %36, label %23, label %37

37:                                               ; preds = %23, %32, %18
  %38 = phi i1 [ false, %18 ], [ true, %23 ], [ false, %32 ]
  %39 = load i64, i64* %5, align 8
  br label %40

40:                                               ; preds = %37, %14
  %41 = phi i64 [ %15, %14 ], [ %39, %37 ]
  %42 = phi i1 [ true, %14 ], [ %38, %37 ]
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = add i64 %41, -1
  store i64 %45, i64* %5, align 8
  %46 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 3, i64 %45
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %16, align 8
  br label %48

48:                                               ; preds = %40, %44
  ret i1 %42
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10StringList12SavePositionEv(%class.StringList* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = icmp ult i64 %3, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 3, i64 %3
  store i64 %7, i64* %8, align 8
  %9 = load i64, i64* %2, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %2, align 8
  br label %11

11:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10StringList15RestorePositionEv(%class.StringList* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = add i64 %3, -1
  store i64 %6, i64* %2, align 8
  %7 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 3, i64 %6
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_ZN10StringList9GetStringEv(%class.StringList* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 %3
  %11 = tail call i64 @wcslen(i32* %10) #11
  %12 = add nuw i64 %3, 1
  %13 = add i64 %12, %11
  store i64 %13, i64* %2, align 8
  br label %14

14:                                               ; preds = %1, %7
  %15 = phi i32* [ %10, %7 ], [ null, %1 ]
  ret i32* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10StringList6SearchEPKwb(%class.StringList* nocapture, i32*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, 16
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 3, i64 %5
  store i64 %9, i64* %10, align 8
  %11 = load i64, i64* %4, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* %4, align 8
  br label %13

13:                                               ; preds = %3, %7
  %14 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 1
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 0, i32 0
  %17 = icmp ne i32* %1, null
  %18 = load i64, i64* %15, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %41, label %20

20:                                               ; preds = %13, %37
  %21 = phi i64 [ %38, %37 ], [ 0, %13 ]
  %22 = load i32*, i32** %16, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %21
  %24 = tail call i64 @wcslen(i32* %23) #11
  %25 = add nuw i64 %21, 1
  %26 = add i64 %25, %24
  store i64 %26, i64* %14, align 8
  %27 = icmp ne i32* %23, null
  %28 = and i1 %17, %27
  br i1 %28, label %29, label %41

29:                                               ; preds = %20
  br i1 %2, label %30, label %32

30:                                               ; preds = %29
  %31 = tail call i32 @wcscmp(i32* nonnull %1, i32* nonnull %23) #11
  br label %34

32:                                               ; preds = %29
  %33 = tail call i32 @_Z8wcsicompPKwS0_(i32* nonnull %1, i32* nonnull %23) #10
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i32 [ %31, %30 ], [ %33, %32 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = load i64, i64* %14, align 8
  %39 = load i64, i64* %15, align 8
  %40 = icmp ult i64 %38, %39
  br i1 %40, label %20, label %41

41:                                               ; preds = %34, %20, %37, %13
  %42 = phi i1 [ false, %13 ], [ true, %34 ], [ true, %20 ], [ false, %37 ]
  %43 = load i64, i64* %4, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = add i64 %43, -1
  store i64 %46, i64* %4, align 8
  %47 = getelementptr inbounds %class.StringList, %class.StringList* %0, i64 0, i32 3, i64 %46
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %14, align 8
  br label %49

49:                                               ; preds = %41, %45
  ret i1 %42
}

; Function Attrs: nounwind readonly
declare i32 @wcscmp(i32*, i32*) local_unnamed_addr #8

declare i32 @_Z8wcsicompPKwS0_(i32*, i32*) local_unnamed_addr #4

declare void @_Z9cleandataPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler*, i32*, ...) local_unnamed_addr #4

declare void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
