; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-static.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-static.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_ot_language_map_t = type { i16, [6 x i8] }
%struct.hb_language_impl_t = type opaque
%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.141 }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.0 }
%struct.hb_atomic_ptr_t.0 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.21, %struct.hb_face_lazy_loader_t.24, %struct.hb_table_lazy_loader_t.28, %struct.hb_face_lazy_loader_t.31, %struct.hb_face_lazy_loader_t.35, %struct.hb_table_lazy_loader_t.39, %struct.hb_face_lazy_loader_t.42, %struct.hb_table_lazy_loader_t.46, %struct.hb_face_lazy_loader_t.49, %struct.hb_face_lazy_loader_t.53, %struct.hb_face_lazy_loader_t.57, %struct.hb_face_lazy_loader_t.61, %struct.hb_table_lazy_loader_t.65, %struct.hb_table_lazy_loader_t.68, %struct.hb_table_lazy_loader_t.71, %struct.hb_face_lazy_loader_t.74, %struct.hb_table_lazy_loader_t.78, %struct.hb_table_lazy_loader_t.81, %struct.hb_face_lazy_loader_t.84, %struct.hb_face_lazy_loader_t.88, %struct.hb_face_lazy_loader_t.92, %struct.hb_table_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.99, %struct.hb_table_lazy_loader_t.102, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_table_lazy_loader_t.111, %struct.hb_table_lazy_loader_t.114, %struct.hb_table_lazy_loader_t.117, %struct.hb_table_lazy_loader_t.120, %struct.hb_table_lazy_loader_t.123, %struct.hb_face_lazy_loader_t.126, %struct.hb_face_lazy_loader_t.130, %struct.hb_face_lazy_loader_t.134, %struct.hb_table_lazy_loader_t.138 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.1 }
%struct.hb_lazy_loader_t.1 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.2 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.3 }
%struct.hb_lazy_loader_t.3 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type { %"struct.OT::cmap::accelerator_t" }
%"struct.OT::cmap::accelerator_t" = type { %struct.hb_nonnull_ptr_t, %struct.hb_nonnull_ptr_t.19, i1 (i8*, i32, i32*)*, i8*, %"struct.OT::CmapSubtableFormat4::accelerator_t", %struct.hb_blob_ptr_t }
%struct.hb_nonnull_ptr_t = type { %"struct.OT::CmapSubtable"* }
%"struct.OT::CmapSubtable" = type { %union.anon }
%union.anon = type { %"struct.OT::CmapSubtableFormat0" }
%"struct.OT::CmapSubtableFormat0" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", [256 x %"struct.OT::IntType.6"] }
%"struct.OT::IntType" = type { %struct.BEInt }
%struct.BEInt = type { [2 x i8] }
%"struct.OT::IntType.6" = type { %struct.BEInt.7 }
%struct.BEInt.7 = type { i8 }
%struct.hb_nonnull_ptr_t.19 = type { %"struct.OT::CmapSubtableFormat14"* }
%"struct.OT::CmapSubtableFormat14" = type { %"struct.OT::IntType", %"struct.OT::IntType.9", %"struct.OT::SortedArrayOf.14" }
%"struct.OT::IntType.9" = type { %struct.BEInt.10 }
%struct.BEInt.10 = type { [4 x i8] }
%"struct.OT::SortedArrayOf.14" = type { %"struct.OT::ArrayOf.15" }
%"struct.OT::ArrayOf.15" = type { %"struct.OT::IntType.9", [1 x %"struct.OT::VariationSelectorRecord"] }
%"struct.OT::VariationSelectorRecord" = type { %"struct.OT::IntType.16", %"struct.OT::OffsetTo", %"struct.OT::OffsetTo.18" }
%"struct.OT::IntType.16" = type { %struct.BEInt.17 }
%struct.BEInt.17 = type { [3 x i8] }
%"struct.OT::OffsetTo" = type { %"struct.OT::Offset" }
%"struct.OT::Offset" = type { %"struct.OT::IntType.9" }
%"struct.OT::OffsetTo.18" = type { %"struct.OT::Offset" }
%"struct.OT::CmapSubtableFormat4::accelerator_t" = type { %"struct.OT::IntType"*, %"struct.OT::IntType"*, %"struct.OT::IntType"*, %"struct.OT::IntType"*, %"struct.OT::IntType"*, i32, i32 }
%struct.hb_blob_ptr_t = type { %struct.hb_nonnull_ptr_t.20 }
%struct.hb_nonnull_ptr_t.20 = type { %struct.hb_blob_t* }
%struct.hb_table_lazy_loader_t.21 = type { %struct.hb_lazy_loader_t.22 }
%struct.hb_lazy_loader_t.22 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.24 = type { %struct.hb_lazy_loader_t.25 }
%struct.hb_lazy_loader_t.25 = type { %struct.hb_atomic_ptr_t.27 }
%struct.hb_atomic_ptr_t.27 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.28 = type { %struct.hb_lazy_loader_t.29 }
%struct.hb_lazy_loader_t.29 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.31 = type { %struct.hb_lazy_loader_t.32 }
%struct.hb_lazy_loader_t.32 = type { %struct.hb_atomic_ptr_t.34 }
%struct.hb_atomic_ptr_t.34 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.35 = type { %struct.hb_lazy_loader_t.36 }
%struct.hb_lazy_loader_t.36 = type { %struct.hb_atomic_ptr_t.38 }
%struct.hb_atomic_ptr_t.38 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.39 = type { %struct.hb_lazy_loader_t.40 }
%struct.hb_lazy_loader_t.40 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.42 = type { %struct.hb_lazy_loader_t.43 }
%struct.hb_lazy_loader_t.43 = type { %struct.hb_atomic_ptr_t.45 }
%struct.hb_atomic_ptr_t.45 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.46 = type { %struct.hb_lazy_loader_t.47 }
%struct.hb_lazy_loader_t.47 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.49 = type { %struct.hb_lazy_loader_t.50 }
%struct.hb_lazy_loader_t.50 = type { %struct.hb_atomic_ptr_t.52 }
%struct.hb_atomic_ptr_t.52 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.53 = type { %struct.hb_lazy_loader_t.54 }
%struct.hb_lazy_loader_t.54 = type { %struct.hb_atomic_ptr_t.56 }
%struct.hb_atomic_ptr_t.56 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.57 = type { %struct.hb_lazy_loader_t.58 }
%struct.hb_lazy_loader_t.58 = type { %struct.hb_atomic_ptr_t.60 }
%struct.hb_atomic_ptr_t.60 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.61 = type { %struct.hb_lazy_loader_t.62 }
%struct.hb_lazy_loader_t.62 = type { %struct.hb_atomic_ptr_t.64 }
%struct.hb_atomic_ptr_t.64 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.65 = type { %struct.hb_lazy_loader_t.66 }
%struct.hb_lazy_loader_t.66 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.68 = type { %struct.hb_lazy_loader_t.69 }
%struct.hb_lazy_loader_t.69 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.71 = type { %struct.hb_lazy_loader_t.72 }
%struct.hb_lazy_loader_t.72 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.74 = type { %struct.hb_lazy_loader_t.75 }
%struct.hb_lazy_loader_t.75 = type { %struct.hb_atomic_ptr_t.77 }
%struct.hb_atomic_ptr_t.77 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.78 = type { %struct.hb_lazy_loader_t.79 }
%struct.hb_lazy_loader_t.79 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.81 = type { %struct.hb_lazy_loader_t.82 }
%struct.hb_lazy_loader_t.82 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.84 = type { %struct.hb_lazy_loader_t.85 }
%struct.hb_lazy_loader_t.85 = type { %struct.hb_atomic_ptr_t.87 }
%struct.hb_atomic_ptr_t.87 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.88 = type { %struct.hb_lazy_loader_t.89 }
%struct.hb_lazy_loader_t.89 = type { %struct.hb_atomic_ptr_t.91 }
%struct.hb_atomic_ptr_t.91 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.92 = type { %struct.hb_lazy_loader_t.93 }
%struct.hb_lazy_loader_t.93 = type { %struct.hb_atomic_ptr_t.95 }
%struct.hb_atomic_ptr_t.95 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.99 = type { %struct.hb_lazy_loader_t.100 }
%struct.hb_lazy_loader_t.100 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.102 = type { %struct.hb_lazy_loader_t.103 }
%struct.hb_lazy_loader_t.103 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.114 = type { %struct.hb_lazy_loader_t.115 }
%struct.hb_lazy_loader_t.115 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.117 = type { %struct.hb_lazy_loader_t.118 }
%struct.hb_lazy_loader_t.118 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.120 = type { %struct.hb_lazy_loader_t.121 }
%struct.hb_lazy_loader_t.121 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.126 = type { %struct.hb_lazy_loader_t.127 }
%struct.hb_lazy_loader_t.127 = type { %struct.hb_atomic_ptr_t.129 }
%struct.hb_atomic_ptr_t.129 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.130 = type { %struct.hb_lazy_loader_t.131 }
%struct.hb_lazy_loader_t.131 = type { %struct.hb_atomic_ptr_t.133 }
%struct.hb_atomic_ptr_t.133 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.134 = type { %struct.hb_lazy_loader_t.135 }
%struct.hb_lazy_loader_t.135 = type { %struct.hb_atomic_ptr_t.137 }
%struct.hb_atomic_ptr_t.137 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.138 = type { %struct.hb_lazy_loader_t.139 }
%struct.hb_lazy_loader_t.139 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.141 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.143 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon, %struct.anon.142, %"union.hb_font_funcs_t::get_t" }
%struct.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.142 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.143 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.144 }
%struct.hb_shaper_lazy_loader_t.144 = type { %struct.hb_lazy_loader_t.145 }
%struct.hb_lazy_loader_t.145 = type { %struct.hb_atomic_ptr_t.147 }
%struct.hb_atomic_ptr_t.147 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.148, %struct.anon.149, %struct.anon.150 }
%struct.anon.148 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.149 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.150 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_complex_shaper_t = type opaque
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.152], [2 x %struct.hb_vector_t.153] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.151 }
%struct.hb_vector_t.151 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.152 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.153 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.154 }
%struct.hb_vector_t.154 = type { i32, i32, i32* }
%struct.hb_sanitize_context_t = type <{ %struct.hb_dispatch_context_t, [4 x i8], i8*, i8*, i32, i32, i8, [3 x i8], i32, %struct.hb_blob_t*, i32, i8, [3 x i8] }>
%struct.hb_dispatch_context_t = type { i32 }
%"struct.OT::maxp" = type { %"struct.OT::FixedVersion", %"struct.OT::IntType" }
%"struct.OT::FixedVersion" = type { %"struct.OT::IntType", %"struct.OT::IntType" }
%"struct.OT::head" = type { %"struct.OT::FixedVersion", %"struct.OT::FixedVersion", %"struct.OT::IntType.9", %"struct.OT::IntType.9", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::LONGDATETIME", %"struct.OT::LONGDATETIME", %"struct.OT::IntType.157", %"struct.OT::IntType.157", %"struct.OT::IntType.157", %"struct.OT::IntType.157", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType.157", %"struct.OT::IntType", %"struct.OT::IntType" }
%"struct.OT::LONGDATETIME" = type { %"struct.OT::IntType.155", %"struct.OT::IntType.9" }
%"struct.OT::IntType.155" = type { %struct.BEInt.156 }
%struct.BEInt.156 = type { [4 x i8] }
%"struct.OT::IntType.157" = type { %struct.BEInt.158 }
%struct.BEInt.158 = type { [2 x i8] }

$_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE17replace_or_insertIS1_EEPS1_T_RS2_b = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4maxpEEEP9hb_blob_tS4_ = comdat any

$_ZNK16hb_lazy_loader_tIN2OT4headE22hb_table_lazy_loader_tIS1_Lj1EE9hb_face_tLj1E9hb_blob_tE10get_storedEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4headEEEP9hb_blob_tS4_ = comdat any

@_ZL18hb_ms_language_map = internal constant [240 x %struct.hb_ot_language_map_t] [%struct.hb_ot_language_map_t { i16 1, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 4, [6 x i8] c"zh\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 9, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1025, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1026, [6 x i8] c"bg\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1027, [6 x i8] c"ca\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1028, [6 x i8] c"zh-tw\00" }, %struct.hb_ot_language_map_t { i16 1029, [6 x i8] c"cs\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1030, [6 x i8] c"da\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1031, [6 x i8] c"de\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1032, [6 x i8] c"el\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1033, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1034, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1035, [6 x i8] c"fi\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1036, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1037, [6 x i8] c"he\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1038, [6 x i8] c"hu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1039, [6 x i8] c"is\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1040, [6 x i8] c"it\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1041, [6 x i8] c"ja\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1042, [6 x i8] c"ko\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1043, [6 x i8] c"nl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1044, [6 x i8] c"no\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1045, [6 x i8] c"pl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1046, [6 x i8] c"pt\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1047, [6 x i8] c"rm\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1048, [6 x i8] c"ro\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1049, [6 x i8] c"ru\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1050, [6 x i8] c"hr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1051, [6 x i8] c"sk\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1052, [6 x i8] c"sq\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1053, [6 x i8] c"sv\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1054, [6 x i8] c"th\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1055, [6 x i8] c"tr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1056, [6 x i8] c"ur\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1057, [6 x i8] c"id\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1058, [6 x i8] c"uk\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1059, [6 x i8] c"be\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1060, [6 x i8] c"sl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1061, [6 x i8] c"et\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1062, [6 x i8] c"lv\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1063, [6 x i8] c"lt\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1064, [6 x i8] c"tg\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1065, [6 x i8] c"fa\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1066, [6 x i8] c"vi\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1067, [6 x i8] c"hy\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1068, [6 x i8] c"az\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1069, [6 x i8] c"eu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1070, [6 x i8] c"hsb\00\00\00" }, %struct.hb_ot_language_map_t { i16 1071, [6 x i8] c"mk\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1072, [6 x i8] c"st\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1073, [6 x i8] c"ts\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1074, [6 x i8] c"tn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1075, [6 x i8] c"ven\00\00\00" }, %struct.hb_ot_language_map_t { i16 1076, [6 x i8] c"xh\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1077, [6 x i8] c"zu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1078, [6 x i8] c"af\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1079, [6 x i8] c"ka\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1080, [6 x i8] c"fo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1081, [6 x i8] c"hi\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1082, [6 x i8] c"mt\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1083, [6 x i8] c"se\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1084, [6 x i8] c"ga\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1085, [6 x i8] c"yi\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1086, [6 x i8] c"ms\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1087, [6 x i8] c"kk\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1088, [6 x i8] c"ky\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1089, [6 x i8] c"sw\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1090, [6 x i8] c"tk\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1091, [6 x i8] c"uz\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1092, [6 x i8] c"tt\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1093, [6 x i8] c"bn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1094, [6 x i8] c"pa\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1095, [6 x i8] c"gu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1096, [6 x i8] c"or\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1097, [6 x i8] c"ta\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1098, [6 x i8] c"te\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1099, [6 x i8] c"kn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1100, [6 x i8] c"ml\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1101, [6 x i8] c"as\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1102, [6 x i8] c"mr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1103, [6 x i8] c"sa\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1104, [6 x i8] c"mn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1105, [6 x i8] c"bo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1106, [6 x i8] c"cy\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1107, [6 x i8] c"km\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1108, [6 x i8] c"lo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1109, [6 x i8] c"my\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1110, [6 x i8] c"gl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1111, [6 x i8] c"kok\00\00\00" }, %struct.hb_ot_language_map_t { i16 1112, [6 x i8] c"mni\00\00\00" }, %struct.hb_ot_language_map_t { i16 1113, [6 x i8] c"sd\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1114, [6 x i8] c"syr\00\00\00" }, %struct.hb_ot_language_map_t { i16 1115, [6 x i8] c"si\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1116, [6 x i8] c"chr\00\00\00" }, %struct.hb_ot_language_map_t { i16 1117, [6 x i8] c"iu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1118, [6 x i8] c"am\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1120, [6 x i8] c"ks\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1121, [6 x i8] c"ne\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1122, [6 x i8] c"fy\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1123, [6 x i8] c"ps\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1124, [6 x i8] c"phi\00\00\00" }, %struct.hb_ot_language_map_t { i16 1125, [6 x i8] c"div\00\00\00" }, %struct.hb_ot_language_map_t { i16 1128, [6 x i8] c"ha\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1130, [6 x i8] c"yo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1131, [6 x i8] c"quz\00\00\00" }, %struct.hb_ot_language_map_t { i16 1132, [6 x i8] c"nso\00\00\00" }, %struct.hb_ot_language_map_t { i16 1133, [6 x i8] c"ba\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1134, [6 x i8] c"lb\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1135, [6 x i8] c"kl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1136, [6 x i8] c"ibo\00\00\00" }, %struct.hb_ot_language_map_t { i16 1137, [6 x i8] c"kau\00\00\00" }, %struct.hb_ot_language_map_t { i16 1138, [6 x i8] c"om\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1139, [6 x i8] c"ti\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1140, [6 x i8] c"gn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1141, [6 x i8] c"haw\00\00\00" }, %struct.hb_ot_language_map_t { i16 1142, [6 x i8] c"la\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1143, [6 x i8] c"so\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1144, [6 x i8] c"ii\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1145, [6 x i8] c"pap\00\00\00" }, %struct.hb_ot_language_map_t { i16 1146, [6 x i8] c"arn\00\00\00" }, %struct.hb_ot_language_map_t { i16 1148, [6 x i8] c"moh\00\00\00" }, %struct.hb_ot_language_map_t { i16 1150, [6 x i8] c"br\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1152, [6 x i8] c"ug\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1153, [6 x i8] c"mi\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1154, [6 x i8] c"oc\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1155, [6 x i8] c"co\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1156, [6 x i8] c"gsw\00\00\00" }, %struct.hb_ot_language_map_t { i16 1157, [6 x i8] c"sah\00\00\00" }, %struct.hb_ot_language_map_t { i16 1158, [6 x i8] c"qut\00\00\00" }, %struct.hb_ot_language_map_t { i16 1159, [6 x i8] c"rw\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1160, [6 x i8] c"wo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1164, [6 x i8] c"fa\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2049, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2052, [6 x i8] c"zh-cn\00" }, %struct.hb_ot_language_map_t { i16 2055, [6 x i8] c"de\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2057, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2058, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2060, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2064, [6 x i8] c"it\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2066, [6 x i8] c"ko\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2067, [6 x i8] c"nl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2068, [6 x i8] c"nn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2070, [6 x i8] c"pt\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2072, [6 x i8] c"mo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2073, [6 x i8] c"ru\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2074, [6 x i8] c"sr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2077, [6 x i8] c"sv\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2080, [6 x i8] c"ur\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2087, [6 x i8] c"lt\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2092, [6 x i8] c"az\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2094, [6 x i8] c"dsb\00\00\00" }, %struct.hb_ot_language_map_t { i16 2108, [6 x i8] c"gd\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2110, [6 x i8] c"ms\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2115, [6 x i8] c"uz\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2117, [6 x i8] c"bn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2118, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2128, [6 x i8] c"mn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2129, [6 x i8] c"dz\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2141, [6 x i8] c"iu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2143, [6 x i8] c"tzm\00\00\00" }, %struct.hb_ot_language_map_t { i16 2145, [6 x i8] c"ne\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2163, [6 x i8] c"ti\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 3073, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 3076, [6 x i8] c"zh-hk\00" }, %struct.hb_ot_language_map_t { i16 3079, [6 x i8] c"de\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 3081, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 3082, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 3084, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 3098, [6 x i8] c"sr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 3131, [6 x i8] c"se\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 4097, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 4100, [6 x i8] c"zh-sg\00" }, %struct.hb_ot_language_map_t { i16 4103, [6 x i8] c"de\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 4105, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 4106, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 4108, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 4122, [6 x i8] c"hr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 4155, [6 x i8] c"smj\00\00\00" }, %struct.hb_ot_language_map_t { i16 5121, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 5127, [6 x i8] c"de\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 5129, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 5130, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 5132, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 5146, [6 x i8] c"bs\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 6145, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 6153, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 6154, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 6156, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 6203, [6 x i8] c"sma\00\00\00" }, %struct.hb_ot_language_map_t { i16 7169, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 7177, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 7178, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 7180, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 8193, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 8201, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 8202, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 8204, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 8218, [6 x i8] c"bs\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 8251, [6 x i8] c"sms\00\00\00" }, %struct.hb_ot_language_map_t { i16 9217, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 9225, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 9226, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 9228, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 9275, [6 x i8] c"smn\00\00\00" }, %struct.hb_ot_language_map_t { i16 10241, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 10249, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 10250, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 10252, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 11265, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 11273, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 11274, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 11276, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 12289, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 12297, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 12298, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 12300, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 13313, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 13321, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 13322, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 13324, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 14337, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 14346, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 14348, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 15361, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 15369, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 15370, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 15372, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 16385, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 16393, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 16394, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 17417, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 17418, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 18441, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 18442, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 19466, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 20490, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 21514, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 -7158, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 -7156, [6 x i8] c"fr\00\00\00\00" }], align 16
@_ZL19hb_mac_language_map = internal constant [117 x %struct.hb_ot_language_map_t] [%struct.hb_ot_language_map_t { i16 0, [6 x i8] c"en\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 1, [6 x i8] c"fr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 2, [6 x i8] c"de\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 3, [6 x i8] c"it\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 4, [6 x i8] c"nl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 5, [6 x i8] c"sv\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 6, [6 x i8] c"es\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 7, [6 x i8] c"da\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 8, [6 x i8] c"pt\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 9, [6 x i8] c"no\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 10, [6 x i8] c"he\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 11, [6 x i8] c"ja\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 12, [6 x i8] c"ar\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 13, [6 x i8] c"fi\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 14, [6 x i8] c"el\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 15, [6 x i8] c"is\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 16, [6 x i8] c"mt\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 17, [6 x i8] c"tr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 18, [6 x i8] c"hr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 19, [6 x i8] c"zh-tw\00" }, %struct.hb_ot_language_map_t { i16 20, [6 x i8] c"ur\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 21, [6 x i8] c"hi\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 22, [6 x i8] c"th\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 23, [6 x i8] c"ko\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 24, [6 x i8] c"lt\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 25, [6 x i8] c"pl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 26, [6 x i8] c"hu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 27, [6 x i8] c"et\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 28, [6 x i8] c"lv\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 30, [6 x i8] c"fo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 31, [6 x i8] c"fa\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 32, [6 x i8] c"ru\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 33, [6 x i8] c"zh-cn\00" }, %struct.hb_ot_language_map_t { i16 34, [6 x i8] c"nl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 35, [6 x i8] c"ga\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 36, [6 x i8] c"sq\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 37, [6 x i8] c"ro\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 38, [6 x i8] c"cs\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 39, [6 x i8] c"sk\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 40, [6 x i8] c"sl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 41, [6 x i8] c"yi\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 42, [6 x i8] c"sr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 43, [6 x i8] c"mk\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 44, [6 x i8] c"bg\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 45, [6 x i8] c"uk\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 46, [6 x i8] c"be\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 47, [6 x i8] c"uz\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 48, [6 x i8] c"kk\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 49, [6 x i8] c"az\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 50, [6 x i8] c"az\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 51, [6 x i8] c"hy\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 52, [6 x i8] c"ka\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 53, [6 x i8] c"mo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 54, [6 x i8] c"ky\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 55, [6 x i8] c"tg\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 56, [6 x i8] c"tk\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 57, [6 x i8] c"mn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 58, [6 x i8] c"mn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 59, [6 x i8] c"ps\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 60, [6 x i8] c"ku\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 61, [6 x i8] c"ks\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 62, [6 x i8] c"sd\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 63, [6 x i8] c"bo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 64, [6 x i8] c"ne\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 65, [6 x i8] c"sa\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 66, [6 x i8] c"mr\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 67, [6 x i8] c"bn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 68, [6 x i8] c"as\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 69, [6 x i8] c"gu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 70, [6 x i8] c"pa\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 71, [6 x i8] c"or\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 72, [6 x i8] c"ml\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 73, [6 x i8] c"kn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 74, [6 x i8] c"ta\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 75, [6 x i8] c"te\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 76, [6 x i8] c"si\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 77, [6 x i8] c"my\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 78, [6 x i8] c"km\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 79, [6 x i8] c"lo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 80, [6 x i8] c"vi\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 81, [6 x i8] c"id\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 82, [6 x i8] c"tl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 83, [6 x i8] c"ms\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 84, [6 x i8] c"ms\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 85, [6 x i8] c"am\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 86, [6 x i8] c"ti\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 87, [6 x i8] c"om\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 88, [6 x i8] c"so\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 89, [6 x i8] c"sw\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 90, [6 x i8] c"rw\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 91, [6 x i8] c"rn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 92, [6 x i8] c"ny\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 93, [6 x i8] c"mg\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 94, [6 x i8] c"eo\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 128, [6 x i8] c"cy\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 129, [6 x i8] c"eu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 130, [6 x i8] c"ca\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 131, [6 x i8] c"la\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 132, [6 x i8] c"qu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 133, [6 x i8] c"gn\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 134, [6 x i8] c"ay\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 135, [6 x i8] c"tt\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 136, [6 x i8] c"ug\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 137, [6 x i8] c"dz\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 138, [6 x i8] c"jw\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 139, [6 x i8] c"su\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 140, [6 x i8] c"gl\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 141, [6 x i8] c"af\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 142, [6 x i8] c"br\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 143, [6 x i8] c"iu\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 144, [6 x i8] c"gd\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 145, [6 x i8] c"gv\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 146, [6 x i8] c"ga\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 147, [6 x i8] c"to\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 148, [6 x i8] c"el\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 149, [6 x i8] c"ik\00\00\00\00" }, %struct.hb_ot_language_map_t { i16 150, [6 x i8] c"az\00\00\00\00" }], align 16
@_hb_NullPool = hidden local_unnamed_addr constant [48 x i64] zeroinitializer, align 16
@_hb_CrapPool = hidden global [48 x i64] zeroinitializer, align 16
@_hb_Null_OT_Index = hidden local_unnamed_addr constant [2 x i8] c"\FF\FF", align 1
@_hb_Null_OT_VarIdx = hidden local_unnamed_addr constant [4 x i8] c"\FF\FF\FF\FF", align 1
@_hb_Null_OT_LangSys = hidden local_unnamed_addr constant [6 x i8] c"\00\00\FF\FF\00\00", align 1
@_hb_Null_OT_RangeRecord = hidden local_unnamed_addr constant [6 x i8] c"\00\01\00\00\00\00", align 1
@_hb_Null_OT_CmapSubtableLongGroup = hidden local_unnamed_addr constant <{ i8, i8, i8, i8, [8 x i8] }> <{ i8 0, i8 0, i8 0, i8 1, [8 x i8] zeroinitializer }>, align 1
@_hb_Null_AAT_SettingName = hidden local_unnamed_addr constant [4 x i8] c"\FF\FF\FF\FF", align 1
@_hb_Null_AAT_Lookup = hidden local_unnamed_addr constant [2 x i8] c"\FF\FF", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_language_impl_t* @_Z32_hb_ot_name_language_for_ms_codej(i32) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %18, %1
  %3 = phi i32 [ 239, %1 ], [ %20, %18 ]
  %4 = phi i32 [ 0, %1 ], [ %19, %18 ]
  %5 = add i32 %4, %3
  %6 = lshr i32 %5, 1
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds [240 x %struct.hb_ot_language_map_t], [240 x %struct.hb_ot_language_map_t]* @_ZL18hb_ms_language_map, i64 0, i64 %7, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = zext i16 %9 to i32
  %11 = icmp ugt i32 %10, %0
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = add nsw i32 %6, -1
  br label %18

14:                                               ; preds = %2
  %15 = icmp ult i32 %10, %0
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = add nuw nsw i32 %6, 1
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi i32 [ %4, %12 ], [ %17, %16 ]
  %20 = phi i32 [ %13, %12 ], [ %3, %16 ]
  %21 = icmp sgt i32 %19, %20
  br i1 %21, label %29, label %2

22:                                               ; preds = %14
  %23 = zext i32 %6 to i64
  %24 = getelementptr inbounds [240 x %struct.hb_ot_language_map_t], [240 x %struct.hb_ot_language_map_t]* @_ZL18hb_ms_language_map, i64 0, i64 %23
  %25 = icmp eq %struct.hb_ot_language_map_t* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds [240 x %struct.hb_ot_language_map_t], [240 x %struct.hb_ot_language_map_t]* @_ZL18hb_ms_language_map, i64 0, i64 %23, i32 1, i64 0
  %28 = tail call %struct.hb_language_impl_t* @hb_language_from_string(i8* %27, i32 -1) #5
  br label %29

29:                                               ; preds = %18, %22, %26
  %30 = phi %struct.hb_language_impl_t* [ %28, %26 ], [ null, %22 ], [ null, %18 ]
  ret %struct.hb_language_impl_t* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_language_impl_t* @_Z33_hb_ot_name_language_for_mac_codej(i32) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %18, %1
  %3 = phi i32 [ 116, %1 ], [ %20, %18 ]
  %4 = phi i32 [ 0, %1 ], [ %19, %18 ]
  %5 = add i32 %4, %3
  %6 = lshr i32 %5, 1
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds [117 x %struct.hb_ot_language_map_t], [117 x %struct.hb_ot_language_map_t]* @_ZL19hb_mac_language_map, i64 0, i64 %7, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = zext i16 %9 to i32
  %11 = icmp ugt i32 %10, %0
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = add nsw i32 %6, -1
  br label %18

14:                                               ; preds = %2
  %15 = icmp ult i32 %10, %0
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = add nuw nsw i32 %6, 1
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi i32 [ %4, %12 ], [ %17, %16 ]
  %20 = phi i32 [ %13, %12 ], [ %3, %16 ]
  %21 = icmp sgt i32 %19, %20
  br i1 %21, label %29, label %2

22:                                               ; preds = %14
  %23 = zext i32 %6 to i64
  %24 = getelementptr inbounds [117 x %struct.hb_ot_language_map_t], [117 x %struct.hb_ot_language_map_t]* @_ZL19hb_mac_language_map, i64 0, i64 %23
  %25 = icmp eq %struct.hb_ot_language_map_t* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds [117 x %struct.hb_ot_language_map_t], [117 x %struct.hb_ot_language_map_t]* @_ZL19hb_mac_language_map, i64 0, i64 %23, i32 1, i64 0
  %28 = tail call %struct.hb_language_impl_t* @hb_language_from_string(i8* %27, i32 -1) #5
  br label %29

29:                                               ; preds = %18, %22, %26
  %30 = phi %struct.hb_language_impl_t* [ %28, %26 ], [ null, %22 ], [ null, %18 ]
  ret %struct.hb_language_impl_t* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9hb_face_t15load_num_glyphsEv(%struct.hb_face_t*) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 56, i1 false)
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %7, align 8
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %9 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 25, i1 false) #5
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  store i32 0, i32* %8, align 8
  store i8 1, i8* %10, align 4
  %11 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %0, i32 1835104368) #5
  %12 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4maxpEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %11) #5
  %13 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %12, i64 0, i32 1
  %14 = bitcast i8** %13 to %"struct.OT::maxp"**
  %15 = load %"struct.OT::maxp"*, %"struct.OT::maxp"** %14, align 8
  %16 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %12, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 6
  %19 = select i1 %18, %"struct.OT::maxp"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::maxp"*), %"struct.OT::maxp"* %15
  %20 = getelementptr inbounds %"struct.OT::maxp", %"struct.OT::maxp"* %19, i64 0, i32 1
  %21 = bitcast %"struct.OT::IntType"* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = call i16 @llvm.bswap.i16(i16 %22) #5
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 6, i32 0
  store atomic i32 %24, i32* %25 monotonic, align 4
  call void @hb_blob_destroy(%struct.hb_blob_t* %12) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #5
  ret i32 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @hb_blob_destroy(%struct.hb_blob_t*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 1, i32 0
  %3 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4headE22hb_table_lazy_loader_tIS1_Lj1EE9hb_face_tLj1E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.1* %2) #5
  %4 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %5 = bitcast i8** %4 to %"struct.OT::head"**
  %6 = load %"struct.OT::head"*, %"struct.OT::head"** %5, align 8
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 54
  %10 = select i1 %9, %"struct.OT::head"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::head"*), %"struct.OT::head"* %6
  %11 = getelementptr inbounds %"struct.OT::head", %"struct.OT::head"* %10, i64 0, i32 5
  %12 = bitcast %"struct.OT::IntType"* %11 to i16*
  %13 = load i16, i16* %12, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13) #5
  %15 = zext i16 %14 to i32
  %16 = add nsw i32 %15, -16
  %17 = icmp ult i32 %16, 16369
  %18 = select i1 %17, i32 %15, i32 1000
  %19 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 5, i32 0
  store atomic i32 %18, i32* %19 monotonic, align 4
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20hb_user_data_array_t3setEP18hb_user_data_key_tPvPFvS2_Ei(%struct.hb_user_data_array_t*, %struct.hb_user_data_key_t*, i8*, void (i8*)*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.hb_user_data_array_t::hb_user_data_item_t", align 8
  %7 = icmp eq %struct.hb_user_data_key_t* %1, null
  br i1 %7, label %63, label %8

8:                                                ; preds = %5
  %9 = icmp ne i32 %4, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %8
  %11 = icmp ne i8* %2, null
  %12 = icmp ne void (i8*)* %3, null
  %13 = or i1 %11, %12
  br i1 %13, label %55, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %0, i64 0, i32 0, i32 0
  %16 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %15) #5
  %17 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %0, i64 0, i32 1, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %53, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %0, i64 0, i32 1, i32 0, i32 2
  %22 = load %"struct.hb_user_data_array_t::hb_user_data_item_t"*, %"struct.hb_user_data_array_t::hb_user_data_item_t"** %21, align 8
  %23 = zext i32 %18 to i64
  br label %26

24:                                               ; preds = %26
  %25 = icmp eq i64 %32, %23
  br i1 %25, label %53, label %26

26:                                               ; preds = %24, %20
  %27 = phi i64 [ 0, %20 ], [ %32, %24 ]
  %28 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %22, i64 %27
  %29 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %28, i64 0, i32 0
  %30 = load %struct.hb_user_data_key_t*, %struct.hb_user_data_key_t** %29, align 8
  %31 = icmp eq %struct.hb_user_data_key_t* %30, %1
  %32 = add nuw nsw i64 %27, 1
  br i1 %31, label %33, label %24

33:                                               ; preds = %26
  %34 = icmp eq %"struct.hb_user_data_array_t::hb_user_data_item_t"* %28, null
  br i1 %34, label %53, label %35

35:                                               ; preds = %33
  %36 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"* %28 to i8*
  %37 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %22, i64 %27, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %22, i64 %27, i32 2
  %40 = load void (i8*)*, void (i8*)** %39, align 8
  %41 = add i32 %18, -1
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %22, i64 %42
  %44 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %44, i64 24, i1 false) #5
  %45 = load i32, i32* %17, align 4, !noalias !2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %35
  %48 = add i32 %45, -1
  store i32 %48, i32* %17, align 4, !noalias !2
  br label %49

49:                                               ; preds = %47, %35
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %15) #5
  %51 = icmp eq void (i8*)* %40, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %49
  tail call void %40(i8* %38) #5
  br label %63

53:                                               ; preds = %24, %33, %14
  %54 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %15) #5
  br label %63

55:                                               ; preds = %10, %8
  %56 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %0, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %6, i64 0, i32 0
  store %struct.hb_user_data_key_t* %1, %struct.hb_user_data_key_t** %57, align 8
  %58 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %6, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %6, i64 0, i32 2
  store void (i8*)* %3, void (i8*)** %59, align 8
  %60 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %0, i64 0, i32 0
  %61 = tail call %"struct.hb_user_data_array_t::hb_user_data_item_t"* @_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE17replace_or_insertIS1_EEPS1_T_RS2_b(%struct.hb_lockable_set_t* %56, %"struct.hb_user_data_array_t::hb_user_data_item_t"* nonnull byval(%"struct.hb_user_data_array_t::hb_user_data_item_t") align 8 %6, %struct.hb_mutex_t* dereferenceable(40) %60, i1 zeroext %9)
  %62 = icmp ne %"struct.hb_user_data_array_t::hb_user_data_item_t"* %61, null
  br label %63

63:                                               ; preds = %53, %52, %49, %5, %55
  %64 = phi i1 [ %62, %55 ], [ false, %5 ], [ true, %49 ], [ true, %52 ], [ true, %53 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.hb_user_data_array_t::hb_user_data_item_t"* @_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE17replace_or_insertIS1_EEPS1_T_RS2_b(%struct.hb_lockable_set_t*, %"struct.hb_user_data_array_t::hb_user_data_item_t"* byval(%"struct.hb_user_data_array_t::hb_user_data_item_t") align 8, %struct.hb_mutex_t* dereferenceable(40), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %struct.hb_mutex_t, %struct.hb_mutex_t* %2, i64 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #5
  %7 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"* %1 to i8*
  %8 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %1, i64 0, i32 0
  %9 = load %struct.hb_user_data_key_t*, %struct.hb_user_data_key_t** %8, align 8
  %10 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 2
  %15 = load %"struct.hb_user_data_array_t::hb_user_data_item_t"*, %"struct.hb_user_data_array_t::hb_user_data_item_t"** %14, align 8
  %16 = zext i32 %11 to i64
  br label %19

17:                                               ; preds = %19
  %18 = icmp eq i64 %25, %16
  br i1 %18, label %40, label %19

19:                                               ; preds = %17, %13
  %20 = phi i64 [ 0, %13 ], [ %25, %17 ]
  %21 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %15, i64 %20
  %22 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %21, i64 0, i32 0
  %23 = load %struct.hb_user_data_key_t*, %struct.hb_user_data_key_t** %22, align 8
  %24 = icmp eq %struct.hb_user_data_key_t* %23, %9
  %25 = add nuw nsw i64 %20, 1
  br i1 %24, label %26, label %17

26:                                               ; preds = %19
  %27 = icmp eq %"struct.hb_user_data_array_t::hb_user_data_item_t"* %21, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %26
  br i1 %3, label %29, label %38

29:                                               ; preds = %28
  %30 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"* %21 to i8*
  %31 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %15, i64 %20, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %15, i64 %20, i32 2
  %34 = load void (i8*)*, void (i8*)** %33, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 24, i1 false)
  %35 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #5
  %36 = icmp eq void (i8*)* %34, null
  br i1 %36, label %95, label %37

37:                                               ; preds = %29
  tail call void %34(i8* %32) #5
  br label %95

38:                                               ; preds = %28
  %39 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #5
  br label %95

40:                                               ; preds = %17, %4, %26
  %41 = add i32 %11, 1
  %42 = icmp sgt i32 %41, 0
  %43 = select i1 %42, i32 %41, i32 0
  %44 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %82, label %47, !prof !5

47:                                               ; preds = %40
  %48 = icmp ult i32 %45, %43
  br i1 %48, label %49, label %70, !prof !5

49:                                               ; preds = %47, %49
  %50 = phi i32 [ %53, %49 ], [ %45, %47 ]
  %51 = lshr i32 %50, 1
  %52 = add i32 %50, 8
  %53 = add i32 %52, %51
  %54 = icmp ugt i32 %53, %43
  br i1 %54, label %55, label %49

55:                                               ; preds = %49
  %56 = icmp uge i32 %53, %45
  %57 = icmp ult i32 %53, 178956970
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %67, !prof !6

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 2
  %61 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"** %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = zext i32 %53 to i64
  %64 = mul nuw nsw i64 %63, 24
  %65 = tail call i8* @realloc(i8* %62, i64 %64) #5
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %68, !prof !5

67:                                               ; preds = %59, %55
  store i32 -1, i32* %44, align 8
  br label %82

68:                                               ; preds = %59
  store i8* %65, i8** %61, align 8
  store i32 %53, i32* %44, align 8
  %69 = load i32, i32* %10, align 4
  br label %70

70:                                               ; preds = %68, %47
  %71 = phi i32 [ %69, %68 ], [ %11, %47 ]
  %72 = icmp ugt i32 %43, %71
  br i1 %72, label %73, label %83

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 2
  %75 = load %"struct.hb_user_data_array_t::hb_user_data_item_t"*, %"struct.hb_user_data_array_t::hb_user_data_item_t"** %74, align 8
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %75, i64 %76
  %78 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"* %77 to i8*
  %79 = sub i32 %43, %71
  %80 = zext i32 %79 to i64
  %81 = mul nuw nsw i64 %80, 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %81, i1 false) #5
  br label %83

82:                                               ; preds = %67, %40
  tail call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8 0, i64 24, i1 false) #5
  br label %92

83:                                               ; preds = %73, %70
  store i32 %43, i32* %10, align 4
  %84 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 2
  %85 = load %"struct.hb_user_data_array_t::hb_user_data_item_t"*, %"struct.hb_user_data_array_t::hb_user_data_item_t"** %84, align 8
  %86 = add nsw i32 %43, -1
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %85, i64 %87
  tail call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8 0, i64 24, i1 false) #5
  %89 = icmp eq %"struct.hb_user_data_array_t::hb_user_data_item_t"* %88, bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_user_data_array_t::hb_user_data_item_t"*)
  br i1 %89, label %92, label %90

90:                                               ; preds = %83
  %91 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 8 %7, i64 24, i1 false) #5
  br label %92

92:                                               ; preds = %82, %83, %90
  %93 = phi %"struct.hb_user_data_array_t::hb_user_data_item_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_user_data_array_t::hb_user_data_item_t"*), %82 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_user_data_array_t::hb_user_data_item_t"*), %83 ], [ %88, %90 ]
  %94 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #5
  br label %95

95:                                               ; preds = %37, %29, %38, %92
  %96 = phi %"struct.hb_user_data_array_t::hb_user_data_item_t"* [ null, %38 ], [ %93, %92 ], [ %21, %29 ], [ %21, %37 ]
  ret %"struct.hb_user_data_array_t::hb_user_data_item_t"* %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN20hb_user_data_array_t3getEP18hb_user_data_key_t(%struct.hb_user_data_array_t*, %struct.hb_user_data_key_t* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %0, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #5
  %5 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %0, i64 0, i32 1, i32 0, i32 2
  %10 = load %"struct.hb_user_data_array_t::hb_user_data_item_t"*, %"struct.hb_user_data_array_t::hb_user_data_item_t"** %9, align 8
  %11 = zext i32 %6 to i64
  br label %14

12:                                               ; preds = %14
  %13 = icmp eq i64 %20, %11
  br i1 %13, label %26, label %14

14:                                               ; preds = %12, %8
  %15 = phi i64 [ 0, %8 ], [ %20, %12 ]
  %16 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %10, i64 %15
  %17 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %16, i64 0, i32 0
  %18 = load %struct.hb_user_data_key_t*, %struct.hb_user_data_key_t** %17, align 8
  %19 = icmp eq %struct.hb_user_data_key_t* %18, %1
  %20 = add nuw nsw i64 %15, 1
  br i1 %19, label %21, label %12

21:                                               ; preds = %14
  %22 = icmp eq %"struct.hb_user_data_array_t::hb_user_data_item_t"* %16, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %10, i64 %15, i32 1
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %12, %2, %21, %23
  %27 = phi i8* [ %25, %23 ], [ null, %21 ], [ null, %2 ], [ null, %12 ]
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  ret i8* %27
}

declare %struct.hb_language_impl_t* @hb_language_from_string(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #3

declare i32 @hb_face_get_glyph_count(%struct.hb_face_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4maxpEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #5
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  store i8* %12, i8** %13, align 8
  %14 = icmp ugt i32 %10, 67108862
  br i1 %14, label %21, label %15, !prof !5

15:                                               ; preds = %2
  %16 = shl i32 %10, 6
  %17 = icmp ugt i32 %16, 16384
  %18 = select i1 %17, i32 %16, i32 16384
  %19 = icmp ult i32 %18, 1073741823
  %20 = select i1 %19, i32 %18, i32 1073741823
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i32 [ %20, %15 ], [ 1073741823, %2 ]
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = icmp eq i8* %8, null
  br i1 %26, label %27, label %29, !prof !5

27:                                               ; preds = %21
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #5
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %28 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #5
  br label %53

29:                                               ; preds = %21
  %30 = icmp ult i32 %10, 6
  br i1 %30, label %49, label %31, !prof !5

31:                                               ; preds = %29
  %32 = add nsw i32 %22, -6
  store i32 %32, i32* %23, align 8
  %33 = bitcast i8* %8 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = tail call i16 @llvm.bswap.i16(i16 %34) #5
  switch i16 %35, label %49 [
    i16 1, label %36
    i16 0, label %42
  ], !prof !7

36:                                               ; preds = %31
  %37 = add i32 %10, -6
  %38 = icmp ult i32 %37, 26
  br i1 %38, label %49, label %39, !prof !5

39:                                               ; preds = %36
  %40 = add nsw i32 %22, -32
  store i32 %40, i32* %23, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #5
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %41 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #5
  br label %48

42:                                               ; preds = %31
  %43 = getelementptr inbounds i8, i8* %8, i64 2
  %44 = bitcast i8* %43 to i16*
  %45 = load i16, i16* %44, align 1
  %46 = icmp eq i16 %45, 80
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #5
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %47 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #5
  br i1 %46, label %48, label %51

48:                                               ; preds = %39, %42
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #5
  br label %53

49:                                               ; preds = %31, %36, %29
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #5
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %50 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #5
  br label %51

51:                                               ; preds = %49, %42
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #5
  %52 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #5
  br label %53

53:                                               ; preds = %48, %51, %27
  %54 = phi %struct.hb_blob_t* [ %1, %27 ], [ %1, %48 ], [ %52, %51 ]
  ret %struct.hb_blob_t* %54
}

declare %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t*, i32) local_unnamed_addr #2

declare void @hb_blob_make_immutable(%struct.hb_blob_t*) local_unnamed_addr #2

declare %struct.hb_blob_t* @hb_blob_get_empty() local_unnamed_addr #2

declare %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4headE22hb_table_lazy_loader_tIS1_Lj1EE9hb_face_tLj1E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = bitcast %struct.hb_lazy_loader_t.1* %0 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = inttoptr i64 %4 to %struct.hb_blob_t*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %46, !prof !5

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.hb_lazy_loader_t.1, %struct.hb_lazy_loader_t.1* %0, i64 -1
  %9 = bitcast %struct.hb_lazy_loader_t.1* %8 to %struct.hb_face_t**
  %10 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %16 = bitcast i8** %12 to i8*
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  br label %18

18:                                               ; preds = %7, %41
  %19 = load %struct.hb_face_t*, %struct.hb_face_t** %9, align 8
  %20 = icmp eq %struct.hb_face_t* %19, null
  br i1 %20, label %21, label %23, !prof !5

21:                                               ; preds = %18
  %22 = call %struct.hb_blob_t* @hb_blob_get_empty() #5
  br label %46

23:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #5
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #5
  %24 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %19) #5
  store i32 %24, i32* %15, align 8
  store i8 1, i8* %17, align 4
  %25 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %19, i32 1751474532) #5
  %26 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4headEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %25) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #5
  %27 = icmp eq %struct.hb_blob_t* %26, null
  br i1 %27, label %28, label %30, !prof !5

28:                                               ; preds = %23
  %29 = call %struct.hb_blob_t* @hb_blob_get_empty() #5
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi %struct.hb_blob_t* [ %29, %28 ], [ %26, %23 ]
  %32 = ptrtoint %struct.hb_blob_t* %31 to i64
  %33 = cmpxchg weak i64* %3, i64 0, i64 %32 acq_rel monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %46, label %35, !prof !8

35:                                               ; preds = %30
  %36 = icmp eq %struct.hb_blob_t* %31, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = call %struct.hb_blob_t* @hb_blob_get_empty() #5
  %39 = icmp eq %struct.hb_blob_t* %38, %31
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %31) #5
  br label %41

41:                                               ; preds = %40, %37, %35
  %42 = load atomic i64, i64* %3 acquire, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %18, label %44, !prof !5

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %struct.hb_blob_t*
  br label %46

46:                                               ; preds = %30, %1, %44, %21
  %47 = phi %struct.hb_blob_t* [ %22, %21 ], [ %45, %44 ], [ %5, %1 ], [ %31, %30 ]
  ret %struct.hb_blob_t* %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4headEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #5
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  store i8* %12, i8** %13, align 8
  %14 = icmp ugt i32 %10, 67108862
  br i1 %14, label %21, label %15, !prof !5

15:                                               ; preds = %2
  %16 = shl i32 %10, 6
  %17 = icmp ugt i32 %16, 16384
  %18 = select i1 %17, i32 %16, i32 16384
  %19 = icmp ult i32 %18, 1073741823
  %20 = select i1 %19, i32 %18, i32 1073741823
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i32 [ %20, %15 ], [ 1073741823, %2 ]
  %23 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = icmp eq i8* %8, null
  br i1 %26, label %27, label %29, !prof !5

27:                                               ; preds = %21
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #5
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %28 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #5
  br label %62

29:                                               ; preds = %21
  %30 = icmp ult i32 %10, 54
  br i1 %30, label %58, label %31, !prof !5

31:                                               ; preds = %29
  %32 = add nsw i32 %22, -54
  store i32 %32, i32* %23, align 8
  %33 = bitcast i8* %8 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = icmp eq i16 %34, 256
  br i1 %35, label %36, label %58

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %8, i64 12
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw i32 %39, 24
  %41 = getelementptr inbounds i8, i8* %8, i64 13
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 16
  %45 = or i32 %44, %40
  %46 = getelementptr inbounds i8, i8* %8, i64 14
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = or i32 %45, %49
  %51 = getelementptr inbounds i8, i8* %8, i64 15
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = or i32 %50, %53
  %55 = icmp eq i32 %54, 1594834165
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #5
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %56 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #5
  br i1 %55, label %57, label %60

57:                                               ; preds = %36
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #5
  br label %62

58:                                               ; preds = %29, %31
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #5
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %59 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #5
  br label %60

60:                                               ; preds = %58, %36
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #5
  %61 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #5
  br label %62

62:                                               ; preds = %57, %60, %27
  %63 = phi %struct.hb_blob_t* [ %1, %27 ], [ %1, %57 ], [ %61, %60 ]
  ret %struct.hb_blob_t* %63
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11hb_vector_tIN20hb_user_data_array_t19hb_user_data_item_tEE3popEv: argument 0"}
!4 = distinct !{!4, !"_ZN11hb_vector_tIN20hb_user_data_array_t19hb_user_data_item_tEE3popEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 4000000, i32 4001}
!7 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!8 = !{!"branch_weights", i32 2000, i32 1}
