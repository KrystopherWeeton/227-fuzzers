; ModuleID = '../../cc/paint/scoped_raster_flags.cc'
source_filename = "../../cc/paint/scoped_raster_flags.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.65 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3, i32, i32 }
%class.sk_sp.3 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%union.anon.70 = type { i32 }
%class.sk_sp.41 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%struct.SkSize = type { float, float }
%class.sk_sp.9 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.71 }
%class.scoped_refptr.71 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.72", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.72" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.cc::ScopedRasterFlags" = type <{ %"class.cc::PaintFlags"*, %"class.absl::optional.51", %"class.absl::optional.56", i8, [7 x i8] }>
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, [7 x i8], %union.anon.55 }
%union.anon.55 = type { %"class.cc::PaintFlags" }
%"class.cc::PaintFlags" = type <{ %class.sk_sp, %class.sk_sp.1, %class.sk_sp.40, %class.sk_sp.41, %class.sk_sp.42, %class.sk_sp.43, i32, float, float, i32, %union.anon.50, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.9, i32, %"class.absl::optional.16", %"class.std::__1::vector.21", %"class.std::__1::vector.28", %class.sk_sp.35, %class.sk_sp.2, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.2, %class.sk_sp.9, %"class.gfx::Rect", i32, %class.sk_sp.11, %class.sk_sp.15, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.11 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.12" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.15 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { float*, float*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { float* }
%class.sk_sp.35 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.36", [7 x i8] }>
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%class.sk_sp.2 = type { %class.SkImage* }
%class.sk_sp.40 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.42 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.43 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.44, i32, %"class.absl::optional.45", i8, i32 }
%class.sk_sp.44 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { %struct.SkRect }
%union.anon.50 = type { i32 }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.cc::DecodeStashingImageProvider" }
%"class.cc::DecodeStashingImageProvider" = type { %"class.cc::ImageProvider", %"class.cc::ImageProvider"*, %"class.base::StackVector" }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.63" }
%"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source" = type { [80 x i8], i8, [7 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"*, %"class.std::__1::__compressed_pair.73" }
%"class.cc::ImageProvider::ScopedResult" = type { %"class.cc::DecodedDrawImage", %class.sk_sp.9, %"class.base::OnceCallback" }
%"class.cc::DecodedDrawImage" = type <{ %class.sk_sp.65, %"struct.gpu::Mailbox", %"class.absl::optional.66", %class.sk_sp.41, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.66" = type { %"class.absl::optional_internal::optional_data.67" }
%"class.absl::optional_internal::optional_data.67" = type { %"class.absl::optional_internal::optional_data_base.68" }
%"class.absl::optional_internal::optional_data_base.68" = type { %"class.absl::optional_internal::optional_data_dtor_base.69" }
%"class.absl::optional_internal::optional_data_dtor_base.69" = type { i8, %union.anon.70 }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74", %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.cc::ImageProvider::ScopedResult"* }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.base::StackAllocator" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.80", %"class.absl::optional.85", float, [4 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.absl::optional.80" = type { %"class.absl::optional_internal::optional_data.81" }
%"class.absl::optional_internal::optional_data.81" = type { %"class.absl::optional_internal::optional_data_base.82" }
%"class.absl::optional_internal::optional_data_base.82" = type { %"class.absl::optional_internal::optional_data_dtor_base.83" }
%"class.absl::optional_internal::optional_data_dtor_base.83" = type { i8, %union.anon.84 }
%union.anon.84 = type { i64 }
%"class.absl::optional.85" = type { %"class.absl::optional_internal::optional_data.86" }
%"class.absl::optional_internal::optional_data.86" = type { %"class.absl::optional_internal::optional_data_base.87" }
%"class.absl::optional_internal::optional_data_base.87" = type { %"class.absl::optional_internal::optional_data_dtor_base.88" }
%"class.absl::optional_internal::optional_data_dtor_base.88" = type { i8, %union.anon.89 }
%union.anon.89 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@__const._ZN2cc17ScopedRasterFlags17DecodeImageShaderERK8SkMatrix.result = private unnamed_addr constant { <{ %class.sk_sp.65, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.70 } } } }, %class.sk_sp.41, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.9, %"class.base::OnceCallback" } { <{ %class.sk_sp.65, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.70 } } } }, %class.sk_sp.41, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }> <{ %class.sk_sp.65 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %"struct.gpu::Mailbox" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, { { { { i8, [3 x i8], %union.anon.70 } } } } { { { { i8, [3 x i8], %union.anon.70 } } } { { { i8, [3 x i8], %union.anon.70 } } { { i8, [3 x i8], %union.anon.70 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.70 { i32 -1431655766 } } } } }, %class.sk_sp.41 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %class.sk_sp.9 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.base::OnceCallback" { %"class.base::internal::CallbackBase" { %class.scoped_refptr.71 { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, align 8

@_ZN2cc17ScopedRasterFlagsC1EPKNS_10PaintFlagsEPNS_13ImageProviderERK8SkMatrixih = hidden unnamed_addr alias void (%"class.cc::ScopedRasterFlags"*, %"class.cc::PaintFlags"*, %"class.cc::ImageProvider"*, %class.SkMatrix*, i32, i8), void (%"class.cc::ScopedRasterFlags"*, %"class.cc::PaintFlags"*, %"class.cc::ImageProvider"*, %class.SkMatrix*, i32, i8)* @_ZN2cc17ScopedRasterFlagsC2EPKNS_10PaintFlagsEPNS_13ImageProviderERK8SkMatrixih
@_ZN2cc17ScopedRasterFlagsD1Ev = hidden unnamed_addr alias void (%"class.cc::ScopedRasterFlags"*), void (%"class.cc::ScopedRasterFlags"*)* @_ZN2cc17ScopedRasterFlagsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17ScopedRasterFlagsC2EPKNS_10PaintFlagsEPNS_13ImageProviderERK8SkMatrixih(%"class.cc::ScopedRasterFlags"*, %"class.cc::PaintFlags"*, %"class.cc::ImageProvider"*, %class.SkMatrix* dereferenceable(40), i32, i8 zeroext) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  store %"class.cc::PaintFlags"* %1, %"class.cc::PaintFlags"** %7, align 8
  %8 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 3
  %12 = icmp eq %"class.cc::ImageProvider"* %2, null
  %13 = bitcast %union.anon.55* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 73, i1 false)
  %14 = bitcast %union.anon.60* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 145, i1 false)
  br i1 %12, label %26, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc27DecodeStashingImageProviderC1EPNS_13ImageProviderE(%"class.cc::DecodeStashingImageProvider"* %17, %"class.cc::ImageProvider"* nonnull %2) #8
  store i8 1, i8* %16, align 8
  tail call void @_ZN2cc17ScopedRasterFlags17DecodeImageShaderERK8SkMatrix(%"class.cc::ScopedRasterFlags"* %0, %class.SkMatrix* dereferenceable(40) %3)
  %18 = load i8, i8* %11, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %50

20:                                               ; preds = %15
  tail call void @_ZN2cc17ScopedRasterFlags18DecodeRecordShaderERK8SkMatrixi(%"class.cc::ScopedRasterFlags"* %0, %class.SkMatrix* dereferenceable(40) %3, i32 %4)
  %21 = load i8, i8* %11, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %50

23:                                               ; preds = %20
  tail call void @_ZN2cc17ScopedRasterFlags12DecodeFilterEv(%"class.cc::ScopedRasterFlags"* %0)
  %24 = load i8, i8* %11, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %50

26:                                               ; preds = %23, %6
  %27 = icmp eq i8 %5, -1
  br i1 %27, label %49, label %28

28:                                               ; preds = %26
  %29 = zext i8 %5 to i32
  %30 = load i8, i8* %8, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %7, align 8
  %34 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %34, %"class.cc::PaintFlags"* dereferenceable(72) %33) #8
  store i8 1, i8* %8, align 8
  br label %35

35:                                               ; preds = %28, %32
  %36 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 6
  %37 = load i32, i32* %36, align 8
  %38 = lshr i32 %37, 24
  %39 = mul nuw nsw i32 %38, %29
  %40 = add nuw nsw i32 %39, 128
  %41 = lshr i32 %40, 8
  %42 = add nuw nsw i32 %41, %40
  %43 = lshr i32 %42, 8
  %44 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6
  %45 = load i32, i32* %44, align 8
  %46 = shl i32 %43, 24
  %47 = and i32 %45, 16777215
  %48 = or i32 %47, %46
  store i32 %48, i32* %44, align 8
  br label %49

49:                                               ; preds = %26, %35
  tail call void @_ZN2cc17ScopedRasterFlags20AdjustStrokeIfNeededERK8SkMatrix(%"class.cc::ScopedRasterFlags"* %0, %class.SkMatrix* dereferenceable(40) %3)
  br label %50

50:                                               ; preds = %23, %20, %15, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17ScopedRasterFlags17DecodeImageShaderERK8SkMatrix(%"class.cc::ScopedRasterFlags"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintImage", align 8
  %4 = alloca %"class.cc::ImageProvider::ScopedResult", align 8
  %5 = alloca %"class.cc::DrawImage", align 8
  %6 = alloca %"class.cc::PaintImage", align 8
  %7 = alloca %class.SkMatrix, align 4
  %8 = alloca %class.sk_sp.1, align 8
  %9 = alloca %class.sk_sp.9, align 8
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %struct.SkRect*
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca %"struct.gpu::Mailbox", align 1
  %16 = alloca %class.sk_sp.1, align 8
  %17 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 3
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %29

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %28 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %27, align 8
  br label %29

29:                                               ; preds = %2, %24, %26
  %30 = phi %"class.cc::PaintFlags"* [ null, %2 ], [ %25, %24 ], [ %28, %26 ]
  %31 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %30, i64 0, i32 1, i32 0
  %32 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %31, align 8
  %33 = icmp eq %"class.cc::PaintShader"* %32, null
  br i1 %33, label %316, label %34

34:                                               ; preds = %29
  br i1 %19, label %35, label %44

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %43 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %42, align 8
  br label %44

44:                                               ; preds = %34, %39, %41
  %45 = phi %"class.cc::PaintFlags"* [ null, %34 ], [ %40, %39 ], [ %43, %41 ]
  %46 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %45, i64 0, i32 1, i32 0
  %47 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %46, align 8
  %48 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %47, i64 0, i32 1
  %49 = load i8, i8* %48, align 4
  %50 = icmp eq i8 %49, 6
  br i1 %50, label %51, label %316

51:                                               ; preds = %44
  %52 = bitcast %"class.cc::PaintImage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %52) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 104, i1 false)
  br i1 %19, label %53, label %62

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %62

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %61 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %60, align 8
  br label %62

62:                                               ; preds = %51, %57, %59
  %63 = phi %"class.cc::PaintFlags"* [ null, %51 ], [ %58, %57 ], [ %61, %59 ]
  %64 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %63, i64 0, i32 1, i32 0
  %65 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %64, align 8
  %66 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %65, i64 0, i32 18
  call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* nonnull %3, %"class.cc::PaintImage"* dereferenceable(104) %66) #8
  %67 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %3, i64 0, i32 15, i32 0
  %68 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %67, align 8
  %69 = icmp eq %"class.cc::PaintWorkletInput"* %68, null
  br i1 %69, label %204, label %70

70:                                               ; preds = %62
  %71 = bitcast %"class.cc::ImageProvider::ScopedResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %71) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 bitcast ({ <{ %class.sk_sp.65, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.70 } } } }, %class.sk_sp.41, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.9, %"class.base::OnceCallback" }* @__const._ZN2cc17ScopedRasterFlags17DecodeImageShaderERK8SkMatrix.result to i8*), i64 80, i1 false)
  %72 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %76, !prof !3

75:                                               ; preds = %70
  call void @llvm.trap() #8
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %78 = bitcast %"class.cc::DrawImage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %78) #8
  call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* nonnull %6, %"class.cc::PaintImage"* nonnull dereferenceable(104) %3) #8
  call void @_ZN2cc9DrawImageC1ENS_10PaintImageE(%"class.cc::DrawImage"* nonnull %5, %"class.cc::PaintImage"* nonnull %6) #8
  %79 = bitcast %"class.cc::DecodeStashingImageProvider"* %77 to void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodeStashingImageProvider"*, %"class.cc::DrawImage"*)***
  %80 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodeStashingImageProvider"*, %"class.cc::DrawImage"*)**, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodeStashingImageProvider"*, %"class.cc::DrawImage"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodeStashingImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodeStashingImageProvider"*, %"class.cc::DrawImage"*)** %80, i64 2
  %82 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodeStashingImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodeStashingImageProvider"*, %"class.cc::DrawImage"*)** %81, align 8
  call void %82(%"class.cc::ImageProvider::ScopedResult"* nonnull sret %4, %"class.cc::DecodeStashingImageProvider"* %77, %"class.cc::DrawImage"* nonnull dereferenceable(240) %5) #8
  call void @_ZN2cc9DrawImageD1Ev(%"class.cc::DrawImage"* nonnull %5) #8
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %78) #8
  %83 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 0, i32 0, i32 0
  %84 = load %class.SkImage*, %class.SkImage** %83, align 8
  %85 = icmp eq %class.SkImage* %84, null
  br i1 %85, label %86, label %97

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %97

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 0, i32 1
  %92 = call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* %91) #8
  br i1 %92, label %93, label %97

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 1, i32 0
  %95 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %94, align 8
  %96 = icmp eq %"class.cc::PaintOpBuffer"* %95, null
  br i1 %96, label %202, label %97

97:                                               ; preds = %93, %76, %86, %90
  %98 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 1, i32 0
  %99 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %98, align 8
  %100 = icmp eq %"class.cc::PaintOpBuffer"* %99, null
  br i1 %100, label %202, label %101

101:                                              ; preds = %97
  %102 = load i8, i8* %17, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %113

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %113

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %112 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %111, align 8
  br label %113

113:                                              ; preds = %101, %108, %110
  %114 = phi %"class.cc::PaintFlags"* [ null, %101 ], [ %109, %108 ], [ %112, %110 ]
  %115 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %114, i64 0, i32 1, i32 0
  %116 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %115, align 8
  %117 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %117) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %117, i8 -1, i64 36, i1 false)
  %118 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  store i32 -1431655766, i32* %118, align 4
  %119 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %116, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %120 = load i8, i8* %119, align 4, !range !2, !noalias !4
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %116, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %127

124:                                              ; preds = %113
  %125 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #8, !noalias !4
  %126 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %98, align 8
  br label %127

127:                                              ; preds = %122, %124
  %128 = phi %"class.cc::PaintOpBuffer"* [ %99, %122 ], [ %126, %124 ]
  %129 = phi %class.SkMatrix* [ %123, %122 ], [ %125, %124 ]
  %130 = bitcast %class.SkMatrix* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %117, i8* align 4 %130, i64 40, i1 false) #8
  %131 = bitcast %class.sk_sp.1* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #8
  %132 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %8, i64 0, i32 0
  store %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*), %"class.cc::PaintShader"** %132, align 8
  %133 = icmp eq %"class.cc::PaintOpBuffer"* %128, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %128, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw add i32* %135, i32 1 monotonic, !noalias !7
  br label %137

137:                                              ; preds = %127, %134
  %138 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %9, i64 0, i32 0
  store %"class.cc::PaintOpBuffer"* %128, %"class.cc::PaintOpBuffer"** %138, align 8, !alias.scope !7
  %139 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #8
  %140 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %116, i64 0, i32 13
  %141 = bitcast %struct.SkRect* %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8
  store <2 x i64> %142, <2 x i64>* %10, align 16
  %143 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %116, i64 0, i32 6
  %144 = load i32, i32* %143, align 4
  call void @_ZN2cc11PaintShader15MakePaintRecordE5sk_spINS_13PaintOpBufferEERK6SkRect10SkTileModeS7_PK8SkMatrixNS0_15ScalingBehaviorE(%class.sk_sp.1* nonnull sret %8, %class.sk_sp.9* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %11, i32 %144, i32 %144, %class.SkMatrix* nonnull %7, i8 zeroext 0) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #8
  %145 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %138, align 8
  %146 = icmp eq %"class.cc::PaintOpBuffer"* %145, null
  br i1 %146, label %157, label %147

147:                                              ; preds = %137
  %148 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %145, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i32* %148, i32 -1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = bitcast %"class.cc::PaintOpBuffer"* %145 to %class.SkRefCntBase*
  %153 = bitcast %"class.cc::PaintOpBuffer"* %145 to void (%class.SkRefCntBase*)***
  %154 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %153, align 8
  %155 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, i64 2
  %156 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, align 8
  call void %156(%class.SkRefCntBase* nonnull %152) #8
  br label %157

157:                                              ; preds = %137, %147, %151
  %158 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %159 = load i8, i8* %158, align 8, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %163 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %162, align 8
  %164 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %164, %"class.cc::PaintFlags"* dereferenceable(72) %163) #8
  store i8 1, i8* %158, align 8
  br label %165

165:                                              ; preds = %157, %161
  %166 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %132, align 8
  %167 = icmp eq %"class.cc::PaintShader"* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %166, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 1 monotonic
  br label %171

171:                                              ; preds = %165, %168
  %172 = ptrtoint %"class.cc::PaintShader"* %166 to i64
  %173 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %174 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %173, i64 0, i32 0
  %175 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %174, align 8
  %176 = bitcast %class.sk_sp.1* %173 to i64*
  store i64 %172, i64* %176, align 8
  %177 = icmp eq %"class.cc::PaintShader"* %175, null
  br i1 %177, label %188, label %178

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %175, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 -1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = bitcast %"class.cc::PaintShader"* %175 to %class.SkRefCntBase*
  %184 = bitcast %"class.cc::PaintShader"* %175 to void (%class.SkRefCntBase*)***
  %185 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %184, align 8
  %186 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %185, i64 2
  %187 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %186, align 8
  call void %187(%class.SkRefCntBase* nonnull %183) #8
  br label %188

188:                                              ; preds = %182, %178, %171
  %189 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %132, align 8
  %190 = icmp eq %"class.cc::PaintShader"* %189, null
  br i1 %190, label %201, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %189, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw add i32* %192, i32 -1 acq_rel
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %201

195:                                              ; preds = %191
  %196 = bitcast %"class.cc::PaintShader"* %189 to %class.SkRefCntBase*
  %197 = bitcast %"class.cc::PaintShader"* %189 to void (%class.SkRefCntBase*)***
  %198 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %197, align 8
  %199 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %198, i64 2
  %200 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %199, align 8
  call void %200(%class.SkRefCntBase* nonnull %196) #8
  br label %201

201:                                              ; preds = %188, %191, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %117) #8
  br label %203

202:                                              ; preds = %93, %97
  store i8 1, i8* %17, align 8
  br label %203

203:                                              ; preds = %202, %201
  call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %71) #8
  br label %315

204:                                              ; preds = %62
  %205 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %205) #8
  store i32 -1, i32* %12, align 4
  %206 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %206) #8
  store i32 -1431655766, i32* %13, align 4
  %207 = load i8, i8* %17, align 8, !range !2
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %209, label %218

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %211 = load i8, i8* %210, align 8, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %215, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %218

215:                                              ; preds = %209
  %216 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %217 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %216, align 8
  br label %218

218:                                              ; preds = %204, %213, %215
  %219 = phi %"class.cc::PaintFlags"* [ null, %204 ], [ %214, %213 ], [ %217, %215 ]
  %220 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %219, i64 0, i32 10
  %221 = bitcast %union.anon.50* %220 to i16*
  %222 = load i16, i16* %221, align 8
  %223 = lshr i16 %222, 8
  %224 = and i16 %223, 3
  %225 = zext i16 %224 to i32
  store i32 %225, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #8
  store i8 0, i8* %14, align 1
  %226 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %15, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %226) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %226, i8 -86, i64 16, i1 false)
  call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* nonnull %15) #8
  %227 = bitcast %class.sk_sp.1* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #8
  %228 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %16, i64 0, i32 0
  store %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*), %"class.cc::PaintShader"** %228, align 8
  %229 = load i8, i8* %17, align 8, !range !2
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %231, label %242

231:                                              ; preds = %218
  %232 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %233 = load i8, i8* %232, align 8, !range !2
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %238, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %237 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %242

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %240 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %239, align 8
  %241 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %240, i64 0, i32 1, i32 0
  br label %242

242:                                              ; preds = %218, %235, %238
  %243 = phi %"class.cc::PaintShader"** [ %236, %235 ], [ %241, %238 ], [ inttoptr (i64 8 to %"class.cc::PaintShader"**), %218 ]
  %244 = phi %"class.cc::PaintFlags"* [ %237, %235 ], [ %240, %238 ], [ null, %218 ]
  %245 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %246 = load i8, i8* %245, align 8, !range !2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %248, label %249, !prof !3

248:                                              ; preds = %242
  call void @llvm.trap() #8
  unreachable

249:                                              ; preds = %242
  %250 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %243, align 8
  %251 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %244, i64 0, i32 10
  %252 = bitcast %union.anon.50* %251 to i16*
  %253 = load i16, i16* %252, align 8
  %254 = lshr i16 %253, 8
  %255 = and i16 %254, 3
  %256 = zext i16 %255 to i32
  %257 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE(%class.sk_sp.1* nonnull sret %16, %"class.cc::PaintShader"* %250, %class.SkMatrix* dereferenceable(40) %1, i32 %256, %"class.cc::ImageProvider"* %257, i32* nonnull %12, i32* nonnull %13, i8* nonnull %14, %"struct.gpu::Mailbox"* nonnull %15) #8
  %258 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %228, align 8
  %259 = icmp eq %"class.cc::PaintShader"* %258, null
  br i1 %259, label %260, label %261

260:                                              ; preds = %249
  store i8 1, i8* %17, align 8
  br label %314

261:                                              ; preds = %249
  %262 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %263 = load i8, i8* %262, align 8, !range !2
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %265, label %269

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %267 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %266, align 8
  %268 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %268, %"class.cc::PaintFlags"* dereferenceable(72) %267) #8
  store i8 1, i8* %262, align 8
  br label %269

269:                                              ; preds = %265, %261
  %270 = load i32, i32* %13, align 4
  %271 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 10
  %272 = bitcast %union.anon.50* %271 to i16*
  %273 = trunc i32 %270 to i16
  %274 = load i16, i16* %272, align 8
  %275 = shl i16 %273, 8
  %276 = and i16 %275, 768
  %277 = and i16 %274, -769
  %278 = or i16 %276, %277
  store i16 %278, i16* %272, align 8
  %279 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %228, align 8
  %280 = icmp eq %"class.cc::PaintShader"* %279, null
  br i1 %280, label %284, label %281

281:                                              ; preds = %269
  %282 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %279, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = atomicrmw add i32* %282, i32 1 monotonic
  br label %284

284:                                              ; preds = %269, %281
  %285 = ptrtoint %"class.cc::PaintShader"* %279 to i64
  %286 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %287 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %286, i64 0, i32 0
  %288 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %287, align 8
  %289 = bitcast %class.sk_sp.1* %286 to i64*
  store i64 %285, i64* %289, align 8
  %290 = icmp eq %"class.cc::PaintShader"* %288, null
  br i1 %290, label %301, label %291

291:                                              ; preds = %284
  %292 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %288, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = atomicrmw add i32* %292, i32 -1 acq_rel
  %294 = icmp eq i32 %293, 1
  br i1 %294, label %295, label %301

295:                                              ; preds = %291
  %296 = bitcast %"class.cc::PaintShader"* %288 to %class.SkRefCntBase*
  %297 = bitcast %"class.cc::PaintShader"* %288 to void (%class.SkRefCntBase*)***
  %298 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %297, align 8
  %299 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %298, i64 2
  %300 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %299, align 8
  call void %300(%class.SkRefCntBase* nonnull %296) #8
  br label %301

301:                                              ; preds = %284, %291, %295
  %302 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %228, align 8
  %303 = icmp eq %"class.cc::PaintShader"* %302, null
  br i1 %303, label %314, label %304

304:                                              ; preds = %301
  %305 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %302, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = atomicrmw add i32* %305, i32 -1 acq_rel
  %307 = icmp eq i32 %306, 1
  br i1 %307, label %308, label %314

308:                                              ; preds = %304
  %309 = bitcast %"class.cc::PaintShader"* %302 to %class.SkRefCntBase*
  %310 = bitcast %"class.cc::PaintShader"* %302 to void (%class.SkRefCntBase*)***
  %311 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %310, align 8
  %312 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %311, i64 2
  %313 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %312, align 8
  call void %313(%class.SkRefCntBase* nonnull %309) #8
  br label %314

314:                                              ; preds = %260, %301, %304, %308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %226) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %206) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %205) #8
  br label %315

315:                                              ; preds = %314, %203
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %52) #8
  br label %316

316:                                              ; preds = %29, %44, %315
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17ScopedRasterFlags18DecodeRecordShaderERK8SkMatrixi(%"class.cc::ScopedRasterFlags"*, %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::SizeF", align 4
  %5 = alloca %class.sk_sp.1, align 8
  %6 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %18

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %17 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %16, align 8
  br label %18

18:                                               ; preds = %3, %13, %15
  %19 = phi %"class.cc::PaintFlags"* [ null, %3 ], [ %14, %13 ], [ %17, %15 ]
  %20 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %19, i64 0, i32 1, i32 0
  %21 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %20, align 8
  %22 = icmp eq %"class.cc::PaintShader"* %21, null
  br i1 %22, label %122, label %23

23:                                               ; preds = %18
  br i1 %8, label %24, label %33

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %32 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %31, align 8
  br label %33

33:                                               ; preds = %23, %28, %30
  %34 = phi %"class.cc::PaintFlags"* [ null, %23 ], [ %29, %28 ], [ %32, %30 ]
  %35 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %34, i64 0, i32 1, i32 0
  %36 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %35, align 8
  %37 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %36, i64 0, i32 1
  %38 = load i8, i8* %37, align 4
  %39 = icmp eq i8 %38, 7
  br i1 %39, label %40, label %122

40:                                               ; preds = %33
  br i1 %8, label %41, label %50

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %49 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %48, align 8
  br label %50

50:                                               ; preds = %40, %45, %47
  %51 = phi %"class.cc::PaintFlags"* [ null, %40 ], [ %46, %45 ], [ %49, %47 ]
  %52 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %51, i64 0, i32 1, i32 0
  %53 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %52, align 8
  %54 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %53, i64 0, i32 26
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %122

57:                                               ; preds = %50
  %58 = bitcast %"class.gfx::SizeF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8
  %59 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 0
  %60 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 1
  store float 1.000000e+00, float* %59, align 4
  store float 1.000000e+00, float* %60, align 4
  %61 = bitcast %class.sk_sp.1* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #8
  %62 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %5, i64 0, i32 0
  store %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*), %"class.cc::PaintShader"** %62, align 8
  br i1 %8, label %63, label %72

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %71 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %70, align 8
  br label %72

72:                                               ; preds = %57, %67, %69
  %73 = phi %"class.cc::PaintFlags"* [ null, %57 ], [ %68, %67 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %73, i64 0, i32 1, i32 0
  %75 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %74, align 8
  call void @_ZNK2cc11PaintShader23CreateScaledPaintRecordERK8SkMatrixiPN3gfx5SizeFE(%class.sk_sp.1* nonnull sret %5, %"class.cc::PaintShader"* %75, %class.SkMatrix* dereferenceable(40) %1, i32 %2, %"class.gfx::SizeF"* nonnull %4) #8
  %76 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %72
  call void @llvm.trap() #8
  unreachable

80:                                               ; preds = %72
  %81 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %62, align 8
  %82 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* %81, %"class.gfx::SizeF"* nonnull %4, %"class.cc::ImageProvider"* %82) #8
  %83 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %88 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %87, align 8
  %89 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %89, %"class.cc::PaintFlags"* dereferenceable(72) %88) #8
  store i8 1, i8* %83, align 8
  br label %90

90:                                               ; preds = %80, %86
  %91 = bitcast %class.sk_sp.1* %5 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %62, align 8
  %93 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %94 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %93, i64 0, i32 0
  %95 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %94, align 8
  %96 = bitcast %class.sk_sp.1* %93 to i64*
  store i64 %92, i64* %96, align 8
  %97 = icmp eq %"class.cc::PaintShader"* %95, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %95, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = bitcast %"class.cc::PaintShader"* %95 to %class.SkRefCntBase*
  %104 = bitcast %"class.cc::PaintShader"* %95 to void (%class.SkRefCntBase*)***
  %105 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, i64 2
  %107 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, align 8
  call void %107(%class.SkRefCntBase* nonnull %103) #8
  br label %108

108:                                              ; preds = %102, %98, %90
  %109 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %62, align 8
  %110 = icmp eq %"class.cc::PaintShader"* %109, null
  br i1 %110, label %121, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %109, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = bitcast %"class.cc::PaintShader"* %109 to %class.SkRefCntBase*
  %117 = bitcast %"class.cc::PaintShader"* %109 to void (%class.SkRefCntBase*)***
  %118 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %117, align 8
  %119 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %118, i64 2
  %120 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, align 8
  call void %120(%class.SkRefCntBase* nonnull %116) #8
  br label %121

121:                                              ; preds = %108, %111, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8
  br label %122

122:                                              ; preds = %18, %50, %33, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17ScopedRasterFlags12DecodeFilterEv(%"class.cc::ScopedRasterFlags"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.43, align 8
  %3 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %14 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %13, align 8
  br label %15

15:                                               ; preds = %1, %10, %12
  %16 = phi %"class.cc::PaintFlags"* [ null, %1 ], [ %11, %10 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %16, i64 0, i32 5, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %89, label %20

20:                                               ; preds = %15
  br i1 %5, label %21, label %30

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %29 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %28, align 8
  br label %30

30:                                               ; preds = %20, %25, %27
  %31 = phi %"class.cc::PaintFlags"* [ null, %20 ], [ %26, %25 ], [ %29, %27 ]
  %32 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %31, i64 0, i32 5, i32 0
  %33 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %32, align 8
  %34 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %33, i64 0, i32 4
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %89, label %37

37:                                               ; preds = %30
  br i1 %5, label %38, label %47

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %46 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %45, align 8
  br label %47

47:                                               ; preds = %37, %42, %44
  %48 = phi %"class.cc::PaintFlags"* [ null, %37 ], [ %43, %42 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %48, i64 0, i32 5, i32 0
  %50 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %49, align 8
  %51 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %50, i64 0, i32 5
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %89

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %60 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %59, align 8
  %61 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %61, %"class.cc::PaintFlags"* dereferenceable(72) %60) #8
  store i8 1, i8* %55, align 8
  %62 = load i8, i8* %3, align 8, !range !2
  br label %63

63:                                               ; preds = %54, %58
  %64 = phi i8 [ %4, %54 ], [ %62, %58 ]
  %65 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %66 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %63
  tail call void @llvm.trap() #8
  unreachable

70:                                               ; preds = %63
  %71 = icmp eq i8 %64, 0
  %72 = select i1 %71, %"class.cc::PaintFlags"* %65, %"class.cc::PaintFlags"* null
  %73 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %72, i64 0, i32 5, i32 0
  %74 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %73, align 8
  %75 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE(%class.sk_sp.43* nonnull sret %2, %"class.cc::PaintFilter"* %74, %"class.cc::ImageProvider"* %75) #8
  call void @_ZN2cc10PaintFlags14setImageFilterE5sk_spINS_11PaintFilterEE(%"class.cc::PaintFlags"* %65, %class.sk_sp.43* nonnull %2) #8
  %76 = getelementptr inbounds %class.sk_sp.43, %class.sk_sp.43* %2, i64 0, i32 0
  %77 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %76, align 8
  %78 = icmp eq %"class.cc::PaintFilter"* %77, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %77, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %89

83:                                               ; preds = %79
  %84 = bitcast %"class.cc::PaintFilter"* %77 to %class.SkRefCntBase*
  %85 = bitcast %"class.cc::PaintFilter"* %77 to void (%class.SkRefCntBase*)***
  %86 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %85, align 8
  %87 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, i64 2
  %88 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, align 8
  call void %88(%class.SkRefCntBase* nonnull %84) #8
  br label %89

89:                                               ; preds = %30, %15, %83, %79, %70, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17ScopedRasterFlags20AdjustStrokeIfNeededERK8SkMatrix(%"class.cc::ScopedRasterFlags"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.SkSize, align 4
  %4 = bitcast %struct.SkSize* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %3, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %5, align 4
  %6 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %3, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  %7 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %18 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %17, align 8
  br label %19

19:                                               ; preds = %2, %14, %16
  %20 = phi %"class.cc::PaintFlags"* [ null, %2 ], [ %15, %14 ], [ %18, %16 ]
  %21 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %20, i64 0, i32 10
  %22 = bitcast %union.anon.50* %21 to i16*
  %23 = load i16, i16* %22, align 8
  %24 = and i16 %23, 1
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %26, label %176

26:                                               ; preds = %19
  br i1 %9, label %27, label %36

27:                                               ; preds = %26
  %28 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %35 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %34, align 8
  br label %36

36:                                               ; preds = %26, %31, %33
  %37 = phi %"class.cc::PaintFlags"* [ null, %26 ], [ %32, %31 ], [ %35, %33 ]
  %38 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %37, i64 0, i32 10
  %39 = bitcast %union.anon.50* %38 to i16*
  %40 = load i16, i16* %39, align 8
  %41 = and i16 %40, 192
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %176, label %43

43:                                               ; preds = %36
  br i1 %9, label %44, label %53

44:                                               ; preds = %43
  %45 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %52 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %51, align 8
  br label %53

53:                                               ; preds = %43, %48, %50
  %54 = phi %"class.cc::PaintFlags"* [ null, %43 ], [ %49, %48 ], [ %52, %50 ]
  %55 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %54, i64 0, i32 7
  %56 = load float, float* %55, align 4
  %57 = fcmp une float %56, 0.000000e+00
  br i1 %57, label %58, label %176

58:                                               ; preds = %53
  %59 = call zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix* %1, %struct.SkSize* nonnull %3, %class.SkMatrix* null) #8
  br i1 %59, label %60, label %176

60:                                               ; preds = %58
  %61 = load i8, i8* %7, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %77, label %71

67:                                               ; preds = %60
  %68 = load float, float* inttoptr (i64 52 to float*), align 4
  %69 = load float, float* %5, align 4
  %70 = fmul float %68, %69
  br label %84

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 7
  %73 = load float, float* %72, align 4
  %74 = load float, float* %5, align 4
  %75 = fmul float %73, %74
  %76 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %84

77:                                               ; preds = %63
  %78 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %79 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %78, align 8
  %80 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %79, i64 0, i32 7
  %81 = load float, float* %80, align 4
  %82 = load float, float* %5, align 4
  %83 = fmul float %81, %82
  br label %84

84:                                               ; preds = %67, %71, %77
  %85 = phi float [ %70, %67 ], [ %75, %71 ], [ %83, %77 ]
  %86 = phi %"class.cc::PaintFlags"* [ null, %67 ], [ %76, %71 ], [ %79, %77 ]
  %87 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %86, i64 0, i32 7
  %88 = load float, float* %87, align 4
  %89 = load float, float* %6, align 4
  %90 = fmul float %88, %89
  %91 = fcmp ult float %85, 1.000000e+00
  %92 = fcmp ult float %90, 1.000000e+00
  %93 = or i1 %91, %92
  br i1 %93, label %94, label %176

94:                                               ; preds = %84
  br i1 %62, label %95, label %104

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %97 = load i8, i8* %96, align 8, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %103 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %102, align 8
  br label %104

104:                                              ; preds = %94, %99, %101
  %105 = phi %"class.cc::PaintFlags"* [ null, %94 ], [ %100, %99 ], [ %103, %101 ]
  %106 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %105, i64 0, i32 10
  %107 = bitcast %union.anon.50* %106 to i16*
  %108 = load i16, i16* %107, align 8
  %109 = and i16 %108, 12
  %110 = icmp eq i16 %109, 0
  br i1 %110, label %111, label %163

111:                                              ; preds = %104
  br i1 %62, label %112, label %121

112:                                              ; preds = %111
  %113 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %114 = load i8, i8* %113, align 8, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %121

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %120 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %119, align 8
  br label %121

121:                                              ; preds = %111, %116, %118
  %122 = phi %"class.cc::PaintFlags"* [ null, %111 ], [ %117, %116 ], [ %120, %118 ]
  %123 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %122, i64 0, i32 10
  %124 = bitcast %union.anon.50* %123 to i16*
  %125 = load i16, i16* %124, align 8
  %126 = and i16 %125, 48
  %127 = icmp eq i16 %126, 0
  %128 = fcmp olt float %85, 1.000000e+00
  %129 = and i1 %128, %127
  %130 = fcmp olt float %90, 1.000000e+00
  %131 = and i1 %130, %129
  br i1 %131, label %132, label %163

132:                                              ; preds = %121
  %133 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %134 = load i8, i8* %133, align 8, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %141

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %138 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %137, align 8
  %139 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %139, %"class.cc::PaintFlags"* dereferenceable(72) %138) #8
  store i8 1, i8* %133, align 8
  %140 = load i8, i8* %7, align 8, !range !2
  br label %141

141:                                              ; preds = %136, %132
  %142 = phi i8 [ %140, %136 ], [ %61, %132 ]
  %143 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 7
  store float 0.000000e+00, float* %143, align 4
  %144 = icmp eq i8 %142, 0
  %145 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %146 = select i1 %144, %"class.cc::PaintFlags"* %145, %"class.cc::PaintFlags"* null
  %147 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %146, i64 0, i32 6
  %148 = load i32, i32* %147, align 8
  %149 = lshr i32 %148, 24
  %150 = trunc i32 %149 to i8
  %151 = uitofp i8 %150 to float
  %152 = fmul float %85, %90
  %153 = call float @sqrtf(float %152) #8
  %154 = fmul float %153, %151
  %155 = call float @llvm.round.f32(float %154) #8
  %156 = fptoui float %155 to i8
  %157 = zext i8 %156 to i32
  %158 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6
  %159 = load i32, i32* %158, align 8
  %160 = shl nuw i32 %157, 24
  %161 = and i32 %159, 16777215
  %162 = or i32 %161, %160
  store i32 %162, i32* %158, align 8
  br label %176

163:                                              ; preds = %104, %121
  %164 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %165 = load i8, i8* %164, align 8, !range !2
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %167, label %171

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 0
  %169 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %168, align 8
  %170 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %170, %"class.cc::PaintFlags"* dereferenceable(72) %169) #8
  store i8 1, i8* %164, align 8
  br label %171

171:                                              ; preds = %163, %167
  %172 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 10
  %173 = bitcast %union.anon.50* %172 to i16*
  %174 = load i16, i16* %173, align 8
  %175 = or i16 %174, 1
  store i16 %175, i16* %173, align 8
  br label %176

176:                                              ; preds = %19, %84, %171, %141, %36, %53, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17ScopedRasterFlagsD2Ev(%"class.cc::ScopedRasterFlags"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc27DecodeStashingImageProviderD1Ev(%"class.cc::DecodeStashingImageProvider"* %6) #8
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %12) #8
  store i8 0, i8* %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2cc9DrawImageC1ENS_10PaintImageE(%"class.cc::DrawImage"*, %"class.cc::PaintImage"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc9DrawImageD1Ev(%"class.cc::DrawImage"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2cc11PaintShader15MakePaintRecordE5sk_spINS_13PaintOpBufferEERK6SkRect10SkTileModeS7_PK8SkMatrixNS0_15ScalingBehaviorE(%class.sk_sp.1* sret, %class.sk_sp.9*, %struct.SkRect* dereferenceable(16), i32, i32, %class.SkMatrix*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"*) unnamed_addr #4

declare void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"*) unnamed_addr #3

declare void @_ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE(%class.sk_sp.1* sret, %"class.cc::PaintShader"*, %class.SkMatrix* dereferenceable(40), i32, %"class.cc::ImageProvider"*, i32*, i32*, i8*, %"struct.gpu::Mailbox"*) local_unnamed_addr #3

declare void @_ZNK2cc11PaintShader23CreateScaledPaintRecordERK8SkMatrixiPN3gfx5SizeFE(%class.sk_sp.1* sret, %"class.cc::PaintShader"*, %class.SkMatrix* dereferenceable(40), i32, %"class.gfx::SizeF"*) local_unnamed_addr #3

declare void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"*, %"class.gfx::SizeF"*, %"class.cc::ImageProvider"*) local_unnamed_addr #3

declare void @_ZN2cc10PaintFlags14setImageFilterE5sk_spINS_11PaintFilterEE(%"class.cc::PaintFlags"*, %class.sk_sp.43*) local_unnamed_addr #3

declare void @_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE(%class.sk_sp.43* sret, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix*, %struct.SkSize*, %class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #4

declare void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind
declare void @_ZN2cc27DecodeStashingImageProviderD1Ev(%"class.cc::DecodeStashingImageProvider"*) unnamed_addr #4

declare zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"*) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #6

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #7

declare void @_ZN2cc27DecodeStashingImageProviderC1EPNS_13ImageProviderE(%"class.cc::DecodeStashingImageProvider"*, %"class.cc::ImageProvider"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK2cc11PaintShader14GetLocalMatrixEv: argument 0"}
!6 = distinct !{!6, !"_ZNK2cc11PaintShader14GetLocalMatrixEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_Z9sk_ref_spIN2cc13PaintOpBufferEE5sk_spIT_EPKS3_: argument 0"}
!9 = distinct !{!9, !"_Z9sk_ref_spIN2cc13PaintOpBufferEE5sk_spIT_EPKS3_"}
