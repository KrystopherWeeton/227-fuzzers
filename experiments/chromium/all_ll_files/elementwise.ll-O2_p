; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/elementwise.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/elementwise.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, {}*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }

@_ZZN6tflite3ops7builtin12Register_ABSEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114GenericPrepareIXadL_ZNS3_22IsNumericSupportedTypeE10TfLiteTypeEEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_17AbsEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin12Register_SINEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114GenericPrepareIXadL_ZNS3_22IsNumericSupportedTypeE10TfLiteTypeEEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_17SinEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin12Register_COSEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114GenericPrepareIXadL_ZNS3_22IsNumericSupportedTypeE10TfLiteTypeEEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_17CosEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin12Register_LOGEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114GenericPrepareIXadL_ZNS3_22IsNumericSupportedTypeE10TfLiteTypeEEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_17LogEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin13Register_SQRTEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114GenericPrepareIXadL_ZNS3_22IsNumericSupportedTypeE10TfLiteTypeEEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_18SqrtEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin14Register_RSQRTEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114GenericPrepareIXadL_ZNS3_22IsNumericSupportedTypeE10TfLiteTypeEEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_19RsqrtEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin15Register_SQUAREEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114GenericPrepareIXadL_ZNS3_22IsNumericSupportedTypeE10TfLiteTypeEEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_110SquareEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin20Register_LOGICAL_NOTEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114GenericPrepareIXadL_ZNS3_22IsLogicalSupportedTypeE10TfLiteTypeEEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114LogicalNotEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.4 = private unnamed_addr constant [68 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/elementwise.cc\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"input->type\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"expected_type\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"output->type\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"Current data type %d is not supported.\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin12Register_ABSEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin12Register_ABSEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114GenericPrepareIXadL_ZNS3_22IsNumericSupportedTypeE10TfLiteTypeEEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 44, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 %6, i32 1) #5
  br label %64

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 45, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 %15, i32 1) #5
  br label %64

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %52, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %48 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %47, align 8
  %49 = tail call i8* @TfLiteTypeGetName(i32 %42) #5
  %50 = load i32, i32* %43, align 8
  %51 = tail call i8* @TfLiteTypeGetName(i32 %50) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %48(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 48, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8* %49, i8* %51) #5
  br label %64

52:                                               ; preds = %39
  %53 = icmp eq i32 %42, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %52
  %55 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %56 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %55, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %56(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i32 0) #5
  br label %64

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %59 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %58, align 8
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %61 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %60, align 8
  %62 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %61) #5
  %63 = tail call i32 %59(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %40, %struct.TfLiteIntArray* %62) #5
  br label %64

64:                                               ; preds = %46, %54, %57, %17, %8
  %65 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %46 ], [ %63, %57 ], [ 1, %54 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_17AbsEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %32 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %31, align 8
  %33 = tail call i8* @TfLiteTypeGetName(i32 %28) #5
  %34 = tail call i8* @TfLiteTypeGetName(i32 1) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %32(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* %33, i8* %34) #5
  br label %241

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %110

41:                                               ; preds = %35
  %42 = sext i32 %39 to i64
  %43 = add nsw i64 %42, -1
  %44 = and i64 %42, 7
  %45 = icmp ult i64 %43, 7
  br i1 %45, label %94, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %91, %48 ]
  %50 = phi i64 [ 1, %46 ], [ %90, %48 ]
  %51 = phi i64 [ %47, %46 ], [ %92, %48 ]
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %49
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %50, %54
  %56 = or i64 %49, 1
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = or i64 %49, 2
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %60, %64
  %66 = or i64 %49, 3
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %65, %69
  %71 = or i64 %49, 4
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = or i64 %49, 5
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = or i64 %49, 6
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %49, 7
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = add nuw nsw i64 %49, 8
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %48

94:                                               ; preds = %48, %41
  %95 = phi i64 [ undef, %41 ], [ %90, %48 ]
  %96 = phi i64 [ 0, %41 ], [ %91, %48 ]
  %97 = phi i64 [ 1, %41 ], [ %90, %48 ]
  %98 = icmp eq i64 %44, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %107, %99 ], [ %96, %94 ]
  %101 = phi i64 [ %106, %99 ], [ %97, %94 ]
  %102 = phi i64 [ %108, %99 ], [ %44, %94 ]
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %100
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %101, %105
  %107 = add nuw nsw i64 %100, 1
  %108 = add i64 %102, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %99, !llvm.loop !2

110:                                              ; preds = %94, %99, %35
  %111 = phi i64 [ 1, %35 ], [ %95, %94 ], [ %106, %99 ]
  %112 = icmp eq %struct.TfLiteTensor* %14, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %115 = bitcast %union.TfLitePtrUnion* %114 to float**
  %116 = load float*, float** %115, align 8
  %117 = bitcast float* %116 to i8*
  br label %118

118:                                              ; preds = %113, %110
  %119 = phi i8* [ %117, %113 ], [ null, %110 ]
  %120 = phi float* [ %116, %113 ], [ null, %110 ]
  %121 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %124 = bitcast %union.TfLitePtrUnion* %123 to float**
  %125 = load float*, float** %124, align 8
  %126 = bitcast float* %125 to i8*
  br label %127

127:                                              ; preds = %122, %118
  %128 = phi i8* [ %126, %122 ], [ null, %118 ]
  %129 = phi float* [ %125, %122 ], [ null, %118 ]
  %130 = icmp sgt i64 %111, 0
  br i1 %130, label %131, label %241

131:                                              ; preds = %127
  %132 = icmp ult i64 %111, 8
  br i1 %132, label %199, label %133

133:                                              ; preds = %131
  %134 = getelementptr float, float* %129, i64 %111
  %135 = bitcast float* %134 to i8*
  %136 = getelementptr float, float* %120, i64 %111
  %137 = bitcast float* %136 to i8*
  %138 = icmp ult i8* %128, %137
  %139 = icmp ult i8* %119, %135
  %140 = and i1 %138, %139
  br i1 %140, label %199, label %141

141:                                              ; preds = %133
  %142 = and i64 %111, -8
  %143 = add i64 %142, -8
  %144 = lshr exact i64 %143, 3
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 1
  %147 = icmp eq i64 %143, 0
  br i1 %147, label %181, label %148

148:                                              ; preds = %141
  %149 = sub nuw nsw i64 %145, %146
  br label %150

150:                                              ; preds = %150, %148
  %151 = phi i64 [ 0, %148 ], [ %178, %150 ]
  %152 = phi i64 [ %149, %148 ], [ %179, %150 ]
  %153 = getelementptr inbounds float, float* %120, i64 %151
  %154 = bitcast float* %153 to <4 x float>*
  %155 = load <4 x float>, <4 x float>* %154, align 4, !alias.scope !4
  %156 = getelementptr inbounds float, float* %153, i64 4
  %157 = bitcast float* %156 to <4 x float>*
  %158 = load <4 x float>, <4 x float>* %157, align 4, !alias.scope !4
  %159 = call <4 x float> @llvm.fabs.v4f32(<4 x float> %155)
  %160 = call <4 x float> @llvm.fabs.v4f32(<4 x float> %158)
  %161 = getelementptr inbounds float, float* %129, i64 %151
  %162 = bitcast float* %161 to <4 x float>*
  store <4 x float> %159, <4 x float>* %162, align 4, !alias.scope !7, !noalias !4
  %163 = getelementptr inbounds float, float* %161, i64 4
  %164 = bitcast float* %163 to <4 x float>*
  store <4 x float> %160, <4 x float>* %164, align 4, !alias.scope !7, !noalias !4
  %165 = or i64 %151, 8
  %166 = getelementptr inbounds float, float* %120, i64 %165
  %167 = bitcast float* %166 to <4 x float>*
  %168 = load <4 x float>, <4 x float>* %167, align 4, !alias.scope !4
  %169 = getelementptr inbounds float, float* %166, i64 4
  %170 = bitcast float* %169 to <4 x float>*
  %171 = load <4 x float>, <4 x float>* %170, align 4, !alias.scope !4
  %172 = call <4 x float> @llvm.fabs.v4f32(<4 x float> %168)
  %173 = call <4 x float> @llvm.fabs.v4f32(<4 x float> %171)
  %174 = getelementptr inbounds float, float* %129, i64 %165
  %175 = bitcast float* %174 to <4 x float>*
  store <4 x float> %172, <4 x float>* %175, align 4, !alias.scope !7, !noalias !4
  %176 = getelementptr inbounds float, float* %174, i64 4
  %177 = bitcast float* %176 to <4 x float>*
  store <4 x float> %173, <4 x float>* %177, align 4, !alias.scope !7, !noalias !4
  %178 = add i64 %151, 16
  %179 = add i64 %152, -2
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %150, !llvm.loop !9

181:                                              ; preds = %150, %141
  %182 = phi i64 [ 0, %141 ], [ %178, %150 ]
  %183 = icmp eq i64 %146, 0
  br i1 %183, label %197, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds float, float* %120, i64 %182
  %186 = bitcast float* %185 to <4 x float>*
  %187 = load <4 x float>, <4 x float>* %186, align 4, !alias.scope !4
  %188 = getelementptr inbounds float, float* %185, i64 4
  %189 = bitcast float* %188 to <4 x float>*
  %190 = load <4 x float>, <4 x float>* %189, align 4, !alias.scope !4
  %191 = call <4 x float> @llvm.fabs.v4f32(<4 x float> %187)
  %192 = call <4 x float> @llvm.fabs.v4f32(<4 x float> %190)
  %193 = getelementptr inbounds float, float* %129, i64 %182
  %194 = bitcast float* %193 to <4 x float>*
  store <4 x float> %191, <4 x float>* %194, align 4, !alias.scope !7, !noalias !4
  %195 = getelementptr inbounds float, float* %193, i64 4
  %196 = bitcast float* %195 to <4 x float>*
  store <4 x float> %192, <4 x float>* %196, align 4, !alias.scope !7, !noalias !4
  br label %197

197:                                              ; preds = %181, %184
  %198 = icmp eq i64 %111, %142
  br i1 %198, label %241, label %199

199:                                              ; preds = %197, %133, %131
  %200 = phi i64 [ 0, %133 ], [ 0, %131 ], [ %142, %197 ]
  %201 = xor i64 %200, -1
  %202 = add i64 %111, %201
  %203 = and i64 %111, 3
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %215, label %205

205:                                              ; preds = %199, %205
  %206 = phi i64 [ %212, %205 ], [ %200, %199 ]
  %207 = phi i64 [ %213, %205 ], [ %203, %199 ]
  %208 = getelementptr inbounds float, float* %120, i64 %206
  %209 = load float, float* %208, align 4
  %210 = tail call float @llvm.fabs.f32(float %209) #5
  %211 = getelementptr inbounds float, float* %129, i64 %206
  store float %210, float* %211, align 4
  %212 = add nuw nsw i64 %206, 1
  %213 = add i64 %207, -1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %205, !llvm.loop !11

215:                                              ; preds = %205, %199
  %216 = phi i64 [ %200, %199 ], [ %212, %205 ]
  %217 = icmp ult i64 %202, 3
  br i1 %217, label %241, label %218

218:                                              ; preds = %215, %218
  %219 = phi i64 [ %239, %218 ], [ %216, %215 ]
  %220 = getelementptr inbounds float, float* %120, i64 %219
  %221 = load float, float* %220, align 4
  %222 = tail call float @llvm.fabs.f32(float %221) #5
  %223 = getelementptr inbounds float, float* %129, i64 %219
  store float %222, float* %223, align 4
  %224 = add nuw nsw i64 %219, 1
  %225 = getelementptr inbounds float, float* %120, i64 %224
  %226 = load float, float* %225, align 4
  %227 = tail call float @llvm.fabs.f32(float %226) #5
  %228 = getelementptr inbounds float, float* %129, i64 %224
  store float %227, float* %228, align 4
  %229 = add nuw nsw i64 %219, 2
  %230 = getelementptr inbounds float, float* %120, i64 %229
  %231 = load float, float* %230, align 4
  %232 = tail call float @llvm.fabs.f32(float %231) #5
  %233 = getelementptr inbounds float, float* %129, i64 %229
  store float %232, float* %233, align 4
  %234 = add nuw nsw i64 %219, 3
  %235 = getelementptr inbounds float, float* %120, i64 %234
  %236 = load float, float* %235, align 4
  %237 = tail call float @llvm.fabs.f32(float %236) #5
  %238 = getelementptr inbounds float, float* %129, i64 %234
  store float %237, float* %238, align 4
  %239 = add nuw nsw i64 %219, 4
  %240 = icmp eq i64 %239, %111
  br i1 %240, label %241, label %218, !llvm.loop !12

241:                                              ; preds = %215, %218, %197, %30, %127
  %242 = phi i32 [ 1, %30 ], [ 0, %127 ], [ 0, %197 ], [ 0, %218 ], [ 0, %215 ]
  ret i32 %242
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin12Register_SINEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin12Register_SINEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_17SinEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %32 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %31, align 8
  %33 = tail call i8* @TfLiteTypeGetName(i32 %28) #5
  %34 = tail call i8* @TfLiteTypeGetName(i32 1) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %32(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* %33, i8* %34) #5
  br label %171

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %110

41:                                               ; preds = %35
  %42 = sext i32 %39 to i64
  %43 = add nsw i64 %42, -1
  %44 = and i64 %42, 7
  %45 = icmp ult i64 %43, 7
  br i1 %45, label %94, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %91, %48 ]
  %50 = phi i64 [ 1, %46 ], [ %90, %48 ]
  %51 = phi i64 [ %47, %46 ], [ %92, %48 ]
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %49
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %50, %54
  %56 = or i64 %49, 1
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = or i64 %49, 2
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %60, %64
  %66 = or i64 %49, 3
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %65, %69
  %71 = or i64 %49, 4
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = or i64 %49, 5
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = or i64 %49, 6
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %49, 7
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = add nuw nsw i64 %49, 8
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %48

94:                                               ; preds = %48, %41
  %95 = phi i64 [ undef, %41 ], [ %90, %48 ]
  %96 = phi i64 [ 0, %41 ], [ %91, %48 ]
  %97 = phi i64 [ 1, %41 ], [ %90, %48 ]
  %98 = icmp eq i64 %44, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %107, %99 ], [ %96, %94 ]
  %101 = phi i64 [ %106, %99 ], [ %97, %94 ]
  %102 = phi i64 [ %108, %99 ], [ %44, %94 ]
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %100
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %101, %105
  %107 = add nuw nsw i64 %100, 1
  %108 = add i64 %102, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %99, !llvm.loop !13

110:                                              ; preds = %94, %99, %35
  %111 = phi i64 [ 1, %35 ], [ %95, %94 ], [ %106, %99 ]
  %112 = icmp eq %struct.TfLiteTensor* %14, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %115 = bitcast %union.TfLitePtrUnion* %114 to float**
  %116 = load float*, float** %115, align 8
  br label %117

117:                                              ; preds = %113, %110
  %118 = phi float* [ %116, %113 ], [ null, %110 ]
  %119 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %122 = bitcast %union.TfLitePtrUnion* %121 to float**
  %123 = load float*, float** %122, align 8
  br label %124

124:                                              ; preds = %120, %117
  %125 = phi float* [ %123, %120 ], [ null, %117 ]
  %126 = icmp sgt i64 %111, 0
  br i1 %126, label %127, label %171

127:                                              ; preds = %124
  %128 = add i64 %111, -1
  %129 = and i64 %111, 3
  %130 = icmp ult i64 %128, 3
  br i1 %130, label %158, label %131

131:                                              ; preds = %127
  %132 = sub i64 %111, %129
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ 0, %131 ], [ %155, %133 ]
  %135 = phi i64 [ %132, %131 ], [ %156, %133 ]
  %136 = getelementptr inbounds float, float* %118, i64 %134
  %137 = load float, float* %136, align 4
  %138 = tail call float @sinf(float %137) #5
  %139 = getelementptr inbounds float, float* %125, i64 %134
  store float %138, float* %139, align 4
  %140 = or i64 %134, 1
  %141 = getelementptr inbounds float, float* %118, i64 %140
  %142 = load float, float* %141, align 4
  %143 = tail call float @sinf(float %142) #5
  %144 = getelementptr inbounds float, float* %125, i64 %140
  store float %143, float* %144, align 4
  %145 = or i64 %134, 2
  %146 = getelementptr inbounds float, float* %118, i64 %145
  %147 = load float, float* %146, align 4
  %148 = tail call float @sinf(float %147) #5
  %149 = getelementptr inbounds float, float* %125, i64 %145
  store float %148, float* %149, align 4
  %150 = or i64 %134, 3
  %151 = getelementptr inbounds float, float* %118, i64 %150
  %152 = load float, float* %151, align 4
  %153 = tail call float @sinf(float %152) #5
  %154 = getelementptr inbounds float, float* %125, i64 %150
  store float %153, float* %154, align 4
  %155 = add nuw nsw i64 %134, 4
  %156 = add i64 %135, -4
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %133

158:                                              ; preds = %133, %127
  %159 = phi i64 [ 0, %127 ], [ %155, %133 ]
  %160 = icmp eq i64 %129, 0
  br i1 %160, label %171, label %161

161:                                              ; preds = %158, %161
  %162 = phi i64 [ %168, %161 ], [ %159, %158 ]
  %163 = phi i64 [ %169, %161 ], [ %129, %158 ]
  %164 = getelementptr inbounds float, float* %118, i64 %162
  %165 = load float, float* %164, align 4
  %166 = tail call float @sinf(float %165) #5
  %167 = getelementptr inbounds float, float* %125, i64 %162
  store float %166, float* %167, align 4
  %168 = add nuw nsw i64 %162, 1
  %169 = add i64 %163, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %161, !llvm.loop !14

171:                                              ; preds = %158, %161, %30, %124
  %172 = phi i32 [ 1, %30 ], [ 0, %124 ], [ 0, %161 ], [ 0, %158 ]
  ret i32 %172
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin12Register_COSEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin12Register_COSEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_17CosEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %32 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %31, align 8
  %33 = tail call i8* @TfLiteTypeGetName(i32 %28) #5
  %34 = tail call i8* @TfLiteTypeGetName(i32 1) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %32(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* %33, i8* %34) #5
  br label %171

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %110

41:                                               ; preds = %35
  %42 = sext i32 %39 to i64
  %43 = add nsw i64 %42, -1
  %44 = and i64 %42, 7
  %45 = icmp ult i64 %43, 7
  br i1 %45, label %94, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %91, %48 ]
  %50 = phi i64 [ 1, %46 ], [ %90, %48 ]
  %51 = phi i64 [ %47, %46 ], [ %92, %48 ]
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %49
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %50, %54
  %56 = or i64 %49, 1
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = or i64 %49, 2
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %60, %64
  %66 = or i64 %49, 3
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %65, %69
  %71 = or i64 %49, 4
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = or i64 %49, 5
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = or i64 %49, 6
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %49, 7
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = add nuw nsw i64 %49, 8
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %48

94:                                               ; preds = %48, %41
  %95 = phi i64 [ undef, %41 ], [ %90, %48 ]
  %96 = phi i64 [ 0, %41 ], [ %91, %48 ]
  %97 = phi i64 [ 1, %41 ], [ %90, %48 ]
  %98 = icmp eq i64 %44, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %107, %99 ], [ %96, %94 ]
  %101 = phi i64 [ %106, %99 ], [ %97, %94 ]
  %102 = phi i64 [ %108, %99 ], [ %44, %94 ]
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %100
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %101, %105
  %107 = add nuw nsw i64 %100, 1
  %108 = add i64 %102, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %99, !llvm.loop !15

110:                                              ; preds = %94, %99, %35
  %111 = phi i64 [ 1, %35 ], [ %95, %94 ], [ %106, %99 ]
  %112 = icmp eq %struct.TfLiteTensor* %14, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %115 = bitcast %union.TfLitePtrUnion* %114 to float**
  %116 = load float*, float** %115, align 8
  br label %117

117:                                              ; preds = %113, %110
  %118 = phi float* [ %116, %113 ], [ null, %110 ]
  %119 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %122 = bitcast %union.TfLitePtrUnion* %121 to float**
  %123 = load float*, float** %122, align 8
  br label %124

124:                                              ; preds = %120, %117
  %125 = phi float* [ %123, %120 ], [ null, %117 ]
  %126 = icmp sgt i64 %111, 0
  br i1 %126, label %127, label %171

127:                                              ; preds = %124
  %128 = add i64 %111, -1
  %129 = and i64 %111, 3
  %130 = icmp ult i64 %128, 3
  br i1 %130, label %158, label %131

131:                                              ; preds = %127
  %132 = sub i64 %111, %129
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ 0, %131 ], [ %155, %133 ]
  %135 = phi i64 [ %132, %131 ], [ %156, %133 ]
  %136 = getelementptr inbounds float, float* %118, i64 %134
  %137 = load float, float* %136, align 4
  %138 = tail call float @cosf(float %137) #5
  %139 = getelementptr inbounds float, float* %125, i64 %134
  store float %138, float* %139, align 4
  %140 = or i64 %134, 1
  %141 = getelementptr inbounds float, float* %118, i64 %140
  %142 = load float, float* %141, align 4
  %143 = tail call float @cosf(float %142) #5
  %144 = getelementptr inbounds float, float* %125, i64 %140
  store float %143, float* %144, align 4
  %145 = or i64 %134, 2
  %146 = getelementptr inbounds float, float* %118, i64 %145
  %147 = load float, float* %146, align 4
  %148 = tail call float @cosf(float %147) #5
  %149 = getelementptr inbounds float, float* %125, i64 %145
  store float %148, float* %149, align 4
  %150 = or i64 %134, 3
  %151 = getelementptr inbounds float, float* %118, i64 %150
  %152 = load float, float* %151, align 4
  %153 = tail call float @cosf(float %152) #5
  %154 = getelementptr inbounds float, float* %125, i64 %150
  store float %153, float* %154, align 4
  %155 = add nuw nsw i64 %134, 4
  %156 = add i64 %135, -4
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %133

158:                                              ; preds = %133, %127
  %159 = phi i64 [ 0, %127 ], [ %155, %133 ]
  %160 = icmp eq i64 %129, 0
  br i1 %160, label %171, label %161

161:                                              ; preds = %158, %161
  %162 = phi i64 [ %168, %161 ], [ %159, %158 ]
  %163 = phi i64 [ %169, %161 ], [ %129, %158 ]
  %164 = getelementptr inbounds float, float* %118, i64 %162
  %165 = load float, float* %164, align 4
  %166 = tail call float @cosf(float %165) #5
  %167 = getelementptr inbounds float, float* %125, i64 %162
  store float %166, float* %167, align 4
  %168 = add nuw nsw i64 %162, 1
  %169 = add i64 %163, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %161, !llvm.loop !16

171:                                              ; preds = %158, %161, %30, %124
  %172 = phi i32 [ 1, %30 ], [ 0, %124 ], [ 0, %161 ], [ 0, %158 ]
  ret i32 %172
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin12Register_LOGEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin12Register_LOGEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_17LogEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %32 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %31, align 8
  %33 = tail call i8* @TfLiteTypeGetName(i32 %28) #5
  %34 = tail call i8* @TfLiteTypeGetName(i32 1) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %32(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* %33, i8* %34) #5
  br label %135

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %110

41:                                               ; preds = %35
  %42 = sext i32 %39 to i64
  %43 = add nsw i64 %42, -1
  %44 = and i64 %42, 7
  %45 = icmp ult i64 %43, 7
  br i1 %45, label %94, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %91, %48 ]
  %50 = phi i64 [ 1, %46 ], [ %90, %48 ]
  %51 = phi i64 [ %47, %46 ], [ %92, %48 ]
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %49
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %50, %54
  %56 = or i64 %49, 1
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = or i64 %49, 2
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %60, %64
  %66 = or i64 %49, 3
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %65, %69
  %71 = or i64 %49, 4
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = or i64 %49, 5
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = or i64 %49, 6
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %49, 7
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = add nuw nsw i64 %49, 8
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %48

94:                                               ; preds = %48, %41
  %95 = phi i64 [ undef, %41 ], [ %90, %48 ]
  %96 = phi i64 [ 0, %41 ], [ %91, %48 ]
  %97 = phi i64 [ 1, %41 ], [ %90, %48 ]
  %98 = icmp eq i64 %44, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %107, %99 ], [ %96, %94 ]
  %101 = phi i64 [ %106, %99 ], [ %97, %94 ]
  %102 = phi i64 [ %108, %99 ], [ %44, %94 ]
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %100
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %101, %105
  %107 = add nuw nsw i64 %100, 1
  %108 = add i64 %102, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %99, !llvm.loop !17

110:                                              ; preds = %94, %99, %35
  %111 = phi i64 [ 1, %35 ], [ %95, %94 ], [ %106, %99 ]
  %112 = icmp eq %struct.TfLiteTensor* %14, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %115 = bitcast %union.TfLitePtrUnion* %114 to float**
  %116 = load float*, float** %115, align 8
  br label %117

117:                                              ; preds = %113, %110
  %118 = phi float* [ %116, %113 ], [ null, %110 ]
  %119 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %122 = bitcast %union.TfLitePtrUnion* %121 to float**
  %123 = load float*, float** %122, align 8
  br label %124

124:                                              ; preds = %120, %117
  %125 = phi float* [ %123, %120 ], [ null, %117 ]
  %126 = icmp sgt i64 %111, 0
  br i1 %126, label %127, label %135

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %133, %127 ], [ 0, %124 ]
  %129 = getelementptr inbounds float, float* %118, i64 %128
  %130 = load float, float* %129, align 4
  %131 = tail call float @logf(float %130) #5
  %132 = getelementptr inbounds float, float* %125, i64 %128
  store float %131, float* %132, align 4
  %133 = add nuw nsw i64 %128, 1
  %134 = icmp eq i64 %133, %111
  br i1 %134, label %135, label %127

135:                                              ; preds = %127, %30, %124
  %136 = phi i32 [ 1, %30 ], [ 0, %124 ], [ 0, %127 ]
  ret i32 %136
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin13Register_SQRTEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin13Register_SQRTEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_18SqrtEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %32 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %31, align 8
  %33 = tail call i8* @TfLiteTypeGetName(i32 %28) #5
  %34 = tail call i8* @TfLiteTypeGetName(i32 1) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %32(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* %33, i8* %34) #5
  br label %171

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %110

41:                                               ; preds = %35
  %42 = sext i32 %39 to i64
  %43 = add nsw i64 %42, -1
  %44 = and i64 %42, 7
  %45 = icmp ult i64 %43, 7
  br i1 %45, label %94, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %91, %48 ]
  %50 = phi i64 [ 1, %46 ], [ %90, %48 ]
  %51 = phi i64 [ %47, %46 ], [ %92, %48 ]
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %49
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %50, %54
  %56 = or i64 %49, 1
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = or i64 %49, 2
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %60, %64
  %66 = or i64 %49, 3
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %65, %69
  %71 = or i64 %49, 4
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = or i64 %49, 5
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = or i64 %49, 6
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %49, 7
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = add nuw nsw i64 %49, 8
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %48

94:                                               ; preds = %48, %41
  %95 = phi i64 [ undef, %41 ], [ %90, %48 ]
  %96 = phi i64 [ 0, %41 ], [ %91, %48 ]
  %97 = phi i64 [ 1, %41 ], [ %90, %48 ]
  %98 = icmp eq i64 %44, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %107, %99 ], [ %96, %94 ]
  %101 = phi i64 [ %106, %99 ], [ %97, %94 ]
  %102 = phi i64 [ %108, %99 ], [ %44, %94 ]
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %100
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %101, %105
  %107 = add nuw nsw i64 %100, 1
  %108 = add i64 %102, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %99, !llvm.loop !18

110:                                              ; preds = %94, %99, %35
  %111 = phi i64 [ 1, %35 ], [ %95, %94 ], [ %106, %99 ]
  %112 = icmp eq %struct.TfLiteTensor* %14, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %115 = bitcast %union.TfLitePtrUnion* %114 to float**
  %116 = load float*, float** %115, align 8
  br label %117

117:                                              ; preds = %113, %110
  %118 = phi float* [ %116, %113 ], [ null, %110 ]
  %119 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %122 = bitcast %union.TfLitePtrUnion* %121 to float**
  %123 = load float*, float** %122, align 8
  br label %124

124:                                              ; preds = %120, %117
  %125 = phi float* [ %123, %120 ], [ null, %117 ]
  %126 = icmp sgt i64 %111, 0
  br i1 %126, label %127, label %171

127:                                              ; preds = %124
  %128 = add i64 %111, -1
  %129 = and i64 %111, 3
  %130 = icmp ult i64 %128, 3
  br i1 %130, label %158, label %131

131:                                              ; preds = %127
  %132 = sub i64 %111, %129
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ 0, %131 ], [ %155, %133 ]
  %135 = phi i64 [ %132, %131 ], [ %156, %133 ]
  %136 = getelementptr inbounds float, float* %118, i64 %134
  %137 = load float, float* %136, align 4
  %138 = tail call float @sqrtf(float %137) #5
  %139 = getelementptr inbounds float, float* %125, i64 %134
  store float %138, float* %139, align 4
  %140 = or i64 %134, 1
  %141 = getelementptr inbounds float, float* %118, i64 %140
  %142 = load float, float* %141, align 4
  %143 = tail call float @sqrtf(float %142) #5
  %144 = getelementptr inbounds float, float* %125, i64 %140
  store float %143, float* %144, align 4
  %145 = or i64 %134, 2
  %146 = getelementptr inbounds float, float* %118, i64 %145
  %147 = load float, float* %146, align 4
  %148 = tail call float @sqrtf(float %147) #5
  %149 = getelementptr inbounds float, float* %125, i64 %145
  store float %148, float* %149, align 4
  %150 = or i64 %134, 3
  %151 = getelementptr inbounds float, float* %118, i64 %150
  %152 = load float, float* %151, align 4
  %153 = tail call float @sqrtf(float %152) #5
  %154 = getelementptr inbounds float, float* %125, i64 %150
  store float %153, float* %154, align 4
  %155 = add nuw nsw i64 %134, 4
  %156 = add i64 %135, -4
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %133

158:                                              ; preds = %133, %127
  %159 = phi i64 [ 0, %127 ], [ %155, %133 ]
  %160 = icmp eq i64 %129, 0
  br i1 %160, label %171, label %161

161:                                              ; preds = %158, %161
  %162 = phi i64 [ %168, %161 ], [ %159, %158 ]
  %163 = phi i64 [ %169, %161 ], [ %129, %158 ]
  %164 = getelementptr inbounds float, float* %118, i64 %162
  %165 = load float, float* %164, align 4
  %166 = tail call float @sqrtf(float %165) #5
  %167 = getelementptr inbounds float, float* %125, i64 %162
  store float %166, float* %167, align 4
  %168 = add nuw nsw i64 %162, 1
  %169 = add i64 %163, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %161, !llvm.loop !19

171:                                              ; preds = %158, %161, %30, %124
  %172 = phi i32 [ 1, %30 ], [ 0, %124 ], [ 0, %161 ], [ 0, %158 ]
  ret i32 %172
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin14Register_RSQRTEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin14Register_RSQRTEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_19RsqrtEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %32 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %31, align 8
  %33 = tail call i8* @TfLiteTypeGetName(i32 %28) #5
  %34 = tail call i8* @TfLiteTypeGetName(i32 1) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %32(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* %33, i8* %34) #5
  br label %158

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %110

41:                                               ; preds = %35
  %42 = sext i32 %39 to i64
  %43 = add nsw i64 %42, -1
  %44 = and i64 %42, 7
  %45 = icmp ult i64 %43, 7
  br i1 %45, label %94, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %91, %48 ]
  %50 = phi i64 [ 1, %46 ], [ %90, %48 ]
  %51 = phi i64 [ %47, %46 ], [ %92, %48 ]
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %49
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %50, %54
  %56 = or i64 %49, 1
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = or i64 %49, 2
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %60, %64
  %66 = or i64 %49, 3
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %65, %69
  %71 = or i64 %49, 4
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = or i64 %49, 5
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = or i64 %49, 6
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %49, 7
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = add nuw nsw i64 %49, 8
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %48

94:                                               ; preds = %48, %41
  %95 = phi i64 [ undef, %41 ], [ %90, %48 ]
  %96 = phi i64 [ 0, %41 ], [ %91, %48 ]
  %97 = phi i64 [ 1, %41 ], [ %90, %48 ]
  %98 = icmp eq i64 %44, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %107, %99 ], [ %96, %94 ]
  %101 = phi i64 [ %106, %99 ], [ %97, %94 ]
  %102 = phi i64 [ %108, %99 ], [ %44, %94 ]
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %100
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %101, %105
  %107 = add nuw nsw i64 %100, 1
  %108 = add i64 %102, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %99, !llvm.loop !20

110:                                              ; preds = %94, %99, %35
  %111 = phi i64 [ 1, %35 ], [ %95, %94 ], [ %106, %99 ]
  %112 = icmp eq %struct.TfLiteTensor* %14, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %115 = bitcast %union.TfLitePtrUnion* %114 to float**
  %116 = load float*, float** %115, align 8
  br label %117

117:                                              ; preds = %113, %110
  %118 = phi float* [ %116, %113 ], [ null, %110 ]
  %119 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %122 = bitcast %union.TfLitePtrUnion* %121 to float**
  %123 = load float*, float** %122, align 8
  br label %124

124:                                              ; preds = %120, %117
  %125 = phi float* [ %123, %120 ], [ null, %117 ]
  %126 = icmp sgt i64 %111, 0
  br i1 %126, label %127, label %158

127:                                              ; preds = %124
  %128 = and i64 %111, 1
  %129 = icmp eq i64 %111, 1
  br i1 %129, label %149, label %130

130:                                              ; preds = %127
  %131 = sub i64 %111, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %146, %132 ]
  %134 = phi i64 [ %131, %130 ], [ %147, %132 ]
  %135 = getelementptr inbounds float, float* %118, i64 %133
  %136 = load float, float* %135, align 4
  %137 = tail call float @sqrtf(float %136) #5
  %138 = fdiv float 1.000000e+00, %137
  %139 = getelementptr inbounds float, float* %125, i64 %133
  store float %138, float* %139, align 4
  %140 = or i64 %133, 1
  %141 = getelementptr inbounds float, float* %118, i64 %140
  %142 = load float, float* %141, align 4
  %143 = tail call float @sqrtf(float %142) #5
  %144 = fdiv float 1.000000e+00, %143
  %145 = getelementptr inbounds float, float* %125, i64 %140
  store float %144, float* %145, align 4
  %146 = add nuw nsw i64 %133, 2
  %147 = add i64 %134, -2
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %132

149:                                              ; preds = %132, %127
  %150 = phi i64 [ 0, %127 ], [ %146, %132 ]
  %151 = icmp eq i64 %128, 0
  br i1 %151, label %158, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds float, float* %118, i64 %150
  %154 = load float, float* %153, align 4
  %155 = tail call float @sqrtf(float %154) #5
  %156 = fdiv float 1.000000e+00, %155
  %157 = getelementptr inbounds float, float* %125, i64 %150
  store float %156, float* %157, align 4
  br label %158

158:                                              ; preds = %152, %149, %30, %124
  %159 = phi i32 [ 1, %30 ], [ 0, %124 ], [ 0, %149 ], [ 0, %152 ]
  ret i32 %159
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin15Register_SQUAREEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin15Register_SQUAREEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_110SquareEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %32 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %31, align 8
  %33 = tail call i8* @TfLiteTypeGetName(i32 %28) #5
  %34 = tail call i8* @TfLiteTypeGetName(i32 1) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %32(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* %33, i8* %34) #5
  br label %241

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %110

41:                                               ; preds = %35
  %42 = sext i32 %39 to i64
  %43 = add nsw i64 %42, -1
  %44 = and i64 %42, 7
  %45 = icmp ult i64 %43, 7
  br i1 %45, label %94, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %91, %48 ]
  %50 = phi i64 [ 1, %46 ], [ %90, %48 ]
  %51 = phi i64 [ %47, %46 ], [ %92, %48 ]
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %49
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %50, %54
  %56 = or i64 %49, 1
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = or i64 %49, 2
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %60, %64
  %66 = or i64 %49, 3
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %65, %69
  %71 = or i64 %49, 4
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = or i64 %49, 5
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = or i64 %49, 6
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %49, 7
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = add nuw nsw i64 %49, 8
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %48

94:                                               ; preds = %48, %41
  %95 = phi i64 [ undef, %41 ], [ %90, %48 ]
  %96 = phi i64 [ 0, %41 ], [ %91, %48 ]
  %97 = phi i64 [ 1, %41 ], [ %90, %48 ]
  %98 = icmp eq i64 %44, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %107, %99 ], [ %96, %94 ]
  %101 = phi i64 [ %106, %99 ], [ %97, %94 ]
  %102 = phi i64 [ %108, %99 ], [ %44, %94 ]
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %100
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %101, %105
  %107 = add nuw nsw i64 %100, 1
  %108 = add i64 %102, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %99, !llvm.loop !21

110:                                              ; preds = %94, %99, %35
  %111 = phi i64 [ 1, %35 ], [ %95, %94 ], [ %106, %99 ]
  %112 = icmp eq %struct.TfLiteTensor* %14, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %115 = bitcast %union.TfLitePtrUnion* %114 to float**
  %116 = load float*, float** %115, align 8
  %117 = bitcast float* %116 to i8*
  br label %118

118:                                              ; preds = %113, %110
  %119 = phi i8* [ %117, %113 ], [ null, %110 ]
  %120 = phi float* [ %116, %113 ], [ null, %110 ]
  %121 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %124 = bitcast %union.TfLitePtrUnion* %123 to float**
  %125 = load float*, float** %124, align 8
  %126 = bitcast float* %125 to i8*
  br label %127

127:                                              ; preds = %122, %118
  %128 = phi i8* [ %126, %122 ], [ null, %118 ]
  %129 = phi float* [ %125, %122 ], [ null, %118 ]
  %130 = icmp sgt i64 %111, 0
  br i1 %130, label %131, label %241

131:                                              ; preds = %127
  %132 = icmp ult i64 %111, 8
  br i1 %132, label %199, label %133

133:                                              ; preds = %131
  %134 = getelementptr float, float* %129, i64 %111
  %135 = bitcast float* %134 to i8*
  %136 = getelementptr float, float* %120, i64 %111
  %137 = bitcast float* %136 to i8*
  %138 = icmp ult i8* %128, %137
  %139 = icmp ult i8* %119, %135
  %140 = and i1 %138, %139
  br i1 %140, label %199, label %141

141:                                              ; preds = %133
  %142 = and i64 %111, -8
  %143 = add i64 %142, -8
  %144 = lshr exact i64 %143, 3
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 1
  %147 = icmp eq i64 %143, 0
  br i1 %147, label %181, label %148

148:                                              ; preds = %141
  %149 = sub nuw nsw i64 %145, %146
  br label %150

150:                                              ; preds = %150, %148
  %151 = phi i64 [ 0, %148 ], [ %178, %150 ]
  %152 = phi i64 [ %149, %148 ], [ %179, %150 ]
  %153 = getelementptr inbounds float, float* %120, i64 %151
  %154 = bitcast float* %153 to <4 x float>*
  %155 = load <4 x float>, <4 x float>* %154, align 4, !alias.scope !22
  %156 = getelementptr inbounds float, float* %153, i64 4
  %157 = bitcast float* %156 to <4 x float>*
  %158 = load <4 x float>, <4 x float>* %157, align 4, !alias.scope !22
  %159 = fmul <4 x float> %155, %155
  %160 = fmul <4 x float> %158, %158
  %161 = getelementptr inbounds float, float* %129, i64 %151
  %162 = bitcast float* %161 to <4 x float>*
  store <4 x float> %159, <4 x float>* %162, align 4, !alias.scope !25, !noalias !22
  %163 = getelementptr inbounds float, float* %161, i64 4
  %164 = bitcast float* %163 to <4 x float>*
  store <4 x float> %160, <4 x float>* %164, align 4, !alias.scope !25, !noalias !22
  %165 = or i64 %151, 8
  %166 = getelementptr inbounds float, float* %120, i64 %165
  %167 = bitcast float* %166 to <4 x float>*
  %168 = load <4 x float>, <4 x float>* %167, align 4, !alias.scope !22
  %169 = getelementptr inbounds float, float* %166, i64 4
  %170 = bitcast float* %169 to <4 x float>*
  %171 = load <4 x float>, <4 x float>* %170, align 4, !alias.scope !22
  %172 = fmul <4 x float> %168, %168
  %173 = fmul <4 x float> %171, %171
  %174 = getelementptr inbounds float, float* %129, i64 %165
  %175 = bitcast float* %174 to <4 x float>*
  store <4 x float> %172, <4 x float>* %175, align 4, !alias.scope !25, !noalias !22
  %176 = getelementptr inbounds float, float* %174, i64 4
  %177 = bitcast float* %176 to <4 x float>*
  store <4 x float> %173, <4 x float>* %177, align 4, !alias.scope !25, !noalias !22
  %178 = add i64 %151, 16
  %179 = add i64 %152, -2
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %150, !llvm.loop !27

181:                                              ; preds = %150, %141
  %182 = phi i64 [ 0, %141 ], [ %178, %150 ]
  %183 = icmp eq i64 %146, 0
  br i1 %183, label %197, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds float, float* %120, i64 %182
  %186 = bitcast float* %185 to <4 x float>*
  %187 = load <4 x float>, <4 x float>* %186, align 4, !alias.scope !22
  %188 = getelementptr inbounds float, float* %185, i64 4
  %189 = bitcast float* %188 to <4 x float>*
  %190 = load <4 x float>, <4 x float>* %189, align 4, !alias.scope !22
  %191 = fmul <4 x float> %187, %187
  %192 = fmul <4 x float> %190, %190
  %193 = getelementptr inbounds float, float* %129, i64 %182
  %194 = bitcast float* %193 to <4 x float>*
  store <4 x float> %191, <4 x float>* %194, align 4, !alias.scope !25, !noalias !22
  %195 = getelementptr inbounds float, float* %193, i64 4
  %196 = bitcast float* %195 to <4 x float>*
  store <4 x float> %192, <4 x float>* %196, align 4, !alias.scope !25, !noalias !22
  br label %197

197:                                              ; preds = %181, %184
  %198 = icmp eq i64 %111, %142
  br i1 %198, label %241, label %199

199:                                              ; preds = %197, %133, %131
  %200 = phi i64 [ 0, %133 ], [ 0, %131 ], [ %142, %197 ]
  %201 = xor i64 %200, -1
  %202 = add i64 %111, %201
  %203 = and i64 %111, 3
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %215, label %205

205:                                              ; preds = %199, %205
  %206 = phi i64 [ %212, %205 ], [ %200, %199 ]
  %207 = phi i64 [ %213, %205 ], [ %203, %199 ]
  %208 = getelementptr inbounds float, float* %120, i64 %206
  %209 = load float, float* %208, align 4
  %210 = fmul float %209, %209
  %211 = getelementptr inbounds float, float* %129, i64 %206
  store float %210, float* %211, align 4
  %212 = add nuw nsw i64 %206, 1
  %213 = add i64 %207, -1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %205, !llvm.loop !28

215:                                              ; preds = %205, %199
  %216 = phi i64 [ %200, %199 ], [ %212, %205 ]
  %217 = icmp ult i64 %202, 3
  br i1 %217, label %241, label %218

218:                                              ; preds = %215, %218
  %219 = phi i64 [ %239, %218 ], [ %216, %215 ]
  %220 = getelementptr inbounds float, float* %120, i64 %219
  %221 = load float, float* %220, align 4
  %222 = fmul float %221, %221
  %223 = getelementptr inbounds float, float* %129, i64 %219
  store float %222, float* %223, align 4
  %224 = add nuw nsw i64 %219, 1
  %225 = getelementptr inbounds float, float* %120, i64 %224
  %226 = load float, float* %225, align 4
  %227 = fmul float %226, %226
  %228 = getelementptr inbounds float, float* %129, i64 %224
  store float %227, float* %228, align 4
  %229 = add nuw nsw i64 %219, 2
  %230 = getelementptr inbounds float, float* %120, i64 %229
  %231 = load float, float* %230, align 4
  %232 = fmul float %231, %231
  %233 = getelementptr inbounds float, float* %129, i64 %229
  store float %232, float* %233, align 4
  %234 = add nuw nsw i64 %219, 3
  %235 = getelementptr inbounds float, float* %120, i64 %234
  %236 = load float, float* %235, align 4
  %237 = fmul float %236, %236
  %238 = getelementptr inbounds float, float* %129, i64 %234
  store float %237, float* %238, align 4
  %239 = add nuw nsw i64 %219, 4
  %240 = icmp eq i64 %239, %111
  br i1 %240, label %241, label %218, !llvm.loop !29

241:                                              ; preds = %215, %218, %197, %30, %127
  %242 = phi i32 [ 1, %30 ], [ 0, %127 ], [ 0, %197 ], [ 0, %218 ], [ 0, %215 ]
  ret i32 %242
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin20Register_LOGICAL_NOTEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin20Register_LOGICAL_NOTEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114GenericPrepareIXadL_ZNS3_22IsLogicalSupportedTypeE10TfLiteTypeEEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 44, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 %6, i32 1) #5
  br label %64

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 45, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 %15, i32 1) #5
  br label %64

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %52, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %48 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %47, align 8
  %49 = tail call i8* @TfLiteTypeGetName(i32 %42) #5
  %50 = load i32, i32* %43, align 8
  %51 = tail call i8* @TfLiteTypeGetName(i32 %50) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %48(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 48, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8* %49, i8* %51) #5
  br label %64

52:                                               ; preds = %39
  %53 = icmp eq i32 %42, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %52
  %55 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %56 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %55, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %56(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i32 0) #5
  br label %64

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %59 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %58, align 8
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %61 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %60, align 8
  %62 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %61) #5
  %63 = tail call i32 %59(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %40, %struct.TfLiteIntArray* %62) #5
  br label %64

64:                                               ; preds = %46, %54, %57, %17, %8
  %65 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %46 ], [ %63, %57 ], [ 1, %54 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11elementwise12_GLOBAL__N_114LogicalNotEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 6
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %32 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %31, align 8
  %33 = tail call i8* @TfLiteTypeGetName(i32 %28) #5
  %34 = tail call i8* @TfLiteTypeGetName(i32 6) #5
  tail call void (%struct.TfLiteContext*, i8*, ...) %32(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* %33, i8* %34) #5
  br label %235

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %110

41:                                               ; preds = %35
  %42 = sext i32 %39 to i64
  %43 = add nsw i64 %42, -1
  %44 = and i64 %42, 7
  %45 = icmp ult i64 %43, 7
  br i1 %45, label %94, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %91, %48 ]
  %50 = phi i64 [ 1, %46 ], [ %90, %48 ]
  %51 = phi i64 [ %47, %46 ], [ %92, %48 ]
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %49
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %50, %54
  %56 = or i64 %49, 1
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = or i64 %49, 2
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %60, %64
  %66 = or i64 %49, 3
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %65, %69
  %71 = or i64 %49, 4
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = or i64 %49, 5
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = or i64 %49, 6
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %49, 7
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = add nuw nsw i64 %49, 8
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %48

94:                                               ; preds = %48, %41
  %95 = phi i64 [ undef, %41 ], [ %90, %48 ]
  %96 = phi i64 [ 0, %41 ], [ %91, %48 ]
  %97 = phi i64 [ 1, %41 ], [ %90, %48 ]
  %98 = icmp eq i64 %44, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %107, %99 ], [ %96, %94 ]
  %101 = phi i64 [ %106, %99 ], [ %97, %94 ]
  %102 = phi i64 [ %108, %99 ], [ %44, %94 ]
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 %100
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %101, %105
  %107 = add nuw nsw i64 %100, 1
  %108 = add i64 %102, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %99, !llvm.loop !30

110:                                              ; preds = %94, %99, %35
  %111 = phi i64 [ 1, %35 ], [ %95, %94 ], [ %106, %99 ]
  %112 = icmp eq %struct.TfLiteTensor* %14, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %115 = bitcast %union.TfLitePtrUnion* %114 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %113, %110
  %118 = phi i8* [ %116, %113 ], [ null, %110 ]
  %119 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %122 = bitcast %union.TfLitePtrUnion* %121 to i8**
  %123 = load i8*, i8** %122, align 8
  br label %124

124:                                              ; preds = %120, %117
  %125 = phi i8* [ %123, %120 ], [ null, %117 ]
  %126 = icmp sgt i64 %111, 0
  br i1 %126, label %127, label %235

127:                                              ; preds = %124
  %128 = icmp ult i64 %111, 32
  br i1 %128, label %193, label %129

129:                                              ; preds = %127
  %130 = getelementptr i8, i8* %125, i64 %111
  %131 = getelementptr i8, i8* %118, i64 %111
  %132 = icmp ult i8* %125, %131
  %133 = icmp ult i8* %118, %130
  %134 = and i1 %132, %133
  br i1 %134, label %193, label %135

135:                                              ; preds = %129
  %136 = and i64 %111, -32
  %137 = add i64 %136, -32
  %138 = lshr exact i64 %137, 5
  %139 = add nuw nsw i64 %138, 1
  %140 = and i64 %139, 1
  %141 = icmp eq i64 %137, 0
  br i1 %141, label %175, label %142

142:                                              ; preds = %135
  %143 = sub nuw nsw i64 %139, %140
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi i64 [ 0, %142 ], [ %172, %144 ]
  %146 = phi i64 [ %143, %142 ], [ %173, %144 ]
  %147 = getelementptr inbounds i8, i8* %118, i64 %145
  %148 = bitcast i8* %147 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 1, !alias.scope !31
  %150 = getelementptr inbounds i8, i8* %147, i64 16
  %151 = bitcast i8* %150 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1, !alias.scope !31
  %153 = getelementptr inbounds i8, i8* %125, i64 %145
  %154 = xor <16 x i8> %149, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %155 = xor <16 x i8> %152, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %156 = bitcast i8* %153 to <16 x i8>*
  store <16 x i8> %154, <16 x i8>* %156, align 1, !alias.scope !34, !noalias !31
  %157 = getelementptr inbounds i8, i8* %153, i64 16
  %158 = bitcast i8* %157 to <16 x i8>*
  store <16 x i8> %155, <16 x i8>* %158, align 1, !alias.scope !34, !noalias !31
  %159 = or i64 %145, 32
  %160 = getelementptr inbounds i8, i8* %118, i64 %159
  %161 = bitcast i8* %160 to <16 x i8>*
  %162 = load <16 x i8>, <16 x i8>* %161, align 1, !alias.scope !31
  %163 = getelementptr inbounds i8, i8* %160, i64 16
  %164 = bitcast i8* %163 to <16 x i8>*
  %165 = load <16 x i8>, <16 x i8>* %164, align 1, !alias.scope !31
  %166 = getelementptr inbounds i8, i8* %125, i64 %159
  %167 = xor <16 x i8> %162, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %168 = xor <16 x i8> %165, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %169 = bitcast i8* %166 to <16 x i8>*
  store <16 x i8> %167, <16 x i8>* %169, align 1, !alias.scope !34, !noalias !31
  %170 = getelementptr inbounds i8, i8* %166, i64 16
  %171 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %168, <16 x i8>* %171, align 1, !alias.scope !34, !noalias !31
  %172 = add i64 %145, 64
  %173 = add i64 %146, -2
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %144, !llvm.loop !36

175:                                              ; preds = %144, %135
  %176 = phi i64 [ 0, %135 ], [ %172, %144 ]
  %177 = icmp eq i64 %140, 0
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds i8, i8* %118, i64 %176
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !31
  %182 = getelementptr inbounds i8, i8* %179, i64 16
  %183 = bitcast i8* %182 to <16 x i8>*
  %184 = load <16 x i8>, <16 x i8>* %183, align 1, !alias.scope !31
  %185 = getelementptr inbounds i8, i8* %125, i64 %176
  %186 = xor <16 x i8> %181, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %187 = xor <16 x i8> %184, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %188 = bitcast i8* %185 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %188, align 1, !alias.scope !34, !noalias !31
  %189 = getelementptr inbounds i8, i8* %185, i64 16
  %190 = bitcast i8* %189 to <16 x i8>*
  store <16 x i8> %187, <16 x i8>* %190, align 1, !alias.scope !34, !noalias !31
  br label %191

191:                                              ; preds = %175, %178
  %192 = icmp eq i64 %111, %136
  br i1 %192, label %235, label %193

193:                                              ; preds = %191, %129, %127
  %194 = phi i64 [ 0, %129 ], [ 0, %127 ], [ %136, %191 ]
  %195 = xor i64 %194, -1
  %196 = add i64 %111, %195
  %197 = and i64 %111, 3
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %209, label %199

199:                                              ; preds = %193, %199
  %200 = phi i64 [ %206, %199 ], [ %194, %193 ]
  %201 = phi i64 [ %207, %199 ], [ %197, %193 ]
  %202 = getelementptr inbounds i8, i8* %118, i64 %200
  %203 = load i8, i8* %202, align 1, !range !37
  %204 = getelementptr inbounds i8, i8* %125, i64 %200
  %205 = xor i8 %203, 1
  store i8 %205, i8* %204, align 1
  %206 = add nuw nsw i64 %200, 1
  %207 = add i64 %201, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %199, !llvm.loop !38

209:                                              ; preds = %199, %193
  %210 = phi i64 [ %194, %193 ], [ %206, %199 ]
  %211 = icmp ult i64 %196, 3
  br i1 %211, label %235, label %212

212:                                              ; preds = %209, %212
  %213 = phi i64 [ %233, %212 ], [ %210, %209 ]
  %214 = getelementptr inbounds i8, i8* %118, i64 %213
  %215 = load i8, i8* %214, align 1, !range !37
  %216 = getelementptr inbounds i8, i8* %125, i64 %213
  %217 = xor i8 %215, 1
  store i8 %217, i8* %216, align 1
  %218 = add nuw nsw i64 %213, 1
  %219 = getelementptr inbounds i8, i8* %118, i64 %218
  %220 = load i8, i8* %219, align 1, !range !37
  %221 = getelementptr inbounds i8, i8* %125, i64 %218
  %222 = xor i8 %220, 1
  store i8 %222, i8* %221, align 1
  %223 = add nuw nsw i64 %213, 2
  %224 = getelementptr inbounds i8, i8* %118, i64 %223
  %225 = load i8, i8* %224, align 1, !range !37
  %226 = getelementptr inbounds i8, i8* %125, i64 %223
  %227 = xor i8 %225, 1
  store i8 %227, i8* %226, align 1
  %228 = add nuw nsw i64 %213, 3
  %229 = getelementptr inbounds i8, i8* %118, i64 %228
  %230 = load i8, i8* %229, align 1, !range !37
  %231 = getelementptr inbounds i8, i8* %125, i64 %228
  %232 = xor i8 %230, 1
  store i8 %232, i8* %231, align 1
  %233 = add nuw nsw i64 %213, 4
  %234 = icmp eq i64 %233, %111
  br i1 %234, label %235, label %212, !llvm.loop !39

235:                                              ; preds = %209, %212, %191, %30, %124
  %236 = phi i32 [ 1, %30 ], [ 0, %124 ], [ 0, %191 ], [ 0, %212 ], [ 0, %209 ]
  ret i32 %236
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare float @logf(float) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #4

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !3}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !3}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !10}
!37 = !{i8 0, i8 2}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !10}
