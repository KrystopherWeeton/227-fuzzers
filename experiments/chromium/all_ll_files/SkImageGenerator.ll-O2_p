; ModuleID = '../../third_party/skia/src/core/SkImageGenerator.cpp'
source_filename = "../../third_party/skia/src/core/SkImageGenerator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkImageGenerator = type <{ i32 (...)**, %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.8 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.9, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.9 = type { %"struct.std::__1::atomic" }
%"struct.SkImageGenerator::Options" = type { i8 }
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.6", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.6" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.7", %class.sk_sp.8, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.7" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.10, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.10 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.11, %class.sk_sp.12, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.17" }
%class.SkNVRefCnt.11 = type { %"struct.std::__1::atomic" }
%class.sk_sp.12 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.13 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.8, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.13 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.14, void (i8*)*, i8* }
%class.SkNVRefCnt.14 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.15, i32, [4 x i8] }
%union.anon.15 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.12, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type opaque
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.GrRecordingContext = type opaque
%struct.SkIPoint = type { i32, i32 }

$_ZN16SkImageGeneratorD2Ev = comdat any

$_ZN16SkImageGeneratorD0Ev = comdat any

$_ZN16SkImageGenerator16onRefEncodedDataEv = comdat any

$_ZN16SkImageGenerator11onGetPixelsERK11SkImageInfoPvmRKNS_7OptionsE = comdat any

$_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext = comdat any

$_ZNK16SkImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN16SkImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

@_ZTV16SkImageGenerator = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageGenerator*)* @_ZN16SkImageGeneratorD2Ev to i8*), i8* bitcast (void (%class.SkImageGenerator*)* @_ZN16SkImageGeneratorD0Ev to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkImageGenerator*)* @_ZN16SkImageGenerator16onRefEncodedDataEv to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)* @_ZN16SkImageGenerator11onGetPixelsERK11SkImageInfoPvmRKNS_7OptionsE to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)* @_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK16SkImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %class.SkYUVAPixmaps*)* @_ZN16SkImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (void (%class.GrSurfaceProxyView*, %class.SkImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo*, %struct.SkIPoint*, i1, i32)* @_ZN16SkImageGenerator17onGenerateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@_ZL8gFactory = internal unnamed_addr global %class.SkImageGenerator* (%class.sk_sp.8*)* null, align 8

@_ZN16SkImageGeneratorC1ERK11SkImageInfoj = hidden unnamed_addr alias void (%class.SkImageGenerator*, %struct.SkImageInfo*, i32), void (%class.SkImageGenerator*, %struct.SkImageInfo*, i32)* @_ZN16SkImageGeneratorC2ERK11SkImageInfoj

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkImageGeneratorC2ERK11SkImageInfoj(%class.SkImageGenerator* nocapture, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16SkImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.SkColorSpace*, %class.SkColorSpace** %6, align 8
  %8 = icmp eq %class.SkColorSpace* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %3, %9
  store %class.SkColorSpace* %7, %class.SkColorSpace** %5, align 8
  %13 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 1, i32 0, i32 1
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %15 = bitcast i32* %14 to i64*
  %16 = bitcast i32* %13 to i64*
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 1, i32 1
  %19 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %20 = bitcast %struct.SkISize* %19 to i64*
  %21 = bitcast %struct.SkISize* %18 to i64*
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 2
  %24 = icmp eq i32 %2, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %12
  %26 = tail call i32 @_ZN8SkNextID7ImageIDEv() #7
  br label %27

27:                                               ; preds = %12, %25
  %28 = phi i32 [ %26, %25 ], [ %2, %12 ]
  store i32 %28, i32* %23, align 8
  ret void
}

declare i32 @_ZN8SkNextID7ImageIDEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16SkImageGenerator9getPixelsERK11SkImageInfoPvm(%class.SkImageGenerator*, %struct.SkImageInfo* dereferenceable(24), i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.SkImageGenerator::Options", align 1
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = icmp eq i8* %2, null
  %10 = or i1 %9, %8
  br i1 %10, label %29, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %16 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %15) #7
  %17 = sext i32 %16 to i64
  %18 = mul nsw i64 %17, %14
  %19 = icmp ult i64 %18, 2147483648
  %20 = select i1 %19, i64 %18, i64 0
  %21 = icmp ugt i64 %20, %3
  br i1 %21, label %29, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"struct.SkImageGenerator::Options", %"struct.SkImageGenerator::Options"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #7
  store i8 -86, i8* %23, align 1
  %24 = bitcast %class.SkImageGenerator* %0 to i1 (%class.SkImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)***
  %25 = load i1 (%class.SkImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)**, i1 (%class.SkImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%class.SkImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)*, i1 (%class.SkImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)** %25, i64 3
  %27 = load i1 (%class.SkImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)*, i1 (%class.SkImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)** %26, align 8
  %28 = call zeroext i1 %27(%class.SkImageGenerator* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* nonnull %2, i64 %3, %"struct.SkImageGenerator::Options"* nonnull dereferenceable(1) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #7
  br label %29

29:                                               ; preds = %11, %4, %22
  %30 = phi i1 [ %28, %22 ], [ false, %4 ], [ false, %11 ]
  ret i1 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16SkImageGenerator13queryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkImageGenerator* %0 to i1 (%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)***
  %5 = load i1 (%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)**, i1 (%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)*, i1 (%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)** %5, i64 5
  %7 = load i1 (%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)*, i1 (%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkImageGenerator* %0, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8) %1, %class.SkYUVAPixmapInfo* %2) #7
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZNK16SkYUVAPixmapInfo11isSupportedERKNS_18SupportedDataTypesE(%class.SkYUVAPixmapInfo* %2, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8) %1) #7
  br label %11

11:                                               ; preds = %9, %3
  %12 = phi i1 [ false, %3 ], [ %10, %9 ]
  ret i1 %12
}

declare zeroext i1 @_ZNK16SkYUVAPixmapInfo11isSupportedERKNS_18SupportedDataTypesE(%class.SkYUVAPixmapInfo*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16SkImageGenerator13getYUVAPlanesERK13SkYUVAPixmaps(%class.SkImageGenerator*, %class.SkYUVAPixmaps* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkImageGenerator* %0 to i1 (%class.SkImageGenerator*, %class.SkYUVAPixmaps*)***
  %4 = load i1 (%class.SkImageGenerator*, %class.SkYUVAPixmaps*)**, i1 (%class.SkImageGenerator*, %class.SkYUVAPixmaps*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkImageGenerator*, %class.SkYUVAPixmaps*)*, i1 (%class.SkImageGenerator*, %class.SkYUVAPixmaps*)** %4, i64 6
  %6 = load i1 (%class.SkImageGenerator*, %class.SkYUVAPixmaps*)*, i1 (%class.SkImageGenerator*, %class.SkYUVAPixmaps*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkImageGenerator* %0, %class.SkYUVAPixmaps* dereferenceable(208) %1) #7
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkImageGenerator15generateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy(%class.GrSurfaceProxyView* noalias sret, %class.SkImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIPoint* dereferenceable(8), i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %9 to i64
  %17 = sext i32 %13 to i64
  %18 = add nsw i64 %17, %16
  %19 = icmp slt i64 %18, 2147483647
  %20 = select i1 %19, i64 %18, i64 2147483647
  %21 = icmp sgt i64 %20, -2147483647
  %22 = select i1 %21, i64 %20, i64 -2147483647
  %23 = sext i32 %11 to i64
  %24 = sext i32 %15 to i64
  %25 = add nsw i64 %24, %23
  %26 = icmp slt i64 %25, 2147483647
  %27 = select i1 %26, i64 %25, i64 2147483647
  %28 = icmp sgt i64 %27, -2147483647
  %29 = select i1 %28, i64 %27, i64 -2147483647
  %30 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %1, i64 0, i32 1, i32 1, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %1, i64 0, i32 1, i32 1, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = trunc i64 %22 to i32
  %35 = sub nsw i64 %22, %16
  %36 = trunc i64 %29 to i32
  %37 = sub nsw i64 %29, %23
  %38 = icmp slt i64 %35, 1
  %39 = icmp slt i64 %37, 1
  %40 = or i1 %38, %39
  br i1 %40, label %62, label %41

41:                                               ; preds = %7
  %42 = or i64 %37, %35
  %43 = add nsw i64 %42, 2147483648
  %44 = icmp ugt i64 %43, 4294967295
  br i1 %44, label %62, label %45

45:                                               ; preds = %41
  %46 = icmp slt i32 %31, 1
  %47 = icmp slt i32 %33, 1
  %48 = or i1 %46, %47
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = or i32 %33, %31
  %51 = sext i32 %50 to i64
  %52 = add nsw i64 %51, 2147483648
  %53 = icmp ugt i64 %52, 4294967295
  %54 = or i32 %11, %9
  %55 = icmp slt i32 %54, 0
  %56 = or i1 %55, %53
  %57 = icmp slt i32 %31, %34
  %58 = or i1 %57, %56
  %59 = icmp sge i32 %33, %36
  %60 = xor i1 %58, true
  %61 = and i1 %59, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %7, %41, %45, %49
  %63 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %64 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false)
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #7
  br label %70

65:                                               ; preds = %49
  %66 = bitcast %class.SkImageGenerator* %1 to void (%class.GrSurfaceProxyView*, %class.SkImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo*, %struct.SkIPoint*, i1, i32)***
  %67 = load void (%class.GrSurfaceProxyView*, %class.SkImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo*, %struct.SkIPoint*, i1, i32)**, void (%class.GrSurfaceProxyView*, %class.SkImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo*, %struct.SkIPoint*, i1, i32)*** %66, align 8
  %68 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo*, %struct.SkIPoint*, i1, i32)*, void (%class.GrSurfaceProxyView*, %class.SkImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo*, %struct.SkIPoint*, i1, i32)** %67, i64 7
  %69 = load void (%class.GrSurfaceProxyView*, %class.SkImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo*, %struct.SkIPoint*, i1, i32)*, void (%class.GrSurfaceProxyView*, %class.SkImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo*, %struct.SkIPoint*, i1, i32)** %68, align 8
  tail call void %69(%class.GrSurfaceProxyView* sret %0, %class.SkImageGenerator* %1, %class.GrRecordingContext* %2, %struct.SkImageInfo* dereferenceable(24) %3, %struct.SkIPoint* dereferenceable(8) %4, i1 zeroext %5, i32 %6) #7
  br label %70

70:                                               ; preds = %65, %62
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkImageGenerator17onGenerateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy(%class.GrSurfaceProxyView* noalias sret, %class.SkImageGenerator* nocapture readnone, %class.GrRecordingContext* nocapture readnone, %struct.SkImageInfo* nocapture readnone dereferenceable(24), %struct.SkIPoint* nocapture readnone dereferenceable(8), i1 zeroext, i32) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %9 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden {}* @_ZN10SkGraphics39SetImageGeneratorFromEncodedDataFactoryEPFNSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE5sk_spI6SkDataEE({}*) local_unnamed_addr #3 align 2 {
  %2 = load {}*, {}** bitcast (%class.SkImageGenerator* (%class.sk_sp.8*)** @_ZL8gFactory to {}**), align 8
  store {}* %0, {}** bitcast (%class.SkImageGenerator* (%class.sk_sp.8*)** @_ZL8gFactory to {}**), align 8
  ret {}* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkImageGenerator* @_ZN16SkImageGenerator15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp.8* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.8, align 8
  %3 = alloca %class.sk_sp.8, align 8
  %4 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %0, i64 0, i32 0
  %5 = load %class.SkData*, %class.SkData** %4, align 8
  %6 = icmp eq %class.SkData* %5, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %class.SkData* %5 to i64
  %9 = load %class.SkImageGenerator* (%class.sk_sp.8*)*, %class.SkImageGenerator* (%class.sk_sp.8*)** @_ZL8gFactory, align 8
  %10 = icmp eq %class.SkImageGenerator* (%class.sk_sp.8*)* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %2, i64 0, i32 0
  %13 = getelementptr inbounds %class.SkData, %class.SkData* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  store %class.SkData* %5, %class.SkData** %12, align 8
  %15 = call %class.SkImageGenerator* %9(%class.sk_sp.8* nonnull %2) #7
  %16 = ptrtoint %class.SkImageGenerator* %15 to i64
  %17 = load %class.SkData*, %class.SkData** %12, align 8
  %18 = icmp eq %class.SkData* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %class.SkData, %class.SkData* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %17) #7
  %24 = bitcast %class.SkData* %17 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %24) #7
  br label %25

25:                                               ; preds = %11, %19, %23
  %26 = icmp eq %class.SkImageGenerator* %15, null
  br i1 %26, label %27, label %44

27:                                               ; preds = %25
  %28 = bitcast %class.sk_sp.8* %0 to i64*
  %29 = load i64, i64* %28, align 8
  br label %30

30:                                               ; preds = %7, %27
  %31 = phi i64 [ %29, %27 ], [ %8, %7 ]
  store %class.SkData* null, %class.SkData** %4, align 8
  %32 = bitcast %class.sk_sp.8* %3 to i64*
  store i64 %31, i64* %32, align 8
  %33 = call %class.SkImageGenerator* @_ZN16SkImageGenerator19MakeFromEncodedImplE5sk_spI6SkDataE(%class.sk_sp.8* nonnull %3) #7
  %34 = ptrtoint %class.SkImageGenerator* %33 to i64
  %35 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %3, i64 0, i32 0
  %36 = load %class.SkData*, %class.SkData** %35, align 8
  %37 = icmp eq %class.SkData* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %class.SkData, %class.SkData* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %36) #7
  %43 = bitcast %class.SkData* %36 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %43) #7
  br label %44

44:                                               ; preds = %25, %1, %42, %38, %30
  %45 = phi i64 [ %16, %25 ], [ 0, %1 ], [ %34, %30 ], [ %34, %38 ], [ %34, %42 ]
  %46 = inttoptr i64 %45 to %class.SkImageGenerator*
  ret %class.SkImageGenerator* %46
}

declare %class.SkImageGenerator* @_ZN16SkImageGenerator19MakeFromEncodedImplE5sk_spI6SkDataE(%class.sk_sp.8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkImageGeneratorD2Ev(%class.SkImageGenerator*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16SkImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkImageGeneratorD0Ev(%class.SkImageGenerator*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16SkImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %class.SkImageGenerator* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkImageGenerator16onRefEncodedDataEv(%class.sk_sp.8* noalias sret, %class.SkImageGenerator*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16SkImageGenerator11onGetPixelsERK11SkImageInfoPvmRKNS_7OptionsE(%class.SkImageGenerator*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkImageGenerator::Options"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext(%class.SkImageGenerator*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16SkImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkImageGenerator*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #7
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #7
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #7
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
