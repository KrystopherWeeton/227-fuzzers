; ModuleID = '../../ipc/ipc_mojo_handle_attachment.cc'
source_filename = "../../ipc/ipc_mojo_handle_attachment.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.IPC::internal::MojoHandleAttachment" = type { %"class.IPC::MessageAttachment.base", %"class.mojo::ScopedHandleBase" }
%"class.IPC::MessageAttachment.base" = type { %"class.base::Pickle::Attachment.base" }
%"class.base::Pickle::Attachment.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.IPC::MessageAttachment" = type { %"class.base::Pickle::Attachment.base", [4 x i8] }

@_ZTVN3IPC8internal20MojoHandleAttachmentE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.IPC::internal::MojoHandleAttachment"*)* @_ZN3IPC8internal20MojoHandleAttachmentD2Ev to i8*), i8* bitcast (void (%"class.IPC::internal::MojoHandleAttachment"*)* @_ZN3IPC8internal20MojoHandleAttachmentD0Ev to i8*), i8* bitcast (i32 (%"class.IPC::internal::MojoHandleAttachment"*)* @_ZNK3IPC8internal20MojoHandleAttachment7GetTypeEv to i8*)] }, align 8

@_ZN3IPC8internal20MojoHandleAttachmentC1EN4mojo16ScopedHandleBaseINS2_6HandleEEE = hidden unnamed_addr alias void (%"class.IPC::internal::MojoHandleAttachment"*, %"class.mojo::ScopedHandleBase"*), void (%"class.IPC::internal::MojoHandleAttachment"*, %"class.mojo::ScopedHandleBase"*)* @_ZN3IPC8internal20MojoHandleAttachmentC2EN4mojo16ScopedHandleBaseINS2_6HandleEEE
@_ZN3IPC8internal20MojoHandleAttachmentD1Ev = hidden unnamed_addr alias void (%"class.IPC::internal::MojoHandleAttachment"*), void (%"class.IPC::internal::MojoHandleAttachment"*)* @_ZN3IPC8internal20MojoHandleAttachmentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC8internal20MojoHandleAttachmentC2EN4mojo16ScopedHandleBaseINS2_6HandleEEE(%"class.IPC::internal::MojoHandleAttachment"*, %"class.mojo::ScopedHandleBase"* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.IPC::internal::MojoHandleAttachment"* %0 to %"class.IPC::MessageAttachment"*
  tail call void @_ZN3IPC17MessageAttachmentC2Ev(%"class.IPC::MessageAttachment"* %3) #6
  %4 = getelementptr inbounds %"class.IPC::internal::MojoHandleAttachment", %"class.IPC::internal::MojoHandleAttachment"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3IPC8internal20MojoHandleAttachmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.IPC::internal::MojoHandleAttachment", %"class.IPC::internal::MojoHandleAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4, !noalias !2
  store i32 %7, i32* %5, align 4, !alias.scope !2
  store i32 0, i32* %6, align 4, !noalias !2
  ret void
}

declare void @_ZN3IPC17MessageAttachmentC2Ev(%"class.IPC::MessageAttachment"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC8internal20MojoHandleAttachmentD2Ev(%"class.IPC::internal::MojoHandleAttachment"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::internal::MojoHandleAttachment", %"class.IPC::internal::MojoHandleAttachment"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3IPC8internal20MojoHandleAttachmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.IPC::internal::MojoHandleAttachment", %"class.IPC::internal::MojoHandleAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i32 @MojoClose(i32 %4) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.IPC::internal::MojoHandleAttachment"* %0 to %"class.IPC::MessageAttachment"*
  tail call void @_ZN3IPC17MessageAttachmentD2Ev(%"class.IPC::MessageAttachment"* %9) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3IPC17MessageAttachmentD2Ev(%"class.IPC::MessageAttachment"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC8internal20MojoHandleAttachmentD0Ev(%"class.IPC::internal::MojoHandleAttachment"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::internal::MojoHandleAttachment", %"class.IPC::internal::MojoHandleAttachment"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3IPC8internal20MojoHandleAttachmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.IPC::internal::MojoHandleAttachment", %"class.IPC::internal::MojoHandleAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i32 @MojoClose(i32 %4) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.IPC::internal::MojoHandleAttachment"* %0 to %"class.IPC::MessageAttachment"*
  tail call void @_ZN3IPC17MessageAttachmentD2Ev(%"class.IPC::MessageAttachment"* %9) #6
  %10 = bitcast %"class.IPC::internal::MojoHandleAttachment"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3IPC8internal20MojoHandleAttachment7GetTypeEv(%"class.IPC::internal::MojoHandleAttachment"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3IPC8internal20MojoHandleAttachment10TakeHandleEv(%"class.mojo::ScopedHandleBase"* noalias nocapture sret, %"class.IPC::internal::MojoHandleAttachment"* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.IPC::internal::MojoHandleAttachment", %"class.IPC::internal::MojoHandleAttachment"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load i32, i32* %4, align 4, !noalias !5
  store i32 %5, i32* %3, align 4, !alias.scope !5
  store i32 0, i32* %4, align 4, !noalias !5
  ret void
}

declare i32 @MojoClose(i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!4 = distinct !{!4, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!7 = distinct !{!7, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
