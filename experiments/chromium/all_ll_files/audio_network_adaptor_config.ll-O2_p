; ModuleID = '../../third_party/webrtc/modules/audio_coding/audio_network_adaptor/audio_network_adaptor_config.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/audio_network_adaptor/audio_network_adaptor_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::AudioEncoderRuntimeConfig" = type <{ %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.0", %"class.absl::optional.5", %"class.absl::optional.5", [4 x i8], %"class.absl::optional.10", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { float }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { i8 }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { i64 }

@_ZN6webrtc25AudioEncoderRuntimeConfigC1Ev = hidden unnamed_addr alias void (%"struct.webrtc::AudioEncoderRuntimeConfig"*), void (%"struct.webrtc::AudioEncoderRuntimeConfig"*)* @_ZN6webrtc25AudioEncoderRuntimeConfigC2Ev
@_ZN6webrtc25AudioEncoderRuntimeConfigC1ERKS0_ = hidden unnamed_addr alias void (%"struct.webrtc::AudioEncoderRuntimeConfig"*, %"struct.webrtc::AudioEncoderRuntimeConfig"*), void (%"struct.webrtc::AudioEncoderRuntimeConfig"*, %"struct.webrtc::AudioEncoderRuntimeConfig"*)* @_ZN6webrtc25AudioEncoderRuntimeConfigC2ERKS0_
@_ZN6webrtc25AudioEncoderRuntimeConfigD1Ev = hidden unnamed_addr alias void (%"struct.webrtc::AudioEncoderRuntimeConfig"*), void (%"struct.webrtc::AudioEncoderRuntimeConfig"*)* @_ZN6webrtc25AudioEncoderRuntimeConfigD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc25AudioEncoderRuntimeConfigC2Ev(%"struct.webrtc::AudioEncoderRuntimeConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 7
  store i8 0, i8* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25AudioEncoderRuntimeConfigC2ERKS0_(%"struct.webrtc::AudioEncoderRuntimeConfig"* nocapture, %"struct.webrtc::AudioEncoderRuntimeConfig"* nocapture readonly dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 49, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc25AudioEncoderRuntimeConfigD2Ev(%"struct.webrtc::AudioEncoderRuntimeConfig"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"struct.webrtc::AudioEncoderRuntimeConfig"* @_ZN6webrtc25AudioEncoderRuntimeConfigaSERKS0_(%"struct.webrtc::AudioEncoderRuntimeConfig"* returned, %"struct.webrtc::AudioEncoderRuntimeConfig"* nocapture readonly dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 49, i1 false)
  ret %"struct.webrtc::AudioEncoderRuntimeConfig"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc25AudioEncoderRuntimeConfigeqERKS0_(%"struct.webrtc::AudioEncoderRuntimeConfig"* nocapture readonly, %"struct.webrtc::AudioEncoderRuntimeConfig"* nocapture readonly dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  %10 = xor i1 %5, true
  %11 = or i1 %9, %10
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = icmp eq i8 %7, 0
  br i1 %13, label %14, label %15, !prof !3

14:                                               ; preds = %12
  tail call void @llvm.trap() #5
  unreachable

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %22, label %122

21:                                               ; preds = %2
  br i1 %9, label %122, label %22

22:                                               ; preds = %21, %15
  %23 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp ne i8 %24, 0
  %26 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp ne i8 %27, 0
  %29 = xor i1 %25, %28
  %30 = xor i1 %25, true
  %31 = or i1 %29, %30
  br i1 %31, label %41, label %32

32:                                               ; preds = %22
  %33 = icmp eq i8 %27, 0
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %32
  tail call void @llvm.trap() #5
  unreachable

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %42, label %122

41:                                               ; preds = %22
  br i1 %29, label %122, label %42

42:                                               ; preds = %41, %35
  %43 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = icmp ne i8 %44, 0
  %46 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp ne i8 %47, 0
  %49 = xor i1 %45, %48
  %50 = xor i1 %45, true
  %51 = or i1 %49, %50
  br i1 %51, label %61, label %52

52:                                               ; preds = %42
  %53 = icmp eq i8 %47, 0
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %52
  tail call void @llvm.trap() #5
  unreachable

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = load float, float* %58, align 4
  %60 = fcmp oeq float %57, %59
  br i1 %60, label %62, label %122

61:                                               ; preds = %42
  br i1 %49, label %122, label %62

62:                                               ; preds = %61, %55
  %63 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = icmp ne i8 %64, 0
  %66 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp ne i8 %67, 0
  %69 = xor i1 %65, %68
  %70 = xor i1 %65, true
  %71 = or i1 %69, %70
  br i1 %71, label %81, label %72

72:                                               ; preds = %62
  %73 = icmp eq i8 %67, 0
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %72
  tail call void @llvm.trap() #5
  unreachable

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1, !range !2
  %78 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1, !range !2
  %80 = icmp eq i8 %77, %79
  br i1 %80, label %82, label %122

81:                                               ; preds = %62
  br i1 %69, label %122, label %82

82:                                               ; preds = %81, %75
  %83 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %84 = load i8, i8* %83, align 1, !range !2
  %85 = icmp ne i8 %84, 0
  %86 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp ne i8 %87, 0
  %89 = xor i1 %85, %88
  %90 = xor i1 %85, true
  %91 = or i1 %89, %90
  br i1 %91, label %101, label %92

92:                                               ; preds = %82
  %93 = icmp eq i8 %87, 0
  br i1 %93, label %94, label %95, !prof !3

94:                                               ; preds = %92
  tail call void @llvm.trap() #5
  unreachable

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1, !range !2
  %98 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1, !range !2
  %100 = icmp eq i8 %97, %99
  br i1 %100, label %102, label %122

101:                                              ; preds = %82
  br i1 %89, label %122, label %102

102:                                              ; preds = %101, %95
  %103 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp ne i8 %104, 0
  %106 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %107 = load i8, i8* %106, align 8, !range !2
  %108 = icmp ne i8 %107, 0
  %109 = xor i1 %105, %108
  %110 = xor i1 %105, true
  %111 = or i1 %109, %110
  %112 = xor i1 %109, true
  br i1 %111, label %122, label %113

113:                                              ; preds = %102
  %114 = icmp eq i8 %107, 0
  br i1 %114, label %115, label %116, !prof !3

115:                                              ; preds = %113
  tail call void @llvm.trap() #5
  unreachable

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %118, %120
  br label %122

122:                                              ; preds = %21, %41, %61, %81, %101, %116, %102, %95, %75, %55, %35, %15
  %123 = phi i1 [ false, %101 ], [ false, %81 ], [ false, %61 ], [ false, %41 ], [ false, %21 ], [ false, %15 ], [ false, %35 ], [ false, %55 ], [ false, %75 ], [ false, %95 ], [ %112, %102 ], [ %121, %116 ]
  ret i1 %123
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
