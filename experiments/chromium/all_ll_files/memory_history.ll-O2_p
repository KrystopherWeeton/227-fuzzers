; ModuleID = '../../cc/resources/memory_history.cc'
source_filename = "../../cc/resources/memory_history.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer" }
%"class.base::RingBuffer" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>

$_ZN4base10RingBufferIN2cc13MemoryHistory5EntryELm80EEC2Ev = comdat any

@_ZN2cc13MemoryHistoryC1Ev = hidden unnamed_addr alias void (%"class.cc::MemoryHistory"*), void (%"class.cc::MemoryHistory"*)* @_ZN2cc13MemoryHistoryC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::MemoryHistory"* @_ZN2cc13MemoryHistory6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 1928) #3
  %2 = bitcast i8* %1 to %"class.cc::MemoryHistory"*
  %3 = bitcast i8* %1 to %"class.base::RingBuffer"*
  tail call void @_ZN4base10RingBufferIN2cc13MemoryHistory5EntryELm80EEC2Ev(%"class.base::RingBuffer"* nonnull %3) #4
  ret %"class.cc::MemoryHistory"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13MemoryHistoryC2Ev(%"class.cc::MemoryHistory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MemoryHistory", %"class.cc::MemoryHistory"* %0, i64 0, i32 0
  tail call void @_ZN4base10RingBufferIN2cc13MemoryHistory5EntryELm80EEC2Ev(%"class.base::RingBuffer"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base10RingBufferIN2cc13MemoryHistory5EntryELm80EEC2Ev(%"class.base::RingBuffer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.base::RingBuffer"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 17, i1 false) #4
  %3 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 1
  %4 = bitcast %"struct.cc::MemoryHistory::Entry"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 17, i1 false) #4
  %5 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 2
  %6 = bitcast %"struct.cc::MemoryHistory::Entry"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 17, i1 false) #4
  %7 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 3
  %8 = bitcast %"struct.cc::MemoryHistory::Entry"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 17, i1 false) #4
  %9 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 4
  %10 = bitcast %"struct.cc::MemoryHistory::Entry"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 17, i1 false) #4
  %11 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 5
  %12 = bitcast %"struct.cc::MemoryHistory::Entry"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 17, i1 false) #4
  %13 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 6
  %14 = bitcast %"struct.cc::MemoryHistory::Entry"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 17, i1 false) #4
  %15 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 7
  %16 = bitcast %"struct.cc::MemoryHistory::Entry"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 17, i1 false) #4
  %17 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 8
  %18 = bitcast %"struct.cc::MemoryHistory::Entry"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 17, i1 false) #4
  %19 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 9
  %20 = bitcast %"struct.cc::MemoryHistory::Entry"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 17, i1 false) #4
  %21 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 10
  %22 = bitcast %"struct.cc::MemoryHistory::Entry"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 17, i1 false) #4
  %23 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 11
  %24 = bitcast %"struct.cc::MemoryHistory::Entry"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 17, i1 false) #4
  %25 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 12
  %26 = bitcast %"struct.cc::MemoryHistory::Entry"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 17, i1 false) #4
  %27 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 13
  %28 = bitcast %"struct.cc::MemoryHistory::Entry"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 17, i1 false) #4
  %29 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 14
  %30 = bitcast %"struct.cc::MemoryHistory::Entry"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 17, i1 false) #4
  %31 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 15
  %32 = bitcast %"struct.cc::MemoryHistory::Entry"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 17, i1 false) #4
  %33 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 16
  %34 = bitcast %"struct.cc::MemoryHistory::Entry"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 17, i1 false) #4
  %35 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 17
  %36 = bitcast %"struct.cc::MemoryHistory::Entry"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 17, i1 false) #4
  %37 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 18
  %38 = bitcast %"struct.cc::MemoryHistory::Entry"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 17, i1 false) #4
  %39 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 19
  %40 = bitcast %"struct.cc::MemoryHistory::Entry"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 17, i1 false) #4
  %41 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 20
  %42 = bitcast %"struct.cc::MemoryHistory::Entry"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 17, i1 false) #4
  %43 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 21
  %44 = bitcast %"struct.cc::MemoryHistory::Entry"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 17, i1 false) #4
  %45 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 22
  %46 = bitcast %"struct.cc::MemoryHistory::Entry"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 17, i1 false) #4
  %47 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 23
  %48 = bitcast %"struct.cc::MemoryHistory::Entry"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 17, i1 false) #4
  %49 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 24
  %50 = bitcast %"struct.cc::MemoryHistory::Entry"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 17, i1 false) #4
  %51 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 25
  %52 = bitcast %"struct.cc::MemoryHistory::Entry"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 17, i1 false) #4
  %53 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 26
  %54 = bitcast %"struct.cc::MemoryHistory::Entry"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 17, i1 false) #4
  %55 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 27
  %56 = bitcast %"struct.cc::MemoryHistory::Entry"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 17, i1 false) #4
  %57 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 28
  %58 = bitcast %"struct.cc::MemoryHistory::Entry"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 17, i1 false) #4
  %59 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 29
  %60 = bitcast %"struct.cc::MemoryHistory::Entry"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 17, i1 false) #4
  %61 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 30
  %62 = bitcast %"struct.cc::MemoryHistory::Entry"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 17, i1 false) #4
  %63 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 31
  %64 = bitcast %"struct.cc::MemoryHistory::Entry"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 17, i1 false) #4
  %65 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 32
  %66 = bitcast %"struct.cc::MemoryHistory::Entry"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 17, i1 false) #4
  %67 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 33
  %68 = bitcast %"struct.cc::MemoryHistory::Entry"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 17, i1 false) #4
  %69 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 34
  %70 = bitcast %"struct.cc::MemoryHistory::Entry"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 17, i1 false) #4
  %71 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 35
  %72 = bitcast %"struct.cc::MemoryHistory::Entry"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 17, i1 false) #4
  %73 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 36
  %74 = bitcast %"struct.cc::MemoryHistory::Entry"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 17, i1 false) #4
  %75 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 37
  %76 = bitcast %"struct.cc::MemoryHistory::Entry"* %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 17, i1 false) #4
  %77 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 38
  %78 = bitcast %"struct.cc::MemoryHistory::Entry"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 17, i1 false) #4
  %79 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 39
  %80 = bitcast %"struct.cc::MemoryHistory::Entry"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 17, i1 false) #4
  %81 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 40
  %82 = bitcast %"struct.cc::MemoryHistory::Entry"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 17, i1 false) #4
  %83 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 41
  %84 = bitcast %"struct.cc::MemoryHistory::Entry"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 17, i1 false) #4
  %85 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 42
  %86 = bitcast %"struct.cc::MemoryHistory::Entry"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 17, i1 false) #4
  %87 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 43
  %88 = bitcast %"struct.cc::MemoryHistory::Entry"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 17, i1 false) #4
  %89 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 44
  %90 = bitcast %"struct.cc::MemoryHistory::Entry"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 17, i1 false) #4
  %91 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 45
  %92 = bitcast %"struct.cc::MemoryHistory::Entry"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 17, i1 false) #4
  %93 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 46
  %94 = bitcast %"struct.cc::MemoryHistory::Entry"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 17, i1 false) #4
  %95 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 47
  %96 = bitcast %"struct.cc::MemoryHistory::Entry"* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 17, i1 false) #4
  %97 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 48
  %98 = bitcast %"struct.cc::MemoryHistory::Entry"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 17, i1 false) #4
  %99 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 49
  %100 = bitcast %"struct.cc::MemoryHistory::Entry"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 17, i1 false) #4
  %101 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 50
  %102 = bitcast %"struct.cc::MemoryHistory::Entry"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 17, i1 false) #4
  %103 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 51
  %104 = bitcast %"struct.cc::MemoryHistory::Entry"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 17, i1 false) #4
  %105 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 52
  %106 = bitcast %"struct.cc::MemoryHistory::Entry"* %105 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 17, i1 false) #4
  %107 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 53
  %108 = bitcast %"struct.cc::MemoryHistory::Entry"* %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 17, i1 false) #4
  %109 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 54
  %110 = bitcast %"struct.cc::MemoryHistory::Entry"* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 17, i1 false) #4
  %111 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 55
  %112 = bitcast %"struct.cc::MemoryHistory::Entry"* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 17, i1 false) #4
  %113 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 56
  %114 = bitcast %"struct.cc::MemoryHistory::Entry"* %113 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 17, i1 false) #4
  %115 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 57
  %116 = bitcast %"struct.cc::MemoryHistory::Entry"* %115 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 17, i1 false) #4
  %117 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 58
  %118 = bitcast %"struct.cc::MemoryHistory::Entry"* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 17, i1 false) #4
  %119 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 59
  %120 = bitcast %"struct.cc::MemoryHistory::Entry"* %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 17, i1 false) #4
  %121 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 60
  %122 = bitcast %"struct.cc::MemoryHistory::Entry"* %121 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 17, i1 false) #4
  %123 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 61
  %124 = bitcast %"struct.cc::MemoryHistory::Entry"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 17, i1 false) #4
  %125 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 62
  %126 = bitcast %"struct.cc::MemoryHistory::Entry"* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 17, i1 false) #4
  %127 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 63
  %128 = bitcast %"struct.cc::MemoryHistory::Entry"* %127 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 17, i1 false) #4
  %129 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 64
  %130 = bitcast %"struct.cc::MemoryHistory::Entry"* %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 17, i1 false) #4
  %131 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 65
  %132 = bitcast %"struct.cc::MemoryHistory::Entry"* %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 17, i1 false) #4
  %133 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 66
  %134 = bitcast %"struct.cc::MemoryHistory::Entry"* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 17, i1 false) #4
  %135 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 67
  %136 = bitcast %"struct.cc::MemoryHistory::Entry"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 17, i1 false) #4
  %137 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 68
  %138 = bitcast %"struct.cc::MemoryHistory::Entry"* %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 17, i1 false) #4
  %139 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 69
  %140 = bitcast %"struct.cc::MemoryHistory::Entry"* %139 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 17, i1 false) #4
  %141 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 70
  %142 = bitcast %"struct.cc::MemoryHistory::Entry"* %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 17, i1 false) #4
  %143 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 71
  %144 = bitcast %"struct.cc::MemoryHistory::Entry"* %143 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 17, i1 false) #4
  %145 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 72
  %146 = bitcast %"struct.cc::MemoryHistory::Entry"* %145 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 17, i1 false) #4
  %147 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 73
  %148 = bitcast %"struct.cc::MemoryHistory::Entry"* %147 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 17, i1 false) #4
  %149 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 74
  %150 = bitcast %"struct.cc::MemoryHistory::Entry"* %149 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 17, i1 false) #4
  %151 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 75
  %152 = bitcast %"struct.cc::MemoryHistory::Entry"* %151 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 17, i1 false) #4
  %153 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 76
  %154 = bitcast %"struct.cc::MemoryHistory::Entry"* %153 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 17, i1 false) #4
  %155 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 77
  %156 = bitcast %"struct.cc::MemoryHistory::Entry"* %155 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 17, i1 false) #4
  %157 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 78
  %158 = bitcast %"struct.cc::MemoryHistory::Entry"* %157 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 17, i1 false) #4
  %159 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 0, i64 79
  %160 = bitcast %"struct.cc::MemoryHistory::Entry"* %159 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 17, i1 false) #4
  %161 = getelementptr inbounds %"class.base::RingBuffer", %"class.base::RingBuffer"* %0, i64 0, i32 1
  store i64 0, i64* %161, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13MemoryHistory9SaveEntryERKNS0_5EntryE(%"class.cc::MemoryHistory"* nocapture, %"struct.cc::MemoryHistory::Entry"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::MemoryHistory", %"class.cc::MemoryHistory"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = urem i64 %4, 80
  %6 = getelementptr inbounds %"class.cc::MemoryHistory", %"class.cc::MemoryHistory"* %0, i64 0, i32 0, i32 0, i64 %5
  %7 = bitcast %"struct.cc::MemoryHistory::Entry"* %6 to i8*
  %8 = bitcast %"struct.cc::MemoryHistory::Entry"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 17, i1 false) #4
  %9 = load i64, i64* %3, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { builtin nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
