; ModuleID = '../../services/network/trust_tokens/trust_token_key_filtering.cc'
source_filename = "../../services/network/trust_tokens/trust_token_key_filtering.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.network::mojom::TrustTokenVerificationKey"* }
%"class.network::mojom::TrustTokenVerificationKey" = type { %"class.std::__1::basic_string", %"class.base::Time" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::StructPtr"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4mojo9StructPtrIN7network5mojom25TrustTokenVerificationKeyEEENS_9allocatorIS6_EEE8__appendEm = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network35RetainSoonestToExpireTrustTokenKeysEPNSt3__16vectorIN4mojo9StructPtrINS_5mojom25TrustTokenVerificationKeyEEENS0_9allocatorIS6_EEEEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 {
  %3 = tail call i64 @_ZN4base4Time3NowEv() #9
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %6, align 8
  %8 = icmp eq %"class.mojo::StructPtr"* %5, %7
  %9 = ptrtoint %"class.mojo::StructPtr"* %7 to i64
  br i1 %8, label %20, label %10

10:                                               ; preds = %2, %17
  %11 = phi %"class.mojo::StructPtr"* [ %18, %17 ], [ %5, %2 ]
  %12 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %12, align 8
  %14 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp sgt i64 %15, %3
  br i1 %16, label %17, label %20

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %11, i64 1
  %19 = icmp eq %"class.mojo::StructPtr"* %18, %7
  br i1 %19, label %60, label %10

20:                                               ; preds = %10, %2
  %21 = phi %"class.mojo::StructPtr"* [ %5, %2 ], [ %11, %10 ]
  %22 = ptrtoint %"class.mojo::StructPtr"* %21 to i64
  %23 = icmp eq %"class.mojo::StructPtr"* %21, %7
  br i1 %23, label %60, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %21, i64 1
  %26 = icmp eq %"class.mojo::StructPtr"* %25, %7
  br i1 %26, label %60, label %27

27:                                               ; preds = %24, %53
  %28 = phi %"class.mojo::StructPtr"* [ %55, %53 ], [ %25, %24 ]
  %29 = phi i64 [ %54, %53 ], [ %22, %24 ]
  %30 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %30, align 8
  %32 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %31, i64 0, i32 1, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp sgt i64 %33, %3
  br i1 %34, label %35, label %53

35:                                               ; preds = %27
  %36 = inttoptr i64 %29 to %"class.mojo::StructPtr"*
  %37 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %37, align 8
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %37, align 8
  %39 = icmp eq %"class.network::mojom::TrustTokenVerificationKey"* %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = inttoptr i64 %29 to i64*
  br label %46

42:                                               ; preds = %35
  tail call void @_ZN7network5mojom25TrustTokenVerificationKeyD1Ev(%"class.network::mojom::TrustTokenVerificationKey"* nonnull %38) #9
  %43 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %38 to i8*
  tail call void @_ZdlPv(i8* %43) #10
  %44 = inttoptr i64 %29 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %42, %40
  %47 = phi i64* [ %41, %40 ], [ %44, %42 ]
  %48 = phi i64 [ 0, %40 ], [ %45, %42 ]
  %49 = bitcast %"class.mojo::StructPtr"* %28 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %47, align 8
  store i64 %48, i64* %49, align 8
  %51 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %36, i64 1
  %52 = ptrtoint %"class.mojo::StructPtr"* %51 to i64
  br label %53

53:                                               ; preds = %46, %27
  %54 = phi i64 [ %29, %27 ], [ %52, %46 ]
  %55 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %28, i64 1
  %56 = icmp eq %"class.mojo::StructPtr"* %55, %7
  br i1 %56, label %57, label %27

57:                                               ; preds = %53
  %58 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %6, align 8
  %59 = ptrtoint %"class.mojo::StructPtr"* %58 to i64
  br label %60

60:                                               ; preds = %17, %57, %24, %20
  %61 = phi i64 [ %9, %20 ], [ %9, %24 ], [ %59, %57 ], [ %9, %17 ]
  %62 = phi %"class.mojo::StructPtr"* [ %7, %20 ], [ %7, %24 ], [ %58, %57 ], [ %7, %17 ]
  %63 = phi i64 [ %22, %20 ], [ %22, %24 ], [ %54, %57 ], [ %9, %17 ]
  %64 = inttoptr i64 %63 to %"class.mojo::StructPtr"*
  %65 = icmp eq %"class.mojo::StructPtr"* %62, %64
  br i1 %65, label %77, label %66

66:                                               ; preds = %60, %74
  %67 = phi %"class.mojo::StructPtr"* [ %68, %74 ], [ %62, %60 ]
  %68 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %67, i64 -1
  %69 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %69, align 8
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %69, align 8
  %71 = icmp eq %"class.network::mojom::TrustTokenVerificationKey"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %66
  tail call void @_ZN7network5mojom25TrustTokenVerificationKeyD1Ev(%"class.network::mojom::TrustTokenVerificationKey"* nonnull %70) #9
  %73 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %70 to i8*
  tail call void @_ZdlPv(i8* %73) #10
  br label %74

74:                                               ; preds = %72, %66
  %75 = icmp eq %"class.mojo::StructPtr"* %68, %64
  br i1 %75, label %76, label %66

76:                                               ; preds = %74
  store %"class.mojo::StructPtr"* %64, %"class.mojo::StructPtr"** %6, align 8
  br label %77

77:                                               ; preds = %60, %76
  %78 = phi %"class.mojo::StructPtr"* [ %62, %60 ], [ %64, %76 ]
  %79 = phi i64 [ %61, %60 ], [ %63, %76 ]
  %80 = bitcast %"class.mojo::StructPtr"** %6 to i64*
  %81 = bitcast %"class.std::__1::vector"* %0 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %79, %82
  %84 = ashr exact i64 %83, 3
  %85 = icmp ugt i64 %84, %1
  %86 = inttoptr i64 %82 to %"class.mojo::StructPtr"*
  br i1 %85, label %87, label %198

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %86, i64 %1
  %89 = shl nuw i64 %1, 3
  %90 = ashr exact i64 %89, 3
  %91 = icmp sgt i64 %89, 8
  br i1 %91, label %92, label %100

92:                                               ; preds = %87
  %93 = add nsw i64 %90, -2
  %94 = sdiv i64 %93, 2
  br label %95

95:                                               ; preds = %95, %92
  %96 = phi i64 [ %98, %95 ], [ %94, %92 ]
  %97 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %86, i64 %96
  tail call fastcc void @"_ZNSt3__111__sift_downIRZN7network35RetainSoonestToExpireTrustTokenKeysEPNS_6vectorIN4mojo9StructPtrINS1_5mojom25TrustTokenVerificationKeyEEENS_9allocatorIS7_EEEEmE3$_1NS_11__wrap_iterIPS7_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeESH_"(%"class.mojo::StructPtr"* %86, i64 %90, %"class.mojo::StructPtr"* %97) #9
  %98 = add nsw i64 %96, -1
  %99 = icmp sgt i64 %96, 0
  br i1 %99, label %95, label %100

100:                                              ; preds = %95, %87
  %101 = icmp eq %"class.mojo::StructPtr"* %88, %78
  br i1 %101, label %105, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = inttoptr i64 %82 to i64*
  br label %118

105:                                              ; preds = %169, %100
  br i1 %91, label %106, label %172

106:                                              ; preds = %105
  %107 = inttoptr i64 %82 to i64*
  %108 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %109

109:                                              ; preds = %109, %106
  %110 = phi i64 [ %1, %106 ], [ %116, %109 ]
  %111 = phi %"class.mojo::StructPtr"* [ %88, %106 ], [ %112, %109 ]
  %112 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %111, i64 -1
  %113 = load i64, i64* %107, align 8
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %108, align 8
  %114 = bitcast %"class.mojo::StructPtr"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %107, align 8
  store i64 %113, i64* %114, align 8
  %116 = add nsw i64 %110, -1
  tail call fastcc void @"_ZNSt3__111__sift_downIRZN7network35RetainSoonestToExpireTrustTokenKeysEPNS_6vectorIN4mojo9StructPtrINS1_5mojom25TrustTokenVerificationKeyEEENS_9allocatorIS7_EEEEmE3$_1NS_11__wrap_iterIPS7_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeESH_"(%"class.mojo::StructPtr"* %86, i64 %116, %"class.mojo::StructPtr"* %86) #9
  %117 = icmp sgt i64 %116, 1
  br i1 %117, label %109, label %172

118:                                              ; preds = %169, %102
  %119 = phi %"class.mojo::StructPtr"* [ %88, %102 ], [ %170, %169 ]
  %120 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %119, i64 0, i32 0, i32 0, i32 0, i32 0
  %121 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %120, align 8
  %122 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %103, align 8
  %123 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %122, i64 0, i32 1, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %121, i64 0, i32 1, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp slt i64 %126, %124
  %128 = ptrtoint %"class.network::mojom::TrustTokenVerificationKey"* %121 to i64
  br i1 %127, label %166, label %129

129:                                              ; preds = %118
  %130 = icmp slt i64 %124, %126
  br i1 %130, label %169, label %131

131:                                              ; preds = %129
  %132 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  %136 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = zext i8 %134 to i64
  %139 = select i1 %135, i64 %137, i64 %138
  %140 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  %144 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = zext i8 %142 to i64
  %147 = select i1 %143, i64 %145, i64 %146
  %148 = icmp ult i64 %139, %147
  %149 = select i1 %148, i64 %139, i64 %147
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %162, label %151

151:                                              ; preds = %131
  %152 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %121 to i8*
  %155 = select i1 %143, i8* %153, i8* %154
  %156 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %122 to i8*
  %159 = select i1 %135, i8* %157, i8* %158
  %160 = tail call i32 @memcmp(i8* %155, i8* %159, i64 %149) #9
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %151, %131
  %163 = icmp ult i64 %147, %139
  br i1 %163, label %166, label %169

164:                                              ; preds = %151
  %165 = icmp slt i32 %160, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %164, %162, %118
  %167 = bitcast %"class.mojo::StructPtr"* %119 to i64*
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %120, align 8
  %168 = load i64, i64* %104, align 8
  store i64 %168, i64* %167, align 8
  store i64 %128, i64* %104, align 8
  tail call fastcc void @"_ZNSt3__111__sift_downIRZN7network35RetainSoonestToExpireTrustTokenKeysEPNS_6vectorIN4mojo9StructPtrINS1_5mojom25TrustTokenVerificationKeyEEENS_9allocatorIS7_EEEEmE3$_1NS_11__wrap_iterIPS7_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeESH_"(%"class.mojo::StructPtr"* %86, i64 %90, %"class.mojo::StructPtr"* %86) #9
  br label %169

169:                                              ; preds = %166, %164, %162, %129
  %170 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %119, i64 1
  %171 = icmp eq %"class.mojo::StructPtr"* %170, %78
  br i1 %171, label %105, label %118

172:                                              ; preds = %109, %105
  %173 = load i64, i64* %80, align 8
  %174 = load i64, i64* %81, align 8
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 3
  %177 = icmp ult i64 %176, %1
  %178 = inttoptr i64 %174 to %"class.mojo::StructPtr"*
  %179 = inttoptr i64 %173 to %"class.mojo::StructPtr"*
  br i1 %177, label %180, label %182

180:                                              ; preds = %172
  %181 = sub i64 %1, %176
  tail call void @_ZNSt3__16vectorIN4mojo9StructPtrIN7network5mojom25TrustTokenVerificationKeyEEENS_9allocatorIS6_EEE8__appendEm(%"class.std::__1::vector"* %0, i64 %181) #9
  br label %198

182:                                              ; preds = %172
  %183 = icmp ugt i64 %176, %1
  br i1 %183, label %184, label %198

184:                                              ; preds = %182
  %185 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %178, i64 %1
  %186 = icmp eq %"class.mojo::StructPtr"* %185, %179
  br i1 %186, label %197, label %187

187:                                              ; preds = %184, %195
  %188 = phi %"class.mojo::StructPtr"* [ %189, %195 ], [ %179, %184 ]
  %189 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %188, i64 -1
  %190 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %189, i64 0, i32 0, i32 0, i32 0, i32 0
  %191 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %190, align 8
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %190, align 8
  %192 = icmp eq %"class.network::mojom::TrustTokenVerificationKey"* %191, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %187
  tail call void @_ZN7network5mojom25TrustTokenVerificationKeyD1Ev(%"class.network::mojom::TrustTokenVerificationKey"* nonnull %191) #9
  %194 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %191 to i8*
  tail call void @_ZdlPv(i8* %194) #10
  br label %195

195:                                              ; preds = %193, %187
  %196 = icmp eq %"class.mojo::StructPtr"* %189, %185
  br i1 %196, label %197, label %187

197:                                              ; preds = %195, %184
  store %"class.mojo::StructPtr"* %185, %"class.mojo::StructPtr"** %6, align 8
  br label %198

198:                                              ; preds = %197, %182, %180, %77
  ret void
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom25TrustTokenVerificationKeyD1Ev(%"class.network::mojom::TrustTokenVerificationKey"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__111__sift_downIRZN7network35RetainSoonestToExpireTrustTokenKeysEPNS_6vectorIN4mojo9StructPtrINS1_5mojom25TrustTokenVerificationKeyEEENS_9allocatorIS7_EEEEmE3$_1NS_11__wrap_iterIPS7_EEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeESH_"(%"class.mojo::StructPtr"*, i64, %"class.mojo::StructPtr"*) unnamed_addr #0 {
  %4 = ptrtoint %"class.mojo::StructPtr"* %0 to i64
  %5 = ptrtoint %"class.mojo::StructPtr"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = icmp slt i64 %1, 2
  br i1 %7, label %265, label %8

8:                                                ; preds = %3
  %9 = ashr exact i64 %6, 3
  %10 = add nsw i64 %1, -2
  %11 = sdiv i64 %10, 2
  %12 = icmp slt i64 %11, %9
  br i1 %12, label %265, label %13

13:                                               ; preds = %8
  %14 = ashr exact i64 %6, 2
  %15 = or i64 %14, 1
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %0, i64 %15
  %17 = ptrtoint %"class.mojo::StructPtr"* %16 to i64
  %18 = add nsw i64 %15, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %20, label %70

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %16, i64 1
  %22 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %22, align 8
  %24 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %24, align 8
  %26 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %23, i64 0, i32 1, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp slt i64 %29, %27
  br i1 %30, label %68, label %31

31:                                               ; preds = %20
  %32 = icmp slt i64 %27, %29
  br i1 %32, label %70, label %33

33:                                               ; preds = %31
  %34 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %44 to i64
  %49 = select i1 %45, i64 %47, i64 %48
  %50 = icmp ult i64 %41, %49
  %51 = select i1 %50, i64 %41, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %64, label %53

53:                                               ; preds = %33
  %54 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %23 to i8*
  %57 = select i1 %45, i8* %55, i8* %56
  %58 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %25 to i8*
  %61 = select i1 %37, i8* %59, i8* %60
  %62 = tail call i32 @memcmp(i8* %57, i8* %61, i64 %51) #9
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %53, %33
  %65 = icmp ult i64 %49, %41
  br i1 %65, label %68, label %70

66:                                               ; preds = %53
  %67 = icmp slt i32 %62, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %20, %64, %66
  %69 = ptrtoint %"class.mojo::StructPtr"* %21 to i64
  br label %70

70:                                               ; preds = %31, %13, %64, %68, %66
  %71 = phi i64 [ %69, %68 ], [ %17, %66 ], [ %17, %64 ], [ %17, %13 ], [ %17, %31 ]
  %72 = phi i64 [ %18, %68 ], [ %15, %66 ], [ %15, %64 ], [ %15, %13 ], [ %15, %31 ]
  %73 = inttoptr i64 %71 to %"class.mojo::StructPtr"*
  %74 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %74, align 8
  %76 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %76, align 8
  %78 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %77, i64 0, i32 1, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %75, i64 0, i32 1, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp slt i64 %81, %79
  %83 = ptrtoint %"class.network::mojom::TrustTokenVerificationKey"* %77 to i64
  br i1 %82, label %265, label %84

84:                                               ; preds = %70
  %85 = icmp slt i64 %79, %81
  br i1 %85, label %121, label %86

86:                                               ; preds = %84
  %87 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i64 %92, i64 %93
  %95 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  %99 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = zext i8 %97 to i64
  %102 = select i1 %98, i64 %100, i64 %101
  %103 = icmp ult i64 %94, %102
  %104 = select i1 %103, i64 %94, i64 %102
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %117, label %106

106:                                              ; preds = %86
  %107 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %75 to i8*
  %110 = select i1 %98, i8* %108, i8* %109
  %111 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %77 to i8*
  %114 = select i1 %90, i8* %112, i8* %113
  %115 = tail call i32 @memcmp(i8* %110, i8* %114, i64 %104) #9
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %106, %86
  %118 = icmp ult i64 %102, %94
  br i1 %118, label %265, label %121

119:                                              ; preds = %106
  %120 = icmp slt i32 %115, 0
  br i1 %120, label %265, label %121

121:                                              ; preds = %84, %117, %119
  %122 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 0, i64* %122, align 8
  %123 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %77 to i8*
  br label %128

128:                                              ; preds = %245, %121
  %129 = phi i8* [ null, %121 ], [ %248, %245 ]
  %130 = phi %"class.network::mojom::TrustTokenVerificationKey"* [ null, %121 ], [ %247, %245 ]
  %131 = phi i64 [ %71, %121 ], [ %206, %245 ]
  %132 = phi %"class.mojo::StructPtr"* [ %2, %121 ], [ %134, %245 ]
  %133 = phi i64 [ %72, %121 ], [ %207, %245 ]
  %134 = inttoptr i64 %131 to %"class.mojo::StructPtr"*
  %135 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %132, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %135, align 8
  %136 = icmp eq %"class.network::mojom::TrustTokenVerificationKey"* %130, null
  br i1 %136, label %137, label %139

137:                                              ; preds = %128
  %138 = bitcast %"class.mojo::StructPtr"* %132 to i64*
  br label %142

139:                                              ; preds = %128
  tail call void @_ZN7network5mojom25TrustTokenVerificationKeyD1Ev(%"class.network::mojom::TrustTokenVerificationKey"* nonnull %130) #9
  tail call void @_ZdlPv(i8* %129) #10
  %140 = bitcast %"class.mojo::StructPtr"* %132 to i64*
  %141 = load i64, i64* %140, align 8
  br label %142

142:                                              ; preds = %137, %139
  %143 = phi i64* [ %138, %137 ], [ %140, %139 ]
  %144 = phi i64 [ 0, %137 ], [ %141, %139 ]
  %145 = inttoptr i64 %131 to i64*
  %146 = load i64, i64* %145, align 8
  store i64 %146, i64* %143, align 8
  store i64 %144, i64* %145, align 8
  %147 = icmp slt i64 %11, %133
  br i1 %147, label %251, label %148

148:                                              ; preds = %142
  %149 = shl nsw i64 %133, 1
  %150 = or i64 %149, 1
  %151 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %0, i64 %150
  %152 = ptrtoint %"class.mojo::StructPtr"* %151 to i64
  %153 = add nsw i64 %150, 1
  %154 = icmp slt i64 %153, %1
  br i1 %154, label %155, label %205

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %151, i64 1
  %157 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %151, i64 0, i32 0, i32 0, i32 0, i32 0
  %158 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %157, align 8
  %159 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %156, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %159, align 8
  %161 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %160, i64 0, i32 1, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %158, i64 0, i32 1, i32 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = icmp slt i64 %164, %162
  br i1 %165, label %203, label %166

166:                                              ; preds = %155
  %167 = icmp slt i64 %162, %164
  br i1 %167, label %205, label %168

168:                                              ; preds = %166
  %169 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %160 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  %173 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %160, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %174 = load i64, i64* %173, align 8
  %175 = zext i8 %171 to i64
  %176 = select i1 %172, i64 %174, i64 %175
  %177 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %158 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  %181 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = zext i8 %179 to i64
  %184 = select i1 %180, i64 %182, i64 %183
  %185 = icmp ult i64 %176, %184
  %186 = select i1 %185, i64 %176, i64 %184
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %199, label %188

188:                                              ; preds = %168
  %189 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %158 to i8*
  %192 = select i1 %180, i8* %190, i8* %191
  %193 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %160, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %160 to i8*
  %196 = select i1 %172, i8* %194, i8* %195
  %197 = tail call i32 @memcmp(i8* %192, i8* %196, i64 %186) #9
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %201

199:                                              ; preds = %188, %168
  %200 = icmp ult i64 %184, %176
  br i1 %200, label %203, label %205

201:                                              ; preds = %188
  %202 = icmp slt i32 %197, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %155, %199, %201
  %204 = ptrtoint %"class.mojo::StructPtr"* %156 to i64
  br label %205

205:                                              ; preds = %166, %148, %199, %201, %203
  %206 = phi i64 [ %204, %203 ], [ %152, %201 ], [ %152, %199 ], [ %152, %148 ], [ %152, %166 ]
  %207 = phi i64 [ %153, %203 ], [ %150, %201 ], [ %150, %199 ], [ %150, %148 ], [ %150, %166 ]
  %208 = inttoptr i64 %206 to %"class.mojo::StructPtr"*
  %209 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %208, i64 0, i32 0, i32 0, i32 0, i32 0
  %210 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %209, align 8
  %211 = load i64, i64* %78, align 8
  %212 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %210, i64 0, i32 1, i32 0, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = icmp slt i64 %213, %211
  br i1 %214, label %251, label %215

215:                                              ; preds = %205
  %216 = icmp slt i64 %211, %213
  br i1 %216, label %245, label %217

217:                                              ; preds = %215
  %218 = load i8, i8* %124, align 1
  %219 = icmp slt i8 %218, 0
  %220 = load i64, i64* %125, align 8
  %221 = zext i8 %218 to i64
  %222 = select i1 %219, i64 %220, i64 %221
  %223 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %210 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  %227 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %228 = load i64, i64* %227, align 8
  %229 = zext i8 %225 to i64
  %230 = select i1 %226, i64 %228, i64 %229
  %231 = icmp ult i64 %222, %230
  %232 = select i1 %231, i64 %222, i64 %230
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %243, label %234

234:                                              ; preds = %217
  %235 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  %237 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %210 to i8*
  %238 = select i1 %226, i8* %236, i8* %237
  %239 = load i8*, i8** %126, align 8
  %240 = select i1 %219, i8* %239, i8* %127
  %241 = tail call i32 @memcmp(i8* %238, i8* %240, i64 %232) #9
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %249

243:                                              ; preds = %234, %217
  %244 = icmp ult i64 %230, %222
  br i1 %244, label %251, label %245

245:                                              ; preds = %243, %249, %215
  %246 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  %247 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %246, align 8
  %248 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %247 to i8*
  br label %128

249:                                              ; preds = %234
  %250 = icmp slt i32 %241, 0
  br i1 %250, label %251, label %245

251:                                              ; preds = %205, %249, %243, %142
  %252 = inttoptr i64 %131 to %"class.mojo::StructPtr"*
  %253 = inttoptr i64 %131 to i64*
  %254 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %252, i64 0, i32 0, i32 0, i32 0, i32 0
  %255 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %254, align 8
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %254, align 8
  %256 = icmp eq %"class.network::mojom::TrustTokenVerificationKey"* %255, null
  br i1 %256, label %257, label %258

257:                                              ; preds = %251
  store i64 %83, i64* %253, align 8
  br label %265

258:                                              ; preds = %251
  tail call void @_ZN7network5mojom25TrustTokenVerificationKeyD1Ev(%"class.network::mojom::TrustTokenVerificationKey"* nonnull %255) #9
  %259 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %255 to i8*
  tail call void @_ZdlPv(i8* %259) #10
  %260 = inttoptr i64 %131 to %"class.network::mojom::TrustTokenVerificationKey"**
  %261 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %260, align 8
  store i64 %83, i64* %253, align 8
  %262 = icmp eq %"class.network::mojom::TrustTokenVerificationKey"* %261, null
  br i1 %262, label %265, label %263

263:                                              ; preds = %258
  tail call void @_ZN7network5mojom25TrustTokenVerificationKeyD1Ev(%"class.network::mojom::TrustTokenVerificationKey"* nonnull %261) #9
  %264 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %261 to i8*
  tail call void @_ZdlPv(i8* %264) #10
  br label %265

265:                                              ; preds = %70, %119, %117, %257, %258, %263, %3, %8
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo9StructPtrIN7network5mojom25TrustTokenVerificationKeyEEENS_9allocatorIS6_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.mojo::StructPtr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.mojo::StructPtr"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.mojo::StructPtr"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %13, i64 %18, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.network::mojom::TrustTokenVerificationKey"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint %"class.mojo::StructPtr"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %190

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to %"class.mojo::StructPtr"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.mojo::StructPtr"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %57, i64 %33
  %59 = ptrtoint %"class.mojo::StructPtr"* %58 to i64
  %60 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %57, i64 %56
  %61 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  %63 = add i64 %62, -8
  %64 = lshr exact i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.mojo::StructPtr"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %69, i64 1
  %74 = ptrtoint %"class.mojo::StructPtr"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !2

77:                                               ; preds = %68
  %78 = ptrtoint %"class.mojo::StructPtr"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"class.mojo::StructPtr"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 56
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.mojo::StructPtr"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %84, i64 1
  %88 = bitcast %"class.mojo::StructPtr"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %84, i64 2
  %90 = bitcast %"class.mojo::StructPtr"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %84, i64 3
  %92 = bitcast %"class.mojo::StructPtr"* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %84, i64 4
  %94 = bitcast %"class.mojo::StructPtr"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %84, i64 5
  %96 = bitcast %"class.mojo::StructPtr"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %84, i64 6
  %98 = bitcast %"class.mojo::StructPtr"* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %84, i64 7
  %100 = bitcast %"class.mojo::StructPtr"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %84, i64 8
  %102 = ptrtoint %"class.mojo::StructPtr"* %101 to i64
  %103 = icmp eq %"class.mojo::StructPtr"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"class.mojo::StructPtr"* %60 to i64
  %106 = ptrtoint %"class.mojo::StructPtr"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %107, align 8
  %109 = ptrtoint %"class.mojo::StructPtr"* %108 to i64
  %110 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %6, align 8
  %111 = icmp eq %"class.mojo::StructPtr"* %110, %108
  br i1 %111, label %170, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %110, i64 -1, i32 0, i32 0, i32 0, i32 0
  %114 = ptrtoint %"class.network::mojom::TrustTokenVerificationKey"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %132, label %120

120:                                              ; preds = %112, %120
  %121 = phi %"class.mojo::StructPtr"* [ %124, %120 ], [ %58, %112 ]
  %122 = phi %"class.mojo::StructPtr"* [ %125, %120 ], [ %110, %112 ]
  %123 = phi i64 [ %130, %120 ], [ %118, %112 ]
  %124 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %121, i64 -1
  %125 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %122, i64 -1
  %126 = bitcast %"class.mojo::StructPtr"* %124 to i64*
  %127 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %127, align 8
  %128 = bitcast %"class.mojo::StructPtr"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %126, align 8
  store i64 0, i64* %128, align 8
  %130 = add i64 %123, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !4

132:                                              ; preds = %120, %112
  %133 = phi %"class.mojo::StructPtr"* [ undef, %112 ], [ %124, %120 ]
  %134 = phi %"class.mojo::StructPtr"* [ %58, %112 ], [ %124, %120 ]
  %135 = phi %"class.mojo::StructPtr"* [ %110, %112 ], [ %125, %120 ]
  %136 = icmp ult i64 %115, 24
  br i1 %136, label %165, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"class.mojo::StructPtr"* [ %158, %137 ], [ %134, %132 ]
  %139 = phi %"class.mojo::StructPtr"* [ %159, %137 ], [ %135, %132 ]
  %140 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %138, i64 -1
  %141 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %139, i64 -1
  %142 = bitcast %"class.mojo::StructPtr"* %140 to i64*
  %143 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %140, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %143, align 8
  %144 = bitcast %"class.mojo::StructPtr"* %141 to i64*
  %145 = load i64, i64* %144, align 8
  store i64 %145, i64* %142, align 8
  store i64 0, i64* %144, align 8
  %146 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %138, i64 -2
  %147 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %139, i64 -2
  %148 = bitcast %"class.mojo::StructPtr"* %146 to i64*
  %149 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %149, align 8
  %150 = bitcast %"class.mojo::StructPtr"* %147 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %148, align 8
  store i64 0, i64* %150, align 8
  %152 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %138, i64 -3
  %153 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %139, i64 -3
  %154 = bitcast %"class.mojo::StructPtr"* %152 to i64*
  %155 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %152, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %155, align 8
  %156 = bitcast %"class.mojo::StructPtr"* %153 to i64*
  %157 = load i64, i64* %156, align 8
  store i64 %157, i64* %154, align 8
  store i64 0, i64* %156, align 8
  %158 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %138, i64 -4
  %159 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %139, i64 -4
  %160 = bitcast %"class.mojo::StructPtr"* %158 to i64*
  %161 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %158, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %161, align 8
  %162 = bitcast %"class.mojo::StructPtr"* %159 to i64*
  %163 = load i64, i64* %162, align 8
  store i64 %163, i64* %160, align 8
  store i64 0, i64* %162, align 8
  %164 = icmp eq %"class.mojo::StructPtr"* %159, %108
  br i1 %164, label %165, label %137

165:                                              ; preds = %137, %132
  %166 = phi %"class.mojo::StructPtr"* [ %133, %132 ], [ %158, %137 ]
  %167 = ptrtoint %"class.mojo::StructPtr"* %166 to i64
  %168 = load i64, i64* %30, align 8
  %169 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %6, align 8
  br label %170

170:                                              ; preds = %104, %165
  %171 = phi %"class.mojo::StructPtr"* [ %169, %165 ], [ %108, %104 ]
  %172 = phi i64 [ %167, %165 ], [ %59, %104 ]
  %173 = phi i64 [ %168, %165 ], [ %109, %104 ]
  store i64 %172, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %174 = inttoptr i64 %173 to %"class.mojo::StructPtr"*
  %175 = icmp eq %"class.mojo::StructPtr"* %171, %174
  br i1 %175, label %186, label %176

176:                                              ; preds = %170, %184
  %177 = phi %"class.mojo::StructPtr"* [ %178, %184 ], [ %171, %170 ]
  %178 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %177, i64 -1
  %179 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %178, i64 0, i32 0, i32 0, i32 0, i32 0
  %180 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %179, align 8
  store %"class.network::mojom::TrustTokenVerificationKey"* null, %"class.network::mojom::TrustTokenVerificationKey"** %179, align 8
  %181 = icmp eq %"class.network::mojom::TrustTokenVerificationKey"* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %176
  tail call void @_ZN7network5mojom25TrustTokenVerificationKeyD1Ev(%"class.network::mojom::TrustTokenVerificationKey"* nonnull %180) #9
  %183 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %180 to i8*
  tail call void @_ZdlPv(i8* %183) #10
  br label %184

184:                                              ; preds = %182, %176
  %185 = icmp eq %"class.mojo::StructPtr"* %178, %174
  br i1 %185, label %186, label %176

186:                                              ; preds = %184, %170
  %187 = icmp eq i64 %173, 0
  br i1 %187, label %190, label %188

188:                                              ; preds = %186
  %189 = inttoptr i64 %173 to i8*
  tail call void @_ZdlPv(i8* %189) #10
  br label %190

190:                                              ; preds = %188, %186, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
