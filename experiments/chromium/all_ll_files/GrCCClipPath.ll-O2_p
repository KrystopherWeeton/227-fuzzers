; ModuleID = '../../third_party/skia/src/gpu/ccpr/GrCCClipPath.cpp'
source_filename = "../../third_party/skia/src/gpu/ccpr/GrCCClipPath.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrCCClipPath = type { %class.SkRefCnt.base, [4 x i8], %class.SkPath, %struct.SkIRect, %struct.SkIRect, %class.sk_sp.13, %struct.SkIPoint }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.13 = type { %class.GrTextureProxy* }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.18", %class.GrSurfaceProxy }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.14, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.sk_sp.14 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.15, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.15 = type { %"struct.std::__1::atomic" }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.17 }
%class.sk_sp.17 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.24, %class.sk_sp.25, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.61" }
%class.SkNVRefCnt.24 = type { %"struct.std::__1::atomic" }
%class.sk_sp.25 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.26 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.26 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.27, void (i8*)*, i8* }
%class.SkNVRefCnt.27 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.28, i32, [4 x i8] }
%union.anon.28 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.25, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.58, %class.sk_sp.60, %class.sk_sp.60 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.30, %class.SkTMultiMap, %class.SkTDynamicHash.40, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.30 }
%class.SkTDArray.30 = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.31, i32, [4 x i8] }>
%class.SkTDynamicHash.31 = type { %class.SkTHashTable.32 }
%class.SkTHashTable.32 = type { i32, i32, %class.SkAutoTArray.33 }
%class.SkAutoTArray.33 = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.40 = type { %class.SkTHashTable.41 }
%class.SkTHashTable.41 = type { i32, i32, %class.SkAutoTArray.42 }
%class.SkAutoTArray.42 = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.49, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.49 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.50 }
%class.SkTHashTable.50 = type { i32, i32, %class.SkAutoTArray.51 }
%class.SkAutoTArray.51 = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.58 = type { %class.GrCaps* }
%class.sk_sp.60 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.59, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.59 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.GrCCAtlas::Specs" = type { i32, i32, i32, i32, i32 }
%class.GrCCAtlas = type { %class.GrDynamicAtlas }
%class.GrDynamicAtlas = type { i32 (...)**, i32, i8, i32, i32, i32, i32, %struct.SkISize, %class.SkSTArenaAllocWithReset, %"class.GrDynamicAtlas::Node"*, %class.sk_sp.13, %class.sk_sp.69 }
%class.SkSTArenaAllocWithReset = type { %"struct.std::__1::array", %class.SkArenaAllocWithReset }
%"struct.std::__1::array" = type { [512 x i8] }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkFibBlockSizes = type { i32 }
%"class.GrDynamicAtlas::Node" = type opaque
%class.sk_sp.69 = type { %class.GrTexture* }
%class.GrCCPerFlushResources = type { %class.GrNonAtomicRef, %"struct.GrCCAtlas::Specs", [2 x %"struct.GrCCPerFlushResources::AtlasPaths"], %"class.std::__1::unique_ptr.66" }
%class.GrNonAtomicRef = type { i32 }
%"struct.GrCCPerFlushResources::AtlasPaths" = type { %class.SkPath, %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.73 }
%class.SkAlignedSTStorage = type { [1024 x i8] }
%class.SkTArray.73 = type { %"class.std::__1::tuple"*, i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.74" }
%"class.std::__1::__tuple_leaf" = type { %class.SkPath }
%"class.std::__1::__tuple_leaf.74" = type { %struct.SkIRect }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.GrCCAtlas* }
%class.GrOnFlushResourceProvider = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN12GrCCClipPathD2Ev = comdat any

$_ZN12GrCCClipPathD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZTV12GrCCClipPath = comdat any

@_ZTV12GrCCClipPath = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrCCClipPath*)* @_ZN12GrCCClipPathD2Ev to i8*), i8* bitcast (void (%class.GrCCClipPath*)* @_ZN12GrCCClipPathD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNSF_15LazySurfaceDescEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCaps = hidden unnamed_addr alias void (%class.GrCCClipPath*, %class.SkPath*, %struct.SkIRect*, %class.GrCaps*), void (%class.GrCCClipPath*, %class.SkPath*, %struct.SkIRect*, %class.GrCaps*)* @_ZN12GrCCClipPathC2ERK6SkPathRK7SkIRectRK6GrCaps

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12GrCCClipPathC2ERK6SkPathRK7SkIRectRK6GrCaps(%class.GrCCClipPath*, %class.SkPath* dereferenceable(16), %struct.SkIRect* nocapture readonly dereferenceable(16), %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::function", align 8
  %6 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12GrCCClipPath, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 2
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %8, %class.SkPath* dereferenceable(16) %1) #7
  %9 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 3
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %8, i64 0, i32 0, i32 0
  %11 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 9
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 1
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 3, i32 0
  %18 = load %struct.SkPoint*, %struct.SkPoint** %17, align 8
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 3, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %16, %struct.SkPoint* %18, i32 %20) #7
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 10
  %23 = zext i1 %21 to i8
  store i8 %23, i8* %22, align 1
  store i8 0, i8* %12, align 8
  br label %24

24:                                               ; preds = %4, %15
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 1, i32 0
  %26 = load float, float* %25, align 4
  %27 = tail call float @llvm.floor.f32(float %26) #7
  %28 = fcmp olt float %27, 0x41DFFFFFE0000000
  %29 = select i1 %28, float %27, float 0x41DFFFFFE0000000
  %30 = fcmp ogt float %29, 0xC1DFFFFFE0000000
  %31 = select i1 %30, float %29, float 0xC1DFFFFFE0000000
  %32 = fptosi float %31 to i32
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 1, i32 1
  %34 = load float, float* %33, align 4
  %35 = tail call float @llvm.floor.f32(float %34) #7
  %36 = fcmp olt float %35, 0x41DFFFFFE0000000
  %37 = select i1 %36, float %35, float 0x41DFFFFFE0000000
  %38 = fcmp ogt float %37, 0xC1DFFFFFE0000000
  %39 = select i1 %38, float %37, float 0xC1DFFFFFE0000000
  %40 = fptosi float %39 to i32
  %41 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 1, i32 2
  %42 = load float, float* %41, align 4
  %43 = tail call float @llvm.ceil.f32(float %42) #7
  %44 = fcmp olt float %43, 0x41DFFFFFE0000000
  %45 = select i1 %44, float %43, float 0x41DFFFFFE0000000
  %46 = fcmp ogt float %45, 0xC1DFFFFFE0000000
  %47 = select i1 %46, float %45, float 0xC1DFFFFFE0000000
  %48 = fptosi float %47 to i32
  %49 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 1, i32 3
  %50 = load float, float* %49, align 4
  %51 = tail call float @llvm.ceil.f32(float %50) #7
  %52 = fcmp olt float %51, 0x41DFFFFFE0000000
  %53 = select i1 %52, float %51, float 0x41DFFFFFE0000000
  %54 = fcmp ogt float %53, 0xC1DFFFFFE0000000
  %55 = select i1 %54, float %53, float 0xC1DFFFFFE0000000
  %56 = fptosi float %55 to i32
  %57 = zext i32 %40 to i64
  %58 = shl nuw i64 %57, 32
  %59 = zext i32 %32 to i64
  %60 = or i64 %58, %59
  %61 = zext i32 %56 to i64
  %62 = shl nuw i64 %61, 32
  %63 = zext i32 %48 to i64
  %64 = or i64 %62, %63
  %65 = bitcast %struct.SkIRect* %9 to i64*
  store i64 %60, i64* %65, align 8
  %66 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 3, i32 2
  %67 = bitcast i32* %66 to i64*
  store i64 %64, i64* %67, align 8
  %68 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 4
  %69 = bitcast %struct.SkIRect* %68 to i8*
  %70 = bitcast %struct.SkIRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 4 %70, i64 16, i1 false)
  %71 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 5
  %72 = bitcast %"class.std::__1::function"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #7
  %73 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 2
  store void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* @"_ZNSt3__110__function16__policy_invokerIFN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS2_15LazySurfaceDescEEE11__call_implINS0_20__default_alloc_funcIZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsE3$_0S9_EEEES3_PKNS0_16__policy_storageES5_S8_", void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)** %73, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNSF_15LazySurfaceDescEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %74, align 8
  call void @_ZN14GrDynamicAtlas18MakeLazyAtlasProxyEONSt3__18functionIFN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS2_15LazySurfaceDescEEEE11GrColorTypeNS_19InternalMultisampleERK6GrCapsNS2_12UseAllocatorE(%class.sk_sp.13* sret %71, %"class.std::__1::function"* nonnull dereferenceable(32) %5, i32 1, i1 zeroext true, %class.GrCaps* dereferenceable(232) %3, i32 1) #7
  %75 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %75, i64 0, i32 1
  %77 = load void (i8*)*, void (i8*)** %76, align 8
  %78 = icmp eq void (i8*)* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %24
  %80 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void %77(i8* %81) #7
  br label %82

82:                                               ; preds = %24, %79
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #7
  ret void
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12GrCCClipPath17accountForOwnPathEPN9GrCCAtlas5SpecsE(%class.GrCCClipPath*, %"struct.GrCCAtlas::Specs"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkIRect, align 4
  %4 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7
  %5 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 4
  %6 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 3
  %7 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 -86, i64 16, i1 false)
  %8 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %3, %struct.SkIRect* dereferenceable(16) %5, %struct.SkIRect* dereferenceable(16) %6) #7
  br i1 %8, label %9, label %34

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %10, align 4
  %16 = sub i32 %14, %15
  %17 = load i32, i32* %11, align 4
  %18 = load i32, i32* %13, align 4
  %19 = sub i32 %17, %18
  %20 = getelementptr inbounds %"struct.GrCCAtlas::Specs", %"struct.GrCCAtlas::Specs"* %1, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, %16
  %23 = select i1 %22, i32 %21, i32 %16
  store i32 %23, i32* %20, align 4
  %24 = getelementptr inbounds %"struct.GrCCAtlas::Specs", %"struct.GrCCAtlas::Specs"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, %19
  %27 = select i1 %26, i32 %25, i32 %19
  store i32 %27, i32* %24, align 4
  %28 = add nsw i32 %16, 1
  %29 = add nsw i32 %19, 1
  %30 = mul nsw i32 %29, %28
  %31 = getelementptr inbounds %"struct.GrCCAtlas::Specs", %"struct.GrCCAtlas::Specs"* %1, i64 0, i32 4
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, %30
  store i32 %33, i32* %31, align 4
  br label %34

34:                                               ; preds = %9, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7
  ret void
}

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrCCAtlas* @_ZN12GrCCClipPath17renderPathInAtlasEP21GrCCPerFlushResourcesP25GrOnFlushResourceProvider(%class.GrCCClipPath*, %class.GrCCPerFlushResources*, %class.GrOnFlushResourceProvider*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 3
  %7 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 2, i32 4
  %8 = load i8, i8* %7, align 2
  %9 = and i8 %8, 1
  %10 = icmp ne i8 %9, 0
  %11 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 6
  %12 = tail call %class.GrCCAtlas* @_ZN21GrCCPerFlushResources28renderDeviceSpacePathInAtlasEP25GrOnFlushResourceProviderRK7SkIRectRK6SkPathS4_10GrFillRuleP8SkIPoint(%class.GrCCPerFlushResources* %1, %class.GrOnFlushResourceProvider* %2, %struct.SkIRect* dereferenceable(16) %4, %class.SkPath* dereferenceable(16) %5, %struct.SkIRect* dereferenceable(16) %6, i1 zeroext %10, %struct.SkIPoint* %11) #7
  ret %class.GrCCAtlas* %12
}

declare %class.GrCCAtlas* @_ZN21GrCCPerFlushResources28renderDeviceSpacePathInAtlasEP25GrOnFlushResourceProviderRK7SkIRectRK6SkPathS4_10GrFillRuleP8SkIPoint(%class.GrCCPerFlushResources*, %class.GrOnFlushResourceProvider*, %struct.SkIRect* dereferenceable(16), %class.SkPath* dereferenceable(16), %struct.SkIRect* dereferenceable(16), i1 zeroext, %struct.SkIPoint*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrCCClipPathD2Ev(%class.GrCCClipPath*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12GrCCClipPath, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 5, i32 0
  %4 = load %class.GrTextureProxy*, %class.GrTextureProxy** %3, align 8
  %5 = icmp eq %class.GrTextureProxy* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrTextureProxy* %4 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr i8, i8* %8, i64 -24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 8
  %13 = bitcast %class.GrTextureProxy* %4 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %12
  %15 = bitcast i8* %14 to i32*
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %25

18:                                               ; preds = %6
  %19 = getelementptr inbounds i8, i8* %13, i64 %11
  %20 = bitcast i8* %19 to %class.GrSurfaceProxy*
  %21 = bitcast i8* %19 to void (%class.GrSurfaceProxy*)***
  %22 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %22, i64 1
  %24 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %23, align 8
  tail call void %24(%class.GrSurfaceProxy* nonnull %20) #7
  br label %25

25:                                               ; preds = %1, %6, %18
  %26 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 2
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %26) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrCCClipPathD0Ev(%class.GrCCClipPath*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12GrCCClipPath, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 5, i32 0
  %4 = load %class.GrTextureProxy*, %class.GrTextureProxy** %3, align 8
  %5 = icmp eq %class.GrTextureProxy* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrTextureProxy* %4 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr i8, i8* %8, i64 -24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 8
  %13 = bitcast %class.GrTextureProxy* %4 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %12
  %15 = bitcast i8* %14 to i32*
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %25

18:                                               ; preds = %6
  %19 = getelementptr inbounds i8, i8* %13, i64 %11
  %20 = bitcast i8* %19 to %class.GrSurfaceProxy*
  %21 = bitcast i8* %19 to void (%class.GrSurfaceProxy*)***
  %22 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %22, i64 1
  %24 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %23, align 8
  tail call void %24(%class.GrSurfaceProxy* nonnull %20) #7
  br label %25

25:                                               ; preds = %1, %6, %18
  %26 = getelementptr inbounds %class.GrCCClipPath, %class.GrCCClipPath* %0, i64 0, i32 2
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %26) #7
  %27 = bitcast %class.GrCCClipPath* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #7
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

declare void @_ZN14GrDynamicAtlas18MakeLazyAtlasProxyEONSt3__18functionIFN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS2_15LazySurfaceDescEEEE11GrColorTypeNS_19InternalMultisampleERK6GrCapsNS2_12UseAllocatorE(%class.sk_sp.13* sret, %"class.std::__1::function"* dereferenceable(32), i32, i1 zeroext, %class.GrCaps* dereferenceable(232), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS2_15LazySurfaceDescEEE11__call_implINS0_20__default_alloc_funcIZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsE3$_0S9_EEEES3_PKNS0_16__policy_storageES5_S8_"(%"struct.GrSurfaceProxy::LazyCallbackResult"* noalias nocapture sret, %"union.std::__1::__function::__policy_storage"* nocapture readnone, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"* nocapture readnone dereferenceable(40)) #0 align 2 {
  %5 = getelementptr inbounds %"struct.GrSurfaceProxy::LazyCallbackResult", %"struct.GrSurfaceProxy::LazyCallbackResult"* %0, i64 0, i32 1
  %6 = bitcast %"struct.GrSurfaceProxy::LazyCallbackResult"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #7, !alias.scope !2
  store i32 1, i32* %5, align 8, !alias.scope !2
  %7 = getelementptr inbounds %"struct.GrSurfaceProxy::LazyCallbackResult", %"struct.GrSurfaceProxy::LazyCallbackResult"* %0, i64 0, i32 2
  store i8 1, i8* %7, align 4, !alias.scope !2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5, !7, !9}
!3 = distinct !{!3, !4, !"_ZZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsENK3$_0clEP18GrResourceProviderRKN14GrSurfaceProxy15LazySurfaceDescE: argument 0"}
!4 = distinct !{!4, !"_ZZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsENK3$_0clEP18GrResourceProviderRKN14GrSurfaceProxy15LazySurfaceDescE"}
!5 = distinct !{!5, !6, !"_ZNSt3__18__invokeIRZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsE3$_0JP18GrResourceProviderRKN14GrSurfaceProxy15LazySurfaceDescEEEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSJ_DpOSK_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__18__invokeIRZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsE3$_0JP18GrResourceProviderRKN14GrSurfaceProxy15LazySurfaceDescEEEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSJ_DpOSK_"}
!7 = distinct !{!7, !8, !"_ZNSt3__128__invoke_void_return_wrapperIN14GrSurfaceProxy18LazyCallbackResultELb0EE6__callIJRZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsE3$_0P18GrResourceProviderRKNS1_15LazySurfaceDescEEEES2_DpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__128__invoke_void_return_wrapperIN14GrSurfaceProxy18LazyCallbackResultELb0EE6__callIJRZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsE3$_0P18GrResourceProviderRKNS1_15LazySurfaceDescEEEES2_DpOT_"}
!9 = distinct !{!9, !10, !"_ZNSt3__110__function20__default_alloc_funcIZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNSD_15LazySurfaceDescEEEclEOSG_SJ_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__110__function20__default_alloc_funcIZN12GrCCClipPathC1ERK6SkPathRK7SkIRectRK6GrCapsE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNSD_15LazySurfaceDescEEEclEOSG_SJ_"}
