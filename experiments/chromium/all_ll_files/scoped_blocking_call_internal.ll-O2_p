; ModuleID = '../../base/threading/scoped_blocking_call_internal.cc'
source_filename = "../../base/threading/scoped_blocking_call_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.base::TimeDelta" = type { i64 }
%"class.base::NoDestructor" = type { [40 x i8] }
%"class.base::NoDestructor.3" = type { [8 x i8] }
%"class.base::NoDestructor.4" = type { [8 x i8] }
%"class.base::LazyInstance.23" = type { i64, [8 x i8] }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.5 }
%struct.anon.5 = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic.17", i32, i64, i64 }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.32 }
%union.anon.32 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::ThreadLocalPointer.24" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32, [4 x i8] }>

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNK4base9TimeDeltadvES0_ = comdat any

$_ZN4absl8optionalIN4base8internal22IOJankMonitoringWindow19ScopedMonitoredCallEE7emplaceIJEvEERS4_DpOT_ = comdat any

@_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN4base8internal22IOJankMonitoringWindow15kIOJankIntervalE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 1000000 }, align 8
@_ZN4base8internal22IOJankMonitoringWindow17kMonitoringWindowE = hidden constant %"class.base::TimeDelta" { i64 60000000 }, align 8
@_ZN4base8internal22IOJankMonitoringWindow23kTimeDiscrepancyTimeoutE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 10000000 }, align 8
@_ZN4base8internal22IOJankMonitoringWindow13kNumIntervalsE = hidden local_unnamed_addr constant i32 60, align 4
@.str = private unnamed_addr constant [33 x i8] c"MonitorNextJankWindowIfNecessary\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"../../base/threading/scoped_blocking_call_internal.cc\00", align 1
@_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock = internal global i64 0, align 8
@_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window = internal global %"class.base::NoDestructor.3" zeroinitializer, align 8
@_ZGVZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window = internal global i64 0, align 8
@_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback = internal global %"class.base::NoDestructor.4" zeroinitializer, align 8
@_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback = internal global i64 0, align 8
@_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE = internal global %"class.base::LazyInstance.23" zeroinitializer, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"timestamp_us\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"blocking_type\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1

@_ZN4base8internal22IOJankMonitoringWindow19ScopedMonitoredCallC1Ev = hidden unnamed_addr alias void (%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"*), void (%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"*)* @_ZN4base8internal22IOJankMonitoringWindow19ScopedMonitoredCallC2Ev
@_ZN4base8internal22IOJankMonitoringWindow19ScopedMonitoredCallD1Ev = hidden unnamed_addr alias void (%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"*), void (%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"*)* @_ZN4base8internal22IOJankMonitoringWindow19ScopedMonitoredCallD2Ev
@_ZN4base8internal22IOJankMonitoringWindowC1ENS_9TimeTicksE = hidden unnamed_addr alias void (%"class.base::internal::IOJankMonitoringWindow"*, i64), void (%"class.base::internal::IOJankMonitoringWindow"*, i64)* @_ZN4base8internal22IOJankMonitoringWindowC2ENS_9TimeTicksE
@_ZN4base8internal22IOJankMonitoringWindowD1Ev = hidden unnamed_addr alias void (%"class.base::internal::IOJankMonitoringWindow"*), void (%"class.base::internal::IOJankMonitoringWindow"*)* @_ZN4base8internal22IOJankMonitoringWindowD2Ev
@_ZN4base8internal27UncheckedScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeENS1_16BlockingCallTypeE = hidden unnamed_addr alias void (%"class.base::internal::UncheckedScopedBlockingCall"*, %"class.base::Location"*, i32, i32), void (%"class.base::internal::UncheckedScopedBlockingCall"*, %"class.base::Location"*, i32, i32)* @_ZN4base8internal27UncheckedScopedBlockingCallC2ERKNS_8LocationENS_12BlockingTypeENS1_16BlockingCallTypeE
@_ZN4base8internal27UncheckedScopedBlockingCallD1Ev = hidden unnamed_addr alias void (%"class.base::internal::UncheckedScopedBlockingCall"*), void (%"class.base::internal::UncheckedScopedBlockingCall"*)* @_ZN4base8internal27UncheckedScopedBlockingCallD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal35SetBlockingObserverForCurrentThreadEPNS0_16BlockingObserverE(%"class.base::internal::BlockingObserver"*) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0)) #10
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE to i8*)) #10
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::ThreadLocalPointer"*
  %12 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %11, i64 0, i32 0
  %13 = bitcast %"class.base::internal::BlockingObserver"* %0 to i8*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal37ClearBlockingObserverForCurrentThreadEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0)) #10
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE to i8*)) #10
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.base::ThreadLocalPointer"*
  %11 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %10, i64 0, i32 0
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* null) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22IOJankMonitoringWindow19ScopedMonitoredCallC2Ev(%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  %3 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall", %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %3, align 8
  %4 = tail call %"class.base::internal::IOJankMonitoringWindow"* @_ZN4base8internal22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksE(i64 %2)
  %5 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall", %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* %0, i64 0, i32 1, i32 0
  store %"class.base::internal::IOJankMonitoringWindow"* %4, %"class.base::internal::IOJankMonitoringWindow"** %5, align 8
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::internal::IOJankMonitoringWindow"* @_ZN4base8internal22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksE(i64) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %"class.base::internal::LockImpl"*)) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock) #10
  br label %10

10:                                               ; preds = %1, %6, %9
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %union.pthread_mutex_t*)) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %10
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %"class.base::internal::LockImpl"*)) #10
  br label %14

14:                                               ; preds = %10, %13
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21, !prof !2

17:                                               ; preds = %14
  %18 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback) #10
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** bitcast (%"class.base::NoDestructor.4"* @_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to %"class.base::internal::BindStateBase"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback) #10
  br label %21

21:                                               ; preds = %14, %17, %20
  %22 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** bitcast (%"class.base::NoDestructor.4"* @_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to %"class.base::internal::BindStateBase"**), align 8
  %23 = icmp eq %"class.base::internal::BindStateBase"* %22, null
  br i1 %23, label %97, label %24

24:                                               ; preds = %21
  %25 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to i8*) acquire, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %31, !prof !2

27:                                               ; preds = %24
  %28 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window) #10
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  store %"class.base::internal::IOJankMonitoringWindow"* null, %"class.base::internal::IOJankMonitoringWindow"** bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to %"class.base::internal::IOJankMonitoringWindow"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window) #10
  br label %31

31:                                               ; preds = %24, %27, %30
  %32 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to %"class.base::internal::IOJankMonitoringWindow"**), align 8
  %33 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %32, i64 0, i32 4, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %36, i64 60000000) #10
  %38 = extractvalue { i64, i1 } %37, 1
  %39 = extractvalue { i64, i1 } %37, 0
  %40 = select i1 %38, i64 9223372036854775807, i64 %39, !prof !4
  %41 = icmp sgt i64 %40, %0
  br i1 %41, label %42, label %46

42:                                               ; preds = %34
  %43 = ptrtoint %"class.base::internal::IOJankMonitoringWindow"* %32 to i64
  %44 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 1 monotonic
  br label %97

46:                                               ; preds = %31, %34
  %47 = phi i64 [ %40, %34 ], [ %0, %31 ]
  %48 = sub nsw i64 %0, %47
  %49 = icmp sgt i64 %48, 9999999
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %32, i64 0, i32 6
  store i8 1, i8* %51, align 8
  br label %52

52:                                               ; preds = %46, %50
  %53 = phi i64 [ %0, %50 ], [ %47, %46 ]
  %54 = tail call i8* @_Znwm(i64 552) #11
  %55 = bitcast i8* %54 to i32*
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %54, i64 8
  %57 = bitcast i8* %56 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %57) #10
  %58 = getelementptr i8, i8* %54, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 480, i1 false) #10
  %59 = getelementptr inbounds i8, i8* %54, i64 528
  %60 = bitcast i8* %59 to i64*
  store i64 %53, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %54, i64 536
  %62 = bitcast i8* %61 to %"class.base::internal::IOJankMonitoringWindow"**
  store %"class.base::internal::IOJankMonitoringWindow"* null, %"class.base::internal::IOJankMonitoringWindow"** %62, align 8
  %63 = getelementptr inbounds i8, i8* %54, i64 544
  store i8 0, i8* %63, align 8
  %64 = atomicrmw add i32* %55, i32 1 monotonic
  %65 = ptrtoint i8* %54 to i64
  %66 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to %"class.base::internal::IOJankMonitoringWindow"**), align 8
  %67 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %52
  %69 = atomicrmw add i32* %55, i32 1 monotonic
  store i64 %65, i64* bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to i64*), align 8
  br label %100

70:                                               ; preds = %52
  %71 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %66, i64 0, i32 6
  %72 = load i8, i8* %71, align 8, !range !5
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %87

74:                                               ; preds = %70
  %75 = atomicrmw add i32* %55, i32 1 monotonic
  %76 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %66, i64 0, i32 5
  %77 = bitcast %class.scoped_refptr* %76 to i64*
  %78 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %76, i64 0, i32 0
  %79 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %78, align 8
  store i64 %65, i64* %77, align 8
  %80 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw sub i32* %82, i32 1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %79) #10
  %86 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %79 to i8*
  tail call void @_ZdlPv(i8* %86) #11
  br label %87

87:                                               ; preds = %85, %81, %74, %70
  %88 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to %"class.base::internal::IOJankMonitoringWindow"**), align 8
  %89 = atomicrmw add i32* %55, i32 1 monotonic
  store i64 %65, i64* bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to i64*), align 8
  %90 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %88, null
  br i1 %90, label %100, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw sub i32* %92, i32 1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %100

95:                                               ; preds = %91
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %88) #10
  %96 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %88 to i8*
  tail call void @_ZdlPv(i8* %96) #11
  br label %100

97:                                               ; preds = %21, %42
  %98 = phi i64 [ 0, %21 ], [ %43, %42 ]
  %99 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %union.pthread_mutex_t*)) #10
  br label %111

100:                                              ; preds = %68, %87, %91, %95
  %101 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %union.pthread_mutex_t*)) #10
  %102 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 156) #10
  %103 = call i8* @_Znwm(i64 40) #11, !noalias !6
  %104 = bitcast i8* %103 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %104, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZNS0_22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksEE3$_0JEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZNS0_22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksEE3$_0JEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !6
  %105 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %103, i8** %105, align 8, !alias.scope !6
  %106 = load i64, i64* %60, align 8
  %107 = sub nsw i64 %0, %106
  %108 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull @_ZN4base8internal22IOJankMonitoringWindow17kMonitoringWindowE, i64 %107)
  %109 = call zeroext i1 @_ZN4base10ThreadPool15PostDelayedTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3, i64 %108) #10
  %110 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %110) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #10
  br label %111

111:                                              ; preds = %100, %97
  %112 = phi i64 [ %65, %100 ], [ %98, %97 ]
  %113 = inttoptr i64 %112 to %"class.base::internal::IOJankMonitoringWindow"*
  ret %"class.base::internal::IOJankMonitoringWindow"* %113
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22IOJankMonitoringWindow19ScopedMonitoredCallD2Ev(%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall", %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %2, align 8
  %4 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall", %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  tail call void @_ZN4base8internal22IOJankMonitoringWindow23OnBlockingCallCompletedENS_9TimeTicksES2_(%"class.base::internal::IOJankMonitoringWindow"* nonnull %3, i64 %7, i64 %8)
  %9 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %2, align 8
  %10 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %9) #10
  %16 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %9 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %1, %5, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22IOJankMonitoringWindow23OnBlockingCallCompletedENS_9TimeTicksES2_(%"class.base::internal::IOJankMonitoringWindow"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = sub nsw i64 %2, %1
  %7 = icmp slt i64 %6, 1000000
  br i1 %7, label %148, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %10, i64 60000000) #10
  %12 = extractvalue { i64, i1 } %11, 1
  %13 = extractvalue { i64, i1 } %11, 0
  %14 = select i1 %12, i64 9223372036854775807, i64 %13, !prof !4
  %15 = icmp sgt i64 %14, %2
  br i1 %15, label %25, label %16

16:                                               ; preds = %8
  %17 = tail call %"class.base::internal::IOJankMonitoringWindow"* @_ZN4base8internal22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksE(i64 %2)
  %18 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %17) #10
  %24 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %17 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %8, %23, %19, %16
  %26 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %27 = load i64, i64* %9, align 8
  %28 = sub nsw i64 %1, %27
  %29 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %4, i64 1000000)
  %31 = call double @llvm.floor.f64(double %30) #10
  %32 = fcmp ult double %31, 0xC1E0000000000000
  %33 = fcmp ugt double %31, 0x41DFFFFFFFC00000
  %34 = fcmp ogt double %31, 0xC1E0000000000000
  %35 = select i1 %34, double %31, double 0xC1E0000000000000
  %36 = fptosi double %35 to i32
  %37 = select i1 %32, i32 0, i32 2147483647
  %38 = select i1 %33, i32 %37, i32 %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  %39 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %6, i64* %40, align 8
  %41 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %5, i64 1000000)
  %42 = fcmp oge double %41, 0.000000e+00
  %43 = fadd double %41, 5.000000e-01
  %44 = call double @llvm.floor.f64(double %43) #10
  %45 = fadd double %41, -5.000000e-01
  %46 = call double @llvm.ceil.f64(double %45) #10
  %47 = select i1 %42, double %44, double %46
  %48 = fcmp ult double %47, 0xC1E0000000000000
  %49 = fcmp ugt double %47, 0x41DFFFFFFFC00000
  %50 = fcmp ogt double %47, 0xC1E0000000000000
  %51 = select i1 %50, double %47, double 0xC1E0000000000000
  %52 = fptosi double %51 to i32
  %53 = select i1 %48, i32 0, i32 2147483647
  %54 = select i1 %49, i32 %53, i32 %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  br label %55

55:                                               ; preds = %143, %25
  %56 = phi %"class.base::internal::IOJankMonitoringWindow"* [ %0, %25 ], [ %145, %143 ]
  %57 = phi i32 [ %38, %25 ], [ 0, %143 ]
  %58 = phi i32 [ %54, %25 ], [ %147, %143 ]
  %59 = add nsw i32 %58, %57
  %60 = icmp slt i32 %59, 60
  %61 = select i1 %60, i32 %59, i32 60
  %62 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %56, i64 0, i32 2
  %63 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %62, i64 0, i32 0, i32 0
  %64 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %63) #10
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66, !prof !3

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %62, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %67) #10
  br label %68

68:                                               ; preds = %66, %55
  %69 = icmp slt i32 %57, %61
  br i1 %69, label %70, label %133

70:                                               ; preds = %68
  %71 = sext i32 %57 to i64
  %72 = sext i32 %61 to i64
  %73 = sub nsw i64 %72, %71
  %74 = icmp ult i64 %73, 4
  br i1 %74, label %75, label %77

75:                                               ; preds = %131, %70
  %76 = phi i64 [ %71, %70 ], [ %79, %131 ]
  br label %136

77:                                               ; preds = %70
  %78 = and i64 %73, -4
  %79 = add nsw i64 %78, %71
  %80 = add nsw i64 %78, -4
  %81 = lshr exact i64 %80, 2
  %82 = add nuw nsw i64 %81, 1
  %83 = and i64 %82, 1
  %84 = icmp eq i64 %80, 0
  br i1 %84, label %116, label %85

85:                                               ; preds = %77
  %86 = sub nuw nsw i64 %82, %83
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi i64 [ 0, %85 ], [ %113, %87 ]
  %89 = phi i64 [ %86, %85 ], [ %114, %87 ]
  %90 = add i64 %88, %71
  %91 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %56, i64 0, i32 3, i64 %90
  %92 = bitcast i64* %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8
  %94 = getelementptr inbounds i64, i64* %91, i64 2
  %95 = bitcast i64* %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  %97 = add <2 x i64> %93, <i64 1, i64 1>
  %98 = add <2 x i64> %96, <i64 1, i64 1>
  %99 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %99, align 8
  %100 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %98, <2 x i64>* %100, align 8
  %101 = or i64 %88, 4
  %102 = add i64 %101, %71
  %103 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %56, i64 0, i32 3, i64 %102
  %104 = bitcast i64* %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8
  %106 = getelementptr inbounds i64, i64* %103, i64 2
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8
  %109 = add <2 x i64> %105, <i64 1, i64 1>
  %110 = add <2 x i64> %108, <i64 1, i64 1>
  %111 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %111, align 8
  %112 = bitcast i64* %106 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %112, align 8
  %113 = add i64 %88, 8
  %114 = add i64 %89, -2
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %87, !llvm.loop !11

116:                                              ; preds = %87, %77
  %117 = phi i64 [ 0, %77 ], [ %113, %87 ]
  %118 = icmp eq i64 %83, 0
  br i1 %118, label %131, label %119

119:                                              ; preds = %116
  %120 = add i64 %117, %71
  %121 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %56, i64 0, i32 3, i64 %120
  %122 = bitcast i64* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8
  %124 = getelementptr inbounds i64, i64* %121, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8
  %127 = add <2 x i64> %123, <i64 1, i64 1>
  %128 = add <2 x i64> %126, <i64 1, i64 1>
  %129 = bitcast i64* %121 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %129, align 8
  %130 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %130, align 8
  br label %131

131:                                              ; preds = %116, %119
  %132 = icmp eq i64 %73, %78
  br i1 %132, label %133, label %75

133:                                              ; preds = %136, %131, %68
  %134 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %63) #10
  %135 = icmp slt i32 %59, 61
  br i1 %135, label %148, label %143

136:                                              ; preds = %75, %136
  %137 = phi i64 [ %141, %136 ], [ %76, %75 ]
  %138 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %56, i64 0, i32 3, i64 %137
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %138, align 8
  %141 = add nsw i64 %137, 1
  %142 = icmp slt i64 %141, %72
  br i1 %142, label %136, label %133, !llvm.loop !13

143:                                              ; preds = %133
  %144 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %56, i64 0, i32 5, i32 0
  %145 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %144, align 8
  %146 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %145, null
  %147 = sub nsw i32 %59, %61
  br i1 %146, label %148, label %55

148:                                              ; preds = %143, %133, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22IOJankMonitoringWindow19ScopedMonitoredCall6CancelEv(%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall", %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* %0, i64 0, i32 1
  %3 = bitcast %class.scoped_refptr* %2 to i64*
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %5 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %5) #10
  %12 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %5 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  br label %13

13:                                               ; preds = %1, %7, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22IOJankMonitoringWindowC2ENS_9TimeTicksE(%"class.base::internal::IOJankMonitoringWindow"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %4) #10
  %5 = getelementptr %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 3, i64 0
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 480, i1 false)
  %7 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 5, i32 0
  store %"class.base::internal::IOJankMonitoringWindow"* null, %"class.base::internal::IOJankMonitoringWindow"** %8, align 8
  %9 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 6
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22IOJankMonitoringWindow26CancelMonitoringForTestingEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.base::RepeatingCallback", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %"class.base::internal::LockImpl"*)) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock) #10
  br label %8

8:                                                ; preds = %0, %4, %7
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %union.pthread_mutex_t*)) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %8
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %"class.base::internal::LockImpl"*)) #10
  br label %12

12:                                               ; preds = %8, %11
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19, !prof !2

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window) #10
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  store %"class.base::internal::IOJankMonitoringWindow"* null, %"class.base::internal::IOJankMonitoringWindow"** bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to %"class.base::internal::IOJankMonitoringWindow"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window) #10
  br label %19

19:                                               ; preds = %12, %15, %18
  %20 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to %"class.base::internal::IOJankMonitoringWindow"**), align 8
  store i64 0, i64* bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to i64*), align 8
  %21 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %20) #10
  %27 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %20 to i8*
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %19, %22, %26
  %29 = bitcast %"class.base::RepeatingCallback"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8, !alias.scope !15
  %31 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to i8*) acquire, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %37, !prof !2

33:                                               ; preds = %28
  %34 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback) #10
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** bitcast (%"class.base::NoDestructor.4"* @_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to %"class.base::internal::BindStateBase"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback) #10
  br label %37

37:                                               ; preds = %28, %33, %36
  %38 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %39 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* bitcast (%"class.base::NoDestructor.4"* @_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to %"class.base::internal::CallbackBaseCopyable"*), %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %38) #10
  %40 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  %41 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %union.pthread_mutex_t*)) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.base::Lock"* @_ZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %"class.base::internal::LockImpl"*)) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock) #10
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.base::Lock"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %"class.base::Lock"*)
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEv() local_unnamed_addr #3 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store %"class.base::internal::IOJankMonitoringWindow"* null, %"class.base::internal::IOJankMonitoringWindow"** bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to %"class.base::internal::IOJankMonitoringWindow"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window) #10
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %class.scoped_refptr* bitcast (%"class.base::NoDestructor.3"* @_ZZN4base8internal22IOJankMonitoringWindow27current_jank_window_storageEvE19current_jank_window to %class.scoped_refptr*)
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden dereferenceable(8) %"class.base::RepeatingCallback"* @_ZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEv() local_unnamed_addr #3 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** bitcast (%"class.base::NoDestructor.4"* @_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to %"class.base::internal::BindStateBase"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback) #10
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.base::RepeatingCallback"* bitcast (%"class.base::NoDestructor.4"* @_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to %"class.base::RepeatingCallback"*)
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4base10ThreadPool15PostDelayedTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*, i64) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #10
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !4
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %60

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 3, i64 0
  %7 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 3, i64 60
  br label %20

8:                                                ; preds = %20
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !2

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback) #10
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** bitcast (%"class.base::NoDestructor.4"* @_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to %"class.base::internal::BindStateBase"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback) #10
  br label %15

15:                                               ; preds = %8, %11, %14
  %16 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** bitcast (%"class.base::NoDestructor.4"* @_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to %"class.base::internal::BindStateBase"**), align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %18 = bitcast void ()** %17 to void (%"class.base::internal::BindStateBase"*, i32, i32)**
  %19 = load void (%"class.base::internal::BindStateBase"*, i32, i32)*, void (%"class.base::internal::BindStateBase"*, i32, i32)** %18, align 8
  tail call void %19(%"class.base::internal::BindStateBase"* %16, i32 %56, i32 %57) #10
  br label %60

20:                                               ; preds = %20, %5
  %21 = phi i64* [ %6, %5 ], [ %58, %20 ]
  %22 = phi i32 [ 0, %5 ], [ %57, %20 ]
  %23 = phi i32 [ 0, %5 ], [ %56, %20 ]
  %24 = load i64, i64* %21, align 8
  %25 = icmp ne i64 %24, 0
  %26 = trunc i64 %24 to i32
  %27 = zext i1 %25 to i32
  %28 = add nuw nsw i32 %23, %27
  %29 = add i32 %22, %26
  %30 = getelementptr inbounds i64, i64* %21, i64 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ne i64 %31, 0
  %33 = trunc i64 %31 to i32
  %34 = zext i1 %32 to i32
  %35 = add nuw nsw i32 %28, %34
  %36 = add i32 %29, %33
  %37 = getelementptr inbounds i64, i64* %21, i64 2
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  %40 = trunc i64 %38 to i32
  %41 = zext i1 %39 to i32
  %42 = add nuw nsw i32 %35, %41
  %43 = add i32 %36, %40
  %44 = getelementptr inbounds i64, i64* %21, i64 3
  %45 = load i64, i64* %44, align 8
  %46 = icmp ne i64 %45, 0
  %47 = trunc i64 %45 to i32
  %48 = zext i1 %46 to i32
  %49 = add nuw nsw i32 %42, %48
  %50 = add i32 %43, %47
  %51 = getelementptr inbounds i64, i64* %21, i64 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ne i64 %52, 0
  %54 = trunc i64 %52 to i32
  %55 = zext i1 %53 to i32
  %56 = add nuw nsw i32 %49, %55
  %57 = add i32 %50, %54
  %58 = getelementptr inbounds i64, i64* %21, i64 5
  %59 = icmp eq i64* %58, %7
  br i1 %59, label %8, label %20

60:                                               ; preds = %1, %15
  %61 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 5, i32 0
  %62 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %61, align 8
  %63 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw sub i32* %65, i32 1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %62) #10
  %69 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %62 to i8*
  tail call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %64, %68, %60
  %71 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %71) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0)) #10
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0)) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22IOJankMonitoringWindow7AddJankEii(%"class.base::internal::IOJankMonitoringWindow"*, i32, i32) local_unnamed_addr #0 align 2 {
  br label %4

4:                                                ; preds = %92, %3
  %5 = phi %"class.base::internal::IOJankMonitoringWindow"* [ %0, %3 ], [ %94, %92 ]
  %6 = phi i32 [ %1, %3 ], [ 0, %92 ]
  %7 = phi i32 [ %2, %3 ], [ %96, %92 ]
  %8 = add nsw i32 %7, %6
  %9 = icmp slt i32 %8, 60
  %10 = select i1 %9, i32 %8, i32 60
  %11 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %5, i64 0, i32 2
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0, i32 0
  %13 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %12) #10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15, !prof !3

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %16) #10
  br label %17

17:                                               ; preds = %4, %15
  %18 = icmp slt i32 %6, %10
  br i1 %18, label %19, label %82

19:                                               ; preds = %17
  %20 = sext i32 %6 to i64
  %21 = sext i32 %10 to i64
  %22 = sub nsw i64 %21, %20
  %23 = icmp ult i64 %22, 4
  br i1 %23, label %24, label %26

24:                                               ; preds = %80, %19
  %25 = phi i64 [ %20, %19 ], [ %28, %80 ]
  br label %85

26:                                               ; preds = %19
  %27 = and i64 %22, -4
  %28 = add nsw i64 %27, %20
  %29 = add nsw i64 %27, -4
  %30 = lshr exact i64 %29, 2
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %29, 0
  br i1 %33, label %65, label %34

34:                                               ; preds = %26
  %35 = sub nuw nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %62, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %63, %36 ]
  %39 = add i64 %37, %20
  %40 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %5, i64 0, i32 3, i64 %39
  %41 = bitcast i64* %40 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = getelementptr inbounds i64, i64* %40, i64 2
  %44 = bitcast i64* %43 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 8
  %46 = add <2 x i64> %42, <i64 1, i64 1>
  %47 = add <2 x i64> %45, <i64 1, i64 1>
  %48 = bitcast i64* %40 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %48, align 8
  %49 = bitcast i64* %43 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %49, align 8
  %50 = or i64 %37, 4
  %51 = add i64 %50, %20
  %52 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %5, i64 0, i32 3, i64 %51
  %53 = bitcast i64* %52 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 8
  %55 = getelementptr inbounds i64, i64* %52, i64 2
  %56 = bitcast i64* %55 to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 8
  %58 = add <2 x i64> %54, <i64 1, i64 1>
  %59 = add <2 x i64> %57, <i64 1, i64 1>
  %60 = bitcast i64* %52 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %60, align 8
  %61 = bitcast i64* %55 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %61, align 8
  %62 = add i64 %37, 8
  %63 = add i64 %38, -2
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %36, !llvm.loop !18

65:                                               ; preds = %36, %26
  %66 = phi i64 [ 0, %26 ], [ %62, %36 ]
  %67 = icmp eq i64 %32, 0
  br i1 %67, label %80, label %68

68:                                               ; preds = %65
  %69 = add i64 %66, %20
  %70 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %5, i64 0, i32 3, i64 %69
  %71 = bitcast i64* %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8
  %73 = getelementptr inbounds i64, i64* %70, i64 2
  %74 = bitcast i64* %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8
  %76 = add <2 x i64> %72, <i64 1, i64 1>
  %77 = add <2 x i64> %75, <i64 1, i64 1>
  %78 = bitcast i64* %70 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %78, align 8
  %79 = bitcast i64* %73 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %79, align 8
  br label %80

80:                                               ; preds = %65, %68
  %81 = icmp eq i64 %22, %27
  br i1 %81, label %82, label %24

82:                                               ; preds = %85, %80, %17
  %83 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #10
  %84 = icmp slt i32 %8, 61
  br i1 %84, label %97, label %92

85:                                               ; preds = %24, %85
  %86 = phi i64 [ %90, %85 ], [ %25, %24 ]
  %87 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %5, i64 0, i32 3, i64 %86
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %87, align 8
  %90 = add nsw i64 %86, 1
  %91 = icmp slt i64 %90, %21
  br i1 %91, label %85, label %82, !llvm.loop !19

92:                                               ; preds = %82
  %93 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %5, i64 0, i32 5, i32 0
  %94 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %93, align 8
  %95 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %94, null
  %96 = sub nsw i32 %8, %10
  br i1 %95, label %97, label %4

97:                                               ; preds = %92, %82
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal27UncheckedScopedBlockingCallC2ERKNS_8LocationENS_12BlockingTypeENS1_16BlockingCallTypeE(%"class.base::internal::UncheckedScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 0
  %9 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0) acquire, align 8
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %16, label %11

11:                                               ; preds = %4
  %12 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0)) #10
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE to i8*)) #10
  br label %16

14:                                               ; preds = %11
  %15 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 0) acquire, align 8
  br label %16

16:                                               ; preds = %4, %13, %14
  %17 = phi i64 [ %9, %4 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base8internal12_GLOBAL__N_121tls_blocking_observerE, i64 0, i32 1, i64 0) to i64), %13 ], [ %15, %14 ]
  %18 = inttoptr i64 %17 to %"class.base::ThreadLocalPointer"*
  %19 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %18, i64 0, i32 0
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  %21 = bitcast %"class.base::internal::UncheckedScopedBlockingCall"* %0 to i8**
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 1
  %23 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0) acquire, align 8
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %30, label %25

25:                                               ; preds = %16
  %26 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0)) #10
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE to i8*)) #10
  br label %30

28:                                               ; preds = %25
  %29 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0) acquire, align 8
  br label %30

30:                                               ; preds = %16, %27, %28
  %31 = phi i64 [ %23, %16 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to i64), %27 ], [ %29, %28 ]
  %32 = inttoptr i64 %31 to %"class.base::ThreadLocalPointer.24"*
  %33 = getelementptr inbounds %"class.base::ThreadLocalPointer.24", %"class.base::ThreadLocalPointer.24"* %32, i64 0, i32 0
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #10
  %35 = bitcast %"class.base::internal::UncheckedScopedBlockingCall"** %22 to i8**
  store i8* %34, i8** %35, align 8
  %36 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 2
  %37 = icmp eq i32 %2, 1
  br i1 %37, label %43, label %38

38:                                               ; preds = %30
  %39 = icmp eq i8* %34, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds i8, i8* %34, i64 16
  %42 = load i8, i8* %41, align 8, !range !5
  br label %43

43:                                               ; preds = %38, %40, %30
  %44 = phi i8 [ 1, %30 ], [ 0, %38 ], [ %42, %40 ]
  store i8 %44, i8* %36, align 8
  %45 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 4
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %7, %"class.base::Location"* dereferenceable(32) %1) #10
  %46 = getelementptr inbounds %"class.base::Location", %"class.base::Location"* %7, i64 0, i32 3
  %47 = load i8*, i8** %46, align 8
  call void @_ZN4base5debug14ScopedActivityC2EPKvhji(%"class.base::debug::ScopedActivity"* %45, i8* %47, i8 zeroext 0, i32 297703701, i32 0) #10
  %48 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 5
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %49, align 8
  %50 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0) acquire, align 8
  %51 = icmp ugt i64 %50, 1
  br i1 %51, label %57, label %52

52:                                               ; preds = %43
  %53 = call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0)) #10
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to i64*), align 8
  call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #10
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE to i8*)) #10
  br label %57

55:                                               ; preds = %52
  %56 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0) acquire, align 8
  br label %57

57:                                               ; preds = %43, %54, %55
  %58 = phi i64 [ %50, %43 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to i64), %54 ], [ %56, %55 ]
  %59 = inttoptr i64 %58 to %"class.base::ThreadLocalPointer.24"*
  %60 = getelementptr inbounds %"class.base::ThreadLocalPointer.24", %"class.base::ThreadLocalPointer.24"* %59, i64 0, i32 0
  %61 = bitcast %"class.base::internal::UncheckedScopedBlockingCall"* %0 to i8*
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %60, i8* %61) #10
  %62 = call zeroext i8 @_ZN4base8internal31GetTaskPriorityForCurrentThreadEv() #10
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = call zeroext i1 @_ZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEv() #10
  br i1 %65, label %95, label %66

66:                                               ; preds = %57, %64
  %67 = icmp eq i32 %3, 0
  br i1 %67, label %68, label %76

68:                                               ; preds = %66
  %69 = load i8, i8* %36, align 8, !range !5
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %68
  %72 = load %"class.base::internal::UncheckedScopedBlockingCall"*, %"class.base::internal::UncheckedScopedBlockingCall"** %22, align 8
  %73 = icmp eq %"class.base::internal::UncheckedScopedBlockingCall"* %72, null
  br i1 %73, label %74, label %95

74:                                               ; preds = %71
  %75 = call dereferenceable(16) %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* @_ZN4absl8optionalIN4base8internal22IOJankMonitoringWindow19ScopedMonitoredCallEE7emplaceIJEvEERS4_DpOT_(%"class.absl::optional"* %48)
  br label %95

76:                                               ; preds = %66, %68
  %77 = load %"class.base::internal::UncheckedScopedBlockingCall"*, %"class.base::internal::UncheckedScopedBlockingCall"** %22, align 8
  %78 = icmp eq %"class.base::internal::UncheckedScopedBlockingCall"* %77, null
  br i1 %78, label %95, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %77, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %81 = load i8, i8* %80, align 8, !range !5
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %95, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %77, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %85 = bitcast %class.scoped_refptr* %84 to i64*
  %86 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %84, i64 0, i32 0
  %87 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %86, align 8
  store i64 0, i64* %85, align 8
  %88 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %87) #10
  %94 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %87 to i8*
  call void @_ZdlPv(i8* %94) #11
  br label %95

95:                                               ; preds = %79, %93, %89, %83, %71, %74, %76, %64
  %96 = load %"class.base::internal::BlockingObserver"*, %"class.base::internal::BlockingObserver"** %8, align 8
  %97 = icmp eq %"class.base::internal::BlockingObserver"* %96, null
  br i1 %97, label %116, label %98

98:                                               ; preds = %95
  %99 = load %"class.base::internal::UncheckedScopedBlockingCall"*, %"class.base::internal::UncheckedScopedBlockingCall"** %22, align 8
  %100 = icmp eq %"class.base::internal::UncheckedScopedBlockingCall"* %99, null
  br i1 %100, label %101, label %106

101:                                              ; preds = %98
  %102 = bitcast %"class.base::internal::BlockingObserver"* %96 to void (%"class.base::internal::BlockingObserver"*, i32)***
  %103 = load void (%"class.base::internal::BlockingObserver"*, i32)**, void (%"class.base::internal::BlockingObserver"*, i32)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.base::internal::BlockingObserver"*, i32)*, void (%"class.base::internal::BlockingObserver"*, i32)** %103, i64 2
  %105 = load void (%"class.base::internal::BlockingObserver"*, i32)*, void (%"class.base::internal::BlockingObserver"*, i32)** %104, align 8
  call void %105(%"class.base::internal::BlockingObserver"* nonnull %96, i32 %2) #10
  br label %116

106:                                              ; preds = %98
  br i1 %37, label %107, label %116

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %99, i64 0, i32 2
  %109 = load i8, i8* %108, align 8, !range !5
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %107
  %112 = bitcast %"class.base::internal::BlockingObserver"* %96 to void (%"class.base::internal::BlockingObserver"*)***
  %113 = load void (%"class.base::internal::BlockingObserver"*)**, void (%"class.base::internal::BlockingObserver"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.base::internal::BlockingObserver"*)*, void (%"class.base::internal::BlockingObserver"*)** %113, i64 3
  %115 = load void (%"class.base::internal::BlockingObserver"*)*, void (%"class.base::internal::BlockingObserver"*)** %114, align 8
  call void %115(%"class.base::internal::BlockingObserver"* nonnull %96) #10
  br label %116

116:                                              ; preds = %107, %95, %101, %111, %106
  %117 = bitcast %"class.base::debug::ScopedActivity"* %45 to %"class.base::debug::ThreadActivityTracker::ScopedActivity"*
  %118 = call zeroext i1 @_ZN4base5debug21ThreadActivityTracker14ScopedActivity10IsRecordedEv(%"class.base::debug::ThreadActivityTracker::ScopedActivity"* %117) #10
  br i1 %118, label %119, label %135

119:                                              ; preds = %116
  %120 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  %121 = getelementptr inbounds %"class.base::debug::ScopedActivity", %"class.base::debug::ScopedActivity"* %45, i64 0, i32 0
  %122 = call dereferenceable(80) %"class.base::debug::ActivityUserData"* @_ZN4base5debug21GlobalActivityTracker20ScopedThreadActivity9user_dataEv(%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity"* %121) #10
  %123 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123)
  store i64 %120, i64* %6, align 8
  %124 = bitcast %"class.base::debug::ActivityUserData"* %122 to i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)***
  %125 = load i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)**, i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)*** %124, align 8
  %126 = getelementptr inbounds i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)*, i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)** %125, i64 2
  %127 = load i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)*, i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)** %126, align 8
  %128 = call i8* %127(%"class.base::debug::ActivityUserData"* %122, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i64 12, i8 zeroext 8, i8* nonnull %123, i64 8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123)
  %129 = sext i32 %2 to i64
  %130 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130)
  store i64 %129, i64* %5, align 8
  %131 = load i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)**, i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)*** %124, align 8
  %132 = getelementptr inbounds i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)*, i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)** %131, i64 2
  %133 = load i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)*, i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)** %132, align 8
  %134 = call i8* %133(%"class.base::debug::ActivityUserData"* %122, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i64 13, i8 zeroext 8, i8* nonnull %130, i64 8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130)
  br label %135

135:                                              ; preds = %119, %116
  ret void
}

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* @_ZN4absl8optionalIN4base8internal22IOJankMonitoringWindow19ScopedMonitoredCallEE7emplaceIJEvEERS4_DpOT_(%"class.absl::optional"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %7 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %6, align 8
  %8 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  tail call void @_ZN4base8internal22IOJankMonitoringWindow23OnBlockingCallCompletedENS_9TimeTicksES2_(%"class.base::internal::IOJankMonitoringWindow"* nonnull %7, i64 %11, i64 %12) #10
  %13 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %6, align 8
  %14 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %13) #10
  %20 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %19, %15, %9, %5
  store i8 0, i8* %2, align 8
  br label %22

22:                                               ; preds = %1, %21
  %23 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = tail call %"class.base::internal::IOJankMonitoringWindow"* @_ZN4base8internal22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksE(i64 %23) #10
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store %"class.base::internal::IOJankMonitoringWindow"* %25, %"class.base::internal::IOJankMonitoringWindow"** %26, align 8
  store i8 1, i8* %2, align 8
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  ret %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall"* %27
}

declare zeroext i1 @_ZN4base5debug21ThreadActivityTracker14ScopedActivity10IsRecordedEv(%"class.base::debug::ThreadActivityTracker::ScopedActivity"*) local_unnamed_addr #1

declare dereferenceable(80) %"class.base::debug::ActivityUserData"* @_ZN4base5debug21GlobalActivityTracker20ScopedThreadActivity9user_dataEv(%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal27UncheckedScopedBlockingCallD2Ev(%"class.base::internal::UncheckedScopedBlockingCall"*) unnamed_addr #0 align 2 {
  %2 = tail call i32* @__errno_location() #12
  %3 = load i32, i32* %2, align 4
  store i32 0, i32* %2, align 4
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0)) #10
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE to i8*)) #10
  br label %11

9:                                                ; preds = %6
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %1, %8, %9
  %12 = phi i64 [ %4, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.23", %"class.base::LazyInstance.23"* @_ZN4base8internal12_GLOBAL__N_129tls_last_scoped_blocking_callE, i64 0, i32 1, i64 0) to i64), %8 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.base::ThreadLocalPointer.24"*
  %14 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 1
  %15 = bitcast %"class.base::internal::UncheckedScopedBlockingCall"** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.base::ThreadLocalPointer.24", %"class.base::ThreadLocalPointer.24"* %13, i64 0, i32 0
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %17, i8* %16) #10
  %18 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 0
  %19 = load %"class.base::internal::BlockingObserver"*, %"class.base::internal::BlockingObserver"** %18, align 8
  %20 = icmp eq %"class.base::internal::BlockingObserver"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %11
  %22 = load %"class.base::internal::UncheckedScopedBlockingCall"*, %"class.base::internal::UncheckedScopedBlockingCall"** %14, align 8
  %23 = icmp eq %"class.base::internal::UncheckedScopedBlockingCall"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %21
  %25 = bitcast %"class.base::internal::BlockingObserver"* %19 to void (%"class.base::internal::BlockingObserver"*)***
  %26 = load void (%"class.base::internal::BlockingObserver"*)**, void (%"class.base::internal::BlockingObserver"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.base::internal::BlockingObserver"*)*, void (%"class.base::internal::BlockingObserver"*)** %26, i64 4
  %28 = load void (%"class.base::internal::BlockingObserver"*)*, void (%"class.base::internal::BlockingObserver"*)** %27, align 8
  tail call void %28(%"class.base::internal::BlockingObserver"* nonnull %19) #10
  br label %29

29:                                               ; preds = %21, %11, %24
  store i32 %3, i32* %2, align 4
  %30 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %50, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %35 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %34, align 8
  %36 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  tail call void @_ZN4base8internal22IOJankMonitoringWindow23OnBlockingCallCompletedENS_9TimeTicksES2_(%"class.base::internal::IOJankMonitoringWindow"* nonnull %35, i64 %39, i64 %40) #10
  %41 = load %"class.base::internal::IOJankMonitoringWindow"*, %"class.base::internal::IOJankMonitoringWindow"** %34, align 8
  %42 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %41) #10
  %48 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %41 to i8*
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %47, %43, %37, %33
  store i8 0, i8* %30, align 8
  br label %50

50:                                               ; preds = %29, %49
  %51 = getelementptr inbounds %"class.base::internal::UncheckedScopedBlockingCall", %"class.base::internal::UncheckedScopedBlockingCall"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base5debug21GlobalActivityTracker20ScopedThreadActivityD2Ev(%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity"* %51) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5debug21GlobalActivityTracker20ScopedThreadActivityD2Ev(%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base32EnableIOJankMonitoringForProcessENS_17RepeatingCallbackIFviiEEE(%"class.base::RepeatingCallback"*) local_unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %"class.base::internal::LockImpl"*)) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock) #10
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %union.pthread_mutex_t*)) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %8
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %"class.base::internal::LockImpl"*)) #10
  br label %12

12:                                               ; preds = %8, %11
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19, !prof !2

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback) #10
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** bitcast (%"class.base::NoDestructor.4"* @_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to %"class.base::internal::BindStateBase"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback) #10
  br label %19

19:                                               ; preds = %12, %15, %18
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %0, i64 0, i32 0
  %21 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* bitcast (%"class.base::NoDestructor.4"* @_ZZN4base8internal22IOJankMonitoringWindow26reporting_callback_storageEvE18reporting_callback to %"class.base::internal::CallbackBaseCopyable"*), %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %20) #10
  %22 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal22IOJankMonitoringWindow24current_jank_window_lockEvE24current_jank_window_lock to %union.pthread_mutex_t*)) #10
  %23 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  %24 = tail call %"class.base::internal::IOJankMonitoringWindow"* @_ZN4base8internal22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksE(i64 %23)
  %25 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %24) #10
  %31 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %24 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %19, %26, %30
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #6

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

declare void @_ZN4base5debug14ScopedActivityC2EPKvhji(%"class.base::debug::ScopedActivity"*, i8*, i8 zeroext, i32, i32) unnamed_addr #1

declare zeroext i8 @_ZN4base8internal31GetTaskPriorityForCurrentThreadEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEv() local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #7

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZNS0_22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksEE3$_0JEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readnone) #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  %3 = tail call %"class.base::internal::IOJankMonitoringWindow"* @_ZN4base8internal22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksE(i64 %2) #10
  %4 = icmp eq %"class.base::internal::IOJankMonitoringWindow"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::IOJankMonitoringWindow", %"class.base::internal::IOJankMonitoringWindow"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN4base8internal22IOJankMonitoringWindowD2Ev(%"class.base::internal::IOJankMonitoringWindow"* nonnull %3) #10
  %10 = bitcast %"class.base::internal::IOJankMonitoringWindow"* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZNS0_22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksEE3$_0JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i8 0, i8 2}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS0_22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksEE3$_0JEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS0_22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksEE3$_0JEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIZNS_8internal22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksEE3$_0JEEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIZNS_8internal22IOJankMonitoringWindow32MonitorNextJankWindowIfNecessaryENS_9TimeTicksEE3$_0JEEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14, !12}
!14 = !{!"llvm.loop.unroll.runtime.disable"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base12NullCallbackcvNS_17RepeatingCallbackIFT_DpT0_EEEIvJiiEEEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base12NullCallbackcvNS_17RepeatingCallbackIFT_DpT0_EEEIvJiiEEEv"}
!18 = distinct !{!18, !12}
!19 = distinct !{!19, !14, !12}
