; ModuleID = '../../cc/benchmarks/rasterize_and_record_benchmark_impl.cc'
source_filename = "../../cc/benchmarks/rasterize_and_record_benchmark_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PictureLayerTiling::CoverageIterator" = type { %"class.cc::PictureLayerTiling"*, %"class.gfx::Size", %"class.gfx::Rect", %"class.gfx::AxisTransform2d", %"class.cc::Tile"*, %"class.gfx::Rect", i32, i32, i32, i32, i32, i32 }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.497, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.594", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%class.scoped_refptr.497 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.498", [4 x i8], i64, %class.scoped_refptr.499, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.498" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.499 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.500", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.188", %"class.std::__1::vector.580", %"class.std::__1::vector.587", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.500" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.501", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.501" = type { %"class.std::__1::__vector_base.502" }
%"class.std::__1::__vector_base.502" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.508", %"class.std::__1::vector.518", %"class.base::flat_map.532", i8, i8, [6 x i8], %"class.cc::RTree.542", %"class.std::__1::vector.572" }
%"class.base::flat_map.508" = type { %"class.base::internal::flat_tree.509" }
%"class.base::internal::flat_tree.509" = type { %"class.std::__1::vector.510" }
%"class.std::__1::vector.510" = type { %"class.std::__1::__vector_base.511" }
%"class.std::__1::__vector_base.511" = type { %"struct.std::__1::pair.512"*, %"struct.std::__1::pair.512"*, %"class.std::__1::__compressed_pair.513" }
%"struct.std::__1::pair.512" = type opaque
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::pair.512"* }
%"class.std::__1::vector.518" = type { %"class.std::__1::__vector_base.519" }
%"class.std::__1::__vector_base.519" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.527" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.520", i32, i32 }
%"class.std::__1::vector.520" = type { %"class.std::__1::__vector_base.521" }
%"class.std::__1::__vector_base.521" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.522" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.532" = type { %"class.base::internal::flat_tree.533" }
%"class.base::internal::flat_tree.533" = type { %"class.std::__1::vector.534" }
%"class.std::__1::vector.534" = type { %"class.std::__1::__vector_base.535" }
%"class.std::__1::__vector_base.535" = type { %"struct.std::__1::pair.536"*, %"struct.std::__1::pair.536"*, %"class.std::__1::__compressed_pair.537" }
%"struct.std::__1::pair.536" = type { i32, i32 }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.std::__1::pair.536"* }
%"class.cc::RTree.542" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.564", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.554", %"class.absl::optional.559", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.543, %class.sk_sp.545, %"class.gfx::Rect", i32, %class.sk_sp.550, %class.sk_sp.551, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.543, %class.scoped_refptr.552 }
%class.sk_sp.545 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.550 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.520" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.544, i32, i32 }
%class.sk_sp.544 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.86" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.551 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.543 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.552 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.553", [4 x i8] }>
%"class.base::RefCountedThreadSafe.553" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional.554" = type { %"class.absl::optional_internal::optional_data.555" }
%"class.absl::optional_internal::optional_data.555" = type { %"class.absl::optional_internal::optional_data_base.556" }
%"class.absl::optional_internal::optional_data_base.556" = type { %"class.absl::optional_internal::optional_data_dtor_base.557" }
%"class.absl::optional_internal::optional_data_dtor_base.557" = type { i8, %union.anon.558 }
%union.anon.558 = type { i64 }
%"class.absl::optional.559" = type { %"class.absl::optional_internal::optional_data.560" }
%"class.absl::optional_internal::optional_data.560" = type { %"class.absl::optional_internal::optional_data_base.561" }
%"class.absl::optional_internal::optional_data_base.561" = type { %"class.absl::optional_internal::optional_data_dtor_base.562" }
%"class.absl::optional_internal::optional_data_dtor_base.562" = type { i8, %union.anon.563 }
%union.anon.563 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.564" = type { %"class.std::__1::__vector_base.565" }
%"class.std::__1::__vector_base.565" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.572" = type { %"class.std::__1::__vector_base.573" }
%"class.std::__1::__vector_base.573" = type { %"struct.std::__1::pair.574"*, %"struct.std::__1::pair.574"*, %"class.std::__1::__compressed_pair.575" }
%"struct.std::__1::pair.574" = type opaque
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.std::__1::pair.574"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.546", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { i8* }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.580" = type { %"class.std::__1::__vector_base.581" }
%"class.std::__1::__vector_base.581" = type { i64*, i64*, %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { i64* }
%"class.std::__1::vector.587" = type { %"class.std::__1::__vector_base.588" }
%"class.std::__1::__vector_base.588" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.589" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.594" = type { %"class.std::__1::__hash_table.595" }
%"class.std::__1::__hash_table.595" = type <{ %"class.std::__1::unique_ptr.596", %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.614", [4 x i8] }>
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598", %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::__hash_node_base.599"** }
%"struct.std::__1::__hash_node_base.599" = type { %"struct.std::__1::__hash_node_base.599"* }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.std::__1::__bucket_list_deallocator.601" }
%"class.std::__1::__bucket_list_deallocator.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { i64 }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"struct.std::__1::__hash_node_base.599" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { float }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.cc::Tile" = type { %"class.cc::TileManager"*, %"class.cc::PictureLayerTiling"*, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::AxisTransform2d", %"class.cc::TileDrawInfo", i32, i32, i32, i32, i32, i64, i32, i8, i64, %"class.std::__1::vector.1392", %"class.gfx::Rect", %class.scoped_refptr.811 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.747", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.753", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.941", %"class.std::__1::vector.813", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.979", %"class.base::WeakPtrFactory.979" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr.1, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.116", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.122" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map.40", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map.40" = type { %"class.base::internal::flat_tree.41" }
%"class.base::internal::flat_tree.41" = type { %"class.std::__1::vector.42" }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"*, %"class.std::__1::__compressed_pair.45" }
%"struct.std::__1::pair.44" = type opaque
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::pair.44"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.1 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.106"*, i64 }
%"class.std::__1::unique_ptr.106" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.107" }
%"class.std::__1::__tree.107" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.122" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.85", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.86" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.129" }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.129" = type { %"class.base::internal::VectorBuffer.130", i64, i64 }
%"class.base::internal::VectorBuffer.130" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unordered_map.753" = type { %"class.std::__1::__hash_table.754" }
%"class.std::__1::__hash_table.754" = type <{ %"class.std::__1::unique_ptr.755", %"class.std::__1::__compressed_pair.765", %"class.std::__1::__compressed_pair.770", %"class.std::__1::__compressed_pair.775", [4 x i8] }>
%"class.std::__1::unique_ptr.755" = type { %"class.std::__1::__compressed_pair.756" }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757", %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"struct.std::__1::__hash_node_base.758"** }
%"struct.std::__1::__hash_node_base.758" = type { %"struct.std::__1::__hash_node_base.758"* }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.std::__1::__bucket_list_deallocator.760" }
%"class.std::__1::__bucket_list_deallocator.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.std::__1::__hash_node_base.758" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.780, %"class.base::WeakPtr.781", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.782", %"class.base::flat_map.789", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.799", %"class.std::__1::map.799", i8, %"class.std::__1::vector.808", %"class.base::WeakPtrFactory.825" }
%class.scoped_refptr.780 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr.781" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.296 }
%class.scoped_refptr.296 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.std::__1::vector.782" = type { %"class.std::__1::__vector_base.783" }
%"class.std::__1::__vector_base.783" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.789" = type { %"class.base::internal::flat_tree.790" }
%"class.base::internal::flat_tree.790" = type { %"class.std::__1::vector.791" }
%"class.std::__1::vector.791" = type { %"class.std::__1::__vector_base.792" }
%"class.std::__1::__vector_base.792" = type { %"struct.std::__1::pair.793"*, %"struct.std::__1::pair.793"*, %"class.std::__1::__compressed_pair.794" }
%"struct.std::__1::pair.793" = type opaque
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.std::__1::pair.793"* }
%"class.std::__1::map.799" = type { %"class.std::__1::__tree.800" }
%"class.std::__1::__tree.800" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.801", %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.820" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback.810", %class.scoped_refptr.811, i8, [7 x i8] }>
%"class.base::OnceCallback.810" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.825" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.826", i8, %class.scoped_refptr.780, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.836" }
%"class.base::flat_map.826" = type { %"class.base::internal::flat_tree.827" }
%"class.base::internal::flat_tree.827" = type { %"class.std::__1::vector.828" }
%"class.std::__1::vector.828" = type { %"class.std::__1::__vector_base.829" }
%"class.std::__1::__vector_base.829" = type { %"struct.std::__1::pair.830"*, %"struct.std::__1::pair.830"*, %"class.std::__1::__compressed_pair.831" }
%"struct.std::__1::pair.830" = type { i32, %"class.std::__1::unique_ptr.1418" }
%"class.std::__1::unique_ptr.1418" = type { %"class.std::__1::__compressed_pair.1419" }
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.1420" }
%"struct.std::__1::__compressed_pair_elem.1420" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"struct.std::__1::pair.830"* }
%"class.base::WeakPtrFactory.836" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.837", %"class.base::internal::flat_tree.837", %"class.std::__1::vector.838", i32, %"class.absl::optional.845", %"class.std::__1::unordered_map.850", %"class.std::__1::unordered_map.874", %"class.base::flat_map.532", %"class.base::WeakPtrFactory.898" }
%"class.base::internal::flat_tree.837" = type { %"class.std::__1::vector.160" }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { i32*, i32*, %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { i32* }
%"class.std::__1::vector.838" = type { %"class.std::__1::__vector_base.839" }
%"class.std::__1::__vector_base.839" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.840" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.845" = type { %"class.absl::optional_internal::optional_data.846" }
%"class.absl::optional_internal::optional_data.846" = type { %"class.absl::optional_internal::optional_data_base.847" }
%"class.absl::optional_internal::optional_data_base.847" = type { %"class.absl::optional_internal::optional_data_dtor_base.848" }
%"class.absl::optional_internal::optional_data_dtor_base.848" = type { i8, %union.anon.849 }
%union.anon.849 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.850" = type { %"class.std::__1::__hash_table.851" }
%"class.std::__1::__hash_table.851" = type <{ %"class.std::__1::unique_ptr.852", %"class.std::__1::__compressed_pair.862", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.870", [4 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854", %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::__hash_node_base.855"** }
%"struct.std::__1::__hash_node_base.855" = type { %"struct.std::__1::__hash_node_base.855"* }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.std::__1::__bucket_list_deallocator.857" }
%"class.std::__1::__bucket_list_deallocator.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::__hash_node_base.855" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unordered_map.874" = type { %"class.std::__1::__hash_table.875" }
%"class.std::__1::__hash_table.875" = type <{ %"class.std::__1::unique_ptr.876", %"class.std::__1::__compressed_pair.886", %"class.std::__1::__compressed_pair.891", %"class.std::__1::__compressed_pair.894", [4 x i8] }>
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878", %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"struct.std::__1::__hash_node_base.879"** }
%"struct.std::__1::__hash_node_base.879" = type { %"struct.std::__1::__hash_node_base.879"* }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.std::__1::__bucket_list_deallocator.881" }
%"class.std::__1::__bucket_list_deallocator.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"struct.std::__1::__hash_node_base.879" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.base::WeakPtrFactory.898" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.899", %"class.std::__1::vector.907" }
%"class.std::__1::vector.899" = type { %"class.std::__1::__vector_base.900" }
%"class.std::__1::__vector_base.900" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.902" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.901, i16, i16, i32 }
%class.scoped_refptr.901 = type { %"class.cc::Task"* }
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.812", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.812" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.907" = type { %"class.std::__1::__vector_base.908" }
%"class.std::__1::__vector_base.908" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.909" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.914", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.915" }
%"class.base::RepeatingCallback.914" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.915" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.916" }
%"class.std::__1::__hash_table.916" = type <{ %"class.std::__1::unique_ptr.917", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.932", %"class.std::__1::__compressed_pair.936", [4 x i8] }>
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919", %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::__hash_node_base.920"** }
%"struct.std::__1::__hash_node_base.920" = type { %"struct.std::__1::__hash_node_base.920"* }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.std::__1::__bucket_list_deallocator.922" }
%"class.std::__1::__bucket_list_deallocator.922" = type { %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"struct.std::__1::__hash_node_base.920" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unordered_map.941" = type { %"class.std::__1::__hash_table.942" }
%"class.std::__1::__hash_table.942" = type <{ %"class.std::__1::unique_ptr.943", %"class.std::__1::__compressed_pair.953", %"class.std::__1::__compressed_pair.958", %"class.std::__1::__compressed_pair.961", [4 x i8] }>
%"class.std::__1::unique_ptr.943" = type { %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945", %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.std::__1::__hash_node_base.946"** }
%"struct.std::__1::__hash_node_base.946" = type { %"struct.std::__1::__hash_node_base.946"* }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.std::__1::__bucket_list_deallocator.948" }
%"class.std::__1::__bucket_list_deallocator.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"struct.std::__1::__hash_node_base.946" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::vector.813" = type { %"class.std::__1::__vector_base.814" }
%"class.std::__1::__vector_base.814" = type { %class.scoped_refptr.811*, %class.scoped_refptr.811*, %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %class.scoped_refptr.811* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.965" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.971", %"class.base::WeakPtrFactory.972" }
%"class.base::OnceCallback.971" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.972" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.973, i8, [7 x i8] }>
%class.scoped_refptr.973 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.974", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.974" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.975" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.base::WeakPtrFactory.979" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::TileDrawInfo" = type <{ i32, i32, %"class.cc::ResourcePool::InUsePoolResource", i8, i8, i8, [5 x i8] }>
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType", %"class.std::__1::unique_ptr.1378", %"class.std::__1::unique_ptr.1386" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.1381", i64 }
%"class.util::IdType.1381" = type { %"class.base::StrongAlias.1382" }
%"class.base::StrongAlias.1382" = type { i64 }
%"class.std::__1::unique_ptr.1386" = type { %"class.std::__1::__compressed_pair.1387" }
%"class.std::__1::__compressed_pair.1387" = type { %"struct.std::__1::__compressed_pair_elem.1388" }
%"struct.std::__1::__compressed_pair_elem.1388" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"class.std::__1::vector.1392" = type { %"class.std::__1::__vector_base.1393" }
%"class.std::__1::__vector_base.1393" = type { %"struct.std::__1::pair.1394"*, %"struct.std::__1::pair.1394"*, %"class.std::__1::__compressed_pair.1395" }
%"struct.std::__1::pair.1394" = type opaque
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"struct.std::__1::pair.1394"* }
%class.scoped_refptr.811 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.813", i8, [7 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.1438 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1439 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.1440" = type { %"class.std::__1::__compressed_pair.1441" }
%"class.std::__1::__compressed_pair.1441" = type { %"struct.std::__1::__compressed_pair_elem.1442" }
%"struct.std::__1::__compressed_pair_elem.1442" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.1446" = type { %"class.std::__1::__compressed_pair.1447" }
%"class.std::__1::__compressed_pair.1447" = type { %"struct.std::__1::__compressed_pair_elem.1448" }
%"struct.std::__1::__compressed_pair_elem.1448" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.cc::PlaybackImageProvider" = type { %"class.cc::ImageProvider", %"class.cc::ImageDecodeCache"*, %"class.gfx::ColorSpace", [4 x i8], %"class.absl::optional.1452" }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"class.absl::optional.1452" = type { %"class.absl::optional_internal::optional_data.1453" }
%"class.absl::optional_internal::optional_data.1453" = type { %"class.absl::optional_internal::optional_data_base.1454" }
%"class.absl::optional_internal::optional_data_base.1454" = type { %"class.absl::optional_internal::optional_data_dtor_base.1455" }
%"class.absl::optional_internal::optional_data_dtor_base.1455" = type { i8, [7 x i8], %union.anon.1456 }
%union.anon.1456 = type { %"struct.cc::PlaybackImageProvider::Settings" }
%"struct.cc::PlaybackImageProvider::Settings" = type <{ %"class.base::internal::flat_tree.837", %"class.base::flat_map.1457", i32, [4 x i8] }>
%"class.base::flat_map.1457" = type { %"class.base::internal::flat_tree.1458" }
%"class.base::internal::flat_tree.1458" = type { %"class.std::__1::vector.1459" }
%"class.std::__1::vector.1459" = type { %"class.std::__1::__vector_base.1460" }
%"class.std::__1::__vector_base.1460" = type { %"struct.std::__1::pair.1461"*, %"struct.std::__1::pair.1461"*, %"class.std::__1::__compressed_pair.1462" }
%"struct.std::__1::pair.1461" = type { i32, i64 }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.1463" }
%"struct.std::__1::__compressed_pair_elem.1463" = type { %"struct.std::__1::pair.1461"* }
%"struct.std::nothrow_t" = type { i8 }
%"class.cc::RasterizeAndRecordBenchmarkImpl" = type <{ %"class.cc::MicroBenchmarkImpl", %"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults", i32, [4 x i8] }>
%"class.cc::MicroBenchmarkImpl" = type { i32 (...)**, %"class.base::OnceCallback", i8, %class.scoped_refptr.1 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults" = type { i32, i32, i32, [11 x i32], %"class.base::TimeDelta", i32, i32, i32, i32 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"union.absl::variant_internal::DestructibleUnionImpl.6" }
%"union.absl::variant_internal::DestructibleUnionImpl.6" = type { %"class.std::__1::basic_string" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.34", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.134", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.140", %"class.gfx::Vector2dF", %"class.std::__1::vector.688", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.980", %"class.std::__1::unique_ptr.992", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.1045", %"class.std::__1::unique_ptr.1052", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1064", %"class.std::__1::set.1070", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.1080", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.1119", %"class.base::RepeatingCallback.914", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.1125", i8, i8, i8, i32, %"class.std::__1::unique_ptr.1135", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.1141", %"class.std::__1::vector.1147", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.1167", %"class.std::__1::unique_ptr.1179", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.668", %"class.absl::optional.1185", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.116", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.1253", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.1323", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.206", %"class.base::WeakPtrFactory.1366" }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.1, %class.scoped_refptr.1 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.50", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.66", [4 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.76, %class.scoped_refptr.77, %class.scoped_refptr.1, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.78", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.76 = type { %"class.viz::ContextProvider"* }
%class.scoped_refptr.77 = type { %"class.viz::RasterContextProvider"* }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.cc::RasterBufferProvider"* }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.cc::ResourcePool"* }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.cc::RasterQueryQueue"* }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.cc::ImageDecodeCache"* }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection", %class.scoped_refptr.312, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.318, %"class.std::__1::vector.322", %"class.std::__1::unordered_map.371", %"class.base::internal::flat_tree.395", %"class.std::__1::unordered_map.403", %"class.std::__1::unordered_map.429", %"class.std::__1::unordered_map.453", %"class.std::__1::unordered_map.453", %"class.base::flat_map.477", %"class.std::__1::vector.487", %"class.base::internal::flat_tree.667", %"class.base::internal::flat_tree.668", %"class.std::__1::vector.681", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.688", %"class.std::__1::vector.688", %"class.std::__1::vector.696", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.703, %class.scoped_refptr.703, %"class.std::__1::unique_ptr.708", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.714", %"class.std::__1::vector.722", %"class.std::__1::unique_ptr.730", %"class.std::__1::vector.736" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.143", %"class.base::flat_map.143", %"class.base::flat_map.143", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.143" = type { %"class.base::internal::flat_tree.144" }
%"class.base::internal::flat_tree.144" = type { %"class.std::__1::vector.145" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.std::__1::pair.147"*, %"struct.std::__1::pair.147"*, %"class.std::__1::__compressed_pair.148" }
%"struct.std::__1::pair.147" = type opaque
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::pair.147"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.160", %"class.std::__1::vector.167", %"class.std::__1::vector.174" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.153", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.155" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.169" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.176" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.181", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.241" }
%"class.cc::PropertyTree.181" = type { i32 (...)**, %"class.std::__1::vector.182", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.213" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.200", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.184" }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.195" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.188", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.186, i32, %"class.absl::optional", i8, i32 }
%class.sk_sp.186 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.187 }
%union.anon.187 = type { %struct.SkRect }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.200" = type { %"class.absl::optional_internal::optional_data.201" }
%"class.absl::optional_internal::optional_data.201" = type { %"class.absl::optional_internal::optional_data_base.202" }
%"class.absl::optional_internal::optional_data_base.202" = type { %"class.absl::optional_internal::optional_data_dtor_base.203" }
%"class.absl::optional_internal::optional_data_dtor_base.203" = type { i8, %union.anon.204 }
%union.anon.204 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.205" }
%"class.base::internal::flat_tree.205" = type { %"class.std::__1::vector.206" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.218" }
%"class.std::__1::__hash_table.218" = type <{ %"class.std::__1::unique_ptr.219", %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.237", [4 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221", %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base.222"** }
%"struct.std::__1::__hash_node_base.222" = type { %"struct.std::__1::__hash_node_base.222"* }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.std::__1::__bucket_list_deallocator.224" }
%"class.std::__1::__bucket_list_deallocator.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base.222" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"class.std::__1::unique_ptr.243"*, %"class.std::__1::unique_ptr.243"*, %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.246" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.std::__1::unique_ptr.243"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.260" }
%"class.cc::PropertyTree.260" = type { i32 (...)**, %"class.std::__1::vector.261", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.261" = type { %"class.std::__1::__vector_base.262" }
%"class.std::__1::__vector_base.262" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.263" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.268", i32, %"class.base::flat_map.276", %"class.base::flat_map.286", %"class.base::WeakPtr" }
%"class.cc::PropertyTree.268" = type { i32 (...)**, %"class.std::__1::vector.269", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.271" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.276" = type { %"class.base::internal::flat_tree.277" }
%"class.base::internal::flat_tree.277" = type { %"class.std::__1::vector.278" }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"struct.std::__1::pair.280"*, %"struct.std::__1::pair.280"*, %"class.std::__1::__compressed_pair.281" }
%"struct.std::__1::pair.280" = type opaque
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::pair.280"* }
%"class.base::flat_map.286" = type { %"class.base::internal::flat_tree.287" }
%"class.base::internal::flat_tree.287" = type { %"class.std::__1::vector.288" }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.297", %"class.std::__1::vector.304" }
%"class.std::__1::vector.297" = type { %"class.std::__1::__vector_base.298" }
%"class.std::__1::__vector_base.298" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.299" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"class.std::__1::vector.306"*, %"class.std::__1::vector.306"*, %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::vector.306" = type opaque
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.std::__1::vector.306"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.312 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.313" }
%"class.absl::optional.313" = type { %"class.absl::optional_internal::optional_data.314" }
%"class.absl::optional_internal::optional_data.314" = type { %"class.absl::optional_internal::optional_data_base.315" }
%"class.absl::optional_internal::optional_data_base.315" = type { %"class.absl::optional_internal::optional_data_dtor_base.316" }
%"class.absl::optional_internal::optional_data_dtor_base.316" = type { i8, %union.anon.317 }
%union.anon.317 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%class.scoped_refptr.318 = type { %"class.cc::SyncedProperty.319"* }
%"class.cc::SyncedProperty.319" = type <{ %"class.base::RefCounted.320", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.320" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"class.std::__1::unique_ptr.324"*, %"class.std::__1::unique_ptr.324"*, %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.357", i8, [7 x i8] }>
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.327" }
%"class.base::flat_map.327" = type { %"class.base::internal::flat_tree.328" }
%"class.base::internal::flat_tree.328" = type { %"class.std::__1::vector.329" }
%"class.std::__1::vector.329" = type { %"class.std::__1::__vector_base.330" }
%"class.std::__1::__vector_base.330" = type { %"struct.std::__1::pair.331"*, %"struct.std::__1::pair.331"*, %"class.std::__1::__compressed_pair.332" }
%"struct.std::__1::pair.331" = type opaque
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::pair.331"* }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.340", %"class.std::__1::vector.340", %"class.std::__1::vector.347" }
%"class.std::__1::vector.340" = type { %"class.std::__1::__vector_base.341" }
%"class.std::__1::__vector_base.341" = type { i8**, i8**, %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { i8** }
%"class.std::__1::vector.347" = type { %"class.std::__1::__vector_base.348" }
%"class.std::__1::__vector_base.348" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.349" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.cc::Region"* }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::unique_ptr.324"* }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.base::internal::flat_tree.395" = type { %"class.std::__1::vector.396" }
%"class.std::__1::vector.396" = type { %"class.std::__1::__vector_base.397" }
%"class.std::__1::__vector_base.397" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unordered_map.429" = type { %"class.std::__1::__hash_table.430" }
%"class.std::__1::__hash_table.430" = type <{ %"class.std::__1::unique_ptr.431", %"class.std::__1::__compressed_pair.441", %"class.std::__1::__compressed_pair.446", %"class.std::__1::__compressed_pair.449", [4 x i8] }>
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433", %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"struct.std::__1::__hash_node_base.434"** }
%"struct.std::__1::__hash_node_base.434" = type { %"struct.std::__1::__hash_node_base.434"* }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.std::__1::__bucket_list_deallocator.436" }
%"class.std::__1::__bucket_list_deallocator.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"struct.std::__1::__hash_node_base.434" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unordered_map.453" = type { %"class.std::__1::__hash_table.454" }
%"class.std::__1::__hash_table.454" = type <{ %"class.std::__1::unique_ptr.455", %"class.std::__1::__compressed_pair.465", %"class.std::__1::__compressed_pair.470", %"class.std::__1::__compressed_pair.473", [4 x i8] }>
%"class.std::__1::unique_ptr.455" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457", %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.std::__1::__hash_node_base.458"** }
%"struct.std::__1::__hash_node_base.458" = type { %"struct.std::__1::__hash_node_base.458"* }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.std::__1::__bucket_list_deallocator.460" }
%"class.std::__1::__bucket_list_deallocator.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"struct.std::__1::__hash_node_base.458" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.base::flat_map.477" = type { %"class.base::internal::flat_tree.478" }
%"class.base::internal::flat_tree.478" = type { %"class.std::__1::vector.479" }
%"class.std::__1::vector.479" = type { %"class.std::__1::__vector_base.480" }
%"class.std::__1::__vector_base.480" = type { %"struct.std::__1::pair.481"*, %"struct.std::__1::pair.481"*, %"class.std::__1::__compressed_pair.482" }
%"struct.std::__1::pair.481" = type opaque
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"struct.std::__1::pair.481"* }
%"class.std::__1::vector.487" = type { %"class.std::__1::__vector_base.488" }
%"class.std::__1::__vector_base.488" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.662" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.489", %class.scoped_refptr.497, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.640", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.645", %"class.base::flat_map.652", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.357", i8 }>
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.492", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.497, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.492" = type { %"class.std::__1::__vector_base.493" }
%"class.std::__1::__vector_base.493" = type { %"class.std::__1::unique_ptr.494"*, %"class.std::__1::unique_ptr.494"*, %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.cc::PictureLayerTiling"* }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.std::__1::unique_ptr.494"* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.633" }
%"struct.std::__1::__split_buffer" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.628" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%"class.absl::optional.640" = type { %"class.absl::optional_internal::optional_data.641" }
%"class.absl::optional_internal::optional_data.641" = type { %"class.absl::optional_internal::optional_data_base.642" }
%"class.absl::optional_internal::optional_data_base.642" = type { %"class.absl::optional_internal::optional_data_dtor_base.643" }
%"class.absl::optional_internal::optional_data_dtor_base.643" = type { i8, %union.anon.644 }
%union.anon.644 = type { %"class.gfx::Size" }
%"class.std::__1::vector.645" = type { %"class.std::__1::__vector_base.646" }
%"class.std::__1::__vector_base.646" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.652" = type { %"class.base::internal::flat_tree.653" }
%"class.base::internal::flat_tree.653" = type { %"class.std::__1::vector.654" }
%"class.std::__1::vector.654" = type { %"class.std::__1::__vector_base.655" }
%"class.std::__1::__vector_base.655" = type { %"struct.std::__1::pair.656"*, %"struct.std::__1::pair.656"*, %"class.std::__1::__compressed_pair.657" }
%"struct.std::__1::pair.656" = type opaque
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"struct.std::__1::pair.656"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.667" = type { %"class.std::__1::vector.487" }
%"class.std::__1::vector.681" = type { %"class.std::__1::__vector_base.682" }
%"class.std::__1::__vector_base.682" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::vector.696" = type { %"class.std::__1::__vector_base.697" }
%"class.std::__1::__vector_base.697" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.698" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.703 = type { %"class.cc::SyncedProperty.704"* }
%"class.cc::SyncedProperty.704" = type <{ %"class.base::RefCounted.705", %"class.cc::AdditionGroup.706", %"class.cc::AdditionGroup.706", %"class.cc::AdditionGroup.706", %"class.cc::AdditionGroup.706", %"class.cc::AdditionGroup.706", i8, [3 x i8] }>
%"class.base::RefCounted.705" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.706" = type { float }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.714" = type { %"class.std::__1::__vector_base.715" }
%"class.std::__1::__vector_base.715" = type { %"class.base::OnceCallback.716"*, %"class.base::OnceCallback.716"*, %"class.std::__1::__compressed_pair.717" }
%"class.base::OnceCallback.716" = type opaque
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.base::OnceCallback.716"* }
%"class.std::__1::vector.722" = type { %"class.std::__1::__vector_base.723" }
%"class.std::__1::__vector_base.723" = type { %"class.std::__1::unique_ptr.724"*, %"class.std::__1::unique_ptr.724"*, %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.1400" }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.1401" }
%"struct.std::__1::__compressed_pair_elem.1401" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1402", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1402" = type { %"class.absl::optional_internal::optional_data.1403" }
%"class.absl::optional_internal::optional_data.1403" = type { %"class.absl::optional_internal::optional_data_base.1404" }
%"class.absl::optional_internal::optional_data_base.1404" = type { %"class.absl::optional_internal::optional_data_dtor_base.1405" }
%"class.absl::optional_internal::optional_data_dtor_base.1405" = type { i8, %union.anon.1406 }
%union.anon.1406 = type { i32 }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.std::__1::unique_ptr.724"* }
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.736" = type { %"class.std::__1::__vector_base.737" }
%"class.std::__1::__vector_base.737" = type { %"class.std::__1::unique_ptr.738"*, %"class.std::__1::unique_ptr.738"*, %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::unique_ptr.738" = type opaque
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.std::__1::unique_ptr.738"* }
%"class.std::__1::vector.688" = type { %"class.std::__1::__vector_base.689" }
%"class.std::__1::__vector_base.689" = type { %"class.std::__1::unique_ptr.690"*, %"class.std::__1::unique_ptr.690"*, %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.1425" }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.std::__1::unique_ptr.690"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.983", %"class.absl::optional.983", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.983" = type { %"class.absl::optional_internal::optional_data.984" }
%"class.absl::optional_internal::optional_data.984" = type { %"class.absl::optional_internal::optional_data_base.985" }
%"class.absl::optional_internal::optional_data_base.985" = type { %"class.absl::optional_internal::optional_data_dtor_base.986" }
%"class.absl::optional_internal::optional_data_dtor_base.986" = type { i8, %union.anon.987 }
%union.anon.987 = type { %"struct.std::__1::pair.988" }
%"struct.std::__1::pair.988" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.1011", %"class.absl::optional.1011", %"class.absl::optional.1011", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.1030, %"class.absl::optional.1031", %"class.std::__1::map.1036" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.998" }
%"class.std::__1::deque.998" = type { %"class.std::__1::__deque_base.999" }
%"class.std::__1::__deque_base.999" = type { %"struct.std::__1::__split_buffer.1000", i64, %"class.std::__1::__compressed_pair.1007" }
%"struct.std::__1::__split_buffer.1000" = type { %"struct.std::__1::pair.1001"**, %"struct.std::__1::pair.1001"**, %"struct.std::__1::pair.1001"**, %"class.std::__1::__compressed_pair.1002" }
%"struct.std::__1::pair.1001" = type opaque
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.std::__1::pair.1001"** }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.1011" = type { %"class.absl::optional_internal::optional_data.1012" }
%"class.absl::optional_internal::optional_data.1012" = type { %"class.absl::optional_internal::optional_data_base.1013" }
%"class.absl::optional_internal::optional_data_base.1013" = type { %"class.absl::optional_internal::optional_data_dtor_base.1014" }
%"class.absl::optional_internal::optional_data_dtor_base.1014" = type { i8, %union.anon.1015 }
%union.anon.1015 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.1016", %"class.base::circular_deque.1017", %"class.std::__1::map.1019", %"class.absl::optional.554" }
%"class.base::RepeatingCallback.1016" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::circular_deque.1017" = type { %"class.base::internal::VectorBuffer.1018", i64, i64 }
%"class.base::internal::VectorBuffer.1018" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.1019" = type { %"class.std::__1::__tree.1020" }
%"class.std::__1::__tree.1020" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1021", %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%struct.anon.1030 = type { double, double }
%"class.absl::optional.1031" = type { %"class.absl::optional_internal::optional_data.1032" }
%"class.absl::optional_internal::optional_data.1032" = type { %"class.absl::optional_internal::optional_data_base.1033" }
%"class.absl::optional_internal::optional_data_base.1033" = type { %"class.absl::optional_internal::optional_data_dtor_base.1034" }
%"class.absl::optional_internal::optional_data_dtor_base.1034" = type { i8, %union.anon.1035 }
%union.anon.1035 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.1036" = type { %"class.std::__1::__tree.1037" }
%"class.std::__1::__tree.1037" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1038", %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.1048" }
%"class.base::RingBuffer.1048" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.1070" = type { %"class.std::__1::__tree.1071" }
%"class.std::__1::__tree.1071" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1072", %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.1080" = type { %"class.std::__1::__hash_table.1081" }
%"class.std::__1::__hash_table.1081" = type <{ %"class.std::__1::unique_ptr.1082", %"class.std::__1::__compressed_pair.1092", %"class.std::__1::__compressed_pair.1097", %"class.std::__1::__compressed_pair.1100", [4 x i8] }>
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084", %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"struct.std::__1::__hash_node_base.1085"** }
%"struct.std::__1::__hash_node_base.1085" = type { %"struct.std::__1::__hash_node_base.1085"* }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.std::__1::__bucket_list_deallocator.1087" }
%"class.std::__1::__bucket_list_deallocator.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { %"struct.std::__1::__hash_node_base.1085" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.1104" }
%"class.std::__1::vector.1104" = type { %"class.std::__1::__vector_base.1105" }
%"class.std::__1::__vector_base.1105" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.1111" }
%"class.std::__1::vector.1111" = type { %"class.std::__1::__vector_base.1112" }
%"class.std::__1::__vector_base.1112" = type { %"class.std::__1::unique_ptr.1113"*, %"class.std::__1::unique_ptr.1113"*, %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::unique_ptr.1113" = type opaque
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"class.std::__1::unique_ptr.1113"* }
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.1125" = type { %"class.std::__1::__tree.1126" }
%"class.std::__1::__tree.1126" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1127", %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.1141" = type { %"class.std::__1::__compressed_pair.1142" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.1147" = type { %"class.std::__1::__vector_base.1148" }
%"class.std::__1::__vector_base.1148" = type { %"struct.std::__1::pair.1149"*, %"struct.std::__1::pair.1149"*, %"class.std::__1::__compressed_pair.1150" }
%"struct.std::__1::pair.1149" = type opaque
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"struct.std::__1::pair.1149"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.1155", %"class.base::internal::flat_tree.837", %"class.base::internal::flat_tree.837", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.1155" = type { %"class.base::internal::flat_tree.1156" }
%"class.base::internal::flat_tree.1156" = type { %"class.std::__1::vector.1157" }
%"class.std::__1::vector.1157" = type { %"class.std::__1::__vector_base.1158" }
%"class.std::__1::__vector_base.1158" = type { %"struct.std::__1::pair.1159"*, %"struct.std::__1::pair.1159"*, %"class.std::__1::__compressed_pair.1160" }
%"struct.std::__1::pair.1159" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.520", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1410", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1410" = type { %"class.std::__1::vector.1411" }
%"class.std::__1::vector.1411" = type { %"class.std::__1::__vector_base.1412" }
%"class.std::__1::__vector_base.1412" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"struct.std::__1::pair.1159"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.1165", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.1166" }
%"class.base::RepeatingCallback.1165" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1166" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1167" = type { %"class.std::__1::__compressed_pair.1168" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.1170" }
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1179" = type { %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.base::internal::flat_tree.668" = type { %"class.std::__1::vector.669" }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.676" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.671", %"class.viz::SurfaceId" }
%"class.absl::optional.671" = type { %"class.absl::optional_internal::optional_data.672" }
%"class.absl::optional_internal::optional_data.672" = type { %"class.absl::optional_internal::optional_data_base.673" }
%"class.absl::optional_internal::optional_data_base.673" = type { %"class.absl::optional_internal::optional_data_dtor_base.674" }
%"class.absl::optional_internal::optional_data_dtor_base.674" = type { i8, %union.anon.675 }
%union.anon.675 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.viz::SurfaceRange"* }
%"class.absl::optional.1185" = type { %"class.absl::optional_internal::optional_data.1186" }
%"class.absl::optional_internal::optional_data.1186" = type { %"class.absl::optional_internal::optional_data_base.1187" }
%"class.absl::optional_internal::optional_data_base.1187" = type { %"class.absl::optional_internal::optional_data_dtor_base.1188" }
%"class.absl::optional_internal::optional_data_dtor_base.1188" = type { i8, [7 x i8], %union.anon.1189 }
%union.anon.1189 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.1190", %"struct.viz::Selection.1195", i8, %"class.absl::optional.1196", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.1201", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.1190" = type { %"class.absl::optional_internal::optional_data.1191" }
%"class.absl::optional_internal::optional_data.1191" = type { %"class.absl::optional_internal::optional_data_base.1192" }
%"class.absl::optional_internal::optional_data_base.1192" = type { %"class.absl::optional_internal::optional_data_dtor_base.1193" }
%"class.absl::optional_internal::optional_data_dtor_base.1193" = type { i8, %union.anon.1194 }
%union.anon.1194 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection.1195" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.absl::optional.1196" = type { %"class.absl::optional_internal::optional_data.1197" }
%"class.absl::optional_internal::optional_data.1197" = type { %"class.absl::optional_internal::optional_data_base.1198" }
%"class.absl::optional_internal::optional_data_base.1198" = type { %"class.absl::optional_internal::optional_data_dtor_base.1199" }
%"class.absl::optional_internal::optional_data_dtor_base.1199" = type { i8, %union.anon.1200 }
%union.anon.1200 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.1201" = type { %"class.absl::optional_internal::optional_data.1202" }
%"class.absl::optional_internal::optional_data.1202" = type { %"class.absl::optional_internal::optional_data_base.1203" }
%"class.absl::optional_internal::optional_data_base.1203" = type { %"class.absl::optional_internal::optional_data_dtor_base.1204" }
%"class.absl::optional_internal::optional_data_dtor_base.1204" = type { i8, %union.anon.1205 }
%union.anon.1205 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.1206" }
%"class.base::circular_deque.1206" = type { %"class.base::internal::VectorBuffer.1207", i64, i64 }
%"class.base::internal::VectorBuffer.1207" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.714", %"class.std::__1::vector.714" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.1208", %"class.base::flat_map.1214", %"class.base::flat_map.1224", %"class.base::RepeatingCallback.1234", %"class.std::__1::vector.1235", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.1243", i64, i64 }
%"class.std::__1::unique_ptr.1208" = type { %"class.std::__1::__compressed_pair.1209" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.1210" }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.1214" = type { %"class.base::internal::flat_tree.1215" }
%"class.base::internal::flat_tree.1215" = type { %"class.std::__1::vector.1216" }
%"class.std::__1::vector.1216" = type { %"class.std::__1::__vector_base.1217" }
%"class.std::__1::__vector_base.1217" = type { %"struct.std::__1::pair.1218"*, %"struct.std::__1::pair.1218"*, %"class.std::__1::__compressed_pair.1219" }
%"struct.std::__1::pair.1218" = type opaque
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"struct.std::__1::pair.1218"* }
%"class.base::flat_map.1224" = type { %"class.base::internal::flat_tree.1225" }
%"class.base::internal::flat_tree.1225" = type { %"class.std::__1::vector.1226" }
%"class.std::__1::vector.1226" = type { %"class.std::__1::__vector_base.1227" }
%"class.std::__1::__vector_base.1227" = type { %"struct.std::__1::pair.1228"*, %"struct.std::__1::pair.1228"*, %"class.std::__1::__compressed_pair.1229" }
%"struct.std::__1::pair.1228" = type opaque
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"struct.std::__1::pair.1228"* }
%"class.base::RepeatingCallback.1234" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.1235" = type { %"class.std::__1::__vector_base.1236" }
%"class.std::__1::__vector_base.1236" = type { %"class.std::__1::unique_ptr.1237"*, %"class.std::__1::unique_ptr.1237"*, %"class.std::__1::__compressed_pair.1238" }
%"class.std::__1::unique_ptr.1237" = type opaque
%"class.std::__1::__compressed_pair.1238" = type { %"struct.std::__1::__compressed_pair_elem.1239" }
%"struct.std::__1::__compressed_pair_elem.1239" = type { %"class.std::__1::unique_ptr.1237"* }
%"class.base::flat_map.1243" = type { %"class.base::internal::flat_tree.1244" }
%"class.base::internal::flat_tree.1244" = type { %"class.std::__1::vector.1245" }
%"class.std::__1::vector.1245" = type { %"class.std::__1::__vector_base.1246" }
%"class.std::__1::__vector_base.1246" = type { %"struct.std::__1::pair.1247"*, %"struct.std::__1::pair.1247"*, %"class.std::__1::__compressed_pair.1248" }
%"struct.std::__1::pair.1247" = type opaque
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"struct.std::__1::pair.1247"* }
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.1259", %"class.base::internal::flat_tree.1269" }
%"class.base::flat_map.1259" = type { %"class.base::internal::flat_tree.1260" }
%"class.base::internal::flat_tree.1260" = type { %"class.std::__1::vector.1261" }
%"class.std::__1::vector.1261" = type { %"class.std::__1::__vector_base.1262" }
%"class.std::__1::__vector_base.1262" = type { %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*, %"class.std::__1::__compressed_pair.1264" }
%"struct.std::__1::pair.1263" = type opaque
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"struct.std::__1::pair.1263"* }
%"class.base::internal::flat_tree.1269" = type { %"class.std::__1::vector.1270" }
%"class.std::__1::vector.1270" = type { %"class.std::__1::__vector_base.1271" }
%"class.std::__1::__vector_base.1271" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.1282" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.1272", %"class.absl::optional.1277", %"struct.cc::ElementId" }
%"class.absl::optional.1272" = type { %"class.absl::optional_internal::optional_data.1273" }
%"class.absl::optional_internal::optional_data.1273" = type { %"class.absl::optional_internal::optional_data_base.1274" }
%"class.absl::optional_internal::optional_data_base.1274" = type { %"class.absl::optional_internal::optional_data_dtor_base.1275" }
%"class.absl::optional_internal::optional_data_dtor_base.1275" = type { i8, %union.anon.1276 }
%union.anon.1276 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1277" = type { %"class.absl::optional_internal::optional_data.1278" }
%"class.absl::optional_internal::optional_data.1278" = type { %"class.absl::optional_internal::optional_data_base.1279" }
%"class.absl::optional_internal::optional_data_base.1279" = type { %"class.absl::optional_internal::optional_data_dtor_base.1280" }
%"class.absl::optional_internal::optional_data_dtor_base.1280" = type { i8, %union.anon.1281 }
%union.anon.1281 = type { i32 }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.1299" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.1287", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.1287" = type { %"class.std::__1::__deque_base.1288" }
%"class.std::__1::__deque_base.1288" = type { %"struct.std::__1::__split_buffer.1289", i64, %"class.std::__1::__compressed_pair.1295" }
%"struct.std::__1::__split_buffer.1289" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.1290" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.base::circular_deque.1299" = type { %"class.base::internal::VectorBuffer.1300", i64, i64 }
%"class.base::internal::VectorBuffer.1300" = type { %"struct.std::__1::pair.1301"*, i64 }
%"struct.std::__1::pair.1301" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.1302", %"class.std::__1::map.1307", %"class.std::__1::map.1307" }
%"class.absl::optional.1302" = type { %"class.absl::optional_internal::optional_data.1303" }
%"class.absl::optional_internal::optional_data.1303" = type { %"class.absl::optional_internal::optional_data_base.1304" }
%"class.absl::optional_internal::optional_data_base.1304" = type { %"class.absl::optional_internal::optional_data_dtor_base.1305" }
%"class.absl::optional_internal::optional_data_dtor_base.1305" = type { i8, [3 x i8], %union.anon.1306 }
%union.anon.1306 = type { %"class.gfx::Transform" }
%"class.std::__1::map.1307" = type { %"class.std::__1::__tree.1308" }
%"class.std::__1::__tree.1308" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1309", %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.1316", %"class.std::__1::vector.722" }
%"class.std::__1::vector.1316" = type { %"class.std::__1::__vector_base.1317" }
%"class.std::__1::__vector_base.1317" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.1318" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.1318" = type { %"struct.std::__1::__compressed_pair_elem.1319" }
%"struct.std::__1::__compressed_pair_elem.1319" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.1323" = type { %"class.std::__1::__compressed_pair.1324" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.1325" }
%"struct.std::__1::__compressed_pair_elem.1325" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.914", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.1329" }
%"class.base::WeakPtrFactory.1329" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.1330", %"class.std::__1::map.1337", i64 }
%"class.std::__1::list.1330" = type { %"class.std::__1::__list_imp.1331" }
%"class.std::__1::__list_imp.1331" = type { %"struct.std::__1::__list_node_base.1332", %"class.std::__1::__compressed_pair.1333" }
%"struct.std::__1::__list_node_base.1332" = type { %"struct.std::__1::__list_node_base.1332"*, %"struct.std::__1::__list_node_base.1332"* }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::map.1337" = type { %"class.std::__1::__tree.1338" }
%"class.std::__1::__tree.1338" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1339", %"class.std::__1::__compressed_pair.1343" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.1348", %"class.base::internal::flat_tree.1358", %"class.base::internal::flat_tree.1358" }
%"class.base::flat_map.1348" = type { %"class.base::internal::flat_tree.1349" }
%"class.base::internal::flat_tree.1349" = type { %"class.std::__1::vector.1350" }
%"class.std::__1::vector.1350" = type { %"class.std::__1::__vector_base.1351" }
%"class.std::__1::__vector_base.1351" = type { %"struct.std::__1::pair.1352"*, %"struct.std::__1::pair.1352"*, %"class.std::__1::__compressed_pair.1353" }
%"struct.std::__1::pair.1352" = type opaque
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"struct.std::__1::pair.1352"* }
%"class.base::internal::flat_tree.1358" = type { %"class.std::__1::vector.1359" }
%"class.std::__1::vector.1359" = type { %"class.std::__1::__vector_base.1360" }
%"class.std::__1::__vector_base.1360" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.1361" }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.1362" }
%"struct.std::__1::__compressed_pair_elem.1362" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { i32*, i32*, %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { i32* }
%"class.base::WeakPtrFactory.1366" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare" = type { i8 }
%"class.base::LapTimer" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, i32, %"class.base::ThreadTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeTicks", i32, i32, i32, [4 x i8] }>
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.1435" }
%"class.base::time_internal::TimeBase.1435" = type { i64 }
%class.SkBitmap = type { %class.sk_sp.1436, %class.SkPixmap, %class.sk_sp.1437 }
%class.sk_sp.1436 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.1437 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.1438, [384 x i64], %class.sk_sp.1439, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.1440", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.1446" }
%"struct.cc::RasterSource::PlaybackSettings" = type { i8, i32, %"class.cc::ImageProvider"* }
%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient" = type { %"class.cc::PictureLayerTilingClient", %"class.cc::PictureLayerTilingClient"*, %"class.cc::Region" }
%"struct.cc::Tile::CreateInfo" = type <{ %"class.cc::PictureLayerTiling"*, i32, i32, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::AxisTransform2d", i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare" = type { i8 }

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl = comdat any

$_ZNSt3__16vectorINS_4pairIimEENS_9allocatorIS2_EEE6assignIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZN4base8internal9flat_treeIiNS0_8GetFirstENSt3__14lessIvEENS3_6vectorINS3_4pairIimEENS3_9allocatorIS8_EEEEE15sort_and_uniqueENS3_11__wrap_iterIPS8_EESF_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl = comdat any

@_ZTVN2cc31RasterizeAndRecordBenchmarkImplE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::RasterizeAndRecordBenchmarkImpl"*)* @_ZN2cc31RasterizeAndRecordBenchmarkImplD2Ev to i8*), i8* bitcast (void (%"class.cc::RasterizeAndRecordBenchmarkImpl"*)* @_ZN2cc31RasterizeAndRecordBenchmarkImplD0Ev to i8*), i8* bitcast (void (%"class.cc::RasterizeAndRecordBenchmarkImpl"*, %"class.cc::LayerTreeHostImpl"*)* @_ZN2cc31RasterizeAndRecordBenchmarkImpl17DidCompleteCommitEPNS_17LayerTreeHostImplE to i8*), i8* bitcast (void (%"class.cc::MicroBenchmarkImpl"*, %"class.cc::LayerImpl"*)* @_ZN2cc18MicroBenchmarkImpl10RunOnLayerEPNS_9LayerImplE to i8*), i8* bitcast (void (%"class.cc::RasterizeAndRecordBenchmarkImpl"*, %"class.cc::PictureLayerImpl"*)* @_ZN2cc31RasterizeAndRecordBenchmarkImpl10RunOnLayerEPNS_16PictureLayerImplE to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"rasterize_repeat_count\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"rasterize_time_ms\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"pixels_rasterized\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"pixels_rasterized_with_non_solid_color\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"pixels_rasterized_as_opaque\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"total_layers\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"total_picture_layers\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"total_picture_layers_with_no_content\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"total_picture_layers_off_screen\00", align 1
@.str.9 = private unnamed_addr constant [45 x i8] c"visible_pixels_by_lcd_text_disallowed_reason\00", align 1
@__const._ZN2cc31RasterizeAndRecordBenchmarkImpl10RunOnLayerEPNS_16PictureLayerImplE.it = private unnamed_addr constant %"class.cc::PictureLayerTiling::CoverageIterator" { %"class.cc::PictureLayerTiling"* inttoptr (i64 -6148914691236517206 to %"class.cc::PictureLayerTiling"*), %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, %"class.gfx::AxisTransform2d" { %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, %"class.cc::Tile"* inttoptr (i64 -6148914691236517206 to %"class.cc::Tile"*), %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, align 8
@.str.10 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZTVN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClientE = internal unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (%"class.cc::Tile"* (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*, %"struct.cc::Tile::CreateInfo"*)* @_ZN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient10CreateTileERKNS_4Tile10CreateInfoE to i8*), i8* bitcast (i64 (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*, %"class.gfx::Size"*)* @_ZN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient17CalculateTileSizeERKN3gfx4SizeE to i8*), i8* bitcast (%"class.cc::Region"* (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*)* @_ZN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient22GetPendingInvalidationEv to i8*), i8* bitcast (%"class.cc::PictureLayerTiling"* (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*, %"class.cc::PictureLayerTiling"*)* @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient28GetPendingOrActiveTwinTilingEPKNS_18PictureLayerTilingE to i8*), i8* bitcast (i1 (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*)* @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient22HasValidTilePrioritiesEv to i8*), i8* bitcast (i1 (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*)* @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient21RequiresHighResToDrawEv to i8*), i8* bitcast (%"class.base::flat_map.652"* (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*)* @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient22GetPaintWorkletRecordsEv to i8*), i8* bitcast (i1 (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*)* @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient25IsDirectlyCompositedImageEv to i8*), i8* bitcast (i1 (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*)* @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient27ScrollInteractionInProgressEv to i8*), i8* bitcast (i1 (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*)* @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient19DidCheckerboardQuadEv to i8*), i8* bitcast (void (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*)* @_ZN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClientD2Ev to i8*), i8* bitcast (void (%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*)* @_ZN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClientD0Ev to i8*)] }, align 8
@__const._ZN2cc12_GLOBAL__N_112RunBenchmarkEPNS_12RasterSourceEPNS_16ImageDecodeCacheERKN3gfx4RectERKNS5_9Vector2dFEmPN4base9TimeDeltaEPb.canvas = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.1438, [384 x i64], %class.sk_sp.1439, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.1440", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.1446" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.1438 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.1439 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.1440" { %"class.std::__1::__compressed_pair.1441" { %"struct.std::__1::__compressed_pair_elem.1442" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.1446" { %"class.std::__1::__compressed_pair.1447" { %"struct.std::__1::__compressed_pair_elem.1448" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8
@__const._ZN2cc12_GLOBAL__N_112RunBenchmarkEPNS_12RasterSourceEPNS_16ImageDecodeCacheERKN3gfx4RectERKNS5_9Vector2dFEmPN4base9TimeDeltaEPb.image_provider = private unnamed_addr constant %"class.cc::PlaybackImageProvider" { %"class.cc::ImageProvider" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.cc::ImageDecodeCache"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageDecodeCache"*), %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, [4 x i8] c"\AA\AA\AA\AA", %"class.absl::optional.1452" { %"class.absl::optional_internal::optional_data.1453" { %"class.absl::optional_internal::optional_data_base.1454" { %"class.absl::optional_internal::optional_data_dtor_base.1455" { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1456 { %"struct.cc::PlaybackImageProvider::Settings" <{ %"class.base::internal::flat_tree.837" { %"class.std::__1::vector.160" { %"class.std::__1::__vector_base.161" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.162" { %"struct.std::__1::__compressed_pair_elem.163" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } } }, %"class.base::flat_map.1457" { %"class.base::internal::flat_tree.1458" { %"class.std::__1::vector.1459" { %"class.std::__1::__vector_base.1460" { %"struct.std::__1::pair.1461"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.1461"*), %"struct.std::__1::pair.1461"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.1461"*), %"class.std::__1::__compressed_pair.1462" { %"struct.std::__1::__compressed_pair_elem.1463" { %"struct.std::__1::pair.1461"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.1461"*) } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } } } } } }, align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN2cc31RasterizeAndRecordBenchmarkImplC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS2_5ValueENS2_12OnceCallbackIFvNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEEE = hidden unnamed_addr alias void (%"class.cc::RasterizeAndRecordBenchmarkImpl"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::Value"*, %"class.base::OnceCallback"*), void (%"class.cc::RasterizeAndRecordBenchmarkImpl"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::Value"*, %"class.base::OnceCallback"*)* @_ZN2cc31RasterizeAndRecordBenchmarkImplC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS2_5ValueENS2_12OnceCallbackIFvNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEEE
@_ZN2cc31RasterizeAndRecordBenchmarkImplD1Ev = hidden unnamed_addr alias void (%"class.cc::RasterizeAndRecordBenchmarkImpl"*), void (%"class.cc::RasterizeAndRecordBenchmarkImpl"*)* @_ZN2cc31RasterizeAndRecordBenchmarkImplD2Ev
@_ZN2cc31RasterizeAndRecordBenchmarkImpl16RasterizeResultsC1Ev = hidden unnamed_addr alias void (%"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults"*), void (%"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults"*)* @_ZN2cc31RasterizeAndRecordBenchmarkImpl16RasterizeResultsC2Ev
@_ZN2cc31RasterizeAndRecordBenchmarkImpl16RasterizeResultsD1Ev = hidden unnamed_addr alias void (%"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults"*), void (%"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults"*)* @_ZN2cc31RasterizeAndRecordBenchmarkImpl16RasterizeResultsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc31RasterizeAndRecordBenchmarkImplC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS2_5ValueENS2_12OnceCallbackIFvNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEEE(%"class.cc::RasterizeAndRecordBenchmarkImpl"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::Value"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::DictionaryValue"*, align 8
  %7 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = icmp eq %"class.base::SingleThreadTaskRunner"* %1, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %4, %13
  call void @_ZN2cc18MicroBenchmarkImplC2EN4base12OnceCallbackIFvNSt3__110unique_ptrINS1_5ValueENS3_14default_deleteIS5_EEEEEEE13scoped_refptrINS1_22SingleThreadTaskRunnerEE(%"class.cc::MicroBenchmarkImpl"* %7, %"class.base::OnceCallback"* nonnull %5, %"class.base::SingleThreadTaskRunner"* %1) #13
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #13
  %18 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc31RasterizeAndRecordBenchmarkImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1
  %20 = bitcast %"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 80, i1 false) #13
  %21 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 2
  store i32 100, i32* %21, align 8
  %22 = bitcast %"class.base::DictionaryValue"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %6, align 8
  %23 = call zeroext i1 @_ZN4base5Value15GetAsDictionaryEPPNS_15DictionaryValueE(%"class.base::Value"* %2, %"class.base::DictionaryValue"** nonnull %6) #13
  %24 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %6, align 8
  %25 = icmp eq %"class.base::DictionaryValue"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %16
  %27 = call zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"* nonnull %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i64 22) #13
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %6, align 8
  %30 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %29, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i64 22, i32* %21) #13
  br label %31

31:                                               ; preds = %16, %28, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br i1 %12, label %40, label %32

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %33, i64 -2
  %39 = bitcast %"class.base::RefCountedThreadSafe.2"* %38 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %39) #13
  br label %40

40:                                               ; preds = %31, %32, %37
  ret void
}

declare void @_ZN2cc18MicroBenchmarkImplC2EN4base12OnceCallbackIFvNSt3__110unique_ptrINS1_5ValueENS3_14default_deleteIS5_EEEEEEE13scoped_refptrINS1_22SingleThreadTaskRunnerEE(%"class.cc::MicroBenchmarkImpl"*, %"class.base::OnceCallback"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN4base5Value15GetAsDictionaryEPPNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"*, i8*, i64, i32*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc31RasterizeAndRecordBenchmarkImplD2Ev(%"class.cc::RasterizeAndRecordBenchmarkImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 0
  tail call void @_ZN2cc18MicroBenchmarkImplD2Ev(%"class.cc::MicroBenchmarkImpl"* %2) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc18MicroBenchmarkImplD2Ev(%"class.cc::MicroBenchmarkImpl"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc31RasterizeAndRecordBenchmarkImplD0Ev(%"class.cc::RasterizeAndRecordBenchmarkImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 0
  tail call void @_ZN2cc18MicroBenchmarkImplD2Ev(%"class.cc::MicroBenchmarkImpl"* %2) #13
  %3 = bitcast %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc31RasterizeAndRecordBenchmarkImpl17DidCompleteCommitEPNS_17LayerTreeHostImplE(%"class.cc::RasterizeAndRecordBenchmarkImpl"*, %"class.cc::LayerTreeHostImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %1, i64 0, i32 35, i32 0, i32 0, i32 0
  %5 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %5, i64 0, i32 22, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.324"*, %"class.std::__1::unique_ptr.324"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %5, i64 0, i32 22, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.324"*, %"class.std::__1::unique_ptr.324"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.324"* %7, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 5
  %13 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 0
  br label %44

14:                                               ; preds = %44, %2
  %15 = tail call i8* @_Znwm(i64 32) #14
  %16 = bitcast i8* %15 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %16) #13
  %17 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 4
  %18 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %17) #13
  %19 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue9SetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::DictionaryValue"* nonnull %16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i64 17, double %18) #13
  %20 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i64 17, i32 %21) #13
  %23 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i64 38, i32 %24) #13
  %26 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i64 27, i32 %27) #13
  %29 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i64 12, i32 %30) #13
  %32 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 6
  %33 = load i32, i32* %32, align 4
  %34 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i64 20, i32 %33) #13
  %35 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 7
  %36 = load i32, i32* %35, align 8
  %37 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), i64 36, i32 %36) #13
  %38 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 8
  %39 = load i32, i32* %38, align 4
  %40 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i64 31, i32 %39) #13
  %41 = tail call i8* @_Znwm(i64 32) #14
  %42 = bitcast i8* %41 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %42) #13
  %43 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %60

44:                                               ; preds = %11, %44
  %45 = phi %"class.std::__1::unique_ptr.324"* [ %7, %11 ], [ %54, %44 ]
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %46, align 8
  %48 = load i32, i32* %12, align 8
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %12, align 8
  %50 = bitcast %"class.cc::LayerImpl"* %47 to void (%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*)***
  %51 = load void (%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*)**, void (%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*)*, void (%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*)** %51, i64 23
  %53 = load void (%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*)*, void (%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*)** %52, align 8
  tail call void %53(%"class.cc::LayerImpl"* %47, %"class.cc::MicroBenchmarkImpl"* %13) #13
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324"* %45, i64 1
  %55 = icmp eq %"class.std::__1::unique_ptr.324"* %54, %9
  br i1 %55, label %14, label %44

56:                                               ; preds = %69
  %57 = call %"class.base::DictionaryValue"* @_ZN4base15DictionaryValue13SetDictionaryENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrIS0_NS2_14default_deleteIS0_EEEE(%"class.base::DictionaryValue"* nonnull %16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9, i64 0, i64 0), i64 44, %"class.base::DictionaryValue"* nonnull %42) #13
  %58 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 0
  %59 = bitcast i8* %15 to %"class.base::Value"*
  call void @_ZN2cc18MicroBenchmarkImpl10NotifyDoneENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE(%"class.cc::MicroBenchmarkImpl"* %58, %"class.base::Value"* nonnull %59) #13
  ret void

60:                                               ; preds = %69, %14
  %61 = phi i64 [ 0, %14 ], [ %74, %69 ]
  %62 = trunc i64 %61 to i8
  %63 = call i8* @_ZN2cc31LCDTextDisallowedReasonToStringENS_23LCDTextDisallowedReasonE(i8 zeroext %62) #13
  %64 = icmp eq i8* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %60
  %66 = call i64 @strlen(i8* nonnull %63) #13
  br label %69

67:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #13
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  br label %69

69:                                               ; preds = %65, %67
  %70 = phi i64 [ 0, %67 ], [ %66, %65 ]
  %71 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 3, i64 %61
  %72 = load i32, i32* %71, align 4
  %73 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %42, i8* %63, i64 %70, i32 %72) #13
  %74 = add nuw nsw i64 %61, 1
  %75 = icmp eq i64 %74, 11
  br i1 %75, label %56, label %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::DictionaryValue"*, i8*, i64, double) local_unnamed_addr #1

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"*, i8*, i64, i32) local_unnamed_addr #1

declare i8* @_ZN2cc31LCDTextDisallowedReasonToStringENS_23LCDTextDisallowedReasonE(i8 zeroext) local_unnamed_addr #1

declare %"class.base::DictionaryValue"* @_ZN4base15DictionaryValue13SetDictionaryENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrIS0_NS2_14default_deleteIS0_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::DictionaryValue"*) local_unnamed_addr #1

declare void @_ZN2cc18MicroBenchmarkImpl10NotifyDoneENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE(%"class.cc::MicroBenchmarkImpl"*, %"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc31RasterizeAndRecordBenchmarkImpl10RunOnLayerEPNS_16PictureLayerImplE(%"class.cc::RasterizeAndRecordBenchmarkImpl"* nocapture, %"class.cc::PictureLayerImpl"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = alloca %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", align 1
  %5 = alloca %"class.base::LapTimer", align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %struct.SkImageInfo, align 16
  %9 = alloca %class.SkCanvas, align 8
  %10 = alloca %class.SkSurfaceProps, align 4
  %11 = alloca %"class.absl::optional.1452", align 8
  %12 = alloca %"class.cc::PlaybackImageProvider", align 8
  %13 = alloca %"class.gfx::ColorSpace", align 4
  %14 = alloca %"struct.cc::RasterSource::PlaybackSettings", align 8
  %15 = alloca i64, align 8
  %16 = alloca %"class.gfx::AxisTransform2d", align 8
  %17 = alloca %"class.logging::CheckError", align 8
  %18 = alloca { i64, i64 }, align 8
  %19 = bitcast { i64, i64 }* %18 to %"class.gfx::Rect"*
  %20 = alloca %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", align 8
  %21 = alloca %"class.cc::Region", align 8
  %22 = alloca %"class.gfx::Rect", align 4
  %23 = alloca <4 x float>, align 16
  %24 = bitcast <4 x float>* %23 to %"class.gfx::AxisTransform2d"*
  %25 = alloca %"class.cc::PictureLayerTiling::CoverageIterator", align 8
  %26 = alloca <2 x i64>, align 16
  %27 = bitcast <2 x i64>* %26 to %"class.gfx::Rect"*
  %28 = alloca %"class.gfx::Rect", align 8
  %29 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 6
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %29, align 4
  %32 = tail call zeroext i1 @_ZNK2cc16PictureLayerImpl14CanHaveTilingsEv(%"class.cc::PictureLayerImpl"* %1) #13
  br i1 %32, label %37, label %33

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 7
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %34, align 8
  br label %434

37:                                               ; preds = %2
  %38 = bitcast %"class.cc::PictureLayerImpl"* %1 to %"class.cc::LayerImpl"*
  %39 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %1, i64 0, i32 0, i32 25, i32 7
  %40 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %1, i64 0, i32 0, i32 25, i32 7, i32 1
  %41 = bitcast %"class.gfx::Size"* %40 to i64*
  %42 = load i64, i64* %41, align 4
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %43, 0
  %45 = icmp ult i64 %42, 4294967296
  %46 = or i1 %45, %44
  br i1 %46, label %47, label %51

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 8
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %48, align 4
  br label %434

51:                                               ; preds = %37
  %52 = bitcast %"class.gfx::Rect"* %39 to i64*
  %53 = load i64, i64* %52, align 4
  %54 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %1, i64 0, i32 5, i32 0
  %55 = load %"class.cc::RasterSource"*, %"class.cc::RasterSource"** %54, align 8
  %56 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %55, i64 0, i32 4, i32 0
  %57 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %56, align 8
  %58 = bitcast { i64, i64 }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #13
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 0
  store i64 %53, i64* %59, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  store i64 %42, i64* %60, align 8
  %61 = call double @_ZNK2cc15DisplayItemList14AreaOfDrawTextERKN3gfx4RectE(%"class.cc::DisplayItemList"* %57, %"class.gfx::Rect"* nonnull dereferenceable(16) %19) #13
  %62 = fptosi double %61 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #13
  %63 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %1, i64 0, i32 17
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i64
  %66 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 3, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i32 %67, %62
  store i32 %68, i32* %66, align 4
  %69 = bitcast %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %69) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 40, i1 false)
  %70 = icmp eq %"class.cc::PictureLayerImpl"* %1, null
  %71 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %1, i64 0, i32 1
  %72 = select i1 %70, %"class.cc::PictureLayerTilingClient"* null, %"class.cc::PictureLayerTilingClient"* %71
  %73 = bitcast %"class.cc::Region"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13
  %74 = bitcast %"class.gfx::Rect"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #13
  %75 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %38) #13
  %76 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %22, i64 0, i32 0, i32 0
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %22, i64 0, i32 0, i32 1
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %22, i64 0, i32 1
  %79 = bitcast %"class.gfx::Size"* %78 to i64*
  store i64 %75, i64* %79, align 4
  call void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"* nonnull %21, %"class.gfx::Rect"* nonnull dereferenceable(16) %22) #13
  %80 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %20, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %20, i64 0, i32 1
  store %"class.cc::PictureLayerTilingClient"* %72, %"class.cc::PictureLayerTilingClient"** %81, align 8
  %82 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %20, i64 0, i32 2
  call void @_ZN2cc6RegionC1ERKS0_(%"class.cc::Region"* %82, %"class.cc::Region"* nonnull dereferenceable(24) %21) #13
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13
  %83 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %1, i64 0, i32 0, i32 3
  %84 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %83, align 8
  %85 = call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %84) #13
  %86 = call zeroext i1 @_ZNK2cc9LayerImpl8IsActiveEv(%"class.cc::LayerImpl"* %38) #13
  %87 = xor i1 %86, true
  %88 = zext i1 %87 to i32
  %89 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %20, i64 0, i32 0
  %90 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %85, i64 0, i32 36
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %85, i64 0, i32 37
  %93 = load float, float* %92, align 8
  %94 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %85, i64 0, i32 38
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %85, i64 0, i32 51
  %97 = load i32, i32* %96, align 8
  %98 = sitofp i32 %97 to float
  %99 = call %"class.cc::PictureLayerTilingSet"* @_ZN2cc21PictureLayerTilingSet6CreateENS_9WhichTreeEPNS_24PictureLayerTilingClientEifif(i32 %88, %"class.cc::PictureLayerTilingClient"* nonnull %89, i32 %91, float %93, i32 %95, float %98) #13
  %100 = bitcast <4 x float>* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #13
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %23, align 16
  %101 = load %"class.cc::RasterSource"*, %"class.cc::RasterSource"** %54, align 8
  %102 = icmp eq %"class.cc::RasterSource"* %101, null
  br i1 %102, label %106, label %103

103:                                              ; preds = %51
  %104 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %101, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 1 monotonic
  br label %106

106:                                              ; preds = %51, %103
  %107 = call %"class.cc::PictureLayerTiling"* @_ZN2cc21PictureLayerTilingSet9AddTilingERKN3gfx15AxisTransform2dE13scoped_refptrINS_12RasterSourceEEb(%"class.cc::PictureLayerTilingSet"* %99, %"class.gfx::AxisTransform2d"* nonnull dereferenceable(16) %24, %"class.cc::RasterSource"* %101, i1 zeroext false) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #13
  %108 = getelementptr inbounds %"class.cc::PictureLayerTiling", %"class.cc::PictureLayerTiling"* %107, i64 0, i32 7
  store i32 1, i32* %108, align 8
  %109 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #13
  %110 = getelementptr inbounds %"class.cc::PictureLayerTiling", %"class.cc::PictureLayerTiling"* %107, i64 0, i32 10, i32 1
  %111 = bitcast %"class.gfx::Size"* %110 to i64*
  %112 = load i64, i64* %111, align 4
  %113 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %113, align 4
  %114 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %116 = bitcast %"class.gfx::Size"* %115 to i64*
  store i64 %112, i64* %116, align 4
  call void @_ZN2cc18PictureLayerTiling16SetLiveTilesRectERKN3gfx4RectE(%"class.cc::PictureLayerTiling"* %107, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #13
  %117 = getelementptr inbounds %"class.cc::PictureLayerTiling", %"class.cc::PictureLayerTiling"* %107, i64 0, i32 4, i32 0
  %118 = load %"class.cc::RasterSource"*, %"class.cc::RasterSource"** %117, align 8
  %119 = bitcast %"class.cc::PictureLayerTiling::CoverageIterator"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %119) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* align 8 bitcast (%"class.cc::PictureLayerTiling::CoverageIterator"* @__const._ZN2cc31RasterizeAndRecordBenchmarkImpl10RunOnLayerEPNS_16PictureLayerImplE.it to i8*), i64 96, i1 false)
  %120 = bitcast <2 x i64>* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #13
  %121 = bitcast %"class.gfx::Rect"* %39 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 4
  store <2 x i64> %122, <2 x i64>* %26, align 16
  call void @_ZN2cc18PictureLayerTiling16CoverageIteratorC1EPKS0_fRKN3gfx4RectE(%"class.cc::PictureLayerTiling::CoverageIterator"* nonnull %25, %"class.cc::PictureLayerTiling"* %107, float 1.000000e+00, %"class.gfx::Rect"* nonnull dereferenceable(16) %27) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #13
  %123 = getelementptr inbounds %"class.cc::PictureLayerTiling::CoverageIterator", %"class.cc::PictureLayerTiling::CoverageIterator"* %25, i64 0, i32 7
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"class.cc::PictureLayerTiling::CoverageIterator", %"class.cc::PictureLayerTiling::CoverageIterator"* %25, i64 0, i32 11
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %124, %126
  br i1 %127, label %183, label %128

128:                                              ; preds = %106
  %129 = bitcast %"class.gfx::Rect"* %28 to i8*
  %130 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 0, i32 0, i32 1
  %132 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 0, i32 1, i32 0
  %133 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 0, i32 1, i32 1
  %134 = getelementptr inbounds %"class.cc::PictureLayerTiling::CoverageIterator", %"class.cc::PictureLayerTiling::CoverageIterator"* %25, i64 0, i32 4
  %135 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 2
  %136 = bitcast i64* %15 to %"class.gfx::Size"*
  %137 = bitcast %"class.base::LapTimer"* %5 to i8*
  %138 = bitcast i32* %6 to i8*
  %139 = bitcast %"class.gfx::Rect"* %28 to i64*
  %140 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 0, i32 1
  %141 = bitcast %"class.gfx::Size"* %140 to i64*
  %142 = bitcast %class.SkBitmap* %7 to i8*
  %143 = bitcast %struct.SkImageInfo* %8 to i8*
  %144 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %145 = bitcast %struct.SkISize* %144 to i64*
  %146 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %147 = bitcast %class.SkCanvas* %9 to i8*
  %148 = bitcast %class.SkSurfaceProps* %10 to i8*
  %149 = getelementptr inbounds %"class.absl::optional.1452", %"class.absl::optional.1452"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.absl::optional.1452", %"class.absl::optional.1452"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %151 = bitcast %union.anon.1456* %150 to i8*
  %152 = getelementptr inbounds %"class.absl::optional.1452", %"class.absl::optional.1452"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %153 = getelementptr inbounds %"struct.cc::PlaybackImageProvider::Settings", %"struct.cc::PlaybackImageProvider::Settings"* %152, i64 0, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.cc::PlaybackImageProvider::Settings", %"struct.cc::PlaybackImageProvider::Settings"* %152, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.absl::optional.1452", %"class.absl::optional.1452"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %156 = getelementptr inbounds %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* %4, i64 0, i32 0
  %157 = bitcast i32** %155 to i64*
  %158 = getelementptr inbounds %"class.absl::optional.1452", %"class.absl::optional.1452"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %159 = getelementptr inbounds %"class.base::internal::flat_tree.1458", %"class.base::internal::flat_tree.1458"* %158, i64 0, i32 0
  %160 = getelementptr inbounds %"class.base::internal::flat_tree.1458", %"class.base::internal::flat_tree.1458"* %158, i64 0, i32 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.absl::optional.1452", %"class.absl::optional.1452"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %162 = bitcast %"class.cc::PlaybackImageProvider"* %12 to i8*
  %163 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %13, i64 0, i32 0
  %164 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %14, i64 0, i32 0
  %165 = getelementptr inbounds %"class.cc::PlaybackImageProvider", %"class.cc::PlaybackImageProvider"* %12, i64 0, i32 0
  %166 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %14, i64 0, i32 2
  %167 = bitcast i64* %15 to i8*
  %168 = bitcast %"class.gfx::AxisTransform2d"* %16 to i8*
  %169 = bitcast %"class.gfx::AxisTransform2d"* %16 to i64*
  %170 = getelementptr inbounds %"class.gfx::AxisTransform2d", %"class.gfx::AxisTransform2d"* %16, i64 0, i32 1
  %171 = bitcast %"class.gfx::Vector2dF"* %170 to i32*
  %172 = getelementptr inbounds %"class.gfx::AxisTransform2d", %"class.gfx::AxisTransform2d"* %16, i64 0, i32 1, i32 1
  %173 = bitcast float* %172 to i32*
  %174 = bitcast %"class.absl::optional.1452"* %11 to i64*
  %175 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %1, i64 0, i32 0, i32 10
  %176 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 2
  %177 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 1
  %178 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 0
  %179 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmarkImpl", %"class.cc::RasterizeAndRecordBenchmarkImpl"* %0, i64 0, i32 1, i32 4, i32 0
  %180 = bitcast %"class.logging::CheckError"* %17 to i8*
  %181 = bitcast %"class.gfx::Rect"* %28 to i8*
  %182 = bitcast %struct.SkImageInfo* %8 to <2 x i64>*
  br label %188

183:                                              ; preds = %428, %106
  call void @_ZN2cc18PictureLayerTiling16CoverageIteratorD1Ev(%"class.cc::PictureLayerTiling::CoverageIterator"* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %119) #13
  %184 = icmp eq %"class.cc::PictureLayerTilingSet"* %99, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %183
  call void @_ZN2cc21PictureLayerTilingSetD1Ev(%"class.cc::PictureLayerTilingSet"* nonnull %99) #13
  %186 = bitcast %"class.cc::PictureLayerTilingSet"* %99 to i8*
  call void @_ZdlPv(i8* %186) #14
  br label %187

187:                                              ; preds = %183, %185
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* %82) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %69) #13
  br label %434

188:                                              ; preds = %128, %428
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %129) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 -86, i64 16, i1 false)
  %189 = load %"class.cc::Tile"*, %"class.cc::Tile"** %134, align 8
  %190 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %189, i64 0, i32 2
  %191 = bitcast %"class.gfx::Rect"* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %129, i8* align 4 %191, i64 16, i1 false)
  %192 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %189, i64 0, i32 4, i32 0
  %193 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %83, align 8
  %194 = call %"class.cc::ImageDecodeCache"* @_ZNK2cc13LayerTreeImpl18image_decode_cacheEv(%"class.cc::LayerTreeImpl"* %193) #13
  %195 = load i32, i32* %135, align 8
  %196 = sext i32 %195 to i64
  %197 = icmp eq i32 %195, 0
  br i1 %197, label %391, label %198

198:                                              ; preds = %188
  %199 = bitcast %"class.gfx::Vector2dF"* %192 to i64*
  %200 = bitcast %"class.gfx::Vector2dF"* %192 to <2 x float>*
  br label %201

201:                                              ; preds = %383, %198
  %202 = phi i64 [ 9223372036854775807, %198 ], [ %386, %383 ]
  %203 = phi i64 [ 0, %198 ], [ %387, %383 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %137) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 72, i1 false) #13
  call void @_ZN4base8LapTimerC1EiNS_9TimeDeltaEiNS0_11TimerMethodE(%"class.base::LapTimer"* nonnull %5, i32 0, i64 1000, i32 1, i32 1) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #13
  store i32 0, i32* %6, align 4
  %204 = load <2 x float>, <2 x float>* %200, align 4
  %205 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %204
  %206 = fcmp oeq <2 x float> %205, <float 1.000000e+00, float 1.000000e+00>
  %207 = extractelement <2 x i1> %206, i32 0
  %208 = extractelement <2 x i1> %206, i32 1
  %209 = and i1 %207, %208
  br i1 %209, label %210, label %216

210:                                              ; preds = %201
  %211 = load i64, i64* %139, align 8
  %212 = trunc i64 %211 to i32
  %213 = lshr i64 %211, 32
  %214 = trunc i64 %213 to i32
  %215 = load i64, i64* %141, align 8
  br label %273

216:                                              ; preds = %201
  %217 = load i32, i32* %130, align 8
  %218 = sitofp i32 %217 to float
  %219 = extractelement <2 x float> %205, i32 0
  %220 = fmul float %219, %218
  %221 = call float @llvm.floor.f32(float %220) #13
  %222 = fptosi float %221 to i32
  %223 = load i32, i32* %131, align 4
  %224 = sitofp i32 %223 to float
  %225 = extractelement <2 x float> %205, i32 1
  %226 = fmul float %225, %224
  %227 = call float @llvm.floor.f32(float %226) #13
  %228 = fptosi float %227 to i32
  %229 = load i32, i32* %132, align 8
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %237, label %231

231:                                              ; preds = %216
  %232 = add nsw i32 %229, %217
  %233 = sitofp i32 %232 to float
  %234 = fmul float %219, %233
  %235 = call float @llvm.ceil.f32(float %234) #13
  %236 = fptosi float %235 to i32
  br label %237

237:                                              ; preds = %231, %216
  %238 = phi i32 [ %236, %231 ], [ %222, %216 ]
  %239 = load i32, i32* %133, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %247, label %241

241:                                              ; preds = %237
  %242 = add nsw i32 %239, %223
  %243 = sitofp i32 %242 to float
  %244 = fmul float %225, %243
  %245 = call float @llvm.ceil.f32(float %244) #13
  %246 = fptosi float %245 to i32
  br label %247

247:                                              ; preds = %241, %237
  %248 = phi i32 [ %246, %241 ], [ %228, %237 ]
  %249 = sub nsw i32 %238, %222
  %250 = sub nsw i32 %248, %228
  %251 = icmp sgt i32 %222, 0
  %252 = icmp sgt i32 %249, 0
  %253 = and i1 %251, %252
  %254 = sub nuw nsw i32 2147483647, %222
  %255 = icmp ult i32 %254, %249
  %256 = and i1 %255, %253
  %257 = select i1 %256, i32 %254, i32 %249
  %258 = icmp sgt i32 %228, 0
  %259 = icmp sgt i32 %250, 0
  %260 = and i1 %258, %259
  %261 = sub nuw nsw i32 2147483647, %228
  %262 = icmp ult i32 %261, %250
  %263 = and i1 %262, %260
  %264 = select i1 %263, i32 %261, i32 %250
  %265 = icmp sgt i32 %257, 0
  %266 = select i1 %265, i32 %257, i32 0
  %267 = zext i32 %266 to i64
  %268 = icmp sgt i32 %264, 0
  %269 = select i1 %268, i32 %264, i32 0
  %270 = zext i32 %269 to i64
  %271 = shl nuw nsw i64 %270, 32
  %272 = or i64 %271, %267
  br label %273

273:                                              ; preds = %247, %210
  %274 = phi i32 [ %214, %210 ], [ %228, %247 ]
  %275 = phi i32 [ %212, %210 ], [ %222, %247 ]
  %276 = phi i64 [ %215, %210 ], [ %272, %247 ]
  %277 = zext i32 %274 to i64
  %278 = shl nuw i64 %277, 32
  %279 = zext i32 %275 to i64
  %280 = or i64 %278, %279
  %281 = call zeroext i1 @_ZNK2cc12RasterSource25PerformSolidColorAnalysisEN3gfx4RectEPj(%"class.cc::RasterSource"* %118, i64 %280, i64 %276, i32* nonnull %6) #13
  br label %282

282:                                              ; preds = %381, %273
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %142) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 56, i1 false) #13
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #13
  %283 = load i32, i32* %132, align 8
  %284 = load i32, i32* %133, align 4
  %285 = zext i32 %284 to i64
  %286 = shl nuw i64 %285, 32
  %287 = zext i32 %283 to i64
  %288 = or i64 %286, %287
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %182, align 16, !alias.scope !2
  store i64 %288, i64* %145, align 16, !alias.scope !2
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %7, %struct.SkImageInfo* nonnull dereferenceable(24) %8) #13
  %289 = load %class.SkColorSpace*, %class.SkColorSpace** %146, align 16
  %290 = icmp eq %class.SkColorSpace* %289, null
  br i1 %290, label %297, label %291

291:                                              ; preds = %282
  %292 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %289, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = atomicrmw add i32* %292, i32 -1 acq_rel
  %294 = icmp eq i32 %293, 1
  br i1 %294, label %295, label %297

295:                                              ; preds = %291
  %296 = bitcast %class.SkColorSpace* %289 to i8*
  call void @_ZdlPv(i8* %296) #14
  br label %297

297:                                              ; preds = %295, %291, %282
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #13
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %147) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %147, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.1438, [384 x i64], %class.sk_sp.1439, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.1440", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.1446" }* @__const._ZN2cc12_GLOBAL__N_112RunBenchmarkEPNS_12RasterSourceEPNS_16ImageDecodeCacheERKN3gfx4RectERKNS5_9Vector2dFEmPN4base9TimeDeltaEPb.canvas to i8*), i64 3232, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #13
  call void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* nonnull sret %10) #13
  call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %9, %class.SkBitmap* nonnull dereferenceable(56) %7, %class.SkSurfaceProps* nonnull dereferenceable(8) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #13
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %149) #13
  store i64 -6148914691236517376, i64* %174, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 56, i1 false) #13
  call void @_ZN2cc21PlaybackImageProvider8SettingsC1Ev(%"struct.cc::PlaybackImageProvider::Settings"* %152) #13
  store i8 1, i8* %149, align 8
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.160"* %153, i32* null, i32* null) #13
  %298 = load i32*, i32** %154, align 8
  %299 = load i32*, i32** %155, align 8
  %300 = ptrtoint i32* %299 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %156) #13
  %301 = ptrtoint i32* %298 to i64
  %302 = sub i64 %300, %301
  %303 = ashr exact i64 %302, 2
  %304 = icmp sgt i64 %302, 512
  br i1 %304, label %305, label %316

305:                                              ; preds = %297
  %306 = icmp slt i64 %303, 2305843009213693951
  %307 = select i1 %306, i64 %303, i64 2305843009213693951
  br label %308

308:                                              ; preds = %313, %305
  %309 = phi i64 [ %314, %313 ], [ %307, %305 ]
  %310 = shl i64 %309, 2
  %311 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %310, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #13
  %312 = icmp eq i8* %311, null
  br i1 %312, label %313, label %317

313:                                              ; preds = %308
  %314 = lshr i64 %309, 1
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %316, label %308

316:                                              ; preds = %313, %297
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %298, i32* %299, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %303, i32* null, i64 0) #13
  br label %319

317:                                              ; preds = %308
  %318 = bitcast i8* %311 to i32*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %298, i32* %299, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %303, i32* nonnull %318, i64 %309) #13
  call void @_ZdlPv(i8* nonnull %311) #14
  br label %319

319:                                              ; preds = %317, %316
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %156) #13
  %320 = icmp eq i32* %298, %299
  br i1 %320, label %369, label %321

321:                                              ; preds = %319, %325
  %322 = phi i32* [ %323, %325 ], [ %298, %319 ]
  %323 = getelementptr inbounds i32, i32* %322, i64 1
  %324 = icmp eq i32* %323, %299
  br i1 %324, label %369, label %325

325:                                              ; preds = %321
  %326 = load i32, i32* %322, align 4
  %327 = load i32, i32* %323, align 4
  %328 = icmp slt i32 %326, %327
  br i1 %328, label %321, label %329

329:                                              ; preds = %325
  %330 = icmp eq i32* %322, %299
  br i1 %330, label %369, label %331

331:                                              ; preds = %329
  %332 = getelementptr inbounds i32, i32* %322, i64 2
  %333 = icmp eq i32* %332, %299
  br i1 %333, label %355, label %334

334:                                              ; preds = %331
  %335 = ptrtoint i32* %322 to i64
  br label %336

336:                                              ; preds = %351, %334
  %337 = phi i32 [ %352, %351 ], [ %326, %334 ]
  %338 = phi i32* [ %350, %351 ], [ %322, %334 ]
  %339 = phi i32* [ %348, %351 ], [ %332, %334 ]
  %340 = phi i64 [ %347, %351 ], [ %335, %334 ]
  %341 = load i32, i32* %339, align 4
  %342 = icmp slt i32 %337, %341
  br i1 %342, label %343, label %346

343:                                              ; preds = %336
  %344 = getelementptr inbounds i32, i32* %338, i64 1
  %345 = ptrtoint i32* %344 to i64
  store i32 %341, i32* %344, align 4
  br label %346

346:                                              ; preds = %343, %336
  %347 = phi i64 [ %340, %336 ], [ %345, %343 ]
  %348 = getelementptr inbounds i32, i32* %339, i64 1
  %349 = icmp eq i32* %348, %299
  %350 = inttoptr i64 %347 to i32*
  br i1 %349, label %353, label %351

351:                                              ; preds = %346
  %352 = load i32, i32* %350, align 4
  br label %336

353:                                              ; preds = %346
  %354 = inttoptr i64 %347 to i32*
  br label %355

355:                                              ; preds = %353, %331
  %356 = phi i32* [ %322, %331 ], [ %354, %353 ]
  %357 = getelementptr inbounds i32, i32* %356, i64 1
  %358 = icmp eq i32* %357, %299
  br i1 %358, label %369, label %359

359:                                              ; preds = %355
  %360 = load i64, i64* %157, align 8
  %361 = sub i64 %360, %300
  %362 = ashr exact i64 %361, 2
  %363 = icmp eq i64 %361, 0
  br i1 %363, label %367, label %364

364:                                              ; preds = %359
  %365 = bitcast i32* %357 to i8*
  %366 = bitcast i32* %299 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %365, i8* align 4 %366, i64 %361, i1 false) #13
  br label %367

367:                                              ; preds = %364, %359
  %368 = getelementptr inbounds i32, i32* %357, i64 %362
  store i32* %368, i32** %155, align 8
  br label %369

369:                                              ; preds = %321, %367, %355, %329, %319
  %370 = load i8, i8* %149, align 8, !range !7
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %372, label %373, !prof !8

372:                                              ; preds = %369
  call void @llvm.trap() #13
  unreachable

373:                                              ; preds = %369
  call void @_ZNSt3__16vectorINS_4pairIimEENS_9allocatorIS2_EEE6assignIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.1459"* %159, %"struct.std::__1::pair.1461"* null, %"struct.std::__1::pair.1461"* null) #13
  %374 = load %"struct.std::__1::pair.1461"*, %"struct.std::__1::pair.1461"** %160, align 8
  %375 = load %"struct.std::__1::pair.1461"*, %"struct.std::__1::pair.1461"** %161, align 8
  call void @_ZN4base8internal9flat_treeIiNS0_8GetFirstENSt3__14lessIvEENS3_6vectorINS3_4pairIimEENS3_9allocatorIS8_EEEEE15sort_and_uniqueENS3_11__wrap_iterIPS8_EESF_(%"class.base::internal::flat_tree.1458"* %158, %"struct.std::__1::pair.1461"* %374, %"struct.std::__1::pair.1461"* %375) #13
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %162) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %162, i8* align 8 bitcast (%"class.cc::PlaybackImageProvider"* @__const._ZN2cc12_GLOBAL__N_112RunBenchmarkEPNS_12RasterSourceEPNS_16ImageDecodeCacheERKN3gfx4RectERKNS5_9Vector2dFEmPN4base9TimeDeltaEPb.image_provider to i8*), i64 152, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %163) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %163, i8 0, i64 68, i1 false) #13
  call void @_ZN2cc21PlaybackImageProviderC1EPNS_16ImageDecodeCacheERKN3gfx10ColorSpaceEON4absl8optionalINS0_8SettingsEEE(%"class.cc::PlaybackImageProvider"* nonnull %12, %"class.cc::ImageDecodeCache"* %194, %"class.gfx::ColorSpace"* nonnull dereferenceable(68) %13, %"class.absl::optional.1452"* nonnull dereferenceable(64) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %163) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 -86, i64 16, i1 false) #13
  call void @_ZN2cc12RasterSource16PlaybackSettingsC1Ev(%"struct.cc::RasterSource::PlaybackSettings"* nonnull %14) #13
  store %"class.cc::ImageProvider"* %165, %"class.cc::ImageProvider"** %166, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #13
  %376 = call i64 @_ZNK2cc12RasterSource14GetContentSizeERKN3gfx9Vector2dFE(%"class.cc::RasterSource"* %118, %"class.gfx::Vector2dF"* dereferenceable(8) %192) #13
  store i64 %376, i64* %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #13
  %377 = load i64, i64* %199, align 4
  store i64 %377, i64* %169, align 8
  store i32 0, i32* %171, align 8
  store i32 0, i32* %173, align 4
  call void @_ZNK2cc12RasterSource16PlaybackToCanvasEP8SkCanvasRKN3gfx4SizeERKNS3_4RectES9_RKNS3_15AxisTransform2dERKNS0_16PlaybackSettingsE(%"class.cc::RasterSource"* %118, %class.SkCanvas* nonnull %9, %"class.gfx::Size"* nonnull dereferenceable(8) %136, %"class.gfx::Rect"* nonnull dereferenceable(16) %28, %"class.gfx::Rect"* nonnull dereferenceable(16) %28, %"class.gfx::AxisTransform2d"* nonnull dereferenceable(16) %16, %"struct.cc::RasterSource::PlaybackSettings"* nonnull dereferenceable(16) %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #13
  call void @_ZN4base8LapTimer7NextLapEv(%"class.base::LapTimer"* nonnull %5) #13
  call void @_ZN2cc12RasterSource16PlaybackSettingsD1Ev(%"struct.cc::RasterSource::PlaybackSettings"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #13
  call void @_ZN2cc21PlaybackImageProviderD1Ev(%"class.cc::PlaybackImageProvider"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %162) #13
  %378 = load i8, i8* %149, align 8, !range !7
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %381, label %380

380:                                              ; preds = %373
  call void @_ZN2cc21PlaybackImageProvider8SettingsD1Ev(%"struct.cc::PlaybackImageProvider::Settings"* %152) #13
  store i8 0, i8* %149, align 8
  br label %381

381:                                              ; preds = %380, %373
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %149) #13
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %147) #13
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %142) #13
  %382 = call zeroext i1 @_ZNK4base8LapTimer19HasTimeLimitExpiredEv(%"class.base::LapTimer"* nonnull %5) #13
  br i1 %382, label %383, label %282

383:                                              ; preds = %381
  %384 = call i64 @_ZNK4base8LapTimer10TimePerLapEv(%"class.base::LapTimer"* nonnull %5) #13
  %385 = icmp slt i64 %384, %202
  %386 = select i1 %385, i64 %384, i64 %202
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %137) #13
  %387 = add nuw i64 %203, 1
  %388 = icmp eq i64 %387, %196
  br i1 %388, label %389, label %201

389:                                              ; preds = %383
  %390 = zext i1 %281 to i8
  br label %391

391:                                              ; preds = %389, %188
  %392 = phi i64 [ 9223372036854775807, %188 ], [ %386, %389 ]
  %393 = phi i8 [ 0, %188 ], [ %390, %389 ]
  %394 = load i32, i32* %132, align 8
  %395 = load i32, i32* %133, align 4
  %396 = mul nsw i32 %395, %394
  %397 = load i16, i16* %175, align 4
  %398 = and i16 %397, 16
  %399 = icmp eq i16 %398, 0
  br i1 %399, label %403, label %400

400:                                              ; preds = %391
  %401 = load i32, i32* %176, align 8
  %402 = add nsw i32 %401, %396
  store i32 %402, i32* %176, align 8
  br label %403

403:                                              ; preds = %391, %400
  %404 = icmp eq i8 %393, 0
  br i1 %404, label %405, label %408

405:                                              ; preds = %403
  %406 = load i32, i32* %177, align 4
  %407 = add nsw i32 %406, %396
  store i32 %407, i32* %177, align 4
  br label %408

408:                                              ; preds = %403, %405
  %409 = load i32, i32* %178, align 8
  %410 = add nsw i32 %409, %396
  store i32 %410, i32* %178, align 8
  %411 = add i64 %392, -9223372036854775807
  %412 = icmp ult i64 %411, 2
  %413 = load i64, i64* %179, align 8
  br i1 %412, label %421, label %414

414:                                              ; preds = %408
  %415 = icmp slt i64 %392, 0
  %416 = select i1 %415, i64 -9223372036854775808, i64 9223372036854775807
  %417 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %413, i64 %392) #13
  %418 = extractvalue { i64, i1 } %417, 1
  %419 = extractvalue { i64, i1 } %417, 0
  %420 = select i1 %418, i64 %416, i64 %419, !prof !8
  br label %428

421:                                              ; preds = %408
  %422 = add i64 %413, -9223372036854775807
  %423 = icmp ugt i64 %422, 1
  %424 = icmp eq i64 %413, %392
  %425 = or i1 %424, %423
  br i1 %425, label %428, label %426

426:                                              ; preds = %421
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0)) #13
  %427 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %17) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #13
  br label %428

428:                                              ; preds = %414, %421, %426
  %429 = phi i64 [ %420, %414 ], [ %392, %421 ], [ %392, %426 ]
  store i64 %429, i64* %179, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %129) #13
  %430 = call dereferenceable(96) %"class.cc::PictureLayerTiling::CoverageIterator"* @_ZN2cc18PictureLayerTiling16CoverageIteratorppEv(%"class.cc::PictureLayerTiling::CoverageIterator"* nonnull %25) #13
  %431 = load i32, i32* %123, align 4
  %432 = load i32, i32* %125, align 4
  %433 = icmp sgt i32 %431, %432
  br i1 %433, label %183, label %188

434:                                              ; preds = %187, %47, %33
  ret void
}

declare zeroext i1 @_ZNK2cc16PictureLayerImpl14CanHaveTilingsEv(%"class.cc::PictureLayerImpl"*) local_unnamed_addr #1

declare double @_ZNK2cc15DisplayItemList14AreaOfDrawTextERKN3gfx4RectE(%"class.cc::DisplayItemList"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"*) local_unnamed_addr #1

declare void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc6RegionD1Ev(%"class.cc::Region"*) unnamed_addr #2

declare dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #1

declare %"class.cc::PictureLayerTilingSet"* @_ZN2cc21PictureLayerTilingSet6CreateENS_9WhichTreeEPNS_24PictureLayerTilingClientEifif(i32, %"class.cc::PictureLayerTilingClient"*, i32, float, i32, float) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc9LayerImpl8IsActiveEv(%"class.cc::LayerImpl"*) local_unnamed_addr #1

declare %"class.cc::PictureLayerTiling"* @_ZN2cc21PictureLayerTilingSet9AddTilingERKN3gfx15AxisTransform2dE13scoped_refptrINS_12RasterSourceEEb(%"class.cc::PictureLayerTilingSet"*, %"class.gfx::AxisTransform2d"* dereferenceable(16), %"class.cc::RasterSource"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2cc18PictureLayerTiling16CoverageIteratorC1EPKS0_fRKN3gfx4RectE(%"class.cc::PictureLayerTiling::CoverageIterator"*, %"class.cc::PictureLayerTiling"*, float, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare %"class.cc::ImageDecodeCache"* @_ZNK2cc13LayerTreeImpl18image_decode_cacheEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #1

declare dereferenceable(96) %"class.cc::PictureLayerTiling::CoverageIterator"* @_ZN2cc18PictureLayerTiling16CoverageIteratorppEv(%"class.cc::PictureLayerTiling::CoverageIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc18PictureLayerTiling16CoverageIteratorD1Ev(%"class.cc::PictureLayerTiling::CoverageIterator"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClientD2Ev(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 2
  tail call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc31RasterizeAndRecordBenchmarkImpl16RasterizeResultsC2Ev(%"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 80, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc31RasterizeAndRecordBenchmarkImpl16RasterizeResultsD2Ev(%"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

declare void @_ZN2cc18MicroBenchmarkImpl10RunOnLayerEPNS_9LayerImplE(%"class.cc::MicroBenchmarkImpl"*, %"class.cc::LayerImpl"*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN2cc6RegionC1ERKS0_(%"class.cc::Region"*, %"class.cc::Region"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal %"class.cc::Tile"* @_ZN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient10CreateTileERKNS_4Tile10CreateInfoE(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* nocapture readonly, %"struct.cc::Tile::CreateInfo"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 1
  %4 = load %"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTilingClient"** %3, align 8
  %5 = bitcast %"class.cc::PictureLayerTilingClient"* %4 to %"class.cc::Tile"* (%"class.cc::PictureLayerTilingClient"*, %"struct.cc::Tile::CreateInfo"*)***
  %6 = load %"class.cc::Tile"* (%"class.cc::PictureLayerTilingClient"*, %"struct.cc::Tile::CreateInfo"*)**, %"class.cc::Tile"* (%"class.cc::PictureLayerTilingClient"*, %"struct.cc::Tile::CreateInfo"*)*** %5, align 8
  %7 = load %"class.cc::Tile"* (%"class.cc::PictureLayerTilingClient"*, %"struct.cc::Tile::CreateInfo"*)*, %"class.cc::Tile"* (%"class.cc::PictureLayerTilingClient"*, %"struct.cc::Tile::CreateInfo"*)** %6, align 8
  %8 = tail call %"class.cc::Tile"* %7(%"class.cc::PictureLayerTilingClient"* %4, %"struct.cc::Tile::CreateInfo"* dereferenceable(72) %1) #13
  ret %"class.cc::Tile"* %8
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient17CalculateTileSizeERKN3gfx4SizeE(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* nocapture readonly, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 1
  %4 = load %"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTilingClient"** %3, align 8
  %5 = bitcast %"class.cc::PictureLayerTilingClient"* %4 to i64 (%"class.cc::PictureLayerTilingClient"*, %"class.gfx::Size"*)***
  %6 = load i64 (%"class.cc::PictureLayerTilingClient"*, %"class.gfx::Size"*)**, i64 (%"class.cc::PictureLayerTilingClient"*, %"class.gfx::Size"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.cc::PictureLayerTilingClient"*, %"class.gfx::Size"*)*, i64 (%"class.cc::PictureLayerTilingClient"*, %"class.gfx::Size"*)** %6, i64 1
  %8 = load i64 (%"class.cc::PictureLayerTilingClient"*, %"class.gfx::Size"*)*, i64 (%"class.cc::PictureLayerTilingClient"*, %"class.gfx::Size"*)** %7, align 8
  %9 = tail call i64 %8(%"class.cc::PictureLayerTilingClient"* %4, %"class.gfx::Size"* dereferenceable(8) %1) #13
  ret i64 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.cc::Region"* @_ZN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient22GetPendingInvalidationEv(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* readnone) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 2
  ret %"class.cc::Region"* %2
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.cc::PictureLayerTiling"* @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient28GetPendingOrActiveTwinTilingEPKNS_18PictureLayerTilingE(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* nocapture readonly, %"class.cc::PictureLayerTiling"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 1
  %4 = load %"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTilingClient"** %3, align 8
  %5 = bitcast %"class.cc::PictureLayerTilingClient"* %4 to %"class.cc::PictureLayerTiling"* (%"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTiling"*)***
  %6 = load %"class.cc::PictureLayerTiling"* (%"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTiling"*)**, %"class.cc::PictureLayerTiling"* (%"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTiling"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PictureLayerTiling"* (%"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTiling"*)*, %"class.cc::PictureLayerTiling"* (%"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTiling"*)** %6, i64 3
  %8 = load %"class.cc::PictureLayerTiling"* (%"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTiling"*)*, %"class.cc::PictureLayerTiling"* (%"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTiling"*)** %7, align 8
  %9 = tail call %"class.cc::PictureLayerTiling"* %8(%"class.cc::PictureLayerTilingClient"* %4, %"class.cc::PictureLayerTiling"* %1) #13
  ret %"class.cc::PictureLayerTiling"* %9
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient22HasValidTilePrioritiesEv(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 1
  %3 = load %"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTilingClient"** %2, align 8
  %4 = bitcast %"class.cc::PictureLayerTilingClient"* %3 to i1 (%"class.cc::PictureLayerTilingClient"*)***
  %5 = load i1 (%"class.cc::PictureLayerTilingClient"*)**, i1 (%"class.cc::PictureLayerTilingClient"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %5, i64 4
  %7 = load i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.cc::PictureLayerTilingClient"* %3) #13
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient21RequiresHighResToDrawEv(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 1
  %3 = load %"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTilingClient"** %2, align 8
  %4 = bitcast %"class.cc::PictureLayerTilingClient"* %3 to i1 (%"class.cc::PictureLayerTilingClient"*)***
  %5 = load i1 (%"class.cc::PictureLayerTilingClient"*)**, i1 (%"class.cc::PictureLayerTilingClient"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %5, i64 5
  %7 = load i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.cc::PictureLayerTilingClient"* %3) #13
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define internal dereferenceable(24) %"class.base::flat_map.652"* @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient22GetPaintWorkletRecordsEv(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 1
  %3 = load %"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTilingClient"** %2, align 8
  %4 = bitcast %"class.cc::PictureLayerTilingClient"* %3 to %"class.base::flat_map.652"* (%"class.cc::PictureLayerTilingClient"*)***
  %5 = load %"class.base::flat_map.652"* (%"class.cc::PictureLayerTilingClient"*)**, %"class.base::flat_map.652"* (%"class.cc::PictureLayerTilingClient"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.base::flat_map.652"* (%"class.cc::PictureLayerTilingClient"*)*, %"class.base::flat_map.652"* (%"class.cc::PictureLayerTilingClient"*)** %5, i64 6
  %7 = load %"class.base::flat_map.652"* (%"class.cc::PictureLayerTilingClient"*)*, %"class.base::flat_map.652"* (%"class.cc::PictureLayerTilingClient"*)** %6, align 8
  %8 = tail call dereferenceable(24) %"class.base::flat_map.652"* %7(%"class.cc::PictureLayerTilingClient"* %3) #13
  ret %"class.base::flat_map.652"* %8
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient25IsDirectlyCompositedImageEv(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 1
  %3 = load %"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTilingClient"** %2, align 8
  %4 = bitcast %"class.cc::PictureLayerTilingClient"* %3 to i1 (%"class.cc::PictureLayerTilingClient"*)***
  %5 = load i1 (%"class.cc::PictureLayerTilingClient"*)**, i1 (%"class.cc::PictureLayerTilingClient"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %5, i64 7
  %7 = load i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.cc::PictureLayerTilingClient"* %3) #13
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient27ScrollInteractionInProgressEv(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 1
  %3 = load %"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTilingClient"** %2, align 8
  %4 = bitcast %"class.cc::PictureLayerTilingClient"* %3 to i1 (%"class.cc::PictureLayerTilingClient"*)***
  %5 = load i1 (%"class.cc::PictureLayerTilingClient"*)**, i1 (%"class.cc::PictureLayerTilingClient"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %5, i64 8
  %7 = load i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.cc::PictureLayerTilingClient"* %3) #13
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClient19DidCheckerboardQuadEv(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 1
  %3 = load %"class.cc::PictureLayerTilingClient"*, %"class.cc::PictureLayerTilingClient"** %2, align 8
  %4 = bitcast %"class.cc::PictureLayerTilingClient"* %3 to i1 (%"class.cc::PictureLayerTilingClient"*)***
  %5 = load i1 (%"class.cc::PictureLayerTilingClient"*)**, i1 (%"class.cc::PictureLayerTilingClient"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %5, i64 9
  %7 = load i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.cc::PictureLayerTilingClient"* %3) #13
  ret i1 %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClientD0Ev(%"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2cc12_GLOBAL__N_141FixedInvalidationPictureLayerTilingClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient", %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0, i64 0, i32 2
  tail call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* %3) #13
  %4 = bitcast %"class.cc::(anonymous namespace)::FixedInvalidationPictureLayerTilingClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN2cc18PictureLayerTiling16SetLiveTilesRectERKN3gfx4RectE(%"class.cc::PictureLayerTiling"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN4base8LapTimerC1EiNS_9TimeDeltaEiNS0_11TimerMethodE(%"class.base::LapTimer"*, i32, i64, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2cc12RasterSource25PerformSolidColorAnalysisEN3gfx4RectEPj(%"class.cc::RasterSource"*, i64, i64, i32*) local_unnamed_addr #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* sret) local_unnamed_addr #1

declare void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

declare void @_ZN2cc21PlaybackImageProviderC1EPNS_16ImageDecodeCacheERKN3gfx10ColorSpaceEON4absl8optionalINS0_8SettingsEEE(%"class.cc::PlaybackImageProvider"*, %"class.cc::ImageDecodeCache"*, %"class.gfx::ColorSpace"* dereferenceable(68), %"class.absl::optional.1452"* dereferenceable(64)) unnamed_addr #1

declare void @_ZN2cc12RasterSource16PlaybackSettingsC1Ev(%"struct.cc::RasterSource::PlaybackSettings"*) unnamed_addr #1

declare void @_ZNK2cc12RasterSource16PlaybackToCanvasEP8SkCanvasRKN3gfx4SizeERKNS3_4RectES9_RKNS3_15AxisTransform2dERKNS0_16PlaybackSettingsE(%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::AxisTransform2d"* dereferenceable(16), %"struct.cc::RasterSource::PlaybackSettings"* dereferenceable(16)) local_unnamed_addr #1

declare i64 @_ZNK2cc12RasterSource14GetContentSizeERKN3gfx9Vector2dFE(%"class.cc::RasterSource"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN4base8LapTimer7NextLapEv(%"class.base::LapTimer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc12RasterSource16PlaybackSettingsD1Ev(%"struct.cc::RasterSource::PlaybackSettings"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc21PlaybackImageProviderD1Ev(%"class.cc::PlaybackImageProvider"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8LapTimer19HasTimeLimitExpiredEv(%"class.base::LapTimer"*) local_unnamed_addr #1

declare i64 @_ZNK4base8LapTimer10TimePerLapEv(%"class.base::LapTimer"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind
declare void @_ZN2cc21PlaybackImageProvider8SettingsD1Ev(%"struct.cc::PlaybackImageProvider::Settings"*) unnamed_addr #2

declare void @_ZN2cc21PlaybackImageProvider8SettingsC1Ev(%"struct.cc::PlaybackImageProvider::Settings"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.160"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.160", %"class.std::__1::vector.160"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.160"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.160", %"class.std::__1::vector.160"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.160", %"class.std::__1::vector.160"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.160"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.160"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.160"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.160", %"class.std::__1::vector.160"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.160"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i32*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i32* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i32* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i32, i32* %0, i64 1
  %20 = icmp eq i32* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i32, i32* %1, i64 -2
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 4
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i32, i32* %19, align 4
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i32* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 -1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i32 %32, i32* %30, align 4
  %35 = icmp eq i32* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i32* [ %30, %29 ], [ %0, %34 ]
  store i32 %28, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i32* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 4
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i32* [ %410, %408 ], [ %40, %39 ]
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i32* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 -1
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i32* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i32 %44, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %43, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i32 %49, i32* %47, align 4
  %57 = icmp eq i32* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i32, i32* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32* %0, i32* %60, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i32, i32* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %63, i32* %64)
  %65 = getelementptr inbounds i32, i32* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i32* %366 to i64
  %68 = icmp eq i32* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i32, i32* %4, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 2
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i32* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i32* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i32* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i32, i32* %4, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i32* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i32* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i32, i32* %90, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %90, i64 1
  %95 = getelementptr inbounds i32, i32* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !9

98:                                               ; preds = %89, %77
  %99 = phi i32* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i32* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 28
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i32, i32* %4, i64 %103
  %105 = ptrtoint i32* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i32, i32* %368, i64 %108
  %110 = getelementptr i32, i32* %366, i64 %108
  %111 = icmp ult i32* %368, %110
  %112 = icmp ult i32* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 9223372036854775800
  %116 = getelementptr i32, i32* %366, i64 %115
  %117 = getelementptr i32, i32* %368, i64 %115
  %118 = add nsw i64 %115, -8
  %119 = lshr exact i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 24
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i32, i32* %366, i64 %126
  %129 = getelementptr i32, i32* %368, i64 %126
  %130 = bitcast i32* %128 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !11
  %132 = getelementptr i32, i32* %128, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !11
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !alias.scope !14, !noalias !11
  %136 = getelementptr i32, i32* %129, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %137, align 4, !alias.scope !14, !noalias !11
  %138 = or i64 %126, 8
  %139 = getelementptr i32, i32* %366, i64 %138
  %140 = getelementptr i32, i32* %368, i64 %138
  %141 = bitcast i32* %139 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !alias.scope !11
  %143 = getelementptr i32, i32* %139, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !11
  %146 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %146, align 4, !alias.scope !14, !noalias !11
  %147 = getelementptr i32, i32* %140, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %148, align 4, !alias.scope !14, !noalias !11
  %149 = or i64 %126, 16
  %150 = getelementptr i32, i32* %366, i64 %149
  %151 = getelementptr i32, i32* %368, i64 %149
  %152 = bitcast i32* %150 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !11
  %154 = getelementptr i32, i32* %150, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !11
  %157 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !14, !noalias !11
  %158 = getelementptr i32, i32* %151, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !14, !noalias !11
  %160 = or i64 %126, 24
  %161 = getelementptr i32, i32* %366, i64 %160
  %162 = getelementptr i32, i32* %368, i64 %160
  %163 = bitcast i32* %161 to <4 x i32>*
  %164 = load <4 x i32>, <4 x i32>* %163, align 4, !alias.scope !11
  %165 = getelementptr i32, i32* %161, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4, !alias.scope !11
  %168 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %164, <4 x i32>* %168, align 4, !alias.scope !14, !noalias !11
  %169 = getelementptr i32, i32* %162, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %170, align 4, !alias.scope !14, !noalias !11
  %171 = add i64 %126, 32
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !16

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i32, i32* %366, i64 %178
  %181 = getelementptr i32, i32* %368, i64 %178
  %182 = bitcast i32* %180 to <4 x i32>*
  %183 = load <4 x i32>, <4 x i32>* %182, align 4, !alias.scope !11
  %184 = getelementptr i32, i32* %180, i64 4
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4, !alias.scope !11
  %187 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %187, align 4, !alias.scope !14, !noalias !11
  %188 = getelementptr i32, i32* %181, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %189, align 4, !alias.scope !14, !noalias !11
  %190 = add i64 %178, 8
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !18

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i32* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i32* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i32* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i32* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i32* %196 to i64
  %202 = icmp eq i32* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i32, i32* %4, i64 %204
  %206 = ptrtoint i32* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 2
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 8
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i32, i32* %4, i64 %212
  %214 = ptrtoint i32* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 2
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i32, i32* %198, i64 %217
  %219 = getelementptr i32, i32* %196, i64 %217
  %220 = icmp ult i32* %198, %219
  %221 = icmp ult i32* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 9223372036854775800
  %225 = getelementptr i32, i32* %196, i64 %224
  %226 = getelementptr i32, i32* %198, i64 %224
  %227 = add nsw i64 %224, -8
  %228 = lshr exact i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 24
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i32, i32* %196, i64 %235
  %238 = getelementptr i32, i32* %198, i64 %235
  %239 = bitcast i32* %237 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !19
  %241 = getelementptr i32, i32* %237, i64 4
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !19
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %244, align 4, !alias.scope !22, !noalias !19
  %245 = getelementptr i32, i32* %238, i64 4
  %246 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %246, align 4, !alias.scope !22, !noalias !19
  %247 = or i64 %235, 8
  %248 = getelementptr i32, i32* %196, i64 %247
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = bitcast i32* %248 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !19
  %252 = getelementptr i32, i32* %248, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !19
  %255 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %255, align 4, !alias.scope !22, !noalias !19
  %256 = getelementptr i32, i32* %249, i64 4
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %257, align 4, !alias.scope !22, !noalias !19
  %258 = or i64 %235, 16
  %259 = getelementptr i32, i32* %196, i64 %258
  %260 = getelementptr i32, i32* %198, i64 %258
  %261 = bitcast i32* %259 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !19
  %263 = getelementptr i32, i32* %259, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !19
  %266 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %266, align 4, !alias.scope !22, !noalias !19
  %267 = getelementptr i32, i32* %260, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %268, align 4, !alias.scope !22, !noalias !19
  %269 = or i64 %235, 24
  %270 = getelementptr i32, i32* %196, i64 %269
  %271 = getelementptr i32, i32* %198, i64 %269
  %272 = bitcast i32* %270 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4, !alias.scope !19
  %274 = getelementptr i32, i32* %270, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !19
  %277 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %273, <4 x i32>* %277, align 4, !alias.scope !22, !noalias !19
  %278 = getelementptr i32, i32* %271, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %279, align 4, !alias.scope !22, !noalias !19
  %280 = add i64 %235, 32
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !24

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i32, i32* %196, i64 %287
  %290 = getelementptr i32, i32* %198, i64 %287
  %291 = bitcast i32* %289 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4, !alias.scope !19
  %293 = getelementptr i32, i32* %289, i64 4
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4, !alias.scope !19
  %296 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %296, align 4, !alias.scope !22, !noalias !19
  %297 = getelementptr i32, i32* %290, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %298, align 4, !alias.scope !22, !noalias !19
  %299 = add i64 %287, 8
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !25

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i32* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i32* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i32* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i32, i32* %4, i64 %308
  %310 = ptrtoint i32* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 2
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i32* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i32* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i32, i32* %317, align 4
  store i32 %320, i32* %318, align 4
  %321 = getelementptr inbounds i32, i32* %317, i64 1
  %322 = getelementptr inbounds i32, i32* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !26

325:                                              ; preds = %316, %304
  %326 = phi i32* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i32* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 28
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i32* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i32* [ %355, %329 ], [ %327, %325 ]
  %332 = load i32, i32* %330, align 4
  store i32 %332, i32* %331, align 4
  %333 = getelementptr inbounds i32, i32* %330, i64 1
  %334 = getelementptr inbounds i32, i32* %331, i64 1
  %335 = load i32, i32* %333, align 4
  store i32 %335, i32* %334, align 4
  %336 = getelementptr inbounds i32, i32* %330, i64 2
  %337 = getelementptr inbounds i32, i32* %331, i64 2
  %338 = load i32, i32* %336, align 4
  store i32 %338, i32* %337, align 4
  %339 = getelementptr inbounds i32, i32* %330, i64 3
  %340 = getelementptr inbounds i32, i32* %331, i64 3
  %341 = load i32, i32* %339, align 4
  store i32 %341, i32* %340, align 4
  %342 = getelementptr inbounds i32, i32* %330, i64 4
  %343 = getelementptr inbounds i32, i32* %331, i64 4
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %343, align 4
  %345 = getelementptr inbounds i32, i32* %330, i64 5
  %346 = getelementptr inbounds i32, i32* %331, i64 5
  %347 = load i32, i32* %345, align 4
  store i32 %347, i32* %346, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 6
  %349 = getelementptr inbounds i32, i32* %331, i64 6
  %350 = load i32, i32* %348, align 4
  store i32 %350, i32* %349, align 4
  %351 = getelementptr inbounds i32, i32* %330, i64 7
  %352 = getelementptr inbounds i32, i32* %331, i64 7
  %353 = load i32, i32* %351, align 4
  store i32 %353, i32* %352, align 4
  %354 = getelementptr inbounds i32, i32* %330, i64 8
  %355 = getelementptr inbounds i32, i32* %331, i64 8
  %356 = icmp eq i32* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !27

357:                                              ; preds = %195
  %358 = load i32, i32* %197, align 4
  %359 = load i32, i32* %196, align 4
  %360 = icmp slt i32 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i32 %358, i32* %198, align 4
  %362 = getelementptr inbounds i32, i32* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i32 %359, i32* %198, align 4
  %364 = getelementptr inbounds i32, i32* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i32* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i32* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i32, i32* %198, i64 1
  %369 = icmp eq i32* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i32* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i32* [ %396, %370 ], [ %100, %98 ]
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %371, i64 1
  %375 = getelementptr inbounds i32, i32* %372, i64 1
  %376 = load i32, i32* %374, align 4
  store i32 %376, i32* %375, align 4
  %377 = getelementptr inbounds i32, i32* %371, i64 2
  %378 = getelementptr inbounds i32, i32* %372, i64 2
  %379 = load i32, i32* %377, align 4
  store i32 %379, i32* %378, align 4
  %380 = getelementptr inbounds i32, i32* %371, i64 3
  %381 = getelementptr inbounds i32, i32* %372, i64 3
  %382 = load i32, i32* %380, align 4
  store i32 %382, i32* %381, align 4
  %383 = getelementptr inbounds i32, i32* %371, i64 4
  %384 = getelementptr inbounds i32, i32* %372, i64 4
  %385 = load i32, i32* %383, align 4
  store i32 %385, i32* %384, align 4
  %386 = getelementptr inbounds i32, i32* %371, i64 5
  %387 = getelementptr inbounds i32, i32* %372, i64 5
  %388 = load i32, i32* %386, align 4
  store i32 %388, i32* %387, align 4
  %389 = getelementptr inbounds i32, i32* %371, i64 6
  %390 = getelementptr inbounds i32, i32* %372, i64 6
  %391 = load i32, i32* %389, align 4
  store i32 %391, i32* %390, align 4
  %392 = getelementptr inbounds i32, i32* %371, i64 7
  %393 = getelementptr inbounds i32, i32* %372, i64 7
  %394 = load i32, i32* %392, align 4
  store i32 %394, i32* %393, align 4
  %395 = getelementptr inbounds i32, i32* %371, i64 8
  %396 = getelementptr inbounds i32, i32* %372, i64 8
  %397 = icmp eq i32* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !28

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %0, i32* %60, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %399, i32* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %0, i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i32* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i32* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i32, i32* %402, i64 -1
  %404 = load i32, i32* %403, align 4
  %405 = icmp slt i32 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i32 %404, i32* %402, align 4
  %407 = icmp eq i32* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i32* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i32 %54, i32* %409, align 4
  %410 = getelementptr inbounds i32, i32* %43, i64 2
  %411 = icmp eq i32* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i32*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  %14 = getelementptr inbounds i32, i32* %4, i64 1
  %15 = load i32, i32* %0, align 4
  store i32 %15, i32* %14, align 4
  br label %390

16:                                               ; preds = %8
  store i32 %11, i32* %4, align 4
  %17 = getelementptr inbounds i32, i32* %4, i64 1
  %18 = load i32, i32* %9, align 4
  store i32 %18, i32* %17, align 4
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i32* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %0, align 4
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds i32, i32* %0, i64 1
  %26 = icmp eq i32* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i32 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i32* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i32* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = load i32, i32* %29, align 4
  %33 = icmp slt i32 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i32 %28, i32* %31, align 4
  %35 = icmp eq i32* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i32* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i32, i32* %37, i64 -1
  %39 = load i32, i32* %29, align 4
  %40 = load i32, i32* %38, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i32 %40, i32* %37, align 4
  %43 = icmp eq i32* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i32* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i32, i32* %29, align 4
  store i32 %46, i32* %45, align 4
  br label %48

47:                                               ; preds = %27
  store i32 %32, i32* %31, align 4
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i32, i32* %29, i64 1
  %50 = icmp eq i32* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %31, align 4
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %0, i32* %55, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %54, i32* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i32, i32* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %55, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %56, i32* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i32* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i32* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i32* %60 to i64
  %63 = icmp eq i32* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i32, i32* %1, i64 -1
  %66 = ptrtoint i32* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 8
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i32, i32* %1, i64 -1
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i32, i32* %61, i64 %76
  %78 = getelementptr i32, i32* %60, i64 %76
  %79 = icmp ult i32* %61, %78
  %80 = icmp ult i32* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 9223372036854775800
  %84 = getelementptr i32, i32* %61, i64 %83
  %85 = getelementptr i32, i32* %60, i64 %83
  %86 = add nsw i64 %83, -8
  %87 = lshr exact i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 24
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i32, i32* %61, i64 %94
  %97 = getelementptr i32, i32* %60, i64 %94
  %98 = bitcast i32* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4, !alias.scope !29
  %100 = getelementptr i32, i32* %97, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !alias.scope !29
  %103 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %103, align 4, !alias.scope !32, !noalias !29
  %104 = getelementptr i32, i32* %96, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4, !alias.scope !32, !noalias !29
  %106 = or i64 %94, 8
  %107 = getelementptr i32, i32* %61, i64 %106
  %108 = getelementptr i32, i32* %60, i64 %106
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !29
  %111 = getelementptr i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !29
  %114 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !32, !noalias !29
  %115 = getelementptr i32, i32* %107, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !32, !noalias !29
  %117 = or i64 %94, 16
  %118 = getelementptr i32, i32* %61, i64 %117
  %119 = getelementptr i32, i32* %60, i64 %117
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !29
  %122 = getelementptr i32, i32* %119, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !29
  %125 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %125, align 4, !alias.scope !32, !noalias !29
  %126 = getelementptr i32, i32* %118, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %127, align 4, !alias.scope !32, !noalias !29
  %128 = or i64 %94, 24
  %129 = getelementptr i32, i32* %61, i64 %128
  %130 = getelementptr i32, i32* %60, i64 %128
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !alias.scope !29
  %133 = getelementptr i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !alias.scope !29
  %136 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %136, align 4, !alias.scope !32, !noalias !29
  %137 = getelementptr i32, i32* %129, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %135, <4 x i32>* %138, align 4, !alias.scope !32, !noalias !29
  %139 = add i64 %94, 32
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !34

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i32, i32* %61, i64 %146
  %149 = getelementptr i32, i32* %60, i64 %146
  %150 = bitcast i32* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 4, !alias.scope !29
  %152 = getelementptr i32, i32* %149, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4, !alias.scope !29
  %155 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %155, align 4, !alias.scope !32, !noalias !29
  %156 = getelementptr i32, i32* %148, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %157, align 4, !alias.scope !32, !noalias !29
  %158 = add i64 %146, 8
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !35

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i32* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i32* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i32* %165 to i64
  %167 = getelementptr i32, i32* %1, i64 -1
  %168 = ptrtoint i32* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i32* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i32* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %175, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 1
  %180 = getelementptr inbounds i32, i32* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !36

183:                                              ; preds = %174, %163
  %184 = phi i32* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i32* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 28
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i32* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i32* [ %212, %187 ], [ %185, %183 ]
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 4
  %191 = getelementptr inbounds i32, i32* %189, i64 1
  %192 = getelementptr inbounds i32, i32* %188, i64 1
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %192, align 4
  %194 = getelementptr inbounds i32, i32* %189, i64 2
  %195 = getelementptr inbounds i32, i32* %188, i64 2
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %189, i64 3
  %198 = getelementptr inbounds i32, i32* %188, i64 3
  %199 = load i32, i32* %197, align 4
  store i32 %199, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %189, i64 4
  %201 = getelementptr inbounds i32, i32* %188, i64 4
  %202 = load i32, i32* %200, align 4
  store i32 %202, i32* %201, align 4
  %203 = getelementptr inbounds i32, i32* %189, i64 5
  %204 = getelementptr inbounds i32, i32* %188, i64 5
  %205 = load i32, i32* %203, align 4
  store i32 %205, i32* %204, align 4
  %206 = getelementptr inbounds i32, i32* %189, i64 6
  %207 = getelementptr inbounds i32, i32* %188, i64 6
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %189, i64 7
  %210 = getelementptr inbounds i32, i32* %188, i64 7
  %211 = load i32, i32* %209, align 4
  store i32 %211, i32* %210, align 4
  %212 = getelementptr inbounds i32, i32* %189, i64 8
  %213 = getelementptr inbounds i32, i32* %188, i64 8
  %214 = icmp eq i32* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !37

215:                                              ; preds = %53, %385
  %216 = phi i32* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i32* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i32* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i32* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i32* %217 to i64
  %222 = icmp eq i32* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i32, i32* %0, i64 %224
  %226 = ptrtoint i32* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 8
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i32, i32* %0, i64 %232
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 2
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i32, i32* %216, i64 %237
  %239 = getelementptr i32, i32* %217, i64 %237
  %240 = icmp ult i32* %216, %239
  %241 = icmp ult i32* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 9223372036854775800
  %245 = getelementptr i32, i32* %216, i64 %244
  %246 = getelementptr i32, i32* %217, i64 %244
  %247 = add nsw i64 %244, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 24
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i32, i32* %216, i64 %255
  %258 = getelementptr i32, i32* %217, i64 %255
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !38
  %261 = getelementptr i32, i32* %258, i64 4
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !38
  %264 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %264, align 4, !alias.scope !41, !noalias !38
  %265 = getelementptr i32, i32* %257, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %266, align 4, !alias.scope !41, !noalias !38
  %267 = or i64 %255, 8
  %268 = getelementptr i32, i32* %216, i64 %267
  %269 = getelementptr i32, i32* %217, i64 %267
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4, !alias.scope !38
  %272 = getelementptr i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !38
  %275 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %271, <4 x i32>* %275, align 4, !alias.scope !41, !noalias !38
  %276 = getelementptr i32, i32* %268, i64 4
  %277 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %277, align 4, !alias.scope !41, !noalias !38
  %278 = or i64 %255, 16
  %279 = getelementptr i32, i32* %216, i64 %278
  %280 = getelementptr i32, i32* %217, i64 %278
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !38
  %283 = getelementptr i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !38
  %286 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !41, !noalias !38
  %287 = getelementptr i32, i32* %279, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !41, !noalias !38
  %289 = or i64 %255, 24
  %290 = getelementptr i32, i32* %216, i64 %289
  %291 = getelementptr i32, i32* %217, i64 %289
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4, !alias.scope !38
  %294 = getelementptr i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !38
  %297 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %293, <4 x i32>* %297, align 4, !alias.scope !41, !noalias !38
  %298 = getelementptr i32, i32* %290, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %299, align 4, !alias.scope !41, !noalias !38
  %300 = add i64 %255, 32
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !43

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i32, i32* %216, i64 %307
  %310 = getelementptr i32, i32* %217, i64 %307
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4, !alias.scope !38
  %313 = getelementptr i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4, !alias.scope !38
  %316 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %316, align 4, !alias.scope !41, !noalias !38
  %317 = getelementptr i32, i32* %309, i64 4
  %318 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %315, <4 x i32>* %318, align 4, !alias.scope !41, !noalias !38
  %319 = add i64 %307, 8
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !44

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i32* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i32* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i32* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i32, i32* %0, i64 %328
  %330 = ptrtoint i32* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 2
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i32* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i32* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %337, align 4
  %341 = getelementptr inbounds i32, i32* %338, i64 1
  %342 = getelementptr inbounds i32, i32* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !45

345:                                              ; preds = %336, %324
  %346 = phi i32* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i32* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 28
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i32* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i32* [ %374, %349 ], [ %347, %345 ]
  %352 = load i32, i32* %351, align 4
  store i32 %352, i32* %350, align 4
  %353 = getelementptr inbounds i32, i32* %351, i64 1
  %354 = getelementptr inbounds i32, i32* %350, i64 1
  %355 = load i32, i32* %353, align 4
  store i32 %355, i32* %354, align 4
  %356 = getelementptr inbounds i32, i32* %351, i64 2
  %357 = getelementptr inbounds i32, i32* %350, i64 2
  %358 = load i32, i32* %356, align 4
  store i32 %358, i32* %357, align 4
  %359 = getelementptr inbounds i32, i32* %351, i64 3
  %360 = getelementptr inbounds i32, i32* %350, i64 3
  %361 = load i32, i32* %359, align 4
  store i32 %361, i32* %360, align 4
  %362 = getelementptr inbounds i32, i32* %351, i64 4
  %363 = getelementptr inbounds i32, i32* %350, i64 4
  %364 = load i32, i32* %362, align 4
  store i32 %364, i32* %363, align 4
  %365 = getelementptr inbounds i32, i32* %351, i64 5
  %366 = getelementptr inbounds i32, i32* %350, i64 5
  %367 = load i32, i32* %365, align 4
  store i32 %367, i32* %366, align 4
  %368 = getelementptr inbounds i32, i32* %351, i64 6
  %369 = getelementptr inbounds i32, i32* %350, i64 6
  %370 = load i32, i32* %368, align 4
  store i32 %370, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %351, i64 7
  %372 = getelementptr inbounds i32, i32* %350, i64 7
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %351, i64 8
  %375 = getelementptr inbounds i32, i32* %350, i64 8
  %376 = icmp eq i32* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !46

377:                                              ; preds = %215
  %378 = load i32, i32* %218, align 4
  %379 = load i32, i32* %217, align 4
  %380 = icmp slt i32 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i32 %378, i32* %216, align 4
  %382 = getelementptr inbounds i32, i32* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i32 %379, i32* %216, align 4
  %384 = getelementptr inbounds i32, i32* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i32* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i32* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i32, i32* %216, i64 1
  %389 = icmp eq i32* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32*, i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i64, i32*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i32* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i32* %1 to i64
  %13 = ptrtoint i32* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i32* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i32*
  %27 = load i32, i32* %26, align 4
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i32*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i32*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i32* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i32, i32* %31, i64 -1
  %38 = bitcast i32* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 2
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 8
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i32* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i32* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i32* %47 to i64
  %49 = getelementptr i32, i32* %31, i64 -1
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i32* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i32* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  %61 = getelementptr inbounds i32, i32* %58, i64 1
  %62 = getelementptr inbounds i32, i32* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !47

65:                                               ; preds = %56, %45
  %66 = phi i32* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i32* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i32* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 28
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i32, i32* %31, i64 -1
  %72 = bitcast i32* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 2
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i32, i32* %6, i64 %77
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr i32, i32* %29, i64 %77
  %81 = icmp ugt i32* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 9223372036854775800
  %86 = getelementptr i32, i32* %6, i64 %85
  %87 = getelementptr i32, i32* %29, i64 %85
  %88 = add nsw i64 %85, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 24
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i32, i32* %6, i64 %96
  %99 = getelementptr i32, i32* %29, i64 %96
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !48
  %102 = getelementptr i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !48
  %105 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !51, !noalias !48
  %106 = getelementptr i32, i32* %98, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !51, !noalias !48
  %108 = or i64 %96, 8
  %109 = getelementptr i32, i32* %6, i64 %108
  %110 = getelementptr i32, i32* %29, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !48
  %113 = getelementptr i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !48
  %116 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !51, !noalias !48
  %117 = getelementptr i32, i32* %109, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !51, !noalias !48
  %119 = or i64 %96, 16
  %120 = getelementptr i32, i32* %6, i64 %119
  %121 = getelementptr i32, i32* %29, i64 %119
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !48
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !48
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !51, !noalias !48
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !51, !noalias !48
  %130 = or i64 %96, 24
  %131 = getelementptr i32, i32* %6, i64 %130
  %132 = getelementptr i32, i32* %29, i64 %130
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !48
  %135 = getelementptr i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !48
  %138 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !51, !noalias !48
  %139 = getelementptr i32, i32* %131, i64 4
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %140, align 4, !alias.scope !51, !noalias !48
  %141 = add i64 %96, 32
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !53

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i32, i32* %6, i64 %148
  %151 = getelementptr i32, i32* %29, i64 %148
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !48
  %154 = getelementptr i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !48
  %157 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !51, !noalias !48
  %158 = getelementptr i32, i32* %150, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !51, !noalias !48
  %160 = add i64 %148, 8
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !54

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i32* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i32, i32* %15, i64 -1
  %169 = bitcast i32* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 2
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 8
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i32* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i32* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i32* %178 to i64
  %180 = getelementptr i32, i32* %15, i64 -1
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i32* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i32* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i32, i32* %189, align 4
  store i32 %191, i32* %188, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !55

196:                                              ; preds = %187, %176
  %197 = phi i32* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i32* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i32* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 28
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i32, i32* %15, i64 -1
  %203 = bitcast i32* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 2
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i32, i32* %6, i64 %208
  %210 = bitcast i32* %209 to i8*
  %211 = getelementptr i32, i32* %31, i64 %208
  %212 = icmp ugt i32* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 9223372036854775800
  %217 = getelementptr i32, i32* %6, i64 %216
  %218 = getelementptr i32, i32* %31, i64 %216
  %219 = add nsw i64 %216, -8
  %220 = lshr exact i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 24
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i32, i32* %6, i64 %227
  %230 = getelementptr i32, i32* %31, i64 %227
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4, !alias.scope !56
  %233 = getelementptr i32, i32* %230, i64 4
  %234 = bitcast i32* %233 to <4 x i32>*
  %235 = load <4 x i32>, <4 x i32>* %234, align 4, !alias.scope !56
  %236 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %236, align 4, !alias.scope !59, !noalias !56
  %237 = getelementptr i32, i32* %229, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %238, align 4, !alias.scope !59, !noalias !56
  %239 = or i64 %227, 8
  %240 = getelementptr i32, i32* %6, i64 %239
  %241 = getelementptr i32, i32* %31, i64 %239
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !56
  %244 = getelementptr i32, i32* %241, i64 4
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4, !alias.scope !56
  %247 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %247, align 4, !alias.scope !59, !noalias !56
  %248 = getelementptr i32, i32* %240, i64 4
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %246, <4 x i32>* %249, align 4, !alias.scope !59, !noalias !56
  %250 = or i64 %227, 16
  %251 = getelementptr i32, i32* %6, i64 %250
  %252 = getelementptr i32, i32* %31, i64 %250
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !56
  %255 = getelementptr i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !56
  %258 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %258, align 4, !alias.scope !59, !noalias !56
  %259 = getelementptr i32, i32* %251, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %260, align 4, !alias.scope !59, !noalias !56
  %261 = or i64 %227, 24
  %262 = getelementptr i32, i32* %6, i64 %261
  %263 = getelementptr i32, i32* %31, i64 %261
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !56
  %266 = getelementptr i32, i32* %263, i64 4
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 4, !alias.scope !56
  %269 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %269, align 4, !alias.scope !59, !noalias !56
  %270 = getelementptr i32, i32* %262, i64 4
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %271, align 4, !alias.scope !59, !noalias !56
  %272 = add i64 %227, 32
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !61

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i32, i32* %6, i64 %279
  %282 = getelementptr i32, i32* %31, i64 %279
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4, !alias.scope !56
  %285 = getelementptr i32, i32* %282, i64 4
  %286 = bitcast i32* %285 to <4 x i32>*
  %287 = load <4 x i32>, <4 x i32>* %286, align 4, !alias.scope !56
  %288 = bitcast i32* %281 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %288, align 4, !alias.scope !59, !noalias !56
  %289 = getelementptr i32, i32* %281, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %287, <4 x i32>* %290, align 4, !alias.scope !59, !noalias !56
  %291 = add i64 %279, 8
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !62

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i32* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i32* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i32* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i32* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i32* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i32* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i32* %297 to i64
  %306 = ptrtoint i32* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i32* %301 to i8*
  %311 = bitcast i32* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %307, i1 false) #13
  br label %887

312:                                              ; preds = %299
  %313 = load i32, i32* %302, align 4
  %314 = load i32, i32* %300, align 4
  %315 = icmp slt i32 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i32 %313, i32* %301, align 4
  %317 = getelementptr inbounds i32, i32* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i32 %314, i32* %301, align 4
  %319 = getelementptr inbounds i32, i32* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i32* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i32* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i32, i32* %301, i64 1
  %324 = icmp eq i32* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i32* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i32* [ %350, %325 ], [ %68, %65 ]
  %328 = load i32, i32* %327, align 4
  store i32 %328, i32* %326, align 4
  %329 = getelementptr inbounds i32, i32* %327, i64 1
  %330 = getelementptr inbounds i32, i32* %326, i64 1
  %331 = load i32, i32* %329, align 4
  store i32 %331, i32* %330, align 4
  %332 = getelementptr inbounds i32, i32* %327, i64 2
  %333 = getelementptr inbounds i32, i32* %326, i64 2
  %334 = load i32, i32* %332, align 4
  store i32 %334, i32* %333, align 4
  %335 = getelementptr inbounds i32, i32* %327, i64 3
  %336 = getelementptr inbounds i32, i32* %326, i64 3
  %337 = load i32, i32* %335, align 4
  store i32 %337, i32* %336, align 4
  %338 = getelementptr inbounds i32, i32* %327, i64 4
  %339 = getelementptr inbounds i32, i32* %326, i64 4
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %339, align 4
  %341 = getelementptr inbounds i32, i32* %327, i64 5
  %342 = getelementptr inbounds i32, i32* %326, i64 5
  %343 = load i32, i32* %341, align 4
  store i32 %343, i32* %342, align 4
  %344 = getelementptr inbounds i32, i32* %327, i64 6
  %345 = getelementptr inbounds i32, i32* %326, i64 6
  %346 = load i32, i32* %344, align 4
  store i32 %346, i32* %345, align 4
  %347 = getelementptr inbounds i32, i32* %327, i64 7
  %348 = getelementptr inbounds i32, i32* %326, i64 7
  %349 = load i32, i32* %347, align 4
  store i32 %349, i32* %348, align 4
  %350 = getelementptr inbounds i32, i32* %327, i64 8
  %351 = getelementptr inbounds i32, i32* %326, i64 8
  %352 = icmp eq i32* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !63

353:                                              ; preds = %196, %520, %294
  %354 = phi i32* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i32* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i32* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i32* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i32* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i32* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i32, i32* %358, i64 -1
  %363 = ptrtoint i32* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 2
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 8
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i32, i32* %358, i64 -1
  %370 = ptrtoint i32* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 2
  %373 = xor i64 %372, -1
  %374 = getelementptr i32, i32* %357, i64 %373
  %375 = getelementptr i32, i32* %358, i64 %373
  %376 = icmp ult i32* %374, %358
  %377 = icmp ult i32* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 9223372036854775800
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i32, i32* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i32, i32* %357, i64 %383
  %385 = add nsw i64 %380, -8
  %386 = lshr exact i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i32, i32* %358, i64 -1
  %393 = getelementptr i32, i32* %357, i64 -1
  %394 = getelementptr i32, i32* %358, i64 -1
  %395 = getelementptr i32, i32* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i32, i32* %392, i64 %399
  %402 = getelementptr inbounds i32, i32* %401, i64 -3
  %403 = bitcast i32* %402 to <4 x i32>*
  %404 = load <4 x i32>, <4 x i32>* %403, align 4, !alias.scope !64
  %405 = getelementptr inbounds i32, i32* %401, i64 -4
  %406 = getelementptr inbounds i32, i32* %405, i64 -3
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4, !alias.scope !64
  %409 = getelementptr inbounds i32, i32* %393, i64 %400
  %410 = getelementptr inbounds i32, i32* %409, i64 -3
  %411 = bitcast i32* %410 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %411, align 4, !alias.scope !67, !noalias !64
  %412 = getelementptr inbounds i32, i32* %409, i64 -4
  %413 = getelementptr inbounds i32, i32* %412, i64 -3
  %414 = bitcast i32* %413 to <4 x i32>*
  store <4 x i32> %408, <4 x i32>* %414, align 4, !alias.scope !67, !noalias !64
  %415 = sub nuw nsw i64 -8, %397
  %416 = sub nuw nsw i64 -8, %397
  %417 = getelementptr inbounds i32, i32* %394, i64 %415
  %418 = getelementptr inbounds i32, i32* %417, i64 -3
  %419 = bitcast i32* %418 to <4 x i32>*
  %420 = load <4 x i32>, <4 x i32>* %419, align 4, !alias.scope !64
  %421 = getelementptr inbounds i32, i32* %417, i64 -4
  %422 = getelementptr inbounds i32, i32* %421, i64 -3
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !64
  %425 = getelementptr inbounds i32, i32* %395, i64 %416
  %426 = getelementptr inbounds i32, i32* %425, i64 -3
  %427 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %427, align 4, !alias.scope !67, !noalias !64
  %428 = getelementptr inbounds i32, i32* %425, i64 -4
  %429 = getelementptr inbounds i32, i32* %428, i64 -3
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %430, align 4, !alias.scope !67, !noalias !64
  %431 = add i64 %397, 16
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !69

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -16, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i32, i32* %358, i64 -1
  %441 = getelementptr i32, i32* %357, i64 -1
  %442 = getelementptr inbounds i32, i32* %440, i64 %437
  %443 = getelementptr inbounds i32, i32* %442, i64 -3
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4, !alias.scope !64
  %446 = getelementptr inbounds i32, i32* %442, i64 -4
  %447 = getelementptr inbounds i32, i32* %446, i64 -3
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4, !alias.scope !64
  %450 = getelementptr inbounds i32, i32* %441, i64 %437
  %451 = getelementptr inbounds i32, i32* %450, i64 -3
  %452 = bitcast i32* %451 to <4 x i32>*
  store <4 x i32> %445, <4 x i32>* %452, align 4, !alias.scope !67, !noalias !64
  %453 = getelementptr inbounds i32, i32* %450, i64 -4
  %454 = getelementptr inbounds i32, i32* %453, i64 -3
  %455 = bitcast i32* %454 to <4 x i32>*
  store <4 x i32> %449, <4 x i32>* %455, align 4, !alias.scope !67, !noalias !64
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i32* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i32* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i32, i32* %459, i64 -1
  %462 = ptrtoint i32* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 2
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i32* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i32* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i32, i32* %469, i64 -1
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds i32, i32* %470, i64 -1
  store i32 %473, i32* %474, align 4
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !70

477:                                              ; preds = %468, %458
  %478 = phi i32* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i32* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 28
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i32* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i32* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i32, i32* %482, i64 -1
  %485 = load i32, i32* %484, align 4
  %486 = getelementptr inbounds i32, i32* %483, i64 -1
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds i32, i32* %482, i64 -2
  %488 = load i32, i32* %487, align 4
  %489 = getelementptr inbounds i32, i32* %483, i64 -2
  store i32 %488, i32* %489, align 4
  %490 = getelementptr inbounds i32, i32* %482, i64 -3
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds i32, i32* %483, i64 -3
  store i32 %491, i32* %492, align 4
  %493 = getelementptr inbounds i32, i32* %482, i64 -4
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds i32, i32* %483, i64 -4
  store i32 %494, i32* %495, align 4
  %496 = getelementptr inbounds i32, i32* %482, i64 -5
  %497 = load i32, i32* %496, align 4
  %498 = getelementptr inbounds i32, i32* %483, i64 -5
  store i32 %497, i32* %498, align 4
  %499 = getelementptr inbounds i32, i32* %482, i64 -6
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds i32, i32* %483, i64 -6
  store i32 %500, i32* %501, align 4
  %502 = getelementptr inbounds i32, i32* %482, i64 -7
  %503 = load i32, i32* %502, align 4
  %504 = getelementptr inbounds i32, i32* %483, i64 -7
  store i32 %503, i32* %504, align 4
  %505 = getelementptr inbounds i32, i32* %482, i64 -8
  %506 = load i32, i32* %505, align 4
  %507 = getelementptr inbounds i32, i32* %483, i64 -8
  store i32 %506, i32* %507, align 4
  %508 = icmp eq i32* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !71

509:                                              ; preds = %356
  %510 = getelementptr inbounds i32, i32* %359, i64 -1
  %511 = getelementptr inbounds i32, i32* %358, i64 -1
  %512 = load i32, i32* %511, align 4
  %513 = load i32, i32* %510, align 4
  %514 = icmp slt i32 %512, %513
  %515 = getelementptr inbounds i32, i32* %357, i64 -1
  %516 = select i1 %514, i32 %513, i32 %512
  %517 = select i1 %514, i32* %510, i32* %359
  %518 = select i1 %514, i32* %358, i32* %511
  store i32 %516, i32* %515, align 4
  %519 = icmp eq i32* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i32* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i32* [ %545, %520 ], [ %199, %196 ]
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %521, align 4
  %524 = getelementptr inbounds i32, i32* %522, i64 1
  %525 = getelementptr inbounds i32, i32* %521, i64 1
  %526 = load i32, i32* %524, align 4
  store i32 %526, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %522, i64 2
  %528 = getelementptr inbounds i32, i32* %521, i64 2
  %529 = load i32, i32* %527, align 4
  store i32 %529, i32* %528, align 4
  %530 = getelementptr inbounds i32, i32* %522, i64 3
  %531 = getelementptr inbounds i32, i32* %521, i64 3
  %532 = load i32, i32* %530, align 4
  store i32 %532, i32* %531, align 4
  %533 = getelementptr inbounds i32, i32* %522, i64 4
  %534 = getelementptr inbounds i32, i32* %521, i64 4
  %535 = load i32, i32* %533, align 4
  store i32 %535, i32* %534, align 4
  %536 = getelementptr inbounds i32, i32* %522, i64 5
  %537 = getelementptr inbounds i32, i32* %521, i64 5
  %538 = load i32, i32* %536, align 4
  store i32 %538, i32* %537, align 4
  %539 = getelementptr inbounds i32, i32* %522, i64 6
  %540 = getelementptr inbounds i32, i32* %521, i64 6
  %541 = load i32, i32* %539, align 4
  store i32 %541, i32* %540, align 4
  %542 = getelementptr inbounds i32, i32* %522, i64 7
  %543 = getelementptr inbounds i32, i32* %521, i64 7
  %544 = load i32, i32* %542, align 4
  store i32 %544, i32* %543, align 4
  %545 = getelementptr inbounds i32, i32* %522, i64 8
  %546 = getelementptr inbounds i32, i32* %521, i64 8
  %547 = icmp eq i32* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !72

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i32*
  %552 = load i32, i32* %551, align 4
  %553 = icmp slt i32 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i32, i32* %551, i64 1
  %556 = ptrtoint i32* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i32*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i32, i32* %26, i64 %563
  %565 = ptrtoint i32* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 2
  %570 = load i32, i32* %564, align 4
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i32* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i32, i32* %572, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = icmp slt i32 %570, %576
  %578 = getelementptr inbounds i32, i32* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i32* %572, i32* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i32* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i32* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 2
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i32*
  %593 = inttoptr i64 %550 to i32*
  store i32 %27, i32* %593, align 4
  store i32 %552, i32* %592, align 4
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i32, i32* %560, i64 %595
  %597 = ptrtoint i32* %596 to i64
  %598 = ptrtoint i32* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 2
  %603 = load i32, i32* %596, align 4
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i32* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i32, i32* %605, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = icmp slt i32 %609, %603
  %611 = getelementptr inbounds i32, i32* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i32* %611, i32* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i32* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i32* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 2
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i32*
  %630 = inttoptr i64 %624 to i32*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i32* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i32* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i32, i32* %629, i64 1
  %638 = icmp eq i32* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i32, i32* %629, align 4
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 2
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %631, i8* align 4 %632, i64 %641, i1 false) #13
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i32, i32* %629, i64 %642
  store i32 %640, i32* %646, align 4
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i32, i32* %26, i64 1
  %649 = icmp eq i32* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i32, i32* %630, i64 -1
  %652 = load i32, i32* %651, align 4
  %653 = ptrtoint i32* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 2
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i32, i32* %630, i64 %658
  %660 = bitcast i32* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %660, i8* align 4 %631, i64 %654, i1 false) #13
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i32* [ %659, %656 ], [ %630, %650 ]
  store i32 %652, i32* %629, align 4
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 2
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 2
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i32, i32* %629, align 4
  store i32 %27, i32* %629, align 4
  store i32 %670, i32* %26, align 4
  %671 = getelementptr inbounds i32, i32* %629, i64 1
  %672 = getelementptr inbounds i32, i32* %26, i64 1
  %673 = icmp eq i32* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i32, i32* %26, i64 -2
  %676 = bitcast i32* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 2
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 8
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i32, i32* %629, i64 2
  %685 = getelementptr i32, i32* %26, i64 -2
  %686 = bitcast i32* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 2
  %691 = getelementptr i32, i32* %684, i64 %690
  %692 = getelementptr i32, i32* %26, i64 2
  %693 = getelementptr i32, i32* %692, i64 %690
  %694 = icmp ult i32* %671, %693
  %695 = icmp ult i32* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 9223372036854775800
  %699 = getelementptr i32, i32* %672, i64 %698
  %700 = getelementptr i32, i32* %671, i64 %698
  %701 = add nsw i64 %698, -8
  %702 = lshr exact i64 %701, 3
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i32, i32* %672, i64 %709
  %712 = getelementptr i32, i32* %671, i64 %709
  %713 = bitcast i32* %711 to <4 x i32>*
  %714 = load <4 x i32>, <4 x i32>* %713, align 4, !alias.scope !73
  %715 = getelementptr i32, i32* %711, i64 4
  %716 = bitcast i32* %715 to <4 x i32>*
  %717 = load <4 x i32>, <4 x i32>* %716, align 4, !alias.scope !73
  %718 = bitcast i32* %712 to <4 x i32>*
  %719 = load <4 x i32>, <4 x i32>* %718, align 4, !alias.scope !76, !noalias !73
  %720 = getelementptr i32, i32* %712, i64 4
  %721 = bitcast i32* %720 to <4 x i32>*
  %722 = load <4 x i32>, <4 x i32>* %721, align 4, !alias.scope !76, !noalias !73
  %723 = bitcast i32* %712 to <4 x i32>*
  store <4 x i32> %714, <4 x i32>* %723, align 4, !alias.scope !76, !noalias !73
  %724 = bitcast i32* %720 to <4 x i32>*
  store <4 x i32> %717, <4 x i32>* %724, align 4, !alias.scope !76, !noalias !73
  %725 = bitcast i32* %711 to <4 x i32>*
  store <4 x i32> %719, <4 x i32>* %725, align 4, !alias.scope !73
  %726 = bitcast i32* %715 to <4 x i32>*
  store <4 x i32> %722, <4 x i32>* %726, align 4, !alias.scope !73
  %727 = or i64 %709, 8
  %728 = getelementptr i32, i32* %672, i64 %727
  %729 = getelementptr i32, i32* %671, i64 %727
  %730 = bitcast i32* %728 to <4 x i32>*
  %731 = load <4 x i32>, <4 x i32>* %730, align 4, !alias.scope !73
  %732 = getelementptr i32, i32* %728, i64 4
  %733 = bitcast i32* %732 to <4 x i32>*
  %734 = load <4 x i32>, <4 x i32>* %733, align 4, !alias.scope !73
  %735 = bitcast i32* %729 to <4 x i32>*
  %736 = load <4 x i32>, <4 x i32>* %735, align 4, !alias.scope !76, !noalias !73
  %737 = getelementptr i32, i32* %729, i64 4
  %738 = bitcast i32* %737 to <4 x i32>*
  %739 = load <4 x i32>, <4 x i32>* %738, align 4, !alias.scope !76, !noalias !73
  %740 = bitcast i32* %729 to <4 x i32>*
  store <4 x i32> %731, <4 x i32>* %740, align 4, !alias.scope !76, !noalias !73
  %741 = bitcast i32* %737 to <4 x i32>*
  store <4 x i32> %734, <4 x i32>* %741, align 4, !alias.scope !76, !noalias !73
  %742 = bitcast i32* %728 to <4 x i32>*
  store <4 x i32> %736, <4 x i32>* %742, align 4, !alias.scope !73
  %743 = bitcast i32* %732 to <4 x i32>*
  store <4 x i32> %739, <4 x i32>* %743, align 4, !alias.scope !73
  %744 = add i64 %709, 16
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !78

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i32, i32* %672, i64 %748
  %752 = getelementptr i32, i32* %671, i64 %748
  %753 = bitcast i32* %751 to <4 x i32>*
  %754 = load <4 x i32>, <4 x i32>* %753, align 4, !alias.scope !73
  %755 = getelementptr i32, i32* %751, i64 4
  %756 = bitcast i32* %755 to <4 x i32>*
  %757 = load <4 x i32>, <4 x i32>* %756, align 4, !alias.scope !73
  %758 = bitcast i32* %752 to <4 x i32>*
  %759 = load <4 x i32>, <4 x i32>* %758, align 4, !alias.scope !76, !noalias !73
  %760 = getelementptr i32, i32* %752, i64 4
  %761 = bitcast i32* %760 to <4 x i32>*
  %762 = load <4 x i32>, <4 x i32>* %761, align 4, !alias.scope !76, !noalias !73
  %763 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %763, align 4, !alias.scope !76, !noalias !73
  %764 = bitcast i32* %760 to <4 x i32>*
  store <4 x i32> %757, <4 x i32>* %764, align 4, !alias.scope !76, !noalias !73
  %765 = bitcast i32* %751 to <4 x i32>*
  store <4 x i32> %759, <4 x i32>* %765, align 4, !alias.scope !73
  %766 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %762, <4 x i32>* %766, align 4, !alias.scope !73
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i32* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i32* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i32* %771 to i64
  %773 = getelementptr i32, i32* %26, i64 -1
  %774 = ptrtoint i32* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 2
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i32* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i32* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i32, i32* %781, align 4
  %785 = load i32, i32* %782, align 4
  store i32 %784, i32* %782, align 4
  store i32 %785, i32* %781, align 4
  %786 = getelementptr inbounds i32, i32* %782, i64 1
  %787 = getelementptr inbounds i32, i32* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !79

790:                                              ; preds = %780, %769
  %791 = phi i32* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i32* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 12
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i32* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i32* [ %811, %794 ], [ %792, %790 ]
  %797 = load i32, i32* %795, align 4
  %798 = load i32, i32* %796, align 4
  store i32 %797, i32* %796, align 4
  store i32 %798, i32* %795, align 4
  %799 = getelementptr inbounds i32, i32* %796, i64 1
  %800 = getelementptr inbounds i32, i32* %795, i64 1
  %801 = load i32, i32* %800, align 4
  %802 = load i32, i32* %799, align 4
  store i32 %801, i32* %799, align 4
  store i32 %802, i32* %800, align 4
  %803 = getelementptr inbounds i32, i32* %796, i64 2
  %804 = getelementptr inbounds i32, i32* %795, i64 2
  %805 = load i32, i32* %804, align 4
  %806 = load i32, i32* %803, align 4
  store i32 %805, i32* %803, align 4
  store i32 %806, i32* %804, align 4
  %807 = getelementptr inbounds i32, i32* %796, i64 3
  %808 = getelementptr inbounds i32, i32* %795, i64 3
  %809 = load i32, i32* %808, align 4
  %810 = load i32, i32* %807, align 4
  store i32 %809, i32* %807, align 4
  store i32 %810, i32* %808, align 4
  %811 = getelementptr inbounds i32, i32* %796, i64 4
  %812 = getelementptr inbounds i32, i32* %795, i64 4
  %813 = icmp eq i32* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !80

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i32, i32* %629, i64 %815
  %823 = shl nsw i64 %815, 2
  %824 = add i64 %823, -4
  %825 = and i64 %824, 4
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i32, i32* %822, i64 -1
  %829 = load i32, i32* %828, align 4
  %830 = getelementptr inbounds i32, i32* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i32* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i32* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i32* %833 to i64
  %835 = load i32, i32* %833, align 4
  store i32 %835, i32* %832, align 4
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 2
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i32, i32* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i32, i32* %629, i64 %840
  %842 = select i1 %838, i32* %839, i32* %841
  %843 = icmp eq i32* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i32 %829, i32* %833, align 4
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i32* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i32, i32* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i32* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i32, i32* %851, i64 -1
  %853 = load i32, i32* %852, align 4
  %854 = getelementptr inbounds i32, i32* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i32* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i32* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i32* %857 to i64
  %859 = load i32, i32* %857, align 4
  store i32 %859, i32* %856, align 4
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 2
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i32, i32* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i32, i32* %629, i64 %864
  %866 = select i1 %862, i32* %863, i32* %865
  %867 = icmp eq i32* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i32 %853, i32* %857, align 4
  %869 = getelementptr inbounds i32, i32* %851, i64 -2
  %870 = load i32, i32* %869, align 4
  %871 = getelementptr inbounds i32, i32* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i32* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i32* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %560, i32* %629, i32* %873, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i32* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %873, i32* %630, i32* %15, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i32* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i32* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i32* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i32* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i32* %890 to i64
  %892 = load i32, i32* %890, align 4
  store i32 %892, i32* %889, align 4
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 2
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i32, i32* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i32, i32* %629, i64 %897
  %899 = select i1 %895, i32* %896, i32* %898
  %900 = icmp eq i32* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i32 %870, i32* %890, align 4
  %902 = icmp eq i32* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIimEENS_9allocatorIS2_EEE6assignIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.1459"*, %"struct.std::__1::pair.1461"*, %"struct.std::__1::pair.1461"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.1461"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair.1461"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.1459", %"class.std::__1::vector.1459"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair.1461"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1459"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.1461"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.1459", %"class.std::__1::vector.1459"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.1461"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair.1461"* %24, %"struct.std::__1::pair.1461"* %2
  %26 = icmp eq %"struct.std::__1::pair.1461"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %25, i64 -1, i32 0
  %29 = ptrtoint i32* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 4
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair.1461"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair.1461"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %37, i64 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %36, i64 0, i32 0
  store i32 %40, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %37, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %36, i64 0, i32 1
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !81

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair.1461"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair.1461"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair.1461"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 48
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair.1461"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair.1461"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %55, i64 0, i32 0
  store i32 %58, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %56, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %55, i64 0, i32 1
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %56, i64 1, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %55, i64 1, i32 0
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %56, i64 1, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %55, i64 1, i32 1
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %56, i64 2, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %55, i64 2, i32 0
  store i32 %70, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %56, i64 2, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %55, i64 2, i32 1
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %56, i64 3, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %55, i64 3, i32 0
  store i32 %76, i32* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %56, i64 3, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %55, i64 3, i32 1
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair.1461"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair.1461"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair.1461"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 4
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair.1461"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %89, i1 false) #13
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair.1461"*
  %96 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair.1461"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair.1461"* %85, %"struct.std::__1::pair.1461"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector.1459", %"class.std::__1::vector.1459"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair.1461"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #14
  %107 = bitcast %"class.std::__1::vector.1459"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #13
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector.1459"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #15
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 4
  %115 = icmp ult i64 %114, 576460752303423487
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 3
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 1152921504606846975
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.1459"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #15
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 1152921504606846975, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 4
  %126 = tail call i8* @_Znwm(i64 %125) #14
  %127 = bitcast i8* %126 to %"struct.std::__1::pair.1461"*
  %128 = getelementptr inbounds %"class.std::__1::vector.1459", %"class.std::__1::vector.1459"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair.1461"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.1459"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %127, i64 %124
  store %"struct.std::__1::pair.1461"* %131, %"struct.std::__1::pair.1461"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair.1461"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 4
  %137 = bitcast %"struct.std::__1::pair.1461"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %137, i64 %6, i1 false) #13
  %138 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair.1461"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIiNS0_8GetFirstENSt3__14lessIvEENS3_6vectorINS3_4pairIimEENS3_9allocatorIS8_EEEEE15sort_and_uniqueENS3_11__wrap_iterIPS8_EESF_(%"class.base::internal::flat_tree.1458"*, %"struct.std::__1::pair.1461"*, %"struct.std::__1::pair.1461"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.1461"* %2 to i64
  %5 = alloca %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare", align 1
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare", %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"struct.std::__1::pair.1461"* %1 to i64
  %8 = sub i64 %4, %7
  %9 = ashr exact i64 %8, 4
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 576460752303423487
  %13 = select i1 %12, i64 %9, i64 576460752303423487
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = shl i64 %15, 4
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #13
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"struct.std::__1::pair.1461"* %1, %"struct.std::__1::pair.1461"* %2, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* nonnull dereferenceable(1) %5, i64 %9, %"struct.std::__1::pair.1461"* null, i64 0) #13
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"struct.std::__1::pair.1461"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"struct.std::__1::pair.1461"* %1, %"struct.std::__1::pair.1461"* %2, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* nonnull dereferenceable(1) %5, i64 %9, %"struct.std::__1::pair.1461"* nonnull %24, i64 %15) #13
  call void @_ZdlPv(i8* nonnull %17) #14
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = icmp eq %"struct.std::__1::pair.1461"* %1, %2
  br i1 %26, label %107, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"struct.std::__1::pair.1461"* [ %29, %31 ], [ %1, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %28, i64 1
  %30 = icmp eq %"struct.std::__1::pair.1461"* %29, %2
  br i1 %30, label %107, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %28, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %29, i64 0, i32 0
  %34 = load i32, i32* %32, align 4
  %35 = load i32, i32* %33, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %27, label %37

37:                                               ; preds = %31
  %38 = ptrtoint %"struct.std::__1::pair.1461"* %28 to i64
  %39 = icmp eq %"struct.std::__1::pair.1461"* %28, %2
  br i1 %39, label %107, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %28, i64 2
  %42 = icmp eq %"struct.std::__1::pair.1461"* %41, %2
  br i1 %42, label %103, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %28, i64 1
  %45 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %2, i64 -3, i32 0
  %46 = ptrtoint i32* %45 to i64
  %47 = sub i64 %46, %38
  %48 = and i64 %47, 16
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %67

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %28, i64 0, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %41, i64 0, i32 0
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %52, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %63

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %28, i64 1
  %58 = ptrtoint %"struct.std::__1::pair.1461"* %57 to i64
  %59 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %57, i64 0, i32 0
  store i32 %54, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %28, i64 2, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %28, i64 1, i32 1
  store i64 %61, i64* %62, align 8
  br label %63

63:                                               ; preds = %56, %50
  %64 = phi i64 [ %38, %50 ], [ %58, %56 ]
  %65 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %28, i64 3
  %66 = inttoptr i64 %64 to %"struct.std::__1::pair.1461"*
  br label %67

67:                                               ; preds = %63, %43
  %68 = phi i64 [ undef, %43 ], [ %64, %63 ]
  %69 = phi %"struct.std::__1::pair.1461"* [ %28, %43 ], [ %66, %63 ]
  %70 = phi %"struct.std::__1::pair.1461"* [ %41, %43 ], [ %65, %63 ]
  %71 = phi %"struct.std::__1::pair.1461"* [ %44, %43 ], [ %41, %63 ]
  %72 = phi i64 [ %38, %43 ], [ %64, %63 ]
  %73 = icmp ult i64 %47, 16
  br i1 %73, label %100, label %74

74:                                               ; preds = %67, %182
  %75 = phi %"struct.std::__1::pair.1461"* [ %186, %182 ], [ %69, %67 ]
  %76 = phi %"struct.std::__1::pair.1461"* [ %184, %182 ], [ %70, %67 ]
  %77 = phi %"struct.std::__1::pair.1461"* [ %93, %182 ], [ %71, %67 ]
  %78 = phi i64 [ %183, %182 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %75, i64 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %76, i64 0, i32 0
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %84, label %91

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %75, i64 1
  %86 = ptrtoint %"struct.std::__1::pair.1461"* %85 to i64
  %87 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %85, i64 0, i32 0
  store i32 %82, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %77, i64 1, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %75, i64 1, i32 1
  store i64 %89, i64* %90, align 8
  br label %91

91:                                               ; preds = %84, %74
  %92 = phi i64 [ %78, %74 ], [ %86, %84 ]
  %93 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %76, i64 1
  %94 = inttoptr i64 %92 to %"struct.std::__1::pair.1461"*
  %95 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %94, i64 0, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %93, i64 0, i32 0
  %97 = load i32, i32* %95, align 4
  %98 = load i32, i32* %96, align 4
  %99 = icmp slt i32 %97, %98
  br i1 %99, label %175, label %182

100:                                              ; preds = %182, %67
  %101 = phi i64 [ %68, %67 ], [ %183, %182 ]
  %102 = inttoptr i64 %101 to %"struct.std::__1::pair.1461"*
  br label %103

103:                                              ; preds = %100, %40
  %104 = phi %"struct.std::__1::pair.1461"* [ %28, %40 ], [ %102, %100 ]
  %105 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %104, i64 1
  %106 = ptrtoint %"struct.std::__1::pair.1461"* %105 to i64
  br label %107

107:                                              ; preds = %27, %25, %37, %103
  %108 = phi i64 [ %106, %103 ], [ %38, %37 ], [ %4, %25 ], [ %4, %27 ]
  %109 = inttoptr i64 %108 to %"struct.std::__1::pair.1461"*
  %110 = icmp eq %"struct.std::__1::pair.1461"* %109, %2
  br i1 %110, label %174, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.base::internal::flat_tree.1458", %"class.base::internal::flat_tree.1458"* %0, i64 0, i32 0, i32 0, i32 1
  %113 = load %"struct.std::__1::pair.1461"*, %"struct.std::__1::pair.1461"** %112, align 8
  %114 = icmp eq %"struct.std::__1::pair.1461"* %113, %2
  br i1 %114, label %172, label %115

115:                                              ; preds = %111
  %116 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %113, i64 -1, i32 0
  %117 = ptrtoint i32* %116 to i64
  %118 = sub i64 %117, %4
  %119 = lshr i64 %118, 4
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %137, label %123

123:                                              ; preds = %115, %123
  %124 = phi %"struct.std::__1::pair.1461"* [ %134, %123 ], [ %109, %115 ]
  %125 = phi %"struct.std::__1::pair.1461"* [ %133, %123 ], [ %2, %115 ]
  %126 = phi i64 [ %135, %123 ], [ %121, %115 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 0, i32 0
  store i32 %128, i32* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 0, i32 1
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 1
  %134 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 1
  %135 = add i64 %126, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %123, !llvm.loop !82

137:                                              ; preds = %123, %115
  %138 = phi %"struct.std::__1::pair.1461"* [ undef, %115 ], [ %134, %123 ]
  %139 = phi %"struct.std::__1::pair.1461"* [ %109, %115 ], [ %134, %123 ]
  %140 = phi %"struct.std::__1::pair.1461"* [ %2, %115 ], [ %133, %123 ]
  %141 = icmp ult i64 %118, 48
  br i1 %141, label %172, label %142

142:                                              ; preds = %137, %142
  %143 = phi %"struct.std::__1::pair.1461"* [ %170, %142 ], [ %139, %137 ]
  %144 = phi %"struct.std::__1::pair.1461"* [ %169, %142 ], [ %140, %137 ]
  %145 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %144, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %143, i64 0, i32 0
  store i32 %146, i32* %147, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %144, i64 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %143, i64 0, i32 1
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %144, i64 1, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %143, i64 1, i32 0
  store i32 %152, i32* %153, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %144, i64 1, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %143, i64 1, i32 1
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %144, i64 2, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %143, i64 2, i32 0
  store i32 %158, i32* %159, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %144, i64 2, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %143, i64 2, i32 1
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %144, i64 3, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %143, i64 3, i32 0
  store i32 %164, i32* %165, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %144, i64 3, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %143, i64 3, i32 1
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %144, i64 4
  %170 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %143, i64 4
  %171 = icmp eq %"struct.std::__1::pair.1461"* %169, %113
  br i1 %171, label %172, label %142

172:                                              ; preds = %137, %142, %111
  %173 = phi %"struct.std::__1::pair.1461"* [ %109, %111 ], [ %138, %137 ], [ %170, %142 ]
  store %"struct.std::__1::pair.1461"* %173, %"struct.std::__1::pair.1461"** %112, align 8
  br label %174

174:                                              ; preds = %107, %172
  ret void

175:                                              ; preds = %91
  %176 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %94, i64 1
  %177 = ptrtoint %"struct.std::__1::pair.1461"* %176 to i64
  %178 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 0, i32 0
  store i32 %98, i32* %178, align 8
  %179 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %76, i64 1, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %94, i64 1, i32 1
  store i64 %180, i64* %181, align 8
  br label %182

182:                                              ; preds = %175, %91
  %183 = phi i64 [ %92, %91 ], [ %177, %175 ]
  %184 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %76, i64 2
  %185 = icmp eq %"struct.std::__1::pair.1461"* %184, %2
  %186 = inttoptr i64 %183 to %"struct.std::__1::pair.1461"*
  br i1 %185, label %100, label %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"struct.std::__1::pair.1461"*, %"struct.std::__1::pair.1461"*, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.1461"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %18 [
    i64 0, label %206
    i64 1, label %206
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %1, i64 -1, i32 0
  %9 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %0, i64 0, i32 0
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %206

13:                                               ; preds = %7
  store i32 %10, i32* %9, align 4
  store i32 %11, i32* %8, align 4
  %14 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %1, i64 -1, i32 1
  %16 = load i64, i64* %14, align 8
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %14, align 8
  store i64 %16, i64* %15, align 8
  br label %206

18:                                               ; preds = %6
  %19 = icmp slt i64 %3, 1
  br i1 %19, label %20, label %51

20:                                               ; preds = %18
  %21 = icmp eq %"struct.std::__1::pair.1461"* %0, %1
  br i1 %21, label %206, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %0, i64 1
  %24 = icmp eq %"struct.std::__1::pair.1461"* %23, %1
  br i1 %24, label %206, label %25

25:                                               ; preds = %22, %39
  %26 = phi %"struct.std::__1::pair.1461"* [ %43, %39 ], [ %23, %22 ]
  %27 = phi %"struct.std::__1::pair.1461"* [ %26, %39 ], [ %0, %22 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %26, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %27, i64 1, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq %"struct.std::__1::pair.1461"* %26, %0
  br i1 %32, label %39, label %33

33:                                               ; preds = %25, %45
  %34 = phi %"struct.std::__1::pair.1461"* [ %35, %45 ], [ %26, %25 ]
  %35 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %34, i64 -1
  %36 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %29, %37
  br i1 %38, label %45, label %39

39:                                               ; preds = %45, %33, %25
  %40 = phi %"struct.std::__1::pair.1461"* [ %0, %25 ], [ %34, %33 ], [ %0, %45 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %40, i64 0, i32 0
  store i32 %29, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %40, i64 0, i32 1
  store i64 %31, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %26, i64 1
  %44 = icmp eq %"struct.std::__1::pair.1461"* %43, %1
  br i1 %44, label %206, label %25

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %34, i64 0, i32 0
  store i32 %37, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %34, i64 -1, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %34, i64 0, i32 1
  store i64 %48, i64* %49, align 8
  %50 = icmp eq %"struct.std::__1::pair.1461"* %35, %0
  br i1 %50, label %39, label %33

51:                                               ; preds = %18
  %52 = lshr i64 %3, 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %0, i64 %52
  %54 = icmp sgt i64 %3, %5
  br i1 %54, label %204, label %55

55:                                               ; preds = %51
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(%"struct.std::__1::pair.1461"* %0, %"struct.std::__1::pair.1461"* %53, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1) %2, i64 %52, %"struct.std::__1::pair.1461"* %4)
  %56 = sub nsw i64 %3, %52
  %57 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %4, i64 %52
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(%"struct.std::__1::pair.1461"* %53, %"struct.std::__1::pair.1461"* %1, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1) %2, i64 %56, %"struct.std::__1::pair.1461"* %57)
  %58 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %4, i64 %3
  br label %89

59:                                               ; preds = %165
  %60 = icmp eq %"struct.std::__1::pair.1461"* %167, %58
  br i1 %60, label %206, label %61

61:                                               ; preds = %59
  %62 = ptrtoint %"struct.std::__1::pair.1461"* %167 to i64
  %63 = add i64 %3, -1
  %64 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %4, i64 %63, i32 0
  %65 = ptrtoint i32* %64 to i64
  %66 = sub i64 %65, %62
  %67 = lshr i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %85, label %71

71:                                               ; preds = %61, %71
  %72 = phi %"struct.std::__1::pair.1461"* [ %81, %71 ], [ %167, %61 ]
  %73 = phi %"struct.std::__1::pair.1461"* [ %82, %71 ], [ %172, %61 ]
  %74 = phi i64 [ %83, %71 ], [ %69, %61 ]
  %75 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %72, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %73, i64 0, i32 0
  store i32 %76, i32* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %72, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %73, i64 0, i32 1
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %72, i64 1
  %82 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %73, i64 1
  %83 = add i64 %74, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %71, !llvm.loop !83

85:                                               ; preds = %71, %61
  %86 = phi %"struct.std::__1::pair.1461"* [ %167, %61 ], [ %81, %71 ]
  %87 = phi %"struct.std::__1::pair.1461"* [ %172, %61 ], [ %82, %71 ]
  %88 = icmp ult i64 %66, 48
  br i1 %88, label %206, label %174

89:                                               ; preds = %55, %165
  %90 = phi %"struct.std::__1::pair.1461"* [ %168, %165 ], [ %4, %55 ]
  %91 = phi %"struct.std::__1::pair.1461"* [ %167, %165 ], [ %57, %55 ]
  %92 = phi %"struct.std::__1::pair.1461"* [ %172, %165 ], [ %0, %55 ]
  %93 = icmp eq %"struct.std::__1::pair.1461"* %91, %58
  br i1 %93, label %94, label %154

94:                                               ; preds = %89
  %95 = icmp eq %"struct.std::__1::pair.1461"* %90, %57
  br i1 %95, label %206, label %96

96:                                               ; preds = %94
  %97 = ptrtoint %"struct.std::__1::pair.1461"* %90 to i64
  %98 = add nsw i64 %52, -1
  %99 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %4, i64 %98, i32 0
  %100 = ptrtoint i32* %99 to i64
  %101 = sub i64 %100, %97
  %102 = lshr i64 %101, 4
  %103 = add nuw nsw i64 %102, 1
  %104 = and i64 %103, 3
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %96, %106
  %107 = phi %"struct.std::__1::pair.1461"* [ %116, %106 ], [ %90, %96 ]
  %108 = phi %"struct.std::__1::pair.1461"* [ %117, %106 ], [ %92, %96 ]
  %109 = phi i64 [ %118, %106 ], [ %104, %96 ]
  %110 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %107, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %108, i64 0, i32 0
  store i32 %111, i32* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %107, i64 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %108, i64 0, i32 1
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %107, i64 1
  %117 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %108, i64 1
  %118 = add i64 %109, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %106, !llvm.loop !84

120:                                              ; preds = %106, %96
  %121 = phi %"struct.std::__1::pair.1461"* [ %90, %96 ], [ %116, %106 ]
  %122 = phi %"struct.std::__1::pair.1461"* [ %92, %96 ], [ %117, %106 ]
  %123 = icmp ult i64 %101, 48
  br i1 %123, label %206, label %124

124:                                              ; preds = %120, %124
  %125 = phi %"struct.std::__1::pair.1461"* [ %151, %124 ], [ %121, %120 ]
  %126 = phi %"struct.std::__1::pair.1461"* [ %152, %124 ], [ %122, %120 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %126, i64 0, i32 0
  store i32 %128, i32* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %126, i64 0, i32 1
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 1, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %126, i64 1, i32 0
  store i32 %134, i32* %135, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 1, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %126, i64 1, i32 1
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 2, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %126, i64 2, i32 0
  store i32 %140, i32* %141, align 8
  %142 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 2, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %126, i64 2, i32 1
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 3, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %126, i64 3, i32 0
  store i32 %146, i32* %147, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 3, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %126, i64 3, i32 1
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 4
  %152 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %126, i64 4
  %153 = icmp eq %"struct.std::__1::pair.1461"* %151, %57
  br i1 %153, label %206, label %124

154:                                              ; preds = %89
  %155 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %91, i64 0, i32 0
  %156 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %90, i64 0, i32 0
  %157 = load i32, i32* %155, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp slt i32 %157, %158
  %160 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %92, i64 0, i32 0
  br i1 %159, label %161, label %163

161:                                              ; preds = %154
  store i32 %157, i32* %160, align 8
  %162 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %91, i64 1
  br label %165

163:                                              ; preds = %154
  store i32 %158, i32* %160, align 8
  %164 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %90, i64 1
  br label %165

165:                                              ; preds = %163, %161
  %166 = phi %"struct.std::__1::pair.1461"* [ %91, %161 ], [ %90, %163 ]
  %167 = phi %"struct.std::__1::pair.1461"* [ %162, %161 ], [ %91, %163 ]
  %168 = phi %"struct.std::__1::pair.1461"* [ %90, %161 ], [ %164, %163 ]
  %169 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %166, i64 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %92, i64 0, i32 1
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %92, i64 1
  %173 = icmp eq %"struct.std::__1::pair.1461"* %168, %57
  br i1 %173, label %59, label %89

174:                                              ; preds = %85, %174
  %175 = phi %"struct.std::__1::pair.1461"* [ %201, %174 ], [ %86, %85 ]
  %176 = phi %"struct.std::__1::pair.1461"* [ %202, %174 ], [ %87, %85 ]
  %177 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 0, i32 0
  store i32 %178, i32* %179, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 0, i32 1
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 1, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 1, i32 0
  store i32 %184, i32* %185, align 8
  %186 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 1, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 1, i32 1
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 2, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 2, i32 0
  store i32 %190, i32* %191, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 2, i32 1
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 2, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 3, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 3, i32 0
  store i32 %196, i32* %197, align 8
  %198 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 3, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 3, i32 1
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 4
  %202 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 4
  %203 = icmp eq %"struct.std::__1::pair.1461"* %201, %58
  br i1 %203, label %206, label %174

204:                                              ; preds = %51
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"struct.std::__1::pair.1461"* %0, %"struct.std::__1::pair.1461"* %53, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1) %2, i64 %52, %"struct.std::__1::pair.1461"* %4, i64 %5)
  %205 = sub nsw i64 %3, %52
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"struct.std::__1::pair.1461"* %53, %"struct.std::__1::pair.1461"* %1, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1) %2, i64 %205, %"struct.std::__1::pair.1461"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(%"struct.std::__1::pair.1461"* %0, %"struct.std::__1::pair.1461"* %53, %"struct.std::__1::pair.1461"* %1, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1) %2, i64 %52, i64 %205, %"struct.std::__1::pair.1461"* %4, i64 %5)
  ret void

206:                                              ; preds = %85, %174, %120, %124, %39, %94, %59, %22, %20, %7, %13, %6, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(%"struct.std::__1::pair.1461"*, %"struct.std::__1::pair.1461"*, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.1461"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %27 [
    i64 0, label %197
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"struct.std::__1::pair.1461"* %4 to i8*
  %8 = bitcast %"struct.std::__1::pair.1461"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  br label %197

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %0, i64 0, i32 0
  %13 = load i32, i32* %11, align 4
  %14 = load i32, i32* %12, align 4
  %15 = icmp slt i32 %13, %14
  %16 = bitcast %"struct.std::__1::pair.1461"* %4 to i8*
  br i1 %15, label %17, label %22

17:                                               ; preds = %9
  %18 = bitcast %"struct.std::__1::pair.1461"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %18, i64 16, i1 false)
  %19 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %4, i64 1
  %20 = bitcast %"struct.std::__1::pair.1461"* %19 to i8*
  %21 = bitcast %"struct.std::__1::pair.1461"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false)
  br label %197

22:                                               ; preds = %9
  %23 = bitcast %"struct.std::__1::pair.1461"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %23, i64 16, i1 false)
  %24 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %4, i64 1
  %25 = bitcast %"struct.std::__1::pair.1461"* %24 to i8*
  %26 = bitcast %"struct.std::__1::pair.1461"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false)
  br label %197

27:                                               ; preds = %5
  %28 = icmp slt i64 %3, 9
  br i1 %28, label %29, label %75

29:                                               ; preds = %27
  %30 = icmp eq %"struct.std::__1::pair.1461"* %0, %1
  br i1 %30, label %197, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.std::__1::pair.1461"* %4 to i8*
  %33 = bitcast %"struct.std::__1::pair.1461"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false) #13
  %34 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %0, i64 1
  %35 = icmp eq %"struct.std::__1::pair.1461"* %34, %1
  br i1 %35, label %197, label %36

36:                                               ; preds = %31, %72
  %37 = phi %"struct.std::__1::pair.1461"* [ %73, %72 ], [ %34, %31 ]
  %38 = phi %"struct.std::__1::pair.1461"* [ %40, %72 ], [ %4, %31 ]
  %39 = phi %"struct.std::__1::pair.1461"* [ %37, %72 ], [ %0, %31 ]
  %40 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %38, i64 1
  %41 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %37, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %38, i64 0, i32 0
  %43 = load i32, i32* %41, align 4
  %44 = load i32, i32* %42, align 4
  %45 = icmp slt i32 %43, %44
  %46 = bitcast %"struct.std::__1::pair.1461"* %40 to i8*
  br i1 %45, label %47, label %70

47:                                               ; preds = %36
  %48 = bitcast %"struct.std::__1::pair.1461"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %48, i64 16, i1 false) #13
  %49 = icmp eq %"struct.std::__1::pair.1461"* %38, %4
  br i1 %49, label %63, label %50

50:                                               ; preds = %47, %57
  %51 = phi %"struct.std::__1::pair.1461"* [ %52, %57 ], [ %38, %47 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %51, i64 -1
  %53 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %52, i64 0, i32 0
  %54 = load i32, i32* %41, align 4
  %55 = load i32, i32* %53, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %63

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %51, i64 0, i32 0
  store i32 %55, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %51, i64 -1, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %51, i64 0, i32 1
  store i64 %60, i64* %61, align 8
  %62 = icmp eq %"struct.std::__1::pair.1461"* %52, %4
  br i1 %62, label %63, label %50

63:                                               ; preds = %57, %50, %47
  %64 = phi %"struct.std::__1::pair.1461"* [ %4, %47 ], [ %51, %50 ], [ %4, %57 ]
  %65 = load i32, i32* %41, align 4
  %66 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %64, i64 0, i32 0
  store i32 %65, i32* %66, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %39, i64 1, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %64, i64 0, i32 1
  store i64 %68, i64* %69, align 8
  br label %72

70:                                               ; preds = %36
  %71 = bitcast %"struct.std::__1::pair.1461"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %71, i64 16, i1 false) #13
  br label %72

72:                                               ; preds = %70, %63
  %73 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %37, i64 1
  %74 = icmp eq %"struct.std::__1::pair.1461"* %73, %1
  br i1 %74, label %197, label %36

75:                                               ; preds = %27
  %76 = lshr i64 %3, 1
  %77 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %0, i64 %76
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"struct.std::__1::pair.1461"* %0, %"struct.std::__1::pair.1461"* %77, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1) %2, i64 %76, %"struct.std::__1::pair.1461"* %4, i64 %76)
  %78 = sub nsw i64 %3, %76
  %79 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %4, i64 %76
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"struct.std::__1::pair.1461"* %77, %"struct.std::__1::pair.1461"* %1, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1) %2, i64 %78, %"struct.std::__1::pair.1461"* %79, i64 %78)
  %80 = icmp eq i64 %76, 0
  br i1 %80, label %81, label %128

81:                                               ; preds = %192, %75
  %82 = phi %"struct.std::__1::pair.1461"* [ %77, %75 ], [ %193, %192 ]
  %83 = phi %"struct.std::__1::pair.1461"* [ %4, %75 ], [ %195, %192 ]
  %84 = icmp eq %"struct.std::__1::pair.1461"* %82, %1
  br i1 %84, label %197, label %85

85:                                               ; preds = %81
  %86 = ptrtoint %"struct.std::__1::pair.1461"* %82 to i64
  %87 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %1, i64 -1, i32 0
  %88 = ptrtoint i32* %87 to i64
  %89 = sub i64 %88, %86
  %90 = lshr i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %85, %94
  %95 = phi %"struct.std::__1::pair.1461"* [ %101, %94 ], [ %83, %85 ]
  %96 = phi %"struct.std::__1::pair.1461"* [ %100, %94 ], [ %82, %85 ]
  %97 = phi i64 [ %102, %94 ], [ %92, %85 ]
  %98 = bitcast %"struct.std::__1::pair.1461"* %95 to i8*
  %99 = bitcast %"struct.std::__1::pair.1461"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #13
  %100 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %96, i64 1
  %101 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %95, i64 1
  %102 = add i64 %97, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %94, !llvm.loop !85

104:                                              ; preds = %94, %85
  %105 = phi %"struct.std::__1::pair.1461"* [ %83, %85 ], [ %101, %94 ]
  %106 = phi %"struct.std::__1::pair.1461"* [ %82, %85 ], [ %100, %94 ]
  %107 = icmp ult i64 %89, 48
  br i1 %107, label %197, label %108

108:                                              ; preds = %104, %108
  %109 = phi %"struct.std::__1::pair.1461"* [ %126, %108 ], [ %105, %104 ]
  %110 = phi %"struct.std::__1::pair.1461"* [ %125, %108 ], [ %106, %104 ]
  %111 = bitcast %"struct.std::__1::pair.1461"* %109 to i8*
  %112 = bitcast %"struct.std::__1::pair.1461"* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false) #13
  %113 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %110, i64 1
  %114 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %109, i64 1
  %115 = bitcast %"struct.std::__1::pair.1461"* %114 to i8*
  %116 = bitcast %"struct.std::__1::pair.1461"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 16, i1 false) #13
  %117 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %110, i64 2
  %118 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %109, i64 2
  %119 = bitcast %"struct.std::__1::pair.1461"* %118 to i8*
  %120 = bitcast %"struct.std::__1::pair.1461"* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false) #13
  %121 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %110, i64 3
  %122 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %109, i64 3
  %123 = bitcast %"struct.std::__1::pair.1461"* %122 to i8*
  %124 = bitcast %"struct.std::__1::pair.1461"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #13
  %125 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %110, i64 4
  %126 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %109, i64 4
  %127 = icmp eq %"struct.std::__1::pair.1461"* %125, %1
  br i1 %127, label %197, label %108

128:                                              ; preds = %75, %192
  %129 = phi %"struct.std::__1::pair.1461"* [ %195, %192 ], [ %4, %75 ]
  %130 = phi %"struct.std::__1::pair.1461"* [ %194, %192 ], [ %0, %75 ]
  %131 = phi %"struct.std::__1::pair.1461"* [ %193, %192 ], [ %77, %75 ]
  %132 = icmp eq %"struct.std::__1::pair.1461"* %131, %1
  br i1 %132, label %133, label %179

133:                                              ; preds = %128
  %134 = icmp eq %"struct.std::__1::pair.1461"* %130, %77
  br i1 %134, label %197, label %135

135:                                              ; preds = %133
  %136 = ptrtoint %"struct.std::__1::pair.1461"* %130 to i64
  %137 = add nsw i64 %76, -1
  %138 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %0, i64 %137, i32 0
  %139 = ptrtoint i32* %138 to i64
  %140 = sub i64 %139, %136
  %141 = lshr i64 %140, 4
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 3
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %155, label %145

145:                                              ; preds = %135, %145
  %146 = phi %"struct.std::__1::pair.1461"* [ %152, %145 ], [ %129, %135 ]
  %147 = phi %"struct.std::__1::pair.1461"* [ %151, %145 ], [ %130, %135 ]
  %148 = phi i64 [ %153, %145 ], [ %143, %135 ]
  %149 = bitcast %"struct.std::__1::pair.1461"* %146 to i8*
  %150 = bitcast %"struct.std::__1::pair.1461"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 16, i1 false) #13
  %151 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %147, i64 1
  %152 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %146, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %145, !llvm.loop !86

155:                                              ; preds = %145, %135
  %156 = phi %"struct.std::__1::pair.1461"* [ %129, %135 ], [ %152, %145 ]
  %157 = phi %"struct.std::__1::pair.1461"* [ %130, %135 ], [ %151, %145 ]
  %158 = icmp ult i64 %140, 48
  br i1 %158, label %197, label %159

159:                                              ; preds = %155, %159
  %160 = phi %"struct.std::__1::pair.1461"* [ %177, %159 ], [ %156, %155 ]
  %161 = phi %"struct.std::__1::pair.1461"* [ %176, %159 ], [ %157, %155 ]
  %162 = bitcast %"struct.std::__1::pair.1461"* %160 to i8*
  %163 = bitcast %"struct.std::__1::pair.1461"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 8 %163, i64 16, i1 false) #13
  %164 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %161, i64 1
  %165 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %160, i64 1
  %166 = bitcast %"struct.std::__1::pair.1461"* %165 to i8*
  %167 = bitcast %"struct.std::__1::pair.1461"* %164 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 16, i1 false) #13
  %168 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %161, i64 2
  %169 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %160, i64 2
  %170 = bitcast %"struct.std::__1::pair.1461"* %169 to i8*
  %171 = bitcast %"struct.std::__1::pair.1461"* %168 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %171, i64 16, i1 false) #13
  %172 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %161, i64 3
  %173 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %160, i64 3
  %174 = bitcast %"struct.std::__1::pair.1461"* %173 to i8*
  %175 = bitcast %"struct.std::__1::pair.1461"* %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 16, i1 false) #13
  %176 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %161, i64 4
  %177 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %160, i64 4
  %178 = icmp eq %"struct.std::__1::pair.1461"* %176, %77
  br i1 %178, label %197, label %159

179:                                              ; preds = %128
  %180 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %131, i64 0, i32 0
  %181 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %130, i64 0, i32 0
  %182 = load i32, i32* %180, align 4
  %183 = load i32, i32* %181, align 4
  %184 = icmp slt i32 %182, %183
  %185 = bitcast %"struct.std::__1::pair.1461"* %129 to i8*
  br i1 %184, label %186, label %189

186:                                              ; preds = %179
  %187 = bitcast %"struct.std::__1::pair.1461"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %187, i64 16, i1 false) #13
  %188 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %131, i64 1
  br label %192

189:                                              ; preds = %179
  %190 = bitcast %"struct.std::__1::pair.1461"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %190, i64 16, i1 false) #13
  %191 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %130, i64 1
  br label %192

192:                                              ; preds = %189, %186
  %193 = phi %"struct.std::__1::pair.1461"* [ %188, %186 ], [ %131, %189 ]
  %194 = phi %"struct.std::__1::pair.1461"* [ %130, %186 ], [ %191, %189 ]
  %195 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %129, i64 1
  %196 = icmp eq %"struct.std::__1::pair.1461"* %194, %77
  br i1 %196, label %81, label %128

197:                                              ; preds = %155, %159, %104, %108, %72, %133, %81, %31, %29, %17, %22, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(%"struct.std::__1::pair.1461"*, %"struct.std::__1::pair.1461"*, %"struct.std::__1::pair.1461"*, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1), i64, i64, %"struct.std::__1::pair.1461"*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint %"struct.std::__1::pair.1461"* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %517, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"struct.std::__1::pair.1461"* %1 to i64
  %13 = ptrtoint %"struct.std::__1::pair.1461"* %0 to i64
  br label %14

14:                                               ; preds = %11, %510
  %15 = phi %"struct.std::__1::pair.1461"* [ %515, %510 ], [ %2, %11 ]
  %16 = phi i64 [ %514, %510 ], [ %4, %11 ]
  %17 = phi i64 [ %513, %510 ], [ %5, %11 ]
  %18 = phi i64 [ %512, %510 ], [ %12, %11 ]
  %19 = phi i64 [ %511, %510 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %29

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %517, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to %"struct.std::__1::pair.1461"*
  %27 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br label %296

29:                                               ; preds = %14
  %30 = inttoptr i64 %19 to %"struct.std::__1::pair.1461"*
  %31 = inttoptr i64 %18 to %"struct.std::__1::pair.1461"*
  %32 = icmp sgt i64 %16, %17
  br i1 %32, label %61, label %33

33:                                               ; preds = %29
  %34 = icmp eq %"struct.std::__1::pair.1461"* %30, %31
  br i1 %34, label %517, label %35

35:                                               ; preds = %33
  %36 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %31, i64 -1, i32 0
  %37 = bitcast i32* %36 to i8*
  %38 = sub i64 0, %19
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = ptrtoint i8* %39 to i64
  %41 = lshr i64 %40, 4
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 3
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %35, %45
  %46 = phi %"struct.std::__1::pair.1461"* [ %52, %45 ], [ %6, %35 ]
  %47 = phi %"struct.std::__1::pair.1461"* [ %51, %45 ], [ %30, %35 ]
  %48 = phi i64 [ %53, %45 ], [ %43, %35 ]
  %49 = bitcast %"struct.std::__1::pair.1461"* %46 to i8*
  %50 = bitcast %"struct.std::__1::pair.1461"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false) #13
  %51 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %47, i64 1
  %52 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %46, i64 1
  %53 = add i64 %48, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %45, !llvm.loop !87

55:                                               ; preds = %45, %35
  %56 = phi %"struct.std::__1::pair.1461"* [ undef, %35 ], [ %46, %45 ]
  %57 = phi %"struct.std::__1::pair.1461"* [ undef, %35 ], [ %52, %45 ]
  %58 = phi %"struct.std::__1::pair.1461"* [ %6, %35 ], [ %52, %45 ]
  %59 = phi %"struct.std::__1::pair.1461"* [ %30, %35 ], [ %51, %45 ]
  %60 = icmp ult i8* %39, inttoptr (i64 48 to i8*)
  br i1 %60, label %88, label %174

61:                                               ; preds = %29
  %62 = icmp eq %"struct.std::__1::pair.1461"* %15, %31
  br i1 %62, label %517, label %63

63:                                               ; preds = %61
  %64 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %15, i64 -1, i32 0
  %65 = bitcast i32* %64 to i8*
  %66 = sub i64 0, %18
  %67 = getelementptr i8, i8* %65, i64 %66
  %68 = ptrtoint i8* %67 to i64
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %63, %73
  %74 = phi %"struct.std::__1::pair.1461"* [ %80, %73 ], [ %6, %63 ]
  %75 = phi %"struct.std::__1::pair.1461"* [ %79, %73 ], [ %31, %63 ]
  %76 = phi i64 [ %81, %73 ], [ %71, %63 ]
  %77 = bitcast %"struct.std::__1::pair.1461"* %74 to i8*
  %78 = bitcast %"struct.std::__1::pair.1461"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #13
  %79 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %75, i64 1
  %80 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %74, i64 1
  %81 = add i64 %76, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %73, !llvm.loop !88

83:                                               ; preds = %73, %63
  %84 = phi %"struct.std::__1::pair.1461"* [ undef, %63 ], [ %80, %73 ]
  %85 = phi %"struct.std::__1::pair.1461"* [ %6, %63 ], [ %80, %73 ]
  %86 = phi %"struct.std::__1::pair.1461"* [ %31, %63 ], [ %79, %73 ]
  %87 = icmp ult i8* %67, inttoptr (i64 48 to i8*)
  br i1 %87, label %194, label %276

88:                                               ; preds = %174, %55
  %89 = phi %"struct.std::__1::pair.1461"* [ %56, %55 ], [ %188, %174 ]
  %90 = phi %"struct.std::__1::pair.1461"* [ %57, %55 ], [ %192, %174 ]
  %91 = icmp eq %"struct.std::__1::pair.1461"* %90, %6
  br i1 %91, label %517, label %92

92:                                               ; preds = %88, %165
  %93 = phi %"struct.std::__1::pair.1461"* [ %168, %165 ], [ %6, %88 ]
  %94 = phi %"struct.std::__1::pair.1461"* [ %172, %165 ], [ %30, %88 ]
  %95 = phi %"struct.std::__1::pair.1461"* [ %167, %165 ], [ %31, %88 ]
  %96 = icmp eq %"struct.std::__1::pair.1461"* %95, %15
  br i1 %96, label %97, label %154

97:                                               ; preds = %92
  %98 = ptrtoint %"struct.std::__1::pair.1461"* %93 to i64
  %99 = ptrtoint %"struct.std::__1::pair.1461"* %89 to i64
  %100 = sub i64 %99, %98
  %101 = lshr i64 %100, 4
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 3
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %119, label %105

105:                                              ; preds = %97, %105
  %106 = phi %"struct.std::__1::pair.1461"* [ %116, %105 ], [ %94, %97 ]
  %107 = phi %"struct.std::__1::pair.1461"* [ %115, %105 ], [ %93, %97 ]
  %108 = phi i64 [ %117, %105 ], [ %103, %97 ]
  %109 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %107, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %106, i64 0, i32 0
  store i32 %110, i32* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %107, i64 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %106, i64 0, i32 1
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %107, i64 1
  %116 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %106, i64 1
  %117 = add i64 %108, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %105, !llvm.loop !89

119:                                              ; preds = %105, %97
  %120 = phi %"struct.std::__1::pair.1461"* [ %94, %97 ], [ %116, %105 ]
  %121 = phi %"struct.std::__1::pair.1461"* [ %93, %97 ], [ %115, %105 ]
  %122 = icmp ult i64 %100, 48
  br i1 %122, label %517, label %123

123:                                              ; preds = %119, %123
  %124 = phi %"struct.std::__1::pair.1461"* [ %152, %123 ], [ %120, %119 ]
  %125 = phi %"struct.std::__1::pair.1461"* [ %151, %123 ], [ %121, %119 ]
  %126 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 0, i32 0
  store i32 %127, i32* %128, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 0, i32 1
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 1, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 1, i32 0
  store i32 %133, i32* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 1, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 1, i32 1
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 2, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 2, i32 0
  store i32 %139, i32* %140, align 8
  %141 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 2, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 2, i32 1
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 3
  %145 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %144, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 3, i32 0
  store i32 %146, i32* %147, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 3, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 3, i32 1
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %125, i64 4
  %152 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %124, i64 4
  %153 = icmp eq %"struct.std::__1::pair.1461"* %144, %89
  br i1 %153, label %517, label %123

154:                                              ; preds = %92
  %155 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %95, i64 0, i32 0
  %156 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %93, i64 0, i32 0
  %157 = load i32, i32* %155, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp slt i32 %157, %158
  %160 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %94, i64 0, i32 0
  br i1 %159, label %161, label %163

161:                                              ; preds = %154
  store i32 %157, i32* %160, align 8
  %162 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %95, i64 1
  br label %165

163:                                              ; preds = %154
  store i32 %158, i32* %160, align 8
  %164 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %93, i64 1
  br label %165

165:                                              ; preds = %163, %161
  %166 = phi %"struct.std::__1::pair.1461"* [ %95, %161 ], [ %93, %163 ]
  %167 = phi %"struct.std::__1::pair.1461"* [ %162, %161 ], [ %95, %163 ]
  %168 = phi %"struct.std::__1::pair.1461"* [ %93, %161 ], [ %164, %163 ]
  %169 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %166, i64 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %94, i64 0, i32 1
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %94, i64 1
  %173 = icmp eq %"struct.std::__1::pair.1461"* %168, %90
  br i1 %173, label %517, label %92

174:                                              ; preds = %55, %174
  %175 = phi %"struct.std::__1::pair.1461"* [ %192, %174 ], [ %58, %55 ]
  %176 = phi %"struct.std::__1::pair.1461"* [ %191, %174 ], [ %59, %55 ]
  %177 = bitcast %"struct.std::__1::pair.1461"* %175 to i8*
  %178 = bitcast %"struct.std::__1::pair.1461"* %176 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #13
  %179 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 1
  %180 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 1
  %181 = bitcast %"struct.std::__1::pair.1461"* %180 to i8*
  %182 = bitcast %"struct.std::__1::pair.1461"* %179 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 16, i1 false) #13
  %183 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 2
  %184 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 2
  %185 = bitcast %"struct.std::__1::pair.1461"* %184 to i8*
  %186 = bitcast %"struct.std::__1::pair.1461"* %183 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %186, i64 16, i1 false) #13
  %187 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 3
  %188 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 3
  %189 = bitcast %"struct.std::__1::pair.1461"* %188 to i8*
  %190 = bitcast %"struct.std::__1::pair.1461"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %190, i64 16, i1 false) #13
  %191 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %176, i64 4
  %192 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %175, i64 4
  %193 = icmp eq %"struct.std::__1::pair.1461"* %191, %31
  br i1 %193, label %88, label %174

194:                                              ; preds = %276, %83
  %195 = phi %"struct.std::__1::pair.1461"* [ %84, %83 ], [ %294, %276 ]
  %196 = icmp eq %"struct.std::__1::pair.1461"* %195, %6
  br i1 %196, label %517, label %197

197:                                              ; preds = %194, %258
  %198 = phi %"struct.std::__1::pair.1461"* [ %274, %258 ], [ %15, %194 ]
  %199 = phi %"struct.std::__1::pair.1461"* [ %270, %258 ], [ %195, %194 ]
  %200 = phi %"struct.std::__1::pair.1461"* [ %269, %258 ], [ %31, %194 ]
  %201 = icmp eq %"struct.std::__1::pair.1461"* %200, %30
  br i1 %201, label %202, label %258

202:                                              ; preds = %197
  %203 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %199, i64 -1, i32 0
  %204 = ptrtoint i32* %203 to i64
  %205 = sub i64 %204, %9
  %206 = lshr i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %224, label %210

210:                                              ; preds = %202, %210
  %211 = phi %"struct.std::__1::pair.1461"* [ %214, %210 ], [ %199, %202 ]
  %212 = phi %"struct.std::__1::pair.1461"* [ %215, %210 ], [ %198, %202 ]
  %213 = phi i64 [ %222, %210 ], [ %208, %202 ]
  %214 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %211, i64 -1
  %215 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %212, i64 -1
  %216 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %214, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %215, i64 0, i32 0
  store i32 %217, i32* %218, align 8
  %219 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %211, i64 -1, i32 1
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %212, i64 -1, i32 1
  store i64 %220, i64* %221, align 8
  %222 = add i64 %213, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %210, !llvm.loop !90

224:                                              ; preds = %210, %202
  %225 = phi %"struct.std::__1::pair.1461"* [ %199, %202 ], [ %214, %210 ]
  %226 = phi %"struct.std::__1::pair.1461"* [ %198, %202 ], [ %215, %210 ]
  %227 = icmp ult i64 %205, 48
  br i1 %227, label %517, label %228

228:                                              ; preds = %224, %228
  %229 = phi %"struct.std::__1::pair.1461"* [ %249, %228 ], [ %225, %224 ]
  %230 = phi %"struct.std::__1::pair.1461"* [ %250, %228 ], [ %226, %224 ]
  %231 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %229, i64 -1, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %230, i64 -1, i32 0
  store i32 %232, i32* %233, align 8
  %234 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %229, i64 -1, i32 1
  %235 = load i64, i64* %234, align 8
  %236 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %230, i64 -1, i32 1
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %229, i64 -2, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %230, i64 -2, i32 0
  store i32 %238, i32* %239, align 8
  %240 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %229, i64 -2, i32 1
  %241 = load i64, i64* %240, align 8
  %242 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %230, i64 -2, i32 1
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %229, i64 -3, i32 0
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %230, i64 -3, i32 0
  store i32 %244, i32* %245, align 8
  %246 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %229, i64 -3, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %230, i64 -3, i32 1
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %229, i64 -4
  %250 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %230, i64 -4
  %251 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %249, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %250, i64 0, i32 0
  store i32 %252, i32* %253, align 8
  %254 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %229, i64 -4, i32 1
  %255 = load i64, i64* %254, align 8
  %256 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %230, i64 -4, i32 1
  store i64 %255, i64* %256, align 8
  %257 = icmp eq %"struct.std::__1::pair.1461"* %249, %6
  br i1 %257, label %517, label %228

258:                                              ; preds = %197
  %259 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %200, i64 -1
  %260 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %199, i64 -1
  %261 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %260, i64 0, i32 0
  %262 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %259, i64 0, i32 0
  %263 = load i32, i32* %261, align 4
  %264 = load i32, i32* %262, align 4
  %265 = icmp slt i32 %263, %264
  %266 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %198, i64 -1, i32 0
  %267 = select i1 %265, i32 %264, i32 %263
  %268 = select i1 %265, %"struct.std::__1::pair.1461"* %200, %"struct.std::__1::pair.1461"* %199
  %269 = select i1 %265, %"struct.std::__1::pair.1461"* %259, %"struct.std::__1::pair.1461"* %200
  %270 = select i1 %265, %"struct.std::__1::pair.1461"* %199, %"struct.std::__1::pair.1461"* %260
  store i32 %267, i32* %266, align 8
  %271 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %268, i64 -1, i32 1
  %272 = load i64, i64* %271, align 8
  %273 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %198, i64 -1, i32 1
  store i64 %272, i64* %273, align 8
  %274 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %198, i64 -1
  %275 = icmp eq %"struct.std::__1::pair.1461"* %270, %6
  br i1 %275, label %517, label %197

276:                                              ; preds = %83, %276
  %277 = phi %"struct.std::__1::pair.1461"* [ %294, %276 ], [ %85, %83 ]
  %278 = phi %"struct.std::__1::pair.1461"* [ %293, %276 ], [ %86, %83 ]
  %279 = bitcast %"struct.std::__1::pair.1461"* %277 to i8*
  %280 = bitcast %"struct.std::__1::pair.1461"* %278 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 16, i1 false) #13
  %281 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %278, i64 1
  %282 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %277, i64 1
  %283 = bitcast %"struct.std::__1::pair.1461"* %282 to i8*
  %284 = bitcast %"struct.std::__1::pair.1461"* %281 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %283, i8* align 8 %284, i64 16, i1 false) #13
  %285 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %278, i64 2
  %286 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %277, i64 2
  %287 = bitcast %"struct.std::__1::pair.1461"* %286 to i8*
  %288 = bitcast %"struct.std::__1::pair.1461"* %285 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* align 8 %288, i64 16, i1 false) #13
  %289 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %278, i64 3
  %290 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %277, i64 3
  %291 = bitcast %"struct.std::__1::pair.1461"* %290 to i8*
  %292 = bitcast %"struct.std::__1::pair.1461"* %289 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %291, i8* align 8 %292, i64 16, i1 false) #13
  %293 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %278, i64 4
  %294 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %277, i64 4
  %295 = icmp eq %"struct.std::__1::pair.1461"* %293, %15
  br i1 %295, label %194, label %276

296:                                              ; preds = %25, %303
  %297 = phi i64 [ %16, %25 ], [ %306, %303 ]
  %298 = phi i64 [ %19, %25 ], [ %305, %303 ]
  %299 = inttoptr i64 %298 to %"struct.std::__1::pair.1461"*
  %300 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %299, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  %302 = icmp slt i32 %28, %301
  br i1 %302, label %308, label %303

303:                                              ; preds = %296
  %304 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %299, i64 1
  %305 = ptrtoint %"struct.std::__1::pair.1461"* %304 to i64
  %306 = add nsw i64 %297, -1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %517, label %296

308:                                              ; preds = %296
  %309 = inttoptr i64 %298 to %"struct.std::__1::pair.1461"*
  %310 = icmp slt i64 %297, %17
  br i1 %310, label %311, label %340

311:                                              ; preds = %308
  %312 = sdiv i64 %17, 2
  %313 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %26, i64 %312
  %314 = ptrtoint %"struct.std::__1::pair.1461"* %313 to i64
  %315 = sub i64 %18, %298
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %335, label %317

317:                                              ; preds = %311
  %318 = ashr exact i64 %315, 4
  %319 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %313, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br label %321

321:                                              ; preds = %321, %317
  %322 = phi %"struct.std::__1::pair.1461"* [ %309, %317 ], [ %333, %321 ]
  %323 = phi i64 [ %318, %317 ], [ %332, %321 ]
  %324 = lshr i64 %323, 1
  %325 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %322, i64 %324
  %326 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %325, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  %328 = icmp slt i32 %320, %327
  %329 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %325, i64 1
  %330 = xor i64 %324, -1
  %331 = add i64 %323, %330
  %332 = select i1 %328, i64 %324, i64 %331
  %333 = select i1 %328, %"struct.std::__1::pair.1461"* %322, %"struct.std::__1::pair.1461"* %329
  %334 = icmp eq i64 %332, 0
  br i1 %334, label %335, label %321

335:                                              ; preds = %321, %311
  %336 = phi %"struct.std::__1::pair.1461"* [ %309, %311 ], [ %333, %321 ]
  %337 = ptrtoint %"struct.std::__1::pair.1461"* %336 to i64
  %338 = sub i64 %337, %298
  %339 = ashr exact i64 %338, 4
  br label %380

340:                                              ; preds = %308
  %341 = icmp eq i64 %297, 1
  br i1 %341, label %342, label %350

342:                                              ; preds = %340
  %343 = inttoptr i64 %18 to %"struct.std::__1::pair.1461"*
  %344 = inttoptr i64 %298 to %"struct.std::__1::pair.1461"*
  %345 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %344, i64 0, i32 0
  store i32 %28, i32* %345, align 4
  store i32 %301, i32* %27, align 4
  %346 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %344, i64 0, i32 1
  %347 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %343, i64 0, i32 1
  %348 = load i64, i64* %346, align 8
  %349 = load i64, i64* %347, align 8
  store i64 %349, i64* %346, align 8
  store i64 %348, i64* %347, align 8
  br label %517

350:                                              ; preds = %340
  %351 = sdiv i64 %297, 2
  %352 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %309, i64 %351
  %353 = ptrtoint %"struct.std::__1::pair.1461"* %352 to i64
  %354 = ptrtoint %"struct.std::__1::pair.1461"* %15 to i64
  %355 = sub i64 %354, %18
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %375, label %357

357:                                              ; preds = %350
  %358 = ashr exact i64 %355, 4
  %359 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br label %361

361:                                              ; preds = %361, %357
  %362 = phi %"struct.std::__1::pair.1461"* [ %26, %357 ], [ %373, %361 ]
  %363 = phi i64 [ %358, %357 ], [ %372, %361 ]
  %364 = lshr i64 %363, 1
  %365 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %362, i64 %364
  %366 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %365, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  %368 = icmp slt i32 %367, %360
  %369 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %365, i64 1
  %370 = xor i64 %364, -1
  %371 = add i64 %363, %370
  %372 = select i1 %368, i64 %371, i64 %364
  %373 = select i1 %368, %"struct.std::__1::pair.1461"* %369, %"struct.std::__1::pair.1461"* %362
  %374 = icmp eq i64 %372, 0
  br i1 %374, label %375, label %361

375:                                              ; preds = %361, %350
  %376 = phi %"struct.std::__1::pair.1461"* [ %26, %350 ], [ %373, %361 ]
  %377 = ptrtoint %"struct.std::__1::pair.1461"* %376 to i64
  %378 = sub i64 %377, %18
  %379 = ashr exact i64 %378, 4
  br label %380

380:                                              ; preds = %375, %335
  %381 = phi i64 [ %337, %335 ], [ %353, %375 ]
  %382 = phi i64 [ %314, %335 ], [ %377, %375 ]
  %383 = phi i64 [ %312, %335 ], [ %379, %375 ]
  %384 = phi i64 [ %339, %335 ], [ %351, %375 ]
  %385 = sub nsw i64 %297, %384
  %386 = sub nsw i64 %17, %383
  %387 = inttoptr i64 %381 to %"struct.std::__1::pair.1461"*
  %388 = inttoptr i64 %382 to %"struct.std::__1::pair.1461"*
  %389 = icmp eq %"struct.std::__1::pair.1461"* %387, %26
  br i1 %389, label %502, label %390

390:                                              ; preds = %380
  %391 = icmp eq %"struct.std::__1::pair.1461"* %26, %388
  br i1 %391, label %502, label %392

392:                                              ; preds = %390
  %393 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %387, i64 0, i32 0
  %394 = load i32, i32* %393, align 4
  store i32 %28, i32* %393, align 4
  store i32 %394, i32* %27, align 4
  %395 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %387, i64 0, i32 1
  %396 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %26, i64 0, i32 1
  %397 = load i64, i64* %395, align 8
  %398 = load i64, i64* %396, align 8
  store i64 %398, i64* %395, align 8
  store i64 %397, i64* %396, align 8
  %399 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %387, i64 1
  %400 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %26, i64 1
  %401 = icmp eq %"struct.std::__1::pair.1461"* %400, %388
  br i1 %401, label %471, label %402

402:                                              ; preds = %392
  %403 = getelementptr %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %388, i64 -2
  %404 = bitcast %"struct.std::__1::pair.1461"* %403 to i8*
  %405 = sub i64 0, %18
  %406 = getelementptr i8, i8* %404, i64 %405
  %407 = ptrtoint i8* %406 to i64
  %408 = and i64 %407, 16
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %425

410:                                              ; preds = %402
  %411 = ptrtoint %"struct.std::__1::pair.1461"* %400 to i64
  %412 = icmp eq %"struct.std::__1::pair.1461"* %399, %26
  %413 = select i1 %412, i64 %411, i64 %18
  %414 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %399, i64 0, i32 0
  %415 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %400, i64 0, i32 0
  %416 = load i32, i32* %414, align 4
  %417 = load i32, i32* %415, align 4
  store i32 %417, i32* %414, align 4
  store i32 %416, i32* %415, align 4
  %418 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %387, i64 1, i32 1
  %419 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %26, i64 1, i32 1
  %420 = load i64, i64* %418, align 8
  %421 = load i64, i64* %419, align 8
  store i64 %421, i64* %418, align 8
  store i64 %420, i64* %419, align 8
  %422 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %387, i64 2
  %423 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %26, i64 2
  %424 = inttoptr i64 %413 to %"struct.std::__1::pair.1461"*
  br label %425

425:                                              ; preds = %410, %402
  %426 = phi i64 [ %413, %410 ], [ undef, %402 ]
  %427 = phi %"struct.std::__1::pair.1461"* [ %422, %410 ], [ undef, %402 ]
  %428 = phi %"struct.std::__1::pair.1461"* [ %424, %410 ], [ %26, %402 ]
  %429 = phi %"struct.std::__1::pair.1461"* [ %423, %410 ], [ %400, %402 ]
  %430 = phi %"struct.std::__1::pair.1461"* [ %422, %410 ], [ %399, %402 ]
  %431 = phi i64 [ %413, %410 ], [ %18, %402 ]
  %432 = icmp ult i8* %406, inttoptr (i64 16 to i8*)
  br i1 %432, label %467, label %433

433:                                              ; preds = %425, %433
  %434 = phi %"struct.std::__1::pair.1461"* [ %466, %433 ], [ %428, %425 ]
  %435 = phi %"struct.std::__1::pair.1461"* [ %464, %433 ], [ %429, %425 ]
  %436 = phi %"struct.std::__1::pair.1461"* [ %463, %433 ], [ %430, %425 ]
  %437 = phi i64 [ %454, %433 ], [ %431, %425 ]
  %438 = ptrtoint %"struct.std::__1::pair.1461"* %435 to i64
  %439 = icmp eq %"struct.std::__1::pair.1461"* %436, %434
  %440 = select i1 %439, i64 %438, i64 %437
  %441 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %436, i64 0, i32 0
  %442 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %435, i64 0, i32 0
  %443 = load i32, i32* %441, align 4
  %444 = load i32, i32* %442, align 4
  store i32 %444, i32* %441, align 4
  store i32 %443, i32* %442, align 4
  %445 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %436, i64 0, i32 1
  %446 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %435, i64 0, i32 1
  %447 = load i64, i64* %445, align 8
  %448 = load i64, i64* %446, align 8
  store i64 %448, i64* %445, align 8
  store i64 %447, i64* %446, align 8
  %449 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %436, i64 1
  %450 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %435, i64 1
  %451 = inttoptr i64 %440 to %"struct.std::__1::pair.1461"*
  %452 = ptrtoint %"struct.std::__1::pair.1461"* %450 to i64
  %453 = icmp eq %"struct.std::__1::pair.1461"* %449, %451
  %454 = select i1 %453, i64 %452, i64 %440
  %455 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %449, i64 0, i32 0
  %456 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %450, i64 0, i32 0
  %457 = load i32, i32* %455, align 4
  %458 = load i32, i32* %456, align 4
  store i32 %458, i32* %455, align 4
  store i32 %457, i32* %456, align 4
  %459 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %436, i64 1, i32 1
  %460 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %435, i64 1, i32 1
  %461 = load i64, i64* %459, align 8
  %462 = load i64, i64* %460, align 8
  store i64 %462, i64* %459, align 8
  store i64 %461, i64* %460, align 8
  %463 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %436, i64 2
  %464 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %435, i64 2
  %465 = icmp eq %"struct.std::__1::pair.1461"* %464, %388
  %466 = inttoptr i64 %454 to %"struct.std::__1::pair.1461"*
  br i1 %465, label %467, label %433

467:                                              ; preds = %433, %425
  %468 = phi i64 [ %426, %425 ], [ %454, %433 ]
  %469 = phi %"struct.std::__1::pair.1461"* [ %427, %425 ], [ %463, %433 ]
  %470 = inttoptr i64 %468 to %"struct.std::__1::pair.1461"*
  br label %471

471:                                              ; preds = %467, %392
  %472 = phi i64 [ %18, %392 ], [ %468, %467 ]
  %473 = phi %"struct.std::__1::pair.1461"* [ %399, %392 ], [ %469, %467 ]
  %474 = phi %"struct.std::__1::pair.1461"* [ %26, %392 ], [ %470, %467 ]
  %475 = icmp eq %"struct.std::__1::pair.1461"* %473, %474
  br i1 %475, label %502, label %476

476:                                              ; preds = %471
  %477 = inttoptr i64 %472 to %"struct.std::__1::pair.1461"*
  br label %478

478:                                              ; preds = %476, %499
  %479 = phi i64 [ %472, %476 ], [ %501, %499 ]
  %480 = phi %"struct.std::__1::pair.1461"* [ %473, %476 ], [ %494, %499 ]
  %481 = phi %"struct.std::__1::pair.1461"* [ %477, %476 ], [ %495, %499 ]
  %482 = inttoptr i64 %479 to %"struct.std::__1::pair.1461"*
  br label %483

483:                                              ; preds = %478, %498
  %484 = phi %"struct.std::__1::pair.1461"* [ %494, %498 ], [ %480, %478 ]
  %485 = phi %"struct.std::__1::pair.1461"* [ %482, %498 ], [ %481, %478 ]
  %486 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %484, i64 0, i32 0
  %487 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %485, i64 0, i32 0
  %488 = load i32, i32* %486, align 4
  %489 = load i32, i32* %487, align 4
  store i32 %489, i32* %486, align 4
  store i32 %488, i32* %487, align 4
  %490 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %484, i64 0, i32 1
  %491 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %485, i64 0, i32 1
  %492 = load i64, i64* %490, align 8
  %493 = load i64, i64* %491, align 8
  store i64 %493, i64* %490, align 8
  store i64 %492, i64* %491, align 8
  %494 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %484, i64 1
  %495 = getelementptr inbounds %"struct.std::__1::pair.1461", %"struct.std::__1::pair.1461"* %485, i64 1
  %496 = icmp eq %"struct.std::__1::pair.1461"* %495, %388
  %497 = icmp eq %"struct.std::__1::pair.1461"* %494, %482
  br i1 %496, label %498, label %499

498:                                              ; preds = %483
  br i1 %497, label %502, label %483

499:                                              ; preds = %483
  %500 = ptrtoint %"struct.std::__1::pair.1461"* %495 to i64
  %501 = select i1 %497, i64 %500, i64 %479
  br label %478

502:                                              ; preds = %498, %380, %390, %471
  %503 = phi %"struct.std::__1::pair.1461"* [ %387, %390 ], [ %388, %380 ], [ %473, %471 ], [ %473, %498 ]
  %504 = add nsw i64 %384, %383
  %505 = add nsw i64 %385, %386
  %506 = icmp slt i64 %504, %505
  br i1 %506, label %507, label %509

507:                                              ; preds = %502
  %508 = ptrtoint %"struct.std::__1::pair.1461"* %503 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(%"struct.std::__1::pair.1461"* %309, %"struct.std::__1::pair.1461"* %387, %"struct.std::__1::pair.1461"* %503, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1) %3, i64 %384, i64 %383, %"struct.std::__1::pair.1461"* %6, i64 %7)
  br label %510

509:                                              ; preds = %502
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIimEENS_9allocatorIS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(%"struct.std::__1::pair.1461"* %503, %"struct.std::__1::pair.1461"* %388, %"struct.std::__1::pair.1461"* %15, %"struct.base::internal::flat_tree<int, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<int, unsigned long>, std::__1::allocator<std::__1::pair<int, unsigned long> > > >::value_compare"* dereferenceable(1) %3, i64 %385, i64 %386, %"struct.std::__1::pair.1461"* %6, i64 %7)
  br label %510

510:                                              ; preds = %507, %509
  %511 = phi i64 [ %508, %507 ], [ %298, %509 ]
  %512 = phi i64 [ %382, %507 ], [ %381, %509 ]
  %513 = phi i64 [ %386, %507 ], [ %383, %509 ]
  %514 = phi i64 [ %385, %507 ], [ %384, %509 ]
  %515 = phi %"struct.std::__1::pair.1461"* [ %15, %507 ], [ %503, %509 ]
  %516 = icmp eq i64 %513, 0
  br i1 %516, label %517, label %14

517:                                              ; preds = %510, %23, %303, %165, %119, %123, %258, %224, %228, %8, %342, %194, %88, %61, %33
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #10

; Function Attrs: nounwind
declare void @_ZN2cc21PictureLayerTilingSetD1Ev(%"class.cc::PictureLayerTilingSet"*) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!5 = distinct !{!5, !6, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!6 = distinct !{!6, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !10}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !17}
!25 = distinct !{!25, !10}
!26 = distinct !{!26, !10}
!27 = distinct !{!27, !17}
!28 = distinct !{!28, !17}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !17}
!35 = distinct !{!35, !10}
!36 = distinct !{!36, !10}
!37 = distinct !{!37, !17}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !17}
!44 = distinct !{!44, !10}
!45 = distinct !{!45, !10}
!46 = distinct !{!46, !17}
!47 = distinct !{!47, !10}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = distinct !{!53, !17}
!54 = distinct !{!54, !10}
!55 = distinct !{!55, !10}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !17}
!62 = distinct !{!62, !10}
!63 = distinct !{!63, !17}
!64 = !{!65}
!65 = distinct !{!65, !66}
!66 = distinct !{!66, !"LVerDomain"}
!67 = !{!68}
!68 = distinct !{!68, !66}
!69 = distinct !{!69, !17}
!70 = distinct !{!70, !10}
!71 = distinct !{!71, !17}
!72 = distinct !{!72, !17}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !17}
!79 = distinct !{!79, !10}
!80 = distinct !{!80, !17}
!81 = distinct !{!81, !10}
!82 = distinct !{!82, !10}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !10}
!85 = distinct !{!85, !10}
!86 = distinct !{!86, !10}
!87 = distinct !{!87, !10}
!88 = distinct !{!88, !10}
!89 = distinct !{!89, !10}
!90 = distinct !{!90, !10}
