; ModuleID = '../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/Path.cpp'
source_filename = "../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/Path.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.llvm::sys::fs::mapped_file_region" = type { i64, i8* }
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.llvm::sys::path::const_iterator" = type { %"class.llvm::StringRef", %"class.llvm::StringRef", i64 }
%"class.llvm::StringRef" = type { i8*, i64 }
%"class.llvm::sys::path::reverse_iterator" = type { %"class.llvm::StringRef", %"class.llvm::StringRef", i64 }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase.base", [7 x i8] }
%"class.llvm::SmallVectorTemplateBase.base" = type { %"class.llvm::SmallVectorTemplateCommon.base" }
%"class.llvm::SmallVectorTemplateCommon.base" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }>
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [1 x i8] }
%"class.llvm::Twine" = type <{ %"union.llvm::Twine::Child", %"union.llvm::Twine::Child", i8, i8, [6 x i8] }>
%"union.llvm::Twine::Child" = type { %"class.llvm::Twine"* }
%"class.llvm::SmallString" = type { %"class.llvm::SmallVector" }
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl.base", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl.base" = type { %"class.llvm::SmallVectorTemplateBase.base" }
%"struct.llvm::SmallVectorStorage" = type { [31 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.1" = type { %"class.llvm::SmallVectorImpl.2", %"struct.llvm::SmallVectorStorage.7" }
%"class.llvm::SmallVectorImpl.2" = type { %"class.llvm::SmallVectorTemplateBase.3" }
%"class.llvm::SmallVectorTemplateBase.3" = type { %"class.llvm::SmallVectorTemplateCommon.4" }
%"class.llvm::SmallVectorTemplateCommon.4" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.5" }
%"struct.llvm::AlignedCharArrayUnion.5" = type { %"struct.llvm::AlignedCharArray.6" }
%"struct.llvm::AlignedCharArray.6" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.7" = type { [3 x %"struct.llvm::AlignedCharArrayUnion.5"] }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon.base", [7 x i8] }
%"class.llvm::SmallString.11" = type { %"class.llvm::SmallVector.12" }
%"class.llvm::SmallVector.12" = type { %"class.llvm::SmallVectorImpl.base", %"struct.llvm::SmallVectorStorage.13" }
%"struct.llvm::SmallVectorStorage.13" = type { [127 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallString.8" = type { %"class.llvm::SmallVector.9" }
%"class.llvm::SmallVector.9" = type { %"class.llvm::SmallVectorImpl.base", %"struct.llvm::SmallVectorStorage.10" }
%"struct.llvm::SmallVectorStorage.10" = type { [255 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.20" = type { %"class.llvm::SmallVectorImpl.2", %"struct.llvm::SmallVectorStorage.21" }
%"struct.llvm::SmallVectorStorage.21" = type { [15 x %"struct.llvm::AlignedCharArrayUnion.5"] }
%"class.llvm::sys::fs::UniqueID" = type { i64, i64 }
%"class.llvm::sys::fs::file_status" = type { i64, i64, i64, i64, i32, i32, i64, i32, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%"class.llvm::sys::fs::directory_entry" = type { %"class.std::__1::basic_string", %"class.llvm::sys::fs::file_status" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.llvm::sys::fs::file_magic" = type { i32 }
%"class.llvm::ErrorOr" = type { %union.anon.16, i8, [7 x i8] }
%union.anon.16 = type { %"struct.llvm::AlignedCharArrayUnion.17" }
%"struct.llvm::AlignedCharArrayUnion.17" = type { %"struct.llvm::AlignedCharArray.18" }
%"struct.llvm::AlignedCharArray.18" = type { [24 x i8] }
%struct.statvfs = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [6 x i32] }
%"class.std::__1::chrono::time_point.23" = type { %"class.std::__1::chrono::duration.24" }
%"class.std::__1::chrono::duration.24" = type { i64 }
%"struct.llvm::sys::fs::detail::DirIterState" = type { %"class.llvm::RefCountedBase", i64, %"class.llvm::sys::fs::directory_entry" }
%"class.llvm::RefCountedBase" = type { i32 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%"class.llvm::SmallVectorTemplateCommon" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion", [7 x i8] }>

$_ZNK4llvm9StringRef13find_first_ofEcm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_ = comdat any

$_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE = comdat any

$_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_ = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc = comdat any

$_ZN4llvm15SmallVectorImplIcE4swapERS1_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc = comdat any

$_ZN4llvm15SmallVectorImplIcE6appendIPcEEvT_S4_ = comdat any

$_ZNK4llvm5Twine18getSingleStringRefEv = comdat any

$_ZN4llvm15SmallVectorImplIcEaSERKS1_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZN12_GLOBAL__N_119preferred_separatorE = internal constant i8 47, align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"-%%%%%%\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"\00\00\FF\FF\00", align 1
@_ZN4llvm4COFFL11BigObjMagicE = internal constant [16 x i8] c"\C7\A1\BA\D1\EE\BA\A9K\AF \FA\F6j\A4\DC\B8", align 16
@_ZN4llvm4COFFL12ClGlObjMagicE = internal constant [16 x i8] c"8\FE\B3\0C\A5\D9\ABM\AC\9B\D6\B6\22&S\C2", align 16
@.str.6 = private unnamed_addr constant [10 x i8] c"\00\00\00\00 \00\00\00\FF\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"\00asm\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"\DE\C0\17\0B\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"BC\C0\DE\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"!<arch>\0A\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"!<thin>\0A\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"\7FELF\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"\CA\FE\BA\BE\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"\CA\FE\BA\BF\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"\FE\ED\FA\CE\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"\FE\ED\FA\CF\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"\CE\FA\ED\FE\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"\CF\FA\ED\FE\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"MZ\00", align 1
@_ZN4llvm4COFFL7PEMagicE = internal constant [4 x i8] c"PE\00\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"/proc/self/exe\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"PWD\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"/proc/self/fd/%d\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"-%%%%%%.\00", align 1
@.str.29 = private constant [2 x i8] c"/\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"PATH\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@_ZZN4llvm3sys2fsL13hasProcSelfFDEvE6Result = internal global i8 0, align 1
@_ZGVZN4llvm3sys2fsL13hasProcSelfFDEvE6Result = internal global i64 0, align 8
@.str.33 = private unnamed_addr constant [14 x i8] c"/proc/self/fd\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"TMPDIR\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"TMP\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"TEMP\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"TEMPDIR\00", align 1
@__const._ZN4llvm3sys4pathL13getEnvTempDirEv.EnvironmentVariables = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0)], align 16
@.str.38 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"XDG_CACHE_HOME\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c".cache\00", align 1
@switch.table._ZN4llvm3sys2fs6accessERKNS_5TwineENS1_10AccessModeE = private unnamed_addr constant [3 x i32] [i32 0, i32 2, i32 5], align 4
@switch.table._ZN4llvm3sys2fsL10fillStatusEiRK4statRNS1_11file_statusE = private unnamed_addr constant [12 x i32] [i32 7, i32 6, i32 9, i32 3, i32 9, i32 5, i32 9, i32 2, i32 9, i32 9, i32 9, i32 8], align 4

@_ZN4llvm3sys2fs18mapped_file_regionC1EiNS2_7mapmodeEmmRNSt3__110error_codeE = hidden unnamed_addr alias void (%"class.llvm::sys::fs::mapped_file_region"*, i32, i32, i64, i64, %"class.std::__1::error_code"*), void (%"class.llvm::sys::fs::mapped_file_region"*, i32, i32, i64, i64, %"class.std::__1::error_code"*)* @_ZN4llvm3sys2fs18mapped_file_regionC2EiNS2_7mapmodeEmmRNSt3__110error_codeE
@_ZN4llvm3sys2fs18mapped_file_regionD1Ev = hidden unnamed_addr alias void (%"class.llvm::sys::fs::mapped_file_region"*), void (%"class.llvm::sys::fs::mapped_file_region"*)* @_ZN4llvm3sys2fs18mapped_file_regionD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path5beginENS_9StringRefE(%"class.llvm::sys::path::const_iterator"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 1, i32 1
  %8 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 2
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 1
  %11 = bitcast %"class.llvm::StringRef"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #20
  store i8* %1, i8** %4, align 8
  store i64 %2, i64* %5, align 8
  %12 = icmp eq i64 %2, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %3
  %14 = icmp ugt i64 %2, 2
  %15 = load i8, i8* %1, align 1
  %16 = icmp eq i8 %15, 47
  br i1 %14, label %17, label %36

17:                                               ; preds = %13
  br i1 %16, label %18, label %37

18:                                               ; preds = %17
  %19 = getelementptr inbounds i8, i8* %1, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 47
  br i1 %21, label %22, label %46

22:                                               ; preds = %18
  %23 = getelementptr inbounds i8, i8* %1, i64 2
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 47
  br i1 %25, label %46, label %26

26:                                               ; preds = %22
  %27 = add i64 %2, -2
  %28 = tail call i8* @memchr(i8* %23, i32 47, i64 %27) #21
  %29 = icmp eq i8* %28, null
  %30 = ptrtoint i8* %28 to i64
  %31 = ptrtoint i8* %1 to i64
  %32 = sub i64 %30, %31
  %33 = select i1 %29, i64 -1, i64 %32
  %34 = icmp ugt i64 %33, %2
  %35 = select i1 %34, i64 %2, i64 %33
  br label %46

36:                                               ; preds = %13
  br i1 %16, label %46, label %37

37:                                               ; preds = %36, %17
  %38 = tail call i8* @memchr(i8* %1, i32 47, i64 %2) #21
  %39 = icmp eq i8* %38, null
  %40 = ptrtoint i8* %38 to i64
  %41 = ptrtoint i8* %1 to i64
  %42 = sub i64 %40, %41
  %43 = select i1 %39, i64 -1, i64 %42
  %44 = icmp ugt i64 %43, %2
  %45 = select i1 %44, i64 %2, i64 %43
  br label %46

46:                                               ; preds = %3, %18, %22, %26, %36, %37
  %47 = phi i64 [ %45, %37 ], [ %35, %26 ], [ 0, %3 ], [ 1, %36 ], [ 1, %22 ], [ 1, %18 ]
  store i8* %1, i8** %6, align 8
  store i64 %47, i64* %7, align 8
  store i64 0, i64* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path3endENS_9StringRefE(%"class.llvm::sys::path::const_iterator"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 1
  %8 = bitcast %"class.llvm::StringRef"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #20
  store i8* %1, i8** %4, align 8
  store i64 %2, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden dereferenceable(40) %"class.llvm::sys::path::const_iterator"* @_ZN4llvm3sys4path14const_iteratorppEv(%"class.llvm::sys::path::const_iterator"* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 1, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %7, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = bitcast %"class.llvm::StringRef"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  br label %70

14:                                               ; preds = %1
  %15 = icmp ugt i64 %4, 2
  br i1 %15, label %16, label %29

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %2, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 47
  br i1 %20, label %21, label %29

21:                                               ; preds = %16
  %22 = getelementptr inbounds i8, i8* %18, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 47
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8, i8* %18, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp ne i8 %27, 47
  br label %29

29:                                               ; preds = %25, %21, %16, %14
  %30 = phi i1 [ false, %21 ], [ false, %16 ], [ false, %14 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 %7
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 47
  br i1 %35, label %36, label %55

36:                                               ; preds = %29
  br i1 %30, label %37, label %44

37:                                               ; preds = %36
  %38 = icmp ult i64 %10, %7
  %39 = select i1 %38, i64 %10, i64 %7
  %40 = getelementptr inbounds i8, i8* %32, i64 %39
  %41 = icmp ugt i64 %10, %7
  %42 = zext i1 %41 to i64
  %43 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 1, i32 0
  store i8* %40, i8** %43, align 8
  store i64 %42, i64* %3, align 8
  br label %70

44:                                               ; preds = %36, %48
  %45 = phi i64 [ %46, %48 ], [ %7, %36 ]
  %46 = add i64 %45, 1
  store i64 %46, i64* %5, align 8
  %47 = icmp eq i64 %46, %10
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds i8, i8* %32, i64 %46
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 47
  br i1 %51, label %44, label %55

52:                                               ; preds = %44
  %53 = add i64 %10, -1
  store i64 %53, i64* %5, align 8
  %54 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %54, align 8
  store i64 1, i64* %3, align 8
  br label %70

55:                                               ; preds = %48, %29
  %56 = phi i64 [ %7, %29 ], [ %46, %48 ]
  %57 = tail call i64 @_ZNK4llvm9StringRef13find_first_ofEcm(%"class.llvm::StringRef"* %8, i8 signext 47, i64 %56) #22
  %58 = load i64, i64* %5, align 8
  %59 = load i64, i64* %9, align 8
  %60 = icmp ult i64 %59, %58
  %61 = select i1 %60, i64 %59, i64 %58
  %62 = icmp ult i64 %61, %57
  %63 = select i1 %62, i64 %57, i64 %61
  %64 = icmp ult i64 %59, %63
  %65 = select i1 %64, i64 %59, i64 %63
  %66 = load i8*, i8** %31, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 %61
  %68 = sub i64 %65, %61
  %69 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 1, i32 0
  store i8* %67, i8** %69, align 8
  store i64 %68, i64* %3, align 8
  br label %70

70:                                               ; preds = %37, %52, %55, %12
  ret %"class.llvm::sys::path::const_iterator"* %0
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path12is_separatorEc(i8 signext) local_unnamed_addr #2 {
  %2 = icmp eq i8 %0, 47
  ret i1 %2
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNK4llvm9StringRef13find_first_ofEcm(%"class.llvm::StringRef"*, i8 signext, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %2
  %7 = select i1 %6, i64 %5, i64 %2
  %8 = icmp ugt i64 %5, %2
  br i1 %8, label %9, label %20

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  %13 = sext i8 %1 to i32
  %14 = sub i64 %5, %7
  %15 = tail call i8* @memchr(i8* %12, i32 %13, i64 %14) #21
  %16 = icmp eq i8* %15, null
  %17 = ptrtoint i8* %15 to i64
  %18 = ptrtoint i8* %11 to i64
  %19 = sub i64 %17, %18
  br i1 %16, label %20, label %21

20:                                               ; preds = %9, %3
  br label %21

21:                                               ; preds = %9, %20
  %22 = phi i64 [ -1, %20 ], [ %19, %9 ]
  ret i64 %22
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK4llvm3sys4path14const_iteratoreqERKS2_(%"class.llvm::sys::path::const_iterator"* nocapture readonly, %"class.llvm::sys::path::const_iterator"* nocapture readonly dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %1, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZNK4llvm3sys4path14const_iteratormiERKS2_(%"class.llvm::sys::path::const_iterator"* nocapture readonly, %"class.llvm::sys::path::const_iterator"* nocapture readonly dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %1, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  ret i64 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path6rbeginENS_9StringRefE(%"class.llvm::sys::path::reverse_iterator"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.llvm::sys::path::reverse_iterator", align 8
  %5 = bitcast %"class.llvm::sys::path::reverse_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %4, i64 0, i32 2
  %9 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %4, i64 0, i32 1
  %10 = bitcast %"class.llvm::StringRef"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #20
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  %11 = call dereferenceable(40) %"class.llvm::sys::path::reverse_iterator"* @_ZN4llvm3sys4path16reverse_iteratorppEv(%"class.llvm::sys::path::reverse_iterator"* nonnull %4) #22
  %12 = bitcast %"class.llvm::sys::path::reverse_iterator"* %0 to i8*
  %13 = bitcast %"class.llvm::sys::path::reverse_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %13, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden dereferenceable(40) %"class.llvm::sys::path::reverse_iterator"* @_ZN4llvm3sys4path16reverse_iteratorppEv(%"class.llvm::sys::path::reverse_iterator"* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = tail call fastcc i64 @_ZN12_GLOBAL__N_114root_dir_startEN4llvm9StringRefE(i8* %3, i64 %5) #22
  %7 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %5
  %10 = add i64 %6, 1
  %11 = icmp ugt i64 %5, %10
  %12 = and i1 %9, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %14, %1
  br label %22

14:                                               ; preds = %1
  %15 = add i64 %5, -1
  %16 = getelementptr inbounds i8, i8* %3, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 47
  br i1 %18, label %19, label %13

19:                                               ; preds = %14
  store i64 %15, i64* %7, align 8
  %20 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 1, i32 1
  store i64 1, i64* %21, align 8
  br label %46

22:                                               ; preds = %13, %28
  %23 = phi i64 [ %26, %28 ], [ %8, %13 ]
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %22
  %26 = add i64 %23, -1
  %27 = icmp eq i64 %26, %6
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds i8, i8* %3, i64 %26
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 47
  br i1 %31, label %22, label %32

32:                                               ; preds = %25, %22, %28
  %33 = icmp ult i64 %5, %23
  %34 = select i1 %33, i64 %5, i64 %23
  %35 = tail call fastcc i64 @_ZN12_GLOBAL__N_112filename_posEN4llvm9StringRefE(i8* %3, i64 %34) #22
  %36 = icmp ult i64 %5, %35
  %37 = select i1 %36, i64 %5, i64 %35
  %38 = icmp ult i64 %37, %23
  %39 = select i1 %38, i64 %23, i64 %37
  %40 = icmp ult i64 %5, %39
  %41 = select i1 %40, i64 %5, i64 %39
  %42 = getelementptr inbounds i8, i8* %3, i64 %37
  %43 = sub i64 %41, %37
  %44 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 1, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 1, i32 1
  store i64 %43, i64* %45, align 8
  store i64 %35, i64* %7, align 8
  br label %46

46:                                               ; preds = %32, %19
  ret %"class.llvm::sys::path::reverse_iterator"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path4rendENS_9StringRefE(%"class.llvm::sys::path::reverse_iterator"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 1, i32 1
  store i8* %1, i8** %4, align 8
  store i64 %2, i64* %5, align 8
  store i8* %1, i8** %6, align 8
  %8 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define internal fastcc i64 @_ZN12_GLOBAL__N_114root_dir_startEN4llvm9StringRefE(i8*, i64) unnamed_addr #4 {
  %3 = icmp eq i64 %1, 2
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = load i8, i8* %0, align 1
  %6 = icmp eq i8 %5, 47
  br i1 %6, label %7, label %38

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 47
  br i1 %10, label %39, label %34

11:                                               ; preds = %2
  %12 = icmp ugt i64 %1, 3
  br i1 %12, label %13, label %32

13:                                               ; preds = %11
  %14 = load i8, i8* %0, align 1
  %15 = icmp eq i8 %14, 47
  br i1 %15, label %16, label %38

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, i8* %0, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 47
  br i1 %19, label %20, label %34

20:                                               ; preds = %16
  %21 = getelementptr inbounds i8, i8* %0, i64 2
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 47
  br i1 %23, label %34, label %24

24:                                               ; preds = %20
  %25 = add i64 %1, -2
  %26 = tail call i8* @memchr(i8* %21, i32 47, i64 %25) #21
  %27 = icmp eq i8* %26, null
  %28 = ptrtoint i8* %26 to i64
  %29 = ptrtoint i8* %0 to i64
  %30 = sub i64 %28, %29
  %31 = select i1 %27, i64 -1, i64 %30
  ret i64 %31

32:                                               ; preds = %11
  %33 = icmp eq i64 %1, 0
  br i1 %33, label %38, label %35

34:                                               ; preds = %7, %16, %20
  br label %39

35:                                               ; preds = %32
  %36 = load i8, i8* %0, align 1
  %37 = icmp eq i8 %36, 47
  br i1 %37, label %39, label %38

38:                                               ; preds = %13, %4, %32, %35
  br label %39

39:                                               ; preds = %34, %35, %7, %38
  %40 = phi i64 [ -1, %38 ], [ -1, %7 ], [ 0, %35 ], [ 0, %34 ]
  ret i64 %40
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define internal fastcc i64 @_ZN12_GLOBAL__N_112filename_posEN4llvm9StringRefE(i8*, i64) unnamed_addr #3 {
  switch i64 %1, label %10 [
    i64 2, label %3
    i64 0, label %15
  ]

3:                                                ; preds = %2
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 47
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 47
  br i1 %9, label %33, label %10

10:                                               ; preds = %2, %3, %6
  %11 = add i64 %1, -1
  %12 = getelementptr inbounds i8, i8* %0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 47
  br i1 %14, label %33, label %15

15:                                               ; preds = %2, %10
  %16 = phi i64 [ %11, %10 ], [ -1, %2 ]
  %17 = icmp ugt i64 %16, %1
  %18 = select i1 %17, i64 %1, i64 %16
  br label %19

19:                                               ; preds = %22, %15
  %20 = phi i64 [ %18, %15 ], [ %23, %22 ]
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %19
  %23 = add i64 %20, -1
  %24 = getelementptr inbounds i8, i8* %0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 47
  br i1 %26, label %27, label %19

27:                                               ; preds = %22
  %28 = icmp eq i64 %23, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %27
  %30 = load i8, i8* %0, align 1
  %31 = icmp eq i8 %30, 47
  br i1 %31, label %33, label %32

32:                                               ; preds = %27, %29
  br label %33

33:                                               ; preds = %19, %10, %32, %29, %6
  %34 = phi i64 [ 0, %6 ], [ %20, %32 ], [ 0, %29 ], [ %11, %10 ], [ 0, %19 ]
  ret i64 %34
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK4llvm3sys4path16reverse_iteratoreqERKS2_(%"class.llvm::sys::path::reverse_iterator"* nocapture readonly, %"class.llvm::sys::path::reverse_iterator"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %1, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %8, label %29

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 1, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %1, i64 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %1, i64 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %12, %16
  br i1 %17, label %18, label %29

18:                                               ; preds = %8
  %19 = icmp eq i64 %12, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = tail call i32 @bcmp(i8* %10, i8* %14, i64 %12) #20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %18, %20
  %24 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %1, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  br label %29

29:                                               ; preds = %8, %23, %20, %2
  %30 = phi i1 [ false, %20 ], [ false, %2 ], [ %28, %23 ], [ false, %8 ]
  ret i1 %30
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZNK4llvm3sys4path16reverse_iteratormiERKS2_(%"class.llvm::sys::path::reverse_iterator"* nocapture readonly, %"class.llvm::sys::path::reverse_iterator"* nocapture readonly dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %1, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  ret i64 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i8*, i64 } @_ZN4llvm3sys4path9root_pathENS_9StringRefE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::sys::path::const_iterator", align 8
  %4 = alloca %"class.llvm::sys::path::const_iterator", align 8
  %5 = bitcast %"class.llvm::sys::path::const_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 2
  %8 = bitcast %"class.llvm::sys::path::const_iterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false)
  call void @_ZN4llvm3sys4path5beginENS_9StringRefE(%"class.llvm::sys::path::const_iterator"* nonnull sret %3, i8* %0, i64 %1) #22
  %9 = bitcast %"class.llvm::sys::path::const_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #20
  %10 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %4, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %4, i64 0, i32 1, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %5, i64 40, i1 false)
  %12 = load i8*, i8** %6, align 8
  %13 = icmp ne i8* %12, %0
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, %1
  %16 = or i1 %13, %15
  br i1 %16, label %17, label %50

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, 2
  %21 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 47
  br i1 %20, label %25, label %48

25:                                               ; preds = %17
  br i1 %24, label %26, label %50

26:                                               ; preds = %25
  %27 = getelementptr inbounds i8, i8* %22, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 47
  br i1 %29, label %30, label %49

30:                                               ; preds = %26
  %31 = call dereferenceable(40) %"class.llvm::sys::path::const_iterator"* @_ZN4llvm3sys4path14const_iteratorppEv(%"class.llvm::sys::path::const_iterator"* nonnull %4) #22
  %32 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %31, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, %0
  br i1 %34, label %35, label %39

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %31, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %1
  br i1 %38, label %50, label %39

39:                                               ; preds = %35, %30
  %40 = load i8*, i8** %10, align 8
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 47
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i64, i64* %11, align 8
  %45 = add i64 %44, %19
  %46 = icmp ugt i64 %45, %1
  %47 = select i1 %46, i64 %1, i64 %45
  br label %50

48:                                               ; preds = %17
  br i1 %24, label %49, label %50

49:                                               ; preds = %26, %48
  br label %50

50:                                               ; preds = %25, %39, %35, %2, %48, %49, %43
  %51 = phi i64 [ %47, %43 ], [ %19, %49 ], [ 0, %48 ], [ 0, %2 ], [ %19, %35 ], [ %19, %39 ], [ 0, %25 ]
  %52 = phi i8* [ %0, %43 ], [ %22, %49 ], [ null, %48 ], [ null, %2 ], [ %22, %35 ], [ %22, %39 ], [ null, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #20
  %53 = insertvalue { i8*, i64 } undef, i8* %52, 0
  %54 = insertvalue { i8*, i64 } %53, i64 %51, 1
  ret { i8*, i64 } %54
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i8*, i64 } @_ZN4llvm3sys4path9root_nameENS_9StringRefE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::sys::path::const_iterator", align 8
  %4 = bitcast %"class.llvm::sys::path::const_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 2
  %8 = bitcast %"class.llvm::sys::path::const_iterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false)
  call void @_ZN4llvm3sys4path5beginENS_9StringRefE(%"class.llvm::sys::path::const_iterator"* nonnull sret %3, i8* %0, i64 %1) #22
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, %0
  %11 = load i64, i64* %7, align 8
  %12 = icmp ne i64 %11, %1
  %13 = or i1 %10, %12
  br i1 %13, label %14, label %28

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 2
  br i1 %17, label %18, label %28

18:                                               ; preds = %14
  %19 = load i8*, i8** %6, align 8
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 47
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = getelementptr inbounds i8, i8* %19, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 47
  %26 = select i1 %25, i8* %19, i8* null
  %27 = select i1 %25, i64 %16, i64 0
  br label %28

28:                                               ; preds = %22, %2, %18, %14
  %29 = phi i8* [ null, %14 ], [ null, %18 ], [ null, %2 ], [ %26, %22 ]
  %30 = phi i64 [ 0, %14 ], [ 0, %18 ], [ 0, %2 ], [ %27, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #20
  %31 = insertvalue { i8*, i64 } undef, i8* %29, 0
  %32 = insertvalue { i8*, i64 } %31, i64 %30, 1
  ret { i8*, i64 } %32
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i8*, i64 } @_ZN4llvm3sys4path14root_directoryENS_9StringRefE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::sys::path::const_iterator", align 8
  %4 = alloca %"class.llvm::sys::path::const_iterator", align 8
  %5 = bitcast %"class.llvm::sys::path::const_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 2
  %8 = bitcast %"class.llvm::sys::path::const_iterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false)
  call void @_ZN4llvm3sys4path5beginENS_9StringRefE(%"class.llvm::sys::path::const_iterator"* nonnull sret %3, i8* %0, i64 %1) #22
  %9 = bitcast %"class.llvm::sys::path::const_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #20
  %10 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %4, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %4, i64 0, i32 1, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %5, i64 40, i1 false)
  %12 = load i8*, i8** %6, align 8
  %13 = icmp ne i8* %12, %0
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, %1
  %16 = or i1 %13, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, 2
  %21 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %3, i64 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 47
  br i1 %20, label %25, label %46

25:                                               ; preds = %17
  br i1 %24, label %26, label %48

26:                                               ; preds = %25
  %27 = getelementptr inbounds i8, i8* %22, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 47
  br i1 %29, label %30, label %47

30:                                               ; preds = %26
  %31 = call dereferenceable(40) %"class.llvm::sys::path::const_iterator"* @_ZN4llvm3sys4path14const_iteratorppEv(%"class.llvm::sys::path::const_iterator"* nonnull %4) #22
  %32 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %31, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, %0
  br i1 %34, label %35, label %39

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %31, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %1
  br i1 %38, label %48, label %39

39:                                               ; preds = %35, %30
  %40 = load i8*, i8** %10, align 8
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 47
  %43 = load i64, i64* %11, align 8
  %44 = select i1 %42, i8* %40, i8* null
  %45 = select i1 %42, i64 %43, i64 0
  br label %48

46:                                               ; preds = %17
  br i1 %24, label %47, label %48

47:                                               ; preds = %26, %46
  br label %48

48:                                               ; preds = %39, %25, %35, %2, %46, %47
  %49 = phi i8* [ %22, %47 ], [ null, %35 ], [ null, %46 ], [ null, %2 ], [ null, %25 ], [ %44, %39 ]
  %50 = phi i64 [ %19, %47 ], [ 0, %35 ], [ 0, %46 ], [ 0, %2 ], [ 0, %25 ], [ %45, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #20
  %51 = insertvalue { i8*, i64 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i64 } %51, i64 %50, 1
  ret { i8*, i64 } %52
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i8*, i64 } @_ZN4llvm3sys4path13relative_pathENS_9StringRefE(i8*, i64) local_unnamed_addr #0 {
  %3 = tail call { i8*, i64 } @_ZN4llvm3sys4path9root_pathENS_9StringRefE(i8* %0, i64 %1) #22
  %4 = extractvalue { i8*, i64 } %3, 1
  %5 = icmp ugt i64 %4, %1
  %6 = select i1 %5, i64 %1, i64 %4
  %7 = getelementptr inbounds i8, i8* %0, i64 %6
  %8 = sub i64 %1, %6
  %9 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* dereferenceable(32), %"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %6 = alloca %"class.llvm::SmallString", align 8
  %7 = alloca %"class.llvm::SmallString", align 8
  %8 = alloca %"class.llvm::SmallString", align 8
  %9 = alloca %"class.llvm::SmallString", align 8
  %10 = alloca %"class.llvm::SmallVector.1", align 8
  %11 = alloca %"class.llvm::StringRef", align 8
  %12 = alloca %"class.llvm::StringRef", align 8
  %13 = alloca %"class.llvm::StringRef", align 8
  %14 = alloca %"class.llvm::StringRef", align 8
  %15 = alloca %"class.llvm::Twine", align 8
  %16 = bitcast %"class.llvm::SmallString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #20
  %17 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %19 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 1, i32 0
  %23 = bitcast i8** %21 to %"class.llvm::SmallVector"**
  store %"class.llvm::SmallVector"* %22, %"class.llvm::SmallVector"** %23, align 8
  %24 = bitcast %"class.llvm::SmallString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %24) #20
  %25 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  %26 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %27 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 1, i32 0
  %31 = bitcast i8** %29 to %"class.llvm::SmallVector"**
  store %"class.llvm::SmallVector"* %30, %"class.llvm::SmallVector"** %31, align 8
  %32 = bitcast %"class.llvm::SmallString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %32) #20
  %33 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  %34 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %35 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %34, i8** %35, align 8
  %36 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %8, i64 1, i32 0
  %39 = bitcast i8** %37 to %"class.llvm::SmallVector"**
  store %"class.llvm::SmallVector"* %38, %"class.llvm::SmallVector"** %39, align 8
  %40 = bitcast %"class.llvm::SmallString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %40) #20
  %41 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  %42 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %43 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %9, i64 1, i32 0
  %47 = bitcast i8** %45 to %"class.llvm::SmallVector"**
  store %"class.llvm::SmallVector"* %46, %"class.llvm::SmallVector"** %47, align 8
  %48 = bitcast %"class.llvm::SmallVector.1"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %48) #20
  %49 = getelementptr inbounds %"class.llvm::SmallVector.1", %"class.llvm::SmallVector.1"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 64, i1 false)
  %50 = getelementptr inbounds %"class.llvm::SmallVector.1", %"class.llvm::SmallVector.1"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %51 = getelementptr inbounds %"class.llvm::SmallVector.1", %"class.llvm::SmallVector.1"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = getelementptr inbounds %"class.llvm::SmallVector.1", %"class.llvm::SmallVector.1"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds %"class.llvm::SmallVector.1", %"class.llvm::SmallVector.1"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.llvm::SmallVector.1", %"class.llvm::SmallVector.1"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 64
  store i8* %54, i8** %53, align 8
  %55 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %1, i64 0, i32 2
  %56 = load i8, i8* %55, align 8
  %57 = icmp ult i8 %56, 2
  br i1 %57, label %67, label %58

58:                                               ; preds = %5
  %59 = getelementptr inbounds %"class.llvm::SmallVector.1", %"class.llvm::SmallVector.1"* %10, i64 0, i32 0, i32 0
  %60 = bitcast %"class.llvm::StringRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #20
  %61 = bitcast %"class.llvm::SmallString"* %6 to %"class.llvm::SmallVectorImpl"*
  %62 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %1, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %61) #22
  %63 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %11, i64 0, i32 0
  %64 = extractvalue { i8*, i64 } %62, 0
  store i8* %64, i8** %63, align 8
  %65 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %11, i64 0, i32 1
  %66 = extractvalue { i8*, i64 } %62, 1
  store i64 %66, i64* %65, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase.3"* nonnull %59, %"class.llvm::StringRef"* nonnull dereferenceable(16) %11) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #20
  br label %67

67:                                               ; preds = %58, %5
  %68 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %2, i64 0, i32 2
  %69 = load i8, i8* %68, align 8
  %70 = icmp ult i8 %69, 2
  br i1 %70, label %80, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.llvm::SmallVector.1", %"class.llvm::SmallVector.1"* %10, i64 0, i32 0, i32 0
  %73 = bitcast %"class.llvm::StringRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #20
  %74 = bitcast %"class.llvm::SmallString"* %7 to %"class.llvm::SmallVectorImpl"*
  %75 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %2, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %74) #22
  %76 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %12, i64 0, i32 0
  %77 = extractvalue { i8*, i64 } %75, 0
  store i8* %77, i8** %76, align 8
  %78 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %12, i64 0, i32 1
  %79 = extractvalue { i8*, i64 } %75, 1
  store i64 %79, i64* %78, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase.3"* nonnull %72, %"class.llvm::StringRef"* nonnull dereferenceable(16) %12) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #20
  br label %80

80:                                               ; preds = %71, %67
  %81 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 2
  %82 = load i8, i8* %81, align 8
  %83 = icmp ult i8 %82, 2
  br i1 %83, label %93, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.llvm::SmallVector.1", %"class.llvm::SmallVector.1"* %10, i64 0, i32 0, i32 0
  %86 = bitcast %"class.llvm::StringRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #20
  %87 = bitcast %"class.llvm::SmallString"* %8 to %"class.llvm::SmallVectorImpl"*
  %88 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %3, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %87) #22
  %89 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %13, i64 0, i32 0
  %90 = extractvalue { i8*, i64 } %88, 0
  store i8* %90, i8** %89, align 8
  %91 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %13, i64 0, i32 1
  %92 = extractvalue { i8*, i64 } %88, 1
  store i64 %92, i64* %91, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase.3"* nonnull %85, %"class.llvm::StringRef"* nonnull dereferenceable(16) %13) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #20
  br label %93

93:                                               ; preds = %84, %80
  %94 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 2
  %95 = load i8, i8* %94, align 8
  %96 = icmp ult i8 %95, 2
  br i1 %96, label %106, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.llvm::SmallVector.1", %"class.llvm::SmallVector.1"* %10, i64 0, i32 0, i32 0
  %99 = bitcast %"class.llvm::StringRef"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #20
  %100 = bitcast %"class.llvm::SmallString"* %9 to %"class.llvm::SmallVectorImpl"*
  %101 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %4, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %100) #22
  %102 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %14, i64 0, i32 0
  %103 = extractvalue { i8*, i64 } %101, 0
  store i8* %103, i8** %102, align 8
  %104 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %14, i64 0, i32 1
  %105 = extractvalue { i8*, i64 } %101, 1
  store i64 %105, i64* %104, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase.3"* nonnull %98, %"class.llvm::StringRef"* nonnull dereferenceable(16) %14) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #20
  br label %106

106:                                              ; preds = %97, %93
  %107 = bitcast %"class.llvm::SmallVector.1"* %10 to %"class.llvm::StringRef"**
  %108 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %107, align 8
  %109 = bitcast i8** %52 to %"class.llvm::StringRef"**
  %110 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %109, align 8
  %111 = icmp eq %"class.llvm::StringRef"* %108, %110
  %112 = bitcast %"class.llvm::StringRef"* %108 to i8*
  br i1 %111, label %123, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %116 = bitcast %"class.llvm::Twine"* %15 to i8*
  %117 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %15, i64 0, i32 2
  %118 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %15, i64 0, i32 3
  %119 = bitcast %"class.llvm::Twine"* %15 to %"class.llvm::StringRef"**
  %120 = bitcast %"class.llvm::SmallVectorImpl"* %0 to %"class.llvm::SmallVectorTemplateBase"*
  br label %144

121:                                              ; preds = %191
  %122 = load i8*, i8** %51, align 8
  br label %123

123:                                              ; preds = %121, %106
  %124 = phi i8* [ %122, %121 ], [ %112, %106 ]
  %125 = icmp eq i8* %124, %50
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  call void @free(i8* %124) #23
  br label %127

127:                                              ; preds = %123, %126
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %48) #20
  %128 = load i8*, i8** %43, align 8
  %129 = icmp eq i8* %128, %42
  br i1 %129, label %131, label %130

130:                                              ; preds = %127
  call void @free(i8* %128) #23
  br label %131

131:                                              ; preds = %127, %130
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %40) #20
  %132 = load i8*, i8** %35, align 8
  %133 = icmp eq i8* %132, %34
  br i1 %133, label %135, label %134

134:                                              ; preds = %131
  call void @free(i8* %132) #23
  br label %135

135:                                              ; preds = %131, %134
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %32) #20
  %136 = load i8*, i8** %27, align 8
  %137 = icmp eq i8* %136, %26
  br i1 %137, label %139, label %138

138:                                              ; preds = %135
  call void @free(i8* %136) #23
  br label %139

139:                                              ; preds = %135, %138
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %24) #20
  %140 = load i8*, i8** %19, align 8
  %141 = icmp eq i8* %140, %18
  br i1 %141, label %143, label %142

142:                                              ; preds = %139
  call void @free(i8* %140) #23
  br label %143

143:                                              ; preds = %139, %142
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #20
  ret void

144:                                              ; preds = %113, %191
  %145 = phi %"class.llvm::StringRef"* [ %108, %113 ], [ %194, %191 ]
  %146 = load i8*, i8** %114, align 8
  %147 = load i8*, i8** %115, align 8
  %148 = icmp eq i8* %146, %147
  br i1 %148, label %157, label %149

149:                                              ; preds = %144
  %150 = ptrtoint i8* %146 to i64
  %151 = ptrtoint i8* %147 to i64
  %152 = xor i64 %150, -1
  %153 = add i64 %151, %152
  %154 = getelementptr inbounds i8, i8* %146, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, 47
  br label %157

157:                                              ; preds = %149, %144
  %158 = phi i1 [ false, %144 ], [ %156, %149 ]
  %159 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %145, i64 0, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %167, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %145, i64 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, 47
  br label %167

167:                                              ; preds = %162, %157
  %168 = phi i1 [ false, %157 ], [ %166, %162 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #20
  store i8 5, i8* %117, align 8
  store i8 1, i8* %118, align 1
  store %"class.llvm::StringRef"* %145, %"class.llvm::StringRef"** %119, align 8
  %169 = call zeroext i1 @_ZN4llvm3sys4path13has_root_nameERKNS_5TwineE(%"class.llvm::Twine"* nonnull dereferenceable(24) %15) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #20
  br i1 %158, label %170, label %179

170:                                              ; preds = %167
  %171 = call i64 @_ZNK4llvm9StringRef17find_first_not_ofEcm(%"class.llvm::StringRef"* %145, i8 signext 47, i64 0) #23
  %172 = load i64, i64* %159, align 8
  %173 = icmp ult i64 %172, %171
  %174 = select i1 %173, i64 %172, i64 %171
  %175 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %145, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 %174
  %178 = getelementptr inbounds i8, i8* %176, i64 %172
  br label %191

179:                                              ; preds = %167
  br i1 %168, label %186, label %180

180:                                              ; preds = %179
  %181 = load i8*, i8** %114, align 8
  %182 = load i8*, i8** %115, align 8
  %183 = icmp eq i8* %181, %182
  %184 = or i1 %169, %183
  br i1 %184, label %186, label %185

185:                                              ; preds = %180
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase"* %120, i8* nonnull dereferenceable(1) @_ZN12_GLOBAL__N_119preferred_separatorE) #22
  br label %186

186:                                              ; preds = %180, %185, %179
  %187 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %145, i64 0, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = load i64, i64* %159, align 8
  %190 = getelementptr inbounds i8, i8* %188, i64 %189
  br label %191

191:                                              ; preds = %170, %186
  %192 = phi i8* [ %178, %170 ], [ %190, %186 ]
  %193 = phi i8* [ %177, %170 ], [ %188, %186 ]
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl"* %0, i8* %193, i8* %192) #22
  %194 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %145, i64 1
  %195 = icmp eq %"class.llvm::StringRef"* %194, %110
  br i1 %195, label %121, label %144
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase.3"*, %"class.llvm::StringRef"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #23
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"class.llvm::StringRef"**
  %15 = bitcast %"class.llvm::StringRef"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %14, align 8
  %17 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %16, i64 1
  store %"class.llvm::StringRef"* %17, %"class.llvm::StringRef"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"*, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8
  switch i8 %8, label %13 [
    i8 1, label %9
    i8 3, label %9
    i8 4, label %9
    i8 5, label %9
    i8 6, label %9
  ]

9:                                                ; preds = %6, %6, %6, %6, %6
  %10 = tail call { i8*, i64 } @_ZNK4llvm5Twine18getSingleStringRefEv(%"class.llvm::Twine"* %0) #22
  %11 = extractvalue { i8*, i64 } %10, 0
  %12 = extractvalue { i8*, i64 } %10, 1
  br label %21

13:                                               ; preds = %6, %2
  tail call void @_ZNK4llvm5Twine8toVectorERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %1) #23
  %14 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint i8* %15 to i64
  %20 = sub i64 %18, %19
  br label %21

21:                                               ; preds = %13, %9
  %22 = phi i64 [ %12, %9 ], [ %20, %13 ]
  %23 = phi i8* [ %11, %9 ], [ %15, %13 ]
  %24 = insertvalue { i8*, i64 } undef, i8* %23, 0
  %25 = insertvalue { i8*, i64 } %24, i64 %22, 1
  ret { i8*, i64 } %25
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path13has_root_nameERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::SmallString.11", align 8
  %3 = bitcast %"class.llvm::SmallString.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %3) #20
  %4 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 128, i1 false)
  %5 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 1, i32 0
  %10 = bitcast i8** %8 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %9, %"class.llvm::SmallVector.12"** %10, align 8
  %11 = bitcast %"class.llvm::SmallString.11"* %2 to %"class.llvm::SmallVectorImpl"*
  %12 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %11) #22
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = extractvalue { i8*, i64 } %12, 1
  %15 = call { i8*, i64 } @_ZN4llvm3sys4path9root_nameENS_9StringRefE(i8* %13, i64 %14) #22
  %16 = extractvalue { i8*, i64 } %15, 1
  %17 = icmp ne i64 %16, 0
  %18 = load i8*, i8** %6, align 8
  %19 = icmp eq i8* %18, %5
  br i1 %19, label %21, label %20

20:                                               ; preds = %1
  call void @free(i8* %18) #23
  br label %21

21:                                               ; preds = %1, %20
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %3) #20
  ret i1 %17
}

; Function Attrs: optsize
declare i64 @_ZNK4llvm9StringRef17find_first_not_ofEcm(%"class.llvm::StringRef"*, i8 signext, i64) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %9, %12
  %14 = icmp ugt i64 %6, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %3
  %16 = bitcast %"class.llvm::SmallVectorImpl"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %12, %6
  %19 = sub i64 %18, %17
  %20 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %20, i8* %21, i64 %19, i64 1) #23
  br label %22

22:                                               ; preds = %15, %3
  %23 = icmp eq i8* %1, %2
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = load i8*, i8** %10, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %1, i64 %6, i1 false) #20
  br label %26

26:                                               ; preds = %22, %24
  %27 = load i8*, i8** %10, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %6
  store i8* %28, i8** %10, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 1) #23
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = load i8, i8* %1, align 1
  store i8 %14, i8* %13, align 1
  %15 = load i8*, i8** %3, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %16, i8** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEENS1_14const_iteratorES5_(%"class.llvm::SmallVectorImpl"* dereferenceable(32), %"class.llvm::sys::path::const_iterator"* byval(%"class.llvm::sys::path::const_iterator") align 8, %"class.llvm::sys::path::const_iterator"* nocapture readonly byval(%"class.llvm::sys::path::const_iterator") align 8) local_unnamed_addr #0 {
  %4 = alloca %"class.llvm::Twine", align 8
  %5 = alloca %"class.llvm::Twine", align 8
  %6 = alloca %"class.llvm::Twine", align 8
  %7 = alloca %"class.llvm::Twine", align 8
  %8 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %1, i64 0, i32 2
  %9 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %1, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %2, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %2, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.llvm::Twine"* %4 to i8*
  %15 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 2
  %17 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 3
  %18 = bitcast %"class.llvm::Twine"* %4 to %"class.llvm::StringRef"**
  %19 = bitcast %"class.llvm::Twine"* %5 to i8*
  %20 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 3
  %21 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 2
  %22 = bitcast %"class.llvm::Twine"* %6 to i8*
  %23 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 3
  %24 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 2
  %25 = bitcast %"class.llvm::Twine"* %7 to i8*
  %26 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %7, i64 0, i32 3
  %27 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %7, i64 0, i32 2
  %28 = load i8*, i8** %9, align 8
  %29 = icmp eq i8* %28, %11
  %30 = load i64, i64* %8, align 8
  %31 = icmp eq i64 %30, %13
  %32 = and i1 %29, %31
  br i1 %32, label %40, label %33

33:                                               ; preds = %3, %33
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #20
  store i8 5, i8* %16, align 8
  store i8 1, i8* %17, align 1
  store %"class.llvm::StringRef"* %15, %"class.llvm::StringRef"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #20
  store i8 1, i8* %20, align 1
  store i8 1, i8* %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #20
  store i8 1, i8* %23, align 1
  store i8 1, i8* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #20
  store i8 1, i8* %26, align 1
  store i8 1, i8* %27, align 8
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* dereferenceable(32) %0, %"class.llvm::Twine"* nonnull dereferenceable(24) %4, %"class.llvm::Twine"* nonnull dereferenceable(24) %5, %"class.llvm::Twine"* nonnull dereferenceable(24) %6, %"class.llvm::Twine"* nonnull dereferenceable(24) %7) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #20
  %34 = call dereferenceable(40) %"class.llvm::sys::path::const_iterator"* @_ZN4llvm3sys4path14const_iteratorppEv(%"class.llvm::sys::path::const_iterator"* nonnull %1) #22
  %35 = load i8*, i8** %9, align 8
  %36 = icmp eq i8* %35, %11
  %37 = load i64, i64* %8, align 8
  %38 = icmp eq i64 %37, %13
  %39 = and i1 %36, %38
  br i1 %39, label %40, label %33

40:                                               ; preds = %33, %3
  ret void
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden { i8*, i64 } @_ZN4llvm3sys4path11parent_pathENS_9StringRefE(i8*, i64) local_unnamed_addr #4 {
  %3 = tail call fastcc i64 @_ZN12_GLOBAL__N_115parent_path_endEN4llvm9StringRefE(i8* %0, i64 %1) #22
  %4 = icmp eq i64 %3, -1
  %5 = icmp ugt i64 %3, %1
  %6 = select i1 %5, i64 %1, i64 %3
  %7 = select i1 %4, i64 0, i64 %6
  %8 = select i1 %4, i8* null, i8* %0
  %9 = insertvalue { i8*, i64 } undef, i8* %8, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %7, 1
  ret { i8*, i64 } %10
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define internal fastcc i64 @_ZN12_GLOBAL__N_115parent_path_endEN4llvm9StringRefE(i8*, i64) unnamed_addr #4 {
  %3 = tail call fastcc i64 @_ZN12_GLOBAL__N_112filename_posEN4llvm9StringRefE(i8* %0, i64 %1) #22
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i64 %3
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 47
  br label %9

9:                                                ; preds = %2, %5
  %10 = phi i1 [ true, %2 ], [ %8, %5 ]
  %11 = icmp ugt i64 %3, %1
  %12 = select i1 %11, i64 %1, i64 %3
  %13 = tail call fastcc i64 @_ZN12_GLOBAL__N_114root_dir_startEN4llvm9StringRefE(i8* %0, i64 %12) #22
  br label %14

14:                                               ; preds = %20, %9
  %15 = phi i64 [ %3, %9 ], [ %18, %20 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  %18 = add i64 %15, -1
  %19 = icmp eq i64 %18, %13
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds i8, i8* %0, i64 %18
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 47
  br i1 %23, label %14, label %24

24:                                               ; preds = %14, %17, %20
  %25 = icmp ne i64 %15, 1
  %26 = icmp ne i64 %13, 0
  %27 = or i1 %26, %25
  %28 = or i1 %10, %27
  %29 = select i1 %28, i64 %15, i64 -1
  ret i64 %29
}

; Function Attrs: nofree nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path15remove_filenameERNS_15SmallVectorImplIcEE(%"class.llvm::SmallVectorImpl"* nocapture dereferenceable(32)) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint i8* %3 to i64
  %8 = sub i64 %6, %7
  %9 = tail call fastcc i64 @_ZN12_GLOBAL__N_115parent_path_endEN4llvm9StringRefE(i8* %3, i64 %8) #22
  %10 = icmp eq i64 %9, -1
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds i8, i8* %3, i64 %9
  store i8* %12, i8** %4, align 8
  br label %13

13:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path17replace_extensionERNS_15SmallVectorImplIcEERKNS_5TwineE(%"class.llvm::SmallVectorImpl"* dereferenceable(32), %"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::SmallString", align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint i8* %6 to i64
  %11 = sub i64 %9, %10
  %12 = bitcast %"class.llvm::SmallString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #20
  %13 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %15 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 1, i32 0
  %19 = bitcast i8** %17 to %"class.llvm::SmallVector"**
  store %"class.llvm::SmallVector"* %18, %"class.llvm::SmallVector"** %19, align 8
  %20 = bitcast %"class.llvm::SmallString"* %3 to %"class.llvm::SmallVectorImpl"*
  %21 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %1, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %20) #22
  %22 = extractvalue { i8*, i64 } %21, 0
  %23 = extractvalue { i8*, i64 } %21, 1
  br label %24

24:                                               ; preds = %2, %27
  %25 = phi i64 [ %28, %27 ], [ %11, %2 ]
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %24
  %28 = add i64 %25, -1
  %29 = getelementptr inbounds i8, i8* %6, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 46
  br i1 %31, label %32, label %24

32:                                               ; preds = %27
  %33 = call fastcc i64 @_ZN12_GLOBAL__N_112filename_posEN4llvm9StringRefE(i8* %6, i64 %11) #22
  %34 = icmp ult i64 %28, %33
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = load i8*, i8** %5, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %28
  store i8* %37, i8** %7, align 8
  br label %38

38:                                               ; preds = %24, %32, %35
  %39 = icmp eq i64 %23, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  %41 = load i8, i8* %22, align 1
  %42 = icmp eq i8 %41, 46
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.llvm::SmallVectorImpl"* %0 to %"class.llvm::SmallVectorTemplateBase"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #20
  store i8 46, i8* %4, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase"* %44, i8* nonnull dereferenceable(1) %4) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #20
  br label %45

45:                                               ; preds = %40, %38, %43
  %46 = getelementptr inbounds i8, i8* %22, i64 %23
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl"* %0, i8* %22, i8* %46) #22
  %47 = load i8*, i8** %15, align 8
  %48 = icmp eq i8* %47, %14
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  call void @free(i8* %47) #23
  br label %50

50:                                               ; preds = %45, %49
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path19replace_path_prefixERNS_15SmallVectorImplIcEERKNS_9StringRefES7_(%"class.llvm::SmallVectorImpl"* dereferenceable(32), %"class.llvm::StringRef"* nocapture readonly dereferenceable(16), %"class.llvm::StringRef"* dereferenceable(16)) local_unnamed_addr #0 {
  %4 = alloca %"class.llvm::StringRef", align 8
  %5 = alloca %"class.llvm::SmallString.8", align 8
  %6 = alloca %"class.llvm::Twine", align 8
  %7 = alloca %"class.llvm::Twine", align 8
  %8 = alloca %"class.llvm::Twine", align 8
  %9 = alloca %"class.llvm::Twine", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = alloca %"class.llvm::Twine", align 8
  %12 = alloca %"class.llvm::Twine", align 8
  %13 = alloca %"class.llvm::Twine", align 8
  %14 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %2, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %89, label %21

21:                                               ; preds = %17, %3
  %22 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = ptrtoint i8* %23 to i64
  %28 = sub i64 %26, %27
  %29 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %1, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ult i64 %28, %15
  br i1 %31, label %89, label %32

32:                                               ; preds = %21
  br i1 %16, label %36, label %33

33:                                               ; preds = %32
  %34 = tail call i32 @bcmp(i8* %23, i8* %30, i64 %15) #20
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %89

36:                                               ; preds = %32, %33
  %37 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %2, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %15, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  br i1 %16, label %89, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %43, i64 %15, i1 false) #20
  br label %89

44:                                               ; preds = %36
  %45 = bitcast %"class.llvm::StringRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #20
  %46 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %4, i64 0, i32 0
  %47 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %4, i64 0, i32 1
  %48 = getelementptr inbounds i8, i8* %23, i64 %15
  %49 = sub i64 %28, %15
  store i8* %48, i8** %46, align 8
  store i64 %49, i64* %47, align 8
  %50 = bitcast %"class.llvm::SmallString.8"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %50) #20
  %51 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 256, i1 false)
  %52 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %53 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %52, i8** %53, align 8
  %54 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %52, i8** %54, align 8
  %55 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %5, i64 1, i32 0
  %57 = bitcast i8** %55 to %"class.llvm::SmallVector.9"**
  store %"class.llvm::SmallVector.9"* %56, %"class.llvm::SmallVector.9"** %57, align 8
  %58 = bitcast %"class.llvm::SmallString.8"* %5 to %"class.llvm::SmallVectorImpl"*
  %59 = bitcast %"class.llvm::Twine"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #20
  %60 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 2
  store i8 5, i8* %60, align 8
  %61 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 3
  store i8 1, i8* %61, align 1
  %62 = bitcast %"class.llvm::Twine"* %6 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %2, %"class.llvm::StringRef"** %62, align 8
  %63 = bitcast %"class.llvm::Twine"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #20
  %64 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %7, i64 0, i32 3
  store i8 1, i8* %64, align 1
  %65 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %7, i64 0, i32 2
  store i8 1, i8* %65, align 8
  %66 = bitcast %"class.llvm::Twine"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #20
  %67 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 3
  store i8 1, i8* %67, align 1
  %68 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 2
  store i8 1, i8* %68, align 8
  %69 = bitcast %"class.llvm::Twine"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #20
  %70 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 3
  store i8 1, i8* %70, align 1
  %71 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 2
  store i8 1, i8* %71, align 8
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %58, %"class.llvm::Twine"* nonnull dereferenceable(24) %6, %"class.llvm::Twine"* nonnull dereferenceable(24) %7, %"class.llvm::Twine"* nonnull dereferenceable(24) %8, %"class.llvm::Twine"* nonnull dereferenceable(24) %9) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #20
  %72 = bitcast %"class.llvm::Twine"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #20
  %73 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 5, i8* %73, align 8
  %74 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 1, i8* %74, align 1
  %75 = bitcast %"class.llvm::Twine"* %10 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %4, %"class.llvm::StringRef"** %75, align 8
  %76 = bitcast %"class.llvm::Twine"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #20
  %77 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  store i8 1, i8* %77, align 1
  %78 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  store i8 1, i8* %78, align 8
  %79 = bitcast %"class.llvm::Twine"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #20
  %80 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 3
  store i8 1, i8* %80, align 1
  %81 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 2
  store i8 1, i8* %81, align 8
  %82 = bitcast %"class.llvm::Twine"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #20
  %83 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 3
  store i8 1, i8* %83, align 1
  %84 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 2
  store i8 1, i8* %84, align 8
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %58, %"class.llvm::Twine"* nonnull dereferenceable(24) %10, %"class.llvm::Twine"* nonnull dereferenceable(24) %11, %"class.llvm::Twine"* nonnull dereferenceable(24) %12, %"class.llvm::Twine"* nonnull dereferenceable(24) %13) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #20
  call void @_ZN4llvm15SmallVectorImplIcE4swapERS1_(%"class.llvm::SmallVectorImpl"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %58) #22
  %85 = load i8*, i8** %53, align 8
  %86 = icmp eq i8* %85, %52
  br i1 %86, label %88, label %87

87:                                               ; preds = %44
  call void @free(i8* %85) #23
  br label %88

88:                                               ; preds = %44, %87
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %50) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #20
  br label %89

89:                                               ; preds = %21, %88, %33, %40, %41, %17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIcE4swapERS1_(%"class.llvm::SmallVectorImpl"*, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.llvm::SmallVectorImpl"* %0, %1
  br i1 %3, label %154, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %8 = icmp eq i8* %6, %7
  %9 = ptrtoint i8* %6 to i64
  br i1 %8, label %10, label %14

10:                                               ; preds = %4
  %11 = bitcast %"class.llvm::SmallVectorImpl"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = inttoptr i64 %12 to i8*
  br label %37

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %18 = icmp eq i8* %16, %17
  %19 = ptrtoint i8* %16 to i64
  br i1 %18, label %20, label %22

20:                                               ; preds = %14
  %21 = bitcast %"class.llvm::SmallVectorImpl"* %1 to i64*
  br label %37

22:                                               ; preds = %14
  %23 = bitcast %"class.llvm::SmallVectorImpl"* %0 to i64*
  %24 = bitcast %"class.llvm::SmallVectorImpl"* %1 to i64*
  store i64 %19, i64* %23, align 8
  store i64 %9, i64* %24, align 8
  %25 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast i8** %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast i8** %26 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  %31 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %33 = bitcast i8** %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast i8** %32 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %33, align 8
  store i64 %34, i64* %35, align 8
  br label %154

37:                                               ; preds = %20, %10
  %38 = phi i64* [ %21, %20 ], [ %11, %10 ]
  %39 = phi i8* [ %16, %20 ], [ %13, %10 ]
  %40 = phi i64 [ %19, %20 ], [ %12, %10 ]
  %41 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %43, %40
  %45 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.llvm::SmallVectorImpl"* %0 to i64*
  %49 = sub i64 %47, %9
  %50 = icmp ugt i64 %44, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %37
  %52 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %52, i8* %7, i64 %44, i64 1) #23
  %53 = load i64, i64* %48, align 8
  %54 = load i64, i64* %38, align 8
  %55 = inttoptr i64 %53 to i8*
  %56 = inttoptr i64 %54 to i8*
  br label %57

57:                                               ; preds = %51, %37
  %58 = phi i8* [ %55, %51 ], [ %6, %37 ]
  %59 = phi i8* [ %56, %51 ], [ %39, %37 ]
  %60 = phi i64 [ %54, %51 ], [ %40, %37 ]
  %61 = phi i64 [ %53, %51 ], [ %9, %37 ]
  %62 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast i8** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %64, %61
  %66 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %68, %60
  %70 = icmp ugt i64 %65, %69
  br i1 %70, label %71, label %79

71:                                               ; preds = %57
  %72 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %72, i8* %73, i64 %65, i64 1) #23
  %74 = load i64, i64* %63, align 8
  %75 = load i64, i64* %48, align 8
  %76 = load i64, i64* %38, align 8
  %77 = inttoptr i64 %75 to i8*
  %78 = inttoptr i64 %76 to i8*
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i64 [ %74, %71 ], [ %64, %57 ]
  %81 = phi i8* [ %77, %71 ], [ %58, %57 ]
  %82 = phi i8* [ %78, %71 ], [ %59, %57 ]
  %83 = phi i64 [ %76, %71 ], [ %60, %57 ]
  %84 = phi i64 [ %75, %71 ], [ %61, %57 ]
  %85 = sub i64 %80, %84
  %86 = load i64, i64* %42, align 8
  %87 = sub i64 %86, %83
  %88 = icmp ugt i64 %85, %87
  %89 = select i1 %88, i64 %87, i64 %85
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %103, label %91

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8, i8* %81, align 1
  %94 = load i8, i8* %82, align 1
  store i8 %94, i8* %81, align 1
  store i8 %93, i8* %82, align 1
  %95 = icmp eq i64 %89, 1
  br i1 %95, label %96, label %115

96:                                               ; preds = %115, %91
  %97 = load i64, i64* %63, align 8
  %98 = load i64, i64* %48, align 8
  %99 = load i64, i64* %42, align 8
  %100 = load i64, i64* %38, align 8
  %101 = inttoptr i64 %100 to i8*
  %102 = inttoptr i64 %98 to i8*
  br label %103

103:                                              ; preds = %96, %79
  %104 = phi i64 [ %99, %96 ], [ %86, %79 ]
  %105 = phi i64 [ %97, %96 ], [ %80, %79 ]
  %106 = phi i8* [ %102, %96 ], [ %81, %79 ]
  %107 = phi i8* [ %101, %96 ], [ %82, %79 ]
  %108 = phi i64 [ %100, %96 ], [ %83, %79 ]
  %109 = phi i64 [ %98, %96 ], [ %84, %79 ]
  %110 = inttoptr i64 %105 to i8*
  %111 = inttoptr i64 %104 to i8*
  %112 = sub i64 %105, %109
  %113 = sub i64 %104, %108
  %114 = icmp ugt i64 %112, %113
  br i1 %114, label %125, label %138

115:                                              ; preds = %91, %115
  %116 = phi i64 [ %123, %115 ], [ 1, %91 ]
  %117 = load i8*, i8** %5, align 8
  %118 = load i8*, i8** %92, align 8
  %119 = getelementptr inbounds i8, i8* %117, i64 %116
  %120 = getelementptr inbounds i8, i8* %118, i64 %116
  %121 = load i8, i8* %119, align 1
  %122 = load i8, i8* %120, align 1
  store i8 %122, i8* %119, align 1
  store i8 %121, i8* %120, align 1
  %123 = add nuw i64 %116, 1
  %124 = icmp eq i64 %123, %89
  br i1 %124, label %96, label %115

125:                                              ; preds = %103
  %126 = sub i64 %112, %113
  %127 = getelementptr inbounds i8, i8* %106, i64 %89
  %128 = icmp eq i8* %127, %110
  br i1 %128, label %133, label %129

129:                                              ; preds = %125
  %130 = ptrtoint i8* %127 to i64
  %131 = sub i64 %105, %130
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %111, i8* align 1 %127, i64 %131, i1 false) #20
  %132 = load i8*, i8** %41, align 8
  br label %133

133:                                              ; preds = %125, %129
  %134 = phi i8* [ %111, %125 ], [ %132, %129 ]
  %135 = getelementptr inbounds i8, i8* %134, i64 %126
  store i8* %135, i8** %41, align 8
  %136 = load i8*, i8** %5, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 %89
  store i8* %137, i8** %62, align 8
  br label %154

138:                                              ; preds = %103
  %139 = icmp ugt i64 %113, %112
  br i1 %139, label %140, label %154

140:                                              ; preds = %138
  %141 = sub i64 %113, %112
  %142 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds i8, i8* %107, i64 %89
  %144 = icmp eq i8* %143, %111
  br i1 %144, label %149, label %145

145:                                              ; preds = %140
  %146 = ptrtoint i8* %143 to i64
  %147 = sub i64 %104, %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 %143, i64 %147, i1 false) #20
  %148 = load i8*, i8** %62, align 8
  br label %149

149:                                              ; preds = %140, %145
  %150 = phi i8* [ %110, %140 ], [ %148, %145 ]
  %151 = getelementptr inbounds i8, i8* %150, i64 %141
  store i8* %151, i8** %62, align 8
  %152 = load i8*, i8** %142, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 %89
  store i8* %153, i8** %41, align 8
  br label %154

154:                                              ; preds = %133, %149, %138, %2, %22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path6nativeERKNS_5TwineERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = bitcast %"class.llvm::SmallVectorImpl"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  store i64 %4, i64* %6, align 8
  tail call void @_ZNK4llvm5Twine8toVectorERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %1) #23
  %7 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ult i8* %8, %9
  br i1 %10, label %11, label %26

11:                                               ; preds = %2, %22
  %12 = phi i8* [ %24, %22 ], [ %8, %2 ]
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 92
  br i1 %14, label %15, label %22

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %12, i64 1
  %17 = icmp ult i8* %16, %9
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = load i8, i8* %16, align 1
  %20 = icmp eq i8 %19, 92
  br i1 %20, label %22, label %21

21:                                               ; preds = %18, %15
  store i8 47, i8* %12, align 1
  br label %22

22:                                               ; preds = %21, %18, %11
  %23 = phi i8* [ %12, %11 ], [ %12, %21 ], [ %16, %18 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = icmp ult i8* %24, %9
  br i1 %25, label %11, label %26

26:                                               ; preds = %22, %2
  ret void
}

; Function Attrs: optsize
declare void @_ZNK4llvm5Twine8toVectorERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"*, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path6nativeERNS_15SmallVectorImplIcEE(%"class.llvm::SmallVectorImpl"* nocapture readonly dereferenceable(32)) local_unnamed_addr #7 {
  %2 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ult i8* %3, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %19, %1
  ret void

8:                                                ; preds = %1, %19
  %9 = phi i8* [ %21, %19 ], [ %3, %1 ]
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 92
  br i1 %11, label %12, label %19

12:                                               ; preds = %8
  %13 = getelementptr inbounds i8, i8* %9, i64 1
  %14 = icmp ult i8* %13, %5
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = load i8, i8* %13, align 1
  %17 = icmp eq i8 %16, 92
  br i1 %17, label %19, label %18

18:                                               ; preds = %15, %12
  store i8 47, i8* %9, align 1
  br label %19

19:                                               ; preds = %15, %18, %8
  %20 = phi i8* [ %9, %8 ], [ %9, %18 ], [ %13, %15 ]
  %21 = getelementptr inbounds i8, i8* %20, i64 1
  %22 = icmp ult i8* %21, %5
  br i1 %22, label %8, label %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i8*, i64 } @_ZN4llvm3sys4path8filenameENS_9StringRefE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::sys::path::reverse_iterator", align 8
  %4 = bitcast %"class.llvm::sys::path::reverse_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #20, !noalias !3
  %5 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 1
  %9 = bitcast %"class.llvm::StringRef"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #20, !noalias !3
  store i8* %0, i8** %5, align 8, !noalias !3
  store i64 %1, i64* %6, align 8, !noalias !3
  store i64 %1, i64* %7, align 8, !noalias !3
  %10 = call dereferenceable(40) %"class.llvm::sys::path::reverse_iterator"* @_ZN4llvm3sys4path16reverse_iteratorppEv(%"class.llvm::sys::path::reverse_iterator"* nonnull %3) #23, !noalias !3
  %11 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %10, i64 0, i32 1, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %10, i64 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #20, !noalias !3
  %15 = insertvalue { i8*, i64 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i64 } %15, i64 %14, 1
  ret { i8*, i64 } %16
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i8*, i64 } @_ZN4llvm3sys4path4stemENS_9StringRefE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::sys::path::reverse_iterator", align 8
  %4 = bitcast %"class.llvm::sys::path::reverse_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #20, !noalias !6
  %5 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 1
  %9 = bitcast %"class.llvm::StringRef"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #20, !noalias !6
  store i8* %0, i8** %5, align 8, !noalias !6
  store i64 %1, i64* %6, align 8, !noalias !6
  store i64 %1, i64* %7, align 8, !noalias !6
  %10 = call dereferenceable(40) %"class.llvm::sys::path::reverse_iterator"* @_ZN4llvm3sys4path16reverse_iteratorppEv(%"class.llvm::sys::path::reverse_iterator"* nonnull %3) #23, !noalias !6
  %11 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %10, i64 0, i32 1, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %10, i64 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #20, !noalias !6
  br label %15

15:                                               ; preds = %2, %18
  %16 = phi i64 [ %19, %18 ], [ %14, %2 ]
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %15
  %19 = add i64 %16, -1
  %20 = getelementptr inbounds i8, i8* %12, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 46
  br i1 %22, label %23, label %15

23:                                               ; preds = %18
  switch i64 %14, label %30 [
    i64 1, label %24
    i64 2, label %27
  ]

24:                                               ; preds = %23
  %25 = load i8, i8* %12, align 1
  %26 = icmp eq i8 %25, 46
  br i1 %26, label %33, label %30

27:                                               ; preds = %23
  %28 = call i32 @bcmp(i8* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #20
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %23, %24, %27
  %31 = icmp ult i64 %14, %19
  %32 = select i1 %31, i64 %14, i64 %19
  br label %33

33:                                               ; preds = %15, %24, %27, %30
  %34 = phi i64 [ %32, %30 ], [ 2, %27 ], [ 1, %24 ], [ %14, %15 ]
  %35 = insertvalue { i8*, i64 } undef, i8* %12, 0
  %36 = insertvalue { i8*, i64 } %35, i64 %34, 1
  ret { i8*, i64 } %36
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i8*, i64 } @_ZN4llvm3sys4path9extensionENS_9StringRefE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::sys::path::reverse_iterator", align 8
  %4 = bitcast %"class.llvm::sys::path::reverse_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #20, !noalias !9
  %5 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %3, i64 0, i32 1
  %9 = bitcast %"class.llvm::StringRef"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #20, !noalias !9
  store i8* %0, i8** %5, align 8, !noalias !9
  store i64 %1, i64* %6, align 8, !noalias !9
  store i64 %1, i64* %7, align 8, !noalias !9
  %10 = call dereferenceable(40) %"class.llvm::sys::path::reverse_iterator"* @_ZN4llvm3sys4path16reverse_iteratorppEv(%"class.llvm::sys::path::reverse_iterator"* nonnull %3) #23, !noalias !9
  %11 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %10, i64 0, i32 1, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %10, i64 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #20, !noalias !9
  br label %15

15:                                               ; preds = %2, %18
  %16 = phi i64 [ %19, %18 ], [ %14, %2 ]
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %15
  %19 = add i64 %16, -1
  %20 = getelementptr inbounds i8, i8* %12, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 46
  br i1 %22, label %23, label %15

23:                                               ; preds = %18
  switch i64 %14, label %30 [
    i64 1, label %24
    i64 2, label %27
  ]

24:                                               ; preds = %23
  %25 = load i8, i8* %12, align 1
  %26 = icmp eq i8 %25, 46
  br i1 %26, label %35, label %30

27:                                               ; preds = %23
  %28 = call i32 @bcmp(i8* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #20
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %23, %24, %27
  %31 = icmp ult i64 %14, %19
  %32 = select i1 %31, i64 %14, i64 %19
  %33 = getelementptr inbounds i8, i8* %12, i64 %32
  %34 = sub i64 %14, %32
  br label %35

35:                                               ; preds = %15, %24, %27, %30
  %36 = phi i64 [ %34, %30 ], [ 0, %27 ], [ 0, %24 ], [ 0, %15 ]
  %37 = phi i8* [ %33, %30 ], [ null, %27 ], [ null, %24 ], [ null, %15 ]
  %38 = insertvalue { i8*, i64 } undef, i8* %37, 0
  %39 = insertvalue { i8*, i64 } %38, i64 %36, 1
  ret { i8*, i64 } %39
}

; Function Attrs: nounwind optsize readnone ssp uwtable
define hidden { i8*, i64 } @_ZN4llvm3sys4path13get_separatorEv() local_unnamed_addr #8 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1 }
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path18has_root_directoryERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::SmallString.11", align 8
  %3 = bitcast %"class.llvm::SmallString.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %3) #20
  %4 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 128, i1 false)
  %5 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 1, i32 0
  %10 = bitcast i8** %8 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %9, %"class.llvm::SmallVector.12"** %10, align 8
  %11 = bitcast %"class.llvm::SmallString.11"* %2 to %"class.llvm::SmallVectorImpl"*
  %12 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %11) #22
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = extractvalue { i8*, i64 } %12, 1
  %15 = call { i8*, i64 } @_ZN4llvm3sys4path14root_directoryENS_9StringRefE(i8* %13, i64 %14) #22
  %16 = extractvalue { i8*, i64 } %15, 1
  %17 = icmp ne i64 %16, 0
  %18 = load i8*, i8** %6, align 8
  %19 = icmp eq i8* %18, %5
  br i1 %19, label %21, label %20

20:                                               ; preds = %1
  call void @free(i8* %18) #23
  br label %21

21:                                               ; preds = %1, %20
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %3) #20
  ret i1 %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path13has_root_pathERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::SmallString.11", align 8
  %3 = bitcast %"class.llvm::SmallString.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %3) #20
  %4 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 128, i1 false)
  %5 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 1, i32 0
  %10 = bitcast i8** %8 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %9, %"class.llvm::SmallVector.12"** %10, align 8
  %11 = bitcast %"class.llvm::SmallString.11"* %2 to %"class.llvm::SmallVectorImpl"*
  %12 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %11) #22
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = extractvalue { i8*, i64 } %12, 1
  %15 = call { i8*, i64 } @_ZN4llvm3sys4path9root_pathENS_9StringRefE(i8* %13, i64 %14) #22
  %16 = extractvalue { i8*, i64 } %15, 1
  %17 = icmp ne i64 %16, 0
  %18 = load i8*, i8** %6, align 8
  %19 = icmp eq i8* %18, %5
  br i1 %19, label %21, label %20

20:                                               ; preds = %1
  call void @free(i8* %18) #23
  br label %21

21:                                               ; preds = %1, %20
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %3) #20
  ret i1 %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path17has_relative_pathERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::SmallString.11", align 8
  %3 = bitcast %"class.llvm::SmallString.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %3) #20
  %4 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 128, i1 false)
  %5 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 1, i32 0
  %10 = bitcast i8** %8 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %9, %"class.llvm::SmallVector.12"** %10, align 8
  %11 = bitcast %"class.llvm::SmallString.11"* %2 to %"class.llvm::SmallVectorImpl"*
  %12 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %11) #22
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = extractvalue { i8*, i64 } %12, 1
  %15 = call { i8*, i64 } @_ZN4llvm3sys4path9root_pathENS_9StringRefE(i8* %13, i64 %14) #23
  %16 = extractvalue { i8*, i64 } %15, 1
  %17 = icmp ugt i64 %14, %16
  %18 = load i8*, i8** %6, align 8
  %19 = icmp eq i8* %18, %5
  br i1 %19, label %21, label %20

20:                                               ; preds = %1
  call void @free(i8* %18) #23
  br label %21

21:                                               ; preds = %1, %20
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %3) #20
  ret i1 %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path12has_filenameERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::sys::path::reverse_iterator", align 8
  %3 = alloca %"class.llvm::SmallString.11", align 8
  %4 = bitcast %"class.llvm::SmallString.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 128, i1 false)
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 1, i32 0
  %11 = bitcast i8** %9 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %10, %"class.llvm::SmallVector.12"** %11, align 8
  %12 = bitcast %"class.llvm::SmallString.11"* %3 to %"class.llvm::SmallVectorImpl"*
  %13 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %12) #22
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = extractvalue { i8*, i64 } %13, 1
  %16 = bitcast %"class.llvm::sys::path::reverse_iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #20, !noalias !12
  %17 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %2, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %2, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %2, i64 0, i32 2
  %20 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %2, i64 0, i32 1
  %21 = bitcast %"class.llvm::StringRef"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 16, i1 false) #20, !noalias !12
  store i8* %14, i8** %17, align 8, !noalias !12
  store i64 %15, i64* %18, align 8, !noalias !12
  store i64 %15, i64* %19, align 8, !noalias !12
  %22 = call dereferenceable(40) %"class.llvm::sys::path::reverse_iterator"* @_ZN4llvm3sys4path16reverse_iteratorppEv(%"class.llvm::sys::path::reverse_iterator"* nonnull %2) #23, !noalias !12
  %23 = getelementptr inbounds %"class.llvm::sys::path::reverse_iterator", %"class.llvm::sys::path::reverse_iterator"* %22, i64 0, i32 1, i32 1
  %24 = load i64, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #20, !noalias !12
  %25 = icmp ne i64 %24, 0
  %26 = load i8*, i8** %7, align 8
  %27 = icmp eq i8* %26, %6
  br i1 %27, label %29, label %28

28:                                               ; preds = %1
  call void @free(i8* %26) #23
  br label %29

29:                                               ; preds = %1, %28
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %4) #20
  ret i1 %25
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path15has_parent_pathERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::SmallString.11", align 8
  %3 = bitcast %"class.llvm::SmallString.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %3) #20
  %4 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 128, i1 false)
  %5 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 1, i32 0
  %10 = bitcast i8** %8 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %9, %"class.llvm::SmallVector.12"** %10, align 8
  %11 = bitcast %"class.llvm::SmallString.11"* %2 to %"class.llvm::SmallVectorImpl"*
  %12 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %11) #22
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = extractvalue { i8*, i64 } %12, 1
  %15 = call fastcc i64 @_ZN12_GLOBAL__N_115parent_path_endEN4llvm9StringRefE(i8* %13, i64 %14) #23
  %16 = icmp ne i64 %15, -1
  %17 = icmp ugt i64 %15, %14
  %18 = select i1 %17, i64 %14, i64 %15
  %19 = icmp ne i64 %18, 0
  %20 = and i1 %16, %19
  %21 = load i8*, i8** %6, align 8
  %22 = icmp eq i8* %21, %5
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @free(i8* %21) #23
  br label %24

24:                                               ; preds = %1, %23
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %3) #20
  ret i1 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path8has_stemERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::SmallString.11", align 8
  %3 = bitcast %"class.llvm::SmallString.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %3) #20
  %4 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 128, i1 false)
  %5 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 1, i32 0
  %10 = bitcast i8** %8 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %9, %"class.llvm::SmallVector.12"** %10, align 8
  %11 = bitcast %"class.llvm::SmallString.11"* %2 to %"class.llvm::SmallVectorImpl"*
  %12 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %11) #22
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = extractvalue { i8*, i64 } %12, 1
  %15 = call { i8*, i64 } @_ZN4llvm3sys4path4stemENS_9StringRefE(i8* %13, i64 %14) #22
  %16 = extractvalue { i8*, i64 } %15, 1
  %17 = icmp ne i64 %16, 0
  %18 = load i8*, i8** %6, align 8
  %19 = icmp eq i8* %18, %5
  br i1 %19, label %21, label %20

20:                                               ; preds = %1
  call void @free(i8* %18) #23
  br label %21

21:                                               ; preds = %1, %20
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %3) #20
  ret i1 %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path13has_extensionERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::SmallString.11", align 8
  %3 = bitcast %"class.llvm::SmallString.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %3) #20
  %4 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 128, i1 false)
  %5 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 1, i32 0
  %10 = bitcast i8** %8 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %9, %"class.llvm::SmallVector.12"** %10, align 8
  %11 = bitcast %"class.llvm::SmallString.11"* %2 to %"class.llvm::SmallVectorImpl"*
  %12 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %11) #22
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = extractvalue { i8*, i64 } %12, 1
  %15 = call { i8*, i64 } @_ZN4llvm3sys4path9extensionENS_9StringRefE(i8* %13, i64 %14) #22
  %16 = extractvalue { i8*, i64 } %15, 1
  %17 = icmp ne i64 %16, 0
  %18 = load i8*, i8** %6, align 8
  %19 = icmp eq i8* %18, %5
  br i1 %19, label %21, label %20

20:                                               ; preds = %1
  call void @free(i8* %18) #23
  br label %21

21:                                               ; preds = %1, %20
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %3) #20
  ret i1 %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path11is_absoluteERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::SmallString.11", align 8
  %3 = alloca %"class.llvm::StringRef", align 8
  %4 = alloca %"class.llvm::Twine", align 8
  %5 = bitcast %"class.llvm::SmallString.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %2, i64 1, i32 0
  %12 = bitcast i8** %10 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %11, %"class.llvm::SmallVector.12"** %12, align 8
  %13 = bitcast %"class.llvm::StringRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #20
  %14 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %3, i64 0, i32 1
  %16 = bitcast %"class.llvm::SmallString.11"* %2 to %"class.llvm::SmallVectorImpl"*
  %17 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %16) #22
  %18 = extractvalue { i8*, i64 } %17, 0
  store i8* %18, i8** %14, align 8
  %19 = extractvalue { i8*, i64 } %17, 1
  store i64 %19, i64* %15, align 8
  %20 = bitcast %"class.llvm::Twine"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #20
  %21 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 2
  store i8 5, i8* %21, align 8
  %22 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 3
  store i8 1, i8* %22, align 1
  %23 = bitcast %"class.llvm::Twine"* %4 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %3, %"class.llvm::StringRef"** %23, align 8
  %24 = call zeroext i1 @_ZN4llvm3sys4path18has_root_directoryERKNS_5TwineE(%"class.llvm::Twine"* nonnull dereferenceable(24) %4) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #20
  %25 = load i8*, i8** %8, align 8
  %26 = icmp eq i8* %25, %7
  br i1 %26, label %28, label %27

27:                                               ; preds = %1
  call void @free(i8* %25) #23
  br label %28

28:                                               ; preds = %1, %27
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #20
  ret i1 %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path11is_relativeERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = tail call zeroext i1 @_ZN4llvm3sys4path11is_absoluteERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24) %0) #22
  %3 = xor i1 %2, true
  ret i1 %3
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden { i8*, i64 } @_ZN4llvm3sys4path23remove_leading_dotslashENS_9StringRefE(i8*, i64) local_unnamed_addr #3 {
  %3 = icmp ugt i64 %1, 2
  br i1 %3, label %4, label %27

4:                                                ; preds = %2, %25
  %5 = phi i8* [ %18, %25 ], [ %0, %2 ]
  %6 = phi i64 [ %17, %25 ], [ %1, %2 ]
  %7 = load i8, i8* %5, align 1
  %8 = icmp eq i8 %7, 46
  br i1 %8, label %9, label %27

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %5, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 47
  br i1 %12, label %13, label %27

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %5, i64 2
  %15 = add i64 %6, -2
  br label %16

16:                                               ; preds = %13, %21
  %17 = phi i64 [ %23, %21 ], [ %15, %13 ]
  %18 = phi i8* [ %22, %21 ], [ %14, %13 ]
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 47
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds i8, i8* %18, i64 1
  %23 = add i64 %17, -1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %27, label %16

25:                                               ; preds = %16
  %26 = icmp ugt i64 %17, 2
  br i1 %26, label %4, label %27

27:                                               ; preds = %9, %4, %25, %21, %2
  %28 = phi i64 [ %1, %2 ], [ 0, %21 ], [ %17, %25 ], [ %6, %4 ], [ %6, %9 ]
  %29 = phi i8* [ %0, %2 ], [ %22, %21 ], [ %18, %25 ], [ %5, %4 ], [ %5, %9 ]
  %30 = insertvalue { i8*, i64 } undef, i8* %29, 0
  %31 = insertvalue { i8*, i64 } %30, i64 %28, 1
  ret { i8*, i64 } %31
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path11remove_dotsERNS_15SmallVectorImplIcEEb(%"class.llvm::SmallVectorImpl"* dereferenceable(32), i1 zeroext) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::StringRef", align 8
  %4 = alloca %"class.llvm::SmallVector.20", align 8
  %5 = alloca %"class.llvm::sys::path::const_iterator", align 8
  %6 = alloca %"class.llvm::sys::path::const_iterator", align 8
  %7 = alloca %"class.llvm::StringRef", align 8
  %8 = alloca %"class.llvm::Twine", align 8
  %9 = alloca %"class.llvm::StringRef", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = alloca %"class.llvm::Twine", align 8
  %12 = alloca %"class.llvm::Twine", align 8
  %13 = alloca %"class.llvm::Twine", align 8
  %14 = alloca %"class.llvm::SmallString.8", align 8
  %15 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint i8* %16 to i64
  %21 = sub i64 %19, %20
  %22 = bitcast %"class.llvm::SmallString.8"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %22) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 280, i1 false)
  %23 = bitcast %"class.llvm::StringRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %3, i64 0, i32 0
  store i8* %16, i8** %24, align 8, !noalias !15
  %25 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %3, i64 0, i32 1
  store i64 %21, i64* %25, align 8, !noalias !15
  %26 = bitcast %"class.llvm::SmallVector.20"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %26) #20, !noalias !15
  %27 = getelementptr inbounds %"class.llvm::SmallVector.20", %"class.llvm::SmallVector.20"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 256, i1 false) #20, !noalias !15
  %28 = getelementptr inbounds %"class.llvm::SmallVector.20", %"class.llvm::SmallVector.20"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8, !noalias !15
  %29 = getelementptr inbounds %"class.llvm::SmallVector.20", %"class.llvm::SmallVector.20"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %27, i8** %29, align 8, !noalias !15
  %30 = getelementptr inbounds %"class.llvm::SmallVector.20", %"class.llvm::SmallVector.20"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %31 = getelementptr inbounds %"class.llvm::SmallVector.20", %"class.llvm::SmallVector.20"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 256
  store i8* %31, i8** %30, align 8, !noalias !15
  %32 = call { i8*, i64 } @_ZN4llvm3sys4path9root_pathENS_9StringRefE(i8* %16, i64 %21) #23, !noalias !15
  %33 = extractvalue { i8*, i64 } %32, 1
  %34 = icmp ugt i64 %33, %21
  %35 = select i1 %34, i64 %21, i64 %33
  %36 = getelementptr inbounds i8, i8* %16, i64 %35
  %37 = sub i64 %21, %35
  %38 = bitcast %"class.llvm::sys::path::const_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #20, !noalias !15
  call void @_ZN4llvm3sys4path5beginENS_9StringRefE(%"class.llvm::sys::path::const_iterator"* nonnull sret %5, i8* %36, i64 %37) #23, !noalias !15
  %39 = bitcast %"class.llvm::sys::path::const_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #20, !noalias !15
  %40 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %6, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %6, i64 0, i32 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %38, i64 40, i1 false) #20, !noalias !15
  %42 = load i8*, i8** %40, align 8, !noalias !15
  %43 = icmp ne i8* %42, %36
  %44 = load i64, i64* %41, align 8, !noalias !15
  %45 = icmp ne i64 %44, %37
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %61

47:                                               ; preds = %2
  %48 = bitcast %"class.llvm::StringRef"* %7 to i8*
  %49 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %7, i64 0, i32 0
  %50 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %7, i64 0, i32 1
  %51 = getelementptr inbounds %"class.llvm::sys::path::const_iterator", %"class.llvm::sys::path::const_iterator"* %6, i64 0, i32 1
  %52 = bitcast %"class.llvm::StringRef"* %51 to i8*
  %53 = bitcast %"class.llvm::Twine"* %8 to i8*
  %54 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 2
  %55 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 3
  %56 = bitcast %"class.llvm::Twine"* %8 to %"class.llvm::StringRef"**
  %57 = getelementptr inbounds %"class.llvm::SmallVector.20", %"class.llvm::SmallVector.20"* %4, i64 0, i32 0, i32 0
  br label %96

58:                                               ; preds = %129
  %59 = load i8*, i8** %24, align 8, !noalias !15
  %60 = load i64, i64* %25, align 8, !noalias !15
  br label %61

61:                                               ; preds = %58, %2
  %62 = phi i64 [ %60, %58 ], [ %21, %2 ]
  %63 = phi i8* [ %59, %58 ], [ %16, %2 ]
  %64 = bitcast i8** %29 to %"class.llvm::StringRef"**
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #20, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #20, !noalias !15
  %65 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 -86, i64 256, i1 false) #20, !alias.scope !15
  %66 = call { i8*, i64 } @_ZN4llvm3sys4path9root_pathENS_9StringRefE(i8* %63, i64 %62) #23, !noalias !15
  %67 = extractvalue { i8*, i64 } %66, 0
  %68 = extractvalue { i8*, i64 } %66, 1
  %69 = getelementptr inbounds i8, i8* %67, i64 %68
  %70 = bitcast %"class.llvm::SmallString.8"* %14 to %"class.llvm::SmallVectorImpl"*
  %71 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %65, i8** %71, align 8, !alias.scope !15
  %72 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %65, i8** %72, align 8, !alias.scope !15
  %73 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %74 = getelementptr inbounds %"class.llvm::SmallString.8", %"class.llvm::SmallString.8"* %14, i64 1, i32 0
  %75 = bitcast i8** %73 to %"class.llvm::SmallVector.9"**
  store %"class.llvm::SmallVector.9"* %74, %"class.llvm::SmallVector.9"** %75, align 8, !alias.scope !15
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl"* nonnull %70, i8* %67, i8* %69) #23
  %76 = bitcast %"class.llvm::SmallVector.20"* %4 to %"class.llvm::StringRef"**
  %77 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %76, align 8, !noalias !15
  %78 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %64, align 8, !noalias !15
  %79 = icmp eq %"class.llvm::StringRef"* %77, %78
  %80 = bitcast %"class.llvm::StringRef"* %77 to i8*
  br i1 %79, label %143, label %81

81:                                               ; preds = %61
  %82 = bitcast %"class.llvm::StringRef"* %9 to i8*
  %83 = bitcast %"class.llvm::Twine"* %10 to i8*
  %84 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  %85 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  %86 = bitcast %"class.llvm::Twine"* %10 to %"class.llvm::StringRef"**
  %87 = bitcast %"class.llvm::Twine"* %11 to i8*
  %88 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  %89 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  %90 = bitcast %"class.llvm::Twine"* %12 to i8*
  %91 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 3
  %92 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 2
  %93 = bitcast %"class.llvm::Twine"* %13 to i8*
  %94 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 3
  %95 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 2
  br label %136

96:                                               ; preds = %129, %47
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #20, !noalias !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 8 %52, i64 16, i1 false) #20, !noalias !15
  %97 = load i8*, i8** %49, align 8, !noalias !15
  %98 = load i64, i64* %50, align 8, !noalias !15
  %99 = icmp eq i64 %98, 1
  br i1 %99, label %100, label %103

100:                                              ; preds = %96
  %101 = load i8, i8* %97, align 1
  %102 = icmp eq i8 %101, 46
  br i1 %102, label %129, label %128

103:                                              ; preds = %96
  %104 = icmp eq i64 %98, 2
  %105 = and i1 %104, %1
  br i1 %105, label %106, label %128

106:                                              ; preds = %103
  %107 = call i32 @bcmp(i8* %97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #20
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %128

109:                                              ; preds = %106
  %110 = load i8*, i8** %28, align 8, !noalias !15
  %111 = load i8*, i8** %29, align 8, !noalias !15
  %112 = icmp eq i8* %110, %111
  br i1 %112, label %126, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds i8, i8* %111, i64 -8
  %115 = bitcast i8* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, 2
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds i8, i8* %111, i64 -16
  %120 = bitcast i8* %119 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = call i32 @bcmp(i8* %121, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #20
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %118, %113
  %125 = getelementptr inbounds i8, i8* %111, i64 -16
  store i8* %125, i8** %29, align 8, !noalias !15
  br label %129

126:                                              ; preds = %118, %109
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #20, !noalias !15
  store i8 5, i8* %54, align 8, !noalias !15
  store i8 1, i8* %55, align 1, !noalias !15
  store %"class.llvm::StringRef"* %3, %"class.llvm::StringRef"** %56, align 8, !noalias !15
  %127 = call zeroext i1 @_ZN4llvm3sys4path11is_absoluteERKNS_5TwineE(%"class.llvm::Twine"* nonnull dereferenceable(24) %8) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #20, !noalias !15
  br i1 %127, label %129, label %128

128:                                              ; preds = %126, %106, %103, %100
  call void @_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase.3"* nonnull %57, %"class.llvm::StringRef"* nonnull dereferenceable(16) %7) #23
  br label %129

129:                                              ; preds = %128, %126, %124, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #20, !noalias !15
  %130 = call dereferenceable(40) %"class.llvm::sys::path::const_iterator"* @_ZN4llvm3sys4path14const_iteratorppEv(%"class.llvm::sys::path::const_iterator"* nonnull %6) #23
  %131 = load i8*, i8** %40, align 8, !noalias !15
  %132 = icmp ne i8* %131, %36
  %133 = load i64, i64* %41, align 8, !noalias !15
  %134 = icmp ne i64 %133, %37
  %135 = or i1 %132, %134
  br i1 %135, label %96, label %58

136:                                              ; preds = %136, %81
  %137 = phi %"class.llvm::StringRef"* [ %77, %81 ], [ %139, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #20, !noalias !15
  %138 = bitcast %"class.llvm::StringRef"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %82, i8* align 8 %138, i64 16, i1 false) #20
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #20, !noalias !15
  store i8 5, i8* %84, align 8, !noalias !15
  store i8 1, i8* %85, align 1, !noalias !15
  store %"class.llvm::StringRef"* %9, %"class.llvm::StringRef"** %86, align 8, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #20, !noalias !15
  store i8 1, i8* %88, align 1, !noalias !15
  store i8 1, i8* %89, align 8, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #20, !noalias !15
  store i8 1, i8* %91, align 1, !noalias !15
  store i8 1, i8* %92, align 8, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #20, !noalias !15
  store i8 1, i8* %94, align 1, !noalias !15
  store i8 1, i8* %95, align 8, !noalias !15
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %70, %"class.llvm::Twine"* nonnull dereferenceable(24) %10, %"class.llvm::Twine"* nonnull dereferenceable(24) %11, %"class.llvm::Twine"* nonnull dereferenceable(24) %12, %"class.llvm::Twine"* nonnull dereferenceable(24) %13) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #20, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #20, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #20, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #20, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #20, !noalias !15
  %139 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %137, i64 1
  %140 = icmp eq %"class.llvm::StringRef"* %139, %78
  br i1 %140, label %141, label %136

141:                                              ; preds = %136
  %142 = load i8*, i8** %28, align 8, !noalias !15
  br label %143

143:                                              ; preds = %141, %61
  %144 = phi i8* [ %142, %141 ], [ %80, %61 ]
  %145 = icmp eq i8* %144, %27
  br i1 %145, label %147, label %146

146:                                              ; preds = %143
  call void @free(i8* %144) #23
  br label %147

147:                                              ; preds = %143, %146
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %26) #20, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23)
  %148 = bitcast i8** %72 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.llvm::SmallString.8"* %14 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = sub i64 %149, %151
  %153 = load i64, i64* %18, align 8
  %154 = bitcast %"class.llvm::SmallVectorImpl"* %0 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = sub i64 %153, %155
  %157 = icmp eq i64 %152, %156
  %158 = inttoptr i64 %151 to i8*
  %159 = inttoptr i64 %149 to i8*
  br i1 %157, label %160, label %174

160:                                              ; preds = %147
  %161 = icmp eq i8* %158, %159
  br i1 %161, label %176, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %155 to i8*
  br label %164

164:                                              ; preds = %162, %170
  %165 = phi i8* [ %172, %170 ], [ %163, %162 ]
  %166 = phi i8* [ %171, %170 ], [ %158, %162 ]
  %167 = load i8, i8* %166, align 1
  %168 = load i8, i8* %165, align 1
  %169 = icmp eq i8 %167, %168
  br i1 %169, label %170, label %174

170:                                              ; preds = %164
  %171 = getelementptr inbounds i8, i8* %166, i64 1
  %172 = getelementptr inbounds i8, i8* %165, i64 1
  %173 = icmp eq i8* %171, %159
  br i1 %173, label %176, label %164

174:                                              ; preds = %164, %147
  call void @_ZN4llvm15SmallVectorImplIcE4swapERS1_(%"class.llvm::SmallVectorImpl"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %70) #22
  %175 = load i8*, i8** %71, align 8
  br label %176

176:                                              ; preds = %170, %160, %174
  %177 = phi i8* [ %175, %174 ], [ %158, %160 ], [ %158, %170 ]
  %178 = phi i1 [ true, %174 ], [ false, %160 ], [ false, %170 ]
  %179 = icmp eq i8* %177, %65
  br i1 %179, label %181, label %180

180:                                              ; preds = %176
  call void @free(i8* %177) #23
  br label %181

181:                                              ; preds = %176, %180
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %22) #20
  ret i1 %178
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs11getUniqueIDENS_5TwineERNS1_8UniqueIDE(%"class.llvm::Twine"* byval(%"class.llvm::Twine") align 8, %"class.llvm::sys::fs::UniqueID"* nocapture dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::sys::fs::file_status", align 16
  %4 = bitcast %"class.llvm::sys::fs::file_status"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %3, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 52, i1 false) #20
  store i32 65535, i32* %5, align 4
  %6 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE(%"class.llvm::Twine"* nonnull dereferenceable(24) %0, %"class.llvm::sys::fs::file_status"* nonnull dereferenceable(56) %3) #22
  %7 = extractvalue { i32, %"class.std::__1::error_category"* } %6, 0
  %8 = extractvalue { i32, %"class.std::__1::error_category"* } %6, 1
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = bitcast %"class.llvm::sys::fs::file_status"* %3 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 16
  %13 = bitcast %"class.llvm::sys::fs::UniqueID"* %1 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 8
  %14 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %"class.std::__1::error_category"* [ %14, %10 ], [ %8, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #20
  %17 = insertvalue { i32, %"class.std::__1::error_category"* } %6, %"class.std::__1::error_category"* %16, 1
  ret { i32, %"class.std::__1::error_category"* } %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::sys::fs::file_status"* nocapture dereferenceable(56)) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::SmallString.11", align 8
  %4 = alloca %struct.stat, align 8
  %5 = bitcast %"class.llvm::SmallString.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 1, i32 0
  %12 = bitcast i8** %10 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %11, %"class.llvm::SmallVector.12"** %12, align 8
  %13 = bitcast %"class.llvm::SmallString.11"* %3 to %"class.llvm::SmallVectorImpl"*
  %14 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %13) #23
  %15 = extractvalue { i8*, i64 } %14, 0
  %16 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %16) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 144, i1 false)
  %17 = call i32 @stat64(i8* %15, %struct.stat* nonnull %4) #23
  %18 = call fastcc { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fsL10fillStatusEiRK4statRNS1_11file_statusE(i32 %17, %struct.stat* nonnull dereferenceable(144) %4, %"class.llvm::sys::fs::file_status"* dereferenceable(56) %1) #22
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %16) #20
  %19 = load i8*, i8** %8, align 8
  %20 = icmp eq i8* %19, %7
  br i1 %20, label %22, label %21

21:                                               ; preds = %2
  call void @free(i8* %19) #23
  br label %22

22:                                               ; preds = %2, %21
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #20
  ret { i32, %"class.std::__1::error_category"* } %18
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden { i64, i64 } @_ZNK4llvm3sys2fs11file_status11getUniqueIDEv(%"class.llvm::sys::fs::file_status"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs16createUniqueFileERKNS_5TwineERiRNS_15SmallVectorImplIcEEj(%"class.llvm::Twine"* dereferenceable(24), i32* nocapture dereferenceable(4), %"class.llvm::SmallVectorImpl"* dereferenceable(32), i32) local_unnamed_addr #0 {
  %5 = tail call fastcc { i32, %"class.std::__1::error_category"* } @_ZL18createUniqueEntityRKN4llvm5TwineERiRNS_15SmallVectorImplIcEEbj8FSEntity(%"class.llvm::Twine"* dereferenceable(24) %0, i32* dereferenceable(4) %1, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %2, i1 zeroext false, i32 %3, i32 1) #22
  ret { i32, %"class.std::__1::error_category"* } %5
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc { i32, %"class.std::__1::error_category"* } @_ZL18createUniqueEntityRKN4llvm5TwineERiRNS_15SmallVectorImplIcEEbj8FSEntity(%"class.llvm::Twine"* dereferenceable(24), i32* nocapture dereferenceable(4), %"class.llvm::SmallVectorImpl"* dereferenceable(32), i1 zeroext, i32, i32) unnamed_addr #0 {
  %7 = alloca %"class.llvm::SmallString.11", align 8
  %8 = alloca %"class.llvm::Twine", align 8
  %9 = alloca %"class.llvm::SmallString.11", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = alloca %"class.llvm::Twine", align 8
  %12 = alloca %"class.llvm::Twine", align 8
  %13 = alloca %"class.llvm::Twine", align 8
  %14 = alloca i8, align 1
  %15 = alloca %"class.llvm::Twine", align 8
  %16 = alloca %"class.llvm::Twine", align 8
  %17 = alloca %"class.llvm::Twine", align 8
  %18 = bitcast %"class.llvm::SmallString.11"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %18) #20
  %19 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 128, i1 false)
  %20 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %21 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 1, i32 0
  %25 = bitcast i8** %23 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %24, %"class.llvm::SmallVector.12"** %25, align 8
  %26 = bitcast %"class.llvm::SmallString.11"* %7 to %"class.llvm::SmallVectorImpl"*
  call void @_ZNK4llvm5Twine8toVectorERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %26) #23
  br i1 %3, label %27, label %60

27:                                               ; preds = %6
  %28 = bitcast %"class.llvm::Twine"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #20
  %29 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 2
  store i8 6, i8* %29, align 8
  %30 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 3
  store i8 1, i8* %30, align 1
  %31 = bitcast %"class.llvm::Twine"* %8 to %"class.llvm::SmallString.11"**
  store %"class.llvm::SmallString.11"* %7, %"class.llvm::SmallString.11"** %31, align 8
  %32 = call zeroext i1 @_ZN4llvm3sys4path11is_absoluteERKNS_5TwineE(%"class.llvm::Twine"* nonnull dereferenceable(24) %8) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #20
  br i1 %32, label %60, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.llvm::SmallString.11"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %34) #20
  %35 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 128, i1 false)
  %36 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %37 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %9, i64 1, i32 0
  %41 = bitcast i8** %39 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %40, %"class.llvm::SmallVector.12"** %41, align 8
  %42 = bitcast %"class.llvm::SmallString.11"* %9 to %"class.llvm::SmallVectorImpl"*
  call void @_ZN4llvm3sys4path21system_temp_directoryEbRNS_15SmallVectorImplIcEE(i1 zeroext true, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %42) #22
  %43 = bitcast %"class.llvm::Twine"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #20
  %44 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 6, i8* %44, align 8
  %45 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 1, i8* %45, align 1
  %46 = bitcast %"class.llvm::Twine"* %10 to %"class.llvm::SmallString.11"**
  store %"class.llvm::SmallString.11"* %7, %"class.llvm::SmallString.11"** %46, align 8
  %47 = bitcast %"class.llvm::Twine"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #20
  %48 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  store i8 1, i8* %48, align 1
  %49 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  store i8 1, i8* %49, align 8
  %50 = bitcast %"class.llvm::Twine"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #20
  %51 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 3
  store i8 1, i8* %51, align 1
  %52 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 2
  store i8 1, i8* %52, align 8
  %53 = bitcast %"class.llvm::Twine"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #20
  %54 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 3
  store i8 1, i8* %54, align 1
  %55 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 2
  store i8 1, i8* %55, align 8
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %42, %"class.llvm::Twine"* nonnull dereferenceable(24) %10, %"class.llvm::Twine"* nonnull dereferenceable(24) %11, %"class.llvm::Twine"* nonnull dereferenceable(24) %12, %"class.llvm::Twine"* nonnull dereferenceable(24) %13) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #20
  call void @_ZN4llvm15SmallVectorImplIcE4swapERS1_(%"class.llvm::SmallVectorImpl"* nonnull %26, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %42) #22
  %56 = load i8*, i8** %37, align 8
  %57 = icmp eq i8* %56, %36
  br i1 %57, label %59, label %58

58:                                               ; preds = %33
  call void @free(i8* %56) #23
  br label %59

59:                                               ; preds = %33, %58
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %34) #20
  br label %60

60:                                               ; preds = %27, %59, %6
  %61 = call dereferenceable(32) %"class.llvm::SmallVectorImpl"* @_ZN4llvm15SmallVectorImplIcEaSERKS1_(%"class.llvm::SmallVectorImpl"* %2, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %26) #22
  %62 = bitcast %"class.llvm::SmallVectorImpl"* %2 to %"class.llvm::SmallVectorTemplateBase"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #20
  store i8 0, i8* %14, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase"* %62, i8* nonnull dereferenceable(1) %14) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #20
  %63 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 -1
  store i8* %65, i8** %63, align 8
  %66 = bitcast i8** %22 to i64*
  %67 = bitcast %"class.llvm::SmallString.11"* %7 to i64*
  %68 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.llvm::Twine"* %17 to i8*
  %70 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %17, i64 0, i32 3
  %71 = bitcast %"class.llvm::Twine"* %17 to i8**
  %72 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %17, i64 0, i32 2
  %73 = bitcast %"class.llvm::Twine"* %16 to i8*
  %74 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %16, i64 0, i32 3
  %75 = bitcast %"class.llvm::Twine"* %16 to i8**
  %76 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %16, i64 0, i32 2
  %77 = bitcast %"class.llvm::Twine"* %15 to i8*
  %78 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %15, i64 0, i32 3
  %79 = bitcast %"class.llvm::Twine"* %15 to i8**
  %80 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %15, i64 0, i32 2
  br label %81

81:                                               ; preds = %126, %60
  %82 = load i64, i64* %66, align 8
  %83 = load i64, i64* %67, align 8
  %84 = sub i64 %82, %83
  %85 = trunc i64 %84 to i32
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %81
  %88 = inttoptr i64 %83 to i8*
  %89 = and i64 %84, 4294967295
  br label %91

90:                                               ; preds = %105, %81
  switch i32 %5, label %165 [
    i32 1, label %110
    i32 2, label %129
    i32 0, label %147
  ]

91:                                               ; preds = %108, %87
  %92 = phi i8* [ %88, %87 ], [ %109, %108 ]
  %93 = phi i64 [ 0, %87 ], [ %106, %108 ]
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 37
  br i1 %96, label %97, label %105

97:                                               ; preds = %91
  %98 = call i32 @_ZN4llvm3sys7Process15GetRandomNumberEv() #23
  %99 = and i32 %98, 15
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.25, i64 0, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = load i8*, i8** %68, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 %93
  store i8 %102, i8* %104, align 1
  br label %105

105:                                              ; preds = %91, %97
  %106 = add nuw nsw i64 %93, 1
  %107 = icmp eq i64 %106, %89
  br i1 %107, label %90, label %108

108:                                              ; preds = %105
  %109 = load i8*, i8** %21, align 8
  br label %91

110:                                              ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #20
  %111 = load i8*, i8** %68, align 8
  store i8 1, i8* %78, align 1
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %110
  store i8* %111, i8** %79, align 8
  br label %115

115:                                              ; preds = %110, %114
  %116 = phi i8 [ 3, %114 ], [ 1, %110 ]
  store i8 %116, i8* %80, align 8
  %117 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs16openFileForWriteERKNS_5TwineERiNS1_9OpenFlagsEj(%"class.llvm::Twine"* nonnull dereferenceable(24) %15, i32* dereferenceable(4) %1, i32 9, i32 %4) #22
  %118 = extractvalue { i32, %"class.std::__1::error_category"* } %117, 0
  %119 = extractvalue { i32, %"class.std::__1::error_category"* } %117, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #20
  %120 = icmp eq i32 %118, 0
  br i1 %120, label %127, label %121

121:                                              ; preds = %115
  %122 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  %123 = icmp eq %"class.std::__1::error_category"* %119, %122
  %124 = icmp eq i32 %118, 17
  %125 = and i1 %124, %123
  br i1 %125, label %126, label %166

126:                                              ; preds = %121, %158, %145
  br label %81

127:                                              ; preds = %115
  %128 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %166

129:                                              ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #20
  %130 = load i8*, i8** %68, align 8
  store i8 1, i8* %74, align 1
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %134, label %133

133:                                              ; preds = %129
  store i8* %130, i8** %75, align 8
  br label %134

134:                                              ; preds = %129, %133
  %135 = phi i8 [ 3, %133 ], [ 1, %129 ]
  store i8 %135, i8* %76, align 8
  %136 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6accessERKNS_5TwineENS1_10AccessModeE(%"class.llvm::Twine"* nonnull dereferenceable(24) %16, i32 0) #22
  %137 = extractvalue { i32, %"class.std::__1::error_category"* } %136, 0
  %138 = extractvalue { i32, %"class.std::__1::error_category"* } %136, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #20
  %139 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  %140 = icmp eq %"class.std::__1::error_category"* %138, %139
  %141 = icmp eq i32 %137, 2
  %142 = and i1 %141, %140
  br i1 %142, label %143, label %145

143:                                              ; preds = %134
  %144 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %166

145:                                              ; preds = %134
  %146 = icmp eq i32 %137, 0
  br i1 %146, label %126, label %166

147:                                              ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #20
  %148 = load i8*, i8** %68, align 8
  store i8 1, i8* %70, align 1
  %149 = load i8, i8* %148, align 1
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %147
  store i8* %148, i8** %71, align 8
  br label %152

152:                                              ; preds = %147, %151
  %153 = phi i8 [ 3, %151 ], [ 1, %147 ]
  store i8 %153, i8* %72, align 8
  %154 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs16create_directoryERKNS_5TwineEbNS1_5permsE(%"class.llvm::Twine"* nonnull dereferenceable(24) %17, i1 zeroext false, i32 504) #22
  %155 = extractvalue { i32, %"class.std::__1::error_category"* } %154, 0
  %156 = extractvalue { i32, %"class.std::__1::error_category"* } %154, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #20
  %157 = icmp eq i32 %155, 0
  br i1 %157, label %163, label %158

158:                                              ; preds = %152
  %159 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  %160 = icmp eq %"class.std::__1::error_category"* %156, %159
  %161 = icmp eq i32 %155, 17
  %162 = and i1 %161, %160
  br i1 %162, label %126, label %166

163:                                              ; preds = %152
  %164 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %166

165:                                              ; preds = %90
  unreachable

166:                                              ; preds = %145, %158, %121, %143, %163, %127
  %167 = phi i32 [ 0, %163 ], [ 0, %143 ], [ 0, %127 ], [ %155, %158 ], [ %118, %121 ], [ %137, %145 ]
  %168 = phi %"class.std::__1::error_category"* [ %164, %163 ], [ %144, %143 ], [ %128, %127 ], [ %156, %158 ], [ %119, %121 ], [ %138, %145 ]
  %169 = load i8*, i8** %21, align 8
  %170 = icmp eq i8* %169, %20
  br i1 %170, label %172, label %171

171:                                              ; preds = %166
  call void @free(i8* %169) #23
  br label %172

172:                                              ; preds = %166, %171
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %18) #20
  %173 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %167, 0
  %174 = insertvalue { i32, %"class.std::__1::error_category"* } %173, %"class.std::__1::error_category"* %168, 1
  ret { i32, %"class.std::__1::error_category"* } %174
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs16createUniqueFileERKNS_5TwineERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20
  store i32 -1431655766, i32* %3, align 4
  %5 = call fastcc { i32, %"class.std::__1::error_category"* } @_ZL18createUniqueEntityRKN4llvm5TwineERiRNS_15SmallVectorImplIcEEbj8FSEntity(%"class.llvm::Twine"* dereferenceable(24) %0, i32* nonnull dereferenceable(4) %3, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %1, i1 zeroext false, i32 0, i32 2) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20
  ret { i32, %"class.std::__1::error_category"* } %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs19createTemporaryFileERKNS_5TwineENS_9StringRefERiRNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* dereferenceable(24), i8*, i64, i32* nocapture dereferenceable(4), %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %6 = tail call fastcc { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fsL19createTemporaryFileERKNS_5TwineENS_9StringRefERiRNS_15SmallVectorImplIcEE8FSEntity(%"class.llvm::Twine"* dereferenceable(24) %0, i8* %1, i64 %2, i32* dereferenceable(4) %3, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %4, i32 1) #22
  ret { i32, %"class.std::__1::error_category"* } %6
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fsL19createTemporaryFileERKNS_5TwineENS_9StringRefERiRNS_15SmallVectorImplIcEE8FSEntity(%"class.llvm::Twine"* dereferenceable(24), i8*, i64, i32* nocapture dereferenceable(4), %"class.llvm::SmallVectorImpl"* dereferenceable(32), i32) unnamed_addr #0 {
  %7 = alloca %"class.llvm::SmallString.11", align 8
  %8 = alloca %"class.llvm::Twine", align 8
  %9 = alloca %"class.llvm::StringRef", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = alloca %"class.llvm::Twine", align 8
  %12 = alloca %"class.llvm::Twine", align 8
  %13 = alloca %"class.llvm::Twine", align 8
  %14 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 0
  store i8* %1, i8** %14, align 8
  %15 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 1
  store i64 %2, i64* %15, align 8
  %16 = icmp eq i64 %2, 0
  %17 = select i1 %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)
  %18 = bitcast %"class.llvm::Twine"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #20
  %19 = bitcast %"class.llvm::Twine"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #20
  %20 = bitcast %"class.llvm::Twine"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #20
  %21 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 3
  store i8 1, i8* %21, align 1
  %22 = load i8, i8* %17, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %6
  %25 = bitcast %"class.llvm::Twine"* %12 to i8**
  store i8* %17, i8** %25, align 8
  %26 = ptrtoint i8* %17 to i64
  br label %27

27:                                               ; preds = %6, %24
  %28 = phi i64 [ %26, %24 ], [ undef, %6 ]
  %29 = phi i8 [ 3, %24 ], [ 1, %6 ]
  %30 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 2
  store i8 %29, i8* %30, align 8
  %31 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 2
  %32 = load i8, i8* %31, align 8, !noalias !18
  switch i8 %32, label %37 [
    i8 0, label %33
    i8 1, label %36
  ]

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  store i8 0, i8* %34, align 8, !alias.scope !18
  %35 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  store i8 1, i8* %35, align 1, !alias.scope !18
  br label %56

36:                                               ; preds = %27
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %20, i64 24, i1 false) #20
  br label %56

37:                                               ; preds = %27
  %38 = icmp eq i8 %29, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = bitcast %"class.llvm::Twine"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %40, i64 24, i1 false) #20
  br label %56

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 3
  %43 = load i8, i8* %42, align 1, !noalias !18
  %44 = icmp eq i8 %43, 1
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.llvm::Twine"*, %"class.llvm::Twine"** %46, align 8, !noalias !18
  br label %48

48:                                               ; preds = %45, %41
  %49 = phi i8 [ %32, %45 ], [ 2, %41 ]
  %50 = phi %"class.llvm::Twine"* [ %47, %45 ], [ %0, %41 ]
  %51 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 0, i32 0
  store %"class.llvm::Twine"* %50, %"class.llvm::Twine"** %51, align 8, !alias.scope !18
  %52 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 1, i32 0
  %53 = bitcast %"class.llvm::Twine"** %52 to i64*
  store i64 %28, i64* %53, align 8, !alias.scope !18
  %54 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  store i8 %49, i8* %54, align 8, !alias.scope !18
  %55 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  store i8 %29, i8* %55, align 1, !alias.scope !18
  br label %56

56:                                               ; preds = %33, %36, %39, %48
  %57 = bitcast %"class.llvm::Twine"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #20
  %58 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 2
  store i8 5, i8* %58, align 8
  %59 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 3
  store i8 1, i8* %59, align 1
  %60 = bitcast %"class.llvm::Twine"* %13 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %9, %"class.llvm::StringRef"** %60, align 8
  %61 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  %62 = load i8, i8* %61, align 8, !noalias !23
  switch i8 %62, label %67 [
    i8 0, label %63
    i8 1, label %66
  ]

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 0, i8* %64, align 8, !alias.scope !23
  %65 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 1, i8* %65, align 1, !alias.scope !23
  br label %81

66:                                               ; preds = %56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %57, i64 24, i1 false) #20
  br label %81

67:                                               ; preds = %56
  %68 = ptrtoint %"class.llvm::StringRef"* %9 to i64
  %69 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  %70 = load i8, i8* %69, align 1, !noalias !23
  %71 = icmp eq i8 %70, 1
  %72 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 0, i32 0
  %73 = load %"class.llvm::Twine"*, %"class.llvm::Twine"** %72, align 8
  %74 = select i1 %71, i8 %62, i8 2
  %75 = select i1 %71, %"class.llvm::Twine"* %73, %"class.llvm::Twine"* %11
  %76 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 0, i32 0
  store %"class.llvm::Twine"* %75, %"class.llvm::Twine"** %76, align 8, !alias.scope !23
  %77 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 1, i32 0
  %78 = bitcast %"class.llvm::Twine"** %77 to i64*
  store i64 %68, i64* %78, align 8, !alias.scope !23
  %79 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 %74, i8* %79, align 8, !alias.scope !23
  %80 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 5, i8* %80, align 1, !alias.scope !23
  br label %81

81:                                               ; preds = %63, %66, %67
  %82 = bitcast %"class.llvm::SmallString.11"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %82) #20
  %83 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 128, i1 false) #20
  %84 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %83, i8** %84, align 8
  %85 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %83, i8** %85, align 8
  %86 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %87 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %7, i64 1, i32 0
  %88 = bitcast i8** %86 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %87, %"class.llvm::SmallVector.12"** %88, align 8
  %89 = bitcast %"class.llvm::SmallString.11"* %7 to %"class.llvm::SmallVectorImpl"*
  %90 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* nonnull %10, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %89) #23
  %91 = extractvalue { i8*, i64 } %90, 0
  %92 = bitcast %"class.llvm::Twine"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #20
  %93 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 3
  store i8 1, i8* %93, align 1
  %94 = load i8, i8* %91, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %81
  %97 = bitcast %"class.llvm::Twine"* %8 to i8**
  store i8* %91, i8** %97, align 8
  br label %98

98:                                               ; preds = %96, %81
  %99 = phi i8 [ 3, %96 ], [ 1, %81 ]
  %100 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 2
  store i8 %99, i8* %100, align 8
  %101 = call fastcc { i32, %"class.std::__1::error_category"* } @_ZL18createUniqueEntityRKN4llvm5TwineERiRNS_15SmallVectorImplIcEEbj8FSEntity(%"class.llvm::Twine"* nonnull dereferenceable(24) %8, i32* dereferenceable(4) %3, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %4, i1 zeroext true, i32 384, i32 %5) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #20
  %102 = load i8*, i8** %84, align 8
  %103 = icmp eq i8* %102, %83
  br i1 %103, label %105, label %104

104:                                              ; preds = %98
  call void @free(i8* %102) #23
  br label %105

105:                                              ; preds = %98, %104
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %82) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #20
  ret { i32, %"class.std::__1::error_category"* } %101
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs19createTemporaryFileERKNS_5TwineENS_9StringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* dereferenceable(24), i8*, i64, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #20
  store i32 -1431655766, i32* %5, align 4
  %7 = call fastcc { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fsL19createTemporaryFileERKNS_5TwineENS_9StringRefERiRNS_15SmallVectorImplIcEE8FSEntity(%"class.llvm::Twine"* dereferenceable(24) %0, i8* %1, i64 %2, i32* nonnull dereferenceable(4) %5, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %3, i32 2) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #20
  ret { i32, %"class.std::__1::error_category"* } %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs21createUniqueDirectoryERKNS_5TwineERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.llvm::Twine", align 8
  %5 = alloca %"class.llvm::Twine", align 8
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #20
  store i32 -1431655766, i32* %3, align 4
  %7 = bitcast %"class.llvm::Twine"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #20
  %8 = bitcast %"class.llvm::Twine"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #20
  %9 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 3
  store i8 1, i8* %9, align 1
  %10 = bitcast %"class.llvm::Twine"* %5 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8** %10, align 8
  %11 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 2
  store i8 3, i8* %11, align 8
  %12 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 2
  %13 = load i8, i8* %12, align 8, !noalias !28
  switch i8 %13, label %18 [
    i8 0, label %14
    i8 1, label %17
  ]

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 2
  store i8 0, i8* %15, align 8, !alias.scope !28
  %16 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 3
  store i8 1, i8* %16, align 1, !alias.scope !28
  br label %33

17:                                               ; preds = %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %8, i64 24, i1 false) #20
  br label %33

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 3
  %20 = load i8, i8* %19, align 1, !noalias !28
  %21 = icmp eq i8 %20, 1
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 0, i32 0
  %24 = load %"class.llvm::Twine"*, %"class.llvm::Twine"** %23, align 8, !noalias !28
  br label %25

25:                                               ; preds = %22, %18
  %26 = phi i8 [ %13, %22 ], [ 2, %18 ]
  %27 = phi %"class.llvm::Twine"* [ %24, %22 ], [ %0, %18 ]
  %28 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 0, i32 0
  store %"class.llvm::Twine"* %27, %"class.llvm::Twine"** %28, align 8, !alias.scope !28
  %29 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 1, i32 0
  %30 = bitcast %"class.llvm::Twine"** %29 to i64*
  store i64 ptrtoint ([8 x i8]* @.str.3 to i64), i64* %30, align 8, !alias.scope !28
  %31 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 2
  store i8 %26, i8* %31, align 8, !alias.scope !28
  %32 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 3
  store i8 3, i8* %32, align 1, !alias.scope !28
  br label %33

33:                                               ; preds = %14, %17, %25
  %34 = call fastcc { i32, %"class.std::__1::error_category"* } @_ZL18createUniqueEntityRKN4llvm5TwineERiRNS_15SmallVectorImplIcEEbj8FSEntity(%"class.llvm::Twine"* nonnull dereferenceable(24) %4, i32* nonnull dereferenceable(4) %3, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %1, i1 zeroext true, i32 0, i32 0) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #20
  ret { i32, %"class.std::__1::error_category"* } %34
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs13make_absoluteERKNS_5TwineERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = tail call fastcc { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fsL13make_absoluteERKNS_5TwineERNS_15SmallVectorImplIcEEb(%"class.llvm::Twine"* dereferenceable(24) %0, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %1, i1 zeroext true) #22
  ret { i32, %"class.std::__1::error_category"* } %3
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fsL13make_absoluteERKNS_5TwineERNS_15SmallVectorImplIcEEb(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::SmallVectorImpl"* dereferenceable(32), i1 zeroext) unnamed_addr #0 {
  %4 = alloca %"class.llvm::StringRef", align 8
  %5 = alloca %"class.llvm::Twine", align 8
  %6 = alloca %"class.llvm::SmallString.11", align 8
  %7 = alloca %"class.llvm::StringRef", align 8
  %8 = alloca %"class.llvm::StringRef", align 8
  %9 = alloca %"class.llvm::StringRef", align 8
  %10 = alloca %"class.llvm::StringRef", align 8
  %11 = alloca %"class.llvm::SmallString.11", align 8
  %12 = alloca %"class.llvm::Twine", align 8
  %13 = alloca %"class.llvm::Twine", align 8
  %14 = alloca %"class.llvm::Twine", align 8
  %15 = alloca %"class.llvm::Twine", align 8
  %16 = bitcast %"class.llvm::StringRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #20
  %17 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %4, i64 0, i32 0
  %18 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %4, i64 0, i32 1
  %19 = bitcast %"class.llvm::SmallVectorImpl"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %20
  %25 = bitcast %"class.llvm::StringRef"* %4 to i64*
  store i64 %20, i64* %25, align 8
  store i64 %24, i64* %18, align 8
  %26 = bitcast %"class.llvm::Twine"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #20
  %27 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 2
  store i8 5, i8* %27, align 8
  %28 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 3
  store i8 1, i8* %28, align 1
  %29 = bitcast %"class.llvm::Twine"* %5 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %4, %"class.llvm::StringRef"** %29, align 8
  %30 = call zeroext i1 @_ZN4llvm3sys4path18has_root_directoryERKNS_5TwineE(%"class.llvm::Twine"* nonnull dereferenceable(24) %5) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #20
  br i1 %30, label %31, label %33

31:                                               ; preds = %3
  %32 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %130

33:                                               ; preds = %3
  %34 = bitcast %"class.llvm::SmallString.11"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %34) #20
  %35 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 128, i1 false)
  %36 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %37 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %6, i64 1, i32 0
  %41 = bitcast i8** %39 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %40, %"class.llvm::SmallVector.12"** %41, align 8
  %42 = bitcast %"class.llvm::SmallString.11"* %6 to %"class.llvm::SmallVectorImpl"*
  br i1 %2, label %43, label %44

43:                                               ; preds = %33
  call void @_ZNK4llvm5Twine8toVectorERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %42) #23
  br label %49

44:                                               ; preds = %33
  %45 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs12current_pathERNS_15SmallVectorImplIcEE(%"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %42) #22
  %46 = extractvalue { i32, %"class.std::__1::error_category"* } %45, 0
  %47 = extractvalue { i32, %"class.std::__1::error_category"* } %45, 1
  %48 = icmp eq i32 %46, 0
  br i1 %48, label %49, label %123

49:                                               ; preds = %44, %43
  %50 = bitcast %"class.llvm::StringRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #20
  %51 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %7, i64 0, i32 0
  %52 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %7, i64 0, i32 1
  %53 = load i8*, i8** %17, align 8
  %54 = load i64, i64* %18, align 8
  %55 = call { i8*, i64 } @_ZN4llvm3sys4path9root_nameENS_9StringRefE(i8* %53, i64 %54) #22
  %56 = extractvalue { i8*, i64 } %55, 0
  store i8* %56, i8** %51, align 8
  %57 = extractvalue { i8*, i64 } %55, 1
  store i64 %57, i64* %52, align 8
  %58 = bitcast %"class.llvm::StringRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #20
  %59 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %8, i64 0, i32 0
  %60 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %8, i64 0, i32 1
  %61 = load i8*, i8** %37, align 8
  %62 = bitcast i8** %38 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = ptrtoint i8* %61 to i64
  %65 = sub i64 %63, %64
  %66 = call { i8*, i64 } @_ZN4llvm3sys4path14root_directoryENS_9StringRefE(i8* %61, i64 %65) #22
  %67 = extractvalue { i8*, i64 } %66, 0
  store i8* %67, i8** %59, align 8
  %68 = extractvalue { i8*, i64 } %66, 1
  store i64 %68, i64* %60, align 8
  %69 = bitcast %"class.llvm::StringRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #20
  %70 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 0
  %71 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 1
  %72 = load i8*, i8** %37, align 8
  %73 = load i64, i64* %62, align 8
  %74 = ptrtoint i8* %72 to i64
  %75 = sub i64 %73, %74
  %76 = call { i8*, i64 } @_ZN4llvm3sys4path9root_pathENS_9StringRefE(i8* %72, i64 %75) #23
  %77 = extractvalue { i8*, i64 } %76, 1
  %78 = icmp ugt i64 %77, %75
  %79 = select i1 %78, i64 %75, i64 %77
  %80 = getelementptr inbounds i8, i8* %72, i64 %79
  %81 = sub i64 %75, %79
  store i8* %80, i8** %70, align 8
  store i64 %81, i64* %71, align 8
  %82 = bitcast %"class.llvm::StringRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #20
  %83 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %10, i64 0, i32 0
  %84 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %10, i64 0, i32 1
  %85 = load i8*, i8** %17, align 8
  %86 = load i64, i64* %18, align 8
  %87 = call { i8*, i64 } @_ZN4llvm3sys4path9root_pathENS_9StringRefE(i8* %85, i64 %86) #23
  %88 = extractvalue { i8*, i64 } %87, 1
  %89 = icmp ugt i64 %88, %86
  %90 = select i1 %89, i64 %86, i64 %88
  %91 = getelementptr inbounds i8, i8* %85, i64 %90
  %92 = sub i64 %86, %90
  store i8* %91, i8** %83, align 8
  store i64 %92, i64* %84, align 8
  %93 = bitcast %"class.llvm::SmallString.11"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %93) #20
  %94 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 128, i1 false)
  %95 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %96 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %95, i8** %96, align 8
  %97 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %95, i8** %97, align 8
  %98 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %99 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %11, i64 1, i32 0
  %100 = bitcast i8** %98 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %99, %"class.llvm::SmallVector.12"** %100, align 8
  %101 = bitcast %"class.llvm::SmallString.11"* %11 to %"class.llvm::SmallVectorImpl"*
  %102 = bitcast %"class.llvm::Twine"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #20
  %103 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 2
  store i8 5, i8* %103, align 8
  %104 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 3
  store i8 1, i8* %104, align 1
  %105 = bitcast %"class.llvm::Twine"* %12 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %7, %"class.llvm::StringRef"** %105, align 8
  %106 = bitcast %"class.llvm::Twine"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #20
  %107 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 2
  store i8 5, i8* %107, align 8
  %108 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 3
  store i8 1, i8* %108, align 1
  %109 = bitcast %"class.llvm::Twine"* %13 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %8, %"class.llvm::StringRef"** %109, align 8
  %110 = bitcast %"class.llvm::Twine"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #20
  %111 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %14, i64 0, i32 2
  store i8 5, i8* %111, align 8
  %112 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %14, i64 0, i32 3
  store i8 1, i8* %112, align 1
  %113 = bitcast %"class.llvm::Twine"* %14 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %9, %"class.llvm::StringRef"** %113, align 8
  %114 = bitcast %"class.llvm::Twine"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #20
  %115 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %15, i64 0, i32 2
  store i8 5, i8* %115, align 8
  %116 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %15, i64 0, i32 3
  store i8 1, i8* %116, align 1
  %117 = bitcast %"class.llvm::Twine"* %15 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %10, %"class.llvm::StringRef"** %117, align 8
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %101, %"class.llvm::Twine"* nonnull dereferenceable(24) %12, %"class.llvm::Twine"* nonnull dereferenceable(24) %13, %"class.llvm::Twine"* nonnull dereferenceable(24) %14, %"class.llvm::Twine"* nonnull dereferenceable(24) %15) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #20
  call void @_ZN4llvm15SmallVectorImplIcE4swapERS1_(%"class.llvm::SmallVectorImpl"* %1, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %101) #22
  %118 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  %119 = load i8*, i8** %96, align 8
  %120 = icmp eq i8* %119, %95
  br i1 %120, label %122, label %121

121:                                              ; preds = %49
  call void @free(i8* %119) #23
  br label %122

122:                                              ; preds = %49, %121
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %93) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #20
  br label %123

123:                                              ; preds = %44, %122
  %124 = phi %"class.std::__1::error_category"* [ %118, %122 ], [ %47, %44 ]
  %125 = phi i32 [ 0, %122 ], [ %46, %44 ]
  %126 = load i8*, i8** %37, align 8
  %127 = icmp eq i8* %126, %36
  br i1 %127, label %129, label %128

128:                                              ; preds = %123
  call void @free(i8* %126) #23
  br label %129

129:                                              ; preds = %123, %128
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %34) #20
  br label %130

130:                                              ; preds = %129, %31
  %131 = phi %"class.std::__1::error_category"* [ %32, %31 ], [ %124, %129 ]
  %132 = phi i32 [ 0, %31 ], [ %125, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #20
  %133 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %132, 0
  %134 = insertvalue { i32, %"class.std::__1::error_category"* } %133, %"class.std::__1::error_category"* %131, 1
  ret { i32, %"class.std::__1::error_category"* } %134
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs13make_absoluteERNS_15SmallVectorImplIcEE(%"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::Twine", align 8
  %3 = bitcast %"class.llvm::Twine"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #20
  %4 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %2, i64 0, i32 2
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %2, i64 0, i32 3
  store i8 1, i8* %5, align 1
  %6 = call fastcc { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fsL13make_absoluteERKNS_5TwineERNS_15SmallVectorImplIcEEb(%"class.llvm::Twine"* nonnull dereferenceable(24) %2, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %0, i1 zeroext false) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #20
  ret { i32, %"class.std::__1::error_category"* } %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs18create_directoriesERKNS_5TwineEbNS1_5permsE(%"class.llvm::Twine"* dereferenceable(24), i1 zeroext, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.llvm::SmallString.11", align 8
  %5 = alloca %"class.llvm::StringRef", align 8
  %6 = alloca %"class.llvm::Twine", align 8
  %7 = alloca %"class.llvm::StringRef", align 8
  %8 = alloca %"class.llvm::Twine", align 8
  %9 = alloca %"class.llvm::Twine", align 8
  %10 = bitcast %"class.llvm::SmallString.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %10) #20
  %11 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 128, i1 false)
  %12 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 1, i32 0
  %17 = bitcast i8** %15 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %16, %"class.llvm::SmallVector.12"** %17, align 8
  %18 = bitcast %"class.llvm::StringRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #20
  %19 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %5, i64 0, i32 1
  %21 = bitcast %"class.llvm::SmallString.11"* %4 to %"class.llvm::SmallVectorImpl"*
  %22 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %21) #22
  %23 = extractvalue { i8*, i64 } %22, 0
  store i8* %23, i8** %19, align 8
  %24 = extractvalue { i8*, i64 } %22, 1
  store i64 %24, i64* %20, align 8
  %25 = bitcast %"class.llvm::Twine"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #20
  %26 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 2
  store i8 5, i8* %26, align 8
  %27 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 3
  store i8 1, i8* %27, align 1
  %28 = bitcast %"class.llvm::Twine"* %6 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %5, %"class.llvm::StringRef"** %28, align 8
  %29 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs16create_directoryERKNS_5TwineEbNS1_5permsE(%"class.llvm::Twine"* nonnull dereferenceable(24) %6, i1 zeroext %1, i32 %2) #22
  %30 = extractvalue { i32, %"class.std::__1::error_category"* } %29, 0
  %31 = extractvalue { i32, %"class.std::__1::error_category"* } %29, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #20
  %32 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  %33 = icmp ne %"class.std::__1::error_category"* %31, %32
  %34 = icmp ne i32 %30, 2
  %35 = or i1 %34, %33
  br i1 %35, label %70, label %36

36:                                               ; preds = %3
  %37 = bitcast %"class.llvm::StringRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #20
  %38 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %7, i64 0, i32 0
  %39 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %7, i64 0, i32 1
  %40 = bitcast %"class.llvm::StringRef"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 16, i1 false)
  %41 = load i8*, i8** %19, align 8
  %42 = load i64, i64* %20, align 8
  %43 = call fastcc i64 @_ZN12_GLOBAL__N_115parent_path_endEN4llvm9StringRefE(i8* %41, i64 %42) #23
  %44 = icmp eq i64 %43, -1
  %45 = icmp ugt i64 %43, %42
  %46 = select i1 %45, i64 %42, i64 %43
  %47 = select i1 %44, i64 0, i64 %46
  %48 = select i1 %44, i8* null, i8* %41
  store i8* %48, i8** %38, align 8
  store i64 %47, i64* %39, align 8
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %67, label %50

50:                                               ; preds = %36
  %51 = bitcast %"class.llvm::Twine"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #20
  %52 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 2
  store i8 5, i8* %52, align 8
  %53 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 3
  store i8 1, i8* %53, align 1
  %54 = bitcast %"class.llvm::Twine"* %8 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %7, %"class.llvm::StringRef"** %54, align 8
  %55 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs18create_directoriesERKNS_5TwineEbNS1_5permsE(%"class.llvm::Twine"* nonnull dereferenceable(24) %8, i1 zeroext %1, i32 %2) #22
  %56 = extractvalue { i32, %"class.std::__1::error_category"* } %55, 0
  %57 = extractvalue { i32, %"class.std::__1::error_category"* } %55, 1
  %58 = icmp eq i32 %56, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #20
  br i1 %58, label %59, label %67

59:                                               ; preds = %50
  %60 = bitcast %"class.llvm::Twine"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #20
  %61 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 2
  store i8 5, i8* %61, align 8
  %62 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 3
  store i8 1, i8* %62, align 1
  %63 = bitcast %"class.llvm::Twine"* %9 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %5, %"class.llvm::StringRef"** %63, align 8
  %64 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs16create_directoryERKNS_5TwineEbNS1_5permsE(%"class.llvm::Twine"* nonnull dereferenceable(24) %9, i1 zeroext %1, i32 %2) #22
  %65 = extractvalue { i32, %"class.std::__1::error_category"* } %64, 0
  %66 = extractvalue { i32, %"class.std::__1::error_category"* } %64, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #20
  br label %67

67:                                               ; preds = %50, %36, %59
  %68 = phi i32 [ %65, %59 ], [ 2, %36 ], [ %56, %50 ]
  %69 = phi %"class.std::__1::error_category"* [ %66, %59 ], [ %31, %36 ], [ %57, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #20
  br label %70

70:                                               ; preds = %3, %67
  %71 = phi i32 [ %68, %67 ], [ %30, %3 ]
  %72 = phi %"class.std::__1::error_category"* [ %69, %67 ], [ %31, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #20
  %73 = load i8*, i8** %13, align 8
  %74 = icmp eq i8* %73, %12
  br i1 %74, label %76, label %75

75:                                               ; preds = %70
  call void @free(i8* %73) #23
  br label %76

76:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %10) #20
  %77 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %71, 0
  %78 = insertvalue { i32, %"class.std::__1::error_category"* } %77, %"class.std::__1::error_category"* %72, 1
  ret { i32, %"class.std::__1::error_category"* } %78
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs16create_directoryERKNS_5TwineEbNS1_5permsE(%"class.llvm::Twine"* dereferenceable(24), i1 zeroext, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.llvm::SmallString.11", align 8
  %5 = bitcast %"class.llvm::SmallString.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 1, i32 0
  %12 = bitcast i8** %10 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %11, %"class.llvm::SmallVector.12"** %12, align 8
  %13 = bitcast %"class.llvm::SmallString.11"* %4 to %"class.llvm::SmallVectorImpl"*
  %14 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %13) #23
  %15 = extractvalue { i8*, i64 } %14, 0
  %16 = call i32 @mkdir(i8* %15, i32 %2) #23
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %26

18:                                               ; preds = %3
  %19 = tail call i32* @__errno_location() #24
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne i32 %20, 17
  %22 = xor i1 %1, true
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %28

26:                                               ; preds = %18, %3
  %27 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i32 [ %20, %24 ], [ 0, %26 ]
  %30 = phi %"class.std::__1::error_category"* [ %25, %24 ], [ %27, %26 ]
  %31 = load i8*, i8** %8, align 8
  %32 = icmp eq i8* %31, %7
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  call void @free(i8* %31) #23
  br label %34

34:                                               ; preds = %28, %33
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #20
  %35 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %29, 0
  %36 = insertvalue { i32, %"class.std::__1::error_category"* } %35, %"class.std::__1::error_category"* %30, 1
  ret { i32, %"class.std::__1::error_category"* } %36
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs9copy_fileERKNS_5TwineES4_(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20
  store i32 -1431655766, i32* %3, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #20
  store i32 -1431655766, i32* %4, align 4
  %7 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs15openFileForReadERKNS_5TwineERiPNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* dereferenceable(24) %0, i32* nonnull dereferenceable(4) %3, %"class.llvm::SmallVectorImpl"* null) #22
  %8 = extractvalue { i32, %"class.std::__1::error_category"* } %7, 0
  %9 = extractvalue { i32, %"class.std::__1::error_category"* } %7, 1
  %10 = icmp eq i32 %8, 0
  br i1 %10, label %11, label %59

11:                                               ; preds = %2
  %12 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs16openFileForWriteERKNS_5TwineERiNS1_9OpenFlagsEj(%"class.llvm::Twine"* dereferenceable(24) %1, i32* nonnull dereferenceable(4) %4, i32 0, i32 438) #22
  %13 = extractvalue { i32, %"class.std::__1::error_category"* } %12, 0
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = extractvalue { i32, %"class.std::__1::error_category"* } %12, 1
  %17 = load i32, i32* %3, align 4
  %18 = tail call i32 @close(i32 %17) #23
  br label %59

19:                                               ; preds = %11
  %20 = tail call i8* @_Znam(i64 4096) #25
  %21 = load i32, i32* %3, align 4
  %22 = tail call i64 @read(i32 %21, i8* nonnull %20, i64 4096) #23
  %23 = trunc i64 %22 to i32
  %24 = icmp slt i32 %23, 1
  %25 = load i32, i32* %4, align 4
  br i1 %24, label %46, label %30

26:                                               ; preds = %36
  %27 = tail call i64 @read(i32 %21, i8* nonnull %20, i64 4096) #23
  %28 = trunc i64 %27 to i32
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %43, label %39

30:                                               ; preds = %19, %39
  %31 = phi i32 [ %40, %39 ], [ %23, %19 ]
  %32 = sext i32 %31 to i64
  %33 = tail call i64 @write(i32 %25, i8* nonnull %20, i64 %32) #23
  %34 = trunc i64 %33 to i32
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = sub nsw i32 %31, %34
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %26, label %39

39:                                               ; preds = %36, %26
  %40 = phi i32 [ %37, %36 ], [ %28, %26 ]
  br label %30

41:                                               ; preds = %30
  %42 = trunc i64 %33 to i32
  br label %46

43:                                               ; preds = %26
  %44 = trunc i64 %33 to i32
  %45 = trunc i64 %27 to i32
  br label %46

46:                                               ; preds = %19, %43, %41
  %47 = phi i32 [ %31, %41 ], [ %45, %43 ], [ %23, %19 ]
  %48 = phi i32 [ %42, %41 ], [ %44, %43 ], [ 0, %19 ]
  %49 = tail call i32 @close(i32 %21) #23
  %50 = tail call i32 @close(i32 %25) #23
  tail call void @_ZdaPv(i8* nonnull %20) #25
  %51 = or i32 %48, %47
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %46
  %54 = tail call i32* @__errno_location() #24
  %55 = load i32, i32* %54, align 4
  %56 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %59

57:                                               ; preds = %46
  %58 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %59

59:                                               ; preds = %2, %53, %57, %15
  %60 = phi %"class.std::__1::error_category"* [ %9, %2 ], [ %16, %15 ], [ %56, %53 ], [ %58, %57 ]
  %61 = phi i32 [ %8, %2 ], [ %13, %15 ], [ %55, %53 ], [ 0, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20
  %62 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %61, 0
  %63 = insertvalue { i32, %"class.std::__1::error_category"* } %62, %"class.std::__1::error_category"* %60, 1
  ret { i32, %"class.std::__1::error_category"* } %63
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs15openFileForReadERKNS_5TwineERiPNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* dereferenceable(24), i32* nocapture dereferenceable(4), %"class.llvm::SmallVectorImpl"*) local_unnamed_addr #0 {
  %4 = alloca %"class.llvm::SmallString.11", align 8
  %5 = alloca [4096 x i8], align 16
  %6 = alloca [64 x i8], align 16
  %7 = bitcast %"class.llvm::SmallString.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %7) #20
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 128, i1 false)
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 1, i32 0
  %14 = bitcast i8** %12 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %13, %"class.llvm::SmallVector.12"** %14, align 8
  %15 = bitcast %"class.llvm::SmallString.11"* %4 to %"class.llvm::SmallVectorImpl"*
  %16 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %15) #23
  %17 = extractvalue { i8*, i64 } %16, 0
  br label %18

18:                                               ; preds = %21, %3
  %19 = call i32 (i8*, i32, ...) @open64(i8* %17, i32 0) #23
  store i32 %19, i32* %1, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %18
  %22 = tail call i32* @__errno_location() #24
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 4
  br i1 %24, label %18, label %25

25:                                               ; preds = %21
  %26 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %55

27:                                               ; preds = %18
  %28 = icmp eq %"class.llvm::SmallVectorImpl"* %2, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %55

31:                                               ; preds = %27
  %32 = bitcast %"class.llvm::SmallVectorImpl"* %2 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast i8** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %36) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 -86, i64 4096, i1 false)
  %37 = call fastcc zeroext i1 @_ZN4llvm3sys2fsL13hasProcSelfFDEv() #22
  br i1 %37, label %38, label %47

38:                                               ; preds = %31
  %39 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %39) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -86, i64 64, i1 false)
  %40 = load i32, i32* %1, align 4
  %41 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %39, i64 64, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i32 %40) #23
  %42 = call i64 @readlink(i8* nonnull %39, i8* nonnull %36, i64 4096) #23
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 %42
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPcEEvT_S4_(%"class.llvm::SmallVectorImpl"* nonnull %2, i8* nonnull %36, i8* %45) #22
  br label %46

46:                                               ; preds = %44, %38
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %39) #20
  br label %53

47:                                               ; preds = %31
  %48 = call i8* @realpath(i8* %17, i8* nonnull %36) #23
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = call i64 @strlen(i8* nonnull %36) #21
  %52 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 %51
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPcEEvT_S4_(%"class.llvm::SmallVectorImpl"* nonnull %2, i8* nonnull %36, i8* %52) #22
  br label %53

53:                                               ; preds = %47, %50, %46
  %54 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %36) #20
  br label %55

55:                                               ; preds = %53, %29, %25
  %56 = phi i32 [ %23, %25 ], [ 0, %29 ], [ 0, %53 ]
  %57 = phi %"class.std::__1::error_category"* [ %26, %25 ], [ %30, %29 ], [ %54, %53 ]
  %58 = load i8*, i8** %10, align 8
  %59 = icmp eq i8* %58, %9
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  call void @free(i8* %58) #23
  br label %61

61:                                               ; preds = %55, %60
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %7) #20
  %62 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %56, 0
  %63 = insertvalue { i32, %"class.std::__1::error_category"* } %62, %"class.std::__1::error_category"* %57, 1
  ret { i32, %"class.std::__1::error_category"* } %63
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs16openFileForWriteERKNS_5TwineERiNS1_9OpenFlagsEj(%"class.llvm::Twine"* dereferenceable(24), i32* nocapture dereferenceable(4), i32, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.llvm::SmallString.11", align 8
  %6 = and i32 %2, 8
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %7, i32 65, i32 66
  %9 = and i32 %2, 2
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, i32 512, i32 1024
  %12 = shl i32 %2, 7
  %13 = and i32 %12, 128
  %14 = or i32 %11, %13
  %15 = or i32 %14, %8
  %16 = bitcast %"class.llvm::SmallString.11"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %16) #20
  %17 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 128, i1 false)
  %18 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %19 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 1, i32 0
  %23 = bitcast i8** %21 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %22, %"class.llvm::SmallVector.12"** %23, align 8
  %24 = bitcast %"class.llvm::SmallString.11"* %5 to %"class.llvm::SmallVectorImpl"*
  %25 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %24) #23
  %26 = extractvalue { i8*, i64 } %25, 0
  br label %27

27:                                               ; preds = %30, %4
  %28 = call i32 (i8*, i32, ...) @open64(i8* %26, i32 %15, i32 %3) #23
  store i32 %28, i32* %1, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %27
  %31 = tail call i32* @__errno_location() #24
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 4
  br i1 %33, label %27, label %34

34:                                               ; preds = %30
  %35 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %38

36:                                               ; preds = %27
  %37 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i32 [ %32, %34 ], [ 0, %36 ]
  %40 = phi %"class.std::__1::error_category"* [ %35, %34 ], [ %37, %36 ]
  %41 = load i8*, i8** %19, align 8
  %42 = icmp eq i8* %41, %18
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @free(i8* %41) #23
  br label %44

44:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %16) #20
  %45 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %39, 0
  %46 = insertvalue { i32, %"class.std::__1::error_category"* } %45, %"class.std::__1::error_category"* %40, 1
  ret { i32, %"class.std::__1::error_category"* } %46
}

; Function Attrs: optsize
declare i32 @close(i32) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #9

; Function Attrs: nofree optsize
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: nofree optsize
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdaPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind optsize readnone
declare i32* @__errno_location() local_unnamed_addr #12

; Function Attrs: nounwind optsize
declare dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys2fs6existsENS1_11file_statusE(%"class.llvm::sys::fs::file_status"* nocapture readonly byval(%"class.llvm::sys::fs::file_status") align 8) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ugt i32 %3, 1
  ret i1 %4
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys2fs12status_knownENS1_11file_statusE(%"class.llvm::sys::fs::file_status"* nocapture readonly byval(%"class.llvm::sys::fs::file_status") align 8) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys2fs12is_directoryENS1_11file_statusE(%"class.llvm::sys::fs::file_status"* nocapture readonly byval(%"class.llvm::sys::fs::file_status") align 8) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  ret i1 %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs12is_directoryERKNS_5TwineERb(%"class.llvm::Twine"* dereferenceable(24), i8* nocapture dereferenceable(1)) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::sys::fs::file_status", align 8
  %4 = bitcast %"class.llvm::sys::fs::file_status"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %3, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 52, i1 false) #20
  store i32 65535, i32* %5, align 4
  %6 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE(%"class.llvm::Twine"* dereferenceable(24) %0, %"class.llvm::sys::fs::file_status"* nonnull dereferenceable(56) %3) #22
  %7 = extractvalue { i32, %"class.std::__1::error_category"* } %6, 0
  %8 = extractvalue { i32, %"class.std::__1::error_category"* } %6, 1
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %3, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 3
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %1, align 1
  %15 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %16

16:                                               ; preds = %2, %10
  %17 = phi %"class.std::__1::error_category"* [ %8, %2 ], [ %15, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #20
  %18 = insertvalue { i32, %"class.std::__1::error_category"* } %6, %"class.std::__1::error_category"* %17, 1
  ret { i32, %"class.std::__1::error_category"* } %18
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys2fs15is_regular_fileENS1_11file_statusE(%"class.llvm::sys::fs::file_status"* nocapture readonly byval(%"class.llvm::sys::fs::file_status") align 8) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs15is_regular_fileERKNS_5TwineERb(%"class.llvm::Twine"* dereferenceable(24), i8* nocapture dereferenceable(1)) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::sys::fs::file_status", align 8
  %4 = bitcast %"class.llvm::sys::fs::file_status"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %3, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 52, i1 false) #20
  store i32 65535, i32* %5, align 4
  %6 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE(%"class.llvm::Twine"* dereferenceable(24) %0, %"class.llvm::sys::fs::file_status"* nonnull dereferenceable(56) %3) #22
  %7 = extractvalue { i32, %"class.std::__1::error_category"* } %6, 0
  %8 = extractvalue { i32, %"class.std::__1::error_category"* } %6, 1
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %3, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 2
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %1, align 1
  %15 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %16

16:                                               ; preds = %2, %10
  %17 = phi %"class.std::__1::error_category"* [ %8, %2 ], [ %15, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #20
  %18 = insertvalue { i32, %"class.std::__1::error_category"* } %6, %"class.std::__1::error_category"* %17, 1
  ret { i32, %"class.std::__1::error_category"* } %18
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys2fs8is_otherENS1_11file_statusE(%"class.llvm::sys::fs::file_status"* nocapture readonly byval(%"class.llvm::sys::fs::file_status") align 8) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ugt i32 %3, 3
  ret i1 %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs8is_otherERKNS_5TwineERb(%"class.llvm::Twine"* dereferenceable(24), i8* nocapture dereferenceable(1)) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::sys::fs::file_status", align 8
  %4 = bitcast %"class.llvm::sys::fs::file_status"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %3, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 52, i1 false) #20
  store i32 65535, i32* %5, align 4
  %6 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE(%"class.llvm::Twine"* dereferenceable(24) %0, %"class.llvm::sys::fs::file_status"* nonnull dereferenceable(56) %3) #22
  %7 = extractvalue { i32, %"class.std::__1::error_category"* } %6, 0
  %8 = extractvalue { i32, %"class.std::__1::error_category"* } %6, 1
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %3, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %12, 3
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %1, align 1
  %15 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %16

16:                                               ; preds = %2, %10
  %17 = phi %"class.std::__1::error_category"* [ %8, %2 ], [ %15, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #20
  %18 = insertvalue { i32, %"class.std::__1::error_category"* } %6, %"class.std::__1::error_category"* %17, 1
  ret { i32, %"class.std::__1::error_category"* } %18
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys2fs15directory_entry16replace_filenameERKNS_5TwineENS1_11file_statusE(%"class.llvm::sys::fs::directory_entry"*, %"class.llvm::Twine"* dereferenceable(24), %"class.llvm::sys::fs::file_status"* nocapture readonly byval(%"class.llvm::sys::fs::file_status") align 8) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.llvm::SmallString.11", align 8
  %5 = alloca %"class.llvm::Twine", align 8
  %6 = alloca %"class.llvm::Twine", align 8
  %7 = alloca %"class.llvm::Twine", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.llvm::SmallString.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %9) #20
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 128, i1 false)
  %11 = bitcast %"class.llvm::sys::fs::directory_entry"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.llvm::sys::fs::directory_entry", %"class.llvm::sys::fs::directory_entry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.llvm::sys::fs::directory_entry"* %0 to i8*
  %18 = select i1 %14, i8* %16, i8* %17
  %19 = getelementptr inbounds %"class.llvm::sys::fs::directory_entry", %"class.llvm::sys::fs::directory_entry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  %23 = tail call fastcc i64 @_ZN12_GLOBAL__N_115parent_path_endEN4llvm9StringRefE(i8* %18, i64 %22) #23
  %24 = icmp eq i64 %23, -1
  %25 = icmp ugt i64 %23, %22
  %26 = select i1 %25, i64 %22, i64 %23
  %27 = select i1 %24, i64 0, i64 %26
  %28 = select i1 %24, i8* null, i8* %18
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = bitcast %"class.llvm::SmallString.11"* %4 to %"class.llvm::SmallVectorImpl"*
  %31 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 1, i32 0
  %36 = bitcast i8** %34 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %35, %"class.llvm::SmallVector.12"** %36, align 8
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl"* nonnull %30, i8* %28, i8* %29) #23
  %37 = bitcast %"class.llvm::Twine"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #20
  %38 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 3
  store i8 1, i8* %38, align 1
  %39 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 2
  store i8 1, i8* %39, align 8
  %40 = bitcast %"class.llvm::Twine"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #20
  %41 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 3
  store i8 1, i8* %41, align 1
  %42 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 2
  store i8 1, i8* %42, align 8
  %43 = bitcast %"class.llvm::Twine"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #20
  %44 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %7, i64 0, i32 3
  store i8 1, i8* %44, align 1
  %45 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %7, i64 0, i32 2
  store i8 1, i8* %45, align 8
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %30, %"class.llvm::Twine"* dereferenceable(24) %1, %"class.llvm::Twine"* nonnull dereferenceable(24) %5, %"class.llvm::Twine"* nonnull dereferenceable(24) %6, %"class.llvm::Twine"* nonnull dereferenceable(24) %7) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #20
  %46 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #20
  %47 = load i8*, i8** %32, align 8
  %48 = bitcast i8** %33 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = ptrtoint i8* %47 to i64
  %51 = sub i64 %49, %50
  %52 = icmp eq i8* %47, null
  br i1 %52, label %53, label %54

53:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #20, !alias.scope !33
  br label %78

54:                                               ; preds = %3
  %55 = icmp ugt i64 %51, -17
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %57) #26
  unreachable

58:                                               ; preds = %54
  %59 = icmp ult i64 %51, 23
  br i1 %59, label %68, label %60

60:                                               ; preds = %58
  %61 = add nuw i64 %51, 16
  %62 = and i64 %61, -16
  %63 = call i8* @_Znwm(i64 %62) #25
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %63, i8** %64, align 8
  %65 = or i64 %62, -9223372036854775808
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %51, i64* %67, align 8
  br label %73

68:                                               ; preds = %58
  %69 = trunc i64 %51 to i8
  %70 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 %69, i8* %71, align 1
  %72 = icmp eq i64 %51, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %68, %60
  %74 = phi i8* [ %63, %60 ], [ %46, %68 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* nonnull align 1 %47, i64 %51, i1 false) #20
  br label %75

75:                                               ; preds = %68, %73
  %76 = phi i8* [ %46, %68 ], [ %74, %73 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 %51
  store i8 0, i8* %77, align 1
  br label %78

78:                                               ; preds = %53, %75
  %79 = load i8, i8* %12, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %78
  %82 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %82) #25
  %83 = load i8*, i8** %32, align 8
  br label %84

84:                                               ; preds = %81, %78
  %85 = phi i8* [ %83, %81 ], [ %47, %78 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %46, i64 24, i1 false) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #20
  %86 = getelementptr inbounds %"class.llvm::sys::fs::directory_entry", %"class.llvm::sys::fs::directory_entry"* %0, i64 0, i32 1
  %87 = bitcast %"class.llvm::sys::fs::file_status"* %86 to i8*
  %88 = bitcast %"class.llvm::sys::fs::file_status"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* nonnull align 8 %88, i64 56, i1 false)
  %89 = icmp eq i8* %85, %31
  br i1 %89, label %91, label %90

90:                                               ; preds = %84
  call void @free(i8* %85) #23
  br label %91

91:                                               ; preds = %84, %90
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %9) #20
  ret void
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden i32 @_ZN4llvm3sys2fs14identify_magicENS_9StringRefE(i8*, i64) local_unnamed_addr #4 {
  %3 = icmp ult i64 %1, 4
  br i1 %3, label %151, label %4

4:                                                ; preds = %2
  %5 = load i8, i8* %0, align 1
  switch i8 %5, label %145 [
    i8 0, label %6
    i8 -34, label %31
    i8 66, label %34
    i8 33, label %37
    i8 127, label %45
    i8 -54, label %65
    i8 -2, label %79
    i8 -50, label %79
    i8 -49, label %79
    i8 -16, label %120
    i8 -125, label %120
    i8 -124, label %120
    i8 102, label %120
    i8 80, label %120
    i8 76, label %120
    i8 -60, label %120
    i8 -112, label %124
    i8 104, label %124
    i8 77, label %128
    i8 100, label %141
  ]

6:                                                ; preds = %4
  %7 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #20
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %19

9:                                                ; preds = %6
  %10 = icmp ult i64 %1, 28
  br i1 %10, label %151, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds i8, i8* %0, i64 12
  %13 = tail call i32 @bcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN4llvm4COFFL11BigObjMagicE, i64 0, i64 0), i64 16)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %151, label %15

15:                                               ; preds = %11
  %16 = tail call i32 @bcmp(i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN4llvm4COFFL12ClGlObjMagicE, i64 0, i64 0), i64 16)
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, i32 20, i32 22
  ret i32 %18

19:                                               ; preds = %6
  %20 = icmp ult i64 %1, 9
  br i1 %20, label %24, label %21

21:                                               ; preds = %19
  %22 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i64 9) #20
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %151, label %24

24:                                               ; preds = %19, %21
  %25 = getelementptr inbounds i8, i8* %0, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %151, label %28

28:                                               ; preds = %24
  %29 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #20
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %151, label %145

31:                                               ; preds = %4
  %32 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4) #20
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %151, label %145

34:                                               ; preds = %4
  %35 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #20
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %151, label %145

37:                                               ; preds = %4
  %38 = icmp ult i64 %1, 8
  br i1 %38, label %145, label %39

39:                                               ; preds = %37
  %40 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #20
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %151, label %42

42:                                               ; preds = %39
  %43 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i64 8) #20
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %151, label %145

45:                                               ; preds = %4
  %46 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 4) #20
  %47 = icmp eq i32 %46, 0
  %48 = icmp ugt i64 %1, 17
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %145

50:                                               ; preds = %45
  %51 = getelementptr inbounds i8, i8* %0, i64 5
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 2
  %54 = select i1 %53, i64 16, i64 17
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %151

58:                                               ; preds = %50
  %59 = select i1 %53, i64 17, i64 16
  %60 = getelementptr inbounds i8, i8* %0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = add nsw i32 %62, -1
  %64 = icmp ult i32 %63, 4
  br i1 %64, label %146, label %151

65:                                               ; preds = %4
  %66 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i64 4) #20
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %65
  %69 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i64 4) #20
  %70 = icmp eq i32 %69, 0
  %71 = icmp ugt i64 %1, 7
  %72 = and i1 %71, %70
  br i1 %72, label %75, label %145

73:                                               ; preds = %65
  %74 = icmp ugt i64 %1, 7
  br i1 %74, label %75, label %145

75:                                               ; preds = %68, %73
  %76 = getelementptr inbounds i8, i8* %0, i64 7
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 43
  br i1 %78, label %151, label %145

79:                                               ; preds = %4, %4, %4
  %80 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4) #20
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  %83 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i64 4) #20
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %82, %79
  %86 = getelementptr inbounds i8, i8* %0, i64 3
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, -50
  %89 = select i1 %88, i64 28, i64 32
  %90 = icmp ugt i64 %89, %1
  br i1 %90, label %145, label %101

91:                                               ; preds = %82
  %92 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i64 4) #20
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i64 4) #20
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %145

97:                                               ; preds = %94, %91
  %98 = icmp eq i8 %5, -50
  %99 = select i1 %98, i64 28, i64 32
  %100 = icmp ugt i64 %99, %1
  br i1 %100, label %145, label %101

101:                                              ; preds = %97, %85
  %102 = phi i64 [ 13, %85 ], [ 14, %97 ]
  %103 = phi i64 [ 14, %85 ], [ 13, %97 ]
  %104 = phi i64 [ 15, %85 ], [ 12, %97 ]
  %105 = getelementptr inbounds i8, i8* %0, i64 %102
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i16
  %108 = shl i16 %107, 12
  %109 = getelementptr inbounds i8, i8* %0, i64 %103
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  %112 = shl nuw i16 %111, 8
  %113 = or i16 %108, %112
  %114 = getelementptr inbounds i8, i8* %0, i64 %104
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i16
  %117 = or i16 %113, %116
  %118 = add i16 %117, -1
  %119 = icmp ult i16 %118, 11
  br i1 %119, label %148, label %145

120:                                              ; preds = %4, %4, %4, %4, %4, %4, %4
  %121 = getelementptr inbounds i8, i8* %0, i64 1
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %122, 1
  br i1 %123, label %151, label %124

124:                                              ; preds = %120, %4, %4
  %125 = getelementptr inbounds i8, i8* %0, i64 1
  %126 = load i8, i8* %125, align 1
  %127 = icmp eq i8 %126, 2
  br i1 %127, label %151, label %145

128:                                              ; preds = %4
  %129 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i64 2) #20
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %145

131:                                              ; preds = %128
  %132 = getelementptr inbounds i8, i8* %0, i64 60
  %133 = bitcast i8* %132 to i32*
  %134 = load i32, i32* %133, align 1
  %135 = zext i32 %134 to i64
  %136 = icmp ult i64 %135, %1
  br i1 %136, label %137, label %145

137:                                              ; preds = %131
  %138 = getelementptr inbounds i8, i8* %0, i64 %135
  %139 = tail call i32 @bcmp(i8* %138, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN4llvm4COFFL7PEMagicE, i64 0, i64 0), i64 4)
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %151, label %145

141:                                              ; preds = %4
  %142 = getelementptr inbounds i8, i8* %0, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, -122
  br i1 %144, label %151, label %145

145:                                              ; preds = %101, %97, %85, %94, %37, %137, %131, %4, %141, %128, %124, %68, %75, %73, %45, %42, %34, %31, %28
  br label %151

146:                                              ; preds = %58
  %147 = add nsw i32 %62, 3
  ret i32 %147

148:                                              ; preds = %101
  %149 = zext i16 %118 to i32
  %150 = add nuw nsw i32 %149, 8
  ret i32 %150

151:                                              ; preds = %58, %141, %137, %124, %120, %75, %50, %39, %42, %34, %31, %28, %24, %21, %11, %9, %2, %145
  %152 = phi i32 [ 0, %145 ], [ 0, %2 ], [ 22, %9 ], [ 21, %11 ], [ 24, %21 ], [ 21, %24 ], [ 25, %28 ], [ 1, %31 ], [ 1, %34 ], [ 2, %42 ], [ 2, %39 ], [ 3, %58 ], [ 3, %50 ], [ 19, %75 ], [ 21, %120 ], [ 21, %124 ], [ 23, %137 ], [ 21, %141 ]
  ret i32 %152
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs14identify_magicERKNS_5TwineERNS1_10file_magicE(%"class.llvm::Twine"* dereferenceable(24), %"struct.llvm::sys::fs::file_magic"* nocapture dereferenceable(4)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca [32 x i8], align 16
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20
  store i32 -1431655766, i32* %3, align 4
  %6 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs15openFileForReadERKNS_5TwineERiPNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* dereferenceable(24) %0, i32* nonnull dereferenceable(4) %3, %"class.llvm::SmallVectorImpl"* null) #22
  %7 = extractvalue { i32, %"class.std::__1::error_category"* } %6, 0
  %8 = extractvalue { i32, %"class.std::__1::error_category"* } %6, 1
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %2
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 32, i1 false)
  %12 = load i32, i32* %3, align 4
  %13 = call i64 @read(i32 %12, i8* nonnull %11, i64 32) #23
  %14 = trunc i64 %13 to i32
  %15 = tail call i32 @close(i32 %12) #23
  %16 = icmp ne i32 %15, 0
  %17 = icmp slt i32 %14, 0
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %10
  %20 = tail call i32* @__errno_location() #24
  %21 = load i32, i32* %20, align 4
  %22 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %29

23:                                               ; preds = %10
  %24 = shl i64 %13, 32
  %25 = ashr exact i64 %24, 32
  %26 = call i32 @_ZN4llvm3sys2fs14identify_magicENS_9StringRefE(i8* nonnull %11, i64 %25) #22
  %27 = getelementptr inbounds %"struct.llvm::sys::fs::file_magic", %"struct.llvm::sys::fs::file_magic"* %1, i64 0, i32 0
  store i32 %26, i32* %27, align 4
  %28 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %29

29:                                               ; preds = %23, %19
  %30 = phi i32 [ %21, %19 ], [ 0, %23 ]
  %31 = phi %"class.std::__1::error_category"* [ %22, %19 ], [ %28, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #20
  br label %32

32:                                               ; preds = %2, %29
  %33 = phi i32 [ %7, %2 ], [ %30, %29 ]
  %34 = phi %"class.std::__1::error_category"* [ %8, %2 ], [ %31, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20
  %35 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %33, 0
  %36 = insertvalue { i32, %"class.std::__1::error_category"* } %35, %"class.std::__1::error_category"* %34, 1
  ret { i32, %"class.std::__1::error_category"* } %36
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZNK4llvm3sys2fs15directory_entry6statusERNS1_11file_statusE(%"class.llvm::sys::fs::directory_entry"*, %"class.llvm::sys::fs::file_status"* nocapture dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.llvm::Twine", align 8
  %4 = bitcast %"class.llvm::Twine"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.llvm::sys::fs::directory_entry", %"class.llvm::sys::fs::directory_entry"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 2
  store i8 4, i8* %6, align 8
  %7 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 3
  store i8 1, i8* %7, align 1
  %8 = bitcast %"class.llvm::Twine"* %3 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %8, align 8
  %9 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE(%"class.llvm::Twine"* nonnull dereferenceable(24) %3, %"class.llvm::sys::fs::file_status"* dereferenceable(56) %1) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #20
  ret { i32, %"class.std::__1::error_category"* } %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys2fs17getMainExecutableEPKcPv(%"class.std::__1::basic_string"* noalias sret, i8*, i8* nocapture readnone) local_unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = alloca [4096 x i8], align 16
  %6 = alloca [4096 x i8], align 16
  %7 = alloca %"class.llvm::StringRef", align 8
  %8 = alloca %"class.llvm::Twine", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %10) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 4096, i1 false)
  %11 = bitcast %"class.llvm::StringRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #20
  %12 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %7, i64 0, i32 0
  %13 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0), i8** %12, align 8
  store i64 14, i64* %13, align 8
  %14 = bitcast %"class.llvm::Twine"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #20
  %15 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 2
  store i8 5, i8* %15, align 8
  %16 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 3
  store i8 1, i8* %16, align 1
  %17 = bitcast %"class.llvm::Twine"* %8 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %7, %"class.llvm::StringRef"** %17, align 8
  %18 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6accessERKNS_5TwineENS1_10AccessModeE(%"class.llvm::Twine"* nonnull dereferenceable(24) %8, i32 0) #23
  %19 = extractvalue { i32, %"class.std::__1::error_category"* } %18, 0
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #20
  br i1 %20, label %21, label %94

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #20
  %23 = load i8*, i8** %12, align 8, !noalias !38
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #20, !alias.scope !38
  %26 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %61

27:                                               ; preds = %21
  %28 = load i64, i64* %13, align 8, !noalias !38
  %29 = icmp ugt i64 %28, -17
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %31) #26
  unreachable

32:                                               ; preds = %27
  %33 = icmp ult i64 %28, 23
  br i1 %33, label %43, label %34

34:                                               ; preds = %32
  %35 = add nuw i64 %28, 16
  %36 = and i64 %35, -16
  %37 = call i8* @_Znwm(i64 %36) #25
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %37, i8** %38, align 8
  %39 = or i64 %36, -9223372036854775808
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %41, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %48

43:                                               ; preds = %32
  %44 = trunc i64 %28 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  %47 = icmp eq i64 %28, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43, %34
  %49 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %45, %43 ], [ %42, %34 ]
  %50 = phi i8* [ %22, %43 ], [ %37, %34 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* nonnull align 1 %23, i64 %28, i1 false) #20
  br label %51

51:                                               ; preds = %43, %48
  %52 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %45, %43 ], [ %49, %48 ]
  %53 = phi i8* [ %22, %43 ], [ %50, %48 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %28
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp slt i8 %56, 0
  %60 = select i1 %59, i8* %58, i8* %22
  br label %61

61:                                               ; preds = %25, %51
  %62 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %25 ], [ %52, %51 ]
  %63 = phi i8* [ %22, %25 ], [ %60, %51 ]
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %65 = call i64 @readlink(i8* %63, i8* nonnull %10, i64 4096) #23
  %66 = load i8, i8* %64, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #25
  br label %71

71:                                               ; preds = %61, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #20
  %72 = icmp sgt i64 %65, -1
  br i1 %72, label %73, label %129

73:                                               ; preds = %71
  %74 = icmp ult i64 %65, 23
  br i1 %74, label %83, label %75

75:                                               ; preds = %73
  %76 = add nuw i64 %65, 16
  %77 = and i64 %76, -16
  %78 = call i8* @_Znwm(i64 %77) #25
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %78, i8** %79, align 8
  %80 = or i64 %77, -9223372036854775808
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %65, i64* %82, align 8
  br label %89

83:                                               ; preds = %73
  %84 = trunc i64 %65 to i8
  %85 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  store i8 %84, i8* %86, align 1
  %87 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %88 = icmp eq i64 %65, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %83, %75
  %90 = phi i8* [ %78, %75 ], [ %87, %83 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* nonnull align 16 %10, i64 %65, i1 false) #20
  br label %91

91:                                               ; preds = %83, %89
  %92 = phi i8* [ %87, %83 ], [ %90, %89 ]
  %93 = getelementptr inbounds i8, i8* %92, i64 %65
  store i8 0, i8* %93, align 1
  br label %130

94:                                               ; preds = %3
  %95 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #20
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %96 = load i8, i8* %1, align 1
  %97 = icmp eq i8 %96, 47
  br i1 %97, label %98, label %101

98:                                               ; preds = %94
  %99 = call fastcc i32 @_ZN4llvm3sys2fsL8test_dirEPcPKcS4_(i8* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i8* %1) #23
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %127, label %128

101:                                              ; preds = %94
  %102 = call i8* @strchr(i8* %1, i32 47) #21
  %103 = icmp eq i8* %102, null
  br i1 %103, label %111, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %105) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %105, i8 -86, i64 4096, i1 false) #20
  %106 = call i8* @getcwd(i8* nonnull %105, i64 4096) #23
  %107 = icmp eq i8* %106, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %104
  %109 = call fastcc i32 @_ZN4llvm3sys2fsL8test_dirEPcPKcS4_(i8* nonnull %10, i8* nonnull %105, i8* %1) #23
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %126, label %125

111:                                              ; preds = %101
  %112 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0)) #23
  %113 = icmp eq i8* %112, null
  br i1 %113, label %128, label %114

114:                                              ; preds = %111
  %115 = call noalias i8* @strdup(i8* nonnull %112) #23
  store i8* %115, i8** %4, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %128, label %117

117:                                              ; preds = %114, %120
  %118 = call i8* @strsep(i8** nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #23
  %119 = icmp eq i8* %118, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = call fastcc i32 @_ZN4llvm3sys2fsL8test_dirEPcPKcS4_(i8* nonnull %10, i8* nonnull %118, i8* %1) #23
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %117

123:                                              ; preds = %120
  call void @free(i8* %115) #23
  br label %127

124:                                              ; preds = %117
  call void @free(i8* %115) #23
  br label %128

125:                                              ; preds = %104, %108
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %105) #20
  br label %128

126:                                              ; preds = %108
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %105) #20
  br label %127

127:                                              ; preds = %98, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #20
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* nonnull %10) #22
  br label %130

128:                                              ; preds = %114, %111, %98, %124, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #20
  br label %129

129:                                              ; preds = %128, %71
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)) #22
  br label %130

130:                                              ; preds = %91, %129, %127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #20
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %10) #20
  ret void
}

; Function Attrs: nofree nounwind optsize
declare i64 @readlink(i8* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i64 @strlen(i8* %1) #23
  %4 = icmp ugt i64 %3, -17
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %6) #26
  unreachable

7:                                                ; preds = %2
  %8 = icmp ult i64 %3, 23
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = add nuw i64 %3, 16
  %11 = and i64 %10, -16
  %12 = tail call i8* @_Znwm(i64 %11) #25
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = or i64 %11, -9223372036854775808
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %16, align 8
  br label %23

17:                                               ; preds = %7
  %18 = trunc i64 %3 to i8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 %18, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %22 = icmp eq i64 %3, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %9
  %24 = phi i8* [ %12, %9 ], [ %21, %17 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %1, i64 %3, i1 false) #20
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i8* [ %21, %17 ], [ %24, %23 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %3
  store i8 0, i8* %27, align 1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK4llvm3sys2fs11file_status19getLastAccessedTimeEv(%"class.llvm::sys::fs::file_status"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 %3) #23
  %5 = sdiv i64 %4, 1000000
  %6 = mul nsw i64 %5, 1000000000
  ret i64 %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK4llvm3sys2fs11file_status23getLastModificationTimeEv(%"class.llvm::sys::fs::file_status"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 %3) #23
  %5 = sdiv i64 %4, 1000000
  %6 = mul nsw i64 %5, 1000000000
  ret i64 %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys2fs10disk_spaceERKNS_5TwineE(%"class.llvm::ErrorOr"* noalias nocapture sret, %"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %struct.statvfs, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %struct.statvfs* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 112, i1 false)
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #20
  call void @_ZNK4llvm5Twine3strEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.llvm::Twine"* %1) #23
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = select i1 %10, i8* %12, i8* %6
  %14 = call i32 @statvfs64(i8* %13, %struct.statvfs* nonnull %3) #23
  %15 = icmp eq i32 %14, 0
  %16 = load i8, i8* %8, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %19) #25
  br label %20

20:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #20
  br i1 %15, label %31, label %21

21:                                               ; preds = %20
  %22 = tail call i32* @__errno_location() #24
  %23 = load i32, i32* %22, align 4
  %24 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  %25 = getelementptr inbounds %"class.llvm::ErrorOr", %"class.llvm::ErrorOr"* %0, i64 0, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = or i8 %26, 1
  store i8 %27, i8* %25, align 8
  %28 = bitcast %"class.llvm::ErrorOr"* %0 to i32*
  store i32 %23, i32* %28, align 8
  %29 = getelementptr inbounds %"class.llvm::ErrorOr", %"class.llvm::ErrorOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 8
  %30 = bitcast i8* %29 to %"class.std::__1::error_category"**
  store %"class.std::__1::error_category"* %24, %"class.std::__1::error_category"** %30, align 8
  br label %51

31:                                               ; preds = %20
  %32 = getelementptr inbounds %struct.statvfs, %struct.statvfs* %3, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.statvfs, %struct.statvfs* %3, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = mul i64 %35, %33
  %37 = getelementptr inbounds %struct.statvfs, %struct.statvfs* %3, i64 0, i32 3
  %38 = load i64, i64* %37, align 8
  %39 = mul i64 %38, %33
  %40 = getelementptr inbounds %struct.statvfs, %struct.statvfs* %3, i64 0, i32 4
  %41 = load i64, i64* %40, align 8
  %42 = mul i64 %41, %33
  %43 = getelementptr inbounds %"class.llvm::ErrorOr", %"class.llvm::ErrorOr"* %0, i64 0, i32 1
  %44 = load i8, i8* %43, align 8
  %45 = and i8 %44, -2
  store i8 %45, i8* %43, align 8
  %46 = bitcast %"class.llvm::ErrorOr"* %0 to i64*
  store i64 %36, i64* %46, align 8
  %47 = getelementptr inbounds %"class.llvm::ErrorOr", %"class.llvm::ErrorOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 8
  %48 = bitcast i8* %47 to i64*
  store i64 %39, i64* %48, align 8
  %49 = getelementptr inbounds %"class.llvm::ErrorOr", %"class.llvm::ErrorOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 16
  %50 = bitcast i8* %49 to i64*
  store i64 %42, i64* %50, align 8
  br label %51

51:                                               ; preds = %31, %21
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #20
  ret void
}

; Function Attrs: nofree nounwind optsize
declare i32 @statvfs64(i8* nocapture readonly, %struct.statvfs* nocapture) local_unnamed_addr #14

; Function Attrs: optsize
declare void @_ZNK4llvm5Twine3strEv(%"class.std::__1::basic_string"* sret, %"class.llvm::Twine"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs12current_pathERNS_15SmallVectorImplIcEE(%"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::sys::fs::file_status", align 8
  %3 = alloca %"class.llvm::sys::fs::file_status", align 8
  %4 = alloca %"class.llvm::Twine", align 8
  %5 = alloca %"class.llvm::Twine", align 8
  %6 = alloca %"class.llvm::Twine", align 8
  %7 = bitcast %"class.llvm::SmallVectorImpl"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = tail call i8* @getenv(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #23
  %12 = bitcast %"class.llvm::sys::fs::file_status"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #20
  %13 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 52, i1 false) #20
  store i32 65535, i32* %13, align 4
  %14 = bitcast %"class.llvm::sys::fs::file_status"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #20
  %15 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %3, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 52, i1 false) #20
  store i32 65535, i32* %15, align 4
  %16 = icmp eq i8* %11, null
  %17 = bitcast %"class.llvm::Twine"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #20
  %18 = bitcast %"class.llvm::Twine"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #20
  %19 = bitcast %"class.llvm::Twine"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #20
  br i1 %16, label %65, label %20

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 3
  store i8 1, i8* %21, align 1
  %22 = load i8, i8* %11, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.llvm::Twine"* %4 to i8**
  store i8* %11, i8** %25, align 8
  br label %26

26:                                               ; preds = %20, %24
  %27 = phi i8 [ 3, %24 ], [ 1, %20 ]
  %28 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %4, i64 0, i32 2
  store i8 %27, i8* %28, align 8
  %29 = call zeroext i1 @_ZN4llvm3sys4path11is_absoluteERKNS_5TwineE(%"class.llvm::Twine"* nonnull dereferenceable(24) %4) #22
  br i1 %29, label %30, label %65

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 3
  store i8 1, i8* %31, align 1
  %32 = load i8, i8* %11, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.llvm::Twine"* %5 to i8**
  store i8* %11, i8** %35, align 8
  br label %36

36:                                               ; preds = %30, %34
  %37 = phi i8 [ 3, %34 ], [ 1, %30 ]
  %38 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 2
  store i8 %37, i8* %38, align 8
  %39 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE(%"class.llvm::Twine"* nonnull dereferenceable(24) %5, %"class.llvm::sys::fs::file_status"* nonnull dereferenceable(56) %2) #22
  %40 = extractvalue { i32, %"class.std::__1::error_category"* } %39, 0
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %65

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 3
  store i8 1, i8* %43, align 1
  %44 = bitcast %"class.llvm::Twine"* %6 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %44, align 8
  %45 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 2
  store i8 3, i8* %45, align 8
  %46 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE(%"class.llvm::Twine"* nonnull dereferenceable(24) %6, %"class.llvm::sys::fs::file_status"* nonnull dereferenceable(56) %3) #22
  %47 = extractvalue { i32, %"class.std::__1::error_category"* } %46, 0
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %3, i64 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %51, %53
  br i1 %54, label %55, label %65

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %3, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #20
  br i1 %60, label %61, label %66

61:                                               ; preds = %55
  %62 = call i64 @strlen(i8* nonnull %11) #21
  %63 = getelementptr inbounds i8, i8* %11, i64 %62
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl"* %0, i8* nonnull %11, i8* %63) #22
  %64 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %119

65:                                               ; preds = %1, %26, %36, %42, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #20
  br label %66

66:                                               ; preds = %65, %55
  %67 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %68 = bitcast i8** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = icmp ult i64 %71, 4096
  %73 = inttoptr i64 %70 to i8*
  br i1 %72, label %74, label %80

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %75, i8* %76, i64 4096, i64 1) #23
  %77 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = load i64, i64* %68, align 8
  br label %80

80:                                               ; preds = %66, %74
  %81 = phi i64 [ %69, %66 ], [ %79, %74 ]
  %82 = phi i8* [ %73, %66 ], [ %78, %74 ]
  %83 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = ptrtoint i8* %82 to i64
  %85 = sub i64 %81, %84
  %86 = call i8* @getcwd(i8* %82, i64 %85) #23
  %87 = icmp eq i8* %86, null
  br i1 %87, label %88, label %114

88:                                               ; preds = %80
  %89 = tail call i32* @__errno_location() #24
  %90 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  br label %92

92:                                               ; preds = %88, %107
  %93 = load i32, i32* %89, align 4
  %94 = icmp eq i32 %93, 12
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %119

97:                                               ; preds = %92
  %98 = load i64, i64* %68, align 8
  %99 = load i64, i64* %7, align 8
  %100 = sub i64 %98, %99
  %101 = shl i64 %100, 1
  %102 = icmp ult i64 %100, %101
  %103 = inttoptr i64 %99 to i8*
  br i1 %102, label %104, label %107

104:                                              ; preds = %97
  call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %90, i8* %91, i64 %101, i64 1) #23
  %105 = load i8*, i8** %83, align 8
  %106 = load i64, i64* %68, align 8
  br label %107

107:                                              ; preds = %97, %104
  %108 = phi i64 [ %98, %97 ], [ %106, %104 ]
  %109 = phi i8* [ %103, %97 ], [ %105, %104 ]
  %110 = ptrtoint i8* %109 to i64
  %111 = sub i64 %108, %110
  %112 = call i8* @getcwd(i8* %109, i64 %111) #23
  %113 = icmp eq i8* %112, null
  br i1 %113, label %92, label %114

114:                                              ; preds = %107, %80
  %115 = load i8*, i8** %83, align 8
  %116 = call i64 @strlen(i8* %115) #21
  %117 = getelementptr inbounds i8, i8* %115, i64 %116
  store i8* %117, i8** %9, align 8
  %118 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %119

119:                                              ; preds = %114, %95, %61
  %120 = phi i32 [ %93, %95 ], [ 0, %114 ], [ 0, %61 ]
  %121 = phi %"class.std::__1::error_category"* [ %96, %95 ], [ %118, %114 ], [ %64, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #20
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #20
  %122 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %120, 0
  %123 = insertvalue { i32, %"class.std::__1::error_category"* } %122, %"class.std::__1::error_category"* %121, 1
  ret { i32, %"class.std::__1::error_category"* } %123
}

; Function Attrs: nofree nounwind optsize readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #15

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #16

; Function Attrs: nounwind optsize
declare i8* @getcwd(i8*, i64) local_unnamed_addr #13

; Function Attrs: optsize
declare { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"*, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nofree nounwind optsize
declare i32 @mkdir(i8* nocapture readonly, i32) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs11create_linkERKNS_5TwineES4_(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::SmallString.11", align 8
  %4 = alloca %"class.llvm::SmallString.11", align 8
  %5 = bitcast %"class.llvm::SmallString.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 1, i32 0
  %12 = bitcast i8** %10 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %11, %"class.llvm::SmallVector.12"** %12, align 8
  %13 = bitcast %"class.llvm::SmallString.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %13) #20
  %14 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 128, i1 false)
  %15 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %16 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 1, i32 0
  %20 = bitcast i8** %18 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %19, %"class.llvm::SmallVector.12"** %20, align 8
  %21 = bitcast %"class.llvm::SmallString.11"* %3 to %"class.llvm::SmallVectorImpl"*
  %22 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %1, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %21) #23
  %23 = extractvalue { i8*, i64 } %22, 0
  %24 = bitcast %"class.llvm::SmallString.11"* %4 to %"class.llvm::SmallVectorImpl"*
  %25 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %24) #23
  %26 = extractvalue { i8*, i64 } %25, 0
  %27 = call i32 @symlink(i8* %26, i8* %23) #23
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %33

29:                                               ; preds = %2
  %30 = tail call i32* @__errno_location() #24
  %31 = load i32, i32* %30, align 4
  %32 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %35

33:                                               ; preds = %2
  %34 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i32 [ %31, %29 ], [ 0, %33 ]
  %37 = phi %"class.std::__1::error_category"* [ %32, %29 ], [ %34, %33 ]
  %38 = load i8*, i8** %16, align 8
  %39 = icmp eq i8* %38, %15
  br i1 %39, label %41, label %40

40:                                               ; preds = %35
  call void @free(i8* %38) #23
  br label %41

41:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %13) #20
  %42 = load i8*, i8** %8, align 8
  %43 = icmp eq i8* %42, %7
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @free(i8* %42) #23
  br label %45

45:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #20
  %46 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %36, 0
  %47 = insertvalue { i32, %"class.std::__1::error_category"* } %46, %"class.std::__1::error_category"* %37, 1
  ret { i32, %"class.std::__1::error_category"* } %47
}

; Function Attrs: nounwind optsize
declare i32 @symlink(i8*, i8*) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs16create_hard_linkERKNS_5TwineES4_(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::SmallString.11", align 8
  %4 = alloca %"class.llvm::SmallString.11", align 8
  %5 = bitcast %"class.llvm::SmallString.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 1, i32 0
  %12 = bitcast i8** %10 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %11, %"class.llvm::SmallVector.12"** %12, align 8
  %13 = bitcast %"class.llvm::SmallString.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %13) #20
  %14 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 128, i1 false)
  %15 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %16 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 1, i32 0
  %20 = bitcast i8** %18 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %19, %"class.llvm::SmallVector.12"** %20, align 8
  %21 = bitcast %"class.llvm::SmallString.11"* %3 to %"class.llvm::SmallVectorImpl"*
  %22 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %1, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %21) #23
  %23 = extractvalue { i8*, i64 } %22, 0
  %24 = bitcast %"class.llvm::SmallString.11"* %4 to %"class.llvm::SmallVectorImpl"*
  %25 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %24) #23
  %26 = extractvalue { i8*, i64 } %25, 0
  %27 = call i32 @link(i8* %26, i8* %23) #23
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %33

29:                                               ; preds = %2
  %30 = tail call i32* @__errno_location() #24
  %31 = load i32, i32* %30, align 4
  %32 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %35

33:                                               ; preds = %2
  %34 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i32 [ %31, %29 ], [ 0, %33 ]
  %37 = phi %"class.std::__1::error_category"* [ %32, %29 ], [ %34, %33 ]
  %38 = load i8*, i8** %16, align 8
  %39 = icmp eq i8* %38, %15
  br i1 %39, label %41, label %40

40:                                               ; preds = %35
  call void @free(i8* %38) #23
  br label %41

41:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %13) #20
  %42 = load i8*, i8** %8, align 8
  %43 = icmp eq i8* %42, %7
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @free(i8* %42) #23
  br label %45

45:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #20
  %46 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %36, 0
  %47 = insertvalue { i32, %"class.std::__1::error_category"* } %46, %"class.std::__1::error_category"* %37, 1
  ret { i32, %"class.std::__1::error_category"* } %47
}

; Function Attrs: nounwind optsize
declare i32 @link(i8*, i8*) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6removeERKNS_5TwineEb(%"class.llvm::Twine"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::SmallString.11", align 8
  %4 = alloca %struct.stat, align 8
  %5 = bitcast %"class.llvm::SmallString.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 1, i32 0
  %12 = bitcast i8** %10 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %11, %"class.llvm::SmallVector.12"** %12, align 8
  %13 = bitcast %"class.llvm::SmallString.11"* %3 to %"class.llvm::SmallVectorImpl"*
  %14 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %13) #23
  %15 = extractvalue { i8*, i64 } %14, 0
  %16 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %16) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 144, i1 false)
  %17 = call i32 @lstat64(i8* %15, %struct.stat* nonnull %4) #23
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %2
  %20 = tail call i32* @__errno_location() #24
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 2
  %23 = xor i1 %1, true
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %49

27:                                               ; preds = %19
  %28 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %49

29:                                               ; preds = %2
  %30 = getelementptr inbounds %struct.stat, %struct.stat* %4, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = trunc i32 %31 to i16
  %33 = and i16 %32, -4096
  switch i16 %33, label %34 [
    i16 -32768, label %36
    i16 16384, label %36
    i16 -24576, label %36
  ]

34:                                               ; preds = %29
  %35 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %49

36:                                               ; preds = %29, %29, %29
  %37 = call i32 @remove(i8* %15) #23
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %47

39:                                               ; preds = %36
  %40 = tail call i32* @__errno_location() #24
  %41 = load i32, i32* %40, align 4
  %42 = icmp ne i32 %41, 2
  %43 = xor i1 %1, true
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %49

47:                                               ; preds = %39, %36
  %48 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %49

49:                                               ; preds = %47, %45, %34, %27, %25
  %50 = phi i32 [ 1, %34 ], [ %41, %45 ], [ 0, %47 ], [ %21, %25 ], [ 0, %27 ]
  %51 = phi %"class.std::__1::error_category"* [ %35, %34 ], [ %46, %45 ], [ %48, %47 ], [ %26, %25 ], [ %28, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %16) #20
  %52 = load i8*, i8** %8, align 8
  %53 = icmp eq i8* %52, %7
  br i1 %53, label %55, label %54

54:                                               ; preds = %49
  call void @free(i8* %52) #23
  br label %55

55:                                               ; preds = %49, %54
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #20
  %56 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %50, 0
  %57 = insertvalue { i32, %"class.std::__1::error_category"* } %56, %"class.std::__1::error_category"* %51, 1
  ret { i32, %"class.std::__1::error_category"* } %57
}

; Function Attrs: nofree nounwind optsize
declare i32 @lstat64(i8* nocapture readonly, %struct.stat* nocapture) local_unnamed_addr #14

; Function Attrs: nofree nounwind optsize
declare i32 @remove(i8* nocapture readonly) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6renameERKNS_5TwineES4_(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::SmallString.11", align 8
  %4 = alloca %"class.llvm::SmallString.11", align 8
  %5 = bitcast %"class.llvm::SmallString.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 1, i32 0
  %12 = bitcast i8** %10 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %11, %"class.llvm::SmallVector.12"** %12, align 8
  %13 = bitcast %"class.llvm::SmallString.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %13) #20
  %14 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 128, i1 false)
  %15 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %16 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %4, i64 1, i32 0
  %20 = bitcast i8** %18 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %19, %"class.llvm::SmallVector.12"** %20, align 8
  %21 = bitcast %"class.llvm::SmallString.11"* %3 to %"class.llvm::SmallVectorImpl"*
  %22 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %21) #23
  %23 = extractvalue { i8*, i64 } %22, 0
  %24 = bitcast %"class.llvm::SmallString.11"* %4 to %"class.llvm::SmallVectorImpl"*
  %25 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %1, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %24) #23
  %26 = extractvalue { i8*, i64 } %25, 0
  %27 = call i32 @rename(i8* %23, i8* %26) #23
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %33

29:                                               ; preds = %2
  %30 = tail call i32* @__errno_location() #24
  %31 = load i32, i32* %30, align 4
  %32 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %35

33:                                               ; preds = %2
  %34 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i32 [ %31, %29 ], [ 0, %33 ]
  %37 = phi %"class.std::__1::error_category"* [ %32, %29 ], [ %34, %33 ]
  %38 = load i8*, i8** %16, align 8
  %39 = icmp eq i8* %38, %15
  br i1 %39, label %41, label %40

40:                                               ; preds = %35
  call void @free(i8* %38) #23
  br label %41

41:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %13) #20
  %42 = load i8*, i8** %8, align 8
  %43 = icmp eq i8* %42, %7
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @free(i8* %42) #23
  br label %45

45:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #20
  %46 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %36, 0
  %47 = insertvalue { i32, %"class.std::__1::error_category"* } %46, %"class.std::__1::error_category"* %37, 1
  ret { i32, %"class.std::__1::error_category"* } %47
}

; Function Attrs: nofree nounwind optsize
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs11resize_fileEim(i32, i64) local_unnamed_addr #0 {
  %3 = tail call i32 @posix_fallocate64(i32 %0, i64 0, i64 %1) #23
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %9

7:                                                ; preds = %2
  %8 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %9

9:                                                ; preds = %5, %7
  %10 = phi %"class.std::__1::error_category"* [ %8, %7 ], [ %6, %5 ]
  %11 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %3, 0
  %12 = insertvalue { i32, %"class.std::__1::error_category"* } %11, %"class.std::__1::error_category"* %10, 1
  ret { i32, %"class.std::__1::error_category"* } %12
}

; Function Attrs: optsize
declare i32 @posix_fallocate64(i32, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6accessERKNS_5TwineENS1_10AccessModeE(%"class.llvm::Twine"* dereferenceable(24), i32) local_unnamed_addr #0 {
  %3 = alloca %"class.llvm::SmallString.11", align 8
  %4 = alloca %struct.stat, align 8
  %5 = bitcast %"class.llvm::SmallString.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %3, i64 1, i32 0
  %12 = bitcast i8** %10 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %11, %"class.llvm::SmallVector.12"** %12, align 8
  %13 = bitcast %"class.llvm::SmallString.11"* %3 to %"class.llvm::SmallVectorImpl"*
  %14 = call { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %13) #23
  %15 = extractvalue { i8*, i64 } %14, 0
  %16 = sext i32 %1 to i64
  %17 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN4llvm3sys2fs6accessERKNS_5TwineENS1_10AccessModeE, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = call i32 @access(i8* %15, i32 %18) #23
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %25

21:                                               ; preds = %2
  %22 = tail call i32* @__errno_location() #24
  %23 = load i32, i32* %22, align 4
  %24 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %43

25:                                               ; preds = %2
  %26 = icmp eq i32 %1, 2
  br i1 %26, label %27, label %41

27:                                               ; preds = %25
  %28 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %28) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 144, i1 false)
  %29 = call i32 @stat64(i8* %15, %struct.stat* nonnull %4) #23
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %28) #20
  br label %43

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.stat, %struct.stat* %4, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 61440
  %37 = icmp eq i32 %36, 32768
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %28) #20
  br label %43

40:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %28) #20
  br label %41

41:                                               ; preds = %40, %25
  %42 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %43

43:                                               ; preds = %38, %31, %41, %21
  %44 = phi i32 [ %23, %21 ], [ 0, %41 ], [ 13, %38 ], [ 13, %31 ]
  %45 = phi %"class.std::__1::error_category"* [ %24, %21 ], [ %42, %41 ], [ %39, %38 ], [ %32, %31 ]
  %46 = load i8*, i8** %8, align 8
  %47 = icmp eq i8* %46, %7
  br i1 %47, label %49, label %48

48:                                               ; preds = %43
  call void @free(i8* %46) #23
  br label %49

49:                                               ; preds = %43, %48
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #20
  %50 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %44, 0
  %51 = insertvalue { i32, %"class.std::__1::error_category"* } %50, %"class.std::__1::error_category"* %45, 1
  ret { i32, %"class.std::__1::error_category"* } %51
}

; Function Attrs: nofree nounwind optsize
declare i32 @access(i8* nocapture readonly, i32) local_unnamed_addr #14

; Function Attrs: nofree nounwind optsize
declare i32 @stat64(i8* nocapture readonly, %struct.stat* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys2fs11can_executeERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = tail call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6accessERKNS_5TwineENS1_10AccessModeE(%"class.llvm::Twine"* dereferenceable(24) %0, i32 2) #22
  %3 = extractvalue { i32, %"class.std::__1::error_category"* } %2, 0
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys2fs10equivalentENS1_11file_statusES2_(%"class.llvm::sys::fs::file_status"* nocapture readonly byval(%"class.llvm::sys::fs::file_status") align 8, %"class.llvm::sys::fs::file_status"* nocapture readonly byval(%"class.llvm::sys::fs::file_status") align 8) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs10equivalentERKNS_5TwineES4_Rb(%"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24), i8* nocapture dereferenceable(1)) local_unnamed_addr #0 {
  %4 = alloca %"class.llvm::sys::fs::file_status", align 8
  %5 = alloca %"class.llvm::sys::fs::file_status", align 8
  %6 = bitcast %"class.llvm::sys::fs::file_status"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #20
  %7 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %4, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 52, i1 false) #20
  store i32 65535, i32* %7, align 4
  %8 = bitcast %"class.llvm::sys::fs::file_status"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #20
  %9 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %5, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 52, i1 false) #20
  store i32 65535, i32* %9, align 4
  %10 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE(%"class.llvm::Twine"* dereferenceable(24) %0, %"class.llvm::sys::fs::file_status"* nonnull dereferenceable(56) %4) #22
  %11 = extractvalue { i32, %"class.std::__1::error_category"* } %10, 0
  %12 = extractvalue { i32, %"class.std::__1::error_category"* } %10, 1
  %13 = icmp eq i32 %11, 0
  br i1 %13, label %14, label %33

14:                                               ; preds = %3
  %15 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE(%"class.llvm::Twine"* dereferenceable(24) %1, %"class.llvm::sys::fs::file_status"* nonnull dereferenceable(56) %5) #22
  %16 = extractvalue { i32, %"class.std::__1::error_category"* } %15, 0
  %17 = extractvalue { i32, %"class.std::__1::error_category"* } %15, 1
  %18 = icmp eq i32 %16, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %4, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %4, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %5, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %5, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %21, %25
  %29 = icmp eq i64 %23, %27
  %30 = and i1 %28, %29
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %2, align 1
  %32 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %33

33:                                               ; preds = %14, %3, %19
  %34 = phi i32 [ %11, %3 ], [ %16, %14 ], [ 0, %19 ]
  %35 = phi %"class.std::__1::error_category"* [ %12, %3 ], [ %17, %14 ], [ %32, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #20
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #20
  %36 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %34, 0
  %37 = insertvalue { i32, %"class.std::__1::error_category"* } %36, %"class.std::__1::error_category"* %35, 1
  ret { i32, %"class.std::__1::error_category"* } %37
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fsL10fillStatusEiRK4statRNS1_11file_statusE(i32, %struct.stat* nocapture readonly dereferenceable(144), %"class.llvm::sys::fs::file_status"* nocapture dereferenceable(56)) unnamed_addr #0 {
  %4 = icmp eq i32 %0, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %3
  %6 = tail call i32* @__errno_location() #24
  %7 = load i32, i32* %6, align 4
  %8 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  %9 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  %10 = icmp eq %"class.std::__1::error_category"* %8, %9
  %11 = icmp eq i32 %7, 2
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %17

13:                                               ; preds = %5
  %14 = bitcast %"class.llvm::sys::fs::file_status"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 48, i1 false)
  %15 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 7
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 8
  store i32 65535, i32* %16, align 4
  br label %54

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 8
  %19 = bitcast %"class.llvm::sys::fs::file_status"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 52, i1 false)
  store i32 65535, i32* %18, align 4
  br label %54

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.stat, %struct.stat* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 61440
  %24 = add nsw i32 %23, -4096
  %25 = icmp ult i32 %24, 49152
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = lshr exact i32 %24, 12
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [12 x i32], [12 x i32]* @switch.table._ZN4llvm3sys2fsL10fillStatusEiRK4statRNS1_11file_statusE, i64 0, i64 %28
  %30 = load i32, i32* %29, align 4
  br label %31

31:                                               ; preds = %20, %26
  %32 = phi i32 [ %30, %26 ], [ 9, %20 ]
  %33 = bitcast %struct.stat* %1 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 8
  %35 = getelementptr inbounds %struct.stat, %struct.stat* %1, i64 0, i32 11, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.stat, %struct.stat* %1, i64 0, i32 12, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %struct.stat, %struct.stat* %1, i64 0, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %struct.stat, %struct.stat* %1, i64 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %struct.stat, %struct.stat* %1, i64 0, i32 8
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.llvm::sys::fs::file_status"* %2 to <2 x i64>*
  store <2 x i64> %34, <2 x i64>* %45, align 8
  %46 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 2
  store i64 %36, i64* %46, align 8
  %47 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 3
  store i64 %38, i64* %47, align 8
  %48 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 4
  store i32 %40, i32* %48, align 8
  %49 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 5
  store i32 %42, i32* %49, align 4
  %50 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 6
  store i64 %44, i64* %50, align 8
  %51 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 7
  store i32 %32, i32* %51, align 8
  %52 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %2, i64 0, i32 8
  store i32 %22, i32* %52, align 4
  %53 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %54

54:                                               ; preds = %13, %17, %31
  %55 = phi i32 [ 0, %31 ], [ 2, %13 ], [ %7, %17 ]
  %56 = phi %"class.std::__1::error_category"* [ %53, %31 ], [ %8, %13 ], [ %8, %17 ]
  %57 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %55, 0
  %58 = insertvalue { i32, %"class.std::__1::error_category"* } %57, %"class.std::__1::error_category"* %56, 1
  ret { i32, %"class.std::__1::error_category"* } %58
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6statusEiRNS1_11file_statusE(i32, %"class.llvm::sys::fs::file_status"* nocapture dereferenceable(56)) local_unnamed_addr #0 {
  %3 = alloca %struct.stat, align 8
  %4 = bitcast %struct.stat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %4) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 144, i1 false)
  %5 = call i32 @fstat64(i32 %0, %struct.stat* nonnull %3) #23
  %6 = call fastcc { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fsL10fillStatusEiRK4statRNS1_11file_statusE(i32 %5, %struct.stat* nonnull dereferenceable(144) %3, %"class.llvm::sys::fs::file_status"* dereferenceable(56) %1) #22
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %4) #20
  ret { i32, %"class.std::__1::error_category"* } %6
}

; Function Attrs: nofree nounwind optsize
declare i32 @fstat64(i32, %struct.stat* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs32setLastModificationAndAccessTimeEiNSt3__16chrono10time_pointINS3_12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000000EEEEEEE(i32, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::chrono::time_point.23", align 8
  %4 = alloca [2 x %struct.timespec], align 16
  %5 = bitcast [2 x %struct.timespec]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #20
  %6 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %4, i64 0, i64 1
  %8 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %4, i64 0, i64 1, i32 1
  %9 = bitcast %"class.std::__1::chrono::time_point.23"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #20
  %10 = sdiv i64 %1, 1000
  %11 = getelementptr inbounds %"class.std::__1::chrono::time_point.23", %"class.std::__1::chrono::time_point.23"* %3, i64 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = call i64 @_ZNSt3__16chrono12system_clock9to_time_tERKNS0_10time_pointIS1_NS0_8durationIxNS_5ratioILl1ELl1000000EEEEEEE(%"class.std::__1::chrono::time_point.23"* nonnull dereferenceable(8) %3) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #20
  %13 = srem i64 %1, 1000000000
  %14 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %4, i64 0, i64 1, i32 0
  store i64 %12, i64* %14, align 16
  store i64 %13, i64* %8, align 8
  %15 = bitcast %struct.timespec* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %5, i8* align 16 %15, i64 16, i1 false)
  %16 = call i32 @futimens(i32 %0, %struct.timespec* nonnull %6) #23
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = tail call i32* @__errno_location() #24
  %20 = load i32, i32* %19, align 4
  %21 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %24

22:                                               ; preds = %2
  %23 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %24

24:                                               ; preds = %22, %18
  %25 = phi %"class.std::__1::error_category"* [ %23, %22 ], [ %21, %18 ]
  %26 = phi i32 [ 0, %22 ], [ %20, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #20
  %27 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %26, 0
  %28 = insertvalue { i32, %"class.std::__1::error_category"* } %27, %"class.std::__1::error_category"* %25, 1
  ret { i32, %"class.std::__1::error_category"* } %28
}

; Function Attrs: nounwind optsize
declare i32 @futimens(i32, %struct.timespec*) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs18mapped_file_region4initEimNS2_7mapmodeE(%"class.llvm::sys::fs::mapped_file_region"* nocapture, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %3, 1
  %6 = select i1 %5, i32 1, i32 2
  %7 = icmp eq i32 %3, 0
  %8 = select i1 %7, i32 1, i32 3
  %9 = getelementptr inbounds %"class.llvm::sys::fs::mapped_file_region", %"class.llvm::sys::fs::mapped_file_region"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = tail call i8* @mmap64(i8* null, i64 %10, i32 %8, i32 %6, i32 %1, i64 %2) #23
  %12 = getelementptr inbounds %"class.llvm::sys::fs::mapped_file_region", %"class.llvm::sys::fs::mapped_file_region"* %0, i64 0, i32 1
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i8* %11, inttoptr (i64 -1 to i8*)
  br i1 %13, label %14, label %18

14:                                               ; preds = %4
  %15 = tail call i32* @__errno_location() #24
  %16 = load i32, i32* %15, align 4
  %17 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %20

18:                                               ; preds = %4
  %19 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %20

20:                                               ; preds = %18, %14
  %21 = phi %"class.std::__1::error_category"* [ %17, %14 ], [ %19, %18 ]
  %22 = phi i32 [ %16, %14 ], [ 0, %18 ]
  %23 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %22, 0
  %24 = insertvalue { i32, %"class.std::__1::error_category"* } %23, %"class.std::__1::error_category"* %21, 1
  ret { i32, %"class.std::__1::error_category"* } %24
}

; Function Attrs: nounwind optsize
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys2fs18mapped_file_regionC2EiNS2_7mapmodeEmmRNSt3__110error_codeE(%"class.llvm::sys::fs::mapped_file_region"* nocapture, i32, i32, i64, i64, %"class.std::__1::error_code"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.llvm::sys::fs::mapped_file_region", %"class.llvm::sys::fs::mapped_file_region"* %0, i64 0, i32 0
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.llvm::sys::fs::mapped_file_region", %"class.llvm::sys::fs::mapped_file_region"* %0, i64 0, i32 1
  store i8* null, i8** %8, align 8
  %9 = tail call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs18mapped_file_region4initEimNS2_7mapmodeE(%"class.llvm::sys::fs::mapped_file_region"* %0, i32 %1, i64 %4, i32 %2) #22
  %10 = extractvalue { i32, %"class.std::__1::error_category"* } %9, 0
  %11 = extractvalue { i32, %"class.std::__1::error_category"* } %9, 1
  %12 = getelementptr inbounds %"class.std::__1::error_code", %"class.std::__1::error_code"* %5, i64 0, i32 0
  store i32 %10, i32* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::error_code", %"class.std::__1::error_code"* %5, i64 0, i32 1
  store %"class.std::__1::error_category"* %11, %"class.std::__1::error_category"** %13, align 8
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %6
  store i8* null, i8** %8, align 8
  br label %16

16:                                               ; preds = %6, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys2fs18mapped_file_regionD2Ev(%"class.llvm::sys::fs::mapped_file_region"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::mapped_file_region", %"class.llvm::sys::fs::mapped_file_region"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.llvm::sys::fs::mapped_file_region", %"class.llvm::sys::fs::mapped_file_region"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = tail call i32 @munmap(i8* nonnull %3, i64 %7) #23
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind optsize
declare i32 @munmap(i8*, i64) local_unnamed_addr #13

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZNK4llvm3sys2fs18mapped_file_region4sizeEv(%"class.llvm::sys::fs::mapped_file_region"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::mapped_file_region", %"class.llvm::sys::fs::mapped_file_region"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i8* @_ZNK4llvm3sys2fs18mapped_file_region4dataEv(%"class.llvm::sys::fs::mapped_file_region"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::mapped_file_region", %"class.llvm::sys::fs::mapped_file_region"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i8* @_ZNK4llvm3sys2fs18mapped_file_region10const_dataEv(%"class.llvm::sys::fs::mapped_file_region"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.llvm::sys::fs::mapped_file_region", %"class.llvm::sys::fs::mapped_file_region"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4llvm3sys2fs18mapped_file_region9alignmentEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i32 @_ZN4llvm3sys7Process11getPageSizeEv() #23
  ret i32 %1
}

; Function Attrs: optsize
declare i32 @_ZN4llvm3sys7Process11getPageSizeEv() local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6detail28directory_iterator_constructERNS2_12DirIterStateENS_9StringRefE(%"struct.llvm::sys::fs::detail::DirIterState"* dereferenceable(96), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.llvm::SmallString.11", align 8
  %6 = alloca %"class.llvm::Twine", align 8
  %7 = alloca %"class.llvm::Twine", align 8
  %8 = alloca %"class.llvm::Twine", align 8
  %9 = alloca %"class.llvm::Twine", align 8
  %10 = alloca %"class.llvm::sys::fs::directory_entry", align 8
  %11 = alloca %"class.llvm::Twine", align 8
  %12 = alloca %"class.llvm::StringRef", align 8
  %13 = bitcast %"class.llvm::SmallString.11"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %13) #20
  %14 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 128, i1 false)
  %15 = getelementptr inbounds i8, i8* %1, i64 %2
  %16 = bitcast %"class.llvm::SmallString.11"* %5 to %"class.llvm::SmallVectorImpl"*
  %17 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %18 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.llvm::SmallString.11", %"class.llvm::SmallString.11"* %5, i64 1, i32 0
  %22 = bitcast i8** %20 to %"class.llvm::SmallVector.12"**
  store %"class.llvm::SmallVector.12"* %21, %"class.llvm::SmallVector.12"** %22, align 8
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl"* nonnull %16, i8* %1, i8* %15) #23
  %23 = bitcast %"class.llvm::SmallString.11"* %5 to %"class.llvm::SmallVectorTemplateBase"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #20
  store i8 0, i8* %4, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase"* nonnull %23, i8* nonnull dereferenceable(1) %4) #23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #20
  %24 = load i8*, i8** %19, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 -1
  store i8* %25, i8** %19, align 8
  %26 = load i8*, i8** %18, align 8
  %27 = call %struct.__dirstream* @opendir(i8* %26) #22
  %28 = icmp eq %struct.__dirstream* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %3
  %30 = tail call i32* @__errno_location() #24
  %31 = load i32, i32* %30, align 4
  %32 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %83

33:                                               ; preds = %3
  %34 = ptrtoint %struct.__dirstream* %27 to i64
  %35 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 1
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"class.llvm::Twine"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #20
  %37 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 3
  store i8 1, i8* %37, align 1
  %38 = bitcast %"class.llvm::Twine"* %6 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %38, align 8
  %39 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 2
  store i8 3, i8* %39, align 8
  %40 = bitcast %"class.llvm::Twine"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #20
  %41 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %7, i64 0, i32 3
  store i8 1, i8* %41, align 1
  %42 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %7, i64 0, i32 2
  store i8 1, i8* %42, align 8
  %43 = bitcast %"class.llvm::Twine"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #20
  %44 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 3
  store i8 1, i8* %44, align 1
  %45 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 2
  store i8 1, i8* %45, align 8
  %46 = bitcast %"class.llvm::Twine"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #20
  %47 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 3
  store i8 1, i8* %47, align 1
  %48 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 2
  store i8 1, i8* %48, align 8
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %16, %"class.llvm::Twine"* nonnull dereferenceable(24) %6, %"class.llvm::Twine"* nonnull dereferenceable(24) %7, %"class.llvm::Twine"* nonnull dereferenceable(24) %8, %"class.llvm::Twine"* nonnull dereferenceable(24) %9) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #20
  %49 = bitcast %"class.llvm::sys::fs::directory_entry"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %49) #20
  %50 = bitcast %"class.llvm::Twine"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #20
  %51 = bitcast %"class.llvm::StringRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #20
  %52 = load i8*, i8** %18, align 8
  %53 = bitcast i8** %19 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = ptrtoint i8* %52 to i64
  %56 = sub i64 %54, %55
  %57 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %12, i64 0, i32 0
  store i8* %52, i8** %57, align 8
  %58 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %12, i64 0, i32 1
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  store i8 5, i8* %59, align 8
  %60 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  store i8 1, i8* %60, align 1
  %61 = bitcast %"class.llvm::Twine"* %11 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %12, %"class.llvm::StringRef"** %61, align 8
  %62 = getelementptr inbounds %"class.llvm::sys::fs::directory_entry", %"class.llvm::sys::fs::directory_entry"* %10, i64 0, i32 0
  call void @_ZNK4llvm5Twine3strEv(%"class.std::__1::basic_string"* nonnull sret %62, %"class.llvm::Twine"* nonnull %11) #23
  %63 = getelementptr inbounds %"class.llvm::sys::fs::directory_entry", %"class.llvm::sys::fs::directory_entry"* %10, i64 0, i32 1
  %64 = bitcast %"class.llvm::sys::fs::file_status"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 52, i1 false)
  %65 = getelementptr inbounds %"class.llvm::sys::fs::directory_entry", %"class.llvm::sys::fs::directory_entry"* %10, i64 0, i32 1, i32 8
  store i32 65535, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 2
  %67 = bitcast %"class.llvm::sys::fs::directory_entry"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %33
  %72 = getelementptr inbounds %"class.llvm::sys::fs::directory_entry", %"class.llvm::sys::fs::directory_entry"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #25
  br label %74

74:                                               ; preds = %71, %33
  %75 = bitcast %"class.llvm::sys::fs::directory_entry"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* nonnull align 8 %49, i64 24, i1 false) #20
  %76 = bitcast %"class.llvm::sys::fs::directory_entry"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 0, i8* %77, align 1
  store i8 0, i8* %49, align 8
  %78 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 2, i32 1
  %79 = bitcast %"class.llvm::sys::fs::file_status"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %64, i64 56, i1 false) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #20
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %49) #20
  %80 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6detail28directory_iterator_incrementERNS2_12DirIterStateE(%"struct.llvm::sys::fs::detail::DirIterState"* dereferenceable(96) %0) #22
  %81 = extractvalue { i32, %"class.std::__1::error_category"* } %80, 0
  %82 = extractvalue { i32, %"class.std::__1::error_category"* } %80, 1
  br label %83

83:                                               ; preds = %74, %29
  %84 = phi i32 [ %31, %29 ], [ %81, %74 ]
  %85 = phi %"class.std::__1::error_category"* [ %32, %29 ], [ %82, %74 ]
  %86 = load i8*, i8** %18, align 8
  %87 = icmp eq i8* %86, %17
  br i1 %87, label %89, label %88

88:                                               ; preds = %83
  call void @free(i8* %86) #23
  br label %89

89:                                               ; preds = %83, %88
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %13) #20
  %90 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %84, 0
  %91 = insertvalue { i32, %"class.std::__1::error_category"* } %90, %"class.std::__1::error_category"* %85, 1
  ret { i32, %"class.std::__1::error_category"* } %91
}

; Function Attrs: nofree nounwind optsize
declare noalias %struct.__dirstream* @opendir(i8* nocapture readonly) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6detail28directory_iterator_incrementERNS2_12DirIterStateE(%"struct.llvm::sys::fs::detail::DirIterState"* dereferenceable(96)) local_unnamed_addr #0 {
  %2 = alloca %"class.llvm::StringRef", align 8
  %3 = alloca %"class.llvm::Twine", align 8
  %4 = alloca %"class.llvm::sys::fs::file_status", align 8
  %5 = tail call i32* @__errno_location() #24
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 1
  %7 = bitcast i64* %6 to %struct.__dirstream**
  %8 = load %struct.__dirstream*, %struct.__dirstream** %7, align 8
  %9 = tail call %struct.dirent* @readdir64(%struct.__dirstream* %8) #23
  %10 = icmp eq %struct.dirent* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %1
  %12 = load i32, i32* %5, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %11
  %15 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %49

16:                                               ; preds = %1
  %17 = bitcast %"class.llvm::StringRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #20
  %18 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %2, i64 0, i32 0
  %19 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %2, i64 0, i32 1
  %20 = getelementptr inbounds %struct.dirent, %struct.dirent* %9, i64 0, i32 4, i64 0
  %21 = tail call i64 @strlen(i8* %20) #21
  store i8* %20, i8** %18, align 8
  store i64 %21, i64* %19, align 8
  switch i64 %21, label %36 [
    i64 1, label %22
    i64 2, label %25
  ]

22:                                               ; preds = %16
  %23 = load i8, i8* %20, align 1
  %24 = icmp eq i8 %23, 46
  br i1 %24, label %32, label %36

25:                                               ; preds = %16
  %26 = load i8, i8* %20, align 1
  %27 = icmp eq i8 %26, 46
  br i1 %27, label %28, label %36

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.dirent, %struct.dirent* %9, i64 0, i32 4, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 46
  br i1 %31, label %32, label %36

32:                                               ; preds = %28, %22
  %33 = tail call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6detail28directory_iterator_incrementERNS2_12DirIterStateE(%"struct.llvm::sys::fs::detail::DirIterState"* dereferenceable(96) %0) #22
  %34 = extractvalue { i32, %"class.std::__1::error_category"* } %33, 0
  %35 = extractvalue { i32, %"class.std::__1::error_category"* } %33, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #20
  br label %49

36:                                               ; preds = %16, %22, %28, %25
  %37 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 2
  %38 = bitcast %"class.llvm::Twine"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #20
  %39 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 2
  store i8 5, i8* %39, align 8
  %40 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 3
  store i8 1, i8* %40, align 1
  %41 = bitcast %"class.llvm::Twine"* %3 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %2, %"class.llvm::StringRef"** %41, align 8
  %42 = getelementptr inbounds %"class.llvm::sys::fs::file_status", %"class.llvm::sys::fs::file_status"* %4, i64 0, i32 8
  %43 = bitcast %"class.llvm::sys::fs::file_status"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 52, i1 false) #20
  store i32 65535, i32* %42, align 4
  call void @_ZN4llvm3sys2fs15directory_entry16replace_filenameERKNS_5TwineENS1_11file_statusE(%"class.llvm::sys::fs::directory_entry"* %37, %"class.llvm::Twine"* nonnull dereferenceable(24) %3, %"class.llvm::sys::fs::file_status"* nonnull byval(%"class.llvm::sys::fs::file_status") align 8 %4) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #20
  %44 = call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %49

45:                                               ; preds = %11
  %46 = tail call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6detail27directory_iterator_destructERNS2_12DirIterStateE(%"struct.llvm::sys::fs::detail::DirIterState"* dereferenceable(96) %0) #22
  %47 = extractvalue { i32, %"class.std::__1::error_category"* } %46, 0
  %48 = extractvalue { i32, %"class.std::__1::error_category"* } %46, 1
  br label %49

49:                                               ; preds = %32, %36, %45, %14
  %50 = phi %"class.std::__1::error_category"* [ %48, %45 ], [ %35, %32 ], [ %44, %36 ], [ %15, %14 ]
  %51 = phi i32 [ %47, %45 ], [ %34, %32 ], [ 0, %36 ], [ %12, %14 ]
  %52 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %51, 0
  %53 = insertvalue { i32, %"class.std::__1::error_category"* } %52, %"class.std::__1::error_category"* %50, 1
  ret { i32, %"class.std::__1::error_category"* } %53
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs6detail27directory_iterator_destructERNS2_12DirIterStateE(%"struct.llvm::sys::fs::detail::DirIterState"* nocapture dereferenceable(96)) local_unnamed_addr #0 {
  %2 = alloca [15 x i8], align 8
  %3 = alloca [52 x i8], align 8
  %4 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = inttoptr i64 %5 to %struct.__dirstream*
  %9 = tail call i32 @closedir(%struct.__dirstream* %8) #22
  br label %10

10:                                               ; preds = %1, %7
  store i64 0, i64* %4, align 8
  %11 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %11)
  %12 = getelementptr inbounds [52 x i8], [52 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %12)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 15, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 52, i1 false)
  %13 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 2
  %14 = bitcast %"class.llvm::sys::fs::directory_entry"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.llvm::sys::fs::directory_entry", %"class.llvm::sys::fs::directory_entry"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #25
  br label %21

21:                                               ; preds = %18, %10
  %22 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* null, i8** %22, align 8
  %23 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i64* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %11, i64 15, i1 false)
  %25 = bitcast %"struct.llvm::sys::fs::detail::DirIterState"* %0 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 39
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 2, i32 1
  %28 = bitcast %"class.llvm::sys::fs::file_status"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %12, i64 52, i1 false)
  %29 = getelementptr inbounds %"struct.llvm::sys::fs::detail::DirIterState", %"struct.llvm::sys::fs::detail::DirIterState"* %0, i64 0, i32 2, i32 1, i32 8
  store i32 65535, i32* %29, align 4
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %12)
  %30 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  %31 = insertvalue { i32, %"class.std::__1::error_category"* } { i32 0, %"class.std::__1::error_category"* undef }, %"class.std::__1::error_category"* %30, 1
  ret { i32, %"class.std::__1::error_category"* } %31
}

; Function Attrs: nofree nounwind optsize
declare i32 @closedir(%struct.__dirstream* nocapture) local_unnamed_addr #14

; Function Attrs: optsize
declare %struct.dirent* @readdir64(%struct.__dirstream*) local_unnamed_addr #5

; Function Attrs: nofree optsize
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #10

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @_ZN4llvm3sys2fsL13hasProcSelfFDEv() unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4llvm3sys2fsL13hasProcSelfFDEvE6Result to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %11, !prof !41

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4llvm3sys2fsL13hasProcSelfFDEvE6Result) #20
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = tail call i32 @access(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0), i32 4) #23
  %8 = icmp eq i32 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* @_ZZN4llvm3sys2fsL13hasProcSelfFDEvE6Result, align 1
  %10 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4llvm3sys2fsL13hasProcSelfFDEvE6Result)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4llvm3sys2fsL13hasProcSelfFDEvE6Result) #20
  br label %11

11:                                               ; preds = %3, %6, %0
  %12 = load i8, i8* @_ZZN4llvm3sys2fsL13hasProcSelfFDEvE6Result, align 1, !range !42
  %13 = icmp ne i8 %12, 0
  ret i1 %13
}

; Function Attrs: nofree nounwind optsize
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIcE6appendIPcEEvT_S4_(%"class.llvm::SmallVectorImpl"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %9, %12
  %14 = icmp ugt i64 %6, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %3
  %16 = bitcast %"class.llvm::SmallVectorImpl"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %12, %6
  %19 = sub i64 %18, %17
  %20 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %20, i8* %21, i64 %19, i64 1) #23
  br label %22

22:                                               ; preds = %15, %3
  %23 = icmp eq i8* %1, %2
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = load i8*, i8** %10, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %1, i64 %6, i1 false) #20
  br label %26

26:                                               ; preds = %22, %24
  %27 = load i8*, i8** %10, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %6
  store i8* %28, i8** %10, align 8
  ret void
}

; Function Attrs: nofree nounwind optsize
declare i8* @realpath(i8* nocapture readonly, i8*) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs17getPathFromOpenFDEiRNS_15SmallVectorImplIcEE(i32, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = alloca [64 x i8], align 16
  %4 = alloca %struct.stat, align 8
  %5 = icmp slt i32 %0, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %87

8:                                                ; preds = %2
  %9 = tail call fastcc zeroext i1 @_ZN4llvm3sys2fsL13hasProcSelfFDEv() #22
  br i1 %9, label %12, label %10

10:                                               ; preds = %8
  %11 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %87

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.llvm::SmallVectorImpl"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = icmp ult i64 %18, 4096
  br i1 %19, label %20, label %23

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %21, i8* %22, i64 4096, i64 1) #23
  br label %23

23:                                               ; preds = %12, %20
  %24 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %24) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 64, i1 false)
  %25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %24, i64 64, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i32 %0) #23
  %26 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = load i64, i64* %14, align 8
  %29 = ptrtoint i8* %27 to i64
  %30 = sub i64 %28, %29
  %31 = call i64 @readlink(i8* nonnull %24, i8* %27, i64 %30) #23
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %23
  %34 = tail call i32* @__errno_location() #24
  %35 = load i32, i32* %34, align 4
  %36 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  br label %84

37:                                               ; preds = %23
  %38 = load i64, i64* %14, align 8
  %39 = load i64, i64* %16, align 8
  %40 = sub i64 %38, %39
  %41 = icmp eq i64 %31, %40
  %42 = inttoptr i64 %39 to i8*
  br i1 %41, label %43, label %78

43:                                               ; preds = %37
  %44 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %44) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 144, i1 false)
  %45 = call i32 @lstat64(i8* nonnull %24, %struct.stat* nonnull %4) #23
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.stat, %struct.stat* %4, i64 0, i32 8
  %49 = load i64, i64* %48, align 8
  %50 = add nsw i64 %49, 1
  %51 = load i64, i64* %14, align 8
  %52 = load i64, i64* %16, align 8
  %53 = sub i64 %51, %52
  %54 = icmp ult i64 %53, %50
  %55 = inttoptr i64 %52 to i8*
  br i1 %54, label %56, label %61

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %57, i8* %58, i64 %50, i64 1) #23
  %59 = load i8*, i8** %26, align 8
  %60 = load i64, i64* %14, align 8
  br label %61

61:                                               ; preds = %47, %56
  %62 = phi i64 [ %51, %47 ], [ %60, %56 ]
  %63 = phi i8* [ %55, %47 ], [ %59, %56 ]
  %64 = ptrtoint i8* %63 to i64
  %65 = sub i64 %62, %64
  %66 = call i64 @readlink(i8* nonnull %24, i8* %63, i64 %65) #23
  %67 = icmp slt i64 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %61
  %69 = icmp sgt i64 %66, %49
  br i1 %69, label %73, label %76

70:                                               ; preds = %61, %43
  %71 = tail call i32* @__errno_location() #24
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %70, %68
  %74 = phi i32 [ 36, %68 ], [ %72, %70 ]
  %75 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__116generic_categoryEv() #23
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %44) #20
  br label %84

76:                                               ; preds = %68
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %44) #20
  %77 = load i8*, i8** %26, align 8
  br label %78

78:                                               ; preds = %76, %37
  %79 = phi i8* [ %77, %76 ], [ %42, %37 ]
  %80 = phi i64 [ %66, %76 ], [ %31, %37 ]
  %81 = getelementptr inbounds i8, i8* %79, i64 %80
  %82 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  store i8* %81, i8** %82, align 8
  %83 = tail call dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() #23
  br label %84

84:                                               ; preds = %73, %78, %33
  %85 = phi %"class.std::__1::error_category"* [ %36, %33 ], [ %83, %78 ], [ %75, %73 ]
  %86 = phi i32 [ %35, %33 ], [ 0, %78 ], [ %74, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %24) #20
  br label %87

87:                                               ; preds = %84, %10, %6
  %88 = phi %"class.std::__1::error_category"* [ %7, %6 ], [ %85, %84 ], [ %11, %10 ]
  %89 = phi i32 [ 9, %6 ], [ %86, %84 ], [ 38, %10 ]
  %90 = insertvalue { i32, %"class.std::__1::error_category"* } undef, i32 %89, 0
  %91 = insertvalue { i32, %"class.std::__1::error_category"* } %90, %"class.std::__1::error_category"* %88, 1
  ret { i32, %"class.std::__1::error_category"* } %91
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path14home_directoryERNS_15SmallVectorImplIcEE(%"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %2 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0)) #23
  %3 = icmp eq i8* %2, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.llvm::SmallVectorImpl"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = tail call i64 @strlen(i8* nonnull %2) #21
  %10 = getelementptr inbounds i8, i8* %2, i64 %9
  tail call void @_ZN4llvm15SmallVectorImplIcE6appendIPcEEvT_S4_(%"class.llvm::SmallVectorImpl"* %0, i8* nonnull %2, i8* %10) #22
  br label %11

11:                                               ; preds = %1, %4
  %12 = phi i1 [ true, %4 ], [ false, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm3sys4path21system_temp_directoryEbRNS_15SmallVectorImplIcEE(i1 zeroext, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = alloca [4 x i8*], align 16
  %4 = bitcast %"class.llvm::SmallVectorImpl"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  store i64 %5, i64* %7, align 8
  br i1 %0, label %8, label %30

8:                                                ; preds = %2
  %9 = bitcast [4 x i8*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %9, i8* align 16 bitcast ([4 x i8*]* @__const._ZN4llvm3sys4pathL13getEnvTempDirEv.EnvironmentVariables to i8*), i64 32, i1 false) #20
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* %3, i64 0, i64 4
  %11 = call i8* @getenv(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0)) #23
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #20
  br label %26

14:                                               ; preds = %8
  %15 = getelementptr inbounds [4 x i8*], [4 x i8*]* %3, i64 0, i64 1
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi i8** [ %21, %16 ], [ %15, %14 ]
  %18 = load i8*, i8** %17, align 8
  %19 = call i8* @getenv(i8* %18) #23
  %20 = icmp ne i8* %19, null
  %21 = getelementptr inbounds i8*, i8** %17, i64 1
  %22 = icmp eq i8** %21, %10
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %16

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #20
  %25 = icmp eq i8* %19, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %13, %24
  %27 = phi i8* [ %11, %13 ], [ %19, %24 ]
  %28 = call i64 @strlen(i8* nonnull %27) #21
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl"* %1, i8* nonnull %27, i8* %29) #22
  br label %31

30:                                               ; preds = %24, %2
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 4)) #22
  br label %31

31:                                               ; preds = %26, %30
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm3sys4path20user_cache_directoryERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_(%"class.llvm::SmallVectorImpl"* dereferenceable(32), %"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #0 {
  %5 = alloca %"class.llvm::Twine", align 8
  %6 = alloca %"class.llvm::Twine", align 8
  %7 = alloca %"class.llvm::Twine", align 8
  %8 = alloca %"class.llvm::Twine", align 8
  %9 = alloca %"class.llvm::Twine", align 8
  %10 = tail call i8* @getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #23
  %11 = icmp eq i8* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.llvm::SmallVectorImpl"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = tail call i64 @strlen(i8* nonnull %10) #21
  %18 = getelementptr inbounds i8, i8* %10, i64 %17
  tail call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl"* %0, i8* nonnull %10, i8* %18) #23
  br label %35

19:                                               ; preds = %4
  %20 = tail call zeroext i1 @_ZN4llvm3sys4path14home_directoryERNS_15SmallVectorImplIcEE(%"class.llvm::SmallVectorImpl"* dereferenceable(32) %0) #23
  br i1 %20, label %21, label %39

21:                                               ; preds = %19
  %22 = bitcast %"class.llvm::Twine"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #20
  %23 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 3
  store i8 1, i8* %23, align 1
  %24 = bitcast %"class.llvm::Twine"* %5 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0), i8** %24, align 8
  %25 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %5, i64 0, i32 2
  store i8 3, i8* %25, align 8
  %26 = bitcast %"class.llvm::Twine"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #20
  %27 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 3
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 2
  store i8 1, i8* %28, align 8
  %29 = bitcast %"class.llvm::Twine"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #20
  %30 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %7, i64 0, i32 3
  store i8 1, i8* %30, align 1
  %31 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %7, i64 0, i32 2
  store i8 1, i8* %31, align 8
  %32 = bitcast %"class.llvm::Twine"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #20
  %33 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 3
  store i8 1, i8* %33, align 1
  %34 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 2
  store i8 1, i8* %34, align 8
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* dereferenceable(32) %0, %"class.llvm::Twine"* nonnull dereferenceable(24) %5, %"class.llvm::Twine"* nonnull dereferenceable(24) %6, %"class.llvm::Twine"* nonnull dereferenceable(24) %7, %"class.llvm::Twine"* nonnull dereferenceable(24) %8) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #20
  br label %35

35:                                               ; preds = %21, %12
  %36 = bitcast %"class.llvm::Twine"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #20
  %37 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 3
  store i8 1, i8* %37, align 1
  %38 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 2
  store i8 1, i8* %38, align 8
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl"* dereferenceable(32) %0, %"class.llvm::Twine"* dereferenceable(24) %1, %"class.llvm::Twine"* dereferenceable(24) %2, %"class.llvm::Twine"* dereferenceable(24) %3, %"class.llvm::Twine"* nonnull dereferenceable(24) %9) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #20
  br label %39

39:                                               ; preds = %19, %35
  %40 = phi i1 [ true, %35 ], [ false, %19 ]
  ret i1 %40
}

; Function Attrs: nofree nounwind optsize readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #15

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm5Twine18getSingleStringRefEv(%"class.llvm::Twine"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %4 [
    i8 1, label %44
    i8 3, label %5
    i8 4, label %11
    i8 5, label %26
    i8 6, label %34
  ]

4:                                                ; preds = %1
  unreachable

5:                                                ; preds = %1
  %6 = bitcast %"class.llvm::Twine"* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %44, label %9

9:                                                ; preds = %5
  %10 = tail call i64 @strlen(i8* nonnull %7) #21
  br label %44

11:                                               ; preds = %1
  %12 = bitcast %"class.llvm::Twine"* %0 to %"class.std::__1::basic_string"**
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %21 = select i1 %17, i8* %19, i8* %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  br label %44

26:                                               ; preds = %1
  %27 = bitcast %"class.llvm::Twine"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast i8* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %28, i64 8
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  br label %44

34:                                               ; preds = %1
  %35 = bitcast %"class.llvm::Twine"* %0 to %"class.llvm::SmallVectorTemplateCommon"**
  %36 = load %"class.llvm::SmallVectorTemplateCommon"*, %"class.llvm::SmallVectorTemplateCommon"** %35, align 8
  %37 = getelementptr inbounds %"class.llvm::SmallVectorTemplateCommon", %"class.llvm::SmallVectorTemplateCommon"* %36, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.llvm::SmallVectorTemplateCommon", %"class.llvm::SmallVectorTemplateCommon"* %36, i64 0, i32 0, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = ptrtoint i8* %38 to i64
  %43 = sub i64 %41, %42
  br label %44

44:                                               ; preds = %9, %5, %1, %34, %26, %11
  %45 = phi i8* [ %38, %34 ], [ %30, %26 ], [ %21, %11 ], [ null, %1 ], [ null, %5 ], [ %7, %9 ]
  %46 = phi i64 [ %43, %34 ], [ %33, %26 ], [ %25, %11 ], [ 0, %1 ], [ 0, %5 ], [ %10, %9 ]
  %47 = insertvalue { i8*, i64 } undef, i8* %45, 0
  %48 = insertvalue { i8*, i64 } %47, i64 %46, 1
  ret { i8*, i64 } %48
}

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind optsize
declare dereferenceable(8) %"class.std::__1::error_category"* @_ZNSt3__115system_categoryEv() local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.llvm::SmallVectorImpl"* @_ZN4llvm15SmallVectorImplIcEaSERKS1_(%"class.llvm::SmallVectorImpl"*, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.llvm::SmallVectorImpl"* %0, %1
  br i1 %3, label %55, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.llvm::SmallVectorImpl"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.llvm::SmallVectorImpl"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = icmp ult i64 %16, %10
  %18 = inttoptr i64 %15 to i8*
  %19 = inttoptr i64 %9 to i8*
  br i1 %17, label %24, label %20

20:                                               ; preds = %4
  %21 = icmp eq i64 %10, 0
  br i1 %21, label %53, label %22

22:                                               ; preds = %20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 %10, i1 false) #20
  %23 = getelementptr inbounds i8, i8* %18, i64 %10
  br label %53

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %15
  %29 = icmp ult i64 %28, %10
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  store i64 %15, i64* %12, align 8
  %31 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %31, i8* %32, i64 %10, i64 1) #23
  br label %36

33:                                               ; preds = %24
  %34 = icmp eq i64 %16, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %33
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 %16, i1 false) #20
  br label %36

36:                                               ; preds = %35, %33, %30
  %37 = phi i64 [ 0, %30 ], [ 0, %33 ], [ %16, %35 ]
  %38 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %37
  %41 = load i8*, i8** %5, align 8
  %42 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = icmp eq i8* %40, %41
  br i1 %43, label %50, label %44

44:                                               ; preds = %36
  %45 = load i8*, i8** %42, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %37
  %47 = ptrtoint i8* %41 to i64
  %48 = ptrtoint i8* %40 to i64
  %49 = sub i64 %47, %48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %40, i64 %49, i1 false) #20
  br label %50

50:                                               ; preds = %36, %44
  %51 = load i8*, i8** %42, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %10
  br label %53

53:                                               ; preds = %22, %20, %50
  %54 = phi i8* [ %52, %50 ], [ %23, %22 ], [ %18, %20 ]
  store i8* %54, i8** %11, align 8
  br label %55

55:                                               ; preds = %53, %2
  ret %"class.llvm::SmallVectorImpl"* %0
}

; Function Attrs: optsize
declare i32 @_ZN4llvm3sys7Process15GetRandomNumberEv() local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i32 @_ZN4llvm3sys2fsL8test_dirEPcPKcS4_(i8*, i8*, i8*) unnamed_addr #0 {
  %4 = alloca %struct.stat, align 8
  %5 = alloca [4096 x i8], align 16
  %6 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %6) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 144, i1 false)
  %7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %7) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 4096, i1 false)
  %8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %7, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), i8* %1, i8* %2) #23
  %9 = call i8* @realpath(i8* nonnull %7, i8* %0) #23
  %10 = icmp eq i8* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = call i32 @stat64(i8* nonnull %7, %struct.stat* nonnull %4) #23
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %11, %3
  %16 = phi i32 [ 1, %3 ], [ %14, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %7) #20
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %6) #20
  ret i32 %16
}

; Function Attrs: nofree nounwind optsize readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #15

; Function Attrs: nofree nounwind optsize
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #14

; Function Attrs: nounwind optsize
declare i8* @strsep(i8**, i8*) local_unnamed_addr #13

; Function Attrs: nounwind optsize
declare i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64) local_unnamed_addr #13

; Function Attrs: nounwind optsize
declare i64 @_ZNSt3__16chrono12system_clock9to_time_tERKNS0_10time_pointIS1_NS0_8durationIxNS_5ratioILl1ELl1000000EEEEEEE(%"class.std::__1::chrono::time_point.23"* dereferenceable(8)) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #17

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #17

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #18

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #19

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind optsize readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind }
attributes #18 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree nounwind readonly }
attributes #20 = { nounwind }
attributes #21 = { nounwind optsize readonly }
attributes #22 = { optsize }
attributes #23 = { nounwind optsize }
attributes #24 = { nounwind optsize readnone }
attributes #25 = { builtin nounwind optsize }
attributes #26 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4llvm3sys4path6rbeginENS_9StringRefE: argument 0"}
!5 = distinct !{!5, !"_ZN4llvm3sys4path6rbeginENS_9StringRefE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4llvm3sys4path6rbeginENS_9StringRefE: argument 0"}
!8 = distinct !{!8, !"_ZN4llvm3sys4path6rbeginENS_9StringRefE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4llvm3sys4path6rbeginENS_9StringRefE: argument 0"}
!11 = distinct !{!11, !"_ZN4llvm3sys4path6rbeginENS_9StringRefE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4llvm3sys4path6rbeginENS_9StringRefE: argument 0"}
!14 = distinct !{!14, !"_ZN4llvm3sys4path6rbeginENS_9StringRefE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN4llvm3sys4pathL11remove_dotsENS_9StringRefEb: argument 0"}
!17 = distinct !{!17, !"_ZN4llvm3sys4pathL11remove_dotsENS_9StringRefEb"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!20 = distinct !{!20, !"_ZNK4llvm5Twine6concatERKS0_"}
!21 = distinct !{!21, !22, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!22 = distinct !{!22, !"_ZN4llvmplERKNS_5TwineES2_"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!25 = distinct !{!25, !"_ZNK4llvm5Twine6concatERKS0_"}
!26 = distinct !{!26, !27, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!27 = distinct !{!27, !"_ZN4llvmplERKNS_5TwineES2_"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!30 = distinct !{!30, !"_ZNK4llvm5Twine6concatERKS0_"}
!31 = distinct !{!31, !32, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!32 = distinct !{!32, !"_ZN4llvmplERKNS_5TwineES2_"}
!33 = !{!34, !36}
!34 = distinct !{!34, !35, !"_ZNK4llvm9StringRef3strEv: argument 0"}
!35 = distinct !{!35, !"_ZNK4llvm9StringRef3strEv"}
!36 = distinct !{!36, !37, !"_ZNK4llvm9StringRefcvNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4llvm9StringRefcvNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK4llvm9StringRef3strEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4llvm9StringRef3strEv"}
!41 = !{!"branch_weights", i32 1, i32 1048575}
!42 = !{i8 0, i8 2}
