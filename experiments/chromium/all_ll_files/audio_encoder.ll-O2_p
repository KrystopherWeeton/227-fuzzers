; ModuleID = '../../content/browser/speech/audio_encoder.cc'
source_filename = "../../content/browser/speech/audio_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::AudioEncoder" = type <{ %"class.content::AudioBuffer", %struct.FLAC__StreamEncoder*, i8, [7 x i8] }>
%"class.content::AudioBuffer" = type <{ %"class.base::circular_deque", i32, [4 x i8] }>
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %class.scoped_refptr*, i64 }
%class.scoped_refptr = type { %"class.content::AudioChunk"* }
%"class.content::AudioChunk" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.FLAC__StreamEncoder = type { %struct.FLAC__StreamEncoderProtected*, %struct.FLAC__StreamEncoderPrivate* }
%struct.FLAC__StreamEncoderProtected = type opaque
%struct.FLAC__StreamEncoderPrivate = type opaque
%struct.FLAC__StreamMetadata = type { i32, i32, i32, %union.anon.2 }
%union.anon.2 = type { %struct.FLAC__StreamMetadata_CueSheet }
%struct.FLAC__StreamMetadata_CueSheet = type { [129 x i8], i64, i32, i32, %struct.FLAC__StreamMetadata_CueSheet_Track* }
%struct.FLAC__StreamMetadata_CueSheet_Track = type { i64, i8, [13 x i8], i8, i8, %struct.FLAC__StreamMetadata_CueSheet_Index* }
%struct.FLAC__StreamMetadata_CueSheet_Index = type { i64, i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN7content12_GLOBAL__N_116kContentTypeFLACE = internal unnamed_addr constant [20 x i8] c"audio/x-flac; rate=\00", align 16

@_ZN7content12AudioEncoderC1Eii = hidden unnamed_addr alias void (%"class.content::AudioEncoder"*, i32, i32), void (%"class.content::AudioEncoder"*, i32, i32)* @_ZN7content12AudioEncoderC2Eii
@_ZN7content12AudioEncoderD1Ev = hidden unnamed_addr alias void (%"class.content::AudioEncoder"*), void (%"class.content::AudioEncoder"*)* @_ZN7content12AudioEncoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content12AudioEncoderC2Eii(%"class.content::AudioEncoder"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 0
  tail call void @_ZN7content11AudioBufferC1Ei(%"class.content::AudioBuffer"* %4, i32 1) #7
  %5 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 1
  %6 = tail call %struct.FLAC__StreamEncoder* @FLAC__stream_encoder_new() #7
  store %struct.FLAC__StreamEncoder* %6, %struct.FLAC__StreamEncoder** %5, align 8
  %7 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 8
  %8 = tail call i32 @FLAC__stream_encoder_set_channels(%struct.FLAC__StreamEncoder* %6, i32 1) #7
  %9 = load %struct.FLAC__StreamEncoder*, %struct.FLAC__StreamEncoder** %5, align 8
  %10 = tail call i32 @FLAC__stream_encoder_set_bits_per_sample(%struct.FLAC__StreamEncoder* %9, i32 %2) #7
  %11 = load %struct.FLAC__StreamEncoder*, %struct.FLAC__StreamEncoder** %5, align 8
  %12 = tail call i32 @FLAC__stream_encoder_set_sample_rate(%struct.FLAC__StreamEncoder* %11, i32 %1) #7
  %13 = load %struct.FLAC__StreamEncoder*, %struct.FLAC__StreamEncoder** %5, align 8
  %14 = tail call i32 @FLAC__stream_encoder_set_compression_level(%struct.FLAC__StreamEncoder* %13, i32 0) #7
  ret void
}

declare void @_ZN7content11AudioBufferC1Ei(%"class.content::AudioBuffer"*, i32) unnamed_addr #1

declare %struct.FLAC__StreamEncoder* @FLAC__stream_encoder_new() local_unnamed_addr #1

declare i32 @FLAC__stream_encoder_set_channels(%struct.FLAC__StreamEncoder*, i32) local_unnamed_addr #1

declare i32 @FLAC__stream_encoder_set_bits_per_sample(%struct.FLAC__StreamEncoder*, i32) local_unnamed_addr #1

declare i32 @FLAC__stream_encoder_set_sample_rate(%struct.FLAC__StreamEncoder*, i32) local_unnamed_addr #1

declare i32 @FLAC__stream_encoder_set_compression_level(%struct.FLAC__StreamEncoder*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content12AudioEncoderD2Ev(%"class.content::AudioEncoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 1
  %3 = load %struct.FLAC__StreamEncoder*, %struct.FLAC__StreamEncoder** %2, align 8
  tail call void @FLAC__stream_encoder_delete(%struct.FLAC__StreamEncoder* %3) #7
  %4 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 0
  tail call void @_ZN7content11AudioBufferD1Ev(%"class.content::AudioBuffer"* %4) #7
  ret void
}

declare void @FLAC__stream_encoder_delete(%struct.FLAC__StreamEncoder*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7content11AudioBufferD1Ev(%"class.content::AudioBuffer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content12AudioEncoder6EncodeERKNS_10AudioChunkE(%"class.content::AudioEncoder"*, %"class.content::AudioChunk"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32*, align 8
  %4 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 1
  %9 = load %struct.FLAC__StreamEncoder*, %struct.FLAC__StreamEncoder** %8, align 8
  %10 = bitcast %"class.content::AudioEncoder"* %0 to i8*
  %11 = tail call i32 @FLAC__stream_encoder_init_stream(%struct.FLAC__StreamEncoder* %9, i32 (%struct.FLAC__StreamEncoder*, i8*, i64, i32, i32, i8*)* nonnull @_ZN7content12_GLOBAL__N_113WriteCallbackEPK19FLAC__StreamEncoderPKhmjjPv, i32 (%struct.FLAC__StreamEncoder*, i64, i8*)* null, i32 (%struct.FLAC__StreamEncoder*, i64*, i8*)* null, void (%struct.FLAC__StreamEncoder*, %struct.FLAC__StreamMetadata*, i8*)* null, i8* %10) #7
  store i8 1, i8* %4, align 8
  br label %12

12:                                               ; preds = %2, %7
  %13 = tail call i64 @_ZNK7content10AudioChunk10NumSamplesEv(%"class.content::AudioChunk"* %1) #7
  %14 = trunc i64 %13 to i32
  %15 = shl i64 %13, 32
  %16 = ashr exact i64 %15, 32
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %16, i64 4)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #8
  %22 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  %23 = bitcast i32** %3 to i8**
  store i8* %21, i8** %23, align 8
  %24 = icmp sgt i32 %14, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %12
  %26 = bitcast i8* %21 to i32*
  %27 = and i64 %13, 4294967295
  %28 = tail call signext i16 @_ZNK7content10AudioChunk11GetSample16Em(%"class.content::AudioChunk"* %1, i64 0) #7
  %29 = sext i16 %28 to i32
  store i32 %29, i32* %26, align 4
  %30 = icmp eq i64 %27, 1
  br i1 %30, label %31, label %35

31:                                               ; preds = %35, %25, %12
  %32 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 1
  %33 = load %struct.FLAC__StreamEncoder*, %struct.FLAC__StreamEncoder** %32, align 8
  %34 = call i32 @FLAC__stream_encoder_process(%struct.FLAC__StreamEncoder* %33, i32** nonnull %3, i32 %14) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  call void @_ZdaPv(i8* nonnull %21) #8
  ret void

35:                                               ; preds = %25, %35
  %36 = phi i64 [ %41, %35 ], [ 1, %25 ]
  %37 = load i32*, i32** %3, align 8
  %38 = tail call signext i16 @_ZNK7content10AudioChunk11GetSample16Em(%"class.content::AudioChunk"* %1, i64 %36) #7
  %39 = sext i16 %38 to i32
  %40 = getelementptr inbounds i32, i32* %37, i64 %36
  store i32 %39, i32* %40, align 4
  %41 = add nuw nsw i64 %36, 1
  %42 = icmp eq i64 %41, %27
  br i1 %42, label %31, label %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i32 @FLAC__stream_encoder_init_stream(%struct.FLAC__StreamEncoder*, i32 (%struct.FLAC__StreamEncoder*, i8*, i64, i32, i32, i8*)*, i32 (%struct.FLAC__StreamEncoder*, i64, i8*)*, i32 (%struct.FLAC__StreamEncoder*, i64*, i8*)*, void (%struct.FLAC__StreamEncoder*, %struct.FLAC__StreamMetadata*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN7content12_GLOBAL__N_113WriteCallbackEPK19FLAC__StreamEncoderPKhmjjPv(%struct.FLAC__StreamEncoder* nocapture readnone, i8*, i64, i32, i32, i8*) #0 {
  %7 = bitcast i8* %5 to %"class.content::AudioBuffer"*
  tail call void @_ZN7content11AudioBuffer7EnqueueEPKhm(%"class.content::AudioBuffer"* %7, i8* %1, i64 %2) #7
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare i64 @_ZNK7content10AudioChunk10NumSamplesEv(%"class.content::AudioChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

declare signext i16 @_ZNK7content10AudioChunk11GetSample16Em(%"class.content::AudioChunk"*, i64) local_unnamed_addr #1

declare i32 @FLAC__stream_encoder_process(%struct.FLAC__StreamEncoder*, i32**, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content12AudioEncoder5FlushEv(%"class.content::AudioEncoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 1
  %3 = load %struct.FLAC__StreamEncoder*, %struct.FLAC__StreamEncoder** %2, align 8
  %4 = tail call i32 @FLAC__stream_encoder_finish(%struct.FLAC__StreamEncoder* %3) #7
  ret void
}

declare i32 @FLAC__stream_encoder_finish(%struct.FLAC__StreamEncoder*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::AudioChunk"* @_ZN7content12AudioEncoder22GetEncodedDataAndClearEv(%"class.content::AudioEncoder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 0
  %3 = tail call %"class.content::AudioChunk"* @_ZN7content11AudioBuffer10DequeueAllEv(%"class.content::AudioBuffer"* %2) #7
  ret %"class.content::AudioChunk"* %3
}

declare %"class.content::AudioChunk"* @_ZN7content11AudioBuffer10DequeueAllEv(%"class.content::AudioBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content12AudioEncoder11GetMimeTypeEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.content::AudioEncoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 19, i8* %7, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 16 getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN7content12_GLOBAL__N_116kContentTypeFLACE, i64 0, i64 0), i64 19, i1 false) #7
  %8 = getelementptr inbounds i8, i8* %5, i64 19
  store i8 0, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %1, i64 0, i32 1
  %11 = load %struct.FLAC__StreamEncoder*, %struct.FLAC__StreamEncoder** %10, align 8
  %12 = tail call i32 @FLAC__stream_encoder_get_sample_rate(%struct.FLAC__StreamEncoder* %11) #7
  call void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* nonnull sret %4, i32 %12) #7
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !noalias !3
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !3
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !3
  %21 = zext i8 %15 to i64
  %22 = select i1 %16, i8* %18, i8* %9
  %23 = select i1 %16, i64 %20, i64 %21
  %24 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %22, i64 %23) #7, !noalias !3
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #7, !noalias !3
  %27 = load i8, i8* %14, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %2
  %30 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %30) #8
  br label %31

31:                                               ; preds = %2, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7
  %32 = load i8, i8* %7, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #8
  br label %37

37:                                               ; preds = %31, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret void
}

declare void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare i32 @FLAC__stream_encoder_get_sample_rate(%struct.FLAC__StreamEncoder*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content12AudioEncoder16GetBitsPerSampleEv(%"class.content::AudioEncoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::AudioEncoder", %"class.content::AudioEncoder"* %0, i64 0, i32 1
  %3 = load %struct.FLAC__StreamEncoder*, %struct.FLAC__StreamEncoder** %2, align 8
  %4 = tail call i32 @FLAC__stream_encoder_get_bits_per_sample(%struct.FLAC__StreamEncoder* %3) #7
  ret i32 %4
}

declare i32 @FLAC__stream_encoder_get_bits_per_sample(%struct.FLAC__StreamEncoder*) local_unnamed_addr #1

declare void @_ZN7content11AudioBuffer7EnqueueEPKhm(%"class.content::AudioBuffer"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
