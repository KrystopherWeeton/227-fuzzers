; ModuleID = '../../third_party/webrtc/media/sctp/sctp_transport_factory.cc'
source_filename = "../../third_party/webrtc/media/sctp/sctp_transport_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cricket::SctpTransportFactory" = type { %"class.webrtc::SctpTransportFactoryInterface", %"class.rtc::Thread"*, %"class.webrtc::FieldTrialFlag" }
%"class.webrtc::SctpTransportFactoryInterface" = type { i32 (...)** }
%"class.webrtc::FieldTrialFlag" = type { %"class.webrtc::FieldTrialParameterInterface.base", i8, [6 x i8] }
%"class.webrtc::FieldTrialParameterInterface.base" = type <{ i32 (...)**, %"class.std::__1::vector.20", %"class.std::__1::basic_string", i8 }>
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.webrtc::FieldTrialParameterInterface"**, %"class.webrtc::FieldTrialParameterInterface"**, %"class.std::__1::__compressed_pair.22" }
%"class.webrtc::FieldTrialParameterInterface" = type <{ i32 (...)**, %"class.std::__1::vector.20", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.webrtc::FieldTrialParameterInterface"** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rtc::Thread" = type <{ %"class.webrtc::TaskQueueBase", i8, [7 x i8], %"struct.rtc::Message", %"class.std::__1::list", %"class.rtc::Thread::PriorityQueue", i32, [4 x i8], %"class.rtc::RecursiveCriticalSection", i8, i8, [2 x i8], i32, %"class.rtc::SocketServer"*, %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", i64, i8, i8, [6 x i8], %"class.rtc::Thread::QueuedTaskHandler", %"class.std::__1::unique_ptr.14", i32, [4 x i8] }>
%"class.webrtc::TaskQueueBase" = type { i32 (...)** }
%"struct.rtc::Message" = type { %"class.rtc::Location", %"class.rtc::MessageHandler"*, i32, %"class.rtc::MessageData"* }
%"class.rtc::Location" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.rtc::MessageHandler" = type { i32 (...)** }
%"class.rtc::MessageData" = type { i32 (...)** }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.rtc::Thread::PriorityQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector", %"struct.std::__1::less" }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.rtc::Thread::DelayedMessage"*, %"class.rtc::Thread::DelayedMessage"*, %"class.std::__1::__compressed_pair.1" }
%"class.rtc::Thread::DelayedMessage" = type { i64, i64, i32, %"struct.rtc::Message" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.rtc::Thread::DelayedMessage"* }
%"struct.std::__1::less" = type { i8 }
%"class.rtc::RecursiveCriticalSection" = type <{ %union.pthread_mutex_t, i64, i32, [4 x i8] }>
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.rtc::SocketServer" = type { %"class.rtc::SocketFactory", %"class.rtc::NetworkBinderInterface"* }
%"class.rtc::SocketFactory" = type { i32 (...)** }
%"class.rtc::NetworkBinderInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.rtc::SocketServer"* }
%"class.rtc::Thread::QueuedTaskHandler" = type { %"class.rtc::MessageHandler" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter"* }
%"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter" = type { %"class.webrtc::TaskQueueBase"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.cricket::SctpTransportInternal" = type { i32 (...)**, %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy.37", %"class.sigslot::signal_with_thread_policy.39", %"class.sigslot::signal_with_thread_policy.39", %"class.sigslot::signal_with_thread_policy" }
%"class.sigslot::signal_with_thread_policy.37" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list.30", %"class.std::__1::__list_iterator", i8 }>
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::list.30" = type { %"class.std::__1::__list_imp.31" }
%"class.std::__1::__list_imp.31" = type { %"struct.std::__1::__list_node_base.32", %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::__list_node_base.32" = type { %"struct.std::__1::__list_node_base.32"*, %"struct.std::__1::__list_node_base.32"* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base.32"* }
%"class.sigslot::signal_with_thread_policy.39" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.rtc::PacketTransportInternal" = type { %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy.53", %"class.sigslot::signal_with_thread_policy.53", %"class.sigslot::signal_with_thread_policy.53", %"class.sigslot::signal_with_thread_policy.55", %"class.sigslot::signal_with_thread_policy.57", %"class.sigslot::signal_with_thread_policy.59", %"class.sigslot::signal_with_thread_policy.53" }
%"class.sigslot::has_slots" = type { %"class.sigslot::has_slots_interface", %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.sigslot::signal_with_thread_policy.55" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.57" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.59" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.53" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.webrtc::DcSctpTransport" = type <{ %"class.cricket::SctpTransportInternal", %"class.dcsctp::DcSctpSocketCallbacks", %"class.sigslot::has_slots", %"class.rtc::Thread"*, %"class.rtc::PacketTransportInternal"*, %"class.webrtc::Clock"*, %"class.webrtc::Random", %"class.dcsctp::TaskQueueTimeoutFactory", %"class.std::__1::unique_ptr.67", %"class.std::__1::basic_string", %"class.rtc::CopyOnWriteBuffer", i8, [7 x i8] }>
%"class.dcsctp::DcSctpSocketCallbacks" = type { i32 (...)** }
%"class.webrtc::Clock" = type { i32 (...)** }
%"class.webrtc::Random" = type { i64 }
%"class.dcsctp::TaskQueueTimeoutFactory" = type { %"class.webrtc::TaskQueueBase"*, %"class.std::__1::function", %"class.std::__1::function.61" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i64 (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::function.61" = type { %"class.std::__1::__function::__policy_func.64" }
%"class.std::__1::__function::__policy_func.64" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.65", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.65" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.dcsctp::StrongAlias.66"*)* }
%"class.dcsctp::StrongAlias.66" = type { i64 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.dcsctp::DcSctpSocketInterface"* }
%"class.dcsctp::DcSctpSocketInterface" = type { i32 (...)** }
%"class.rtc::CopyOnWriteBuffer" = type { %"class.rtc::scoped_refptr", i64, i64 }
%"class.rtc::scoped_refptr" = type { %"class.rtc::FinalRefCountedObject"* }
%"class.rtc::FinalRefCountedObject" = type <{ %"class.rtc::BufferT", %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i8* }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cricket::UsrsctpTransport" = type { %"class.cricket::SctpTransportInternal", %"class.sigslot::has_slots", %"class.rtc::Thread"*, %"class.webrtc::ScopedTaskSafety", %"class.rtc::PacketTransportInternal"*, %"class.rtc::CopyOnWriteBuffer", %"struct.cricket::ReceiveDataParams", i32, %"class.absl::optional", i8, i32, i32, i32, %struct.socket*, i8, i8, %"class.std::__1::map", i8*, %"class.absl::optional.82", %"class.absl::optional.82", i64 }
%"class.webrtc::ScopedTaskSafety" = type { %"class.rtc::scoped_refptr.80" }
%"class.rtc::scoped_refptr.80" = type { %"class.webrtc::PendingTaskSafetyFlag"* }
%"class.webrtc::PendingTaskSafetyFlag" = type <{ %"class.rtc::RefCountedNonVirtual", i8, [3 x i8] }>
%"class.rtc::RefCountedNonVirtual" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"struct.cricket::ReceiveDataParams" = type { i32, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"class.cricket::UsrsctpTransport::OutgoingMessage" }
%"class.cricket::UsrsctpTransport::OutgoingMessage" = type { %"class.rtc::CopyOnWriteBuffer", i32, %"struct.webrtc::SendDataParams", i64 }
%"struct.webrtc::SendDataParams" = type { i32, i8, %"class.absl::optional.82", %"class.absl::optional.82" }
%struct.socket = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.89" }
%"class.std::__1::__tree.89" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.absl::optional.82" = type { %"class.absl::optional_internal::optional_data.83" }
%"class.absl::optional_internal::optional_data.83" = type { %"class.absl::optional_internal::optional_data_base.84" }
%"class.absl::optional_internal::optional_data_base.84" = type { %"class.absl::optional_internal::optional_data_dtor_base.85" }
%"class.absl::optional_internal::optional_data_dtor_base.85" = type { i8, %union.anon.86 }
%union.anon.86 = type { i32 }

$_ZN7cricket20SctpTransportFactoryD2Ev = comdat any

$_ZN7cricket20SctpTransportFactoryD0Ev = comdat any

@_ZTVN7cricket20SctpTransportFactoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cricket::SctpTransportFactory"*)* @_ZN7cricket20SctpTransportFactoryD2Ev to i8*), i8* bitcast (void (%"class.cricket::SctpTransportFactory"*)* @_ZN7cricket20SctpTransportFactoryD0Ev to i8*), i8* bitcast (%"class.cricket::SctpTransportInternal"* (%"class.cricket::SctpTransportFactory"*, %"class.rtc::PacketTransportInternal"*)* @_ZN7cricket20SctpTransportFactory19CreateSctpTransportEPN3rtc23PacketTransportInternalE to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"WebRTC-DataChannel-Dcsctp\00", align 1

@_ZN7cricket20SctpTransportFactoryC1EPN3rtc6ThreadE = hidden unnamed_addr alias void (%"class.cricket::SctpTransportFactory"*, %"class.rtc::Thread"*), void (%"class.cricket::SctpTransportFactory"*, %"class.rtc::Thread"*)* @_ZN7cricket20SctpTransportFactoryC2EPN3rtc6ThreadE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket20SctpTransportFactoryC2EPN3rtc6ThreadE(%"class.cricket::SctpTransportFactory"*, %"class.rtc::Thread"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca [1 x %"class.webrtc::FieldTrialParameterInterface"*], align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.cricket::SctpTransportFactory", %"class.cricket::SctpTransportFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7cricket20SctpTransportFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.cricket::SctpTransportFactory", %"class.cricket::SctpTransportFactory"* %0, i64 0, i32 1
  store %"class.rtc::Thread"* %1, %"class.rtc::Thread"** %8, align 8
  %9 = getelementptr inbounds %"class.cricket::SctpTransportFactory", %"class.cricket::SctpTransportFactory"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 7, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7, i1 false) #7
  %13 = getelementptr inbounds i8, i8* %12, i64 7
  store i8 0, i8* %13, align 1
  call void @_ZN6webrtc14FieldTrialFlagC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.webrtc::FieldTrialFlag"* %9, %"class.std::__1::basic_string"* nonnull %3, i1 zeroext false) #7
  %14 = load i8, i8* %11, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %2, %16
  %20 = bitcast [1 x %"class.webrtc::FieldTrialParameterInterface"*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  %21 = getelementptr inbounds [1 x %"class.webrtc::FieldTrialParameterInterface"*], [1 x %"class.webrtc::FieldTrialParameterInterface"*]* %4, i64 0, i64 0
  %22 = bitcast [1 x %"class.webrtc::FieldTrialParameterInterface"*]* %4 to %"class.webrtc::FieldTrialFlag"**
  store %"class.webrtc::FieldTrialFlag"* %9, %"class.webrtc::FieldTrialFlag"** %22, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #7
  %24 = call i8* @_Znwm(i64 32) #8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %27, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i64 25, i1 false) #7
  %28 = getelementptr inbounds i8, i8* %24, i64 25
  store i8 0, i8* %28, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #7
  call void @_ZN6webrtc15ParseFieldTrialESt16initializer_listIPNS_28FieldTrialParameterInterfaceEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"** nonnull %21, i64 1, %"class.std::__1::basic_string"* nonnull %5) #7
  %29 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #8
  br label %36

36:                                               ; preds = %19, %33
  %37 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  %42 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %42) #8
  br label %43

43:                                               ; preds = %36, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  ret void
}

declare void @_ZN6webrtc14FieldTrialFlagC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.webrtc::FieldTrialFlag"*, %"class.std::__1::basic_string"*, i1 zeroext) unnamed_addr #1

declare void @_ZN6webrtc15ParseFieldTrialESt16initializer_listIPNS_28FieldTrialParameterInterfaceEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"**, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cricket::SctpTransportInternal"* @_ZN7cricket20SctpTransportFactory19CreateSctpTransportEPN3rtc23PacketTransportInternalE(%"class.cricket::SctpTransportFactory"*, %"class.rtc::PacketTransportInternal"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::SctpTransportFactory", %"class.cricket::SctpTransportFactory"* %0, i64 0, i32 2
  %4 = tail call zeroext i1 @_ZNK6webrtc14FieldTrialFlag3GetEv(%"class.webrtc::FieldTrialFlag"* %3) #7
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = tail call i8* @_Znwm(i64 576) #8
  %7 = bitcast i8* %6 to %"class.webrtc::DcSctpTransport"*
  %8 = getelementptr inbounds %"class.cricket::SctpTransportFactory", %"class.cricket::SctpTransportFactory"* %0, i64 0, i32 1
  %9 = load %"class.rtc::Thread"*, %"class.rtc::Thread"** %8, align 8
  %10 = tail call %"class.webrtc::Clock"* @_ZN6webrtc5Clock16GetRealTimeClockEv() #7
  tail call void @_ZN6webrtc15DcSctpTransportC1EPN3rtc6ThreadEPNS1_23PacketTransportInternalEPNS_5ClockE(%"class.webrtc::DcSctpTransport"* nonnull %7, %"class.rtc::Thread"* %9, %"class.rtc::PacketTransportInternal"* %1, %"class.webrtc::Clock"* %10) #7
  br label %16

11:                                               ; preds = %2
  %12 = tail call i8* @_Znwm(i64 624) #8
  %13 = bitcast i8* %12 to %"class.cricket::UsrsctpTransport"*
  %14 = getelementptr inbounds %"class.cricket::SctpTransportFactory", %"class.cricket::SctpTransportFactory"* %0, i64 0, i32 1
  %15 = load %"class.rtc::Thread"*, %"class.rtc::Thread"** %14, align 8
  tail call void @_ZN7cricket16UsrsctpTransportC1EPN3rtc6ThreadEPNS1_23PacketTransportInternalE(%"class.cricket::UsrsctpTransport"* nonnull %13, %"class.rtc::Thread"* %15, %"class.rtc::PacketTransportInternal"* %1) #7
  br label %16

16:                                               ; preds = %5, %11
  %17 = phi i8* [ %6, %5 ], [ %12, %11 ]
  %18 = bitcast i8* %17 to %"class.cricket::SctpTransportInternal"*
  ret %"class.cricket::SctpTransportInternal"* %18
}

declare zeroext i1 @_ZNK6webrtc14FieldTrialFlag3GetEv(%"class.webrtc::FieldTrialFlag"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare %"class.webrtc::Clock"* @_ZN6webrtc5Clock16GetRealTimeClockEv() local_unnamed_addr #1

declare void @_ZN6webrtc15DcSctpTransportC1EPN3rtc6ThreadEPNS1_23PacketTransportInternalEPNS_5ClockE(%"class.webrtc::DcSctpTransport"*, %"class.rtc::Thread"*, %"class.rtc::PacketTransportInternal"*, %"class.webrtc::Clock"*) unnamed_addr #1

declare void @_ZN7cricket16UsrsctpTransportC1EPN3rtc6ThreadEPNS1_23PacketTransportInternalE(%"class.cricket::UsrsctpTransport"*, %"class.rtc::Thread"*, %"class.rtc::PacketTransportInternal"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7cricket20SctpTransportFactoryD2Ev(%"class.cricket::SctpTransportFactory"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.cricket::SctpTransportFactory", %"class.cricket::SctpTransportFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7cricket20SctpTransportFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cricket::SctpTransportFactory", %"class.cricket::SctpTransportFactory"* %0, i64 0, i32 2
  %4 = bitcast %"class.webrtc::FieldTrialFlag"* %3 to %"class.webrtc::FieldTrialParameterInterface"*
  tail call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* %4) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7cricket20SctpTransportFactoryD0Ev(%"class.cricket::SctpTransportFactory"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.cricket::SctpTransportFactory", %"class.cricket::SctpTransportFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7cricket20SctpTransportFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cricket::SctpTransportFactory", %"class.cricket::SctpTransportFactory"* %0, i64 0, i32 2
  %4 = bitcast %"class.webrtc::FieldTrialFlag"* %3 to %"class.webrtc::FieldTrialParameterInterface"*
  tail call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* %4) #7
  %5 = bitcast %"class.cricket::SctpTransportFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
