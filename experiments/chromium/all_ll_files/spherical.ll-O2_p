; ModuleID = '../../third_party/ffmpeg/libavutil/spherical.c'
source_filename = "../../third_party/ffmpeg/libavutil/spherical.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVSphericalMapping = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@spherical_projection_names = internal unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [16 x i8] c"equirectangular\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"cubemap\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"tiled equirectangular\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.AVSphericalMapping* @av_spherical_alloc(i64*) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @av_mallocz(i64 36) #4
  %3 = bitcast i8* %2 to %struct.AVSphericalMapping*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = icmp eq i64* %0, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  store i64 36, i64* %0, align 8
  br label %8

8:                                                ; preds = %7, %5, %1
  %9 = phi %struct.AVSphericalMapping* [ null, %1 ], [ %3, %5 ], [ %3, %7 ]
  ret %struct.AVSphericalMapping* %9
}

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av_spherical_tile_bounds(%struct.AVSphericalMapping* nocapture readonly, i64, i64, i64* nocapture, i64* nocapture, i64* nocapture, i64* nocapture) local_unnamed_addr #2 {
  %8 = mul i64 %1, 4294967295
  %9 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = xor i32 %10, -1
  %12 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 %11, %13
  %15 = zext i32 %14 to i64
  %16 = udiv i64 %8, %15
  %17 = mul i64 %2, 4294967295
  %18 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = xor i32 %19, -1
  %21 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %0, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 %20, %22
  %24 = zext i32 %23 to i64
  %25 = udiv i64 %17, %24
  %26 = zext i32 %13 to i64
  %27 = mul i64 %16, %26
  %28 = add i64 %27, 4294967294
  %29 = udiv i64 %28, 4294967295
  store i64 %29, i64* %3, align 8
  %30 = load i32, i32* %21, align 4
  %31 = zext i32 %30 to i64
  %32 = mul i64 %25, %31
  %33 = add i64 %32, 4294967294
  %34 = udiv i64 %33, 4294967295
  store i64 %34, i64* %4, align 8
  %35 = sub i64 %16, %1
  %36 = load i64, i64* %3, align 8
  %37 = sub i64 %35, %36
  store i64 %37, i64* %5, align 8
  %38 = sub i64 %25, %2
  %39 = load i64, i64* %4, align 8
  %40 = sub i64 %38, %39
  store i64 %40, i64* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @av_spherical_projection_name(i32) local_unnamed_addr #3 {
  %2 = icmp ugt i32 %0, 2
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = zext i32 %0 to i64
  %5 = getelementptr inbounds [3 x i8*], [3 x i8*]* @spherical_projection_names, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i8* [ %6, %3 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), %1 ]
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_spherical_from_name(i8*) local_unnamed_addr #0 {
  %2 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i8** null) #4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8** null) #4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4, %1
  %8 = phi i32 [ 0, %1 ], [ 1, %4 ]
  ret i32 %8

9:                                                ; preds = %4
  %10 = tail call i32 @av_strstart(i8* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8** null) #4
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, i32 -1, i32 2
  ret i32 %12
}

declare i32 @av_strstart(i8*, i8*, i8**) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
