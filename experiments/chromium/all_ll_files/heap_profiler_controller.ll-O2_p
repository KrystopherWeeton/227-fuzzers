; ModuleID = '../../components/heap_profiling/in_process/heap_profiler_controller.cc'
source_filename = "../../components/heap_profiling/in_process/heap_profiler_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.base::ProfileBuilder" = type { i32 (...)** }
%"class.base::ModuleCache" = type { %"class.std::__1::set", %"class.base::internal::flat_tree", %"class.std::__1::vector.91", %"class.base::ModuleCache::AuxiliaryModuleProvider"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.84" }
%"class.std::__1::__tree.84" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.91" }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.std::__1::unique_ptr.93"*, %"class.std::__1::unique_ptr.93"*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::unique_ptr.93" = type opaque
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::unique_ptr.93"* }
%"class.base::ModuleCache::AuxiliaryModuleProvider" = type { i32 (...)** }
%"class.metrics::WorkIdRecorder" = type { i32 (...)** }
%"class.metrics::SampledProfile" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::internal::MapFieldLite", %"class.google::protobuf::internal::MapFieldLite.110", %"class.google::protobuf::RepeatedField", %"class.metrics::PerfDataProto"*, %"class.metrics::CallStackProfile"*, %"class.metrics::PerfStatProto"*, i64, i64, i32, i32, i64, i64, i64, i32, i32, float, float }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.google::protobuf::internal::MapFieldLite" = type { %"class.google::protobuf::Map" }
%"class.google::protobuf::Map" = type { %"class.google::protobuf::Map<unsigned int, metrics::Process>::InnerMap" }
%"class.google::protobuf::Map<unsigned int, metrics::Process>::InnerMap" = type { i64, i64, i64, i64, i8**, %"class.google::protobuf::internal::MapAllocator" }
%"class.google::protobuf::internal::MapAllocator" = type { %"class.google::protobuf::Arena"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.101", %"struct.std::__1::atomic.101", %"struct.std::__1::atomic.105", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl.103" }
%"struct.std::__1::__cxx_atomic_impl.103" = type { %"struct.std::__1::__cxx_atomic_base_impl.104" }
%"struct.std::__1::__cxx_atomic_base_impl.104" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__cxx_atomic_impl.108" }
%"struct.std::__1::__cxx_atomic_impl.108" = type { %"struct.std::__1::__cxx_atomic_base_impl.109" }
%"struct.std::__1::__cxx_atomic_base_impl.109" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.google::protobuf::internal::MapFieldLite.110" = type { %"class.google::protobuf::Map.111" }
%"class.google::protobuf::Map.111" = type { %"class.google::protobuf::Map<unsigned int, metrics::Thread>::InnerMap" }
%"class.google::protobuf::Map<unsigned int, metrics::Thread>::InnerMap" = type { i64, i64, i64, i64, i8**, %"class.google::protobuf::internal::MapAllocator" }
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }
%"class.metrics::PerfDataProto" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField.112", %"class.google::protobuf::RepeatedPtrField.113", %"class.google::protobuf::RepeatedPtrField.114", %"class.metrics::PerfDataProto_PerfEventStats"*, %"class.metrics::PerfDataProto_StringMetadata"*, i64 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::RepeatedPtrField.112" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.113" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.114" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.metrics::PerfDataProto_PerfEventStats" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i32, i32, i32, i32, i32, i32, i8, [7 x i8] }>
%"class.metrics::PerfDataProto_StringMetadata" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.metrics::PerfDataProto_StringMetadata_StringAndMd5sumPrefix"* }
%"class.metrics::PerfDataProto_StringMetadata_StringAndMd5sumPrefix" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i64 }
%"class.metrics::CallStackProfile" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.115", %"class.google::protobuf::RepeatedPtrField.116", %"class.google::protobuf::RepeatedField.117", %"class.google::protobuf::RepeatedPtrField.118", %"class.google::protobuf::RepeatedPtrField.119", %"class.google::protobuf::RepeatedPtrField.120", %"class.google::protobuf::RepeatedPtrField.121", i32, i32, i64 }
%"class.google::protobuf::RepeatedPtrField.115" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.116" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedField.117" = type { i32, i32, i8* }
%"class.google::protobuf::RepeatedPtrField.118" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.119" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.120" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.121" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.metrics::PerfStatProto" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.122", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::RepeatedPtrField.122" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.123" = type { %"class.std::__1::__tree.124" }
%"class.std::__1::__tree.124" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::unordered_map.132" = type { %"class.std::__1::__hash_table.133" }
%"class.std::__1::__hash_table.133" = type <{ %"class.std::__1::unique_ptr.134", %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.154", [4 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136", %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base.137"** }
%"struct.std::__1::__hash_node_base.137" = type { %"struct.std::__1::__hash_node_base.137"* }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.std::__1::__bucket_list_deallocator.139" }
%"class.std::__1::__bucket_list_deallocator.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::__hash_node_base.137" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { float }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"**, %"class.std::__1::__compressed_pair.162" }
%"class.base::ModuleCache::Module" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.base::ModuleCache::Module"** }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"class.base::TimeTicks"*, %"class.base::TimeTicks"*, %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.base::TimeTicks"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.78 }
%class.scoped_refptr.78 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.79", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.79" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%union.anon.175 = type { i64 }
%"class.std::__1::map.176" = type { %"class.std::__1::__tree.177" }
%"class.std::__1::__tree.177" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::unordered_map.185" = type { %"class.std::__1::__hash_table.186" }
%"class.std::__1::__hash_table.186" = type <{ %"class.std::__1::unique_ptr.187", %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.207", [4 x i8] }>
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189", %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.std::__1::__hash_node_base.190"** }
%"struct.std::__1::__hash_node_base.190" = type { %"struct.std::__1::__hash_node_base.190"* }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.std::__1::__bucket_list_deallocator.192" }
%"class.std::__1::__bucket_list_deallocator.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.std::__1::__hash_node_base.190" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%class.HeapProfilerController = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::SamplingHeapProfiler" = type <{ %"class.base::PoissonAllocationSampler::SamplesObserver", %"class.base::ThreadIdNameManager::Observer", %"class.base::Lock", %"class.std::__1::unordered_map", %"class.std::__1::unordered_set", %"class.base::Lock", i32, %"struct.std::__1::atomic.50", %"struct.std::__1::atomic.55", [7 x i8] }>
%"class.base::PoissonAllocationSampler::SamplesObserver" = type { i32 (...)** }
%"class.base::ThreadIdNameManager::Observer" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.22", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.25" }
%"class.std::__1::__hash_table.25" = type <{ %"class.std::__1::unique_ptr.26", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28", %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base.29"** }
%"struct.std::__1::__hash_node_base.29" = type { %"struct.std::__1::__hash_node_base.29"* }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__bucket_list_deallocator.31" }
%"class.std::__1::__bucket_list_deallocator.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::__hash_node_base.29" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i32 }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.HeapProfilerController::SampleComparator" = type { i8 }
%"class.base::SamplingHeapProfiler::Sample" = type <{ i64, i64, i32, [4 x i8], i8*, i8*, %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i8** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.base::SamplingHeapProfiler::Sample"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.base::SamplingHeapProfiler::Sample"* }
%"class.std::__1::tuple.223" = type { i8 }
%"struct.metrics::CallStackProfileParams" = type { i32, i32, i32 }
%"class.metrics::CallStackProfileBuilder" = type { %"class.base::ProfileBuilder", %"class.base::ModuleCache", i32, i8, %"class.metrics::WorkIdRecorder"*, %"class.metrics::SampledProfile", %"class.std::__1::map.123", %"class.std::__1::unordered_map.132", %"class.std::__1::vector.160", %"class.std::__1::vector.167", %"class.base::OnceCallback", %"class.base::TimeTicks", %"class.metrics::CallStackProfileMetadata" }
%"class.metrics::CallStackProfileMetadata" = type { %"struct.std::__1::array.174", i64, %"class.std::__1::map.176", %"class.std::__1::unordered_map.185" }
%"struct.std::__1::array.174" = type { [50 x %"struct.base::MetadataRecorder::Item"] }
%"struct.base::MetadataRecorder::Item" = type { i64, %"class.absl::optional", i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.175 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.base::Frame"*, %"struct.base::Frame"*, %"class.std::__1::__compressed_pair.215" }
%"struct.base::Frame" = type { i64, %"class.base::ModuleCache::Module"* }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.base::Frame"* }
%"class.base::ProcessMetrics" = type { i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", i64, %"class.base::TimeTicks", i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.base::SamplingHeapProfiler::Sample", %"struct.HeapProfilerController::SampleValue" }
%"struct.HeapProfilerController::SampleValue" = type { i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS_9TimeDeltaEEJS7_S8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFv13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS_9TimeDeltaEEJS6_S7_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIN4base5FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRmRPKNS1_11ModuleCache6ModuleEEEEvDpOT_ = comdat any

@_ZN7metrics31CallStackProfileMetricsProvider22kHeapProfilerReportingE = external global %"struct.base::Feature", align 8
@_ZN12_GLOBAL__N_125kHeapProfilerSamplingRateE = internal unnamed_addr constant [14 x i8] c"sampling-rate\00", align 1
@.str = private unnamed_addr constant [21 x i8] c"ScheduleNextSnapshot\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"../../components/heap_profiling/in_process/heap_profiler_controller.cc\00", align 1
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 0, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"Memory.HeapProfiler.Browser.Malloc\00", align 1
@__const._ZN22HeapProfilerController23RetrieveAndSendSnapshotEv.profile_builder = private unnamed_addr constant { %"class.base::ProfileBuilder", %"class.base::ModuleCache", i32, i8, [3 x i8], %"class.metrics::WorkIdRecorder"*, %"class.metrics::SampledProfile", %"class.std::__1::map.123", %"class.std::__1::unordered_map.132", %"class.std::__1::vector.160", %"class.std::__1::vector.167", %"class.base::OnceCallback", %"class.base::TimeTicks", { { [50 x { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 }] }, i64, %"class.std::__1::map.176", %"class.std::__1::unordered_map.185" } } { %"class.base::ProfileBuilder" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.base::ModuleCache" { %"class.std::__1::set" { %"class.std::__1::__tree.84" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.85" { %"struct.std::__1::__compressed_pair_elem.72" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.89" { %"struct.std::__1::__compressed_pair_elem.11" { i64 -6148914691236517206 } } } }, %"class.base::internal::flat_tree" { %"class.std::__1::vector.91" { %"class.std::__1::__vector_base.92" { %"class.std::__1::unique_ptr.93"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.93"*), %"class.std::__1::unique_ptr.93"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.93"*), %"class.std::__1::__compressed_pair.94" { %"struct.std::__1::__compressed_pair_elem.95" { %"class.std::__1::unique_ptr.93"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.93"*) } } } } }, %"class.std::__1::vector.91" { %"class.std::__1::__vector_base.92" { %"class.std::__1::unique_ptr.93"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.93"*), %"class.std::__1::unique_ptr.93"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.93"*), %"class.std::__1::__compressed_pair.94" { %"struct.std::__1::__compressed_pair_elem.95" { %"class.std::__1::unique_ptr.93"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.93"*) } } } }, %"class.base::ModuleCache::AuxiliaryModuleProvider"* inttoptr (i64 -6148914691236517206 to %"class.base::ModuleCache::AuxiliaryModuleProvider"*) }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.metrics::WorkIdRecorder"* inttoptr (i64 -6148914691236517206 to %"class.metrics::WorkIdRecorder"*), %"class.metrics::SampledProfile" { %"class.google::protobuf::MessageLite" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.google::protobuf::internal::InternalMetadata" { i8* inttoptr (i64 -6148914691236517206 to i8*) } }, %"class.google::protobuf::internal::HasBits" { [1 x i32] [i32 -1431655766] }, %"class.google::protobuf::internal::CachedSize" { %"struct.std::__1::atomic" { %"struct.std::__1::__atomic_base" { %"struct.std::__1::__atomic_base.0" { %"struct.std::__1::__cxx_atomic_impl" { %"struct.std::__1::__cxx_atomic_base_impl" { i32 -1431655766 } } } } } }, %"class.google::protobuf::internal::MapFieldLite" { %"class.google::protobuf::Map" { %"class.google::protobuf::Map<unsigned int, metrics::Process>::InnerMap" { i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i8** inttoptr (i64 -6148914691236517206 to i8**), %"class.google::protobuf::internal::MapAllocator" { %"class.google::protobuf::Arena"* inttoptr (i64 -6148914691236517206 to %"class.google::protobuf::Arena"*) } } } }, %"class.google::protobuf::internal::MapFieldLite.110" { %"class.google::protobuf::Map.111" { %"class.google::protobuf::Map<unsigned int, metrics::Thread>::InnerMap" { i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i8** inttoptr (i64 -6148914691236517206 to i8**), %"class.google::protobuf::internal::MapAllocator" { %"class.google::protobuf::Arena"* inttoptr (i64 -6148914691236517206 to %"class.google::protobuf::Arena"*) } } } }, %"class.google::protobuf::RepeatedField" { i32 -1431655766, i32 -1431655766, i8* inttoptr (i64 -6148914691236517206 to i8*) }, %"class.metrics::PerfDataProto"* inttoptr (i64 -6148914691236517206 to %"class.metrics::PerfDataProto"*), %"class.metrics::CallStackProfile"* inttoptr (i64 -6148914691236517206 to %"class.metrics::CallStackProfile"*), %"class.metrics::PerfStatProto"* inttoptr (i64 -6148914691236517206 to %"class.metrics::PerfStatProto"*), i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::map.123" { %"class.std::__1::__tree.124" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.125" { %"struct.std::__1::__compressed_pair_elem.72" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.129" { %"struct.std::__1::__compressed_pair_elem.11" { i64 -6148914691236517206 } } } }, %"class.std::__1::unordered_map.132" { %"class.std::__1::__hash_table.133" <{ %"class.std::__1::unique_ptr.134" { %"class.std::__1::__compressed_pair.135" { %"struct.std::__1::__compressed_pair_elem.136" { %"struct.std::__1::__hash_node_base.137"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.137"**) }, %"struct.std::__1::__compressed_pair_elem.138" { %"class.std::__1::__bucket_list_deallocator.139" { %"class.std::__1::__compressed_pair.140" { %"struct.std::__1::__compressed_pair_elem.11" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.144" { %"struct.std::__1::__compressed_pair_elem.145" { %"struct.std::__1::__hash_node_base.137" { %"struct.std::__1::__hash_node_base.137"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.137"*) } } }, %"class.std::__1::__compressed_pair.149" { %"struct.std::__1::__compressed_pair_elem.11" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.154" { %"struct.std::__1::__compressed_pair_elem.23" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::vector.160" { %"class.std::__1::__vector_base.161" { %"class.base::ModuleCache::Module"** inttoptr (i64 -6148914691236517206 to %"class.base::ModuleCache::Module"**), %"class.base::ModuleCache::Module"** inttoptr (i64 -6148914691236517206 to %"class.base::ModuleCache::Module"**), %"class.std::__1::__compressed_pair.162" { %"struct.std::__1::__compressed_pair_elem.163" { %"class.base::ModuleCache::Module"** inttoptr (i64 -6148914691236517206 to %"class.base::ModuleCache::Module"**) } } } }, %"class.std::__1::vector.167" { %"class.std::__1::__vector_base.168" { %"class.base::TimeTicks"* inttoptr (i64 -6148914691236517206 to %"class.base::TimeTicks"*), %"class.base::TimeTicks"* inttoptr (i64 -6148914691236517206 to %"class.base::TimeTicks"*), %"class.std::__1::__compressed_pair.169" { %"struct.std::__1::__compressed_pair_elem.170" { %"class.base::TimeTicks"* inttoptr (i64 -6148914691236517206 to %"class.base::TimeTicks"*) } } } }, %"class.base::OnceCallback" { %"class.base::internal::CallbackBase" { %class.scoped_refptr.78 { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } }, %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, { { [50 x { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 }] }, i64, %"class.std::__1::map.176", %"class.std::__1::unordered_map.185" } { { [50 x { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 }] } { [50 x { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 }] [{ i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }, { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.175 } } } } { { { { i8, [7 x i8], %union.anon.175 } } } { { { i8, [7 x i8], %union.anon.175 } } { { i8, [7 x i8], %union.anon.175 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.175 { i64 -6148914691236517206 } } } } }, i64 -6148914691236517206 }] }, i64 -6148914691236517206, %"class.std::__1::map.176" { %"class.std::__1::__tree.177" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.178" { %"struct.std::__1::__compressed_pair_elem.72" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.182" { %"struct.std::__1::__compressed_pair_elem.11" { i64 -6148914691236517206 } } } }, %"class.std::__1::unordered_map.185" { %"class.std::__1::__hash_table.186" <{ %"class.std::__1::unique_ptr.187" { %"class.std::__1::__compressed_pair.188" { %"struct.std::__1::__compressed_pair_elem.189" { %"struct.std::__1::__hash_node_base.190"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.190"**) }, %"struct.std::__1::__compressed_pair_elem.191" { %"class.std::__1::__bucket_list_deallocator.192" { %"class.std::__1::__compressed_pair.193" { %"struct.std::__1::__compressed_pair_elem.11" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.197" { %"struct.std::__1::__compressed_pair_elem.198" { %"struct.std::__1::__hash_node_base.190" { %"struct.std::__1::__hash_node_base.190"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.190"*) } } }, %"class.std::__1::__compressed_pair.202" { %"struct.std::__1::__compressed_pair_elem.11" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.207" { %"struct.std::__1::__compressed_pair_elem.23" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } } }, align 8
@.str.3 = private unnamed_addr constant [42 x i8] c"heap-profiler-collection-interval-minutes\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN22HeapProfilerControllerC1Ev = hidden unnamed_addr alias void (%class.HeapProfilerController*), void (%class.HeapProfilerController*)* @_ZN22HeapProfilerControllerC2Ev
@_ZN22HeapProfilerControllerD1Ev = hidden unnamed_addr alias void (%class.HeapProfilerController*), void (%class.HeapProfilerController*)* @_ZN22HeapProfilerControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HeapProfilerControllerC2Ev(%class.HeapProfilerController* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #11
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %2, i64 4
  %5 = bitcast i8* %4 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"* %5) #12
  %6 = atomicrmw add i32* %3, i32 1 monotonic
  %7 = bitcast %class.HeapProfilerController* %0 to i8**
  store i8* %2, i8** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HeapProfilerControllerD2Ev(%class.HeapProfilerController* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.HeapProfilerController, %class.HeapProfilerController* %0, i64 0, i32 0, i32 0
  %3 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %2, align 8
  %4 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %3, i64 0, i32 1
  tail call void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"* %4) #12
  %5 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %2, align 8
  %6 = icmp eq %"class.base::RefCountedData"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 1
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %14) #12
  %15 = bitcast %"class.base::RefCountedData"* %5 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %7, %11
  ret void
}

declare void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HeapProfilerController5StartEv(%class.HeapProfilerController* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7metrics31CallStackProfileMetricsProvider22kHeapProfilerReportingE) #12
  br i1 %4, label %5, label %49

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 13, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN12_GLOBAL__N_125kHeapProfilerSamplingRateE, i64 0, i64 0), i64 13, i1 false) #12
  %9 = getelementptr inbounds i8, i8* %6, i64 13
  store i8 0, i8* %9, align 1
  %10 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7metrics31CallStackProfileMetricsProvider22kHeapProfilerReportingE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 0) #12
  %11 = load i8, i8* %8, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %5, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  %17 = icmp sgt i32 %10, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = call %"class.base::SamplingHeapProfiler"* @_ZN4base20SamplingHeapProfiler3GetEv() #12
  %20 = sext i32 %10 to i64
  call void @_ZN4base20SamplingHeapProfiler19SetSamplingIntervalEm(%"class.base::SamplingHeapProfiler"* %19, i64 %20) #12
  br label %21

21:                                               ; preds = %18, %16
  %22 = call %"class.base::SamplingHeapProfiler"* @_ZN4base20SamplingHeapProfiler3GetEv() #12
  %23 = call i32 @_ZN4base20SamplingHeapProfiler5StartEv(%"class.base::SamplingHeapProfiler"* %22) #12
  %24 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = call i8* @_Znwm(i64 48) #11
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> <i64 41, i64 -9223372036854775760>, <2 x i64>* %28, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i64 41, i1 false) #12
  %29 = getelementptr inbounds i8, i8* %25, i64 41
  store i8 0, i8* %29, align 1
  %30 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7metrics31CallStackProfileMetricsProvider22kHeapProfilerReportingE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 1440) #12
  %31 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %21
  %36 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %21, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  %38 = getelementptr inbounds %class.HeapProfilerController, %class.HeapProfilerController* %0, i64 0, i32 0, i32 0
  %39 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %38, align 8
  %40 = icmp eq %"class.base::RefCountedData"* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 1 monotonic
  br label %44

44:                                               ; preds = %37, %41
  %45 = icmp eq i32 %30, 2147483647
  %46 = sext i32 %30 to i64
  %47 = mul nsw i64 %46, 60000000
  %48 = select i1 %45, i64 9223372036854775807, i64 %47
  call void @_ZN22HeapProfilerController20ScheduleNextSnapshotE13scoped_refptrIN4base14RefCountedDataINS1_10AtomicFlagEEEENS1_9TimeDeltaE(%"class.base::RefCountedData"* %39, i64 %48)
  br label %49

49:                                               ; preds = %1, %44
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.base::SamplingHeapProfiler"* @_ZN4base20SamplingHeapProfiler3GetEv() local_unnamed_addr #1

declare void @_ZN4base20SamplingHeapProfiler19SetSamplingIntervalEm(%"class.base::SamplingHeapProfiler"*, i64) local_unnamed_addr #1

declare i32 @_ZN4base20SamplingHeapProfiler5StartEv(%"class.base::SamplingHeapProfiler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HeapProfilerController20ScheduleNextSnapshotE13scoped_refptrIN4base14RefCountedDataINS1_10AtomicFlagEEEENS1_9TimeDeltaE(%"class.base::RefCountedData"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = ptrtoint %"class.base::RefCountedData"* %0 to i64
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 111) #12
  %7 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %8 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %8, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS_9TimeDeltaEEJS7_S8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS_9TimeDeltaEEJS6_S7_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !2
  %9 = getelementptr inbounds i8, i8* %7, i64 32
  %10 = bitcast i8* %9 to i64*
  store i64 ptrtoint (void (%"class.base::RefCountedData"*, i64)* @_ZN22HeapProfilerController12TakeSnapshotE13scoped_refptrIN4base14RefCountedDataINS1_10AtomicFlagEEEENS1_9TimeDeltaE to i64), i64* %10, align 8, !noalias !2
  %11 = getelementptr inbounds i8, i8* %7, i64 40
  %12 = bitcast i8* %11 to i64*
  store i64 %5, i64* %12, align 8, !noalias !2
  %13 = getelementptr inbounds i8, i8* %7, i64 48
  %14 = bitcast i8* %13 to i64*
  store i64 %1, i64* %14, align 8, !noalias !2
  %15 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %7, i8** %15, align 8, !alias.scope !2
  %16 = call double @_ZN4base10RandDoubleEv() #12
  %17 = call double @log(double %16) #12
  %18 = sitofp i64 %1 to double
  %19 = fmul double %17, %18
  %20 = fsub double -0.000000e+00, %19
  %21 = fcmp ole double %19, 0x43E0000000000000
  %22 = fcmp oge double %19, 0xC3DFFFFFFFFFFFFF
  %23 = and i1 %22, %21
  %24 = fptosi double %20 to i64
  br i1 %23, label %32, label %25

25:                                               ; preds = %2
  %26 = lshr i64 %1, 63
  %27 = trunc i64 %26 to i32
  %28 = fcmp ogt double %17, 0.000000e+00
  %29 = zext i1 %28 to i32
  %30 = icmp eq i32 %27, %29
  %31 = select i1 %30, i64 9223372036854775807, i64 -9223372036854775808
  br label %32

32:                                               ; preds = %25, %2
  %33 = phi i64 [ %24, %2 ], [ %31, %25 ]
  %34 = call zeroext i1 @_ZN4base10ThreadPool15PostDelayedTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp, %"class.base::OnceCallback"* nonnull %4, i64 %33) #12
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK22HeapProfilerController16SampleComparatorclERKN4base20SamplingHeapProfiler6SampleES5_(%"struct.HeapProfilerController::SampleComparator"* nocapture readnone, %"class.base::SamplingHeapProfiler::Sample"* nocapture readonly dereferenceable(72), %"class.base::SamplingHeapProfiler::Sample"* nocapture readonly dereferenceable(72)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %1, i64 0, i32 6, i32 0, i32 1
  %5 = load i8**, i8*** %4, align 8
  %6 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %2, i64 0, i32 6, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %2, i64 0, i32 6, i32 0, i32 1
  %9 = load i8**, i8*** %8, align 8
  %10 = icmp eq i8** %7, %9
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %1, i64 0, i32 6, i32 0, i32 0
  %13 = load i8**, i8*** %12, align 8
  br label %14

14:                                               ; preds = %24, %11
  %15 = phi i8** [ %25, %24 ], [ %13, %11 ]
  %16 = phi i8** [ %26, %24 ], [ %7, %11 ]
  %17 = icmp eq i8** %15, %5
  br i1 %17, label %28, label %18

18:                                               ; preds = %14
  %19 = load i8*, i8** %15, align 8
  %20 = load i8*, i8** %16, align 8
  %21 = icmp ult i8* %19, %20
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = icmp ult i8* %20, %19
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds i8*, i8** %15, i64 1
  %26 = getelementptr inbounds i8*, i8** %16, i64 1
  %27 = icmp eq i8** %26, %9
  br i1 %27, label %28, label %14

28:                                               ; preds = %14, %18, %22, %24, %3
  %29 = phi i1 [ false, %3 ], [ false, %24 ], [ false, %22 ], [ true, %14 ], [ true, %18 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HeapProfilerController12MergeSamplesERKNSt3__16vectorIN4base20SamplingHeapProfiler6SampleENS0_9allocatorIS4_EEEE(%"class.std::__1::map"* noalias sret, %"class.std::__1::vector.64"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.223", align 1
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %5, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %11, align 8
  %13 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0
  %16 = bitcast %"class.std::__1::tuple"* %3 to i8*
  %17 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::tuple.223", %"class.std::__1::tuple.223"* %4, i64 0, i32 0
  br label %20

19:                                               ; preds = %20, %2
  ret void

20:                                               ; preds = %14, %20
  %21 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %10, %14 ], [ %42, %20 ]
  %22 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %21, i64 0, i32 1
  %23 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %21 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = uitofp <2 x i64> %24 to <2 x double>
  %26 = extractelement <2 x double> %25, i32 0
  %27 = extractelement <2 x double> %25, i32 1
  %28 = fdiv double %27, %26
  %29 = call i64 @llround(double %28) #12
  %30 = icmp eq i64 %29, 0
  %31 = select i1 %30, i64 1, i64 %29
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  store %"class.base::SamplingHeapProfiler::Sample"* %21, %"class.base::SamplingHeapProfiler::Sample"** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #12
  %32 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %15, %"class.base::SamplingHeapProfiler::Sample"* dereferenceable(72) %21, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.223"* nonnull dereferenceable(1) %4) #12
  %33 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %32, 0
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  %35 = load i64, i64* %22, align 8
  %36 = bitcast %"class.std::__1::__tree_end_node"* %34 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = insertelement <2 x i64> undef, i64 %35, i32 0
  %39 = insertelement <2 x i64> %38, i64 %31, i32 1
  %40 = add <2 x i64> %37, %39
  %41 = bitcast %"class.std::__1::__tree_end_node"* %34 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %21, i64 1
  %43 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %42, %12
  br i1 %43, label %19, label %20
}

; Function Attrs: nounwind
declare i64 @llround(double) local_unnamed_addr #4

declare zeroext i1 @_ZN4base10ThreadPool15PostDelayedTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback"*, i64) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HeapProfilerController12TakeSnapshotE13scoped_refptrIN4base14RefCountedDataINS1_10AtomicFlagEEEENS1_9TimeDeltaE(%"class.base::RefCountedData"*, i64) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i8, i8* %3 acquire, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN22HeapProfilerController23RetrieveAndSendSnapshotEv()
  tail call void @_ZN22HeapProfilerController20ScheduleNextSnapshotE13scoped_refptrIN4base14RefCountedDataINS1_10AtomicFlagEEEENS1_9TimeDeltaE(%"class.base::RefCountedData"* %0, i64 %1)
  br label %18

7:                                                ; preds = %2
  %8 = icmp eq %"class.base::RefCountedData"* %0, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %14, i64 1
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %15 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %16) #12
  %17 = bitcast %"class.base::RefCountedData"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %6, %7, %9, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HeapProfilerController23RetrieveAndSendSnapshotEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::tuple", align 8
  %2 = alloca %"class.std::__1::tuple.223", align 1
  %3 = alloca %"class.std::__1::vector.64", align 8
  %4 = alloca %"class.base::ModuleCache", align 8
  %5 = alloca %"struct.metrics::CallStackProfileParams", align 4
  %6 = alloca %"class.metrics::CallStackProfileBuilder", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.std::__1::map", align 8
  %9 = alloca %"class.std::__1::vector.213", align 16
  %10 = alloca i64, align 8
  %11 = alloca %"class.base::ModuleCache::Module"*, align 8
  %12 = alloca %"class.std::__1::vector.213", align 16
  %13 = bitcast %"class.std::__1::vector.64"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %3, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::vector.64"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = tail call %"class.base::SamplingHeapProfiler"* @_ZN4base20SamplingHeapProfiler3GetEv() #12
  call void @_ZN4base20SamplingHeapProfiler10GetSamplesEj(%"class.std::__1::vector.64"* nonnull sret %3, %"class.base::SamplingHeapProfiler"* %17, i32 0) #12
  %18 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %14, align 8
  %19 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %15, align 8
  %20 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %18, %19
  br i1 %20, label %224, label %21

21:                                               ; preds = %0
  %22 = call %"class.base::ProcessMetrics"* @_ZN4base14ProcessMetrics27CreateCurrentProcessMetricsEv() #12
  %23 = call i64 @_ZN4base14ProcessMetrics14GetMallocUsageEv(%"class.base::ProcessMetrics"* %22) #12
  %24 = icmp eq %"class.base::ProcessMetrics"* %22, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  call void @_ZN4base14ProcessMetricsD1Ev(%"class.base::ProcessMetrics"* nonnull %22) #12
  %26 = bitcast %"class.base::ProcessMetrics"* %22 to i8*
  call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %21, %25
  %28 = lshr i64 %23, 20
  %29 = trunc i64 %28 to i32
  call void @_ZN4base25UmaHistogramMemoryLargeMBEPKci(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i32 %29) #12
  %30 = bitcast %"class.base::ModuleCache"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 80, i1 false)
  call void @_ZN4base11ModuleCacheC1Ev(%"class.base::ModuleCache"* nonnull %4) #12
  %31 = bitcast %"struct.metrics::CallStackProfileParams"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"struct.metrics::CallStackProfileParams", %"struct.metrics::CallStackProfileParams"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.metrics::CallStackProfileParams", %"struct.metrics::CallStackProfileParams"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.metrics::CallStackProfileParams", %"struct.metrics::CallStackProfileParams"* %5, i64 0, i32 2
  store i32 1, i32* %32, align 4
  store i32 0, i32* %33, align 4
  store i32 5, i32* %34, align 4
  %35 = bitcast %"class.metrics::CallStackProfileBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2128, i8* nonnull %35) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 bitcast ({ %"class.base::ProfileBuilder", %"class.base::ModuleCache", i32, i8, [3 x i8], %"class.metrics::WorkIdRecorder"*, %"class.metrics::SampledProfile", %"class.std::__1::map.123", %"class.std::__1::unordered_map.132", %"class.std::__1::vector.160", %"class.std::__1::vector.167", %"class.base::OnceCallback", %"class.base::TimeTicks", { { [50 x { i64, { { { { i8, [7 x i8], %union.anon.175 } } } }, i64 }] }, i64, %"class.std::__1::map.176", %"class.std::__1::unordered_map.185" } }* @__const._ZN22HeapProfilerController23RetrieveAndSendSnapshotEv.profile_builder to i8*), i64 2128, i1 false)
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8
  call void @_ZN7metrics23CallStackProfileBuilderC1ERKNS_22CallStackProfileParamsEPKNS_14WorkIdRecorderEN4base12OnceCallbackIFvvEEE(%"class.metrics::CallStackProfileBuilder"* nonnull %6, %"struct.metrics::CallStackProfileParams"* nonnull dereferenceable(12) %5, %"class.metrics::WorkIdRecorder"* null, %"class.base::OnceCallback"* nonnull %7) #12
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #12
  %38 = bitcast %"class.std::__1::map"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_node_base"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #12, !alias.scope !7
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %39, align 8, !alias.scope !7
  %43 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %14, align 8, !noalias !7
  %44 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %15, align 8, !noalias !7
  %45 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %43, %44
  br i1 %45, label %96, label %46

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0
  %48 = bitcast %"class.std::__1::tuple"* %1 to i8*
  %49 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::tuple.223", %"class.std::__1::tuple.223"* %2, i64 0, i32 0
  br label %51

51:                                               ; preds = %51, %46
  %52 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %43, %46 ], [ %73, %51 ]
  %53 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %52, i64 0, i32 1
  %54 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %52 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = uitofp <2 x i64> %55 to <2 x double>
  %57 = extractelement <2 x double> %56, i32 0
  %58 = extractelement <2 x double> %56, i32 1
  %59 = fdiv double %58, %57
  %60 = call i64 @llround(double %59) #12
  %61 = icmp eq i64 %60, 0
  %62 = select i1 %61, i64 1, i64 %60
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12, !noalias !7
  store %"class.base::SamplingHeapProfiler::Sample"* %52, %"class.base::SamplingHeapProfiler::Sample"** %49, align 8, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %50) #12, !noalias !7
  %63 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %47, %"class.base::SamplingHeapProfiler::Sample"* dereferenceable(72) %52, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %1, %"class.std::__1::tuple.223"* nonnull dereferenceable(1) %2) #12
  %64 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #12, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12, !noalias !7
  %66 = load i64, i64* %53, align 8
  %67 = bitcast %"class.std::__1::__tree_end_node"* %65 to <2 x i64>*
  %68 = load <2 x i64>, <2 x i64>* %67, align 8
  %69 = insertelement <2 x i64> undef, i64 %66, i32 0
  %70 = insertelement <2 x i64> %69, i64 %62, i32 1
  %71 = add <2 x i64> %68, %70
  %72 = bitcast %"class.std::__1::__tree_end_node"* %65 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %72, align 8
  %73 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %52, i64 1
  %74 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %73, %44
  br i1 %74, label %75, label %51

75:                                               ; preds = %51
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %77 = icmp eq %"class.std::__1::__tree_end_node"* %76, %41
  br i1 %77, label %96, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.std::__1::vector.213"* %9 to i8*
  %80 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %9, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %9, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast %"struct.base::Frame"** %82 to i64*
  %84 = bitcast %"class.std::__1::vector.213"* %9 to i64*
  %85 = bitcast %"struct.base::Frame"** %81 to i64*
  %86 = bitcast i64* %10 to i8*
  %87 = bitcast %"class.base::ModuleCache::Module"** %11 to i8*
  %88 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %12, i64 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %90 = bitcast %"struct.base::Frame"** %89 to i64*
  %91 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %12, i64 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::vector.213"* %12 to i8**
  %93 = bitcast %"class.std::__1::vector.213"* %9 to i8**
  %94 = bitcast %"class.std::__1::vector.213"* %9 to <2 x i64>*
  %95 = bitcast %"class.std::__1::vector.213"* %12 to <2 x i64>*
  br label %101

96:                                               ; preds = %205, %27, %75
  call void @_ZN7metrics23CallStackProfileBuilder18OnProfileCompletedEN4base9TimeDeltaES2_(%"class.metrics::CallStackProfileBuilder"* nonnull %6, i64 0, i64 0) #12
  %97 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0
  %98 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node"**
  %99 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %98, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* nonnull %97, %"class.std::__1::__tree_node"* %99) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  call void @_ZN7metrics23CallStackProfileBuilderD1Ev(%"class.metrics::CallStackProfileBuilder"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 2128, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %31) #12
  call void @_ZN4base11ModuleCacheD1Ev(%"class.base::ModuleCache"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #12
  %100 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %14, align 8
  br label %224

101:                                              ; preds = %78, %205
  %102 = phi %"class.std::__1::__tree_end_node"* [ %76, %78 ], [ %206, %205 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 0, i64 24, i1 false) #12
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 9
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 10
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to i8***
  %106 = bitcast %"class.std::__1::__tree_end_node"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"* %103 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %107, %109
  %111 = ashr exact i64 %110, 3
  %112 = icmp eq i64 %110, 0
  %113 = inttoptr i64 %109 to i8**
  %114 = inttoptr i64 %107 to i8**
  br i1 %112, label %128, label %115

115:                                              ; preds = %101
  %116 = icmp ugt i64 %111, 1152921504606846975
  br i1 %116, label %117, label %118

117:                                              ; preds = %115
  call void @abort() #13
  unreachable

118:                                              ; preds = %115
  %119 = shl i64 %110, 1
  %120 = call i8* @_Znwm(i64 %119) #11
  %121 = bitcast i8* %120 to %"struct.base::Frame"*
  %122 = ptrtoint i8* %120 to i64
  %123 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %121, i64 %111
  %124 = ptrtoint %"struct.base::Frame"* %123 to i64
  store i64 %122, i64* %84, align 16
  store i64 %122, i64* %85, align 8
  store i64 %124, i64* %83, align 16
  %125 = bitcast %"class.std::__1::__tree_end_node"* %103 to i8***
  %126 = load i8**, i8*** %125, align 8
  %127 = load i8**, i8*** %105, align 8
  br label %128

128:                                              ; preds = %101, %118
  %129 = phi i64 [ %124, %118 ], [ 0, %101 ]
  %130 = phi i64 [ %122, %118 ], [ 0, %101 ]
  %131 = phi i8** [ %127, %118 ], [ %114, %101 ]
  %132 = phi i8** [ %126, %118 ], [ %113, %101 ]
  %133 = icmp eq i8** %132, %131
  %134 = insertelement <2 x i64> undef, i64 %130, i32 0
  %135 = shufflevector <2 x i64> %134, <2 x i64> undef, <2 x i32> zeroinitializer
  br i1 %133, label %139, label %208

136:                                              ; preds = %221
  %137 = load <2 x i64>, <2 x i64>* %94, align 16
  %138 = load i64, i64* %83, align 16
  br label %139

139:                                              ; preds = %136, %128
  %140 = phi i64 [ %138, %136 ], [ %129, %128 ]
  %141 = phi <2 x i64> [ %137, %136 ], [ %135, %128 ]
  store <2 x i64> %141, <2 x i64>* %95, align 16
  store i64 %140, i64* %90, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 0, i64 24, i1 false) #12
  %142 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 13
  %143 = bitcast %"class.std::__1::__tree_end_node"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 14
  %146 = bitcast %"class.std::__1::__tree_end_node"* %145 to i64*
  %147 = load i64, i64* %146, align 8
  call void @_ZN7metrics23CallStackProfileBuilder17OnSampleCompletedENSt3__16vectorIN4base5FrameENS1_9allocatorIS4_EEEENS3_9TimeTicksEmm(%"class.metrics::CallStackProfileBuilder"* nonnull %6, %"class.std::__1::vector.213"* nonnull %12, i64 0, i64 %144, i64 %147) #12
  %148 = load %"struct.base::Frame"*, %"struct.base::Frame"** %91, align 16
  %149 = icmp eq %"struct.base::Frame"* %148, null
  br i1 %149, label %162, label %150

150:                                              ; preds = %139
  %151 = bitcast %"struct.base::Frame"* %148 to i8*
  %152 = load %"struct.base::Frame"*, %"struct.base::Frame"** %88, align 8
  %153 = icmp eq %"struct.base::Frame"* %152, %148
  br i1 %153, label %160, label %154

154:                                              ; preds = %150, %154
  %155 = phi %"struct.base::Frame"* [ %156, %154 ], [ %152, %150 ]
  %156 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %155, i64 -1
  call void @_ZN4base5FrameD1Ev(%"struct.base::Frame"* %156) #12
  %157 = icmp eq %"struct.base::Frame"* %156, %148
  br i1 %157, label %158, label %154

158:                                              ; preds = %154
  %159 = load i8*, i8** %92, align 16
  br label %160

160:                                              ; preds = %158, %150
  %161 = phi i8* [ %159, %158 ], [ %151, %150 ]
  store %"struct.base::Frame"* %148, %"struct.base::Frame"** %88, align 8
  call void @_ZdlPv(i8* %161) #11
  br label %162

162:                                              ; preds = %139, %160
  %163 = load %"struct.base::Frame"*, %"struct.base::Frame"** %80, align 16
  %164 = icmp eq %"struct.base::Frame"* %163, null
  br i1 %164, label %177, label %165

165:                                              ; preds = %162
  %166 = bitcast %"struct.base::Frame"* %163 to i8*
  %167 = load %"struct.base::Frame"*, %"struct.base::Frame"** %81, align 8
  %168 = icmp eq %"struct.base::Frame"* %167, %163
  br i1 %168, label %175, label %169

169:                                              ; preds = %165, %169
  %170 = phi %"struct.base::Frame"* [ %171, %169 ], [ %167, %165 ]
  %171 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %170, i64 -1
  call void @_ZN4base5FrameD1Ev(%"struct.base::Frame"* %171) #12
  %172 = icmp eq %"struct.base::Frame"* %171, %163
  br i1 %172, label %173, label %169

173:                                              ; preds = %169
  %174 = load i8*, i8** %93, align 16
  br label %175

175:                                              ; preds = %173, %165
  %176 = phi i8* [ %174, %173 ], [ %166, %165 ]
  store %"struct.base::Frame"* %163, %"struct.base::Frame"** %81, align 8
  call void @_ZdlPv(i8* %176) #11
  br label %177

177:                                              ; preds = %162, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #12
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 1, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = icmp eq %"class.std::__1::__tree_node_base"* %179, null
  br i1 %180, label %181, label %189

181:                                              ; preds = %177
  %182 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"class.std::__1::__tree_node_base"*
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 2
  %184 = bitcast %"class.std::__1::__tree_end_node"* %183 to %"class.std::__1::__tree_end_node"**
  %185 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %184, align 8
  %186 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %185, i64 0, i32 0
  %187 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %188 = icmp eq %"class.std::__1::__tree_node_base"* %187, %182
  br i1 %188, label %205, label %196

189:                                              ; preds = %177, %189
  %190 = phi %"class.std::__1::__tree_node_base"* [ %192, %189 ], [ %179, %177 ]
  %191 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %190, i64 0, i32 0, i32 0
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node_base"* %192, null
  br i1 %193, label %194, label %189

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %190, i64 0, i32 0
  br label %205

196:                                              ; preds = %181, %196
  %197 = phi %"class.std::__1::__tree_end_node"** [ %200, %196 ], [ %184, %181 ]
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to %"class.std::__1::__tree_node_base"**
  %199 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %199, i64 0, i32 2
  %201 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %200, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %201, i64 0, i32 0
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  %204 = icmp eq %"class.std::__1::__tree_node_base"* %203, %199
  br i1 %204, label %205, label %196

205:                                              ; preds = %196, %181, %194
  %206 = phi %"class.std::__1::__tree_end_node"* [ %195, %194 ], [ %185, %181 ], [ %201, %196 ]
  %207 = icmp eq %"class.std::__1::__tree_end_node"* %206, %41
  br i1 %207, label %96, label %101

208:                                              ; preds = %128, %221
  %209 = phi i8** [ %222, %221 ], [ %132, %128 ]
  %210 = bitcast i8** %209 to i64*
  %211 = load i64, i64* %210, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #12
  store i64 %211, i64* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  store %"class.base::ModuleCache::Module"* inttoptr (i64 -6148914691236517206 to %"class.base::ModuleCache::Module"*), %"class.base::ModuleCache::Module"** %11, align 8
  %212 = call %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache19GetModuleForAddressEm(%"class.base::ModuleCache"* nonnull %4, i64 %211) #12
  store %"class.base::ModuleCache::Module"* %212, %"class.base::ModuleCache::Module"** %11, align 8
  %213 = load %"struct.base::Frame"*, %"struct.base::Frame"** %81, align 8
  %214 = load %"struct.base::Frame"*, %"struct.base::Frame"** %82, align 16
  %215 = icmp ult %"struct.base::Frame"* %213, %214
  br i1 %215, label %216, label %220

216:                                              ; preds = %208
  %217 = load i64, i64* %10, align 8
  call void @_ZN4base5FrameC1EmPKNS_11ModuleCache6ModuleE(%"struct.base::Frame"* %213, i64 %217, %"class.base::ModuleCache::Module"* %212) #12
  %218 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %213, i64 1
  %219 = ptrtoint %"struct.base::Frame"* %218 to i64
  store i64 %219, i64* %85, align 8
  br label %221

220:                                              ; preds = %208
  call void @_ZNSt3__16vectorIN4base5FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRmRPKNS1_11ModuleCache6ModuleEEEEvDpOT_(%"class.std::__1::vector.213"* nonnull %9, i64* nonnull dereferenceable(8) %10, %"class.base::ModuleCache::Module"** nonnull dereferenceable(8) %11) #12
  br label %221

221:                                              ; preds = %216, %220
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #12
  %222 = getelementptr inbounds i8*, i8** %209, i64 1
  %223 = icmp eq i8** %222, %131
  br i1 %223, label %136, label %208

224:                                              ; preds = %0, %96
  %225 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %18, %0 ], [ %100, %96 ]
  %226 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %225, null
  br i1 %226, label %240, label %227

227:                                              ; preds = %224
  %228 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %225 to i8*
  %229 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %15, align 8
  %230 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %229, %225
  br i1 %230, label %238, label %231

231:                                              ; preds = %227, %231
  %232 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %233, %231 ], [ %229, %227 ]
  %233 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %232, i64 -1
  call void @_ZN4base20SamplingHeapProfiler6SampleD1Ev(%"class.base::SamplingHeapProfiler::Sample"* %233) #12
  %234 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %233, %225
  br i1 %234, label %235, label %231

235:                                              ; preds = %231
  %236 = bitcast %"class.std::__1::vector.64"* %3 to i8**
  %237 = load i8*, i8** %236, align 8
  br label %238

238:                                              ; preds = %235, %227
  %239 = phi i8* [ %237, %235 ], [ %228, %227 ]
  store %"class.base::SamplingHeapProfiler::Sample"* %225, %"class.base::SamplingHeapProfiler::Sample"** %15, align 8
  call void @_ZdlPv(i8* %239) #11
  br label %240

240:                                              ; preds = %224, %238
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  ret void
}

declare void @_ZN4base20SamplingHeapProfiler10GetSamplesEj(%"class.std::__1::vector.64"* sret, %"class.base::SamplingHeapProfiler"*, i32) local_unnamed_addr #1

declare %"class.base::ProcessMetrics"* @_ZN4base14ProcessMetrics27CreateCurrentProcessMetricsEv() local_unnamed_addr #1

declare i64 @_ZN4base14ProcessMetrics14GetMallocUsageEv(%"class.base::ProcessMetrics"*) local_unnamed_addr #1

declare void @_ZN4base25UmaHistogramMemoryLargeMBEPKci(i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base11ModuleCacheC1Ev(%"class.base::ModuleCache"*) unnamed_addr #1

declare void @_ZN7metrics23CallStackProfileBuilderC1ERKNS_22CallStackProfileParamsEPKNS_14WorkIdRecorderEN4base12OnceCallbackIFvvEEE(%"class.metrics::CallStackProfileBuilder"*, %"struct.metrics::CallStackProfileParams"* dereferenceable(12), %"class.metrics::WorkIdRecorder"*, %"class.base::OnceCallback"*) unnamed_addr #1

declare %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache19GetModuleForAddressEm(%"class.base::ModuleCache"*, i64) local_unnamed_addr #1

declare void @_ZN7metrics23CallStackProfileBuilder17OnSampleCompletedENSt3__16vectorIN4base5FrameENS1_9allocatorIS4_EEEENS3_9TimeTicksEmm(%"class.metrics::CallStackProfileBuilder"*, %"class.std::__1::vector.213"*, i64, i64, i64) local_unnamed_addr #1

declare void @_ZN7metrics23CallStackProfileBuilder18OnProfileCompletedEN4base9TimeDeltaES2_(%"class.metrics::CallStackProfileBuilder"*, i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7metrics23CallStackProfileBuilderD1Ev(%"class.metrics::CallStackProfileBuilder"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base11ModuleCacheD1Ev(%"class.base::ModuleCache"*) unnamed_addr #4

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #5

declare double @_ZN4base10RandDoubleEv() local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base20SamplingHeapProfiler6SampleD1Ev(%"class.base::SamplingHeapProfiler::Sample"* %10) #12
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base20SamplingHeapProfiler6SampleD1Ev(%"class.base::SamplingHeapProfiler::Sample"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.base::SamplingHeapProfiler::Sample"* dereferenceable(72), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.223"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %72, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %1, i64 0, i32 6, i32 0, i32 1
  %13 = load i8**, i8*** %12, align 8
  %14 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %1, i64 0, i32 6, i32 0, i32 0
  %15 = load i8**, i8*** %14, align 8
  %16 = icmp eq i8** %15, %13
  br label %17

17:                                               ; preds = %68, %10
  %18 = phi %"class.std::__1::__tree_node"* [ %71, %68 ], [ %8, %10 ]
  %19 = phi %"class.std::__1::__tree_node_base"** [ %70, %68 ], [ %11, %10 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 1, i32 0, i32 0, i32 6, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 1, i32 0, i32 0, i32 6, i32 0, i32 1
  %23 = load i8**, i8*** %22, align 8
  %24 = icmp eq i8** %21, %23
  br i1 %24, label %45, label %25

25:                                               ; preds = %17, %35
  %26 = phi i8** [ %36, %35 ], [ %15, %17 ]
  %27 = phi i8** [ %37, %35 ], [ %21, %17 ]
  %28 = icmp eq i8** %26, %13
  br i1 %28, label %39, label %29

29:                                               ; preds = %25
  %30 = load i8*, i8** %26, align 8
  %31 = load i8*, i8** %27, align 8
  %32 = icmp ult i8* %30, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = icmp ult i8* %31, %30
  br i1 %34, label %45, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds i8*, i8** %26, i64 1
  %37 = getelementptr inbounds i8*, i8** %27, i64 1
  %38 = icmp eq i8** %37, %23
  br i1 %38, label %45, label %25

39:                                               ; preds = %29, %25
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0
  br label %74

45:                                               ; preds = %35, %33, %17
  br i1 %16, label %66, label %46

46:                                               ; preds = %45, %56
  %47 = phi i8** [ %57, %56 ], [ %21, %45 ]
  %48 = phi i8** [ %58, %56 ], [ %15, %45 ]
  %49 = icmp eq i8** %47, %23
  br i1 %49, label %60, label %50

50:                                               ; preds = %46
  %51 = load i8*, i8** %47, align 8
  %52 = load i8*, i8** %48, align 8
  %53 = icmp ult i8* %51, %52
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = icmp ult i8* %52, %51
  br i1 %55, label %66, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds i8*, i8** %47, i64 1
  %58 = getelementptr inbounds i8*, i8** %48, i64 1
  %59 = icmp eq i8** %58, %13
  br i1 %59, label %66, label %46

60:                                               ; preds = %50, %46
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 1
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0
  br label %74

66:                                               ; preds = %45, %56, %54
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0
  br label %74

68:                                               ; preds = %60, %39
  %69 = phi %"class.std::__1::__tree_node_base"* [ %41, %39 ], [ %62, %60 ]
  %70 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %61, %60 ]
  %71 = bitcast %"class.std::__1::__tree_node_base"* %69 to %"class.std::__1::__tree_node"*
  br label %17

72:                                               ; preds = %5
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %74

74:                                               ; preds = %43, %64, %66, %72
  %75 = phi %"class.std::__1::__tree_end_node"* [ %6, %72 ], [ %67, %66 ], [ %65, %64 ], [ %44, %43 ]
  %76 = phi %"class.std::__1::__tree_node_base"** [ %73, %72 ], [ %19, %66 ], [ %61, %64 ], [ %40, %43 ]
  %77 = bitcast %"class.std::__1::__tree_node_base"** %76 to %"class.std::__1::__tree_node"**
  %78 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node"* %78, null
  br i1 %79, label %80, label %108

80:                                               ; preds = %74
  %81 = tail call i8* @_Znwm(i64 120) #11, !noalias !10
  %82 = getelementptr inbounds i8, i8* %81, i64 32
  %83 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %83, align 8, !noalias !10
  %85 = bitcast i8* %82 to %"class.base::SamplingHeapProfiler::Sample"*
  tail call void @_ZN4base20SamplingHeapProfiler6SampleC1ERKS1_(%"class.base::SamplingHeapProfiler::Sample"* %85, %"class.base::SamplingHeapProfiler::Sample"* dereferenceable(72) %84) #12, !noalias !10
  %86 = getelementptr inbounds i8, i8* %81, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #12, !noalias !10
  %87 = bitcast i8* %81 to %"class.std::__1::__tree_node"*
  %88 = bitcast i8* %81 to %"class.std::__1::__tree_node_base"*
  %89 = getelementptr inbounds i8, i8* %81, i64 16
  %90 = bitcast i8* %89 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"** %90, align 8
  %91 = bitcast %"class.std::__1::__tree_node_base"** %76 to i8**
  store i8* %81, i8** %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %80
  %98 = ptrtoint %"class.std::__1::__tree_node_base"* %95 to i64
  %99 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %98, i64* %99, align 8
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  br label %101

101:                                              ; preds = %97, %80
  %102 = phi %"class.std::__1::__tree_node_base"* [ %88, %80 ], [ %100, %97 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %104, %"class.std::__1::__tree_node_base"* %102) #12
  %105 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %105, align 8
  br label %108

108:                                              ; preds = %101, %74
  %109 = phi i8 [ 1, %101 ], [ 0, %74 ]
  %110 = phi %"class.std::__1::__tree_node"* [ %87, %101 ], [ %78, %74 ]
  %111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 0, i32 0
  %112 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %111, 0
  %113 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %112, i8 %109, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %113
}

declare void @_ZN4base20SamplingHeapProfiler6SampleC1ERKS1_(%"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !13
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !13
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !13
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS_9TimeDeltaEEJS7_S8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.base::RefCountedData"*, i64)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = load void (%"class.base::RefCountedData"*, i64)*, void (%"class.base::RefCountedData"*, i64)** %3, align 8
  %6 = bitcast void ()** %4 to %"class.base::RefCountedData"**
  %7 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %6, align 8
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  tail call void %5(%"class.base::RefCountedData"* %7, i64 %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS_9TimeDeltaEEJS6_S7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RefCountedData"**
  %6 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %5, align 8
  %7 = icmp eq %"class.base::RefCountedData"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %6, i64 0, i32 0
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 1
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %15) #12
  %16 = bitcast %"class.base::RefCountedData"* %6 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %3, %8, %12
  %18 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %17, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base14ProcessMetricsD1Ev(%"class.base::ProcessMetrics"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5FrameD1Ev(%"struct.base::Frame"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRmRPKNS1_11ModuleCache6ModuleEEEEvDpOT_(%"class.std::__1::vector.213"*, i64* dereferenceable(8), %"class.base::ModuleCache::Module"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.base::Frame"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.213"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 4
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 1152921504606846975
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.213"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #13
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.base::Frame"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 4
  %21 = icmp ult i64 %20, 576460752303423487
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 3
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 1152921504606846975
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #13
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 1152921504606846975, %15 ]
  %32 = shl i64 %31, 4
  %33 = tail call i8* @_Znwm(i64 %32) #11
  %34 = bitcast i8* %33 to %"struct.base::Frame"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"struct.base::Frame"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %37, i64 %10
  %39 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %37, i64 %36
  %40 = ptrtoint %"struct.base::Frame"* %39 to i64
  %41 = load i64, i64* %1, align 8
  %42 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %2, align 8
  tail call void @_ZN4base5FrameC1EmPKNS_11ModuleCache6ModuleE(%"struct.base::Frame"* %38, i64 %41, %"class.base::ModuleCache::Module"* %42) #12
  %43 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %38, i64 1
  %44 = ptrtoint %"struct.base::Frame"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.base::Frame"*, %"struct.base::Frame"** %45, align 8
  %47 = ptrtoint %"struct.base::Frame"* %46 to i64
  %48 = load %"struct.base::Frame"*, %"struct.base::Frame"** %4, align 8
  %49 = icmp eq %"struct.base::Frame"* %48, %46
  br i1 %49, label %97, label %50

50:                                               ; preds = %35
  %51 = getelementptr %"struct.base::Frame", %"struct.base::Frame"* %48, i64 -1, i32 0
  %52 = ptrtoint i64* %51 to i64
  %53 = sub i64 %52, %47
  %54 = lshr i64 %53, 4
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 3
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %68, label %58

58:                                               ; preds = %50, %58
  %59 = phi %"struct.base::Frame"* [ %62, %58 ], [ %38, %50 ]
  %60 = phi %"struct.base::Frame"* [ %63, %58 ], [ %48, %50 ]
  %61 = phi i64 [ %66, %58 ], [ %56, %50 ]
  %62 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %59, i64 -1
  %63 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %60, i64 -1
  %64 = bitcast %"struct.base::Frame"* %62 to i8*
  %65 = bitcast %"struct.base::Frame"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false) #12
  %66 = add i64 %61, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %58, !llvm.loop !14

68:                                               ; preds = %58, %50
  %69 = phi %"struct.base::Frame"* [ undef, %50 ], [ %62, %58 ]
  %70 = phi %"struct.base::Frame"* [ %38, %50 ], [ %62, %58 ]
  %71 = phi %"struct.base::Frame"* [ %48, %50 ], [ %63, %58 ]
  %72 = icmp ult i64 %53, 48
  br i1 %72, label %93, label %73

73:                                               ; preds = %68, %73
  %74 = phi %"struct.base::Frame"* [ %88, %73 ], [ %70, %68 ]
  %75 = phi %"struct.base::Frame"* [ %89, %73 ], [ %71, %68 ]
  %76 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %74, i64 -1
  %77 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %75, i64 -1
  %78 = bitcast %"struct.base::Frame"* %76 to i8*
  %79 = bitcast %"struct.base::Frame"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 16, i1 false) #12
  %80 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %74, i64 -2
  %81 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %75, i64 -2
  %82 = bitcast %"struct.base::Frame"* %80 to i8*
  %83 = bitcast %"struct.base::Frame"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 16, i1 false) #12
  %84 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %74, i64 -3
  %85 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %75, i64 -3
  %86 = bitcast %"struct.base::Frame"* %84 to i8*
  %87 = bitcast %"struct.base::Frame"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 16, i1 false) #12
  %88 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %74, i64 -4
  %89 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %75, i64 -4
  %90 = bitcast %"struct.base::Frame"* %88 to i8*
  %91 = bitcast %"struct.base::Frame"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 16, i1 false) #12
  %92 = icmp eq %"struct.base::Frame"* %89, %46
  br i1 %92, label %93, label %73

93:                                               ; preds = %73, %68
  %94 = phi %"struct.base::Frame"* [ %69, %68 ], [ %88, %73 ]
  %95 = load i64, i64* %7, align 8
  %96 = load %"struct.base::Frame"*, %"struct.base::Frame"** %4, align 8
  br label %97

97:                                               ; preds = %35, %93
  %98 = phi %"struct.base::Frame"* [ %96, %93 ], [ %46, %35 ]
  %99 = phi %"struct.base::Frame"* [ %94, %93 ], [ %38, %35 ]
  %100 = phi i64 [ %95, %93 ], [ %47, %35 ]
  %101 = ptrtoint %"struct.base::Frame"* %99 to i64
  store i64 %101, i64* %7, align 8
  store i64 %44, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %102 = inttoptr i64 %100 to %"struct.base::Frame"*
  %103 = icmp eq %"struct.base::Frame"* %98, %102
  br i1 %103, label %108, label %104

104:                                              ; preds = %97, %104
  %105 = phi %"struct.base::Frame"* [ %106, %104 ], [ %98, %97 ]
  %106 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %105, i64 -1
  tail call void @_ZN4base5FrameD1Ev(%"struct.base::Frame"* %106) #12
  %107 = icmp eq %"struct.base::Frame"* %106, %102
  br i1 %107, label %108, label %104

108:                                              ; preds = %104, %97
  %109 = icmp eq i64 %100, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %100 to i8*
  tail call void @_ZdlPv(i8* %111) #11
  br label %112

112:                                              ; preds = %108, %110
  ret void
}

declare void @_ZN4base5FrameC1EmPKNS_11ModuleCache6ModuleE(%"struct.base::Frame"*, i64, %"class.base::ModuleCache::Module"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS_9TimeDeltaEEJS7_RS8_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS_9TimeDeltaEEJS7_RS8_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFv13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS_9TimeDeltaEEJS5_RS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFv13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS_9TimeDeltaEEJS5_RS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN22HeapProfilerController12MergeSamplesERKNSt3__16vectorIN4base20SamplingHeapProfiler6SampleENS0_9allocatorIS4_EEEE: argument 0"}
!9 = distinct !{!9, !"_ZN22HeapProfilerController12MergeSamplesERKNSt3__16vectorIN4base20SamplingHeapProfiler6SampleENS0_9allocatorIS4_EEEE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16__treeINS_12__value_typeIN4base20SamplingHeapProfiler6SampleEN22HeapProfilerController11SampleValueEEENS_19__map_value_compareIS4_S7_NS5_16SampleComparatorELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!13 = !{i8 0, i8 2}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
