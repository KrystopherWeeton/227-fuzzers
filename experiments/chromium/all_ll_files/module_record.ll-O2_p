; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/module_record.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/module_record.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.165", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.110", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::Worklist.41"* }
%"class.blink::Worklist.41" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist.48"* }
%"class.blink::Worklist.48" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist.55"* }
%"class.blink::Worklist.55" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.90", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64 }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { float }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.113", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.133" }
%"class.WTF::VectorBuffer.133" = type { %"class.WTF::VectorBufferBase.134" }
%"class.WTF::VectorBufferBase.134" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.147" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.41"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.48"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.55"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.169" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__cxx_atomic_impl.167" }
%"struct.std::__1::__cxx_atomic_impl.167" = type { %"struct.std::__1::__cxx_atomic_base_impl.168" }
%"struct.std::__1::__cxx_atomic_base_impl.168" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ModuleRecordProduceCacheData" = type { %"class.blink::Member", i32, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SingleCachedMetadataHandler"* }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::SingleCachedMetadataHandler" = type <{ %"class.blink::CachedMetadataHandler", i8, [7 x i8] }>
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.v8::Module" = type { i8 }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::UnboundModuleScript" = type { i8 }
%"class.blink::TraceWrapperV8Reference.174" = type { %"class.v8::TracedReference.175" }
%"class.v8::TracedReference.175" = type { %"class.v8::BasicTracedReference.176" }
%"class.v8::BasicTracedReference.176" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ModuleScriptCreationParams" = type <{ %"class.blink::KURL", %"class.blink::KURL", i32, i32, i8, [7 x i8], %"class.blink::ParkableString", %"class.WTF::String", %"class.blink::Persistent", %"class.blink::Persistent.217", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.183" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::KURL"* }
%"class.blink::ParkableString" = type { %class.scoped_refptr.189 }
%class.scoped_refptr.189 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.190" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.204", %"class.WTF::Vector.210", i8, i32 }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.WTF::Vector.196"* }
%"class.WTF::Vector.196" = type { %"class.WTF::VectorBuffer.197" }
%"class.WTF::VectorBuffer.197" = type { %"class.WTF::VectorBufferBase.198" }
%"class.WTF::VectorBufferBase.198" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.210" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.198", [32 x i8] }
%"class.WTF::String" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.178" }
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.217" = type { %"class.blink::PersistentBase.218" }
%"class.blink::PersistentBase.218" = type { %"class.blink::ScriptStreamer"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptStreamer" = type { %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.221", %"class.blink::Member.223", %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.225", %"class.blink::SourceStream"*, %"class.std::__1::unique_ptr.248", i32, %"class.WTF::String", i64, i32, i32, %class.scoped_refptr.260 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.221" = type { %"class.blink::MemberBase.222" }
%"class.blink::MemberBase.222" = type { %"class.blink::ScriptResource"* }
%"class.blink::ScriptResource" = type opaque
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::ResponseBodyLoaderClient"* }
%"class.blink::ResponseBodyLoaderClient" = type opaque
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.228, i8, %"class.mojo::ScopedHandleBase.234", %class.scoped_refptr.235, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.228 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.229" }
%"struct.std::__1::atomic.229" = type { %"struct.std::__1::__atomic_base.230" }
%"struct.std::__1::__atomic_base.230" = type { %"struct.std::__1::__atomic_base.231" }
%"struct.std::__1::__atomic_base.231" = type { %"struct.std::__1::__cxx_atomic_impl.232" }
%"struct.std::__1::__cxx_atomic_impl.232" = type { %"struct.std::__1::__cxx_atomic_base_impl.233" }
%"struct.std::__1::__cxx_atomic_base_impl.233" = type { i32 }
%"class.mojo::ScopedHandleBase.234" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.235 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.237", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.237" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.238 }
%class.scoped_refptr.238 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.239", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.239" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.240" }
%"struct.std::__1::atomic.240" = type { %"struct.std::__1::__atomic_base.241" }
%"struct.std::__1::__atomic_base.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i8 }
%"class.blink::SourceStream" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.v8::ScriptCompiler::StreamedSource"* }
%"class.v8::ScriptCompiler::StreamedSource" = type { %"class.std::__1::unique_ptr.251" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.v8::internal::ScriptStreamingData"* }
%"struct.v8::internal::ScriptStreamingData" = type opaque
%class.scoped_refptr.260 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.std::__1::pair.263"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.263" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.174" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.blink::ReferrerScriptInfo" = type <{ %"class.blink::KURL", i32, [4 x i8], %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.174", %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.275", i32, i32, %"class.blink::Persistent.277" }
%"class.WTF::RefCounted.275" = type { %"class.base::RefCounted.276" }
%"class.base::RefCounted.276" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.277" = type { %"class.blink::PersistentBase.278" }
%"class.blink::PersistentBase.278" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.283" }
%"class.WTF::HashTable.283" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.288" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.288" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.288" = type { %"class.v8::TracedReference.289" }
%"class.v8::TracedReference.289" = type { %"class.v8::BasicTracedReference.290" }
%"class.v8::BasicTracedReference.290" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.274, %"class.blink::Member.291", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.274 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.295", %"class.blink::HeapHashMap.305", %"class.std::__1::unique_ptr.315", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.327", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.330" }
%"class.blink::HeapHashMap.295" = type { %"class.WTF::HashMap.298" }
%"class.WTF::HashMap.298" = type { %"class.WTF::HashTable.299" }
%"class.WTF::HashTable.299" = type <{ %"struct.WTF::KeyValuePair.301"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.301" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.288" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.305" = type { %"class.WTF::HashMap.308" }
%"class.WTF::HashMap.308" = type { %"class.WTF::HashTable.309" }
%"class.WTF::HashTable.309" = type <{ %"struct.WTF::KeyValuePair.311"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.311" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.312" }
%"class.blink::TraceWrapperV8Reference.312" = type { %"class.v8::TracedReference.313" }
%"class.v8::TracedReference.313" = type { %"class.v8::BasicTracedReference.314" }
%"class.v8::BasicTracedReference.314" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.318" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.327" = type { %"class.v8::Persistent.328" }
%"class.v8::Persistent.328" = type { %"class.v8::PersistentBase.329" }
%"class.v8::PersistentBase.329" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.330" = type { %"class.WTF::HashMap.333" }
%"class.WTF::HashMap.333" = type { %"class.WTF::HashTable.334" }
%"class.WTF::HashTable.334" = type <{ %"struct.WTF::KeyValuePair.336"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.336" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.337" }
%"class.blink::Persistent.337" = type { %"class.blink::PersistentBase.338" }
%"class.blink::PersistentBase.338" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.339" }
%"class.base::StrongAlias.339" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.blink::probe::ExecuteScript" = type <{ %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, i32, [4 x i8] }>
%"class.blink::probe::ProbeBase" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.350", %"class.blink::HeapListHashSet.361", %"class.blink::HeapListHashSet.372", %"class.blink::HeapListHashSet.383", %"class.blink::HeapListHashSet.394", %"class.blink::HeapListHashSet.405", %"class.blink::HeapListHashSet.416", %"class.blink::HeapListHashSet.427", %"class.blink::HeapListHashSet.438", %"class.blink::HeapListHashSet.449", %"class.blink::HeapListHashSet.460", %"class.blink::HeapListHashSet.471", %"class.blink::HeapListHashSet.482", %"class.blink::HeapListHashSet.493", %"class.blink::HeapListHashSet.504", %"class.blink::HeapListHashSet.515", %"class.blink::HeapListHashSet.526", %"class.blink::HeapListHashSet.537", %"class.blink::HeapListHashSet.548" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.346", %"class.blink::Member.348", %"class.blink::Member.348", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.346" = type <{ %"class.blink::Member.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.867", %"class.blink::Member.348", %"class.blink::Member.348" }
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.871", %"class.WTF::Vector.873", i32, [4 x i8], %"class.blink::HeapHashMap.878", i32, i8, [3 x i8] }>
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1048", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1056", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1070", %"class.blink::FrameLoader", %"class.blink::Member.1091", %"class.blink::Member.1093", %"class.blink::Member.1122", %"class.blink::Member.1124", %"class.blink::Member.1126", %"class.blink::Member.1128", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1130", %class.scoped_refptr.1132, %"class.blink::Member.791", %"class.blink::Member.867", %"class.blink::Member.1133", %"class.blink::Member.827", %"class.blink::Member.795", %"class.blink::Member.1135", %"class.blink::Member.1137", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1141", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1147", %"class.std::__1::unique_ptr.1148", %"class.absl::optional.1035", i32, [4 x i8], %"class.std::__1::unique_ptr.1154", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1162", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1167", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1172", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1175", %"class.blink::Member.1177", %"class.blink::Member.1179", %"class.blink::Member.1181", %"class.mojo::StructPtr.1184", %"class.blink::Member.1193", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1195", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.889", %"class.blink::Member.891", %"class.blink::Member.893", i8, i32, i8, i32, %"class.blink::Member.1018", %"class.blink::Member.916", %"class.blink::FrameLifecycle", %"class.blink::Member.887", %"class.blink::Member.887", %"class.blink::Member.887", %"class.blink::Member.887", %"class.blink::Member.887", %"class.blink::Member.887", %"class.blink::Member.871", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1028", i8, %"class.base::UnguessableToken", %"class.absl::optional.1030", %"class.absl::optional.1035", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.887", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.893" = type { %"class.blink::MemberBase.894" }
%"class.blink::MemberBase.894" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.887", %"class.blink::Member.916", %"class.blink::Member.918", %"class.blink::Member.920", i8, %"class.WTF::Vector.922" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.909" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.897" }
%"class.blink::HeapVector.897" = type { %"class.WTF::Vector.900" }
%"class.WTF::Vector.900" = type { %"class.WTF::VectorBuffer.901" }
%"class.WTF::VectorBuffer.901" = type { %"class.WTF::VectorBufferBase.902", [32 x i8] }
%"class.WTF::VectorBufferBase.902" = type { %"struct.std::__1::pair.903"*, i32, i32 }
%"struct.std::__1::pair.903" = type { %"class.WTF::AtomicString", %"class.blink::Member.904" }
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::HeapVector.906"* }
%"class.blink::HeapVector.906" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.WTF::Vector.912"* }
%"class.WTF::Vector.912" = type opaque
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.922" = type { %"class.WTF::VectorBuffer.923" }
%"class.WTF::VectorBuffer.923" = type { %"class.WTF::VectorBufferBase.924" }
%"class.WTF::VectorBufferBase.924" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.925", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.925" = type { %"class.base::StrongAlias.926" }
%"class.base::StrongAlias.926" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1010" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.927, %"class.std::__1::unique_ptr.696", %"class.mojo::ScopedHandleBase.928", [4 x i8], %class.scoped_refptr.228, i32 }>
%class.scoped_refptr.927 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.228, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase.928", [4 x i8], %"class.absl::optional.976", %"class.absl::optional.981", %"class.absl::optional.935", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1001", i8, [7 x i8], %class.scoped_refptr.228, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.723" }>
%"class.base::RefCountedThreadSafe.723" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.589 }
%union.anon.589 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.727", %"class.std::__1::unique_ptr.733", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.739" }
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.739" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.711", %"class.mojo::ScopedHandleBase.928", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.228, %"class.std::__1::unique_ptr.225", %"class.absl::optional.929", %"struct.std::__1::atomic.165", i8, i8, i8, i8, i32, i32, %"class.absl::optional.935", %"class.std::__1::unique_ptr.940", i8, i64, %class.scoped_refptr.973, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.975" }
%"class.base::OnceCallback.711" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.929" = type { %"class.absl::optional_internal::optional_data.930" }
%"class.absl::optional_internal::optional_data.930" = type { %"class.absl::optional_internal::optional_data_base.931" }
%"class.absl::optional_internal::optional_data_base.931" = type { %"class.absl::optional_internal::optional_data_dtor_base.932" }
%"class.absl::optional_internal::optional_data_dtor_base.932" = type { i8, %union.anon.933 }
%union.anon.933 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.934", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.934" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.940" = type { %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.943", i8, i64, %class.scoped_refptr.944, %class.scoped_refptr.969 }
%"class.base::RepeatingCallback.943" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.944 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.945", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.947", %"class.std::__1::map.958", i8, [7 x i8] }>
%"class.base::RefCounted.945" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.946 }
%class.scoped_refptr.946 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.947" = type { %"class.std::__1::__tree.948" }
%"class.std::__1::__tree.948" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::map.958" = type { %"class.std::__1::__tree.959" }
%"class.std::__1::__tree.959" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.960", %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%class.scoped_refptr.969 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.973 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.716 }
%class.scoped_refptr.716 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.788", [4 x i8], %"class.base::RepeatingCallback.699", %class.scoped_refptr.228, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.178", [4 x i8] }>
%"class.base::RefCountedThreadSafe.788" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.699" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.974 }
%class.scoped_refptr.974 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.975" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.976" = type { %"class.absl::optional_internal::optional_data.977" }
%"class.absl::optional_internal::optional_data.977" = type { %"class.absl::optional_internal::optional_data_base.978" }
%"class.absl::optional_internal::optional_data_base.978" = type { %"class.absl::optional_internal::optional_data_dtor_base.979" }
%"class.absl::optional_internal::optional_data_dtor_base.979" = type { i8, %union.anon.980 }
%union.anon.980 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.981" = type { %"class.absl::optional_internal::optional_data.982" }
%"class.absl::optional_internal::optional_data.982" = type { %"class.absl::optional_internal::optional_data_base.983" }
%"class.absl::optional_internal::optional_data_base.983" = type { %"class.absl::optional_internal::optional_data_dtor_base.984" }
%"class.absl::optional_internal::optional_data_dtor_base.984" = type { i8, [7 x i8], %union.anon.985 }
%union.anon.985 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.935" = type { %"class.absl::optional_internal::optional_data.936" }
%"class.absl::optional_internal::optional_data.936" = type { %"class.absl::optional_internal::optional_data_base.937" }
%"class.absl::optional_internal::optional_data_base.937" = type { %"class.absl::optional_internal::optional_data_dtor_base.938" }
%"class.absl::optional_internal::optional_data_dtor_base.938" = type { i8, %union.anon.939 }
%union.anon.939 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.986 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.986 = type { %"class.std::__1::map.989" }
%"class.std::__1::map.989" = type { %"class.std::__1::__tree.990" }
%"class.std::__1::__tree.990" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.991", %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1000"*, i64 }
%"class.std::__1::unique_ptr.1000" = type opaque
%"class.std::__1::map.1001" = type { %"class.std::__1::__tree.1002" }
%"class.std::__1::__tree.1002" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1003", %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.699", %"class.base::OnceCallback", %"class.absl::optional.700", %"class.absl::optional.705", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.718", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.740", %"class.std::__1::map.751", i64, %"class.base::OnceCallback.711", %"class.base::OnceCallback.760", i8, %class.scoped_refptr.228, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.761" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.700" = type { %"class.absl::optional_internal::optional_data.701" }
%"class.absl::optional_internal::optional_data.701" = type { %"class.absl::optional_internal::optional_data_base.702" }
%"class.absl::optional_internal::optional_data_base.702" = type { %"class.absl::optional_internal::optional_data_dtor_base.703" }
%"class.absl::optional_internal::optional_data_dtor_base.703" = type { i8, %union.anon.704 }
%union.anon.704 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.705" = type { %"class.absl::optional_internal::optional_data.706" }
%"class.absl::optional_internal::optional_data.706" = type { %"class.absl::optional_internal::optional_data_base.707" }
%"class.absl::optional_internal::optional_data_base.707" = type { %"class.absl::optional_internal::optional_data_dtor_base.708" }
%"class.absl::optional_internal::optional_data_dtor_base.708" = type { i8, %union.anon.709 }
%union.anon.709 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.711" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.228, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.710" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.710" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.717 }
%class.scoped_refptr.717 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.721", %class.scoped_refptr.722 }
%"class.base::RepeatingCallback.721" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.722 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.723", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.740" = type { %"class.std::__1::__tree.741" }
%"class.std::__1::__tree.741" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.742", %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::map.751" = type { %"class.std::__1::__tree.752" }
%"class.std::__1::__tree.752" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.753", %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.base::OnceCallback.760" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.711" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.761" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase.928" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.887" = type { %"class.blink::MemberBase.888" }
%"class.blink::MemberBase.888" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.887", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1020" }
%"class.std::__1::vector.1020" = type { %"class.std::__1::__vector_base.1021" }
%"class.std::__1::__vector_base.1021" = type { %"struct.std::__1::pair.1022"*, %"struct.std::__1::pair.1022"*, %"class.std::__1::__compressed_pair.1023" }
%"struct.std::__1::pair.1022" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"struct.std::__1::pair.1022"* }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1030" = type { %"class.absl::optional_internal::optional_data.1031" }
%"class.absl::optional_internal::optional_data.1031" = type { %"class.absl::optional_internal::optional_data_base.1032" }
%"class.absl::optional_internal::optional_data_base.1032" = type { %"class.absl::optional_internal::optional_data_dtor_base.1033" }
%"class.absl::optional_internal::optional_data_dtor_base.1033" = type { i8, %union.anon.1034 }
%union.anon.1034 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1040 }
%class.scoped_refptr.1040 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1041" }
%"class.blink::HeapHashSet.1041" = type { %"class.WTF::HashSet.1044" }
%"class.WTF::HashSet.1044" = type { %"class.WTF::HashTable.1045" }
%"class.WTF::HashTable.1045" = type <{ %"class.blink::WeakMember.1047"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1047" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1048" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1049" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.1049" = type { %"class.WTF::HashMap.1052" }
%"class.WTF::HashMap.1052" = type { %"class.WTF::HashTable.1053" }
%"class.WTF::HashTable.1053" = type <{ %"struct.WTF::KeyValuePair.1055"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1055" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1059", %"class.base::WeakPtrFactory.1064" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1063"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1063" = type opaque
%"class.base::WeakPtrFactory.1064" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1068" }
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1832" }
%"class.blink::WeakMember.1832" = type { %"class.blink::MemberBase.1833" }
%"class.blink::MemberBase.1833" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.568" }
%"class.WTF::HashSet.568" = type { %"class.WTF::HashTable.569" }
%"class.WTF::HashTable.569" = type <{ %"class.blink::WeakMember.571"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.571" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.699", %"class.base::RepeatingCallback.1834", i64, %"class.std::__1::map.1835", i8*, i64, %"class.base::WeakPtrFactory.1844" }
%"class.base::RepeatingCallback.1834" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1835" = type { %"class.std::__1::__tree.1836" }
%"class.std::__1::__tree.1836" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1837", %"class.std::__1::__compressed_pair.1841" }
%"class.std::__1::__compressed_pair.1837" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"class.std::__1::__compressed_pair.1841" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.base::WeakPtrFactory.1844" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1070" = type { %"class.WTF::HashSet.1073" }
%"class.WTF::HashSet.1073" = type { %"class.WTF::HashTable.1074" }
%"class.WTF::HashTable.1074" = type <{ %"class.blink::WeakMember.1076"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1076" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.871", %"class.blink::Member.1077", %"class.blink::Member.1079", %"class.std::__1::unique_ptr.1081", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1087" }
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.177 }
%"class.WTF::HashSet.1087" = type { %"class.WTF::HashTable.1088" }
%"class.WTF::HashTable.1088" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1537", %"class.blink::Member.871", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1542", i8, i32, %"class.blink::Color", %"class.absl::optional.1544", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1549", %"class.blink::Member.1551", %"class.blink::Member.1551", %"class.std::__1::unique_ptr.1554", i32, [4 x i8], %"class.WTF::HashSet.1557", %"class.blink::Member.1564", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1566", %"class.blink::HeapHashSet.1573", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1581", i8, %"class.blink::Member.1587", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1599", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1613", i8, %"class.std::__1::unique_ptr.1619", %"class.std::__1::unique_ptr.1736", %"class.WTF::Vector.1742", i32, %class.scoped_refptr.1747, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1748", %"class.blink::Member.1750", %"class.blink::Member.1752", %"class.blink::HeapHashSet.1754", %"class.blink::HeapHashSet.1761", %"class.std::__1::unique_ptr.1768", %"class.std::__1::unique_ptr.1775", %"class.WTF::Vector.1288" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1537" = type { %"class.WTF::HashTable.1538" }
%"class.WTF::HashTable.1538" = type <{ %class.scoped_refptr.1541*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1541 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1542" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1543", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.260, %"class.base::WeakPtrFactory.1318" }
%"class.base::WeakPtrFactory.1318" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1543" = type { %"class.blink::MemberBase.1092" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1544" = type { %"class.absl::optional_internal::optional_data.1545" }
%"class.absl::optional_internal::optional_data.1545" = type { %"class.absl::optional_internal::optional_data_base.1546" }
%"class.absl::optional_internal::optional_data_base.1546" = type { %"class.absl::optional_internal::optional_data_dtor_base.1547" }
%"class.absl::optional_internal::optional_data_dtor_base.1547" = type { i8, %union.anon.1548 }
%union.anon.1548 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1549" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1551" = type { %"class.blink::MemberBase.1552" }
%"class.blink::MemberBase.1552" = type { %"class.blink::HeapHashSet.1553"* }
%"class.blink::HeapHashSet.1553" = type opaque
%"class.std::__1::unique_ptr.1554" = type { %"class.std::__1::__compressed_pair.1555" }
%"class.std::__1::__compressed_pair.1555" = type { %"struct.std::__1::__compressed_pair_elem.1556" }
%"struct.std::__1::__compressed_pair_elem.1556" = type { %"class.WTF::HashSet.1557"* }
%"class.WTF::HashSet.1557" = type { %"class.WTF::HashTable.1558" }
%"class.WTF::HashTable.1558" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1566" = type { %"class.WTF::HashSet.1569" }
%"class.WTF::HashSet.1569" = type { %"class.WTF::HashTable.1570" }
%"class.WTF::HashTable.1570" = type <{ %"class.blink::Member.1572"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1572" = type opaque
%"class.blink::HeapHashSet.1573" = type { %"class.WTF::HashSet.1576" }
%"class.WTF::HashSet.1576" = type { %"class.WTF::HashTable.1577" }
%"class.WTF::HashTable.1577" = type <{ %"class.blink::Member.1579"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1581" = type { %"class.std::__1::__compressed_pair.1582" }
%"class.std::__1::__compressed_pair.1582" = type { %"struct.std::__1::__compressed_pair_elem.1583" }
%"struct.std::__1::__compressed_pair_elem.1583" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1591", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1591" = type { %"class.WTF::HashTable.1592" }
%"class.WTF::HashTable.1592" = type <{ %"struct.WTF::KeyValuePair.1594"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1594" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1595", i32, i32 }
%"class.WTF::Vector.1595" = type { %"class.WTF::VectorBuffer.1596" }
%"class.WTF::VectorBuffer.1596" = type { %"class.WTF::VectorBufferBase.1597" }
%"class.WTF::VectorBufferBase.1597" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1599" = type { %"class.WTF::LinkedHashSet.1602" }
%"class.WTF::LinkedHashSet.1602" = type { %"class.WTF::HashMap.1603", %"class.WTF::VectorBackedLinkedList.1607" }
%"class.WTF::HashMap.1603" = type { %"class.WTF::HashTable.1604" }
%"class.WTF::HashTable.1604" = type <{ %"struct.WTF::KeyValuePair.1606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1606" = type opaque
%"class.WTF::VectorBackedLinkedList.1607" = type { %"class.WTF::Vector.1608", i32, i32 }
%"class.WTF::Vector.1608" = type { %"class.WTF::VectorBuffer.1609" }
%"class.WTF::VectorBuffer.1609" = type { %"class.WTF::VectorBufferBase.1610" }
%"class.WTF::VectorBufferBase.1610" = type { %"class.WTF::VectorBackedLinkedListNode.1611"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1611" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1613" = type { %"class.std::__1::__compressed_pair.1614" }
%"class.std::__1::__compressed_pair.1614" = type { %"struct.std::__1::__compressed_pair_elem.1615" }
%"struct.std::__1::__compressed_pair_elem.1615" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1619" = type { %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.1621" }
%"struct.std::__1::__compressed_pair_elem.1621" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1622, %class.scoped_refptr.1622, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1713", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1718", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1622 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1623", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1630" }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1625", i32, [4 x i8] }>
%"class.WTF::Vector.1625" = type { %"class.WTF::VectorBuffer.1626" }
%"class.WTF::VectorBuffer.1626" = type { %"class.WTF::VectorBufferBase.1627" }
%"class.WTF::VectorBufferBase.1627" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1630" = type { %"class.WTF::VectorBuffer.1631" }
%"class.WTF::VectorBuffer.1631" = type { %"class.WTF::VectorBufferBase.1632" }
%"class.WTF::VectorBufferBase.1632" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1636", %"class.std::__1::unique_ptr.1685", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1633, %class.scoped_refptr.1634, %class.scoped_refptr.1635 }
%class.scoped_refptr.1633 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1649", i8, i8, %class.scoped_refptr.1633, i32, i32 }
%"class.WTF::RefCounted.1649" = type { %"class.base::RefCounted.1650" }
%"class.base::RefCounted.1650" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1634 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1804" }
%"class.blink::PaintPropertyNode.1804" = type { %"class.WTF::RefCounted.1805", i8, i8, %class.scoped_refptr.1634, i32, i32 }
%"class.WTF::RefCounted.1805" = type { %"class.base::RefCounted.1806" }
%"class.base::RefCounted.1806" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1635 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1801" }
%"class.blink::PaintPropertyNode.1801" = type { %"class.WTF::RefCounted.1802", i8, i8, %class.scoped_refptr.1635, i32, i32 }
%"class.WTF::RefCounted.1802" = type { %"class.base::RefCounted.1803" }
%"class.base::RefCounted.1803" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1636" = type { %"class.std::__1::__compressed_pair.1637" }
%"class.std::__1::__compressed_pair.1637" = type { %"struct.std::__1::__compressed_pair_elem.1638" }
%"struct.std::__1::__compressed_pair_elem.1638" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1639", %"class.WTF::Vector.1644", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1639" = type { %"class.WTF::VectorBuffer.1640" }
%"class.WTF::VectorBuffer.1640" = type { %"class.WTF::VectorBufferBase.1641" }
%"class.WTF::VectorBufferBase.1641" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1644" = type { %"class.WTF::VectorBuffer.1645" }
%"class.WTF::VectorBuffer.1645" = type { %"class.WTF::VectorBufferBase.1646" }
%"class.WTF::VectorBufferBase.1646" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1664" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1657, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1658", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1651" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1651" = type { %"class.std::__1::__compressed_pair.1652" }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.1653" }
%"struct.std::__1::__compressed_pair_elem.1653" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1657 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1786", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1786" = type { %"class.WTF::RefCounted.1787", i8, i8, %class.scoped_refptr.1657, i32, i32 }
%"class.WTF::RefCounted.1787" = type { %"class.base::RefCounted.1788" }
%"class.base::RefCounted.1788" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1789" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1789" = type { %"class.absl::optional_internal::optional_data.1790" }
%"class.absl::optional_internal::optional_data.1790" = type { %"class.absl::optional_internal::optional_data_base.1791" }
%"class.absl::optional_internal::optional_data_base.1791" = type { %"class.absl::optional_internal::optional_data_dtor_base.1792" }
%"class.absl::optional_internal::optional_data_dtor_base.1792" = type { i8, %union.anon.1793 }
%union.anon.1793 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1794", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1794" = type { %"class.std::__1::__vector_base.1795" }
%"class.std::__1::__vector_base.1795" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1796" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1658" = type { %"class.std::__1::__compressed_pair.1659" }
%"class.std::__1::__compressed_pair.1659" = type { %"struct.std::__1::__compressed_pair_elem.1660" }
%"struct.std::__1::__compressed_pair_elem.1660" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1664" = type { %"class.std::__1::__compressed_pair.1665" }
%"class.std::__1::__compressed_pair.1665" = type { %"struct.std::__1::__compressed_pair_elem.1666" }
%"struct.std::__1::__compressed_pair_elem.1666" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1667", %"class.std::__1::unique_ptr.1673", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1667" = type { %"class.std::__1::__compressed_pair.1668" }
%"class.std::__1::__compressed_pair.1668" = type { %"struct.std::__1::__compressed_pair_elem.1669" }
%"struct.std::__1::__compressed_pair_elem.1669" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1673" = type { %"class.std::__1::__compressed_pair.1674" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.1675" }
%"struct.std::__1::__compressed_pair_elem.1675" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1685" = type { %"class.std::__1::__compressed_pair.1686" }
%"class.std::__1::__compressed_pair.1686" = type { %"struct.std::__1::__compressed_pair_elem.1687" }
%"struct.std::__1::__compressed_pair_elem.1687" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1688", %"class.absl::optional.1688" }
%"class.absl::optional.1688" = type { %"class.absl::optional_internal::optional_data.1689" }
%"class.absl::optional_internal::optional_data.1689" = type { %"class.absl::optional_internal::optional_data_base.1690" }
%"class.absl::optional_internal::optional_data_base.1690" = type { %"class.absl::optional_internal::optional_data_dtor_base.1691" }
%"class.absl::optional_internal::optional_data_dtor_base.1691" = type { i8, [3 x i8], %union.anon.1692 }
%union.anon.1692 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1630"*, %"class.absl::optional.1698", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1698" = type { %"class.absl::optional_internal::optional_data.1699" }
%"class.absl::optional_internal::optional_data.1699" = type { %"class.absl::optional_internal::optional_data_base.1700" }
%"class.absl::optional_internal::optional_data_base.1700" = type { %"class.absl::optional_internal::optional_data_dtor_base.1701" }
%"class.absl::optional_internal::optional_data_dtor_base.1701" = type { i8, %union.anon.1702 }
%union.anon.1702 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1703", %"class.WTF::Vector.1708" }
%"class.WTF::Vector.1703" = type { %"class.WTF::VectorBuffer.1704" }
%"class.WTF::VectorBuffer.1704" = type { %"class.WTF::VectorBufferBase.1705", [128 x i8] }
%"class.WTF::VectorBufferBase.1705" = type { i32*, i32, i32 }
%"class.WTF::Vector.1708" = type { %"class.WTF::VectorBuffer.1709" }
%"class.WTF::VectorBuffer.1709" = type { %"class.WTF::VectorBufferBase.1710", [128 x i8] }
%"class.WTF::VectorBufferBase.1710" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1713" = type { %"class.WTF::VectorBuffer.1714" }
%"class.WTF::VectorBuffer.1714" = type { %"class.WTF::VectorBufferBase.1715" }
%"class.WTF::VectorBufferBase.1715" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1718" = type { %"class.WTF::HashTable.1719" }
%"class.WTF::HashTable.1719" = type <{ %"struct.WTF::KeyValuePair.1722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1722" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1723", %"class.WTF::Vector.1728" }
%"class.WTF::HashMap.1723" = type { %"class.WTF::HashTable.1724" }
%"class.WTF::HashTable.1724" = type <{ %"struct.WTF::KeyValuePair.1727"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1727" = type opaque
%"class.WTF::Vector.1728" = type { %"class.WTF::VectorBuffer.1729" }
%"class.WTF::VectorBuffer.1729" = type { %"class.WTF::VectorBufferBase.1730" }
%"class.WTF::VectorBufferBase.1730" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1736" = type { %"class.std::__1::__compressed_pair.1737" }
%"class.std::__1::__compressed_pair.1737" = type { %"struct.std::__1::__compressed_pair_elem.1738" }
%"struct.std::__1::__compressed_pair_elem.1738" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1742" = type { %"class.WTF::VectorBuffer.1743" }
%"class.WTF::VectorBuffer.1743" = type { %"class.WTF::VectorBufferBase.1744" }
%"class.WTF::VectorBufferBase.1744" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1747 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1748" = type { %"class.blink::MemberBase.1749" }
%"class.blink::MemberBase.1749" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1750" = type { %"class.blink::MemberBase.1751" }
%"class.blink::MemberBase.1751" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1752" = type { %"class.blink::MemberBase.1753" }
%"class.blink::MemberBase.1753" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1754" = type { %"class.WTF::HashSet.1757" }
%"class.WTF::HashSet.1757" = type { %"class.WTF::HashTable.1758" }
%"class.WTF::HashTable.1758" = type <{ %"class.blink::WeakMember.1760"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1760" = type opaque
%"class.blink::HeapHashSet.1761" = type { %"class.WTF::HashSet.1764" }
%"class.WTF::HashSet.1764" = type { %"class.WTF::HashTable.1765" }
%"class.WTF::HashTable.1765" = type <{ %"class.blink::WeakMember.1767"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1767" = type opaque
%"class.std::__1::unique_ptr.1768" = type { %"class.std::__1::__compressed_pair.1769" }
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1771" }
%"class.base::time_internal::TimeBase.1771" = type { i64 }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1778", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1778" = type { %"class.absl::optional_internal::optional_data.1779" }
%"class.absl::optional_internal::optional_data.1779" = type { %"class.absl::optional_internal::optional_data_base.1780" }
%"class.absl::optional_internal::optional_data_base.1780" = type { %"class.absl::optional_internal::optional_data_dtor_base.1781" }
%"class.absl::optional_internal::optional_data_dtor_base.1781" = type { i8, %union.anon.1782 }
%union.anon.1782 = type { %"class.base::Time" }
%"class.WTF::Vector.1288" = type { %"class.WTF::VectorBuffer.1289" }
%"class.WTF::VectorBuffer.1289" = type { %"class.WTF::VectorBufferBase.1290" }
%"class.WTF::VectorBufferBase.1290" = type { %"class.base::OnceCallback.711"*, i32, i32 }
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.1106" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.1095", %"class.blink::Member.1095" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1095", %"class.blink::Member.1097", %"class.blink::Member.1095", %"class.blink::Member.1095", %"class.blink::Member.1099" }
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1200", %"class.blink::Member.1202", %"class.blink::Member.1097", %"class.blink::Member.1204", %"class.blink::Member.1204", %"class.blink::Member.1226", %"class.blink::Member.1228", %"class.blink::Member.1230", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1235", %"class.blink::HeapVector.1237" }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1280", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1288", %"class.WTF::Vector.1288", i8, i32, %"class.blink::Member.1293", %"class.blink::Member.620", %"class.blink::Member.1295", %"class.blink::Member.1297", %"class.blink::Member.1299", %"class.blink::Member.1301", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1303", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1309", %"class.blink::Member.1311", %"class.blink::Member.1243", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1313", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.1219", %"class.blink::Member.1093", %"class.blink::Member.1320", %"class.blink::Member.1093", %"class.blink::Member.1093", %"class.blink::Member.1093", %"class.blink::UserActionElementSet", %"class.blink::Member.1329", double, double, i64, i64, %"class.blink::HeapHashSet.1331", %"class.blink::HeapHashSet.1338", i16, i8, %"class.blink::Member.1345", %"class.blink::Member.1347", %"class.blink::Member.1349", %"class.blink::Member.1351", %"class.blink::TextLinkColors", %"class.blink::Member.1353", i8, [7 x i8], %"class.blink::HeapHashMap.1355", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1093", %"class.WTF::Vector.1362", %"class.blink::Member.1367", %"class.blink::Member.1371", i8, %"class.blink::Member.1093", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1373", %"class.blink::HeapVector.1375", %"class.std::__1::unique_ptr.1383", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1389", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1402", %"class.WTF::Vector.1404", i8, i8, %"class.std::__1::unique_ptr.1409", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1219", %"class.blink::HeapVector.1415", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1423", i8, i32, %"class.blink::Member.1425", %"class.blink::Member.1427", %"class.blink::Member.1429", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1431", %"class.WTF::HashMap.1433", %"class.blink::Member.1438", %"class.blink::Member.1440", %"class.blink::Member.1442", %"class.blink::Member.1444", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1446", i8, i32, %"class.blink::Member.1453", %"class.blink::Member.1455", i32, %"class.blink::Member.1457", %"class.blink::Member.1459", %"class.blink::Member.1461", %"class.std::__1::unique_ptr.1463", i64, %"class.std::__1::unique_ptr.1469", i32, i32, %"class.blink::Member.1475", %"class.blink::Member.1477", %"class.blink::Member.1479", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1481", %"class.WTF::Vector.873", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1483", %"class.blink::Member.1490", %"class.std::__1::unique_ptr.1492", %"class.blink::Member.1498", i8, i8, %"class.WTF::String", %"class.blink::Member.1500", i8, [7 x i8], %"class.blink::HeapHashMap.1502", %"class.blink::HeapObserverSet.1509", %"class.blink::Member.1517", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1519", i32, i8, i8, %"class.blink::WeakMember.1521", %"class.blink::Member.1522" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.1280" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1281" }
%"class.blink::HeapHashMap.1281" = type { %"class.WTF::HashMap.1284" }
%"class.WTF::HashMap.1284" = type { %"class.WTF::HashTable.1285" }
%"class.WTF::HashTable.1285" = type <{ %"struct.WTF::KeyValuePair.1287"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1287" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1293" = type { %"class.blink::MemberBase.1294" }
%"class.blink::MemberBase.1294" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::ExecutionContext"* }
%"class.blink::Member.1295" = type { %"class.blink::MemberBase.1296" }
%"class.blink::MemberBase.1296" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1303" = type { %"class.std::__1::__compressed_pair.1304" }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.1305" }
%"struct.std::__1::__compressed_pair_elem.1305" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1245", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1247, %"class.WTF::Vector.1248", %"class.WTF::Vector.1248", %"class.blink::Member.1095", %"class.blink::Member.1253", %"class.blink::HeapHashSet.1257", %"class.blink::Member.1202", %"class.WTF::HashSet.1264", %"class.WTF::TextPosition", %"class.blink::Member.1268", %"class.blink::HeapVector.1270", %"class.blink::Member.1277" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1245" = type { %"class.blink::MemberBase.1246" }
%"class.blink::MemberBase.1246" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1247 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1248" = type { %"class.WTF::VectorBuffer.1249" }
%"class.WTF::VectorBuffer.1249" = type { %"class.WTF::VectorBufferBase.1250" }
%"class.WTF::VectorBufferBase.1250" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1255" }
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1257" = type { %"class.WTF::HashSet.1260" }
%"class.WTF::HashSet.1260" = type { %"class.WTF::HashTable.1261" }
%"class.WTF::HashTable.1261" = type <{ %"class.blink::WeakMember.1263"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1263" = type { %"class.blink::MemberBase.1098" }
%"class.WTF::HashSet.1264" = type { %"class.WTF::HashTable.1265" }
%"class.WTF::HashTable.1265" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1270" = type { %"class.WTF::Vector.1273" }
%"class.WTF::Vector.1273" = type { %"class.WTF::VectorBuffer.1274" }
%"class.WTF::VectorBuffer.1274" = type { %"class.WTF::VectorBufferBase.1275" }
%"class.WTF::VectorBufferBase.1275" = type { %"class.blink::Member.1253"*, i32, i32 }
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1313" = type { %"class.WTF::VectorBuffer.1314" }
%"class.WTF::VectorBuffer.1314" = type { %"class.WTF::VectorBufferBase.1315" }
%"class.WTF::VectorBufferBase.1315" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.340 }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1202", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.1095", %"class.blink::Member.1095", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1322" }
%"class.blink::HeapHashMap.1322" = type { %"class.WTF::HashMap.1325" }
%"class.WTF::HashMap.1325" = type { %"class.WTF::HashTable.1326" }
%"class.WTF::HashTable.1326" = type <{ %"struct.WTF::KeyValuePair.1328"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1328" = type opaque
%"class.blink::Member.1329" = type { %"class.blink::MemberBase.1330" }
%"class.blink::MemberBase.1330" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1331" = type { %"class.WTF::HashSet.1334" }
%"class.WTF::HashSet.1334" = type { %"class.WTF::HashTable.1335" }
%"class.WTF::HashTable.1335" = type <{ %"class.blink::WeakMember.1337"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1337" = type opaque
%"class.blink::HeapHashSet.1338" = type { %"class.WTF::HashSet.1341" }
%"class.WTF::HashSet.1341" = type { %"class.WTF::HashTable.1342" }
%"class.WTF::HashTable.1342" = type <{ %"class.blink::WeakMember.1344"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1344" = type opaque
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1349" = type { %"class.blink::MemberBase.1350" }
%"class.blink::MemberBase.1350" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1097", %"class.blink::HeapVector.1237" }
%"class.blink::Member.1351" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1355" = type { %"class.WTF::HashMap.1358" }
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1361" = type opaque
%"class.WTF::Vector.1362" = type { %"class.WTF::VectorBuffer.1363" }
%"class.WTF::VectorBuffer.1363" = type { %"class.WTF::VectorBufferBase.1364" }
%"class.WTF::VectorBufferBase.1364" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1367" = type { %"class.blink::MemberBase.1368" }
%"class.blink::MemberBase.1368" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1375" = type { %"class.WTF::Vector.1378" }
%"class.WTF::Vector.1378" = type { %"class.WTF::VectorBuffer.1379" }
%"class.WTF::VectorBuffer.1379" = type { %"class.WTF::VectorBufferBase.1380" }
%"class.WTF::VectorBufferBase.1380" = type { %"class.blink::Member.1381"*, i32, i32 }
%"class.blink::Member.1381" = type opaque
%"class.std::__1::unique_ptr.1383" = type { %"class.std::__1::__compressed_pair.1384" }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1389" = type { %"class.WTF::HashSet.1392" }
%"class.WTF::HashSet.1392" = type { %"class.WTF::HashTable.1393" }
%"class.WTF::HashTable.1393" = type <{ %"class.blink::WeakMember.1395"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1395" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1396", i32, [4 x i8] }>
%"class.WTF::Vector.1396" = type { %"class.WTF::VectorBuffer.1397" }
%"class.WTF::VectorBuffer.1397" = type { %"class.WTF::VectorBufferBase.1398" }
%"class.WTF::VectorBufferBase.1398" = type { %"struct.std::__1::pair.1399"*, i32, i32 }
%"struct.std::__1::pair.1399" = type opaque
%"class.blink::Member.1402" = type { %"class.blink::MemberBase.1403" }
%"class.blink::MemberBase.1403" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1404" = type { %"class.WTF::VectorBuffer.1405" }
%"class.WTF::VectorBuffer.1405" = type { %"class.WTF::VectorBufferBase.1406" }
%"class.WTF::VectorBufferBase.1406" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1409" = type { %"class.std::__1::__compressed_pair.1410" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.1411" }
%"struct.std::__1::__compressed_pair_elem.1411" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1219" = type { %"class.WTF::Vector.1222" }
%"class.WTF::Vector.1222" = type { %"class.WTF::VectorBuffer.1223" }
%"class.WTF::VectorBuffer.1223" = type { %"class.WTF::VectorBufferBase.1224" }
%"class.WTF::VectorBufferBase.1224" = type { %"class.blink::Member.1093"*, i32, i32 }
%"class.blink::HeapVector.1415" = type { %"class.WTF::Vector.1418" }
%"class.WTF::Vector.1418" = type { %"class.WTF::VectorBuffer.1419" }
%"class.WTF::VectorBuffer.1419" = type { %"class.WTF::VectorBufferBase.1420" }
%"class.WTF::VectorBufferBase.1420" = type { %"class.blink::Member.1421"*, i32, i32 }
%"class.blink::Member.1421" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1202" }
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1433" = type { %"class.WTF::HashTable.1434" }
%"class.WTF::HashTable.1434" = type <{ %"struct.WTF::KeyValuePair.1437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1437" = type opaque
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1442" = type { %"class.blink::MemberBase.1443" }
%"class.blink::MemberBase.1443" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1444" = type { %"class.blink::MemberBase.1445" }
%"class.blink::MemberBase.1445" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1319", { i64, i64 } }
%"class.blink::WeakMember.1319" = type { %"class.blink::MemberBase.1203" }
%"class.blink::HeapHashSet.1446" = type { %"class.WTF::HashSet.1449" }
%"class.WTF::HashSet.1449" = type { %"class.WTF::HashTable.1450" }
%"class.WTF::HashTable.1450" = type <{ %"class.blink::Member.1452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1452" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1463" = type { %"class.std::__1::__compressed_pair.1464" }
%"class.std::__1::__compressed_pair.1464" = type { %"struct.std::__1::__compressed_pair_elem.1465" }
%"struct.std::__1::__compressed_pair_elem.1465" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1483" = type { %"class.WTF::HashMap.1486" }
%"class.WTF::HashMap.1486" = type { %"class.WTF::HashTable.1487" }
%"class.WTF::HashTable.1487" = type <{ %"struct.WTF::KeyValuePair.1489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1489" = type opaque
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1492" = type { %"class.std::__1::__compressed_pair.1493" }
%"class.std::__1::__compressed_pair.1493" = type { %"struct.std::__1::__compressed_pair_elem.1494" }
%"struct.std::__1::__compressed_pair_elem.1494" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1502" = type { %"class.WTF::HashMap.1505" }
%"class.WTF::HashMap.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"struct.WTF::KeyValuePair.1508"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1508" = type opaque
%"class.blink::HeapObserverSet.1509" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1510" }
%"class.blink::HeapHashSet.1510" = type { %"class.WTF::HashSet.1513" }
%"class.WTF::HashSet.1513" = type { %"class.WTF::HashTable.1514" }
%"class.WTF::HashTable.1514" = type <{ %"class.blink::WeakMember.1516"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1516" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1202", %"class.blink::HeapHashSet.1526", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1533", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1526" = type { %"class.WTF::HashSet.1529" }
%"class.WTF::HashSet.1529" = type { %"class.WTF::HashTable.1530" }
%"class.WTF::HashTable.1530" = type <{ %"class.blink::Member.1532"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1532" = type opaque
%"class.blink::HeapTaskRunnerTimer.1533" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1534", { i64, i64 } }
%"class.blink::WeakMember.1534" = type { %"class.blink::MemberBase.1520" }
%"class.blink::WeakMember.1521" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::Node"* }
%"class.blink::Member.1522" = type { %"class.blink::MemberBase.1523" }
%"class.blink::MemberBase.1523" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1208" }
%"class.blink::HeapHashMap.1208" = type { %"class.WTF::HashMap.1211" }
%"class.WTF::HashMap.1211" = type { %"class.WTF::HashTable.1212" }
%"class.WTF::HashTable.1212" = type <{ %"struct.WTF::KeyValuePair.1214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1214" = type { %"class.WTF::AtomicString", %"class.blink::Member.1215" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1093", i32, %"class.blink::HeapVector.1219" }
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1232" }
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::HeapHashMap.1234"* }
%"class.blink::HeapHashMap.1234" = type opaque
%"class.blink::Member.1235" = type { %"class.blink::MemberBase.1236" }
%"class.blink::MemberBase.1236" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1237" = type { %"class.WTF::Vector.1240" }
%"class.WTF::Vector.1240" = type { %"class.WTF::VectorBuffer.1241" }
%"class.WTF::VectorBuffer.1241" = type { %"class.WTF::VectorBufferBase.1242" }
%"class.WTF::VectorBufferBase.1242" = type { %"class.blink::Member.1243"*, i32, i32 }
%"class.blink::Member.1099" = type { %"class.blink::MemberBase.1100" }
%"class.blink::MemberBase.1100" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.1103 }
%class.scoped_refptr.1103 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.1104", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.1110", %"class.blink::Member.1112", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.1110" = type { %"class.WTF::SingleThreadedBitField.1111" }
%"class.WTF::SingleThreadedBitField.1111" = type { i32 }
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1114 }
%class.scoped_refptr.1114 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.1115", %"class.WTF::AtomicString", %"class.WTF::Vector.1117" }
%"class.WTF::RefCounted.1115" = type { %"class.base::RefCounted.1116" }
%"class.base::RefCounted.1116" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1117" = type { %"class.WTF::VectorBuffer.1118" }
%"class.WTF::VectorBuffer.1118" = type { %"class.WTF::VectorBufferBase.1119", [32 x i8] }
%"class.WTF::VectorBufferBase.1119" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::CoreProbeSink"* }
%class.scoped_refptr.1132 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1139" }
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1847" }
%"class.mojo::Remote.1847" = type { %"class.mojo::internal::InterfacePtrState.1848" }
%"class.mojo::internal::InterfacePtrState.1848" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1849" }
%"class.std::__1::unique_ptr.1849" = type { %"class.std::__1::__compressed_pair.1850" }
%"class.std::__1::__compressed_pair.1850" = type { %"struct.std::__1::__compressed_pair_elem.1851" }
%"struct.std::__1::__compressed_pair_elem.1851" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1141" = type { %"class.std::__1::__compressed_pair.1142" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1147" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1035" = type { %"class.absl::optional_internal::optional_data.1036" }
%"class.absl::optional_internal::optional_data.1036" = type { %"class.absl::optional_internal::optional_data_base.1037" }
%"class.absl::optional_internal::optional_data_base.1037" = type { %"class.absl::optional_internal::optional_data_dtor_base.1038" }
%"class.absl::optional_internal::optional_data_dtor_base.1038" = type { i8, %union.anon.1039 }
%union.anon.1039 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1154" = type { %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1160" }
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1857" }
%"class.mojo::AssociatedRemote.1857" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1858" }
%"class.mojo::internal::AssociatedInterfacePtrState.1858" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1859" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.696", i32 }>
%"class.std::__1::unique_ptr.1859" = type { %"class.std::__1::__compressed_pair.1860" }
%"class.std::__1::__compressed_pair.1860" = type { %"struct.std::__1::__compressed_pair_elem.1861" }
%"struct.std::__1::__compressed_pair_elem.1861" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1162" = type { %"class.blink::Member.1163" }
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1867" }
%"class.mojo::AssociatedRemote.1867" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1868" }
%"class.mojo::internal::AssociatedInterfacePtrState.1868" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1869" }
%"class.std::__1::unique_ptr.1869" = type { %"class.std::__1::__compressed_pair.1870" }
%"class.std::__1::__compressed_pair.1870" = type { %"struct.std::__1::__compressed_pair_elem.1871" }
%"struct.std::__1::__compressed_pair_elem.1871" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1165" }
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1877", %"class.blink::Member.871", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1877" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1878" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.696" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1878" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1167" = type { %"class.blink::Member.1168" }
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1881", %"class.blink::Member.871", %"class.mojo::AssociatedReceiver.1882" }
%"class.blink::ThreadState::PrefinalizerRegistration.1881" = type { i8 }
%"class.mojo::AssociatedReceiver.1882" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1883" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1883" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1170" }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1886", %"class.blink::Member.871", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1886" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.927, %"class.std::__1::unique_ptr.696", %"class.base::WeakPtrFactory.1887" }
%"class.base::WeakPtrFactory.1887" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1172" = type { %"class.blink::Member.1173" }
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1890", %"class.blink::Member.871", %"class.mojo::AssociatedReceiver.1891" }
%"class.blink::ThreadState::PrefinalizerRegistration.1890" = type { i8 }
%"class.mojo::AssociatedReceiver.1891" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1892" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1892" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::HeapHashMap.1183"* }
%"class.blink::HeapHashMap.1183" = type opaque
%"class.mojo::StructPtr.1184" = type { %"class.std::__1::unique_ptr.1185" }
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1188", %"class.mojo::InlinedStructPtr.1189" }
%"class.mojo::InlinedStructPtr.1188" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1189" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1195" = type { %"class.absl::optional_internal::optional_data.1196" }
%"class.absl::optional_internal::optional_data.1196" = type { %"class.absl::optional_internal::optional_data_base.1197" }
%"class.absl::optional_internal::optional_data_base.1197" = type { %"class.absl::optional_internal::optional_data_dtor_base.1198" }
%"class.absl::optional_internal::optional_data_dtor_base.1198" = type { i8, %union.anon.1199 }
%union.anon.1199 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.873" = type { %"class.WTF::VectorBuffer.874" }
%"class.WTF::VectorBuffer.874" = type { %"class.WTF::VectorBufferBase.875" }
%"class.WTF::VectorBufferBase.875" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.878" = type { %"class.WTF::HashMap.881" }
%"class.WTF::HashMap.881" = type { %"class.WTF::HashTable.882" }
%"class.WTF::HashTable.882" = type <{ %"struct.WTF::KeyValuePair.884"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.884" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.350" = type { %"class.WTF::ListHashSet.base.360", [7 x i8] }
%"class.WTF::ListHashSet.base.360" = type <{ %"class.WTF::HashTable.355", %"class.blink::Member.357", %"class.blink::Member.357", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.355" = type <{ %"class.blink::Member.357"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::HeapListHashSetNode.359"* }
%"class.blink::HeapListHashSetNode.359" = type { %"class.blink::Member.863", %"class.blink::Member.357", %"class.blink::Member.357" }
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.361" = type { %"class.WTF::ListHashSet.base.371", [7 x i8] }
%"class.WTF::ListHashSet.base.371" = type <{ %"class.WTF::HashTable.366", %"class.blink::Member.368", %"class.blink::Member.368", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.366" = type <{ %"class.blink::Member.368"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::HeapListHashSetNode.370"* }
%"class.blink::HeapListHashSetNode.370" = type { %"class.blink::Member.859", %"class.blink::Member.368", %"class.blink::Member.368" }
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.372" = type { %"class.WTF::ListHashSet.base.382", [7 x i8] }
%"class.WTF::ListHashSet.base.382" = type <{ %"class.WTF::HashTable.377", %"class.blink::Member.379", %"class.blink::Member.379", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.377" = type <{ %"class.blink::Member.379"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::HeapListHashSetNode.381"* }
%"class.blink::HeapListHashSetNode.381" = type { %"class.blink::Member.855", %"class.blink::Member.379", %"class.blink::Member.379" }
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.383" = type { %"class.WTF::ListHashSet.base.393", [7 x i8] }
%"class.WTF::ListHashSet.base.393" = type <{ %"class.WTF::HashTable.388", %"class.blink::Member.390", %"class.blink::Member.390", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.388" = type <{ %"class.blink::Member.390"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::HeapListHashSetNode.392"* }
%"class.blink::HeapListHashSetNode.392" = type { %"class.blink::Member.851", %"class.blink::Member.390", %"class.blink::Member.390" }
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.394" = type { %"class.WTF::ListHashSet.base.404", [7 x i8] }
%"class.WTF::ListHashSet.base.404" = type <{ %"class.WTF::HashTable.399", %"class.blink::Member.401", %"class.blink::Member.401", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.399" = type <{ %"class.blink::Member.401"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::HeapListHashSetNode.403"* }
%"class.blink::HeapListHashSetNode.403" = type { %"class.blink::Member.847", %"class.blink::Member.401", %"class.blink::Member.401" }
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.405" = type { %"class.WTF::ListHashSet.base.415", [7 x i8] }
%"class.WTF::ListHashSet.base.415" = type <{ %"class.WTF::HashTable.410", %"class.blink::Member.412", %"class.blink::Member.412", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.410" = type <{ %"class.blink::Member.412"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::HeapListHashSetNode.414"* }
%"class.blink::HeapListHashSetNode.414" = type { %"class.blink::Member.843", %"class.blink::Member.412", %"class.blink::Member.412" }
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.416" = type { %"class.WTF::ListHashSet.base.426", [7 x i8] }
%"class.WTF::ListHashSet.base.426" = type <{ %"class.WTF::HashTable.421", %"class.blink::Member.423", %"class.blink::Member.423", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.421" = type <{ %"class.blink::Member.423"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::HeapListHashSetNode.425"* }
%"class.blink::HeapListHashSetNode.425" = type { %"class.blink::Member.839", %"class.blink::Member.423", %"class.blink::Member.423" }
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.427" = type { %"class.WTF::ListHashSet.base.437", [7 x i8] }
%"class.WTF::ListHashSet.base.437" = type <{ %"class.WTF::HashTable.432", %"class.blink::Member.434", %"class.blink::Member.434", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.432" = type <{ %"class.blink::Member.434"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::HeapListHashSetNode.436"* }
%"class.blink::HeapListHashSetNode.436" = type { %"class.blink::Member.835", %"class.blink::Member.434", %"class.blink::Member.434" }
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.438" = type { %"class.WTF::ListHashSet.base.448", [7 x i8] }
%"class.WTF::ListHashSet.base.448" = type <{ %"class.WTF::HashTable.443", %"class.blink::Member.445", %"class.blink::Member.445", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.443" = type <{ %"class.blink::Member.445"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::HeapListHashSetNode.447"* }
%"class.blink::HeapListHashSetNode.447" = type { %"class.blink::Member.831", %"class.blink::Member.445", %"class.blink::Member.445" }
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.449" = type { %"class.WTF::ListHashSet.base.459", [7 x i8] }
%"class.WTF::ListHashSet.base.459" = type <{ %"class.WTF::HashTable.454", %"class.blink::Member.456", %"class.blink::Member.456", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.454" = type <{ %"class.blink::Member.456"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::HeapListHashSetNode.458"* }
%"class.blink::HeapListHashSetNode.458" = type { %"class.blink::Member.827", %"class.blink::Member.456", %"class.blink::Member.456" }
%"class.blink::HeapListHashSet.460" = type { %"class.WTF::ListHashSet.base.470", [7 x i8] }
%"class.WTF::ListHashSet.base.470" = type <{ %"class.WTF::HashTable.465", %"class.blink::Member.467", %"class.blink::Member.467", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.465" = type <{ %"class.blink::Member.467"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::HeapListHashSetNode.469"* }
%"class.blink::HeapListHashSetNode.469" = type { %"class.blink::Member.823", %"class.blink::Member.467", %"class.blink::Member.467" }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.471" = type { %"class.WTF::ListHashSet.base.481", [7 x i8] }
%"class.WTF::ListHashSet.base.481" = type <{ %"class.WTF::HashTable.476", %"class.blink::Member.478", %"class.blink::Member.478", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.476" = type <{ %"class.blink::Member.478"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::HeapListHashSetNode.480"* }
%"class.blink::HeapListHashSetNode.480" = type { %"class.blink::Member.819", %"class.blink::Member.478", %"class.blink::Member.478" }
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.482" = type { %"class.WTF::ListHashSet.base.492", [7 x i8] }
%"class.WTF::ListHashSet.base.492" = type <{ %"class.WTF::HashTable.487", %"class.blink::Member.489", %"class.blink::Member.489", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.487" = type <{ %"class.blink::Member.489"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::HeapListHashSetNode.491"* }
%"class.blink::HeapListHashSetNode.491" = type { %"class.blink::Member.815", %"class.blink::Member.489", %"class.blink::Member.489" }
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.493" = type { %"class.WTF::ListHashSet.base.503", [7 x i8] }
%"class.WTF::ListHashSet.base.503" = type <{ %"class.WTF::HashTable.498", %"class.blink::Member.500", %"class.blink::Member.500", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.498" = type <{ %"class.blink::Member.500"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::HeapListHashSetNode.502"* }
%"class.blink::HeapListHashSetNode.502" = type { %"class.blink::Member.811", %"class.blink::Member.500", %"class.blink::Member.500" }
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.504" = type { %"class.WTF::ListHashSet.base.514", [7 x i8] }
%"class.WTF::ListHashSet.base.514" = type <{ %"class.WTF::HashTable.509", %"class.blink::Member.511", %"class.blink::Member.511", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.509" = type <{ %"class.blink::Member.511"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::HeapListHashSetNode.513"* }
%"class.blink::HeapListHashSetNode.513" = type { %"class.blink::Member.807", %"class.blink::Member.511", %"class.blink::Member.511" }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.515" = type { %"class.WTF::ListHashSet.base.525", [7 x i8] }
%"class.WTF::ListHashSet.base.525" = type <{ %"class.WTF::HashTable.520", %"class.blink::Member.522", %"class.blink::Member.522", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.520" = type <{ %"class.blink::Member.522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::HeapListHashSetNode.524"* }
%"class.blink::HeapListHashSetNode.524" = type { %"class.blink::Member.803", %"class.blink::Member.522", %"class.blink::Member.522" }
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.526" = type { %"class.WTF::ListHashSet.base.536", [7 x i8] }
%"class.WTF::ListHashSet.base.536" = type <{ %"class.WTF::HashTable.531", %"class.blink::Member.533", %"class.blink::Member.533", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.531" = type <{ %"class.blink::Member.533"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::HeapListHashSetNode.535"* }
%"class.blink::HeapListHashSetNode.535" = type { %"class.blink::Member.799", %"class.blink::Member.533", %"class.blink::Member.533" }
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.537" = type { %"class.WTF::ListHashSet.base.547", [7 x i8] }
%"class.WTF::ListHashSet.base.547" = type <{ %"class.WTF::HashTable.542", %"class.blink::Member.544", %"class.blink::Member.544", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.542" = type <{ %"class.blink::Member.544"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::HeapListHashSetNode.546"* }
%"class.blink::HeapListHashSetNode.546" = type { %"class.blink::Member.795", %"class.blink::Member.544", %"class.blink::Member.544" }
%"class.blink::HeapListHashSet.548" = type { %"class.WTF::ListHashSet.base.558", [7 x i8] }
%"class.WTF::ListHashSet.base.558" = type <{ %"class.WTF::HashTable.553", %"class.blink::Member.555", %"class.blink::Member.555", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.553" = type <{ %"class.blink::Member.555"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::HeapListHashSetNode.557"* }
%"class.blink::HeapListHashSetNode.557" = type { %"class.blink::Member.791", %"class.blink::Member.555", %"class.blink::Member.555" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.626", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.635", %"class.blink::Member.637", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.646", %"class.blink::Member.774", %"class.blink::Member.776", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.559" }
%"class.blink::HeapHashMap.559" = type { %"class.WTF::HashMap.562" }
%"class.WTF::HashMap.562" = type { %"class.WTF::HashTable.563" }
%"class.WTF::HashTable.563" = type <{ %"struct.WTF::KeyValuePair.565"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.565" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.572" }
%"class.blink::Supplementable.572" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.573" }
%"class.blink::HeapHashMap.573" = type { %"class.WTF::HashMap.576" }
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.579"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.579" = type { i8*, %"class.blink::Member.1826" }
%"class.blink::Member.1826" = type { %"class.blink::MemberBase.1827" }
%"class.blink::MemberBase.1827" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1828" }
%"class.blink::Member.1828" = type { %"class.blink::MemberBase.1829" }
%"class.blink::MemberBase.1829" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.580, %"class.std::__1::unique_ptr.584", %"class.std::__1::unique_ptr.584", %"class.std::__1::unique_ptr.614", %"class.std::__1::unique_ptr.614", %"class.blink::Member.620", i32, [4 x i8], %"class.WTF::HashSet.622", i32, i32 }
%class.scoped_refptr.580 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.581", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.583 }
%"class.WTF::RefCounted.581" = type { %"class.base::RefCounted.582" }
%"class.base::RefCounted.582" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.583 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.601", %"class.std::__1::map.610"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::map.601" = type { %"class.std::__1::__tree.602" }
%"class.std::__1::__tree.602" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.603", %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::map.610" = type opaque
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.622" = type { %"class.WTF::HashTable.623" }
%"class.WTF::HashTable.623" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.630" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.blink::Member.633"*, i32, i32 }
%"class.blink::Member.633" = type opaque
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.639", i32, i32 }
%"class.blink::HeapHashMap.639" = type { %"class.WTF::HashMap.642" }
%"class.WTF::HashMap.642" = type { %"class.WTF::HashTable.643" }
%"class.WTF::HashTable.643" = type <{ %"struct.WTF::KeyValuePair.645"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.645" = type opaque
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.649" }
%"class.std::__1::unique_ptr.649" = type { %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.652" }
%"class.WTF::Vector.652" = type { %"class.WTF::VectorBuffer.653" }
%"class.WTF::VectorBuffer.653" = type { %"class.WTF::VectorBufferBase.654" }
%"class.WTF::VectorBufferBase.654" = type { %"class.mojo::StructPtr.655"*, i32, i32 }
%"class.mojo::StructPtr.655" = type { %"class.std::__1::unique_ptr.656" }
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.659", %"class.WTF::HashMap.666", %"class.WTF::HashMap.671", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.676", i32, %"class.mojo::StructPtr.681", %"class.WTF::Vector.676" }
%"class.mojo::StructPtr.659" = type { %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.666" = type { %"class.WTF::HashTable.667" }
%"class.WTF::HashTable.667" = type <{ %"struct.WTF::KeyValuePair.670"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.670" = type opaque
%"class.WTF::HashMap.671" = type { %"class.WTF::HashTable.672" }
%"class.WTF::HashTable.672" = type <{ %"struct.WTF::KeyValuePair.675"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.675" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.681" = type { %"class.std::__1::unique_ptr.682" }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.676", i8, i8, [6 x i8] }>
%"class.WTF::Vector.676" = type { %"class.WTF::VectorBuffer.677" }
%"class.WTF::VectorBuffer.677" = type { %"class.WTF::VectorBufferBase.678" }
%"class.WTF::VectorBufferBase.678" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.765" }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.774" = type { %"class.blink::MemberBase.775" }
%"class.blink::MemberBase.775" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.637", i8, [7 x i8], %"class.WTF::Vector.652", %"class.blink::HeapVector.780", i8, [7 x i8], %"class.WTF::HashSet.622", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.780" = type { %"class.WTF::Vector.783" }
%"class.WTF::Vector.783" = type { %"class.WTF::VectorBuffer.784" }
%"class.WTF::VectorBuffer.784" = type { %"class.WTF::VectorBufferBase.785" }
%"class.WTF::VectorBufferBase.785" = type { %"class.blink::Member.786"*, i32, i32 }
%"class.blink::Member.786" = type opaque
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.v8::String" = type { i8 }
%"class.v8::FixedArray" = type { i8 }
%"struct.blink::ModuleRequest" = type { %"class.WTF::String", %"class.WTF::TextPosition", %"class.WTF::Vector.1812" }
%"class.WTF::Vector.1812" = type { %"class.WTF::VectorBuffer.1813" }
%"class.WTF::VectorBuffer.1813" = type { %"class.WTF::VectorBufferBase.1814" }
%"class.WTF::VectorBufferBase.1814" = type { %"struct.blink::ImportAssertion"*, i32, i32 }
%"struct.blink::ImportAssertion" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition" }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.WTF::ConditionalDestructor.1815" = type { i8 }
%"class.blink::ModuleRecordResolver" = type { i32 (...)** }
%"class.WTF::Vector.1809" = type { %"class.WTF::VectorBuffer.1810" }
%"class.WTF::VectorBuffer.1810" = type { %"class.WTF::VectorBufferBase.1811" }
%"class.WTF::VectorBufferBase.1811" = type { %"struct.blink::ModuleRequest"*, i32, i32 }
%"class.v8::Data" = type { i8 }
%"class.v8::ModuleRequest" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink26ModuleScriptCreationParams13GetSourceTextEv = comdat any

$_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN3WTF6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEC2ERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15ImportAssertionEEEmm = comdat any

$_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_28ModuleRecordProduceCacheDataEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_28ModuleRecordProduceCacheDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_28ModuleRecordProduceCacheDataEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13ModuleRequestEEEmm = comdat any

$_ZN3WTF6VectorIN5blink13ModuleRequestELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZZN5blink11GCInfoTraitINS_28ModuleRecordProduceCacheDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_28ModuleRecordProduceCacheDataEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/bindings/core/v8/module_record.h\00", section "llvm.metadata"
@.str.2 = private unnamed_addr constant [13 x i8] c"ModuleRecord\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"resolveModuleCallback\00", align 1
@.str.4 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ImportAssertionEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ImportAssertion]\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_28ModuleRecordProduceCacheDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_28ModuleRecordProduceCacheDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_28ModuleRecordProduceCacheDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_28ModuleRecordProduceCacheDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13ModuleRequestEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ModuleRequest]\00", align 1

@_ZN5blink28ModuleRecordProduceCacheDataC1EPN2v87IsolateEPNS_27SingleCachedMetadataHandlerENS_11V8CodeCache19ProduceCacheOptionsENS1_5LocalINS1_6ModuleEEE = hidden unnamed_addr alias void (%"class.blink::ModuleRecordProduceCacheData"*, %"class.v8::Isolate"*, %"class.blink::SingleCachedMetadataHandler"*, i32, %"class.v8::Module"*), void (%"class.blink::ModuleRecordProduceCacheData"*, %"class.v8::Isolate"*, %"class.blink::SingleCachedMetadataHandler"*, i32, %"class.v8::Module"*)* @_ZN5blink28ModuleRecordProduceCacheDataC2EPN2v87IsolateEPNS_27SingleCachedMetadataHandlerENS_11V8CodeCache19ProduceCacheOptionsENS1_5LocalINS1_6ModuleEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28ModuleRecordProduceCacheDataC2EPN2v87IsolateEPNS_27SingleCachedMetadataHandlerENS_11V8CodeCache19ProduceCacheOptionsENS1_5LocalINS1_6ModuleEEE(%"class.blink::ModuleRecordProduceCacheData"*, %"class.v8::Isolate"*, %"class.blink::SingleCachedMetadataHandler"*, i32, %"class.v8::Module"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::HandleScope", align 8
  %7 = getelementptr inbounds %"class.blink::ModuleRecordProduceCacheData", %"class.blink::ModuleRecordProduceCacheData"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::SingleCachedMetadataHandler"* %2, %"class.blink::SingleCachedMetadataHandler"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ModuleRecordProduceCacheData", %"class.blink::ModuleRecordProduceCacheData"* %0, i64 0, i32 1
  store i32 %3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::ModuleRecordProduceCacheData", %"class.blink::ModuleRecordProduceCacheData"* %0, i64 0, i32 2
  %10 = bitcast %"class.blink::TraceWrapperV8Reference"* %9 to i8*
  %11 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 57)
  %12 = bitcast i8* %11 to i64**
  store i64* null, i64** %12, align 8
  %13 = bitcast %"class.v8::HandleScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #1
  %14 = bitcast %"class.v8::HandleScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %6, %"class.v8::Isolate"* %1) #1
  %15 = icmp eq i32 %3, 2
  br i1 %15, label %16, label %38

16:                                               ; preds = %5
  %17 = call i32 @_ZNK2v86Module9GetStatusEv(%"class.v8::Module"* %4) #1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %38

19:                                               ; preds = %16
  %20 = call %"class.v8::UnboundModuleScript"* @_ZN2v86Module22GetUnboundModuleScriptEv(%"class.v8::Module"* %4) #1
  %21 = icmp eq %"class.v8::UnboundModuleScript"* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %19
  %23 = call i8* @llvm.ptr.annotation.p0i8(i8* %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 57)
  %24 = bitcast i8* %23 to i64**
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = bitcast i8* %23 to i64*
  br label %31

29:                                               ; preds = %22
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %25) #1
  %30 = bitcast i8* %23 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  br label %31

31:                                               ; preds = %27, %29
  %32 = phi i64* [ %28, %27 ], [ %30, %29 ]
  %33 = bitcast %"class.v8::UnboundModuleScript"* %20 to i64*
  %34 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %35 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %34, i64* nonnull %33, i64* %32, i1 zeroext false) #1
  %36 = ptrtoint i64* %35 to i64
  store atomic i64 %36, i64* %32 monotonic, align 8
  %37 = bitcast i8* %23 to %"class.blink::TraceWrapperV8Reference.174"*
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.174"* dereferenceable(8) %37) #1
  br label %38

38:                                               ; preds = %19, %31, %16, %5
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %6) #1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #1
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #3

declare i32 @_ZNK2v86Module9GetStatusEv(%"class.v8::Module"*) local_unnamed_addr #3

declare %"class.v8::UnboundModuleScript"* @_ZN2v86Module22GetUnboundModuleScriptEv(%"class.v8::Module"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28ModuleRecordProduceCacheData5TraceEPNS_7VisitorE(%"class.blink::ModuleRecordProduceCacheData"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ModuleRecordProduceCacheData"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv) #1
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::ModuleRecordProduceCacheData", %"class.blink::ModuleRecordProduceCacheData"* %0, i64 0, i32 2
  %14 = bitcast %"class.blink::TraceWrapperV8Reference"* %13 to i8*
  %15 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 57)
  %16 = bitcast i8* %15 to %"class.blink::TraceWrapperV8Reference.174"*
  %17 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)***
  %18 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)** %18, i64 7
  %20 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)** %19, align 8
  tail call void %20(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.174"* dereferenceable(8) %16) #1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Module"* @_ZN5blink12ModuleRecord7CompileEPN2v87IsolateERKNS_26ModuleScriptCreationParamsERKNS_18ScriptFetchOptionsERKN3WTF12TextPositionERNS_14ExceptionStateENS_5mojom14V8CacheOptionsEPPNS_28ModuleRecordProduceCacheDataE(%"class.v8::Isolate"*, %"class.blink::ModuleScriptCreationParams"* dereferenceable(296), %"class.blink::ScriptFetchOptions"* nocapture readonly dereferenceable(64), %"class.WTF::TextPosition"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72), i32, %"class.blink::ModuleRecordProduceCacheData"**) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = alloca %"class.blink::ReferrerScriptInfo", align 8
  %10 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %0) #1
  %11 = icmp eq i32 %5, 4
  %12 = select i1 %11, i32 3, i32 %5
  %13 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 8, i32 0, i32 0
  %14 = load %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::SingleCachedMetadataHandler"** %13, align 8
  %15 = call dereferenceable(8) %"class.blink::ParkableString"* @_ZNK5blink26ModuleScriptCreationParams13GetSourceTextEv(%"class.blink::ModuleScriptCreationParams"* %1)
  %16 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %16, align 8
  %18 = icmp eq %"class.blink::ParkableStringImpl"* %17, null
  br i1 %18, label %33, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %20, align 8
  %22 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %17, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  br label %33

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %21, i64 0, i32 8
  %32 = load i32, i32* %31, align 4
  br label %33

33:                                               ; preds = %7, %23, %27, %30
  %34 = phi i32 [ 0, %7 ], [ %32, %30 ], [ %29, %27 ], [ 0, %23 ]
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = call { i64, i32 } @_ZN5blink11V8CodeCache17GetCompileOptionsENS_5mojom14V8CacheOptionsEPKNS_27SingleCachedMetadataHandlerEmNS_24ScriptSourceLocationTypeE(i32 %12, %"class.blink::SingleCachedMetadataHandler"* %14, i64 %35, i32 %37) #1
  %39 = extractvalue { i64, i32 } %38, 0
  %40 = extractvalue { i64, i32 } %38, 1
  %41 = trunc i64 %39 to i32
  %42 = lshr i64 %39, 32
  %43 = trunc i64 %42 to i32
  %44 = getelementptr inbounds %"class.blink::ReferrerScriptInfo", %"class.blink::ReferrerScriptInfo"* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %44) #1
  %45 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %2, i64 0, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %2, i64 0, i32 3
  %49 = load i8, i8* %48, align 1
  %50 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %2, i64 0, i32 6
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.blink::ReferrerScriptInfo", %"class.blink::ReferrerScriptInfo"* %9, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %52, %"class.blink::KURL"* dereferenceable(112) %45) #1
  %53 = getelementptr inbounds %"class.blink::ReferrerScriptInfo", %"class.blink::ReferrerScriptInfo"* %9, i64 0, i32 1
  store i32 %47, i32* %53, align 8
  %54 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %2, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ReferrerScriptInfo", %"class.blink::ReferrerScriptInfo"* %9, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %33
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #1
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %63
  call void @llvm.trap() #1
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %33, %58, %73
  %76 = getelementptr inbounds %"class.blink::ReferrerScriptInfo", %"class.blink::ReferrerScriptInfo"* %9, i64 0, i32 4
  store i8 %49, i8* %76, align 8
  %77 = getelementptr inbounds %"class.blink::ReferrerScriptInfo", %"class.blink::ReferrerScriptInfo"* %9, i64 0, i32 6
  store i32 %51, i32* %77, align 4
  %78 = getelementptr inbounds %"class.blink::ReferrerScriptInfo", %"class.blink::ReferrerScriptInfo"* %9, i64 0, i32 7
  store i32 2, i32* %78, align 8
  %79 = call %"class.v8::Module"* @_ZN5blink14V8ScriptRunner13CompileModuleEPN2v87IsolateERKNS_26ModuleScriptCreationParamsERKN3WTF12TextPositionENS1_14ScriptCompiler14CompileOptionsENSB_13NoCacheReasonERKNS_18ReferrerScriptInfoE(%"class.v8::Isolate"* %0, %"class.blink::ModuleScriptCreationParams"* dereferenceable(296) %1, %"class.WTF::TextPosition"* dereferenceable(8) %3, i32 %41, i32 %40, %"class.blink::ReferrerScriptInfo"* nonnull dereferenceable(144) %9) #1
  %80 = ptrtoint %"class.v8::Module"* %79 to i64
  %81 = icmp eq %"class.v8::Module"* %79, null
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #1
  br label %97

97:                                               ; preds = %75, %93, %96
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %52) #1
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %44) #1
  br i1 %81, label %98, label %104

98:                                               ; preds = %97
  %99 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %8) #1
  %100 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %101 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %101, i64 5
  %103 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %102, align 8
  call void %103(%"class.blink::ExceptionState"* %4, %"class.v8::Value"* %99) #1
  br label %115

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::ModuleRecordProduceCacheData"** %6, null
  br i1 %105, label %115, label %106

106:                                              ; preds = %104
  %107 = load %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::SingleCachedMetadataHandler"** %13, align 8
  %108 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_28ModuleRecordProduceCacheDataEEEPhm(i64 24) #1
  %109 = bitcast i8* %108 to %"class.blink::ModuleRecordProduceCacheData"*
  call void @_ZN5blink28ModuleRecordProduceCacheDataC2EPN2v87IsolateEPNS_27SingleCachedMetadataHandlerENS_11V8CodeCache19ProduceCacheOptionsENS1_5LocalINS1_6ModuleEEE(%"class.blink::ModuleRecordProduceCacheData"* %109, %"class.v8::Isolate"* %0, %"class.blink::SingleCachedMetadataHandler"* %107, i32 %43, %"class.v8::Module"* nonnull %79) #1
  %110 = getelementptr inbounds i8, i8* %108, i64 -4
  %111 = bitcast i8* %110 to i16*
  %112 = load atomic i16, i16* %111 monotonic, align 2
  %113 = or i16 %112, 1
  store atomic i16 %113, i16* %111 release, align 2
  %114 = bitcast %"class.blink::ModuleRecordProduceCacheData"** %6 to i8**
  store i8* %108, i8** %114, align 8
  br label %115

115:                                              ; preds = %106, %104, %98
  %116 = phi i64 [ 0, %98 ], [ %80, %104 ], [ %80, %106 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #1
  %117 = inttoptr i64 %116 to %"class.v8::Module"*
  ret %"class.v8::Module"* %117
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #3

declare { i64, i32 } @_ZN5blink11V8CodeCache17GetCompileOptionsENS_5mojom14V8CacheOptionsEPKNS_27SingleCachedMetadataHandlerEmNS_24ScriptSourceLocationTypeE(i32, %"class.blink::SingleCachedMetadataHandler"*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::ParkableString"* @_ZNK5blink26ModuleScriptCreationParams13GetSourceTextEv(%"class.blink::ModuleScriptCreationParams"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::ParkableString", align 8
  %3 = alloca %class.scoped_refptr.177, align 8
  %4 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %68, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::ParkableString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #1
  %9 = bitcast %class.scoped_refptr.177* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #1
  %10 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %12 = bitcast %"class.WTF::String"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %14 = getelementptr inbounds %class.scoped_refptr.177, %class.scoped_refptr.177* %3, i64 0, i32 0
  %15 = bitcast %class.scoped_refptr.177* %3 to i64*
  store i64 %13, i64* %15, align 8
  call void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"* nonnull %2, %class.scoped_refptr.177* nonnull dereferenceable(8) %3) #1
  %16 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %2, i64 0, i32 0, i32 0
  %18 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %17, align 8
  %19 = icmp eq %"class.blink::ParkableStringImpl"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %18, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #1
  br label %22

22:                                               ; preds = %20, %7
  %23 = ptrtoint %"class.blink::ParkableStringImpl"* %18 to i64
  %24 = bitcast %"class.blink::ParkableString"* %16 to i64*
  %25 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %16, i64 0, i32 0, i32 0
  %26 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.blink::ParkableStringImpl"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #1
  %30 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  call void @_ZN5blink18ParkableStringImplD1Ev(%"class.blink::ParkableStringImpl"* nonnull %26) #1
  %34 = bitcast %"class.blink::ParkableStringImpl"* %26 to i8*
  call void @free(i8* %34) #1
  br label %35

35:                                               ; preds = %22, %28, %33
  call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* nonnull %2) #1
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #1
  br label %51

51:                                               ; preds = %35, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #1
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 0, i64* %12, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #1
  br label %67

67:                                               ; preds = %66, %63, %51
  store i8 0, i8* %4, align 8
  br label %68

68:                                               ; preds = %1, %67
  %69 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 6
  ret %"class.blink::ParkableString"* %69
}

declare %"class.v8::Module"* @_ZN5blink14V8ScriptRunner13CompileModuleEPN2v87IsolateERKNS_26ModuleScriptCreationParamsERKN3WTF12TextPositionENS1_14ScriptCompiler14CompileOptionsENSB_13NoCacheReasonERKNS_18ReferrerScriptInfoE(%"class.v8::Isolate"*, %"class.blink::ModuleScriptCreationParams"* dereferenceable(296), %"class.WTF::TextPosition"* dereferenceable(8), i32, i32, %"class.blink::ReferrerScriptInfo"* dereferenceable(144)) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ModuleRecord11InstantiateEPNS_11ScriptStateEN2v85LocalINS3_6ModuleEEERKNS_4KURLE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::ScriptState"*, %"class.v8::Module"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = alloca %"class.blink::probe::ExecuteScript", align 8
  %8 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %9) #1
  call void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"* nonnull %5, i1 zeroext true) #1
  %11 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.v8::Context"*, %"class.v8::Context"** %11, align 8
  %13 = icmp eq %"class.v8::Context"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::ScriptState"* %1 to %"class.v8::internal::Isolate"**
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = bitcast %"class.v8::Context"* %12 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %16, i64 %18) #1
  %20 = bitcast i64* %19 to %"class.v8::Context"*
  br label %21

21:                                               ; preds = %4, %14
  %22 = phi %"class.v8::Context"* [ %20, %14 ], [ null, %4 ]
  %23 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #1
  %24 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  %25 = call %"class.v8::MicrotaskQueue"* @_ZN5blink16ToMicrotaskQueueEPNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #1
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateEPNS_14MicrotaskQueueENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %9, %"class.v8::MicrotaskQueue"* %25, i32 1) #1
  %26 = bitcast %"class.blink::probe::ExecuteScript"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %26) #1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 48, i1 false)
  %27 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #1
  %28 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 4
  %29 = call i32 @_ZNK2v86Module9GetStatusEv(%"class.v8::Module"* %2) #1
  %30 = icmp eq i32 %29, 5
  br i1 %30, label %35, label %31

31:                                               ; preds = %21
  %32 = call zeroext i1 @_ZNK2v86Module18IsSourceTextModuleEv(%"class.v8::Module"* %2) #1
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = call i32 @_ZNK2v86Module8ScriptIdEv(%"class.v8::Module"* %2) #1
  br label %35

35:                                               ; preds = %21, %31, %33
  %36 = phi i32 [ %34, %33 ], [ 0, %31 ], [ 0, %21 ]
  call void @_ZN5blink5probe13ExecuteScriptC1EPNS_16ExecutionContextERKN3WTF6StringEi(%"class.blink::probe::ExecuteScript"* nonnull %7, %"class.blink::ExecutionContext"* %27, %"class.WTF::String"* dereferenceable(8) %28, i32 %36) #1
  %37 = call i16 @_ZN2v86Module17InstantiateModuleENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalIS0_EES3_NS1_INS_6StringEEENS1_INS_10FixedArrayEEENS1_IS0_EEE(%"class.v8::Module"* %2, %"class.v8::Context"* %22, %"class.v8::Module"* (%"class.v8::Context"*, %"class.v8::String"*, %"class.v8::FixedArray"*, %"class.v8::Module"*)* nonnull @_ZN5blink12ModuleRecord21ResolveModuleCallbackEN2v85LocalINS1_7ContextEEENS2_INS1_6StringEEENS2_INS1_10FixedArrayEEENS2_INS1_6ModuleEEE) #1
  %38 = trunc i16 %37 to i8
  %39 = icmp eq i8 %38, 0
  %40 = icmp ult i16 %37, 256
  %41 = or i1 %40, %39
  br i1 %41, label %42, label %46, !prof !4

42:                                               ; preds = %35
  %43 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #1
  %44 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %45, %"class.v8::Isolate"* %9, %"class.v8::Value"* %43) #1
  br label %48

46:                                               ; preds = %35
  %47 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false)
  br label %48

48:                                               ; preds = %46, %42
  call void @_ZN5blink5probe13ExecuteScriptD1Ev(%"class.blink::probe::ExecuteScript"* nonnull %7) #1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %26) #1
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #1
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #1
  ret void
}

declare void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"*, i1 zeroext) local_unnamed_addr #3

declare %"class.v8::MicrotaskQueue"* @_ZN5blink16ToMicrotaskQueueEPNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #3

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateEPNS_14MicrotaskQueueENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, %"class.v8::MicrotaskQueue"*, i32) unnamed_addr #3

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v86Module18IsSourceTextModuleEv(%"class.v8::Module"*) local_unnamed_addr #3

declare i32 @_ZNK2v86Module8ScriptIdEv(%"class.v8::Module"*) local_unnamed_addr #3

declare void @_ZN5blink5probe13ExecuteScriptC1EPNS_16ExecutionContextERKN3WTF6StringEi(%"class.blink::probe::ExecuteScript"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #3

declare i16 @_ZN2v86Module17InstantiateModuleENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalIS0_EES3_NS1_INS_6StringEEENS1_INS_10FixedArrayEEENS1_IS0_EEE(%"class.v8::Module"*, %"class.v8::Context"*, %"class.v8::Module"* (%"class.v8::Context"*, %"class.v8::String"*, %"class.v8::FixedArray"*, %"class.v8::Module"*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Module"* @_ZN5blink12ModuleRecord21ResolveModuleCallbackEN2v85LocalINS1_7ContextEEENS2_INS1_6StringEEENS2_INS1_10FixedArrayEEENS2_INS1_6ModuleEEE(%"class.v8::Context"*, %"class.v8::String"*, %"class.v8::FixedArray"*, %"class.v8::Module"*) #0 align 2 {
  %5 = alloca %"struct.blink::ModuleRequest", align 8
  %6 = alloca %"class.WTF::Vector.1812", align 8
  %7 = alloca %"class.blink::ExceptionState", align 8
  %8 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #1
  %9 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %0)
  %10 = tail call %"class.blink::Modulator"* @_ZN5blink9Modulator4FromEPNS_11ScriptStateE(%"class.blink::ScriptState"* %9) #1
  %11 = bitcast %"struct.blink::ModuleRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #1
  %12 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %5, i64 0, i32 0, i32 0, i32 0
  %13 = icmp eq %"class.v8::String"* %1, null
  %14 = bitcast %"struct.blink::ModuleRequest"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  br i1 %13, label %39, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.v8::String"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 3
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %20, label %37

20:                                               ; preds = %15
  %21 = add i64 %17, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = and i64 %17, -4294967296
  %25 = zext i32 %23 to i64
  %26 = or i64 %24, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 67
  br i1 %30, label %31, label %37

31:                                               ; preds = %20
  %32 = add i64 %17, 23
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, -2
  %36 = icmp eq i32 %35, 6
  br i1 %36, label %39, label %37

37:                                               ; preds = %31, %20, %15
  %38 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1, i32 0) #1
  br label %39

39:                                               ; preds = %4, %31, %37
  %40 = phi %"class.WTF::StringImpl"* [ %38, %37 ], [ null, %31 ], [ null, %4 ]
  %41 = bitcast %"class.WTF::Vector.1812"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #1
  call void @_ZN5blink12ModuleRecord23ToBlinkImportAssertionsEN2v85LocalINS1_7ContextEEENS2_INS1_6ModuleEEENS2_INS1_10FixedArrayEEEb(%"class.WTF::Vector.1812"* nonnull sret %6, %"class.v8::Context"* %0, %"class.v8::Module"* %3, %"class.v8::FixedArray"* %2, i1 zeroext true)
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %12, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i33
  %52 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %51, i33 1) #1
  %53 = extractvalue { i33, i1 } %52, 1
  %54 = extractvalue { i33, i1 } %52, 0
  %55 = icmp slt i33 %54, 0
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %58, !prof !2

57:                                               ; preds = %48
  call void @llvm.trap() #1
  unreachable

58:                                               ; preds = %48
  %59 = trunc i33 %54 to i32
  store i32 %59, i32* %49, align 4
  br label %60

60:                                               ; preds = %39, %43, %58
  %61 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %5, i64 0, i32 1
  %62 = bitcast %"class.WTF::TextPosition"* %61 to i64*
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %5, i64 0, i32 2
  call void @_ZN3WTF6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector.1812"* %63, %"class.WTF::Vector.1812"* nonnull dereferenceable(16) %6) #1
  %64 = bitcast %"class.WTF::Vector.1812"* %6 to %"class.WTF::ConditionalDestructor.1815"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1815"* nonnull %64) #1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #1
  br i1 %42, label %78, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #1
  br label %78

78:                                               ; preds = %60, %74, %77
  %79 = bitcast %"class.blink::ExceptionState"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %79) #1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 56, i1 false)
  %80 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 1, i32 0
  store i16 6, i16* %81, align 8
  %82 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 1, i32 1
  store i16 0, i16* %82, align 2
  %83 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 1, i32 2
  %84 = bitcast i8** %83 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %84, align 8
  %85 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %85, align 8
  %86 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %86, align 8
  %87 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 4
  store i32 0, i32* %87, align 8
  %88 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 5, i32 0, i32 0
  %89 = bitcast %"class.WTF::StringImpl"** %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #1
  %90 = bitcast %"class.blink::Modulator"* %10 to %"class.blink::ModuleRecordResolver"* (%"class.blink::Modulator"*)***
  %91 = load %"class.blink::ModuleRecordResolver"* (%"class.blink::Modulator"*)**, %"class.blink::ModuleRecordResolver"* (%"class.blink::Modulator"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ModuleRecordResolver"* (%"class.blink::Modulator"*)*, %"class.blink::ModuleRecordResolver"* (%"class.blink::Modulator"*)** %91, i64 4
  %93 = load %"class.blink::ModuleRecordResolver"* (%"class.blink::Modulator"*)*, %"class.blink::ModuleRecordResolver"* (%"class.blink::Modulator"*)** %92, align 8
  %94 = call %"class.blink::ModuleRecordResolver"* %93(%"class.blink::Modulator"* %10) #1
  %95 = bitcast %"class.blink::ModuleRecordResolver"* %94 to %"class.v8::Module"* (%"class.blink::ModuleRecordResolver"*, %"struct.blink::ModuleRequest"*, %"class.v8::Module"*, %"class.blink::ExceptionState"*)***
  %96 = load %"class.v8::Module"* (%"class.blink::ModuleRecordResolver"*, %"struct.blink::ModuleRequest"*, %"class.v8::Module"*, %"class.blink::ExceptionState"*)**, %"class.v8::Module"* (%"class.blink::ModuleRecordResolver"*, %"struct.blink::ModuleRequest"*, %"class.v8::Module"*, %"class.blink::ExceptionState"*)*** %95, align 8
  %97 = getelementptr inbounds %"class.v8::Module"* (%"class.blink::ModuleRecordResolver"*, %"struct.blink::ModuleRequest"*, %"class.v8::Module"*, %"class.blink::ExceptionState"*)*, %"class.v8::Module"* (%"class.blink::ModuleRecordResolver"*, %"struct.blink::ModuleRequest"*, %"class.v8::Module"*, %"class.blink::ExceptionState"*)** %96, i64 6
  %98 = load %"class.v8::Module"* (%"class.blink::ModuleRecordResolver"*, %"struct.blink::ModuleRequest"*, %"class.v8::Module"*, %"class.blink::ExceptionState"*)*, %"class.v8::Module"* (%"class.blink::ModuleRecordResolver"*, %"struct.blink::ModuleRequest"*, %"class.v8::Module"*, %"class.blink::ExceptionState"*)** %97, align 8
  %99 = call %"class.v8::Module"* %98(%"class.blink::ModuleRecordResolver"* %94, %"struct.blink::ModuleRequest"* nonnull dereferenceable(32) %5, %"class.v8::Module"* %3, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %7) #1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %100 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = icmp eq i64* %101, null
  br i1 %102, label %112, label %103

103:                                              ; preds = %78
  %104 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %86, align 8
  %105 = bitcast %"class.v8::Isolate"* %104 to %"class.v8::internal::Isolate"*
  %106 = load i64, i64* %101, align 8
  %107 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %105, i64 %106) #1
  %108 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %104) #1
  br i1 %108, label %112, label %109

109:                                              ; preds = %103
  %110 = bitcast i64* %107 to %"class.v8::Value"*
  %111 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %104, %"class.v8::Value"* %110) #1
  br label %112

112:                                              ; preds = %109, %103, %78
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #1
  br label %128

128:                                              ; preds = %112, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %79) #1
  %129 = bitcast %"class.WTF::Vector.1812"* %63 to %"class.WTF::ConditionalDestructor.1815"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1815"* %129) #1
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #1
  br label %145

145:                                              ; preds = %128, %141, %144
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #1
  ret %"class.v8::Module"* %99
}

; Function Attrs: nounwind
declare void @_ZN5blink5probe13ExecuteScriptD1Ev(%"class.blink::probe::ExecuteScript"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ModuleRecord15ReportExceptionEPNS_11ScriptStateEN2v85LocalINS3_5ValueEEE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  tail call void @_ZN5blink14V8ScriptRunner15ReportExceptionEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %4, %"class.v8::Value"* %1) #1
  ret void
}

declare void @_ZN5blink14V8ScriptRunner15ReportExceptionEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ModuleRecord14ModuleRequestsEPNS_11ScriptStateEN2v85LocalINS3_6ModuleEEE(%"class.WTF::Vector.1809"* noalias nocapture sret, %"class.blink::ScriptState"*, %"class.v8::Module"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.1809", align 8
  %5 = alloca %"class.WTF::Vector.1812", align 8
  %6 = icmp eq %"class.v8::Module"* %2, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.WTF::Vector.1809"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #1
  br label %173

9:                                                ; preds = %3
  %10 = tail call %"class.v8::FixedArray"* @_ZNK2v86Module17GetModuleRequestsEv(%"class.v8::Module"* nonnull %2) #1
  %11 = tail call i32 @_ZNK2v810FixedArray6LengthEv(%"class.v8::FixedArray"* %10) #1
  %12 = bitcast %"class.WTF::Vector.1809"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #1
  %13 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %4, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #1
  %16 = icmp eq i32 %11, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %9
  %18 = zext i32 %11 to i64
  %19 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13ModuleRequestEEEmm(i64 %18) #1
  %20 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %19, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13ModuleRequestEEEPKcv, i64 0, i64 0)) #1
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast %"class.WTF::Vector.1809"* %4 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = lshr i64 %19, 5
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %14, align 8
  br label %25

25:                                               ; preds = %9, %17
  %26 = phi i32 [ 0, %9 ], [ %24, %17 ]
  %27 = phi i64 [ 0, %9 ], [ %21, %17 ]
  %28 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #1
  br i1 %28, label %29, label %43

29:                                               ; preds = %25
  %30 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #1
  %31 = icmp eq %"class.blink::ExecutionContext"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::ExecutionContext"* %30 to %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)***
  %34 = load %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)**, %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)*, %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)** %34, i64 35
  %36 = load %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)*, %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)** %35, align 8
  %37 = tail call %"class.blink::CoreProbeSink"* %36(%"class.blink::ExecutionContext"* nonnull %30) #1
  br label %38

38:                                               ; preds = %29, %32
  %39 = phi %"class.blink::CoreProbeSink"* [ %37, %32 ], [ null, %29 ]
  %40 = getelementptr inbounds %"class.blink::CoreProbeSink", %"class.blink::CoreProbeSink"* %39, i64 0, i32 1, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp ne i32 %41, 0
  br label %43

43:                                               ; preds = %38, %25
  %44 = phi i1 [ true, %25 ], [ %42, %38 ]
  %45 = icmp sgt i32 %11, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %43
  %47 = bitcast %"class.WTF::Vector.1809"* %4 to i64*
  br label %59

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = bitcast %"class.blink::ScriptState"* %1 to %"class.v8::internal::Isolate"**
  %51 = bitcast %"class.WTF::Vector.1812"* %5 to i8*
  %52 = bitcast %"class.WTF::Vector.1809"* %4 to i64*
  %53 = bitcast %"class.WTF::Vector.1812"* %5 to %"class.WTF::ConditionalDestructor.1815"*
  %54 = bitcast %"class.WTF::Vector.1812"* %5 to i8*
  br label %68

55:                                               ; preds = %170
  %56 = load i64, i64* %52, align 8
  %57 = load i32, i32* %14, align 8
  %58 = load i32, i32* %15, align 4
  br label %59

59:                                               ; preds = %55, %46
  %60 = phi i64* [ %47, %46 ], [ %52, %55 ]
  %61 = phi i32 [ 0, %46 ], [ %58, %55 ]
  %62 = phi i32 [ %26, %46 ], [ %57, %55 ]
  %63 = phi i64 [ %27, %46 ], [ %56, %55 ]
  %64 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %0, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %0, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.1809"* %0 to i64*
  store i64 0, i64* %66, align 8
  %67 = bitcast %"class.WTF::Vector.1809"* %0 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  store atomic i64 %63, i64* %67 monotonic, align 8
  store i32 %62, i32* %64, align 8
  store i32 %61, i32* %65, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #1
  br label %173

68:                                               ; preds = %170, %48
  %69 = phi i32 [ 0, %48 ], [ %171, %170 ]
  %70 = load %"class.v8::Context"*, %"class.v8::Context"** %49, align 8
  %71 = icmp eq %"class.v8::Context"* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %68
  %73 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %50, align 8
  %74 = bitcast %"class.v8::Context"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %73, i64 %75) #1
  %77 = bitcast i64* %76 to %"class.v8::Context"*
  br label %78

78:                                               ; preds = %68, %72
  %79 = phi %"class.v8::Context"* [ %77, %72 ], [ null, %68 ]
  %80 = call %"class.v8::Data"* @_ZNK2v810FixedArray3GetENS_5LocalINS_7ContextEEEi(%"class.v8::FixedArray"* %10, %"class.v8::Context"* %79, i32 %69) #1
  %81 = bitcast %"class.v8::Data"* %80 to %"class.v8::ModuleRequest"*
  %82 = call %"class.v8::String"* @_ZNK2v813ModuleRequest12GetSpecifierEv(%"class.v8::ModuleRequest"* %81) #1
  br i1 %44, label %83, label %87

83:                                               ; preds = %78
  %84 = call i32 @_ZNK2v813ModuleRequest15GetSourceOffsetEv(%"class.v8::ModuleRequest"* %81) #1
  %85 = call i64 @_ZNK2v86Module22SourceOffsetToLocationEi(%"class.v8::Module"* nonnull %2, i32 %84) #1
  %86 = and i64 %85, -4294967296
  br label %87

87:                                               ; preds = %83, %78
  %88 = phi i64 [ %85, %83 ], [ 0, %78 ]
  %89 = phi i64 [ %86, %83 ], [ 0, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 16, i1 false)
  %90 = load %"class.v8::Context"*, %"class.v8::Context"** %49, align 8
  %91 = icmp eq %"class.v8::Context"* %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %87
  %93 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %50, align 8
  %94 = bitcast %"class.v8::Context"* %90 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %93, i64 %95) #1
  %97 = bitcast i64* %96 to %"class.v8::Context"*
  br label %98

98:                                               ; preds = %87, %92
  %99 = phi %"class.v8::Context"* [ %97, %92 ], [ null, %87 ]
  %100 = call %"class.v8::FixedArray"* @_ZNK2v813ModuleRequest19GetImportAssertionsEv(%"class.v8::ModuleRequest"* %81) #1
  call void @_ZN5blink12ModuleRecord23ToBlinkImportAssertionsEN2v85LocalINS1_7ContextEEENS2_INS1_6ModuleEEENS2_INS1_10FixedArrayEEEb(%"class.WTF::Vector.1812"* nonnull sret %5, %"class.v8::Context"* %99, %"class.v8::Module"* nonnull %2, %"class.v8::FixedArray"* %100, i1 zeroext true)
  %101 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* %82, i32 0) #1
  %102 = load i32, i32* %15, align 4
  %103 = load i32, i32* %14, align 8
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %105, label %125, !prof !2

105:                                              ; preds = %98
  %106 = add i32 %102, 1
  %107 = lshr i32 %102, 2
  %108 = add i32 %106, %107
  %109 = icmp ugt i32 %108, 4
  %110 = select i1 %109, i32 %108, i32 4
  %111 = icmp ugt i32 %110, %106
  %112 = select i1 %111, i32 %110, i32 %106
  %113 = icmp ult i32 %102, %112
  br i1 %113, label %114, label %125, !prof !5

114:                                              ; preds = %105
  %115 = load %"struct.blink::ModuleRequest"*, %"struct.blink::ModuleRequest"** %13, align 8
  %116 = icmp eq %"struct.blink::ModuleRequest"* %115, null
  br i1 %116, label %117, label %124

117:                                              ; preds = %114
  %118 = zext i32 %112 to i64
  %119 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13ModuleRequestEEEmm(i64 %118) #1
  %120 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %119, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13ModuleRequestEEEPKcv, i64 0, i64 0)) #1
  %121 = ptrtoint i8* %120 to i64
  store atomic i64 %121, i64* %52 monotonic, align 8
  %122 = lshr i64 %119, 5
  %123 = trunc i64 %122 to i32
  store i32 %123, i32* %14, align 8
  br label %125

124:                                              ; preds = %114
  call void @_ZN3WTF6VectorIN5blink13ModuleRequestELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1809"* nonnull %4, i32 %112) #1
  br label %125

125:                                              ; preds = %124, %117, %105, %98
  %126 = load %"struct.blink::ModuleRequest"*, %"struct.blink::ModuleRequest"** %13, align 8
  %127 = load i32, i32* %15, align 4
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %126, i64 %128, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %129, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #1
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !2

145:                                              ; preds = %136
  call void @llvm.trap() #1
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %125, %131, %146
  %149 = phi i1 [ true, %125 ], [ false, %131 ], [ false, %146 ]
  %150 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %126, i64 %128, i32 1
  %151 = bitcast %"class.WTF::TextPosition"* %150 to i64*
  %152 = and i64 %88, 4294967295
  %153 = or i64 %89, %152
  store i64 %153, i64* %151, align 8
  %154 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %126, i64 %128, i32 2
  call void @_ZN3WTF6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector.1812"* %154, %"class.WTF::Vector.1812"* nonnull dereferenceable(16) %5) #1
  %155 = load i32, i32* %15, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %15, align 4
  br i1 %149, label %170, label %157

157:                                              ; preds = %148
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #1
  br label %170

170:                                              ; preds = %148, %166, %169
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1815"* nonnull %53) #1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #1
  %171 = add nuw nsw i32 %69, 1
  %172 = icmp eq i32 %171, %11
  br i1 %172, label %55, label %68

173:                                              ; preds = %59, %7
  ret void
}

declare %"class.v8::FixedArray"* @_ZNK2v86Module17GetModuleRequestsEv(%"class.v8::Module"*) local_unnamed_addr #3

declare i32 @_ZNK2v810FixedArray6LengthEv(%"class.v8::FixedArray"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #3

declare %"class.v8::Data"* @_ZNK2v810FixedArray3GetENS_5LocalINS_7ContextEEEi(%"class.v8::FixedArray"*, %"class.v8::Context"*, i32) local_unnamed_addr #3

declare %"class.v8::String"* @_ZNK2v813ModuleRequest12GetSpecifierEv(%"class.v8::ModuleRequest"*) local_unnamed_addr #3

declare i32 @_ZNK2v813ModuleRequest15GetSourceOffsetEv(%"class.v8::ModuleRequest"*) local_unnamed_addr #3

declare i64 @_ZNK2v86Module22SourceOffsetToLocationEi(%"class.v8::Module"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ModuleRecord23ToBlinkImportAssertionsEN2v85LocalINS1_7ContextEEENS2_INS1_6ModuleEEENS2_INS1_10FixedArrayEEEb(%"class.WTF::Vector.1812"* noalias sret, %"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::FixedArray"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = select i1 %4, i32 3, i32 2
  %7 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector.1812"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #1
  %11 = tail call i32 @_ZNK2v810FixedArray6LengthEv(%"class.v8::FixedArray"* %3) #1
  %12 = sdiv i32 %11, %6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %153, label %14

14:                                               ; preds = %5
  %15 = zext i32 %12 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15ImportAssertionEEEmm(i64 %15) #1
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ImportAssertionEEEPKcv, i64 0, i64 0)) #1
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"class.WTF::Vector.1812"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = udiv i64 %16, 24
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %8, align 8
  %22 = icmp sgt i32 %12, 0
  br i1 %22, label %23, label %153

23:                                               ; preds = %14
  %24 = bitcast %"class.WTF::Vector.1812"* %0 to i64*
  br label %25

25:                                               ; preds = %150, %23
  %26 = phi i32 [ 0, %23 ], [ %151, %150 ]
  %27 = mul nsw i32 %26, %6
  %28 = tail call %"class.v8::Data"* @_ZNK2v810FixedArray3GetENS_5LocalINS_7ContextEEEi(%"class.v8::FixedArray"* %3, %"class.v8::Context"* %1, i32 %27) #1
  %29 = bitcast %"class.v8::Data"* %28 to %"class.v8::String"*
  %30 = add nuw nsw i32 %27, 1
  %31 = tail call %"class.v8::Data"* @_ZNK2v810FixedArray3GetENS_5LocalINS_7ContextEEEi(%"class.v8::FixedArray"* %3, %"class.v8::Context"* %1, i32 %30) #1
  %32 = bitcast %"class.v8::Data"* %31 to %"class.v8::String"*
  br i1 %4, label %33, label %40

33:                                               ; preds = %25
  %34 = add nuw nsw i32 %27, 2
  %35 = tail call %"class.v8::Data"* @_ZNK2v810FixedArray3GetENS_5LocalINS_7ContextEEEi(%"class.v8::FixedArray"* %3, %"class.v8::Context"* %1, i32 %34) #1
  %36 = bitcast %"class.v8::Data"* %35 to %"class.v8::Int32"*
  %37 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %36) #1
  %38 = tail call i64 @_ZNK2v86Module22SourceOffsetToLocationEi(%"class.v8::Module"* %2, i32 %37) #1
  %39 = and i64 %38, -4294967296
  br label %40

40:                                               ; preds = %33, %25
  %41 = phi i64 [ %38, %33 ], [ 0, %25 ]
  %42 = phi i64 [ %39, %33 ], [ 0, %25 ]
  %43 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* %29, i32 0) #1
  %44 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* %32, i32 0) #1
  %45 = load i32, i32* %9, align 4
  %46 = load i32, i32* %8, align 8
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %68, !prof !2

48:                                               ; preds = %40
  %49 = add i32 %45, 1
  %50 = lshr i32 %45, 2
  %51 = add i32 %49, %50
  %52 = icmp ugt i32 %51, 4
  %53 = select i1 %52, i32 %51, i32 4
  %54 = icmp ugt i32 %53, %49
  %55 = select i1 %54, i32 %53, i32 %49
  %56 = icmp ult i32 %45, %55
  br i1 %56, label %57, label %68, !prof !5

57:                                               ; preds = %48
  %58 = load %"struct.blink::ImportAssertion"*, %"struct.blink::ImportAssertion"** %7, align 8
  %59 = icmp eq %"struct.blink::ImportAssertion"* %58, null
  br i1 %59, label %60, label %67

60:                                               ; preds = %57
  %61 = zext i32 %55 to i64
  %62 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15ImportAssertionEEEmm(i64 %61) #1
  %63 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %62, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ImportAssertionEEEPKcv, i64 0, i64 0)) #1
  %64 = ptrtoint i8* %63 to i64
  store atomic i64 %64, i64* %24 monotonic, align 8
  %65 = udiv i64 %62, 24
  %66 = trunc i64 %65 to i32
  store i32 %66, i32* %8, align 8
  br label %68

67:                                               ; preds = %57
  tail call void @_ZN3WTF6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1812"* %0, i32 %55) #1
  br label %68

68:                                               ; preds = %67, %60, %48, %40
  %69 = load %"struct.blink::ImportAssertion"*, %"struct.blink::ImportAssertion"** %7, align 8
  %70 = load i32, i32* %9, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %69, i64 %71, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %72, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #1
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %79
  tail call void @llvm.trap() #1
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %74, %68
  %92 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %69, i64 %71, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %92, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %93, label %129, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %111

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i33
  %103 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #1
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !2

108:                                              ; preds = %99
  tail call void @llvm.trap() #1
  unreachable

109:                                              ; preds = %99
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %100, align 4
  br label %111

111:                                              ; preds = %109, %94
  %112 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %69, i64 %71, i32 2
  %113 = bitcast %"class.WTF::TextPosition"* %112 to i64*
  %114 = and i64 %41, 4294967295
  %115 = or i64 %42, %114
  store i64 %115, i64* %113, align 8
  %116 = load i32, i32* %9, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %9, align 4
  %118 = load atomic i32, i32* %95 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %111
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %111
  %126 = phi i32 [ %124, %123 ], [ %122, %111 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %136

128:                                              ; preds = %125
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #1
  br label %136

129:                                              ; preds = %91
  %130 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %69, i64 %71, i32 2
  %131 = bitcast %"class.WTF::TextPosition"* %130 to i64*
  %132 = and i64 %41, 4294967295
  %133 = or i64 %42, %132
  store i64 %133, i64* %131, align 8
  %134 = load i32, i32* %9, align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %9, align 4
  br label %136

136:                                              ; preds = %129, %125, %128
  br i1 %73, label %150, label %137

137:                                              ; preds = %136
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #1
  br label %150

150:                                              ; preds = %136, %146, %149
  %151 = add nuw nsw i32 %26, 1
  %152 = icmp eq i32 %151, %12
  br i1 %152, label %153, label %25

153:                                              ; preds = %150, %5, %14
  ret void
}

declare %"class.v8::FixedArray"* @_ZNK2v813ModuleRequest19GetImportAssertionsEv(%"class.v8::ModuleRequest"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1815"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.1815"* %0 to %"struct.blink::ImportAssertion"**
  %3 = load %"struct.blink::ImportAssertion"*, %"struct.blink::ImportAssertion"** %2, align 8
  %4 = icmp eq %"struct.blink::ImportAssertion"* %3, null
  br i1 %4, label %57, label %5, !prof !5

5:                                                ; preds = %1
  %6 = bitcast %"struct.blink::ImportAssertion"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor.1815", %"class.WTF::ConditionalDestructor.1815"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor.1815"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %55, label %11, !prof !2

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %3, i64 %12
  br label %14

14:                                               ; preds = %11, %49
  %15 = phi %"struct.blink::ImportAssertion"* [ %50, %49 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #1
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #1
  br label %49

49:                                               ; preds = %48, %45, %32
  %50 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 1
  %51 = icmp eq %"struct.blink::ImportAssertion"* %50, %13
  br i1 %51, label %52, label %14

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  %53 = bitcast %"class.WTF::ConditionalDestructor.1815"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %5
  %56 = phi i8* [ %54, %52 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #1
  store %"struct.blink::ImportAssertion"* null, %"struct.blink::ImportAssertion"** %2, align 8
  br label %57

57:                                               ; preds = %1, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink12ModuleRecord11V8NamespaceEN2v85LocalINS1_6ModuleEEE(%"class.v8::Module"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.v8::Value"* @_ZN2v86Module18GetModuleNamespaceEv(%"class.v8::Module"* %0) #1
  ret %"class.v8::Value"* %2
}

declare %"class.v8::Value"* @_ZN2v86Module18GetModuleNamespaceEv(%"class.v8::Module"*) local_unnamed_addr #3

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #3

declare %"class.blink::Modulator"* @_ZN5blink9Modulator4FromEPNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #1
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #1
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #1
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #1
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #1
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #1
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #1
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #1
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #3

declare void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"*, %class.scoped_refptr.177* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink18ParkableStringImplD1Ev(%"class.blink::ParkableStringImpl"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.340, %class.scoped_refptr.340* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #1
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.174"* dereferenceable(8) %9) #1
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #1
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #1
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #1
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #1
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.340* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #1
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #1
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #1
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #1
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #1
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #1
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #1
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.340* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #1
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #1
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #1
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #3

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.174"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #3

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector.1812"*, %"class.WTF::Vector.1812"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::ImportAssertion"* null, %"struct.blink::ImportAssertion"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15ImportAssertionEEEmm(i64 %9) #1
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ImportAssertionEEEPKcv, i64 0, i64 0)) #1
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector.1812"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = udiv i64 %10, 24
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"struct.blink::ImportAssertion"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"struct.blink::ImportAssertion"* [ null, %2 ], [ %16, %8 ]
  %19 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::ImportAssertion"*, %"struct.blink::ImportAssertion"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %83, label %28

28:                                               ; preds = %17, %74
  %29 = phi %"struct.blink::ImportAssertion"* [ %80, %74 ], [ %18, %17 ]
  %30 = phi %"struct.blink::ImportAssertion"* [ %81, %74 ], [ %23, %17 ]
  %31 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #1
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #1
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %28
  %53 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %30, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %29, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #1
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  tail call void @llvm.trap() #1
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %72, %57, %52
  %75 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %29, i64 0, i32 2
  %76 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %30, i64 0, i32 2
  %77 = bitcast %"class.WTF::TextPosition"* %76 to i64*
  %78 = bitcast %"class.WTF::TextPosition"* %75 to i64*
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %29, i64 1
  %81 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %30, i64 1
  %82 = icmp eq %"struct.blink::ImportAssertion"* %81, %26
  br i1 %82, label %83, label %28

83:                                               ; preds = %74, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15ImportAssertionEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #1
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #1
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #1
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #1
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #1
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #1
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #1
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #1
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #1
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #1
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CachedMetadataHandler"*
  %4 = bitcast i8* %1 to void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)**, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CachedMetadataHandler"* %3, %"class.blink::Visitor"* %0) #1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_28ModuleRecordProduceCacheDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #1
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #1
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #1
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_28ModuleRecordProduceCacheDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_28ModuleRecordProduceCacheDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.178"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_28ModuleRecordProduceCacheDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.178"*)) #1
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #1
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #1
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #1
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #1
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #1
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %40, i8* %41) #1
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #1
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #1
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #1
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #1
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #1
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #1
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #1
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_28ModuleRecordProduceCacheDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv) #1
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds i8, i8* %1, i64 16
  %14 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 57) #1
  %15 = bitcast i8* %14 to %"class.blink::TraceWrapperV8Reference.174"*
  %16 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)***
  %17 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)** %17, i64 7
  %19 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.174"*)** %18, align 8
  tail call void %19(%"class.blink::Visitor"* %0, %"class.blink::TraceWrapperV8Reference.174"* dereferenceable(8) %15) #1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_28ModuleRecordProduceCacheDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.178"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13ModuleRequestEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #1
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #1
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #1
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #1
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #1
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #1
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #1
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #1
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #1
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #1
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13ModuleRequestELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1809"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %62

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::ModuleRequest"*, %"struct.blink::ModuleRequest"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1809"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %60, label %14

14:                                               ; preds = %4, %56
  %15 = phi %"struct.blink::ModuleRequest"* [ %58, %56 ], [ %6, %4 ]
  %16 = phi %"struct.blink::ModuleRequest"* [ %57, %56 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"struct.blink::ModuleRequest"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.blink::ModuleRequest"* %16 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %16, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %15, i64 0, i32 1
  %23 = bitcast %"class.WTF::TextPosition"* %22 to i64*
  %24 = bitcast %"class.WTF::TextPosition"* %21 to i64*
  %25 = load i64, i64* %23, align 8
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %16, i64 0, i32 2
  %27 = bitcast %"class.WTF::Vector.1812"* %26 to i8*
  %28 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %15, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %16, i64 0, i32 2, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %16, i64 0, i32 2, i32 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::Vector.1812"* %28 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.WTF::Vector.1812"* %26 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %15, i64 0, i32 2, i32 0, i32 0, i32 1
  %35 = load i32, i32* %29, align 4
  %36 = load i32, i32* %34, align 4
  store i32 %36, i32* %29, align 4
  store i32 %35, i32* %34, align 4
  %37 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = load i32, i32* %30, align 4
  %39 = load i32, i32* %37, align 4
  store i32 %39, i32* %30, align 4
  store i32 %38, i32* %37, align 4
  %40 = bitcast %"class.WTF::Vector.1812"* %28 to %"class.WTF::ConditionalDestructor.1815"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1815"* %40) #1
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %14
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #1
  br label %56

56:                                               ; preds = %55, %52, %14
  %57 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %16, i64 1
  %58 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %15, i64 1
  %59 = icmp eq %"struct.blink::ModuleRequest"* %58, %10
  br i1 %59, label %60, label %14

60:                                               ; preds = %56, %4
  %61 = bitcast %"struct.blink::ModuleRequest"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %61) #1
  br label %133

62:                                               ; preds = %2
  %63 = zext i32 %1 to i64
  %64 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13ModuleRequestEEEmm(i64 %63) #1
  %65 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %64, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13ModuleRequestEEEPKcv, i64 0, i64 0)) #1
  %66 = lshr i64 %64, 5
  %67 = ptrtoint i8* %65 to i64
  %68 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %0, i64 0, i32 0, i32 0, i32 0
  %69 = load %"struct.blink::ModuleRequest"*, %"struct.blink::ModuleRequest"** %68, align 8
  %70 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %0, i64 0, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %69, i64 %72
  %74 = icmp eq i32 %71, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %62
  %76 = bitcast %"struct.blink::ModuleRequest"* %69 to i8*
  br label %128

77:                                               ; preds = %62
  %78 = bitcast i8* %65 to %"struct.blink::ModuleRequest"*
  br label %79

79:                                               ; preds = %77, %121
  %80 = phi %"struct.blink::ModuleRequest"* [ %123, %121 ], [ %69, %77 ]
  %81 = phi %"struct.blink::ModuleRequest"* [ %122, %121 ], [ %78, %77 ]
  %82 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"struct.blink::ModuleRequest"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"struct.blink::ModuleRequest"* %81 to i64*
  store i64 %84, i64* %85, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %86 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %81, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %80, i64 0, i32 1
  %88 = bitcast %"class.WTF::TextPosition"* %87 to i64*
  %89 = bitcast %"class.WTF::TextPosition"* %86 to i64*
  %90 = load i64, i64* %88, align 8
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %81, i64 0, i32 2
  %92 = bitcast %"class.WTF::Vector.1812"* %91 to i8*
  %93 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %80, i64 0, i32 2
  %94 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %81, i64 0, i32 2, i32 0, i32 0, i32 1
  %95 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %81, i64 0, i32 2, i32 0, i32 0, i32 2
  %96 = bitcast %"class.WTF::Vector.1812"* %93 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #1
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.WTF::Vector.1812"* %91 to i64*
  store atomic i64 0, i64* %96 monotonic, align 8
  store atomic i64 %97, i64* %98 monotonic, align 8
  %99 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %80, i64 0, i32 2, i32 0, i32 0, i32 1
  %100 = load i32, i32* %94, align 4
  %101 = load i32, i32* %99, align 4
  store i32 %101, i32* %94, align 4
  store i32 %100, i32* %99, align 4
  %102 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %80, i64 0, i32 2, i32 0, i32 0, i32 2
  %103 = load i32, i32* %95, align 4
  %104 = load i32, i32* %102, align 4
  store i32 %104, i32* %95, align 4
  store i32 %103, i32* %102, align 4
  %105 = bitcast %"class.WTF::Vector.1812"* %93 to %"class.WTF::ConditionalDestructor.1815"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1815"* %105) #1
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %79
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #1
  br label %121

121:                                              ; preds = %120, %117, %79
  %122 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %81, i64 1
  %123 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %80, i64 1
  %124 = icmp eq %"struct.blink::ModuleRequest"* %123, %73
  br i1 %124, label %125, label %79

125:                                              ; preds = %121
  %126 = bitcast %"class.WTF::Vector.1809"* %0 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %75, %125
  %129 = phi i8* [ %127, %125 ], [ %76, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %129) #1
  %130 = bitcast %"class.WTF::Vector.1809"* %0 to i64*
  store atomic i64 %67, i64* %130 monotonic, align 8
  %131 = trunc i64 %66 to i32
  %132 = getelementptr inbounds %"class.WTF::Vector.1809", %"class.WTF::Vector.1809"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %131, i32* %132, align 8
  br label %133

133:                                              ; preds = %128, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15ImportAssertionELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1812"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %70

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::ImportAssertion"*, %"struct.blink::ImportAssertion"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1812"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %68, label %14

14:                                               ; preds = %4, %64
  %15 = phi %"struct.blink::ImportAssertion"* [ %66, %64 ], [ %6, %4 ]
  %16 = phi %"struct.blink::ImportAssertion"* [ %65, %64 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"struct.blink::ImportAssertion"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.blink::ImportAssertion"* %16 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %16, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %24 = bitcast %"class.WTF::String"* %22 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.WTF::String"* %21 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %27 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %16, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 0, i32 2
  %29 = bitcast %"class.WTF::TextPosition"* %28 to i64*
  %30 = bitcast %"class.WTF::TextPosition"* %27 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %14
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #1
  br label %48

48:                                               ; preds = %47, %44, %14
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #1
  br label %64

64:                                               ; preds = %63, %60, %48
  %65 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %16, i64 1
  %66 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 1
  %67 = icmp eq %"struct.blink::ImportAssertion"* %66, %10
  br i1 %67, label %68, label %14

68:                                               ; preds = %64, %4
  %69 = bitcast %"struct.blink::ImportAssertion"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #1
  br label %149

70:                                               ; preds = %2
  %71 = zext i32 %1 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15ImportAssertionEEEmm(i64 %71) #1
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ImportAssertionEEEPKcv, i64 0, i64 0)) #1
  %74 = udiv i64 %72, 24
  %75 = ptrtoint i8* %73 to i64
  %76 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = load %"struct.blink::ImportAssertion"*, %"struct.blink::ImportAssertion"** %76, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %77, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %70
  %84 = bitcast %"struct.blink::ImportAssertion"* %77 to i8*
  br label %144

85:                                               ; preds = %70
  %86 = bitcast i8* %73 to %"struct.blink::ImportAssertion"*
  br label %87

87:                                               ; preds = %85, %137
  %88 = phi %"struct.blink::ImportAssertion"* [ %139, %137 ], [ %77, %85 ]
  %89 = phi %"struct.blink::ImportAssertion"* [ %138, %137 ], [ %86, %85 ]
  %90 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %88, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"struct.blink::ImportAssertion"* %88 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"struct.blink::ImportAssertion"* %89 to i64*
  store i64 %92, i64* %93, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %90, align 8
  %94 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %89, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %88, i64 0, i32 1
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 0, i32 0, i32 0
  %97 = bitcast %"class.WTF::String"* %95 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.WTF::String"* %94 to i64*
  store i64 %98, i64* %99, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %96, align 8
  %100 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %89, i64 0, i32 2
  %101 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %88, i64 0, i32 2
  %102 = bitcast %"class.WTF::TextPosition"* %101 to i64*
  %103 = bitcast %"class.WTF::TextPosition"* %100 to i64*
  %104 = load i64, i64* %102, align 8
  store i64 %104, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %88, i64 0, i32 1, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %87
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #1
  br label %121

121:                                              ; preds = %120, %117, %87
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #1
  br label %137

137:                                              ; preds = %136, %133, %121
  %138 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %89, i64 1
  %139 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %88, i64 1
  %140 = icmp eq %"struct.blink::ImportAssertion"* %139, %81
  br i1 %140, label %141, label %87

141:                                              ; preds = %137
  %142 = bitcast %"class.WTF::Vector.1812"* %0 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %83, %141
  %145 = phi i8* [ %143, %141 ], [ %84, %83 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #1
  %146 = bitcast %"class.WTF::Vector.1812"* %0 to i64*
  store atomic i64 %75, i64* %146 monotonic, align 8
  %147 = trunc i64 %74 to i32
  %148 = getelementptr inbounds %"class.WTF::Vector.1812", %"class.WTF::Vector.1812"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %147, i32* %148, align 8
  br label %149

149:                                              ; preds = %144, %68
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2002, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
