; ModuleID = '../../chrome/browser/metrics/metrics_memory_details.cc'
source_filename = "../../chrome/browser/metrics/metrics_memory_details.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.MetricsMemoryDetails = type { %class.MemoryDetails, %"class.base::OnceCallback" }
%class.MemoryDetails = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.std::__1::vector" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.ProcessData*, %struct.ProcessData*, %"class.std::__1::__compressed_pair.16" }
%struct.ProcessData = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.2" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %"class.std::__1::__compressed_pair.11" }
%struct.ProcessMemoryInformation = type { i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i32, i32, i32, %"class.std::__1::vector.4", i64 }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %struct.ProcessMemoryInformation* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.ProcessData* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.21", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.22 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.23" }>
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.23", [4 x i8] }>
%"class.base::IDMap<content::RenderProcessHost *, int>::Iterator" = type { %"class.base::IDMap"*, %"class.std::__1::__hash_map_const_iterator" }
%"class.base::IDMap" = type <{ i32, [4 x i8], %"class.base::internal::flat_tree", i32, [4 x i8], %"class.std::__1::unordered_map", i8, [7 x i8] }>
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { i32*, i32*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { i32* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.80", %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.95", [4 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82", %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i64 }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { float }
%"class.std::__1::__hash_map_const_iterator" = type { %"class.std::__1::__hash_const_iterator" }
%"class.std::__1::__hash_const_iterator" = type { %"struct.std::__1::__hash_node_base"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.29", [4 x i8] }>
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.content::RenderProcessHost" = type <{ %"class.IPC::Sender", %"class.IPC::Listener", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Sender" = type { i32 (...)** }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.45", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.45" = type { %"class.std::__1::__tree.46" }
%"class.std::__1::__tree.46" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.content::RenderProcessHost"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.content::RenderWidgetHostIterator" = type { i32 (...)** }
%"class.content::RenderWidgetHost" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.110" }
%"struct.std::__1::pair.110" = type { %"class.content::BrowserContext"*, %struct.SiteData }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%struct.SiteData = type <{ %"class.std::__1::map.56", i32, [4 x i8] }>
%"class.std::__1::map.56" = type { %"class.std::__1::__tree.57" }
%"class.std::__1::__tree.57" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.content::RenderViewHost" = type { i32 (...)** }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108", %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.91"*, i8, [7 x i8] }>
%"class.std::__1::allocator.91" = type { i8 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN7content17RenderProcessHostEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE14__erase_uniqueIiEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN7content17RenderProcessHostEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN7content14BrowserContextE8SiteDataEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTV20MetricsMemoryDetails = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.MetricsMemoryDetails*)* @_ZN20MetricsMemoryDetails18OnDetailsAvailableEv to i8*), i8* bitcast (void (%class.MetricsMemoryDetails*)* @_ZN20MetricsMemoryDetailsD2Ev to i8*), i8* bitcast (void (%class.MetricsMemoryDetails*)* @_ZN20MetricsMemoryDetailsD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [19 x i8] c"OnDetailsAvailable\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../chrome/browser/metrics/metrics_memory_details.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"Memory.Browser.OpenFDs\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"Memory.Browser.OpenFDsSoftLimit\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"Memory.RendererAll.OpenFDs\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"Memory.RendererAll.OpenFDsSoftLimit\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Memory.Extension.OpenFDs\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"Memory.Chrome.OpenFDs\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"Memory.Renderer.OpenFDs\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"Memory.Utility.OpenFDs\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"Memory.Zygote.OpenFDs\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"Memory.SandboxHelper.OpenFDs\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"Memory.Gpu.OpenFDs\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"Memory.Gpu.OpenFDsSoftLimit\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"Memory.PepperPlugin.OpenFDs\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"Memory.PepperPluginBroker.OpenFDs\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"Memory.NativeClient.OpenFDs\00", align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"Memory.NativeClientBroker.OpenFDs\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"Memory.ProcessCount\00", align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"Memory.RendererProcessCount\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"Memory.RenderProcessHost.Count.All\00", align 1
@.str.21 = private unnamed_addr constant [53 x i8] c"Memory.RenderProcessHost.Count.InitializedAndNotDead\00", align 1
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_4.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_5.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_6.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_7.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_8.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_9.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__10_.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__11_.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__12_.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__13_.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__14_.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__15_.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__16_.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__17_.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__18_.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN20MetricsMemoryDetailsC1EN4base12OnceCallbackIFvvEEE = hidden unnamed_addr alias void (%class.MetricsMemoryDetails*, %"class.base::OnceCallback"*), void (%class.MetricsMemoryDetails*, %"class.base::OnceCallback"*)* @_ZN20MetricsMemoryDetailsC2EN4base12OnceCallbackIFvvEEE
@_ZN20MetricsMemoryDetailsD1Ev = hidden unnamed_addr alias void (%class.MetricsMemoryDetails*), void (%class.MetricsMemoryDetails*)* @_ZN20MetricsMemoryDetailsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20MetricsMemoryDetailsC2EN4base12OnceCallbackIFvvEEE(%class.MetricsMemoryDetails*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 0
  tail call void @_ZN13MemoryDetailsC2Ev(%class.MemoryDetails* %3) #7
  %4 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20MetricsMemoryDetails, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  ret void
}

declare void @_ZN13MemoryDetailsC2Ev(%class.MemoryDetails*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20MetricsMemoryDetailsD2Ev(%class.MetricsMemoryDetails*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20MetricsMemoryDetails, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #7
  %4 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 0
  tail call void @_ZN13MemoryDetailsD2Ev(%class.MemoryDetails* %4) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN13MemoryDetailsD2Ev(%class.MemoryDetails*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20MetricsMemoryDetailsD0Ev(%class.MetricsMemoryDetails*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20MetricsMemoryDetails, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #7
  %4 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 0
  tail call void @_ZN13MemoryDetailsD2Ev(%class.MemoryDetails* %4) #7
  %5 = bitcast %class.MetricsMemoryDetails* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20MetricsMemoryDetails18OnDetailsAvailableEv(%class.MetricsMemoryDetails*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  tail call void @_ZN20MetricsMemoryDetails16UpdateHistogramsEv(%class.MetricsMemoryDetails* %0)
  %4 = tail call dereferenceable(8) %class.scoped_refptr.22* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #7
  %5 = bitcast %class.scoped_refptr.22* %4 to %"class.base::TaskRunner"**
  %6 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %5, align 8
  %7 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 55) #7
  %8 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %6, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #7
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20MetricsMemoryDetails16UpdateHistogramsEv(%class.MetricsMemoryDetails*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::IDMap<content::RenderProcessHost *, int>::Iterator", align 8
  %3 = getelementptr inbounds %class.MetricsMemoryDetails, %class.MetricsMemoryDetails* %0, i64 0, i32 0
  %4 = tail call %struct.ProcessData* @_ZN13MemoryDetails13ChromeBrowserEv(%class.MemoryDetails* %3) #7
  %5 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %4, i64 0, i32 2
  %6 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %4, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %struct.ProcessMemoryInformation** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.2"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  br label %19

14:                                               ; preds = %271, %1
  %15 = phi i32 [ 0, %1 ], [ %272, %271 ]
  tail call void @_ZN20MetricsMemoryDetails26UpdateSiteIsolationMetricsEv(%class.MetricsMemoryDetails* undef)
  %16 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__15_.0.0.0.0.0 acquire, align 8
  %17 = inttoptr i64 %16 to %"class.base::HistogramBase"*
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %279, label %282

19:                                               ; preds = %12, %271
  %20 = phi i64 [ %10, %12 ], [ %275, %271 ]
  %21 = phi i64 [ 0, %12 ], [ %273, %271 ]
  %22 = phi i32 [ 0, %12 ], [ %272, %271 ]
  %23 = inttoptr i64 %20 to %struct.ProcessMemoryInformation*
  %24 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %23, i64 %21, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %23, i64 %21, i32 6
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %23, i64 %21, i32 4
  %29 = load i32, i32* %28, align 4
  switch i32 %29, label %271 [
    i32 2, label %30
    i32 3, label %59
    i32 6, label %137
    i32 7, label %152
    i32 8, label %167
    i32 9, label %182
    i32 10, label %211
    i32 11, label %226
    i32 13, label %241
    i32 14, label %256
  ]

30:                                               ; preds = %19
  %31 = icmp ne i32 %25, -1
  %32 = icmp ne i32 %27, -1
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %271

34:                                               ; preds = %30
  %35 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %36 = inttoptr i64 %35 to %"class.base::HistogramBase"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  %39 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %40 = ptrtoint %"class.base::HistogramBase"* %39 to i64
  store atomic i64 %40, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi %"class.base::HistogramBase"* [ %36, %34 ], [ %39, %38 ]
  %43 = bitcast %"class.base::HistogramBase"* %42 to void (%"class.base::HistogramBase"*, i32)***
  %44 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %44, i64 6
  %46 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %45, align 8
  tail call void %46(%"class.base::HistogramBase"* %42, i32 %25) #7
  %47 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %48 = inttoptr i64 %47 to %"class.base::HistogramBase"*
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %41
  %51 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %52 = ptrtoint %"class.base::HistogramBase"* %51 to i64
  store atomic i64 %52, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %53

53:                                               ; preds = %41, %50
  %54 = phi %"class.base::HistogramBase"* [ %48, %41 ], [ %51, %50 ]
  %55 = bitcast %"class.base::HistogramBase"* %54 to void (%"class.base::HistogramBase"*, i32)***
  %56 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %56, i64 6
  %58 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %57, align 8
  tail call void %58(%"class.base::HistogramBase"* %54, i32 %27) #7
  br label %271

59:                                               ; preds = %19
  %60 = icmp ne i32 %25, -1
  %61 = icmp ne i32 %27, -1
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %89

63:                                               ; preds = %59
  %64 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %65 = inttoptr i64 %64 to %"class.base::HistogramBase"*
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %69 = ptrtoint %"class.base::HistogramBase"* %68 to i64
  store atomic i64 %69, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %70

70:                                               ; preds = %63, %67
  %71 = phi %"class.base::HistogramBase"* [ %65, %63 ], [ %68, %67 ]
  %72 = bitcast %"class.base::HistogramBase"* %71 to void (%"class.base::HistogramBase"*, i32)***
  %73 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %73, i64 6
  %75 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %74, align 8
  tail call void %75(%"class.base::HistogramBase"* %71, i32 %25) #7
  %76 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %77 = inttoptr i64 %76 to %"class.base::HistogramBase"*
  %78 = icmp eq i64 %76, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %70
  %80 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %81 = ptrtoint %"class.base::HistogramBase"* %80 to i64
  store atomic i64 %81, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %82

82:                                               ; preds = %70, %79
  %83 = phi %"class.base::HistogramBase"* [ %77, %70 ], [ %80, %79 ]
  %84 = bitcast %"class.base::HistogramBase"* %83 to void (%"class.base::HistogramBase"*, i32)***
  %85 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %85, i64 6
  %87 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %86, align 8
  tail call void %87(%"class.base::HistogramBase"* %83, i32 %27) #7
  %88 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %13, align 8
  br label %89

89:                                               ; preds = %82, %59
  %90 = phi %struct.ProcessMemoryInformation* [ %88, %82 ], [ %23, %59 ]
  %91 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %90, i64 %21, i32 7
  %92 = load i32, i32* %91, align 8
  switch i32 %92, label %121 [
    i32 3, label %93
    i32 2, label %107
    i32 0, label %271
  ]

93:                                               ; preds = %89
  br i1 %60, label %94, label %271

94:                                               ; preds = %93
  %95 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %96 = inttoptr i64 %95 to %"class.base::HistogramBase"*
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %94
  %99 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %100 = ptrtoint %"class.base::HistogramBase"* %99 to i64
  store atomic i64 %100, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %101

101:                                              ; preds = %94, %98
  %102 = phi %"class.base::HistogramBase"* [ %96, %94 ], [ %99, %98 ]
  %103 = bitcast %"class.base::HistogramBase"* %102 to void (%"class.base::HistogramBase"*, i32)***
  %104 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %104, i64 6
  %106 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %105, align 8
  tail call void %106(%"class.base::HistogramBase"* %102, i32 %25) #7
  br label %271

107:                                              ; preds = %89
  br i1 %60, label %108, label %271

108:                                              ; preds = %107
  %109 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_4.0.0.0.0.0 acquire, align 8
  %110 = inttoptr i64 %109 to %"class.base::HistogramBase"*
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %108
  %113 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %114 = ptrtoint %"class.base::HistogramBase"* %113 to i64
  store atomic i64 %114, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_4.0.0.0.0.0 release, align 8
  br label %115

115:                                              ; preds = %108, %112
  %116 = phi %"class.base::HistogramBase"* [ %110, %108 ], [ %113, %112 ]
  %117 = bitcast %"class.base::HistogramBase"* %116 to void (%"class.base::HistogramBase"*, i32)***
  %118 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %118, i64 6
  %120 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %119, align 8
  tail call void %120(%"class.base::HistogramBase"* %116, i32 %25) #7
  br label %271

121:                                              ; preds = %89
  br i1 %60, label %122, label %135

122:                                              ; preds = %121
  %123 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_5.0.0.0.0.0 acquire, align 8
  %124 = inttoptr i64 %123 to %"class.base::HistogramBase"*
  %125 = icmp eq i64 %123, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %122
  %127 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %128 = ptrtoint %"class.base::HistogramBase"* %127 to i64
  store atomic i64 %128, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_5.0.0.0.0.0 release, align 8
  br label %129

129:                                              ; preds = %122, %126
  %130 = phi %"class.base::HistogramBase"* [ %124, %122 ], [ %127, %126 ]
  %131 = bitcast %"class.base::HistogramBase"* %130 to void (%"class.base::HistogramBase"*, i32)***
  %132 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %132, i64 6
  %134 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %133, align 8
  tail call void %134(%"class.base::HistogramBase"* %130, i32 %25) #7
  br label %135

135:                                              ; preds = %129, %121
  %136 = add nsw i32 %22, 1
  br label %271

137:                                              ; preds = %19
  %138 = icmp eq i32 %25, -1
  br i1 %138, label %271, label %139

139:                                              ; preds = %137
  %140 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_6.0.0.0.0.0 acquire, align 8
  %141 = inttoptr i64 %140 to %"class.base::HistogramBase"*
  %142 = icmp eq i64 %140, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %139
  %144 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %145 = ptrtoint %"class.base::HistogramBase"* %144 to i64
  store atomic i64 %145, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_6.0.0.0.0.0 release, align 8
  br label %146

146:                                              ; preds = %139, %143
  %147 = phi %"class.base::HistogramBase"* [ %141, %139 ], [ %144, %143 ]
  %148 = bitcast %"class.base::HistogramBase"* %147 to void (%"class.base::HistogramBase"*, i32)***
  %149 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %149, i64 6
  %151 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %150, align 8
  tail call void %151(%"class.base::HistogramBase"* %147, i32 %25) #7
  br label %271

152:                                              ; preds = %19
  %153 = icmp eq i32 %25, -1
  br i1 %153, label %271, label %154

154:                                              ; preds = %152
  %155 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_7.0.0.0.0.0 acquire, align 8
  %156 = inttoptr i64 %155 to %"class.base::HistogramBase"*
  %157 = icmp eq i64 %155, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %154
  %159 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %160 = ptrtoint %"class.base::HistogramBase"* %159 to i64
  store atomic i64 %160, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_7.0.0.0.0.0 release, align 8
  br label %161

161:                                              ; preds = %154, %158
  %162 = phi %"class.base::HistogramBase"* [ %156, %154 ], [ %159, %158 ]
  %163 = bitcast %"class.base::HistogramBase"* %162 to void (%"class.base::HistogramBase"*, i32)***
  %164 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %163, align 8
  %165 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %164, i64 6
  %166 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %165, align 8
  tail call void %166(%"class.base::HistogramBase"* %162, i32 %25) #7
  br label %271

167:                                              ; preds = %19
  %168 = icmp eq i32 %25, -1
  br i1 %168, label %271, label %169

169:                                              ; preds = %167
  %170 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_8.0.0.0.0.0 acquire, align 8
  %171 = inttoptr i64 %170 to %"class.base::HistogramBase"*
  %172 = icmp eq i64 %170, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %169
  %174 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %175 = ptrtoint %"class.base::HistogramBase"* %174 to i64
  store atomic i64 %175, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_8.0.0.0.0.0 release, align 8
  br label %176

176:                                              ; preds = %169, %173
  %177 = phi %"class.base::HistogramBase"* [ %171, %169 ], [ %174, %173 ]
  %178 = bitcast %"class.base::HistogramBase"* %177 to void (%"class.base::HistogramBase"*, i32)***
  %179 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %179, i64 6
  %181 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %180, align 8
  tail call void %181(%"class.base::HistogramBase"* %177, i32 %25) #7
  br label %271

182:                                              ; preds = %19
  %183 = icmp ne i32 %25, -1
  %184 = icmp ne i32 %27, -1
  %185 = and i1 %183, %184
  br i1 %185, label %186, label %271

186:                                              ; preds = %182
  %187 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_9.0.0.0.0.0 acquire, align 8
  %188 = inttoptr i64 %187 to %"class.base::HistogramBase"*
  %189 = icmp eq i64 %187, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %186
  %191 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %192 = ptrtoint %"class.base::HistogramBase"* %191 to i64
  store atomic i64 %192, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer_9.0.0.0.0.0 release, align 8
  br label %193

193:                                              ; preds = %186, %190
  %194 = phi %"class.base::HistogramBase"* [ %188, %186 ], [ %191, %190 ]
  %195 = bitcast %"class.base::HistogramBase"* %194 to void (%"class.base::HistogramBase"*, i32)***
  %196 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %196, i64 6
  %198 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %197, align 8
  tail call void %198(%"class.base::HistogramBase"* %194, i32 %25) #7
  %199 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__10_.0.0.0.0.0 acquire, align 8
  %200 = inttoptr i64 %199 to %"class.base::HistogramBase"*
  %201 = icmp eq i64 %199, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %193
  %203 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %204 = ptrtoint %"class.base::HistogramBase"* %203 to i64
  store atomic i64 %204, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__10_.0.0.0.0.0 release, align 8
  br label %205

205:                                              ; preds = %193, %202
  %206 = phi %"class.base::HistogramBase"* [ %200, %193 ], [ %203, %202 ]
  %207 = bitcast %"class.base::HistogramBase"* %206 to void (%"class.base::HistogramBase"*, i32)***
  %208 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %207, align 8
  %209 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %208, i64 6
  %210 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %209, align 8
  tail call void %210(%"class.base::HistogramBase"* %206, i32 %27) #7
  br label %271

211:                                              ; preds = %19
  %212 = icmp eq i32 %25, -1
  br i1 %212, label %271, label %213

213:                                              ; preds = %211
  %214 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__11_.0.0.0.0.0 acquire, align 8
  %215 = inttoptr i64 %214 to %"class.base::HistogramBase"*
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %213
  %218 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %219 = ptrtoint %"class.base::HistogramBase"* %218 to i64
  store atomic i64 %219, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__11_.0.0.0.0.0 release, align 8
  br label %220

220:                                              ; preds = %213, %217
  %221 = phi %"class.base::HistogramBase"* [ %215, %213 ], [ %218, %217 ]
  %222 = bitcast %"class.base::HistogramBase"* %221 to void (%"class.base::HistogramBase"*, i32)***
  %223 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %223, i64 6
  %225 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %224, align 8
  tail call void %225(%"class.base::HistogramBase"* %221, i32 %25) #7
  br label %271

226:                                              ; preds = %19
  %227 = icmp eq i32 %25, -1
  br i1 %227, label %271, label %228

228:                                              ; preds = %226
  %229 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__12_.0.0.0.0.0 acquire, align 8
  %230 = inttoptr i64 %229 to %"class.base::HistogramBase"*
  %231 = icmp eq i64 %229, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %228
  %233 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %234 = ptrtoint %"class.base::HistogramBase"* %233 to i64
  store atomic i64 %234, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__12_.0.0.0.0.0 release, align 8
  br label %235

235:                                              ; preds = %228, %232
  %236 = phi %"class.base::HistogramBase"* [ %230, %228 ], [ %233, %232 ]
  %237 = bitcast %"class.base::HistogramBase"* %236 to void (%"class.base::HistogramBase"*, i32)***
  %238 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %237, align 8
  %239 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %238, i64 6
  %240 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %239, align 8
  tail call void %240(%"class.base::HistogramBase"* %236, i32 %25) #7
  br label %271

241:                                              ; preds = %19
  %242 = icmp eq i32 %25, -1
  br i1 %242, label %271, label %243

243:                                              ; preds = %241
  %244 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__13_.0.0.0.0.0 acquire, align 8
  %245 = inttoptr i64 %244 to %"class.base::HistogramBase"*
  %246 = icmp eq i64 %244, 0
  br i1 %246, label %247, label %250

247:                                              ; preds = %243
  %248 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %249 = ptrtoint %"class.base::HistogramBase"* %248 to i64
  store atomic i64 %249, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__13_.0.0.0.0.0 release, align 8
  br label %250

250:                                              ; preds = %243, %247
  %251 = phi %"class.base::HistogramBase"* [ %245, %243 ], [ %248, %247 ]
  %252 = bitcast %"class.base::HistogramBase"* %251 to void (%"class.base::HistogramBase"*, i32)***
  %253 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %252, align 8
  %254 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %253, i64 6
  %255 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %254, align 8
  tail call void %255(%"class.base::HistogramBase"* %251, i32 %25) #7
  br label %271

256:                                              ; preds = %19
  %257 = icmp eq i32 %25, -1
  br i1 %257, label %271, label %258

258:                                              ; preds = %256
  %259 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__14_.0.0.0.0.0 acquire, align 8
  %260 = inttoptr i64 %259 to %"class.base::HistogramBase"*
  %261 = icmp eq i64 %259, 0
  br i1 %261, label %262, label %265

262:                                              ; preds = %258
  %263 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #7
  %264 = ptrtoint %"class.base::HistogramBase"* %263 to i64
  store atomic i64 %264, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__14_.0.0.0.0.0 release, align 8
  br label %265

265:                                              ; preds = %258, %262
  %266 = phi %"class.base::HistogramBase"* [ %260, %258 ], [ %263, %262 ]
  %267 = bitcast %"class.base::HistogramBase"* %266 to void (%"class.base::HistogramBase"*, i32)***
  %268 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %267, align 8
  %269 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %268, i64 6
  %270 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %269, align 8
  tail call void %270(%"class.base::HistogramBase"* %266, i32 %25) #7
  br label %271

271:                                              ; preds = %19, %265, %256, %250, %241, %235, %226, %220, %211, %182, %205, %176, %167, %161, %152, %146, %137, %135, %101, %93, %115, %107, %89, %30, %53
  %272 = phi i32 [ %22, %53 ], [ %22, %30 ], [ %136, %135 ], [ %22, %101 ], [ %22, %93 ], [ %22, %115 ], [ %22, %107 ], [ %22, %89 ], [ %22, %137 ], [ %22, %146 ], [ %22, %152 ], [ %22, %161 ], [ %22, %167 ], [ %22, %176 ], [ %22, %205 ], [ %22, %182 ], [ %22, %211 ], [ %22, %220 ], [ %22, %226 ], [ %22, %235 ], [ %22, %241 ], [ %22, %250 ], [ %22, %256 ], [ %22, %265 ], [ %22, %19 ]
  %273 = add nuw i64 %21, 1
  %274 = load i64, i64* %7, align 8
  %275 = load i64, i64* %9, align 8
  %276 = sub i64 %274, %275
  %277 = sdiv exact i64 %276, 112
  %278 = icmp ult i64 %273, %277
  br i1 %278, label %19, label %14

279:                                              ; preds = %14
  %280 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #7
  %281 = ptrtoint %"class.base::HistogramBase"* %280 to i64
  store atomic i64 %281, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__15_.0.0.0.0.0 release, align 8
  br label %282

282:                                              ; preds = %14, %279
  %283 = phi %"class.base::HistogramBase"* [ %17, %14 ], [ %280, %279 ]
  %284 = load i64, i64* %7, align 8
  %285 = load i64, i64* %9, align 8
  %286 = sub i64 %284, %285
  %287 = sdiv exact i64 %286, 112
  %288 = trunc i64 %287 to i32
  %289 = bitcast %"class.base::HistogramBase"* %283 to void (%"class.base::HistogramBase"*, i32)***
  %290 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %289, align 8
  %291 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %290, i64 6
  %292 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %291, align 8
  tail call void %292(%"class.base::HistogramBase"* %283, i32 %288) #7
  %293 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__16_.0.0.0.0.0 acquire, align 8
  %294 = inttoptr i64 %293 to %"class.base::HistogramBase"*
  %295 = icmp eq i64 %293, 0
  br i1 %295, label %296, label %299

296:                                              ; preds = %282
  %297 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #7
  %298 = ptrtoint %"class.base::HistogramBase"* %297 to i64
  store atomic i64 %298, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__16_.0.0.0.0.0 release, align 8
  br label %299

299:                                              ; preds = %282, %296
  %300 = phi %"class.base::HistogramBase"* [ %294, %282 ], [ %297, %296 ]
  %301 = bitcast %"class.base::HistogramBase"* %300 to void (%"class.base::HistogramBase"*, i32)***
  %302 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %302, i64 6
  %304 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %303, align 8
  tail call void %304(%"class.base::HistogramBase"* %300, i32 %15) #7
  %305 = bitcast %"class.base::IDMap<content::RenderProcessHost *, int>::Iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %305) #7
  %306 = getelementptr inbounds %"class.base::IDMap<content::RenderProcessHost *, int>::Iterator", %"class.base::IDMap<content::RenderProcessHost *, int>::Iterator"* %2, i64 0, i32 0
  %307 = getelementptr inbounds %"class.base::IDMap<content::RenderProcessHost *, int>::Iterator", %"class.base::IDMap<content::RenderProcessHost *, int>::Iterator"* %2, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %305, i8 -86, i64 16, i1 false) #7
  call void @_ZN7content17RenderProcessHost16AllHostsIteratorEv(%"class.base::IDMap<content::RenderProcessHost *, int>::Iterator"* nonnull sret %2) #7
  %308 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %307, align 8
  %309 = icmp eq %"struct.std::__1::__hash_node_base"* %308, null
  br i1 %309, label %317, label %310

310:                                              ; preds = %299
  %311 = getelementptr inbounds %"class.base::IDMap<content::RenderProcessHost *, int>::Iterator", %"class.base::IDMap<content::RenderProcessHost *, int>::Iterator"* %2, i64 0, i32 1
  %312 = bitcast %"class.std::__1::__hash_map_const_iterator"* %311 to i64**
  %313 = bitcast %"class.std::__1::__hash_map_const_iterator"* %311 to i64*
  br label %348

314:                                              ; preds = %473, %469
  %315 = trunc i64 %406 to i32
  %316 = trunc i64 %413 to i32
  br label %317

317:                                              ; preds = %314, %299
  %318 = phi i32 [ 0, %299 ], [ %316, %314 ]
  %319 = phi i32 [ 0, %299 ], [ %315, %314 ]
  %320 = load %"class.base::IDMap"*, %"class.base::IDMap"** %306, align 8
  %321 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %320, i64 0, i32 0
  %322 = load i32, i32* %321, align 8
  %323 = add nsw i32 %322, -1
  store i32 %323, i32* %321, align 8
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %476

325:                                              ; preds = %317
  %326 = load %"class.base::IDMap"*, %"class.base::IDMap"** %306, align 8
  %327 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %326, i64 0, i32 2
  %328 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %327, i64 0, i32 0, i32 0, i32 0
  %329 = load i32*, i32** %328, align 8
  %330 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %326, i64 0, i32 2, i32 0, i32 0, i32 1
  %331 = load i32*, i32** %330, align 8
  %332 = icmp eq i32* %329, %331
  br i1 %332, label %333, label %335

333:                                              ; preds = %325
  %334 = ptrtoint i32* %329 to i64
  br label %345

335:                                              ; preds = %325
  %336 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %326, i64 0, i32 5, i32 0
  br label %340

337:                                              ; preds = %340
  %338 = bitcast %"class.base::internal::flat_tree"* %327 to i64*
  %339 = load i64, i64* %338, align 8
  br label %345

340:                                              ; preds = %340, %335
  %341 = phi i32* [ %329, %335 ], [ %343, %340 ]
  %342 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN7content17RenderProcessHostEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table"* %336, i32* dereferenceable(4) %341) #7
  %343 = getelementptr inbounds i32, i32* %341, i64 1
  %344 = icmp eq i32* %343, %331
  br i1 %344, label %337, label %340

345:                                              ; preds = %337, %333
  %346 = phi i64 [ %339, %337 ], [ %334, %333 ]
  %347 = bitcast i32** %330 to i64*
  store i64 %346, i64* %347, align 8
  br label %476

348:                                              ; preds = %473, %310
  %349 = phi i64 [ 0, %310 ], [ %413, %473 ]
  %350 = phi i64 [ 0, %310 ], [ %406, %473 ]
  %351 = phi %"struct.std::__1::__hash_node_base"* [ %308, %310 ], [ %474, %473 ]
  %352 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %351, i64 3
  %353 = bitcast %"struct.std::__1::__hash_node_base"* %352 to %"class.content::RenderProcessHost"**
  %354 = load %"class.content::RenderProcessHost"*, %"class.content::RenderProcessHost"** %353, align 8
  %355 = icmp eq %"class.content::RenderProcessHost"* %354, null
  br i1 %355, label %404, label %356

356:                                              ; preds = %348
  %357 = load %"class.base::IDMap"*, %"class.base::IDMap"** %306, align 8
  %358 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %351, i64 2
  %359 = bitcast %"struct.std::__1::__hash_node_base"* %358 to i32*
  %360 = load i32, i32* %359, align 8
  %361 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %357, i64 0, i32 2, i32 0, i32 0, i32 0
  %362 = load i32*, i32** %361, align 8
  %363 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %357, i64 0, i32 2, i32 0, i32 0, i32 1
  %364 = bitcast i32** %363 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = ptrtoint i32* %362 to i64
  %367 = sub i64 %365, %366
  %368 = icmp eq i64 %367, 0
  %369 = inttoptr i64 %365 to i32*
  br i1 %368, label %387, label %370

370:                                              ; preds = %356
  %371 = ashr exact i64 %367, 2
  br label %372

372:                                              ; preds = %372, %370
  %373 = phi i32* [ %362, %370 ], [ %383, %372 ]
  %374 = phi i64 [ %371, %370 ], [ %382, %372 ]
  %375 = lshr i64 %374, 1
  %376 = getelementptr inbounds i32, i32* %373, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = icmp slt i32 %377, %360
  %379 = getelementptr inbounds i32, i32* %376, i64 1
  %380 = xor i64 %375, -1
  %381 = add i64 %374, %380
  %382 = select i1 %378, i64 %381, i64 %375
  %383 = select i1 %378, i32* %379, i32* %373
  %384 = icmp eq i64 %382, 0
  br i1 %384, label %385, label %372

385:                                              ; preds = %372
  %386 = ptrtoint i32* %383 to i64
  br label %387

387:                                              ; preds = %385, %356
  %388 = phi i64 [ %386, %385 ], [ %366, %356 ]
  %389 = phi i32* [ %383, %385 ], [ %362, %356 ]
  %390 = icmp eq i32* %389, %369
  br i1 %390, label %397, label %391

391:                                              ; preds = %387
  %392 = load i32, i32* %389, align 4
  %393 = icmp sgt i32 %392, %360
  br i1 %393, label %397, label %394

394:                                              ; preds = %391
  %395 = getelementptr inbounds i32, i32* %389, i64 1
  %396 = ptrtoint i32* %395 to i64
  br label %397

397:                                              ; preds = %394, %391, %387
  %398 = phi i64 [ %396, %394 ], [ %388, %387 ], [ %388, %391 ]
  %399 = inttoptr i64 %398 to i32*
  %400 = icmp eq i32* %389, %399
  %401 = select i1 %400, i32* %369, i32* %389
  %402 = icmp eq i32* %401, %369
  %403 = select i1 %402, %"class.content::RenderProcessHost"* %354, %"class.content::RenderProcessHost"* null
  br label %404

404:                                              ; preds = %397, %348
  %405 = phi %"class.content::RenderProcessHost"* [ %403, %397 ], [ null, %348 ]
  %406 = add i64 %350, 1
  %407 = bitcast %"class.content::RenderProcessHost"* %405 to i1 (%"class.content::RenderProcessHost"*)***
  %408 = load i1 (%"class.content::RenderProcessHost"*)**, i1 (%"class.content::RenderProcessHost"*)*** %407, align 8
  %409 = getelementptr inbounds i1 (%"class.content::RenderProcessHost"*)*, i1 (%"class.content::RenderProcessHost"*)** %408, i64 30
  %410 = load i1 (%"class.content::RenderProcessHost"*)*, i1 (%"class.content::RenderProcessHost"*)** %409, align 8
  %411 = call zeroext i1 %410(%"class.content::RenderProcessHost"* %405) #7
  %412 = zext i1 %411 to i64
  %413 = add i64 %349, %412
  %414 = load i64*, i64** %312, align 8
  %415 = load i64, i64* %414, align 8
  store i64 %415, i64* %313, align 8
  %416 = icmp eq i64 %415, 0
  %417 = inttoptr i64 %415 to %"struct.std::__1::__hash_node_base"*
  br i1 %416, label %473, label %418

418:                                              ; preds = %404
  %419 = load %"class.base::IDMap"*, %"class.base::IDMap"** %306, align 8
  %420 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %419, i64 0, i32 2, i32 0, i32 0, i32 0
  %421 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %419, i64 0, i32 2, i32 0, i32 0, i32 1
  %422 = bitcast i32** %421 to i64*
  %423 = load i64, i64* %422, align 8
  %424 = inttoptr i64 %423 to i32*
  br label %425

425:                                              ; preds = %469, %418
  %426 = phi %"struct.std::__1::__hash_node_base"* [ %417, %418 ], [ %472, %469 ]
  %427 = phi i64 [ %415, %418 ], [ %470, %469 ]
  %428 = inttoptr i64 %427 to %"struct.std::__1::__hash_node"*
  %429 = inttoptr i64 %427 to i64*
  %430 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %428, i64 0, i32 2, i32 0, i32 0
  %431 = load i32, i32* %430, align 8
  %432 = load i32*, i32** %420, align 8
  %433 = ptrtoint i32* %432 to i64
  %434 = sub i64 %423, %433
  %435 = icmp eq i64 %434, 0
  br i1 %435, label %453, label %436

436:                                              ; preds = %425
  %437 = ashr exact i64 %434, 2
  br label %438

438:                                              ; preds = %438, %436
  %439 = phi i32* [ %432, %436 ], [ %449, %438 ]
  %440 = phi i64 [ %437, %436 ], [ %448, %438 ]
  %441 = lshr i64 %440, 1
  %442 = getelementptr inbounds i32, i32* %439, i64 %441
  %443 = load i32, i32* %442, align 4
  %444 = icmp slt i32 %443, %431
  %445 = getelementptr inbounds i32, i32* %442, i64 1
  %446 = xor i64 %441, -1
  %447 = add i64 %440, %446
  %448 = select i1 %444, i64 %447, i64 %441
  %449 = select i1 %444, i32* %445, i32* %439
  %450 = icmp eq i64 %448, 0
  br i1 %450, label %451, label %438

451:                                              ; preds = %438
  %452 = ptrtoint i32* %449 to i64
  br label %453

453:                                              ; preds = %451, %425
  %454 = phi i64 [ %452, %451 ], [ %433, %425 ]
  %455 = phi i32* [ %449, %451 ], [ %432, %425 ]
  %456 = icmp eq i32* %455, %424
  br i1 %456, label %463, label %457

457:                                              ; preds = %453
  %458 = load i32, i32* %455, align 4
  %459 = icmp sgt i32 %458, %431
  br i1 %459, label %463, label %460

460:                                              ; preds = %457
  %461 = getelementptr inbounds i32, i32* %455, i64 1
  %462 = ptrtoint i32* %461 to i64
  br label %463

463:                                              ; preds = %460, %457, %453
  %464 = phi i64 [ %462, %460 ], [ %454, %453 ], [ %454, %457 ]
  %465 = inttoptr i64 %464 to i32*
  %466 = icmp eq i32* %455, %465
  %467 = select i1 %466, i32* %424, i32* %455
  %468 = icmp eq i32* %467, %424
  br i1 %468, label %473, label %469

469:                                              ; preds = %463
  %470 = load i64, i64* %429, align 8
  store i64 %470, i64* %313, align 8
  %471 = icmp eq i64 %470, 0
  %472 = inttoptr i64 %470 to %"struct.std::__1::__hash_node_base"*
  br i1 %471, label %314, label %425

473:                                              ; preds = %463, %404
  %474 = phi %"struct.std::__1::__hash_node_base"* [ %417, %404 ], [ %426, %463 ]
  %475 = icmp eq %"struct.std::__1::__hash_node_base"* %474, null
  br i1 %475, label %314, label %348

476:                                              ; preds = %317, %345
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %305) #7
  %477 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__17_.0.0.0.0.0 acquire, align 8
  %478 = inttoptr i64 %477 to %"class.base::HistogramBase"*
  %479 = icmp eq i64 %477, 0
  br i1 %479, label %480, label %483

480:                                              ; preds = %476
  %481 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #7
  %482 = ptrtoint %"class.base::HistogramBase"* %481 to i64
  store atomic i64 %482, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__17_.0.0.0.0.0 release, align 8
  br label %483

483:                                              ; preds = %476, %480
  %484 = phi %"class.base::HistogramBase"* [ %478, %476 ], [ %481, %480 ]
  %485 = bitcast %"class.base::HistogramBase"* %484 to void (%"class.base::HistogramBase"*, i32)***
  %486 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %485, align 8
  %487 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %486, i64 6
  %488 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %487, align 8
  call void %488(%"class.base::HistogramBase"* %484, i32 %319) #7
  %489 = load atomic i64, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__18_.0.0.0.0.0 acquire, align 8
  %490 = inttoptr i64 %489 to %"class.base::HistogramBase"*
  %491 = icmp eq i64 %489, 0
  br i1 %491, label %492, label %495

492:                                              ; preds = %483
  %493 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.21, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #7
  %494 = ptrtoint %"class.base::HistogramBase"* %493 to i64
  store atomic i64 %494, i64* @_ZZN20MetricsMemoryDetails16UpdateHistogramsEvE24atomic_histogram_pointer__18_.0.0.0.0.0 release, align 8
  br label %495

495:                                              ; preds = %483, %492
  %496 = phi %"class.base::HistogramBase"* [ %490, %483 ], [ %493, %492 ]
  %497 = bitcast %"class.base::HistogramBase"* %496 to void (%"class.base::HistogramBase"*, i32)***
  %498 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %497, align 8
  %499 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %498, i64 6
  %500 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %499, align 8
  call void %500(%"class.base::HistogramBase"* %496, i32 %318) #7
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.22* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %struct.ProcessData* @_ZN13MemoryDetails13ChromeBrowserEv(%class.MemoryDetails*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20MetricsMemoryDetails26UpdateSiteIsolationMetricsEv(%class.MetricsMemoryDetails* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::map", align 8
  %3 = bitcast %"class.std::__1::map"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %4, align 8
  %9 = call %"class.content::RenderWidgetHostIterator"* @_ZN7content16RenderWidgetHost20GetRenderWidgetHostsEv() #7
  %10 = bitcast %"class.content::RenderWidgetHostIterator"* %9 to %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)***
  %11 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)**, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)** %11, i64 2
  %13 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)** %12, align 8
  %14 = call %"class.content::RenderWidgetHost"* %13(%"class.content::RenderWidgetHostIterator"* %9) #7
  %15 = icmp eq %"class.content::RenderWidgetHost"* %14, null
  br i1 %15, label %125, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  %19 = bitcast %"class.std::__1::map"* %2 to i64*
  br label %20

20:                                               ; preds = %16, %119
  %21 = phi %"class.content::RenderWidgetHost"* [ %14, %16 ], [ %123, %119 ]
  %22 = bitcast %"class.content::RenderWidgetHost"* %21 to %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)***
  %23 = load %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)** %23, i64 14
  %25 = load %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)** %24, align 8
  %26 = call %"class.content::RenderProcessHost"* %25(%"class.content::RenderWidgetHost"* nonnull %21) #7
  %27 = bitcast %"class.content::RenderProcessHost"* %26 to i1 (%"class.content::RenderProcessHost"*)***
  %28 = load i1 (%"class.content::RenderProcessHost"*)**, i1 (%"class.content::RenderProcessHost"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.content::RenderProcessHost"*)*, i1 (%"class.content::RenderProcessHost"*)** %28, i64 26
  %30 = load i1 (%"class.content::RenderProcessHost"*)*, i1 (%"class.content::RenderProcessHost"*)** %29, align 8
  %31 = call zeroext i1 %30(%"class.content::RenderProcessHost"* %26) #7
  br i1 %31, label %32, label %119

32:                                               ; preds = %20
  %33 = call %"class.content::RenderViewHost"* @_ZN7content14RenderViewHost4FromEPNS_16RenderWidgetHostE(%"class.content::RenderWidgetHost"* nonnull %21) #7
  %34 = icmp eq %"class.content::RenderViewHost"* %33, null
  br i1 %34, label %119, label %35

35:                                               ; preds = %32
  %36 = call %"class.content::WebContents"* @_ZN7content11WebContents18FromRenderViewHostEPNS_14RenderViewHostE(%"class.content::RenderViewHost"* nonnull %33) #7
  %37 = icmp eq %"class.content::WebContents"* %36, null
  br i1 %37, label %119, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.content::WebContents"* %36 to %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)***
  %40 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)**, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %40, i64 10
  %42 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %41, align 8
  %43 = call %"class.content::RenderFrameHost"* %42(%"class.content::WebContents"* nonnull %36) #7
  %44 = bitcast %"class.content::RenderFrameHost"* %43 to %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)***
  %45 = load %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)** %45, i64 52
  %47 = load %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)** %46, align 8
  %48 = call %"class.content::RenderViewHost"* %47(%"class.content::RenderFrameHost"* %43) #7
  %49 = icmp eq %"class.content::RenderViewHost"* %33, %48
  br i1 %49, label %50, label %119

50:                                               ; preds = %38
  %51 = bitcast %"class.content::WebContents"* %36 to %"class.content::BrowserContext"* (%"class.content::WebContents"*)***
  %52 = load %"class.content::BrowserContext"* (%"class.content::WebContents"*)**, %"class.content::BrowserContext"* (%"class.content::WebContents"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.content::BrowserContext"* (%"class.content::WebContents"*)*, %"class.content::BrowserContext"* (%"class.content::WebContents"*)** %52, i64 6
  %54 = load %"class.content::BrowserContext"* (%"class.content::WebContents"*)*, %"class.content::BrowserContext"* (%"class.content::WebContents"*)** %53, align 8
  %55 = call %"class.content::BrowserContext"* %54(%"class.content::WebContents"* nonnull %36) #7
  %56 = ptrtoint %"class.content::BrowserContext"* %55 to i64
  %57 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %58 = icmp eq %"class.std::__1::__tree_node"* %57, null
  br i1 %58, label %85, label %59

59:                                               ; preds = %50, %81
  %60 = phi %"class.std::__1::__tree_node"* [ %84, %81 ], [ %57, %50 ]
  %61 = phi %"class.std::__1::__tree_node_base"** [ %83, %81 ], [ %5, %50 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %62, align 8
  %64 = icmp ult %"class.content::BrowserContext"* %55, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %69, label %81

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 0
  br label %85

71:                                               ; preds = %59
  %72 = icmp ult %"class.content::BrowserContext"* %63, %55
  br i1 %72, label %73, label %79

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 1
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 0
  br label %85

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 0
  br label %85

81:                                               ; preds = %73, %65
  %82 = phi %"class.std::__1::__tree_node_base"* [ %67, %65 ], [ %75, %73 ]
  %83 = phi %"class.std::__1::__tree_node_base"** [ %66, %65 ], [ %74, %73 ]
  %84 = bitcast %"class.std::__1::__tree_node_base"* %82 to %"class.std::__1::__tree_node"*
  br label %59

85:                                               ; preds = %50, %79, %77, %69
  %86 = phi %"class.std::__1::__tree_end_node"* [ %70, %69 ], [ %78, %77 ], [ %80, %79 ], [ %7, %50 ]
  %87 = phi %"class.std::__1::__tree_node_base"** [ %66, %69 ], [ %74, %77 ], [ %61, %79 ], [ %18, %50 ]
  %88 = bitcast %"class.std::__1::__tree_node_base"** %87 to %"class.std::__1::__tree_node"**
  %89 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node"* %89, null
  br i1 %90, label %91, label %114

91:                                               ; preds = %85
  %92 = call i8* @_Znwm(i64 72) #8, !noalias !2
  %93 = getelementptr inbounds i8, i8* %92, i64 32
  %94 = bitcast i8* %93 to i64*
  store i64 %56, i64* %94, align 8, !noalias !2
  %95 = getelementptr inbounds i8, i8* %92, i64 40
  %96 = bitcast i8* %95 to %struct.SiteData*
  call void @_ZN8SiteDataC1Ev(%struct.SiteData* %96) #7, !noalias !2
  %97 = bitcast i8* %92 to %"class.std::__1::__tree_node"*
  %98 = bitcast i8* %92 to %"class.std::__1::__tree_node_base"*
  %99 = getelementptr inbounds i8, i8* %92, i64 16
  %100 = bitcast i8* %99 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %100, align 8
  %101 = bitcast %"class.std::__1::__tree_node_base"** %87 to i8**
  store i8* %92, i8** %101, align 8
  %102 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %91
  %107 = ptrtoint %"class.std::__1::__tree_node_base"* %104 to i64
  store i64 %107, i64* %19, align 8
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  br label %109

109:                                              ; preds = %106, %91
  %110 = phi %"class.std::__1::__tree_node_base"* [ %98, %91 ], [ %108, %106 ]
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %111, %"class.std::__1::__tree_node_base"* %110) #7
  %112 = load i64, i64* %6, align 8
  %113 = add i64 %112, 1
  store i64 %113, i64* %6, align 8
  br label %114

114:                                              ; preds = %85, %109
  %115 = phi %"class.std::__1::__tree_node"* [ %97, %109 ], [ %89, %85 ]
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %115, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 5
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %struct.SiteData*
  call void @_ZN11SiteDetails15CollectSiteInfoEPN7content11WebContentsEP8SiteData(%"class.content::WebContents"* nonnull %36, %struct.SiteData* %118) #7
  br label %119

119:                                              ; preds = %32, %38, %35, %114, %20
  %120 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)**, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*** %10, align 8
  %121 = getelementptr inbounds %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)** %120, i64 2
  %122 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)** %121, align 8
  %123 = call %"class.content::RenderWidgetHost"* %122(%"class.content::RenderWidgetHostIterator"* %9) #7
  %124 = icmp eq %"class.content::RenderWidgetHost"* %123, null
  br i1 %124, label %125, label %20

125:                                              ; preds = %119, %1
  call void @_ZN11SiteDetails16UpdateHistogramsERKNSt3__13mapIPN7content14BrowserContextE8SiteDataNS0_4lessIS4_EENS0_9allocatorINS0_4pairIKS4_S5_EEEEEE(%"class.std::__1::map"* nonnull dereferenceable(24) %2) #7
  %126 = icmp eq %"class.content::RenderWidgetHostIterator"* %9, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %125
  %128 = bitcast %"class.content::RenderWidgetHostIterator"* %9 to void (%"class.content::RenderWidgetHostIterator"*)***
  %129 = load void (%"class.content::RenderWidgetHostIterator"*)**, void (%"class.content::RenderWidgetHostIterator"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.content::RenderWidgetHostIterator"*)*, void (%"class.content::RenderWidgetHostIterator"*)** %129, i64 1
  %131 = load void (%"class.content::RenderWidgetHostIterator"*)*, void (%"class.content::RenderWidgetHostIterator"*)** %130, align 8
  call void %131(%"class.content::RenderWidgetHostIterator"* nonnull %9) #7
  br label %132

132:                                              ; preds = %125, %127
  %133 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %134 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %135 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %134, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPN7content14BrowserContextE8SiteDataEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* nonnull %133, %"class.std::__1::__tree_node"* %135) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #7
  ret void
}

declare %"class.content::RenderWidgetHostIterator"* @_ZN7content16RenderWidgetHost20GetRenderWidgetHostsEv() local_unnamed_addr #1

declare %"class.content::RenderViewHost"* @_ZN7content14RenderViewHost4FromEPNS_16RenderWidgetHostE(%"class.content::RenderWidgetHost"*) local_unnamed_addr #1

declare %"class.content::WebContents"* @_ZN7content11WebContents18FromRenderViewHostEPNS_14RenderViewHostE(%"class.content::RenderViewHost"*) local_unnamed_addr #1

declare void @_ZN11SiteDetails15CollectSiteInfoEPN7content11WebContentsEP8SiteData(%"class.content::WebContents"*, %struct.SiteData*) local_unnamed_addr #1

declare void @_ZN11SiteDetails16UpdateHistogramsERKNSt3__13mapIPN7content14BrowserContextE8SiteDataNS0_4lessIS4_EENS0_9allocatorINS0_4pairIKS4_S5_EEEEEE(%"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN7content17RenderProcessHost16AllHostsIteratorEv(%"class.base::IDMap<content::RenderProcessHost *, int>::Iterator"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN7content17RenderProcessHostEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.106", align 8
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #7, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.106"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN7content17RenderProcessHostEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE(%"class.std::__1::unique_ptr.106"* nonnull sret %3, %"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node_base"* nonnull %33) #7
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %59, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node"* %60 to i8*
  call void @_ZdlPv(i8* %63) #8
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN7content17RenderProcessHostEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE(%"class.std::__1::unique_ptr.106"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #7, !range !5
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.88"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.106"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.91"** %98 to %"class.std::__1::__compressed_pair.88"**
  store %"class.std::__1::__compressed_pair.88"* %30, %"class.std::__1::__compressed_pair.88"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN7content14BrowserContextE8SiteDataEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN7content14BrowserContextE8SiteDataEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #7
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN7content14BrowserContextE8SiteDataEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #7
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN8SiteDataD1Ev(%struct.SiteData* %10) #7
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SiteDataD1Ev(%struct.SiteData*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN8SiteDataC1Ev(%struct.SiteData*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !6
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !6
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIPN7content14BrowserContextE8SiteDataEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISP_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIPN7content14BrowserContextE8SiteDataEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISP_EEEEEEDpOT_"}
!5 = !{i64 0, i64 65}
!6 = !{i8 0, i8 2}
