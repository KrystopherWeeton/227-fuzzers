; ModuleID = '../../third_party/icu/source/common/ucnv_set.cpp'
source_filename = "../../third_party/icu/source/common/ucnv_set.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.USetAdder = type { %struct.USet*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)*, void (%struct.USet*, i16*, i32)*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)* }
%struct.USet = type opaque
%struct.UConverter = type { void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, i8*, i8*, i8*, i8*, %struct.UConverterSharedData*, i32, i8, i8, i8, i8, i8, [7 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], [32 x i8], [2 x i16], [2 x i16], [32 x i16], i32, [19 x i16], [31 x i8], i8, i8, i8, i32 }
%struct.UConverterFromUnicodeArgs = type { i16, i8, %struct.UConverter*, i16*, i16*, i8*, i8*, i32* }
%struct.UConverterToUnicodeArgs = type { i16, i8, %struct.UConverter*, i8*, i8*, i16*, i16*, i32* }
%struct.UConverterSharedData = type { i32, i32, i8*, %struct.UConverterStaticData*, i8, i8, %struct.UConverterImpl*, i32, %struct.UConverterMBCSTable }
%struct.UConverterStaticData = type { i32, [60 x i8], i32, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, [19 x i8] }
%struct.UConverterImpl = type { i32, void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)*, void (%struct.UConverterSharedData*)*, void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)*, void (%struct.UConverter*)*, void (%struct.UConverter*, i32)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, i32 (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverter*, i8*, i32*)*, i8* (%struct.UConverter*)*, void (%struct.UConverterFromUnicodeArgs*, i32, i32*)*, %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)*, void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* }
%struct.UConverterLoadArgs = type { i32, i32, i8, i8, i16, i32, i8*, i8*, i8* }
%struct.UConverterMBCSTable = type { i8, i8, i8, i32, [256 x i32]*, [256 x i32]*, i16*, %struct._MBCSToUFallback*, i16*, i16*, [64 x i16], i8*, i8*, i32, i8, i8, i8, i16, i32, i8*, i8*, %struct.UConverterSharedData*, i32* }
%struct._MBCSToUFallback = type { i32, i32 }

@__const.ucnv_getUnicodeSet_69.sa = private unnamed_addr constant %struct.USetAdder { %struct.USet* null, void (%struct.USet*, i32)* @uset_add_69, void (%struct.USet*, i32, i32)* @uset_addRange_69, void (%struct.USet*, i16*, i32)* @uset_addString_69, void (%struct.USet*, i32)* @uset_remove_69, void (%struct.USet*, i32, i32)* @uset_removeRange_69 }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_getUnicodeSet_69(%struct.UConverter*, %struct.USet*, i32, i32*) local_unnamed_addr #0 {
  %5 = alloca %struct.USetAdder, align 8
  %6 = icmp eq i32* %3, null
  br i1 %6, label %34, label %7

7:                                                ; preds = %4
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %34

10:                                               ; preds = %7
  %11 = icmp eq %struct.UConverter* %0, null
  %12 = icmp eq %struct.USet* %1, null
  %13 = or i1 %11, %12
  %14 = icmp ugt i32 %2, 1
  %15 = or i1 %14, %13
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  store i32 1, i32* %3, align 4
  br label %34

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %19 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %18, align 8
  %20 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %19, i64 0, i32 6
  %21 = load %struct.UConverterImpl*, %struct.UConverterImpl** %20, align 8
  %22 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %21, i64 0, i32 15
  %23 = load void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)*, void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)** %22, align 8
  %24 = icmp eq void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %17
  store i32 16, i32* %3, align 4
  br label %34

26:                                               ; preds = %17
  %27 = bitcast %struct.USetAdder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 bitcast (%struct.USetAdder* @__const.ucnv_getUnicodeSet_69.sa to i8*), i64 48, i1 false)
  %28 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %5, i64 0, i32 0
  store %struct.USet* %1, %struct.USet** %28, align 8
  tail call void @uset_clear_69(%struct.USet* nonnull %1) #3
  %29 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %18, align 8
  %30 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %29, i64 0, i32 6
  %31 = load %struct.UConverterImpl*, %struct.UConverterImpl** %30, align 8
  %32 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %31, i64 0, i32 15
  %33 = load void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)*, void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)** %32, align 8
  call void %33(%struct.UConverter* nonnull %0, %struct.USetAdder* nonnull %5, i32 %2, i32* nonnull %3) #3
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #3
  br label %34

34:                                               ; preds = %7, %4, %26, %25, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @uset_add_69(%struct.USet*, i32) #2

declare void @uset_addRange_69(%struct.USet*, i32, i32) #2

declare void @uset_addString_69(%struct.USet*, i16*, i32) #2

declare void @uset_remove_69(%struct.USet*, i32) #2

declare void @uset_removeRange_69(%struct.USet*, i32, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @uset_clear_69(%struct.USet*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
