; ModuleID = '../../v8/src/wasm/wasm-objects.cc'
source_filename = "../../v8/src/wasm/wasm-objects.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.542" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.140", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.20", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.20", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.20", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.20", i64, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.30", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.162", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.20", i64, i8, %"struct.std::__1::atomic.20", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.166", %"class.std::__1::vector.166", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::shared_ptr.481", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.504", %"class.std::__1::unique_ptr.530", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.536", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.549", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.331", i8, [7 x i8], %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.605", %"class.std::__1::vector.633", i8, %"class.std::__1::unique_ptr.640", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.646", %"class.std::__1::unique_ptr.667", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.677", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.816", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.829", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.839", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.850", %"struct.std::__1::atomic.153", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.968"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.976", i32, i8, i8, i32, i32, %"class.std::__1::vector.982", %"class.std::__1::vector.982", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.989", i64, %"class.std::__1::unordered_map.1008", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.542", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.161", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1063", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1228", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1262", %"class.std::__1::vector.1266", %"class.std::__1::vector.1266", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.646" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.140", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.650" }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.1774" }
%"class.std::__1::__compressed_pair.1774" = type { %"struct.std::__1::__compressed_pair_elem.1775" }
%"struct.std::__1::__compressed_pair_elem.1775" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.652"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.670", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.670" = type { %"struct.std::__1::__atomic_base.671" }
%"struct.std::__1::__atomic_base.671" = type { %"struct.std::__1::__cxx_atomic_impl.672" }
%"struct.std::__1::__cxx_atomic_impl.672" = type { %"struct.std::__1::__cxx_atomic_base_impl.673" }
%"struct.std::__1::__cxx_atomic_base_impl.673" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.677" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.678", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.678" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", %"struct.std::__1::atomic.153", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::set.729", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.745", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.751", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::unique_ptr.739", %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.485", %"class.std::__1::set.493" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.753", %"class.std::__1::vector.759", %"class.std::__1::unique_ptr.766", %"class.std::__1::vector.773", %"class.std::__1::unique_ptr.780", i64, %"class.std::__1::vector.786", %"class.std::__1::vector.794", %"class.std::__1::vector.802", i8, i8, i32 }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.761" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::GlobalHandles::NodeSpace.769"* }
%"class.v8::internal::GlobalHandles::NodeSpace.769" = type opaque
%"class.std::__1::vector.773" = type { %"class.std::__1::__vector_base.774" }
%"class.std::__1::__vector_base.774" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.775" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"struct.std::__1::pair.788"*, %"struct.std::__1::pair.788"*, %"class.std::__1::__compressed_pair.789" }
%"struct.std::__1::pair.788" = type opaque
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"struct.std::__1::pair.788"* }
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"struct.std::__1::pair.796"*, %"struct.std::__1::pair.796"*, %"class.std::__1::__compressed_pair.797" }
%"struct.std::__1::pair.796" = type opaque
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.std::__1::pair.796"* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.804" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.809", %"class.std::__1::vector.816" }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { i64**, i64**, %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.823" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { i32*, i32*, %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.829" = type { %"struct.std::__1::__atomic_base.830" }
%"struct.std::__1::__atomic_base.830" = type { %"struct.std::__1::__cxx_atomic_impl.831" }
%"struct.std::__1::__cxx_atomic_impl.831" = type { %"struct.std::__1::__cxx_atomic_base_impl.832" }
%"struct.std::__1::__cxx_atomic_base_impl.832" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.839" = type { %"struct.std::__1::__atomic_base.840" }
%"struct.std::__1::__atomic_base.840" = type { %"struct.std::__1::__cxx_atomic_impl.841" }
%"struct.std::__1::__cxx_atomic_impl.841" = type { %"struct.std::__1::__cxx_atomic_base_impl.842" }
%"struct.std::__1::__cxx_atomic_base_impl.842" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.846 }
%union.anon.846 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.850" = type { %"class.std::__1::__hash_table.851" }
%"class.std::__1::__hash_table.851" = type <{ %"class.std::__1::unique_ptr.852", %"class.std::__1::__compressed_pair.862", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.870", [4 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854", %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::__hash_node_base.855"** }
%"struct.std::__1::__hash_node_base.855" = type { %"struct.std::__1::__hash_node_base.855"* }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.std::__1::__bucket_list_deallocator.857" }
%"class.std::__1::__bucket_list_deallocator.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::__hash_node_base.855" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.876", %"class.v8::internal::Handle.882", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.883", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.884", %"class.std::__1::vector.890", %"class.std::__1::unique_ptr.898", %"class.std::__1::unique_ptr.904", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.910", %"class.std::__1::vector.916", %"struct.std::__1::pair.924" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.890" = type { %"class.std::__1::__vector_base.891" }
%"class.std::__1::__vector_base.891" = type { %"class.std::__1::unique_ptr.892"*, %"class.std::__1::unique_ptr.892"*, %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::unique_ptr.892" = type opaque
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.std::__1::unique_ptr.892"* }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %"struct.std::__1::pair.918"*, %"struct.std::__1::pair.918"*, %"class.std::__1::__compressed_pair.919" }
%"struct.std::__1::pair.918" = type opaque
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.std::__1::pair.918"* }
%"struct.std::__1::pair.924" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.928", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.928" = type { %"class.std::__1::__hash_table.929" }
%"class.std::__1::__hash_table.929" = type <{ %"class.std::__1::unique_ptr.930", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.949", [4 x i8] }>
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932", %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.933"** }
%"struct.std::__1::__hash_node_base.933" = type { %"struct.std::__1::__hash_node_base.933"* }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::__bucket_list_deallocator.935" }
%"class.std::__1::__bucket_list_deallocator.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.933" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.963" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"class.std::__1::__compressed_pair.958" }
%"struct.std::__1::pair.957" = type opaque
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.std::__1::pair.957"** }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.968" = type { %"class.std::__1::__vector_base.969" }
%"class.std::__1::__vector_base.969" = type { %"class.v8::internal::Handle.970"*, %"class.v8::internal::Handle.970"*, %"class.std::__1::__compressed_pair.971" }
%"class.v8::internal::Handle.970" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.v8::internal::Handle.970"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.834", i32, %"class.v8::Local.1" }
%"class.v8::Local.834" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.809", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.982" = type { %"class.std::__1::__vector_base.983" }
%"class.std::__1::__vector_base.983" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.989" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type { %"class.std::__1::enable_shared_from_this.990", %"class.v8::base::Mutex", %"class.std::__1::shared_ptr.992", %"class.std::__1::shared_ptr.993", %"class.std::__1::queue.994" }
%"class.std::__1::enable_shared_from_this.990" = type { %"class.std::__1::weak_ptr.991" }
%"class.std::__1::weak_ptr.991" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::shared_ptr.992" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.std::__1::shared_ptr.993" = type { %"class.v8::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::metrics::Recorder" = type { i32 (...)** }
%"class.std::__1::queue.994" = type { %"class.std::__1::deque.995" }
%"class.std::__1::deque.995" = type { %"class.std::__1::__deque_base.996" }
%"class.std::__1::__deque_base.996" = type { %"struct.std::__1::__split_buffer.997", i64, %"class.std::__1::__compressed_pair.1004" }
%"struct.std::__1::__split_buffer.997" = type { %"class.std::__1::unique_ptr.998"**, %"class.std::__1::unique_ptr.998"**, %"class.std::__1::unique_ptr.998"**, %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::unique_ptr.998" = type opaque
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"class.std::__1::unique_ptr.998"** }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unordered_map.1008" = type { %"class.std::__1::__hash_table.1009" }
%"class.std::__1::__hash_table.1009" = type <{ %"class.std::__1::unique_ptr.1010", %"class.std::__1::__compressed_pair.1020", %"class.std::__1::__compressed_pair.1025", %"class.std::__1::__compressed_pair.1028", [4 x i8] }>
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012", %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"struct.std::__1::__hash_node_base.1013"** }
%"struct.std::__1::__hash_node_base.1013" = type { %"struct.std::__1::__hash_node_base.1013"* }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.std::__1::__bucket_list_deallocator.1015" }
%"class.std::__1::__bucket_list_deallocator.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::__hash_node_base.1013" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.161" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.992", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1060", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1061", %"class.v8::base::TimeTicks", i64 }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1056, %union.anon.1058, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1056 = type { i64 }
%union.anon.1058 = type { i64 }
%"class.std::__1::weak_ptr.1060" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.20", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.161" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1061" = type { %"class.v8::PersistentBase.1062" }
%"class.v8::PersistentBase.1062" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1032", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1032" = type { %"class.std::__1::__hash_table.1033" }
%"class.std::__1::__hash_table.1033" = type <{ %"class.std::__1::unique_ptr.1034", %"class.std::__1::__compressed_pair.1044", %"class.std::__1::__compressed_pair.1049", %"class.std::__1::__compressed_pair.1052", [4 x i8] }>
%"class.std::__1::unique_ptr.1034" = type { %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036", %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"struct.std::__1::__hash_node_base.1037"** }
%"struct.std::__1::__hash_node_base.1037" = type { %"struct.std::__1::__hash_node_base.1037"* }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"class.std::__1::__bucket_list_deallocator.1039" }
%"class.std::__1::__bucket_list_deallocator.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"struct.std::__1::__hash_node_base.1037" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1092", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1068", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1072", %"class.std::__1::unique_ptr.1078", %"class.std::__1::unique_ptr.475", %"class.std::__1::vector.1084", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1068" = type { %"struct.std::__1::__atomic_base.1069" }
%"struct.std::__1::__atomic_base.1069" = type { %"struct.std::__1::__cxx_atomic_impl.1070" }
%"struct.std::__1::__cxx_atomic_impl.1070" = type { %"struct.std::__1::__cxx_atomic_base_impl.1071" }
%"struct.std::__1::__cxx_atomic_base_impl.1071" = type { i32 }
%"class.std::__1::unique_ptr.1072" = type { %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.809" }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1084" = type { %"class.std::__1::__vector_base.1085" }
%"class.std::__1::__vector_base.1085" = type { %"struct.std::__1::pair.1086"*, %"struct.std::__1::pair.1086"*, %"class.std::__1::__compressed_pair.1087" }
%"struct.std::__1::pair.1086" = type opaque
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"struct.std::__1::pair.1086"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.20"*, %"class.std::__1::unique_ptr.98" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.41" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.46" }
%"class.std::__1::__hash_table.46" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.50"** }
%"struct.std::__1::__hash_node_base.50" = type { %"struct.std::__1::__hash_node_base.50"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator.52" }
%"class.std::__1::__bucket_list_deallocator.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.25", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.20"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.25", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.20", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1092" = type { %"class.std::__1::__compressed_pair.1093" }
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.1094" }
%"struct.std::__1::__compressed_pair_elem.1094" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type { %"class.v8::internal::wasm::WasmCodeManager", %"class.v8::internal::AccountingAllocator", %"struct.std::__1::atomic.1109", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.1114", %"class.std::__1::unique_ptr.1142", %"class.std::__1::unique_ptr.1148", %"class.std::__1::unordered_map.1154", %"class.std::__1::unordered_map.1182", %"class.std::__1::shared_ptr.1210", i64, %"class.std::__1::unique_ptr.1211", %"class.v8::internal::wasm::NativeModuleCache" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1101" }
%"class.std::__1::__tree.1101" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1102", %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.1109" = type { %"struct.std::__1::__atomic_base.1110" }
%"struct.std::__1::__atomic_base.1110" = type { %"struct.std::__1::__atomic_base.1111" }
%"struct.std::__1::__atomic_base.1111" = type { %"struct.std::__1::__cxx_atomic_impl.1112" }
%"struct.std::__1::__cxx_atomic_impl.1112" = type { %"struct.std::__1::__cxx_atomic_base_impl.1113" }
%"struct.std::__1::__cxx_atomic_base_impl.1113" = type { i32 }
%"class.std::__1::unordered_map.1114" = type { %"class.std::__1::__hash_table.1115" }
%"class.std::__1::__hash_table.1115" = type <{ %"class.std::__1::unique_ptr.1116", %"class.std::__1::__compressed_pair.1126", %"class.std::__1::__compressed_pair.1131", %"class.std::__1::__compressed_pair.1136", [4 x i8] }>
%"class.std::__1::unique_ptr.1116" = type { %"class.std::__1::__compressed_pair.1117" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.1118", %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1118" = type { %"struct.std::__1::__hash_node_base.1119"** }
%"struct.std::__1::__hash_node_base.1119" = type { %"struct.std::__1::__hash_node_base.1119"* }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.std::__1::__bucket_list_deallocator.1121" }
%"class.std::__1::__bucket_list_deallocator.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.std::__1::__hash_node_base.1119" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.v8::internal::CompilationStatistics"* }
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.v8::internal::CodeTracer"* }
%"class.std::__1::unordered_map.1154" = type { %"class.std::__1::__hash_table.1155" }
%"class.std::__1::__hash_table.1155" = type <{ %"class.std::__1::unique_ptr.1156", %"class.std::__1::__compressed_pair.1166", %"class.std::__1::__compressed_pair.1171", %"class.std::__1::__compressed_pair.1176", [4 x i8] }>
%"class.std::__1::unique_ptr.1156" = type { %"class.std::__1::__compressed_pair.1157" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.1158", %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"struct.std::__1::__hash_node_base.1159"** }
%"struct.std::__1::__hash_node_base.1159" = type { %"struct.std::__1::__hash_node_base.1159"* }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.std::__1::__bucket_list_deallocator.1161" }
%"class.std::__1::__bucket_list_deallocator.1161" = type { %"class.std::__1::__compressed_pair.1162" }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"struct.std::__1::__hash_node_base.1159" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.1182" = type { %"class.std::__1::__hash_table.1183" }
%"class.std::__1::__hash_table.1183" = type <{ %"class.std::__1::unique_ptr.1184", %"class.std::__1::__compressed_pair.1194", %"class.std::__1::__compressed_pair.1199", %"class.std::__1::__compressed_pair.1204", [4 x i8] }>
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186", %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"struct.std::__1::__hash_node_base.1187"** }
%"struct.std::__1::__hash_node_base.1187" = type { %"struct.std::__1::__hash_node_base.1187"* }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.std::__1::__bucket_list_deallocator.1189" }
%"class.std::__1::__bucket_list_deallocator.1189" = type { %"class.std::__1::__compressed_pair.1190" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"struct.std::__1::__hash_node_base.1187" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::shared_ptr.1210" = type { %"class.v8::internal::OperationsBarrier"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"struct.v8::internal::wasm::WasmEngine::CurrentGCInfo"* }
%"struct.v8::internal::wasm::WasmEngine::CurrentGCInfo" = type opaque
%"class.v8::internal::wasm::NativeModuleCache" = type { %"class.std::__1::map.1217", %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable" }
%"class.std::__1::map.1217" = type { %"class.std::__1::__tree.1218" }
%"class.std::__1::__tree.1218" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1219", %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.1228" = type { %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.835", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.835" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1236" }
%"class.std::__1::unordered_map.1236" = type { %"class.std::__1::__hash_table.1237" }
%"class.std::__1::__hash_table.1237" = type <{ %"class.std::__1::unique_ptr.1238", %"class.std::__1::__compressed_pair.1248", %"class.std::__1::__compressed_pair.1253", %"class.std::__1::__compressed_pair.1256", [4 x i8] }>
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240", %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"struct.std::__1::__hash_node_base.1241"** }
%"struct.std::__1::__hash_node_base.1241" = type { %"struct.std::__1::__hash_node_base.1241"* }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"class.std::__1::__bucket_list_deallocator.1243" }
%"class.std::__1::__bucket_list_deallocator.1243" = type { %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"struct.std::__1::__hash_node_base.1241" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.1262" = type { %"struct.std::__1::__atomic_base.1263" }
%"struct.std::__1::__atomic_base.1263" = type { %"struct.std::__1::__cxx_atomic_impl.1264" }
%"struct.std::__1::__cxx_atomic_impl.1264" = type { %"struct.std::__1::__cxx_atomic_base_impl.1265" }
%"struct.std::__1::__cxx_atomic_base_impl.1265" = type { %"class.std::__1::vector.1266"* }
%"class.std::__1::vector.1266" = type { %"class.std::__1::__vector_base.1267" }
%"class.std::__1::__vector_base.1267" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1268" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.104" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair.106"*, %"struct.std::__1::pair.106"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair.106" = type { i32, i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair.106"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.20", i32, %"struct.std::__1::atomic.20", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.112" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.153", %"struct.std::__1::atomic.157", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.168" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.288", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.182", %"class.std::__1::vector.183", %"class.std::__1::vector.190", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.182" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.185" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.std::__1::unique_ptr.192"*, %"class.std::__1::unique_ptr.192"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::unique_ptr.192" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.192"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.214", i8, i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.230" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.182"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.257" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.296", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.281"], [3 x %"class.std::__1::vector.281"], i8, %"struct.std::__1::atomic.153", [6 x i8], %"class.std::__1::vector.281", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.306"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.306" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.331", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.324"], %"class.std::__1::unique_ptr.296" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.363", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.367", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.372" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.296", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.153", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.402", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.481" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.500", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.482", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.500" = type { %"struct.std::__1::__atomic_base.501" }
%"struct.std::__1::__atomic_base.501" = type { %"struct.std::__1::__cxx_atomic_impl.502" }
%"struct.std::__1::__cxx_atomic_impl.502" = type { %"struct.std::__1::__cxx_atomic_base_impl.503" }
%"struct.std::__1::__cxx_atomic_base_impl.503" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.542", %"class.std::__1::vector.542" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.575", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.605" = type { %"class.std::__1::__hash_table.606" }
%"class.std::__1::__hash_table.606" = type <{ %"class.std::__1::unique_ptr.607", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609", %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.610"** }
%"struct.std::__1::__hash_node_base.610" = type { %"struct.std::__1::__hash_node_base.610"* }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.std::__1::__bucket_list_deallocator.612" }
%"class.std::__1::__bucket_list_deallocator.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.610" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.20", i64, %"struct.std::__1::atomic.20" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.142" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::wasm::NativeModule" = type { %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::OperationsBarrier::Token", %"class.v8::internal::wasm::WasmCodeAllocator", %"class.v8::internal::wasm::WasmFeatures", %"class.std::__1::shared_ptr.1288", %"class.std::__1::unique_ptr.1486", %"class.std::__1::shared_ptr.1499", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.std::__1::unique_ptr.1500", %"class.std::__1::unique_ptr.1506", %"class.std::__1::unique_ptr.1538", %"class.v8::base::RecursiveMutex", %"class.std::__1::map.1543", %"class.std::__1::vector.1552", %"class.std::__1::unique_ptr.1565", %"class.std::__1::vector.1571", %"class.std::__1::unique_ptr.1578", i8, %"class.std::__1::unique_ptr.1584", i8, i8, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20" }
%"class.v8::internal::OperationsBarrier::Token" = type { %"class.v8::internal::OperationsBarrier"* }
%"class.v8::internal::wasm::WasmCodeAllocator" = type { %"class.v8::internal::wasm::WasmCodeManager"*, %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.std::__1::vector.1282", i32, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::shared_ptr.677" }
%"class.v8::internal::wasm::DisjointAllocationPool" = type { %"class.std::__1::set.1274" }
%"class.std::__1::set.1274" = type { %"class.std::__1::__tree.1275" }
%"class.std::__1::__tree.1275" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1276", %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::vector.1282" = type { %"class.std::__1::__vector_base.1283" }
%"class.std::__1::__vector_base.1283" = type { %"class.v8::internal::VirtualMemory"*, %"class.v8::internal::VirtualMemory"*, %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"class.v8::internal::wasm::WasmFeatures" = type { %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.std::__1::shared_ptr.1288" = type { %"struct.v8::internal::wasm::WasmModule"*, %"class.std::__1::__shared_weak_count"* }
%"struct.v8::internal::wasm::WasmModule" = type { %"class.std::__1::unique_ptr.1289", i32, i32, i8, i8, i8, i8, i8, i32, %"class.std::__1::vector.1295", i32, i32, i32, i32, i32, i32, i32, i32, %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.std::__1::vector.1309", %"class.std::__1::vector.1317", %"class.std::__1::vector.1324", %"class.std::__1::vector.1331", %"class.std::__1::vector.1338", %"class.std::__1::vector.1345", %"class.std::__1::vector.1352", %"class.std::__1::vector.1359", %"class.std::__1::vector.1366", %"class.std::__1::vector.1373", %"class.std::__1::vector.1386", %"class.std::__1::unordered_map.1393", %"class.v8::internal::wasm::SignatureMap", i8, %"class.v8::internal::wasm::LazilyGeneratedNames", %"struct.v8::internal::wasm::WasmDebugSymbols", %"class.std::__1::unique_ptr.1454" }
%"class.std::__1::unique_ptr.1289" = type { %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector.1295" = type { %"class.std::__1::__vector_base.1296" }
%"class.std::__1::__vector_base.1296" = type { %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"*, %"class.std::__1::__compressed_pair.1304" }
%"struct.v8::internal::wasm::WasmGlobal" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8], %"class.v8::internal::wasm::WasmInitExpr", %union.anon.1303, i8, i8, [2 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.1297" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.1297" = type { %"class.std::__1::__compressed_pair.1298" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.1299" }
%"struct.std::__1::__compressed_pair_elem.1299" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%union.anon.1303 = type { i32 }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.1305" }
%"struct.std::__1::__compressed_pair_elem.1305" = type { %"struct.v8::internal::wasm::WasmGlobal"* }
%"class.v8::internal::wasm::WireBytesRef" = type { i32, i32 }
%"class.std::__1::vector.1309" = type { %"class.std::__1::__vector_base.1310" }
%"class.std::__1::__vector_base.1310" = type { %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"*, %"class.std::__1::__compressed_pair.1312" }
%"struct.v8::internal::wasm::TypeDefinition" = type { %union.anon.1311 }
%union.anon.1311 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"struct.v8::internal::wasm::TypeDefinition"* }
%"class.std::__1::vector.1317" = type { %"class.std::__1::__vector_base.1318" }
%"class.std::__1::__vector_base.1318" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1319" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { i8* }
%"class.std::__1::vector.1324" = type { %"class.std::__1::__vector_base.1325" }
%"class.std::__1::__vector_base.1325" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { i32* }
%"class.std::__1::vector.1331" = type { %"class.std::__1::__vector_base.1332" }
%"class.std::__1::__vector_base.1332" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"*, %"class.std::__1::__compressed_pair.1333" }
%"struct.v8::internal::wasm::WasmFunction" = type <{ %"class.v8::internal::Signature"*, i32, i32, %"class.v8::internal::wasm::WireBytesRef", i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"struct.v8::internal::wasm::WasmFunction"* }
%"class.std::__1::vector.1338" = type { %"class.std::__1::__vector_base.1339" }
%"class.std::__1::__vector_base.1339" = type { %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"*, %"class.std::__1::__compressed_pair.1340" }
%"struct.v8::internal::wasm::WasmDataSegment" = type <{ %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WireBytesRef", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"struct.v8::internal::wasm::WasmDataSegment"* }
%"class.std::__1::vector.1345" = type { %"class.std::__1::__vector_base.1346" }
%"class.std::__1::__vector_base.1346" = type { %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"*, %"class.std::__1::__compressed_pair.1347" }
%"struct.v8::internal::wasm::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, i8, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.1348" }
%"struct.std::__1::__compressed_pair_elem.1348" = type { %"struct.v8::internal::wasm::WasmTable"* }
%"class.std::__1::vector.1352" = type { %"class.std::__1::__vector_base.1353" }
%"class.std::__1::__vector_base.1353" = type { %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"*, %"class.std::__1::__compressed_pair.1354" }
%"struct.v8::internal::wasm::WasmImport" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.1355" }
%"struct.std::__1::__compressed_pair_elem.1355" = type { %"struct.v8::internal::wasm::WasmImport"* }
%"class.std::__1::vector.1359" = type { %"class.std::__1::__vector_base.1360" }
%"class.std::__1::__vector_base.1360" = type { %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"*, %"class.std::__1::__compressed_pair.1361" }
%"struct.v8::internal::wasm::WasmExport" = type { %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.1362" }
%"struct.std::__1::__compressed_pair_elem.1362" = type { %"struct.v8::internal::wasm::WasmExport"* }
%"class.std::__1::vector.1366" = type { %"class.std::__1::__vector_base.1367" }
%"class.std::__1::__vector_base.1367" = type { %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"*, %"class.std::__1::__compressed_pair.1368" }
%"struct.v8::internal::wasm::WasmException" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"struct.v8::internal::wasm::WasmException"* }
%"class.std::__1::vector.1373" = type { %"class.std::__1::__vector_base.1374" }
%"class.std::__1::__vector_base.1374" = type { %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"*, %"class.std::__1::__compressed_pair.1381" }
%"struct.v8::internal::wasm::WasmElemSegment" = type <{ %"class.v8::internal::wasm::ValueType", i32, %"class.v8::internal::wasm::WasmInitExpr", %"class.std::__1::vector.1375", i32, [4 x i8] }>
%"class.std::__1::vector.1375" = type { %"class.std::__1::__vector_base.1376" }
%"class.std::__1::__vector_base.1376" = type { %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"*, %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1299" }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.1382" }
%"struct.std::__1::__compressed_pair_elem.1382" = type { %"struct.v8::internal::wasm::WasmElemSegment"* }
%"class.std::__1::vector.1386" = type { %"class.std::__1::__vector_base.1387" }
%"class.std::__1::__vector_base.1387" = type { %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"*, %"class.std::__1::__compressed_pair.1388" }
%"struct.v8::internal::wasm::WasmCompilationHint" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.1388" = type { %"struct.std::__1::__compressed_pair_elem.1389" }
%"struct.std::__1::__compressed_pair_elem.1389" = type { %"struct.v8::internal::wasm::WasmCompilationHint"* }
%"class.std::__1::unordered_map.1393" = type { %"class.std::__1::__hash_table.1394" }
%"class.std::__1::__hash_table.1394" = type <{ %"class.std::__1::unique_ptr.1395", %"class.std::__1::__compressed_pair.1405", %"class.std::__1::__compressed_pair.1410", %"class.std::__1::__compressed_pair.1415", [4 x i8] }>
%"class.std::__1::unique_ptr.1395" = type { %"class.std::__1::__compressed_pair.1396" }
%"class.std::__1::__compressed_pair.1396" = type { %"struct.std::__1::__compressed_pair_elem.1397", %"struct.std::__1::__compressed_pair_elem.1399" }
%"struct.std::__1::__compressed_pair_elem.1397" = type { %"struct.std::__1::__hash_node_base.1398"** }
%"struct.std::__1::__hash_node_base.1398" = type { %"struct.std::__1::__hash_node_base.1398"* }
%"struct.std::__1::__compressed_pair_elem.1399" = type { %"class.std::__1::__bucket_list_deallocator.1400" }
%"class.std::__1::__bucket_list_deallocator.1400" = type { %"class.std::__1::__compressed_pair.1401" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1405" = type { %"struct.std::__1::__compressed_pair_elem.1406" }
%"struct.std::__1::__compressed_pair_elem.1406" = type { %"struct.std::__1::__hash_node_base.1398" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::wasm::SignatureMap" = type { i8, [7 x i8], %"class.std::__1::unordered_map.1421" }
%"class.std::__1::unordered_map.1421" = type { %"class.std::__1::__hash_table.1422" }
%"class.std::__1::__hash_table.1422" = type <{ %"class.std::__1::unique_ptr.1423", %"class.std::__1::__compressed_pair.1433", %"class.std::__1::__compressed_pair.1438", %"class.std::__1::__compressed_pair.1441", [4 x i8] }>
%"class.std::__1::unique_ptr.1423" = type { %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.1425", %"struct.std::__1::__compressed_pair_elem.1427" }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"struct.std::__1::__hash_node_base.1426"** }
%"struct.std::__1::__hash_node_base.1426" = type { %"struct.std::__1::__hash_node_base.1426"* }
%"struct.std::__1::__compressed_pair_elem.1427" = type { %"class.std::__1::__bucket_list_deallocator.1428" }
%"class.std::__1::__bucket_list_deallocator.1428" = type { %"class.std::__1::__compressed_pair.1429" }
%"class.std::__1::__compressed_pair.1429" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"struct.std::__1::__hash_node_base.1426" }
%"class.std::__1::__compressed_pair.1438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1441" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::wasm::LazilyGeneratedNames" = type { %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1447" }
%"class.std::__1::unique_ptr.1447" = type { %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.1449" }
%"struct.std::__1::__compressed_pair_elem.1449" = type { %"class.std::__1::unordered_map.1450"* }
%"class.std::__1::unordered_map.1450" = type opaque
%"struct.v8::internal::wasm::WasmDebugSymbols" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::unique_ptr.1454" = type { %"class.std::__1::__compressed_pair.1455" }
%"class.std::__1::__compressed_pair.1455" = type { %"struct.std::__1::__compressed_pair_elem.1456" }
%"struct.std::__1::__compressed_pair_elem.1456" = type { %"class.v8::internal::wasm::AsmJsOffsetInformation"* }
%"class.v8::internal::wasm::AsmJsOffsetInformation" = type { %"class.v8::base::Mutex", %"class.v8::internal::OwnedVector", %"class.std::__1::unique_ptr.1463" }
%"class.v8::internal::OwnedVector" = type { %"class.std::__1::unique_ptr.1457", i64 }
%"class.std::__1::unique_ptr.1457" = type { %"class.std::__1::__compressed_pair.1458" }
%"class.std::__1::__compressed_pair.1458" = type { %"struct.std::__1::__compressed_pair_elem.1459" }
%"struct.std::__1::__compressed_pair_elem.1459" = type { i8* }
%"class.std::__1::unique_ptr.1463" = type { %"class.std::__1::__compressed_pair.1464" }
%"class.std::__1::__compressed_pair.1464" = type { %"struct.std::__1::__compressed_pair_elem.1465" }
%"struct.std::__1::__compressed_pair_elem.1465" = type { %"struct.v8::internal::wasm::AsmJsOffsets"* }
%"struct.v8::internal::wasm::AsmJsOffsets" = type { %"class.std::__1::vector.1466" }
%"class.std::__1::vector.1466" = type { %"class.std::__1::__vector_base.1467" }
%"class.std::__1::__vector_base.1467" = type { %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"class.std::__1::__compressed_pair.1475" }
%"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries" = type { i32, i32, %"class.std::__1::vector.1468" }
%"class.std::__1::vector.1468" = type { %"class.std::__1::__vector_base.1469" }
%"class.std::__1::__vector_base.1469" = type { %"struct.v8::internal::wasm::AsmJsOffsetEntry"*, %"struct.v8::internal::wasm::AsmJsOffsetEntry"*, %"class.std::__1::__compressed_pair.1470" }
%"struct.v8::internal::wasm::AsmJsOffsetEntry" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"struct.v8::internal::wasm::AsmJsOffsetEntry"* }
%"class.std::__1::__compressed_pair.1475" = type { %"struct.std::__1::__compressed_pair_elem.1476" }
%"struct.std::__1::__compressed_pair_elem.1476" = type { %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* }
%"class.std::__1::unique_ptr.1486" = type { %"class.std::__1::__compressed_pair.1487" }
%"class.std::__1::__compressed_pair.1487" = type { %"struct.std::__1::__compressed_pair_elem.1488" }
%"struct.std::__1::__compressed_pair_elem.1488" = type { %"class.v8::internal::wasm::WasmModuleSourceMap"* }
%"class.v8::internal::wasm::WasmModuleSourceMap" = type <{ %"class.std::__1::vector.91", %"class.std::__1::vector.1489", %"class.std::__1::vector.91", %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.1489" = type { %"class.std::__1::__vector_base.1490" }
%"class.std::__1::__vector_base.1490" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1491" }
%"class.std::__1::__compressed_pair.1491" = type { %"struct.std::__1::__compressed_pair_elem.1492" }
%"struct.std::__1::__compressed_pair_elem.1492" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::shared_ptr.1499" = type { %"class.v8::internal::OwnedVector"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::WasmCode" = type { %"class.v8::internal::wasm::NativeModule"*, i8*, i8, %"class.std::__1::unique_ptr.1457", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::atomic.1109" }
%"class.std::__1::unique_ptr.1500" = type { %"class.std::__1::__compressed_pair.1501" }
%"class.std::__1::__compressed_pair.1501" = type { %"struct.std::__1::__compressed_pair_elem.1502" }
%"struct.std::__1::__compressed_pair_elem.1502" = type { %"class.v8::internal::wasm::CompilationState"* }
%"class.v8::internal::wasm::CompilationState" = type { i8 }
%"class.std::__1::unique_ptr.1506" = type { %"class.std::__1::__compressed_pair.1507" }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"class.v8::internal::wasm::WasmImportWrapperCache"* }
%"class.v8::internal::wasm::WasmImportWrapperCache" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_map.1509" }
%"class.std::__1::unordered_map.1509" = type { %"class.std::__1::__hash_table.1510" }
%"class.std::__1::__hash_table.1510" = type <{ %"class.std::__1::unique_ptr.1511", %"class.std::__1::__compressed_pair.1521", %"class.std::__1::__compressed_pair.1526", %"class.std::__1::__compressed_pair.1529", [4 x i8] }>
%"class.std::__1::unique_ptr.1511" = type { %"class.std::__1::__compressed_pair.1512" }
%"class.std::__1::__compressed_pair.1512" = type { %"struct.std::__1::__compressed_pair_elem.1513", %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1513" = type { %"struct.std::__1::__hash_node_base.1514"** }
%"struct.std::__1::__hash_node_base.1514" = type { %"struct.std::__1::__hash_node_base.1514"* }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.std::__1::__bucket_list_deallocator.1516" }
%"class.std::__1::__bucket_list_deallocator.1516" = type { %"class.std::__1::__compressed_pair.1517" }
%"class.std::__1::__compressed_pair.1517" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1521" = type { %"struct.std::__1::__compressed_pair_elem.1522" }
%"struct.std::__1::__compressed_pair_elem.1522" = type { %"struct.std::__1::__hash_node_base.1514" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1529" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.1538" = type { %"class.std::__1::__compressed_pair.1539" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"class.std::__1::map.1543" = type { %"class.std::__1::__tree.1544" }
%"class.std::__1::__tree.1544" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1545", %"class.std::__1::__compressed_pair.1549" }
%"class.std::__1::__compressed_pair.1545" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.1549" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::vector.1552" = type { %"class.std::__1::__vector_base.1553" }
%"class.std::__1::__vector_base.1553" = type { %"class.std::__1::unique_ptr.1554"*, %"class.std::__1::unique_ptr.1554"*, %"class.std::__1::__compressed_pair.1560" }
%"class.std::__1::unique_ptr.1554" = type { %"class.std::__1::__compressed_pair.1555" }
%"class.std::__1::__compressed_pair.1555" = type { %"struct.std::__1::__compressed_pair_elem.1556" }
%"struct.std::__1::__compressed_pair_elem.1556" = type { %"class.v8::internal::wasm::WasmCode"* }
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.std::__1::unique_ptr.1554"* }
%"class.std::__1::unique_ptr.1565" = type { %"class.std::__1::__compressed_pair.1566" }
%"class.std::__1::__compressed_pair.1566" = type { %"struct.std::__1::__compressed_pair_elem.1567" }
%"struct.std::__1::__compressed_pair_elem.1567" = type { %"class.v8::internal::wasm::WasmCode"** }
%"class.std::__1::vector.1571" = type { %"class.std::__1::__vector_base.1572" }
%"class.std::__1::__vector_base.1572" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"class.std::__1::__compressed_pair.1573" }
%"struct.v8::internal::wasm::NativeModule::CodeSpaceData" = type { %"class.v8::base::AddressRegion", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"* }
%"class.std::__1::__compressed_pair.1573" = type { %"struct.std::__1::__compressed_pair_elem.1574" }
%"struct.std::__1::__compressed_pair_elem.1574" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"* }
%"class.std::__1::unique_ptr.1578" = type { %"class.std::__1::__compressed_pair.1579" }
%"class.std::__1::__compressed_pair.1579" = type { %"struct.std::__1::__compressed_pair_elem.1580" }
%"struct.std::__1::__compressed_pair_elem.1580" = type { %"class.v8::internal::wasm::DebugInfo"* }
%"class.v8::internal::wasm::DebugInfo" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.std::__1::map.1587"* }
%"class.std::__1::map.1587" = type opaque
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::Vector.1597" = type { i8*, i64 }
%"class.std::__1::shared_ptr.1273" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__sp_mut" = type { i8* }
%"struct.v8::internal::wasm::ModuleWireBytes" = type { %"class.v8::internal::Vector.1596" }
%"class.v8::internal::Vector.1596" = type { i8*, i64 }
%"class.v8::internal::WasmModuleObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.1592" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::WasmInstanceObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::IndirectFunctionTableEntry" = type <{ %"class.v8::internal::Handle.1599", %"class.v8::internal::Handle.1611", i32, [4 x i8] }>
%"class.v8::internal::Handle.1599" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1611" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::shared_ptr.1809" = type { %"class.v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations" = type { i32, %"class.std::__1::unique_ptr.1538", %"class.std::__1::unique_ptr.1654", %"class.std::__1::unique_ptr.1654", %"class.std::__1::unique_ptr.1654", %"class.std::__1::unique_ptr.1654", %"class.std::__1::unique_ptr.1538", %"class.std::__1::unique_ptr.1659" }
%"class.std::__1::unique_ptr.1654" = type { %"class.std::__1::__compressed_pair.1655" }
%"class.std::__1::__compressed_pair.1655" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::unique_ptr.1659" = type { %"class.std::__1::__compressed_pair.1660" }
%"class.std::__1::__compressed_pair.1660" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1642", %"class.v8::internal::Handle.1600", %"class.v8::internal::Handle.1600", %"class.v8::internal::Handle.1653", %"class.v8::internal::Handle.1600", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1642" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1653" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1600" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::WasmCapiFunction" = type { %"class.v8::internal::JSFunction" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::WasmExportedFunction" = type { %"class.v8::internal::JSFunction" }
%"class.v8::internal::wasm::WasmCodeRefScope" = type { %"class.v8::internal::wasm::WasmCodeRefScope"*, %"class.std::__1::vector.1618" }
%"class.std::__1::vector.1618" = type { %"class.std::__1::__vector_base.1619" }
%"class.std::__1::__vector_base.1619" = type { %"class.v8::internal::wasm::WasmCode"**, %"class.v8::internal::wasm::WasmCode"**, %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.1567" }
%"class.v8::internal::wasm::WasmImportWrapperCache::ModificationScope" = type { %"class.v8::internal::wasm::WasmImportWrapperCache"*, %"class.v8::base::LockGuard" }
%"class.v8::base::LockGuard" = type { %"class.v8::base::Mutex"* }
%"struct.v8::internal::wasm::WasmImportWrapperCache::CacheKey" = type <{ i8, [7 x i8], %"class.v8::internal::Signature"*, i32, [4 x i8] }>
%"class.v8::internal::Handle<v8::internal::WasmJSFunction>::ObjectRef" = type { %"class.v8::internal::WasmJSFunction" }
%"class.v8::internal::WasmJSFunction" = type { %"class.v8::internal::JSFunction" }
%"struct.v8::internal::wasm::CompilationEnv" = type <{ %"struct.v8::internal::wasm::WasmModule"*, i8, i8, [6 x i8], i64, i64, %"class.v8::internal::wasm::WasmFeatures", [4 x i8] }>
%"struct.v8::internal::wasm::WasmCompilationResult" = type { %"class.v8::internal::CodeDesc", %"class.std::__1::unique_ptr.1659", i32, i32, %"class.v8::internal::OwnedVector.1746", %"class.v8::internal::OwnedVector.1746", i32, i8, i8, i8, i8 }
%"class.v8::internal::CodeDesc" = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, %"class.v8::internal::Assembler"* }
%"class.v8::internal::Assembler" = type { %"class.v8::internal::AssemblerBase", %"class.v8::internal::RelocInfoWriter", %"class.std::__1::deque.1718", i32, %"class.std::__1::deque.1718", %"class.std::__1::map.1727", %"class.v8::internal::ConstPool" }
%"class.v8::internal::AssemblerBase" = type { i32 (...)**, %"class.std::__1::unique_ptr.1669", i8*, %"class.std::__1::forward_list", i8*, %"class.v8::internal::CodeCommentsWriter", %"class.std::__1::vector.1687", %"class.std::__1::vector.968", %"class.std::__1::unordered_map.1694", %"struct.v8::internal::AssemblerOptions", i64, i8, i8, %"class.v8::internal::JumpOptimizationInfo"* }
%"class.std::__1::unique_ptr.1669" = type { %"class.std::__1::__compressed_pair.1670" }
%"class.std::__1::__compressed_pair.1670" = type { %"struct.std::__1::__compressed_pair_elem.1671" }
%"struct.std::__1::__compressed_pair_elem.1671" = type { %"class.v8::internal::AssemblerBuffer"* }
%"class.v8::internal::AssemblerBuffer" = type { i32 (...)** }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1675" }
%"class.std::__1::__compressed_pair.1675" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"struct.std::__1::__compressed_pair_elem.1676" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.v8::internal::CodeCommentsWriter" = type { i32, %"class.std::__1::vector.1680" }
%"class.std::__1::vector.1680" = type { %"class.std::__1::__vector_base.1681" }
%"class.std::__1::__vector_base.1681" = type { %"struct.v8::internal::CodeCommentEntry"*, %"struct.v8::internal::CodeCommentEntry"*, %"class.std::__1::__compressed_pair.1682" }
%"struct.v8::internal::CodeCommentEntry" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1682" = type { %"struct.std::__1::__compressed_pair_elem.1683" }
%"struct.std::__1::__compressed_pair_elem.1683" = type { %"struct.v8::internal::CodeCommentEntry"* }
%"class.std::__1::vector.1687" = type { %"class.std::__1::__vector_base.1688" }
%"class.std::__1::__vector_base.1688" = type { %"class.v8::internal::Handle.1667"*, %"class.v8::internal::Handle.1667"*, %"class.std::__1::__compressed_pair.1689" }
%"class.v8::internal::Handle.1667" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.1690" }
%"struct.std::__1::__compressed_pair_elem.1690" = type { %"class.v8::internal::Handle.1667"* }
%"class.std::__1::unordered_map.1694" = type { %"class.std::__1::__hash_table.1695" }
%"class.std::__1::__hash_table.1695" = type <{ %"class.std::__1::unique_ptr.1696", %"class.std::__1::__compressed_pair.1706", %"class.std::__1::__compressed_pair.1711", %"class.std::__1::__compressed_pair.1714", [4 x i8] }>
%"class.std::__1::unique_ptr.1696" = type { %"class.std::__1::__compressed_pair.1697" }
%"class.std::__1::__compressed_pair.1697" = type { %"struct.std::__1::__compressed_pair_elem.1698", %"struct.std::__1::__compressed_pair_elem.1700" }
%"struct.std::__1::__compressed_pair_elem.1698" = type { %"struct.std::__1::__hash_node_base.1699"** }
%"struct.std::__1::__hash_node_base.1699" = type { %"struct.std::__1::__hash_node_base.1699"* }
%"struct.std::__1::__compressed_pair_elem.1700" = type { %"class.std::__1::__bucket_list_deallocator.1701" }
%"class.std::__1::__bucket_list_deallocator.1701" = type { %"class.std::__1::__compressed_pair.1702" }
%"class.std::__1::__compressed_pair.1702" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1706" = type { %"struct.std::__1::__compressed_pair_elem.1707" }
%"struct.std::__1::__compressed_pair_elem.1707" = type { %"struct.std::__1::__hash_node_base.1699" }
%"class.std::__1::__compressed_pair.1711" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1714" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::internal::AssemblerOptions" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i64, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::JumpOptimizationInfo" = type { i32, i8, %"class.std::__1::vector.1324", i64 }
%"class.v8::internal::RelocInfoWriter" = type { i8*, i8* }
%"class.std::__1::deque.1718" = type { %"class.std::__1::__deque_base.1719" }
%"class.std::__1::__deque_base.1719" = type { %"struct.std::__1::__split_buffer.1720", i64, %"class.std::__1::__compressed_pair.1726" }
%"struct.std::__1::__split_buffer.1720" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1721" }
%"class.std::__1::__compressed_pair.1721" = type { %"struct.std::__1::__compressed_pair_elem.1722" }
%"struct.std::__1::__compressed_pair_elem.1722" = type { i32** }
%"class.std::__1::__compressed_pair.1726" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.1727" = type { %"class.std::__1::__tree.1728" }
%"class.std::__1::__tree.1728" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1729", %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1729" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ConstPool" = type { %"class.v8::internal::Assembler"*, %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1738" }
%"class.std::__1::__tree.1738" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1739", %"class.std::__1::__compressed_pair.1743" }
%"class.std::__1::__compressed_pair.1739" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.1743" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::OwnedVector.1746" = type { %"class.std::__1::unique_ptr.1659", i64 }
%"class.v8::internal::MaybeHandle.1626" = type { i64* }
%"class.v8::internal::MaybeHandle.1627" = type { i64* }
%"class.std::__1::shared_ptr.1814" = type { %"class.v8::internal::(anonymous namespace)::IftNativeAllocations"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::(anonymous namespace)::IftNativeAllocations" = type { %"class.std::__1::vector.1324", %"class.std::__1::vector.91" }
%"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef" = type { %"class.v8::internal::JSArrayBuffer" }
%"class.v8::internal::JSArrayBuffer" = type { %"class.v8::internal::TorqueGeneratedJSArrayBuffer" }
%"class.v8::internal::TorqueGeneratedJSArrayBuffer" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::MaybeObjectHandle" = type { i32, %"class.v8::internal::MaybeHandle.1641" }
%"class.v8::internal::MaybeHandle.1641" = type { i64* }
%"class.v8::internal::WasmMemoryObject" = type { %"class.v8::internal::JSObject" }
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef" = type { %"class.v8::internal::WasmMemoryObject" }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::internal::ImportedFunctionEntry" = type <{ %"class.v8::internal::Handle.1599", i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector.1761" = type { %"class.v8::internal::Vector", [16 x i8] }
%"class.v8::internal::Factory::JSFunctionBuilder" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1756", %"class.v8::internal::Handle.1757", %"class.v8::internal::MaybeHandle.1758", %"class.v8::internal::MaybeHandle.1759", i8, [7 x i8] }>
%"class.v8::internal::Handle.1756" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1757" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeHandle.1758" = type { i64* }
%"class.v8::internal::MaybeHandle.1759" = type { i64* }
%"class.v8::internal::wasm::WasmValue" = type { %"class.v8::internal::wasm::ValueType", [16 x i8] }
%"class.v8::internal::WasmStruct" = type { %"class.v8::internal::TorqueGeneratedWasmStruct" }
%"class.v8::internal::TorqueGeneratedWasmStruct" = type { %"class.v8::internal::WasmObject" }
%"class.v8::internal::WasmObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::wasm::StructType" = type { i32, i32*, %"class.v8::internal::wasm::ValueType"*, i8* }
%"class.v8::internal::WasmArray" = type { %"class.v8::internal::TorqueGeneratedWasmArray" }
%"class.v8::internal::TorqueGeneratedWasmArray" = type { %"class.v8::internal::WasmObject" }
%"class.v8::internal::wasm::ArrayType" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8] }>
%"class.v8::internal::WasmExceptionObject" = type { %"class.v8::internal::JSObject" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<v8::internal::(anonymous namespace)::IftNativeAllocations, std::__1::allocator<v8::internal::(anonymous namespace)::IftNativeAllocations> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<v8::internal::(anonymous namespace)::IftNativeAllocations, std::__1::allocator<v8::internal::(anonymous namespace)::IftNativeAllocations> >::_Storage" = type { [48 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.1822" }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.1823" }
%"struct.std::__1::__compressed_pair_elem.1823" = type { %"class.std::__1::__compressed_pair.1635" }
%"class.std::__1::__compressed_pair.1635" = type { %"struct.std::__1::__compressed_pair_elem.1636" }
%"struct.std::__1::__compressed_pair_elem.1636" = type { %"class.v8::internal::BackingStore"* }
%"struct.std::__1::__shared_ptr_emplace.1834" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations, std::__1::allocator<v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations, std::__1::allocator<v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations> >::_Storage" = type { [64 x i8] }

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEm = comdat any

$_ZN2v88internal7ManagedINS0_4wasm12NativeModuleEE10DestructorEPv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"wasm::WasmTable::IsValidTableType(type, module)\00", align 1
@_ZN2v88internal24FLAG_wasm_max_table_sizeE = external local_unnamed_addr global i32, align 4
@.str.2 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"unimplemented code\00", align 1
@_ZZN2v88internal16WasmMemoryObject4GrowEPNS0_7IsolateENS0_6HandleIS1_EEjE28trace_event_unique_atomic919 = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"v8.wasm\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"wasm.GrowMemory\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"wasm::max_mem_pages() >= old_pages\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"*old_buffer != memory_object->array_buffer()\00", align 1
@.str.8 = private unnamed_addr constant [63 x i8] c"new_byte_length <= memory_object->array_buffer().byte_length()\00", align 1
@_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE = external local_unnamed_addr global i8, align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"could not grow wasm memory\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"offset == 0\00", align 1
@.str.11 = private unnamed_addr constant [53 x i8] c"offset + type_size <= untagged_buffer->byte_length()\00", align 1
@_ZN2v88internal18WasmInstanceObject19kTaggedFieldOffsetsE = hidden local_unnamed_addr constant [15 x i16] [i16 44, i16 56, i16 112, i16 116, i16 120, i16 124, i16 128, i16 132, i16 136, i16 140, i16 144, i16 148, i16 152, i16 156, i16 160], align 16
@.str.12 = private unnamed_addr constant [34 x i8] c"mem_size <= wasm::max_mem_bytes()\00", align 1
@.str.13 = private unnamed_addr constant [46 x i8] c"table_dst_index < instance->tables().length()\00", align 1
@.str.14 = private unnamed_addr constant [46 x i8] c"table_src_index < instance->tables().length()\00", align 1
@__func__._ZN2v88internal18WasmInstanceObject29ImportWasmJSFunctionIntoTableEPNS0_7IsolateENS0_6HandleIS1_EEiiNS4_INS0_14WasmJSFunctionEEE = private unnamed_addr constant [30 x i8] c"ImportWasmJSFunctionIntoTable\00", align 1
@.str.15 = private unnamed_addr constant [176 x i8] c"!Object::SetProperty(isolate, exception, isolate->factory()->wasm_exception_tag_symbol(), exception_tag, StoreOrigin::kMaybeKeyed, Just(ShouldThrow::kThrowOnError)) .is_null()\00", align 1
@.str.16 = private unnamed_addr constant [172 x i8] c"!Object::SetProperty(isolate, exception, isolate->factory()->wasm_exception_values_symbol(), values, StoreOrigin::kMaybeKeyed, Just(ShouldThrow::kThrowOnError)) .is_null()\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@_ZZN2v88internal20WasmExportedFunction12GetDebugNameEPKNS0_9SignatureINS0_4wasm9ValueTypeEEEE7kPrefix = internal unnamed_addr constant [12 x i8] c"js-to-wasm:\00", align 1
@.str.18 = private unnamed_addr constant [43 x i8] c"fresh function map for WasmJSFunction::New\00", align 1
@.str.19 = private unnamed_addr constant [75 x i8] c"function-typed object must be null (if nullable) or a Wasm function object\00", align 1
@_ZN2v88internal23FLAG_wasm_gc_js_interopE = external local_unnamed_addr global i8, align 1
@.str.20 = private unnamed_addr constant [95 x i8] c"eqref/dataref/i31ref object must be null (if nullable) or wrapped with the wasm object wrapper\00", align 1
@.str.21 = private unnamed_addr constant [43 x i8] c"dataref-typed object must be a heap object\00", align 1
@.str.22 = private unnamed_addr constant [44 x i8] c"i31ref-typed object cannot be a heap object\00", align 1
@.str.23 = private unnamed_addr constant [97 x i8] c"an object defined in JavaScript cannot be compatible with a type defined in a Webassembly module\00", align 1
@.str.24 = private unnamed_addr constant [68 x i8] c"assigned exported function has to be a subtype of the expected type\00", align 1
@.str.25 = private unnamed_addr constant [65 x i8] c"assigned WasmJSFunction has to be a subtype of the expected type\00", align 1
@.str.26 = private unnamed_addr constant [67 x i8] c"assigned WasmCapiFunction has to be a subtype of the expected type\00", align 1
@.str.27 = private unnamed_addr constant [92 x i8] c"passing struct/array-typed objects between Webassembly and Javascript is not supported yet.\00", align 1
@.str.28 = private unnamed_addr constant [70 x i8] c"passing rtts between Webassembly and Javascript is not supported yet.\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.30 = private unnamed_addr constant [90 x i8] c"is_wasm_module && use_trap_handler implies buffer->GetBackingStore()->has_guard_regions()\00", align 1
@_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize = internal unnamed_addr constant [13 x i8] c"\FF\04\08\04\08\10\01\02\04\04\04\04\FF", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"kMaxInt >= old_capacity\00", align 1
@.str.32 = private unnamed_addr constant [24 x i8] c"kMaxInt >= new_capacity\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEE21__on_zero_shared_weakEv to i8*)] }, align 8
@_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@.str.34 = private unnamed_addr constant [23 x i8] c"storage_.is_populated_\00", align 1
@_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.1834"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.1834"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.1834"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.1834"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEE21__on_zero_shared_weakEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmModuleObject3NewEPNS0_7IsolateENSt3__110shared_ptrINS0_4wasm12NativeModuleEEENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"*, i64*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %6 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %5, i32 0, i8 zeroext 0) #11
  %7 = tail call i64* @_ZN2v88internal16WasmModuleObject3NewEPNS0_7IsolateENSt3__110shared_ptrINS0_4wasm12NativeModuleEEENS0_6HandleINS0_6ScriptEEENS9_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::wasm::NativeModule"* %1, %"class.std::__1::__shared_weak_count"* %2, i64* %3, i64* %6)
  ret i64* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmModuleObject3NewEPNS0_7IsolateENSt3__110shared_ptrINS0_4wasm12NativeModuleEEENS0_6HandleINS0_6ScriptEEENS9_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.std::__1::__shared_weak_count"* %2 to i64
  %7 = load i64, i64* %3, align 8
  %8 = add i64 %7, 23
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, -2
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %13, label %38

13:                                               ; preds = %5
  %14 = and i64 %7, -4294967296
  %15 = add i64 %7, 39
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %21 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %20, align 8
  %22 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %21, i64 %19) #11
  br label %69

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %29 = load i64*, i64** %28, align 8
  %30 = icmp eq i64* %27, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %33

33:                                               ; preds = %31, %25
  %34 = phi i64* [ %32, %31 ], [ %27, %25 ]
  %35 = ptrtoint i64* %34 to i64
  %36 = add i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  store i64* %37, i64** %26, align 8
  store i64 %19, i64* %34, align 8
  br label %69

38:                                               ; preds = %5
  %39 = ptrtoint %"class.v8::internal::wasm::NativeModule"* %1 to i64
  %40 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %1, i64 0, i32 4, i32 0
  %41 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %1, i64 0, i32 2, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i64, i64* %42 acquire, align 8
  %44 = tail call i64 @_ZN2v88internal4wasm15WasmCodeManager32EstimateNativeModuleMetaDataSizeEPKNS1_10WasmModuleE(%"struct.v8::internal::wasm::WasmModule"* %41) #11
  %45 = add i64 %44, %43
  %46 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::Isolate"*
  %47 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %46, i64 %45) #11
  %48 = tail call i8* @_Znwm(i64 48) #15
  %49 = bitcast i8* %48 to %"struct.v8::internal::ManagedPtrDestructor"*
  %50 = tail call i8* @_Znwm(i64 16) #15
  %51 = bitcast i8* %50 to i64*
  store i64 %39, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 %6, i64* %53, align 8
  %54 = bitcast i8* %48 to i64*
  store i64 %45, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %48, i64 8
  %56 = getelementptr inbounds i8, i8* %48, i64 24
  %57 = bitcast i8* %56 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #11
  store i8* %50, i8** %57, align 8
  %58 = getelementptr inbounds i8, i8* %48, i64 32
  %59 = bitcast i8* %58 to void (i8*)**
  store void (i8*)* @_ZN2v88internal7ManagedINS0_4wasm12NativeModuleEE10DestructorEPv, void (i8*)** %59, align 8
  %60 = getelementptr inbounds i8, i8* %48, i64 40
  %61 = bitcast i8* %60 to i64**
  store i64* null, i64** %61, align 8
  %62 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %63 = ptrtoint i8* %48 to i64
  %64 = tail call i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"* %62, i64 %63) #11
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 36
  %66 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %65, align 8
  %67 = load i64, i64* %64, align 8
  %68 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %66, i64 %67) #11
  store i64* %68, i64** %61, align 8
  tail call void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64* %68, i8* nonnull %48, void (%"class.v8::WeakCallbackInfo"*)* nonnull @_ZN2v88internal22ManagedObjectFinalizerERKNS_16WeakCallbackInfoIvEE, i32 0) #11
  tail call void @_ZN2v88internal7Isolate28RegisterManagedPtrDestructorEPNS0_20ManagedPtrDestructorE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::ManagedPtrDestructor"* nonnull %49) #11
  br label %69

69:                                               ; preds = %33, %23, %38
  %70 = phi i64* [ %64, %38 ], [ %24, %23 ], [ %34, %33 ]
  %71 = phi i64 [ 0, %38 ], [ %6, %23 ], [ %6, %33 ]
  %72 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, -4294967296
  %76 = add i64 %74, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 19
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %75, %84
  %86 = add i64 %85, 843
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %75, %89
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %92 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %91, align 8
  %93 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %69
  %95 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %92, i64 %90) #11
  br label %109

96:                                               ; preds = %69
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %100 = load i64*, i64** %99, align 8
  %101 = icmp eq i64* %98, %100
  br i1 %101, label %102, label %104

102:                                              ; preds = %96
  %103 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %104

104:                                              ; preds = %102, %96
  %105 = phi i64* [ %103, %102 ], [ %98, %96 ]
  %106 = ptrtoint i64* %105 to i64
  %107 = add i64 %106, 8
  %108 = inttoptr i64 %107 to i64*
  store i64* %108, i64** %97, align 8
  store i64 %90, i64* %105, align 8
  br label %109

109:                                              ; preds = %94, %104
  %110 = phi i64* [ %95, %94 ], [ %105, %104 ]
  %111 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %72, i64* %110, i8 zeroext 0) #11
  %112 = load i64, i64* %111, align 8
  %113 = load i64, i64* %4, align 8
  %114 = add i64 %112, 15
  %115 = inttoptr i64 %114 to i32*
  %116 = trunc i64 %113 to i32
  store atomic volatile i32 %116, i32* %115 monotonic, align 4
  %117 = and i64 %113, 1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %130, label %119

119:                                              ; preds = %109
  %120 = and i64 %112, -262144
  %121 = or i64 %120, 8
  %122 = inttoptr i64 %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = and i64 %123, 262144
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %119
  %127 = or i64 %120, 16
  %128 = inttoptr i64 %127 to %"class.v8::internal::Heap"**
  %129 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %128, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %129, i64 %112, i64 %114, i64 %113) #11
  br label %130

130:                                              ; preds = %126, %119, %109
  %131 = and i64 %113, -262144
  %132 = or i64 %131, 8
  %133 = inttoptr i64 %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 24
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %130
  %138 = and i64 %112, -262144
  %139 = or i64 %138, 8
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = and i64 %141, 24
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %137
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %112, i64 %114, i64 %113) #11
  br label %145

145:                                              ; preds = %130, %137, %144
  %146 = load i64, i64* %111, align 8
  %147 = load i64, i64* %70, align 8
  %148 = add i64 %146, 11
  %149 = inttoptr i64 %148 to i32*
  %150 = trunc i64 %147 to i32
  store atomic volatile i32 %150, i32* %149 monotonic, align 4
  %151 = and i64 %147, 1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %145
  %154 = and i64 %146, -262144
  %155 = or i64 %154, 8
  %156 = inttoptr i64 %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = and i64 %157, 262144
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %164, label %160

160:                                              ; preds = %153
  %161 = or i64 %154, 16
  %162 = inttoptr i64 %161 to %"class.v8::internal::Heap"**
  %163 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %162, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %163, i64 %146, i64 %148, i64 %147) #11
  br label %164

164:                                              ; preds = %160, %153, %145
  %165 = and i64 %147, -262144
  %166 = or i64 %165, 8
  %167 = inttoptr i64 %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = and i64 %168, 24
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %179, label %171

171:                                              ; preds = %164
  %172 = and i64 %146, -262144
  %173 = or i64 %172, 8
  %174 = inttoptr i64 %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = and i64 %175, 24
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %171
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %146, i64 %148, i64 %147) #11
  br label %179

179:                                              ; preds = %164, %171, %178
  %180 = load i64, i64* %111, align 8
  %181 = load i64, i64* %3, align 8
  %182 = add i64 %180, 19
  %183 = inttoptr i64 %182 to i32*
  %184 = trunc i64 %181 to i32
  store atomic volatile i32 %184, i32* %183 monotonic, align 4
  %185 = and i64 %181, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %198, label %187

187:                                              ; preds = %179
  %188 = and i64 %180, -262144
  %189 = or i64 %188, 8
  %190 = inttoptr i64 %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = and i64 %191, 262144
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %198, label %194

194:                                              ; preds = %187
  %195 = or i64 %188, 16
  %196 = inttoptr i64 %195 to %"class.v8::internal::Heap"**
  %197 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %196, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %197, i64 %180, i64 %182, i64 %181) #11
  br label %198

198:                                              ; preds = %194, %187, %179
  %199 = and i64 %181, -262144
  %200 = or i64 %199, 8
  %201 = inttoptr i64 %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = and i64 %202, 24
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %213, label %205

205:                                              ; preds = %198
  %206 = and i64 %180, -262144
  %207 = or i64 %206, 8
  %208 = inttoptr i64 %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = and i64 %209, 24
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %205
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %180, i64 %182, i64 %181) #11
  br label %213

213:                                              ; preds = %198, %205, %212
  %214 = inttoptr i64 %71 to %"class.std::__1::__shared_weak_count"*
  %215 = icmp eq i64 %71, 0
  br i1 %215, label %226, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %214, i64 0, i32 0, i32 1
  %218 = atomicrmw add i64* %217, i64 -1 acq_rel
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %226

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %214, i64 0, i32 0
  %222 = inttoptr i64 %71 to void (%"class.std::__1::__shared_count"*)***
  %223 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %223, i64 2
  %225 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %224, align 8
  tail call void %225(%"class.std::__1::__shared_count"* %221) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %214) #11
  br label %226

226:                                              ; preds = %213, %216, %220
  ret i64* %111
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN2v88internal4wasm15WasmCodeManager32EstimateNativeModuleMetaDataSizeEPKNS1_10WasmModuleE(%"struct.v8::internal::wasm::WasmModule"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmModuleObject32ExtractUtf8StringFromModuleBytesEPNS0_7IsolateENS0_6HandleIS1_EENS0_4wasm12WireBytesRefENS0_17InternalizeStringE(%"class.v8::internal::Isolate"*, i64*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Vector.1597", align 8
  %6 = alloca %"class.v8::internal::Vector.1597", align 8
  %7 = load i64, i64* %1, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 3
  %15 = inttoptr i64 %14 to %"struct.v8::internal::ManagedPtrDestructor"**
  %16 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %15, align 1
  %17 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %"class.std::__1::shared_ptr.1273"**
  %19 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %19, i64 0, i32 0
  %21 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %21, i64 0, i32 6
  %23 = bitcast %"class.std::__1::shared_ptr.1499"* %22 to i8*
  %24 = tail call dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8* %23) #11
  tail call void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"* %24) #11
  %25 = getelementptr inbounds %"class.std::__1::shared_ptr.1499", %"class.std::__1::shared_ptr.1499"* %22, i64 0, i32 0
  %26 = load %"class.v8::internal::OwnedVector"*, %"class.v8::internal::OwnedVector"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %21, i64 0, i32 6, i32 1
  %28 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %27, align 8
  %29 = icmp eq %"class.std::__1::__shared_weak_count"* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %4
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %24) #11
  %31 = getelementptr inbounds %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  br label %47

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %28, i64 0, i32 0, i32 1
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %24) #11
  %36 = getelementptr inbounds %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %28, i64 0, i32 0, i32 1
  %39 = atomicrmw add i64* %38, i64 -1 acq_rel
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %28, i64 0, i32 0
  %43 = bitcast %"class.std::__1::__shared_weak_count"* %28 to void (%"class.std::__1::__shared_count"*)***
  %44 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %44, i64 2
  %46 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %45, align 8
  tail call void %46(%"class.std::__1::__shared_count"* %42) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %28) #11
  br label %47

47:                                               ; preds = %30, %33, %41
  %48 = phi i8* [ %32, %30 ], [ %37, %33 ], [ %37, %41 ]
  %49 = lshr i64 %2, 32
  %50 = and i64 %2, 4294967295
  %51 = add i64 %49, %2
  %52 = and i64 %51, 4294967295
  %53 = getelementptr inbounds i8, i8* %48, i64 %50
  %54 = sub nsw i64 %52, %50
  %55 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %56 = bitcast %"class.v8::internal::Vector.1597"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #11
  %57 = bitcast %"class.v8::internal::Vector.1597"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #11
  br i1 %3, label %58, label %62

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.v8::internal::Vector.1597", %"class.v8::internal::Vector.1597"* %5, i64 0, i32 0
  store i8* %53, i8** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Vector.1597", %"class.v8::internal::Vector.1597"* %5, i64 0, i32 1
  store i64 %54, i64* %60, align 8
  %61 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %55, %"class.v8::internal::Vector.1597"* nonnull dereferenceable(16) %5) #11
  br label %68

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"class.v8::internal::Vector.1597", %"class.v8::internal::Vector.1597"* %6, i64 0, i32 0
  store i8* %53, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Vector.1597", %"class.v8::internal::Vector.1597"* %6, i64 0, i32 1
  store i64 %54, i64* %64, align 8
  %65 = call i64* @_ZN2v88internal7Factory17NewStringFromUtf8ERKNS0_6VectorIKcEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %55, %"class.v8::internal::Vector.1597"* nonnull dereferenceable(16) %6, i8 zeroext 0) #11
  %66 = icmp eq i64* %65, null
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %62
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #16
  unreachable

68:                                               ; preds = %58, %62
  %69 = phi i64* [ %61, %58 ], [ %65, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #11
  ret i64* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmModuleObject32ExtractUtf8StringFromModuleBytesEPNS0_7IsolateENS0_6VectorIKhEENS0_4wasm12WireBytesRefENS0_17InternalizeStringE(%"class.v8::internal::Isolate"*, i8*, i64, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Vector.1597", align 8
  %7 = alloca %"class.v8::internal::Vector.1597", align 8
  %8 = lshr i64 %3, 32
  %9 = and i64 %3, 4294967295
  %10 = add i64 %8, %3
  %11 = and i64 %10, 4294967295
  %12 = getelementptr inbounds i8, i8* %1, i64 %9
  %13 = sub nsw i64 %11, %9
  %14 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %15 = bitcast %"class.v8::internal::Vector.1597"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = bitcast %"class.v8::internal::Vector.1597"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  br i1 %4, label %17, label %21

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8::internal::Vector.1597", %"class.v8::internal::Vector.1597"* %6, i64 0, i32 0
  store i8* %12, i8** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Vector.1597", %"class.v8::internal::Vector.1597"* %6, i64 0, i32 1
  store i64 %13, i64* %19, align 8
  %20 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %14, %"class.v8::internal::Vector.1597"* nonnull dereferenceable(16) %6) #11
  br label %27

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.v8::internal::Vector.1597", %"class.v8::internal::Vector.1597"* %7, i64 0, i32 0
  store i8* %12, i8** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Vector.1597", %"class.v8::internal::Vector.1597"* %7, i64 0, i32 1
  store i64 %13, i64* %23, align 8
  %24 = call i64* @_ZN2v88internal7Factory17NewStringFromUtf8ERKNS0_6VectorIKcEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %14, %"class.v8::internal::Vector.1597"* nonnull dereferenceable(16) %7, i8 zeroext 0) #11
  %25 = icmp eq i64* %24, null
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %21
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #16
  unreachable

27:                                               ; preds = %21, %17
  %28 = phi i64* [ %20, %17 ], [ %24, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  ret i64* %28
}

declare i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1597"* dereferenceable(16)) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory17NewStringFromUtf8ERKNS0_6VectorIKcEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1597"* dereferenceable(16), i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmModuleObject19GetModuleNameOrNullEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to %"struct.v8::internal::ManagedPtrDestructor"**
  %12 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %11, align 1
  %13 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %12, i64 0, i32 3
  %14 = bitcast i8** %13 to %"class.std::__1::shared_ptr.1273"**
  %15 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 4, i32 0
  %19 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %19, i64 0, i32 19
  %21 = getelementptr inbounds %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.v8::internal::wasm::WireBytesRef"* %20 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = tail call i64* @_ZN2v88internal16WasmModuleObject32ExtractUtf8StringFromModuleBytesEPNS0_7IsolateENS0_6HandleIS1_EENS0_4wasm12WireBytesRefENS0_17InternalizeStringE(%"class.v8::internal::Isolate"* %0, i64* %1, i64 %26, i1 zeroext false)
  br label %28

28:                                               ; preds = %2, %24
  %29 = phi i64* [ %27, %24 ], [ null, %2 ]
  ret i64* %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmModuleObject21GetFunctionNameOrNullEPNS0_7IsolateENS0_6HandleIS1_EEj(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.v8::internal::wasm::ModuleWireBytes"*
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 11
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 3
  %14 = inttoptr i64 %13 to %"struct.v8::internal::ManagedPtrDestructor"**
  %15 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %14, align 1
  %16 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %15, i64 0, i32 3
  %17 = bitcast i8** %16 to %"class.std::__1::shared_ptr.1273"**
  %18 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %18, i64 0, i32 0
  %20 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %20, i64 0, i32 4, i32 0
  %22 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %21, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %22, i64 0, i32 34
  %24 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %20, i64 0, i32 6
  %26 = bitcast %"class.std::__1::shared_ptr.1499"* %25 to i8*
  %27 = tail call dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8* %26) #11
  tail call void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"* %27) #11
  %28 = bitcast %"class.std::__1::shared_ptr.1499"* %25 to <2 x i64>**
  %29 = load <2 x i64>*, <2 x i64>** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %20, i64 0, i32 6, i32 1
  %31 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %30, align 8
  %32 = icmp eq %"class.std::__1::__shared_weak_count"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %31, i64 0, i32 0, i32 1
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  br label %36

36:                                               ; preds = %33, %3
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %27) #11
  %37 = load <2 x i64>, <2 x i64>* %29, align 8
  br i1 %32, label %48, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %31, i64 0, i32 0, i32 1
  %40 = atomicrmw add i64* %39, i64 -1 acq_rel
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %31, i64 0, i32 0
  %44 = bitcast %"class.std::__1::__shared_weak_count"* %31 to void (%"class.std::__1::__shared_count"*)***
  %45 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %45, i64 2
  %47 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %46, align 8
  tail call void %47(%"class.std::__1::__shared_count"* %43) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %31) #11
  br label %48

48:                                               ; preds = %36, %38, %42
  store <2 x i64> %37, <2 x i64>* %4, align 16
  %49 = call i64 @_ZNK2v88internal4wasm20LazilyGeneratedNames18LookupFunctionNameERKNS1_15ModuleWireBytesEj(%"class.v8::internal::wasm::LazilyGeneratedNames"* %23, %"struct.v8::internal::wasm::ModuleWireBytes"* nonnull dereferenceable(16) %5, i32 %2) #11
  %50 = trunc i64 %49 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = call i64* @_ZN2v88internal16WasmModuleObject32ExtractUtf8StringFromModuleBytesEPNS0_7IsolateENS0_6HandleIS1_EENS0_4wasm12WireBytesRefENS0_17InternalizeStringE(%"class.v8::internal::Isolate"* %0, i64* %1, i64 %49, i1 zeroext false)
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi i64* [ %53, %52 ], [ null, %48 ]
  ret i64* %55
}

declare i64 @_ZNK2v88internal4wasm20LazilyGeneratedNames18LookupFunctionNameERKNS1_15ModuleWireBytesEj(%"class.v8::internal::wasm::LazilyGeneratedNames"*, %"struct.v8::internal::wasm::ModuleWireBytes"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN2v88internal16WasmModuleObject18GetRawFunctionNameEi(%"class.v8::internal::WasmModuleObject"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.v8::internal::wasm::ModuleWireBytes"*
  %5 = icmp eq i32 %1, -1
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.v8::internal::WasmModuleObject", %"class.v8::internal::WasmModuleObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, 11
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 3
  %17 = inttoptr i64 %16 to %"struct.v8::internal::ManagedPtrDestructor"**
  %18 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %17, align 1
  %19 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %18, i64 0, i32 3
  %20 = bitcast i8** %19 to %"class.std::__1::shared_ptr.1273"**
  %21 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %21, i64 0, i32 0
  %23 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %23, i64 0, i32 6
  %25 = bitcast %"class.std::__1::shared_ptr.1499"* %24 to i8*
  %26 = tail call dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8* %25) #11
  tail call void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"* %26) #11
  %27 = bitcast %"class.std::__1::shared_ptr.1499"* %24 to <2 x i64>**
  %28 = load <2 x i64>*, <2 x i64>** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %23, i64 0, i32 6, i32 1
  %30 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %29, align 8
  %31 = icmp eq %"class.std::__1::__shared_weak_count"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %6
  %33 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0, i32 1
  %34 = atomicrmw add i64* %33, i64 1 monotonic
  br label %35

35:                                               ; preds = %32, %6
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %26) #11
  %36 = load <2 x i64>, <2 x i64>* %28, align 8
  br i1 %31, label %47, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0, i32 1
  %39 = atomicrmw add i64* %38, i64 -1 acq_rel
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0
  %43 = bitcast %"class.std::__1::__shared_weak_count"* %30 to void (%"class.std::__1::__shared_count"*)***
  %44 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %44, i64 2
  %46 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %45, align 8
  tail call void %46(%"class.std::__1::__shared_count"* %42) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %30) #11
  br label %47

47:                                               ; preds = %35, %37, %41
  store <2 x i64> %36, <2 x i64>* %3, align 16
  %48 = load i64, i64* %8, align 8
  %49 = and i64 %48, -4294967296
  %50 = add i64 %48, 11
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = add i64 %54, 3
  %56 = inttoptr i64 %55 to %"struct.v8::internal::ManagedPtrDestructor"**
  %57 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %56, align 1
  %58 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %57, i64 0, i32 3
  %59 = bitcast i8** %58 to %"class.std::__1::shared_ptr.1273"**
  %60 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %60, i64 0, i32 0
  %62 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %62, i64 0, i32 4, i32 0
  %64 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %63, align 8
  %65 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %64, i64 0, i32 34
  %66 = call i64 @_ZNK2v88internal4wasm20LazilyGeneratedNames18LookupFunctionNameERKNS1_15ModuleWireBytesEj(%"class.v8::internal::wasm::LazilyGeneratedNames"* %65, %"struct.v8::internal::wasm::ModuleWireBytes"* nonnull dereferenceable(16) %4, i32 %1) #11
  %67 = call { i8*, i64 } @_ZNK2v88internal4wasm15ModuleWireBytes13GetNameOrNullENS1_12WireBytesRefE(%"struct.v8::internal::wasm::ModuleWireBytes"* nonnull %4, i64 %66) #11
  %68 = extractvalue { i8*, i64 } %67, 0
  %69 = extractvalue { i8*, i64 } %67, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br label %70

70:                                               ; preds = %2, %47
  %71 = phi i64 [ %69, %47 ], [ 0, %2 ]
  %72 = phi i8* [ %68, %47 ], [ null, %2 ]
  %73 = insertvalue { i8*, i64 } undef, i8* %72, 0
  %74 = insertvalue { i8*, i64 } %73, i64 %71, 1
  ret { i8*, i64 } %74
}

declare { i8*, i64 } @_ZNK2v88internal4wasm15ModuleWireBytes13GetNameOrNullENS1_12WireBytesRefE(%"struct.v8::internal::wasm::ModuleWireBytes"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15WasmTableObject3NewEPNS0_7IsolateENS0_6HandleINS0_18WasmInstanceObjectEEENS0_4wasm9ValueTypeEjbjPNS4_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"*, i64*, i32, i32, i1 zeroext, i32, %"class.v8::internal::Handle.1592"*) local_unnamed_addr #0 align 2 {
  %8 = icmp eq i64* %1, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %7
  %10 = load i64, i64* %1, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, 111
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 11
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %11, %20
  %22 = add i64 %21, 3
  %23 = inttoptr i64 %22 to %"struct.v8::internal::ManagedPtrDestructor"**
  %24 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %23, align 1
  %25 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %24, i64 0, i32 3
  %26 = bitcast i8** %25 to %"class.std::__1::shared_ptr.1273"**
  %27 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %27, i64 0, i32 0
  %29 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %29, i64 0, i32 4, i32 0
  %31 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %30, align 8
  br label %32

32:                                               ; preds = %7, %9
  %33 = phi %"struct.v8::internal::wasm::WasmModule"* [ %31, %9 ], [ null, %7 ]
  %34 = trunc i32 %2 to i8
  %35 = and i8 %34, 30
  %36 = or i8 %35, 1
  %37 = icmp eq i8 %36, 11
  br i1 %37, label %38, label %64, !prof !3

38:                                               ; preds = %32
  %39 = lshr i32 %2, 5
  %40 = and i32 %39, 1048575
  %41 = and i32 %2, 33554368
  %42 = icmp eq i32 %41, 32000000
  br i1 %42, label %65, label %43

43:                                               ; preds = %38
  %44 = icmp ne %"struct.v8::internal::wasm::WasmModule"* %33, null
  %45 = icmp ult i32 %40, 1000000
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %64, !prof !3

47:                                               ; preds = %43
  %48 = zext i32 %40 to i64
  %49 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %33, i64 0, i32 20
  %50 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %33, i64 0, i32 20, i32 0, i32 1
  %51 = bitcast %"struct.v8::internal::wasm::TypeDefinition"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.1309"* %49 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 3
  %57 = icmp ugt i64 %56, %48
  br i1 %57, label %58, label %64, !prof !3

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %33, i64 0, i32 21, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %48
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 96
  br i1 %63, label %65, label %64, !prof !4

64:                                               ; preds = %47, %43, %32, %58
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

65:                                               ; preds = %38, %58
  %66 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %67 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %68 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %67, i32 %3, i8 zeroext 0) #11
  %69 = ptrtoint i64* %68 to i64
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %71 = load i64, i64* %70, align 8
  %72 = icmp sgt i32 %3, 0
  br i1 %72, label %73, label %118

73:                                               ; preds = %65
  %74 = trunc i64 %71 to i32
  %75 = and i64 %71, 1
  %76 = icmp eq i64 %75, 0
  %77 = and i64 %71, -262144
  %78 = or i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  %80 = zext i32 %3 to i64
  br i1 %76, label %81, label %119

81:                                               ; preds = %73
  %82 = and i64 %80, 1
  %83 = icmp eq i32 %3, 1
  br i1 %83, label %107, label %84

84:                                               ; preds = %81
  %85 = sub nsw i64 %80, %82
  br label %86

86:                                               ; preds = %86, %84
  %87 = phi i64 [ 0, %84 ], [ %104, %86 ]
  %88 = phi i64 [ %85, %84 ], [ %105, %86 ]
  %89 = load i64, i64* %68, align 8
  %90 = trunc i64 %87 to i32
  %91 = shl i32 %90, 2
  %92 = or i32 %91, 7
  %93 = sext i32 %92 to i64
  %94 = add i64 %89, %93
  %95 = inttoptr i64 %94 to i32*
  store atomic volatile i32 %74, i32* %95 monotonic, align 4
  %96 = load i64, i64* %68, align 8
  %97 = trunc i64 %87 to i32
  %98 = shl i32 %97, 2
  %99 = or i32 %98, 4
  %100 = sext i32 %99 to i64
  %101 = add nsw i64 %100, 7
  %102 = add i64 %101, %96
  %103 = inttoptr i64 %102 to i32*
  store atomic volatile i32 %74, i32* %103 monotonic, align 4
  %104 = add nuw nsw i64 %87, 2
  %105 = add i64 %88, -2
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %86

107:                                              ; preds = %86, %81
  %108 = phi i64 [ 0, %81 ], [ %104, %86 ]
  %109 = icmp eq i64 %82, 0
  br i1 %109, label %118, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %68, align 8
  %112 = trunc i64 %108 to i32
  %113 = shl i32 %112, 2
  %114 = sext i32 %113 to i64
  %115 = add nsw i64 %114, 7
  %116 = add i64 %115, %111
  %117 = inttoptr i64 %116 to i32*
  store atomic volatile i32 %74, i32* %117 monotonic, align 4
  br label %118

118:                                              ; preds = %147, %110, %107, %65
  br i1 %4, label %150, label %179

119:                                              ; preds = %73, %147
  %120 = phi i64 [ %148, %147 ], [ 0, %73 ]
  %121 = load i64, i64* %68, align 8
  %122 = trunc i64 %120 to i32
  %123 = shl i32 %122, 2
  %124 = sext i32 %123 to i64
  %125 = add nsw i64 %124, 7
  %126 = add i64 %125, %121
  %127 = inttoptr i64 %126 to i32*
  store atomic volatile i32 %74, i32* %127 monotonic, align 4
  %128 = and i64 %121, -262144
  %129 = or i64 %128, 8
  %130 = inttoptr i64 %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = and i64 %131, 262144
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %119
  %135 = or i64 %128, 16
  %136 = inttoptr i64 %135 to %"class.v8::internal::Heap"**
  %137 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %136, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %137, i64 %121, i64 %126, i64 %71) #11
  br label %138

138:                                              ; preds = %134, %119
  %139 = load i64, i64* %79, align 8
  %140 = and i64 %139, 24
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %147, label %142

142:                                              ; preds = %138
  %143 = load i64, i64* %130, align 8
  %144 = and i64 %143, 24
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %142
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %121, i64 %126, i64 %71) #11
  br label %147

147:                                              ; preds = %138, %142, %146
  %148 = add nuw nsw i64 %120, 1
  %149 = icmp eq i64 %148, %80
  br i1 %149, label %118, label %119

150:                                              ; preds = %118
  %151 = icmp ult i32 %5, 1073741824
  br i1 %151, label %152, label %173

152:                                              ; preds = %150
  %153 = sext i32 %5 to i64
  %154 = shl nsw i64 %153, 1
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %156 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %155, align 8
  %157 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %152
  %159 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %156, i64 %154) #11
  br label %181

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %162 = load i64*, i64** %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %162, %164
  br i1 %165, label %166, label %168

166:                                              ; preds = %160
  %167 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %168

168:                                              ; preds = %166, %160
  %169 = phi i64* [ %167, %166 ], [ %162, %160 ]
  %170 = ptrtoint i64* %169 to i64
  %171 = add i64 %170, 8
  %172 = inttoptr i64 %171 to i64*
  store i64* %172, i64** %161, align 8
  store i64 %154, i64* %169, align 8
  br label %181

173:                                              ; preds = %150
  %174 = uitofp i32 %5 to double
  %175 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %67) #11
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 3
  %178 = inttoptr i64 %177 to double*
  store double %174, double* %178, align 1
  br label %181

179:                                              ; preds = %118
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %181

181:                                              ; preds = %173, %168, %158, %179
  %182 = phi i64* [ %180, %179 ], [ %175, %173 ], [ %159, %158 ], [ %169, %168 ]
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = and i64 %184, -4294967296
  %186 = add i64 %184, -1
  %187 = inttoptr i64 %186 to i32*
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = zext i32 %188 to i64
  %190 = or i64 %185, %189
  %191 = add i64 %190, 19
  %192 = inttoptr i64 %191 to i32*
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i64
  %195 = or i64 %185, %194
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %197 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %196, align 8
  %198 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %197, null
  br i1 %198, label %202, label %199

199:                                              ; preds = %181
  %200 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %197, i64 %195) #11
  %201 = load i64, i64* %200, align 8
  br label %215

202:                                              ; preds = %181
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %204 = load i64*, i64** %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %206 = load i64*, i64** %205, align 8
  %207 = icmp eq i64* %204, %206
  br i1 %207, label %208, label %210

208:                                              ; preds = %202
  %209 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %210

210:                                              ; preds = %208, %202
  %211 = phi i64* [ %209, %208 ], [ %204, %202 ]
  %212 = ptrtoint i64* %211 to i64
  %213 = add i64 %212, 8
  %214 = inttoptr i64 %213 to i64*
  store i64* %214, i64** %203, align 8
  store i64 %195, i64* %211, align 8
  br label %215

215:                                              ; preds = %199, %210
  %216 = phi i64 [ %201, %199 ], [ %195, %210 ]
  %217 = and i64 %216, -4294967296
  %218 = add i64 %216, 847
  %219 = inttoptr i64 %218 to i32*
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = zext i32 %220 to i64
  %222 = or i64 %217, %221
  %223 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %196, align 8
  %224 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %223, null
  br i1 %224, label %227, label %225

225:                                              ; preds = %215
  %226 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %223, i64 %222) #11
  br label %240

227:                                              ; preds = %215
  %228 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %229 = load i64*, i64** %228, align 8
  %230 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %231 = load i64*, i64** %230, align 8
  %232 = icmp eq i64* %229, %231
  br i1 %232, label %233, label %235

233:                                              ; preds = %227
  %234 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %235

235:                                              ; preds = %233, %227
  %236 = phi i64* [ %234, %233 ], [ %229, %227 ]
  %237 = ptrtoint i64* %236 to i64
  %238 = add i64 %237, 8
  %239 = inttoptr i64 %238 to i64*
  store i64* %239, i64** %228, align 8
  store i64 %222, i64* %236, align 8
  br label %240

240:                                              ; preds = %225, %235
  %241 = phi i64* [ %226, %225 ], [ %236, %235 ]
  %242 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %66, i64* %241, i8 zeroext 0) #11
  br i1 %8, label %277, label %243

243:                                              ; preds = %240
  %244 = load i64, i64* %242, align 8
  %245 = load i64, i64* %1, align 8
  %246 = add i64 %244, 11
  %247 = inttoptr i64 %246 to i32*
  %248 = trunc i64 %245 to i32
  store atomic volatile i32 %248, i32* %247 monotonic, align 4
  %249 = and i64 %245, 1
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %262, label %251

251:                                              ; preds = %243
  %252 = and i64 %244, -262144
  %253 = or i64 %252, 8
  %254 = inttoptr i64 %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = and i64 %255, 262144
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %251
  %259 = or i64 %252, 16
  %260 = inttoptr i64 %259 to %"class.v8::internal::Heap"**
  %261 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %260, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %261, i64 %244, i64 %246, i64 %245) #11
  br label %262

262:                                              ; preds = %258, %251, %243
  %263 = and i64 %245, -262144
  %264 = or i64 %263, 8
  %265 = inttoptr i64 %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = and i64 %266, 24
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %277, label %269

269:                                              ; preds = %262
  %270 = and i64 %244, -262144
  %271 = or i64 %270, 8
  %272 = inttoptr i64 %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = and i64 %273, 24
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %269
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %244, i64 %246, i64 %245) #11
  br label %277

277:                                              ; preds = %276, %269, %262, %240
  %278 = load i64, i64* %242, align 8
  %279 = load i64, i64* %68, align 8
  %280 = add i64 %278, 15
  %281 = inttoptr i64 %280 to i32*
  %282 = trunc i64 %279 to i32
  store atomic volatile i32 %282, i32* %281 monotonic, align 4
  %283 = and i64 %279, 1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %296, label %285

285:                                              ; preds = %277
  %286 = and i64 %278, -262144
  %287 = or i64 %286, 8
  %288 = inttoptr i64 %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = and i64 %289, 262144
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %296, label %292

292:                                              ; preds = %285
  %293 = or i64 %286, 16
  %294 = inttoptr i64 %293 to %"class.v8::internal::Heap"**
  %295 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %294, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %295, i64 %278, i64 %280, i64 %279) #11
  br label %296

296:                                              ; preds = %292, %285, %277
  %297 = and i64 %279, -262144
  %298 = or i64 %297, 8
  %299 = inttoptr i64 %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = and i64 %300, 24
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %311, label %303

303:                                              ; preds = %296
  %304 = and i64 %278, -262144
  %305 = or i64 %304, 8
  %306 = inttoptr i64 %305 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = and i64 %307, 24
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %303
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %278, i64 %280, i64 %279) #11
  br label %311

311:                                              ; preds = %296, %303, %310
  %312 = load i64, i64* %242, align 8
  %313 = shl i32 %3, 1
  %314 = add i64 %312, 19
  %315 = inttoptr i64 %314 to i32*
  store atomic volatile i32 %313, i32* %315 monotonic, align 4
  %316 = load i64, i64* %242, align 8
  %317 = load i64, i64* %182, align 8
  %318 = add i64 %316, 23
  %319 = inttoptr i64 %318 to i32*
  %320 = trunc i64 %317 to i32
  store atomic volatile i32 %320, i32* %319 monotonic, align 4
  %321 = and i64 %317, 1
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %346, label %323

323:                                              ; preds = %311
  %324 = and i64 %316, -262144
  %325 = or i64 %324, 8
  %326 = inttoptr i64 %325 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = and i64 %327, 262144
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %334, label %330

330:                                              ; preds = %323
  %331 = or i64 %324, 16
  %332 = inttoptr i64 %331 to %"class.v8::internal::Heap"**
  %333 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %332, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %333, i64 %316, i64 %318, i64 %317) #11
  br label %334

334:                                              ; preds = %330, %323
  %335 = and i64 %317, -262144
  %336 = or i64 %335, 8
  %337 = inttoptr i64 %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = and i64 %338, 24
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %346, label %341

341:                                              ; preds = %334
  %342 = load i64, i64* %326, align 8
  %343 = and i64 %342, 24
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %341
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %316, i64 %318, i64 %317) #11
  br label %346

346:                                              ; preds = %311, %334, %341, %345
  %347 = load i64, i64* %242, align 8
  %348 = shl i32 %2, 1
  %349 = add i64 %347, 31
  %350 = inttoptr i64 %349 to i32*
  store atomic volatile i32 %348, i32* %350 monotonic, align 4
  %351 = load i64, i64* %242, align 8
  %352 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  %353 = load i64, i64* %352, align 8
  %354 = add i64 %351, 27
  %355 = inttoptr i64 %354 to i32*
  %356 = trunc i64 %353 to i32
  store atomic volatile i32 %356, i32* %355 monotonic, align 4
  %357 = and i64 %353, 1
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %370, label %359

359:                                              ; preds = %346
  %360 = and i64 %351, -262144
  %361 = or i64 %360, 8
  %362 = inttoptr i64 %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = and i64 %363, 262144
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %370, label %366

366:                                              ; preds = %359
  %367 = or i64 %360, 16
  %368 = inttoptr i64 %367 to %"class.v8::internal::Heap"**
  %369 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %368, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %369, i64 %351, i64 %354, i64 %353) #11
  br label %370

370:                                              ; preds = %366, %359, %346
  %371 = and i64 %353, -262144
  %372 = or i64 %371, 8
  %373 = inttoptr i64 %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = and i64 %374, 24
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %370
  %378 = and i64 %351, -262144
  %379 = or i64 %378, 8
  %380 = inttoptr i64 %379 to i64*
  %381 = load i64, i64* %380, align 8
  %382 = and i64 %381, 24
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %377
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %351, i64 %354, i64 %353) #11
  br label %385

385:                                              ; preds = %370, %377, %384
  %386 = icmp eq %"class.v8::internal::Handle.1592"* %6, null
  br i1 %386, label %389, label %387

387:                                              ; preds = %385
  %388 = bitcast %"class.v8::internal::Handle.1592"* %6 to i64*
  store i64 %69, i64* %388, align 8
  br label %389

389:                                              ; preds = %385, %387
  ret i64* %242
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.v8::internal::wasm::WasmModule"* @_ZN2v88internal18WasmInstanceObject6moduleEv(%"class.v8::internal::WasmInstanceObject"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::WasmInstanceObject", %"class.v8::internal::WasmInstanceObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 111
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 11
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  %15 = add i64 %14, 3
  %16 = inttoptr i64 %15 to %"struct.v8::internal::ManagedPtrDestructor"**
  %17 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %16, align 1
  %18 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %17, i64 0, i32 3
  %19 = bitcast i8** %18 to %"class.std::__1::shared_ptr.1273"**
  %20 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %20, i64 0, i32 0
  %22 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %22, i64 0, i32 4, i32 0
  %24 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %23, align 8
  ret %"struct.v8::internal::wasm::WasmModule"* %24
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15WasmTableObject16AddDispatchTableEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_18WasmInstanceObjectEEEi(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 27
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %13 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %13, i64 %11) #11
  %17 = load i64, i64* %16, align 8
  br label %31

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = icmp eq i64* %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %26

26:                                               ; preds = %24, %18
  %27 = phi i64* [ %25, %24 ], [ %20, %18 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %28, 8
  %30 = inttoptr i64 %29 to i64*
  store i64* %30, i64** %19, align 8
  store i64 %11, i64* %27, align 8
  br label %31

31:                                               ; preds = %15, %26
  %32 = phi i64 [ %17, %15 ], [ %11, %26 ]
  %33 = phi i64* [ %16, %15 ], [ %27, %26 ]
  %34 = icmp eq i64* %2, null
  br i1 %34, label %116, label %35

35:                                               ; preds = %31
  %36 = add i64 %32, 3
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = lshr i32 %38, 1
  %40 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %41 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"* %40, i64* %33, i32 3) #11
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %2, align 8
  %44 = shl i32 %39, 2
  %45 = sext i32 %44 to i64
  %46 = add nsw i64 %45, 7
  %47 = add i64 %46, %42
  %48 = inttoptr i64 %47 to i32*
  %49 = trunc i64 %43 to i32
  store atomic volatile i32 %49, i32* %48 monotonic, align 4
  %50 = and i64 %43, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %75, label %52

52:                                               ; preds = %35
  %53 = and i64 %42, -262144
  %54 = or i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, 262144
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %52
  %60 = or i64 %53, 16
  %61 = inttoptr i64 %60 to %"class.v8::internal::Heap"**
  %62 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %61, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %62, i64 %42, i64 %47, i64 %43) #11
  br label %63

63:                                               ; preds = %59, %52
  %64 = and i64 %43, -262144
  %65 = or i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 24
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %63
  %71 = load i64, i64* %55, align 8
  %72 = and i64 %71, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %42, i64 %47, i64 %43) #11
  br label %75

75:                                               ; preds = %35, %63, %70, %74
  %76 = load i64, i64* %41, align 8
  %77 = shl i32 %3, 1
  %78 = add i32 %44, 4
  %79 = sext i32 %78 to i64
  %80 = add nsw i64 %79, 7
  %81 = add i64 %80, %76
  %82 = inttoptr i64 %81 to i32*
  store atomic volatile i32 %77, i32* %82 monotonic, align 4
  %83 = load i64, i64* %1, align 8
  %84 = load i64, i64* %41, align 8
  %85 = add i64 %83, 27
  %86 = inttoptr i64 %85 to i32*
  %87 = trunc i64 %84 to i32
  store atomic volatile i32 %87, i32* %86 monotonic, align 4
  %88 = and i64 %84, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %101, label %90

90:                                               ; preds = %75
  %91 = and i64 %83, -262144
  %92 = or i64 %91, 8
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 262144
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %90
  %98 = or i64 %91, 16
  %99 = inttoptr i64 %98 to %"class.v8::internal::Heap"**
  %100 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %99, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %100, i64 %83, i64 %85, i64 %84) #11
  br label %101

101:                                              ; preds = %97, %90, %75
  %102 = and i64 %84, -262144
  %103 = or i64 %102, 8
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = and i64 %105, 24
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %101
  %109 = and i64 %83, -262144
  %110 = or i64 %109, 8
  %111 = inttoptr i64 %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 24
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %108
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %83, i64 %85, i64 %84) #11
  br label %116

116:                                              ; preds = %115, %108, %101, %31
  ret void
}

declare i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15WasmTableObject4GrowEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 19
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  %10 = icmp eq i32 %2, 0
  br i1 %10, label %222, label %11

11:                                               ; preds = %4
  %12 = and i64 %5, -4294967296
  %13 = add i64 %5, 23
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = and i64 %16, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %11
  %21 = icmp slt i32 %15, 0
  br i1 %21, label %46, label %22

22:                                               ; preds = %20
  %23 = lshr i32 %15, 1
  br label %48

24:                                               ; preds = %11
  %25 = add i64 %17, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %12, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 66
  br i1 %33, label %34, label %46

34:                                               ; preds = %24
  %35 = add i64 %17, 3
  %36 = inttoptr i64 %35 to double*
  %37 = load double, double* %36, align 1
  %38 = fadd double %37, 0x4330000000000000
  %39 = bitcast double %38 to i64
  %40 = and i64 %39, -4294967296
  %41 = icmp eq i64 %40, 4841369599423283200
  br i1 %41, label %42, label %46

42:                                               ; preds = %34
  %43 = trunc i64 %39 to i32
  %44 = uitofp i32 %43 to double
  %45 = fcmp oeq double %37, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %34, %24, %20, %42
  %47 = load i32, i32* @_ZN2v88internal24FLAG_wasm_max_table_sizeE, align 4
  br label %48

48:                                               ; preds = %22, %42, %46
  %49 = phi i32 [ %43, %42 ], [ %47, %46 ], [ %23, %22 ]
  %50 = load i32, i32* @_ZN2v88internal24FLAG_wasm_max_table_sizeE, align 4
  %51 = icmp ult i32 %50, %49
  %52 = select i1 %51, i32 %50, i32 %49
  %53 = sub i32 %52, %9
  %54 = icmp ult i32 %53, %2
  br i1 %54, label %222, label %55

55:                                               ; preds = %48
  %56 = add i32 %9, %2
  %57 = add i64 %5, 15
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %12, %60
  %62 = add i64 %61, 3
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = ashr i32 %64, 1
  %66 = icmp ugt i32 %56, %65
  br i1 %66, label %67, label %129

67:                                               ; preds = %55
  %68 = sub nsw i32 %56, %65
  %69 = icmp slt i32 %68, %65
  %70 = select i1 %69, i32 %65, i32 %68
  %71 = sub i32 %52, %65
  %72 = icmp slt i32 %71, %70
  %73 = select i1 %72, i32 %71, i32 %70
  %74 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %76 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %75, align 8
  %77 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %67
  %79 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %76, i64 %61) #11
  br label %93

80:                                               ; preds = %67
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %82 = load i64*, i64** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = icmp eq i64* %82, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %80
  %87 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %88

88:                                               ; preds = %86, %80
  %89 = phi i64* [ %87, %86 ], [ %82, %80 ]
  %90 = ptrtoint i64* %89 to i64
  %91 = add i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  store i64* %92, i64** %81, align 8
  store i64 %61, i64* %89, align 8
  br label %93

93:                                               ; preds = %78, %88
  %94 = phi i64* [ %79, %78 ], [ %89, %88 ]
  %95 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"* %74, i64* %94, i32 %73) #11
  %96 = load i64, i64* %1, align 8
  %97 = load i64, i64* %95, align 8
  %98 = add i64 %96, 15
  %99 = inttoptr i64 %98 to i32*
  %100 = trunc i64 %97 to i32
  store atomic volatile i32 %100, i32* %99 monotonic, align 4
  %101 = and i64 %97, 1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %93
  %104 = and i64 %96, -262144
  %105 = or i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 262144
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %103
  %111 = or i64 %104, 16
  %112 = inttoptr i64 %111 to %"class.v8::internal::Heap"**
  %113 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %112, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %113, i64 %96, i64 %98, i64 %97) #11
  br label %114

114:                                              ; preds = %110, %103, %93
  %115 = and i64 %97, -262144
  %116 = or i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = and i64 %118, 24
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %129, label %121

121:                                              ; preds = %114
  %122 = and i64 %96, -262144
  %123 = or i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 24
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %121
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %96, i64 %98, i64 %97) #11
  br label %129

129:                                              ; preds = %128, %121, %114, %55
  %130 = load i64, i64* %1, align 8
  %131 = shl i32 %56, 1
  %132 = add i64 %130, 19
  %133 = inttoptr i64 %132 to i32*
  store atomic volatile i32 %131, i32* %133 monotonic, align 4
  %134 = load i64, i64* %1, align 8
  %135 = and i64 %134, -4294967296
  %136 = add i64 %134, 27
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i64
  %140 = or i64 %135, %139
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %142 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %141, align 8
  %143 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %129
  %145 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %142, i64 %140) #11
  %146 = load i64, i64* %145, align 8
  br label %160

147:                                              ; preds = %129
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %149 = load i64*, i64** %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %151 = load i64*, i64** %150, align 8
  %152 = icmp eq i64* %149, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %147
  %154 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %155

155:                                              ; preds = %153, %147
  %156 = phi i64* [ %154, %153 ], [ %149, %147 ]
  %157 = ptrtoint i64* %156 to i64
  %158 = add i64 %157, 8
  %159 = inttoptr i64 %158 to i64*
  store i64* %159, i64** %148, align 8
  store i64 %140, i64* %156, align 8
  br label %160

160:                                              ; preds = %144, %155
  %161 = phi i64 [ %146, %144 ], [ %140, %155 ]
  %162 = phi i64* [ %145, %144 ], [ %156, %155 ]
  %163 = add i64 %161, 3
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = icmp sgt i32 %165, 1
  br i1 %166, label %167, label %170

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  br label %172

170:                                              ; preds = %207, %160
  %171 = icmp ult i32 %9, %56
  br i1 %171, label %218, label %222

172:                                              ; preds = %167, %207
  %173 = phi i64 [ 0, %167 ], [ %210, %207 ]
  %174 = phi i64 [ %161, %167 ], [ %211, %207 ]
  %175 = and i64 %174, -4294967296
  %176 = shl i64 %173, 34
  %177 = add i64 %176, 17179869184
  %178 = ashr exact i64 %177, 32
  %179 = add i64 %174, 7
  %180 = add i64 %179, %178
  %181 = inttoptr i64 %180 to i32*
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = ashr i32 %182, 1
  %184 = trunc i64 %173 to i32
  %185 = shl i32 %184, 2
  %186 = sext i32 %185 to i64
  %187 = add i64 %179, %186
  %188 = inttoptr i64 %187 to i32*
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = zext i32 %189 to i64
  %191 = or i64 %175, %190
  %192 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %141, align 8
  %193 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %172
  %195 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %192, i64 %191) #11
  br label %207

196:                                              ; preds = %172
  %197 = load i64*, i64** %168, align 8
  %198 = load i64*, i64** %169, align 8
  %199 = icmp eq i64* %197, %198
  br i1 %199, label %200, label %202

200:                                              ; preds = %196
  %201 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %202

202:                                              ; preds = %200, %196
  %203 = phi i64* [ %201, %200 ], [ %197, %196 ]
  %204 = ptrtoint i64* %203 to i64
  %205 = add i64 %204, 8
  %206 = inttoptr i64 %205 to i64*
  store i64* %206, i64** %168, align 8
  store i64 %191, i64* %203, align 8
  br label %207

207:                                              ; preds = %194, %202
  %208 = phi i64* [ %195, %194 ], [ %203, %202 ]
  %209 = tail call zeroext i1 @_ZN2v88internal18WasmInstanceObject42EnsureIndirectFunctionTableWithMinimumSizeENS0_6HandleIS1_EEij(i64* %208, i32 %183, i32 %56)
  %210 = add nuw nsw i64 %173, 3
  %211 = load i64, i64* %162, align 8
  %212 = add i64 %211, 3
  %213 = inttoptr i64 %212 to i32*
  %214 = load i32, i32* %213, align 4
  %215 = ashr i32 %214, 1
  %216 = sext i32 %215 to i64
  %217 = icmp slt i64 %210, %216
  br i1 %217, label %172, label %170

218:                                              ; preds = %170, %218
  %219 = phi i32 [ %220, %218 ], [ %9, %170 ]
  tail call void @_ZN2v88internal15WasmTableObject3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %219, i64* %3)
  %220 = add i32 %219, 1
  %221 = icmp eq i32 %220, %56
  br i1 %221, label %222, label %218

222:                                              ; preds = %218, %170, %48, %4
  %223 = phi i32 [ %9, %4 ], [ -1, %48 ], [ %9, %170 ], [ %9, %218 ]
  ret i32 %223
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal18WasmInstanceObject42EnsureIndirectFunctionTableWithMinimumSizeENS0_6HandleIS1_EEij(i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::IndirectFunctionTableEntry", align 8
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = icmp sgt i32 %1, 0
  br i1 %12, label %13, label %48

13:                                               ; preds = %3
  %14 = and i64 %5, -4294967296
  %15 = add i64 %5, 143
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = shl i32 %1, 2
  %21 = sext i32 %20 to i64
  %22 = add nsw i64 %21, 7
  %23 = add i64 %22, %19
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %14, %26
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %13
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %27) #11
  br label %46

33:                                               ; preds = %13
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #11
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64* [ %40, %39 ], [ %35, %33 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %34, align 8
  store i64 %27, i64* %42, align 8
  br label %46

46:                                               ; preds = %31, %41
  %47 = phi i64* [ %32, %31 ], [ %42, %41 ]
  tail call void @_ZN2v88internal25WasmIndirectFunctionTable6ResizeEPNS0_7IsolateENS0_6HandleIS1_EEj(%"class.v8::internal::Isolate"* %11, i64* %47, i32 %2)
  br label %223

48:                                               ; preds = %3
  %49 = add i64 %5, 75
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp ult i32 %51, %2
  br i1 %52, label %53, label %223

53:                                               ; preds = %48
  %54 = and i64 %5, -4294967296
  %55 = add i64 %5, 147
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %54, %58
  %60 = add i64 %59, 3
  %61 = inttoptr i64 %60 to %"struct.v8::internal::ManagedPtrDestructor"**
  %62 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %61, align 1
  %63 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %62, i64 0, i32 3
  %64 = bitcast i8** %63 to %"class.std::__1::shared_ptr.1809"**
  %65 = load %"class.std::__1::shared_ptr.1809"*, %"class.std::__1::shared_ptr.1809"** %64, align 8
  %66 = getelementptr %"class.std::__1::shared_ptr.1809", %"class.std::__1::shared_ptr.1809"* %65, i64 0, i32 0
  %67 = load %"class.v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations"*, %"class.v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations"** %66, align 8
  %68 = getelementptr %"class.v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations", %"class.v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations"* %67, i64 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp ult i32 %69, %2
  br i1 %70, label %71, label %210

71:                                               ; preds = %53
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31
  %73 = bitcast %"struct.v8::internal::HandleScopeData"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %77, align 8
  %80 = load i32, i32* %68, align 8
  %81 = shl i32 %80, 1
  %82 = icmp ugt i32 %81, %2
  %83 = select i1 %82, i32 %81, i32 %2
  %84 = icmp sgt i32 %80, -1
  br i1 %84, label %86, label %85, !prof !4

85:                                               ; preds = %71
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i64 0, i64 0)) #16
  unreachable

86:                                               ; preds = %71
  %87 = icmp sgt i32 %83, -1
  br i1 %87, label %89, label %88, !prof !4

88:                                               ; preds = %86
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.32, i64 0, i64 0)) #16
  unreachable

89:                                               ; preds = %86
  %90 = load i64, i64* %0, align 8
  %91 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations", %"class.v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations"* %67, i64 0, i32 1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1538", %"class.std::__1::unique_ptr.1538"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = zext i32 %80 to i64
  %95 = zext i32 %83 to i64
  %96 = shl nuw nsw i64 %95, 2
  %97 = tail call i8* @_Znam(i64 %96) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %97, i8 0, i64 %96, i1 false) #11
  %98 = icmp eq i32 %80, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %89
  %100 = shl nuw nsw i64 %94, 2
  %101 = bitcast i32* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %97, i8* align 4 %101, i64 %100, i1 false) #11
  br label %102

102:                                              ; preds = %99, %89
  %103 = ptrtoint i8* %97 to i64
  %104 = bitcast %"class.std::__1::unique_ptr.1538"* %91 to i64*
  store i64 %103, i64* %104, align 8
  %105 = icmp eq i32* %93, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = bitcast i32* %93 to i8*
  tail call void @_ZdaPv(i8* %107) #15
  %108 = load i64, i64* %104, align 8
  br label %109

109:                                              ; preds = %106, %102
  %110 = phi i64 [ %108, %106 ], [ %103, %102 ]
  %111 = add i64 %90, 67
  %112 = inttoptr i64 %111 to i64*
  store i64 %110, i64* %112, align 1
  %113 = load i64, i64* %0, align 8
  %114 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations", %"class.v8::internal::(anonymous namespace)::WasmInstanceNativeAllocations"* %67, i64 0, i32 2
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.1654", %"class.std::__1::unique_ptr.1654"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = load i64*, i64** %115, align 8
  %117 = shl nuw nsw i64 %95, 3
  %118 = tail call i8* @_Znam(i64 %117) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 %117, i1 false) #11
  br i1 %98, label %122, label %119

119:                                              ; preds = %109
  %120 = shl nuw nsw i64 %94, 3
  %121 = bitcast i64* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %118, i8* align 8 %121, i64 %120, i1 false) #11
  br label %122

122:                                              ; preds = %119, %109
  %123 = ptrtoint i8* %118 to i64
  %124 = bitcast %"class.std::__1::unique_ptr.1654"* %114 to i64*
  store i64 %123, i64* %124, align 8
  %125 = icmp eq i64* %116, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %122
  %127 = bitcast i64* %116 to i8*
  tail call void @_ZdaPv(i8* %127) #15
  %128 = load i64, i64* %124, align 8
  br label %129

129:                                              ; preds = %126, %122
  %130 = phi i64 [ %128, %126 ], [ %123, %122 ]
  %131 = add i64 %113, 59
  %132 = inttoptr i64 %131 to i64*
  store i64 %130, i64* %132, align 1
  %133 = load i64, i64* %0, align 8
  %134 = and i64 %133, -4294967296
  %135 = add i64 %133, 55
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i64
  %139 = or i64 %134, %138
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %141 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %140, align 8
  %142 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %129
  %144 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %141, i64 %139) #11
  br label %157

145:                                              ; preds = %129
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %147 = load i64*, i64** %146, align 8
  %148 = load i64*, i64** %75, align 8
  %149 = icmp eq i64* %147, %148
  br i1 %149, label %150, label %152

150:                                              ; preds = %145
  %151 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #11
  br label %152

152:                                              ; preds = %150, %145
  %153 = phi i64* [ %151, %150 ], [ %147, %145 ]
  %154 = ptrtoint i64* %153 to i64
  %155 = add i64 %154, 8
  %156 = inttoptr i64 %155 to i64*
  store i64* %156, i64** %146, align 8
  store i64 %139, i64* %153, align 8
  br label %157

157:                                              ; preds = %152, %143
  %158 = phi i64* [ %144, %143 ], [ %153, %152 ]
  %159 = inttoptr i64 %10 to %"class.v8::internal::Factory"*
  %160 = sub nsw i32 %83, %80
  %161 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"* %159, i64* %158, i32 %160) #11
  %162 = load i64, i64* %0, align 8
  %163 = load i64, i64* %161, align 8
  %164 = add i64 %162, 55
  %165 = inttoptr i64 %164 to i32*
  %166 = trunc i64 %163 to i32
  store atomic volatile i32 %166, i32* %165 monotonic, align 4
  %167 = and i64 %163, 1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %180, label %169

169:                                              ; preds = %157
  %170 = and i64 %162, -262144
  %171 = or i64 %170, 8
  %172 = inttoptr i64 %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = and i64 %173, 262144
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %180, label %176

176:                                              ; preds = %169
  %177 = or i64 %170, 16
  %178 = inttoptr i64 %177 to %"class.v8::internal::Heap"**
  %179 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %178, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %179, i64 %162, i64 %164, i64 %163) #11
  br label %180

180:                                              ; preds = %176, %169, %157
  %181 = and i64 %163, -262144
  %182 = or i64 %181, 8
  %183 = inttoptr i64 %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = and i64 %184, 24
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %195, label %187

187:                                              ; preds = %180
  %188 = and i64 %162, -262144
  %189 = or i64 %188, 8
  %190 = inttoptr i64 %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = and i64 %191, 24
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %162, i64 %164, i64 %163) #11
  br label %195

195:                                              ; preds = %180, %187, %194
  store i32 %83, i32* %68, align 8
  %196 = icmp eq i64 %10, 0
  br i1 %196, label %210, label %197

197:                                              ; preds = %195
  %198 = inttoptr i64 %74 to i64*
  %199 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %72, i64 0, i32 0
  %200 = load i64*, i64** %199, align 8
  store i64 %74, i64* %73, align 8
  %201 = load i32, i32* %77, align 8
  %202 = add nsw i32 %201, -1
  store i32 %202, i32* %77, align 8
  %203 = load i64*, i64** %75, align 8
  %204 = icmp eq i64* %203, %76
  br i1 %204, label %207, label %205

205:                                              ; preds = %197
  store i64* %76, i64** %75, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %11) #11
  %206 = load i64*, i64** %199, align 8
  br label %207

207:                                              ; preds = %205, %197
  %208 = phi i64* [ %206, %205 ], [ %198, %197 ]
  %209 = phi i64* [ %76, %205 ], [ %200, %197 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %208, i64* %209) #11
  br label %210

210:                                              ; preds = %53, %195, %207
  %211 = load i64, i64* %0, align 8
  %212 = add i64 %211, 75
  %213 = inttoptr i64 %212 to i32*
  store i32 %2, i32* %213, align 4
  %214 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %4 to i8*
  %215 = ptrtoint i64* %0 to i64
  %216 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %4 to i64*
  %217 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %4, i64 0, i32 1, i32 0, i32 0
  %218 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %4, i64 0, i32 2
  br label %219

219:                                              ; preds = %219, %210
  %220 = phi i32 [ %51, %210 ], [ %221, %219 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #11
  store i64 %215, i64* %216, align 8
  store i64* null, i64** %217, align 8
  store i32 %220, i32* %218, align 8
  call void @_ZN2v88internal26IndirectFunctionTableEntry5clearEv(%"class.v8::internal::IndirectFunctionTableEntry"* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #11
  %221 = add i32 %220, 1
  %222 = icmp eq i32 %221, %2
  br i1 %222, label %223, label %219

223:                                              ; preds = %219, %48, %46
  %224 = phi i1 [ true, %46 ], [ false, %48 ], [ true, %219 ]
  ret i1 %224
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15WasmTableObject3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %13 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %13, i64 %11) #11
  br label %30

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi i64* [ %24, %23 ], [ %19, %17 ]
  %27 = ptrtoint i64* %26 to i64
  %28 = add i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  store i64* %29, i64** %18, align 8
  store i64 %11, i64* %26, align 8
  br label %30

30:                                               ; preds = %15, %25
  %31 = phi i64* [ %16, %15 ], [ %26, %25 ]
  %32 = load i64, i64* %1, align 8
  %33 = add i64 %32, 31
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = lshr i32 %35, 6
  %37 = and i32 %36, 1048575
  switch i32 %37, label %75 [
    i32 1000001, label %38
    i32 1000005, label %38
    i32 1000000, label %72
    i32 1000002, label %73
    i32 1000004, label %73
    i32 1000003, label %73
    i32 1000006, label %74
  ]

38:                                               ; preds = %30, %30
  %39 = load i64, i64* %31, align 8
  %40 = load i64, i64* %3, align 8
  %41 = shl i32 %2, 2
  %42 = sext i32 %41 to i64
  %43 = add nsw i64 %42, 7
  %44 = add i64 %43, %39
  %45 = inttoptr i64 %44 to i32*
  %46 = trunc i64 %40 to i32
  store atomic volatile i32 %46, i32* %45 monotonic, align 4
  %47 = and i64 %40, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %76, label %49

49:                                               ; preds = %38
  %50 = and i64 %39, -262144
  %51 = or i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 262144
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = or i64 %50, 16
  %58 = inttoptr i64 %57 to %"class.v8::internal::Heap"**
  %59 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %58, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %59, i64 %39, i64 %44, i64 %40) #11
  br label %60

60:                                               ; preds = %56, %49
  %61 = and i64 %40, -262144
  %62 = or i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 24
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %76, label %67

67:                                               ; preds = %60
  %68 = load i64, i64* %52, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %39, i64 %44, i64 %40) #11
  br label %76

72:                                               ; preds = %30
  tail call void @_ZN2v88internal15WasmTableObject21SetFunctionTableEntryEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10FixedArrayEEEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %31, i32 %2, i64* %3)
  br label %76

73:                                               ; preds = %30, %30, %30
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

74:                                               ; preds = %30
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

75:                                               ; preds = %30
  tail call void @_ZN2v88internal15WasmTableObject21SetFunctionTableEntryEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10FixedArrayEEEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %31, i32 %2, i64* %3)
  br label %76

76:                                               ; preds = %71, %67, %60, %38, %75, %72
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15WasmTableObject10IsInBoundsEPNS0_7IsolateENS0_6HandleIS1_EEj(%"class.v8::internal::Isolate"* nocapture readnone, i64*, i32) local_unnamed_addr #3 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = ashr i32 %7, 1
  %9 = icmp ugt i32 %8, %2
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15WasmTableObject14IsValidElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 11
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %14 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %13, i64 0, i32 0, i32 1
  %17 = load i8, i8* %16, align 8, !range !5
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %13, i64 0, i32 1, i64 0
  br label %29

21:                                               ; preds = %15, %3
  %22 = and i64 %12, -262144
  %23 = or i64 %22, 16
  %24 = inttoptr i64 %23 to i64*
  %25 = load i64, i64* %24, align 16
  %26 = add i64 %25, -41416
  %27 = inttoptr i64 %26 to %"class.v8::internal::Isolate"*
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %29

29:                                               ; preds = %19, %21
  %30 = phi i64* [ %28, %21 ], [ %20, %19 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 4
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = icmp eq i32 %10, %33
  br i1 %34, label %56, label %35

35:                                               ; preds = %29
  %36 = add i64 %12, 111
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %7, %39
  %41 = add i64 %40, 11
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %7, %44
  %46 = add i64 %45, 3
  %47 = inttoptr i64 %46 to %"struct.v8::internal::ManagedPtrDestructor"**
  %48 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %47, align 1
  %49 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %48, i64 0, i32 3
  %50 = bitcast i8** %49 to %"class.std::__1::shared_ptr.1273"**
  %51 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %51, i64 0, i32 0
  %53 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %53, i64 0, i32 4, i32 0
  %55 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %54, align 8
  br label %56

56:                                               ; preds = %29, %35
  %57 = phi %"struct.v8::internal::wasm::WasmModule"* [ %55, %35 ], [ null, %29 ]
  %58 = add i64 %6, 31
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = ashr i32 %60, 1
  %62 = call zeroext i1 @_ZN2v88internal4wasm17TypecheckJSObjectEPNS0_7IsolateEPKNS1_10WasmModuleENS0_6HandleINS0_6ObjectEEENS1_9ValueTypeEPPKc(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::wasm::WasmModule"* %57, i64* %2, i32 %61, i8** nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm17TypecheckJSObjectEPNS0_7IsolateEPKNS1_10WasmModuleENS0_6HandleINS0_6ObjectEEENS1_9ValueTypeEPPKc(%"class.v8::internal::Isolate"*, %"struct.v8::internal::wasm::WasmModule"*, i64*, i32, i8** nocapture) local_unnamed_addr #0 {
  %6 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %9 = alloca %"class.v8::internal::LookupIterator", align 8
  %10 = alloca %"class.v8::internal::WasmCapiFunction", align 8
  %11 = trunc i32 %3 to i8
  %12 = and i8 %11, 31
  switch i8 %12, label %464 [
    i8 11, label %13
    i8 10, label %20
    i8 8, label %462
    i8 9, label %462
    i8 6, label %463
    i8 7, label %463
    i8 1, label %463
    i8 2, label %463
    i8 3, label %463
    i8 4, label %463
    i8 5, label %463
    i8 0, label %463
    i8 12, label %463
  ]

13:                                               ; preds = %5
  %14 = load i64, i64* %2, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %14 to i32
  %18 = trunc i64 %16 to i32
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %465, label %20

20:                                               ; preds = %13, %5
  %21 = lshr i32 %3, 5
  %22 = and i32 %21, 1048575
  switch i32 %22, label %208 [
    i32 1000000, label %23
    i32 1000001, label %465
    i32 1000005, label %465
    i32 1000004, label %130
    i32 1000002, label %130
    i32 1000003, label %130
  ]

23:                                               ; preds = %20
  %24 = load i64, i64* %2, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %90, label %27

27:                                               ; preds = %23
  %28 = and i64 %24, -4294967296
  %29 = add i64 %24, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = add i16 %36, -1059
  %38 = icmp ult i16 %37, 15
  br i1 %38, label %39, label %58

39:                                               ; preds = %27
  %40 = add i64 %24, 23
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %28, %43
  %45 = add i64 %44, 27
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 15
  %49 = icmp eq i32 %48, 7
  br i1 %49, label %465, label %50

50:                                               ; preds = %39
  %51 = load atomic i32, i32* %41 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %28, %52
  %54 = add i64 %53, 31
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = icmp eq i32 %56, 573
  br i1 %57, label %465, label %58

58:                                               ; preds = %50, %27
  %59 = load atomic i32, i32* %30 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %28, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = add i16 %64, -1059
  %66 = icmp ult i16 %65, 15
  br i1 %66, label %67, label %90

67:                                               ; preds = %58
  %68 = add i64 %24, 11
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %28, %71
  %73 = add i64 %72, 3
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 acquire, align 4
  %76 = zext i32 %75 to i64
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %67
  %80 = or i64 %28, %76
  %81 = add i64 %80, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %28, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp eq i16 %88, 74
  br i1 %89, label %465, label %90

90:                                               ; preds = %23, %67, %58, %79
  %91 = load i64, i64* %2, align 8
  %92 = and i64 %91, 1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %129, label %94

94:                                               ; preds = %90
  %95 = and i64 %91, -4294967296
  %96 = add i64 %91, -1
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %95, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i16*
  %103 = load atomic i16, i16* %102 monotonic, align 2
  %104 = add i16 %103, -1059
  %105 = icmp ult i16 %104, 15
  br i1 %105, label %106, label %129

106:                                              ; preds = %94
  %107 = add i64 %91, 11
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %95, %110
  %112 = add i64 %111, 3
  %113 = inttoptr i64 %112 to i32*
  %114 = load atomic i32, i32* %113 acquire, align 4
  %115 = zext i32 %114 to i64
  %116 = and i64 %115, 1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %129, label %118

118:                                              ; preds = %106
  %119 = or i64 %95, %115
  %120 = add i64 %119, -1
  %121 = inttoptr i64 %120 to i32*
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %95, %123
  %125 = add i64 %124, 7
  %126 = inttoptr i64 %125 to i16*
  %127 = load atomic i16, i16* %126 monotonic, align 2
  %128 = icmp eq i16 %127, 72
  br i1 %128, label %465, label %129

129:                                              ; preds = %118, %90, %106, %94
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i64 0, i64 0), i8** %4, align 8
  br label %465

130:                                              ; preds = %20, %20, %20
  %131 = load i8, i8* @_ZN2v88internal23FLAG_wasm_gc_js_interopE, align 1, !range !5
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %193

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 505
  %135 = bitcast %"class.v8::internal::LookupIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %135) #11
  %136 = ptrtoint i64* %2 to i64
  %137 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 0
  %138 = icmp eq i64* %134, null
  br i1 %138, label %139, label %143

139:                                              ; preds = %133
  %140 = load i64, i64* null, align 536870912
  %141 = add i64 %140, -1
  %142 = inttoptr i64 %141 to i32*
  br label %157

143:                                              ; preds = %133
  %144 = load i64, i64* %134, align 8
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %144, -1
  %148 = inttoptr i64 %147 to i32*
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i64 %146, 4294967295
  %151 = icmp eq i64 %150, 0
  tail call void @llvm.assume(i1 %151) #11
  %152 = zext i32 %149 to i64
  %153 = or i64 %146, %152
  %154 = add i64 %153, 7
  %155 = inttoptr i64 %154 to i16*
  %156 = load atomic i16, i16* %155 monotonic, align 2
  br label %157

157:                                              ; preds = %139, %143
  %158 = phi i32* [ %142, %139 ], [ %148, %143 ]
  %159 = phi i64 [ %140, %139 ], [ %144, %143 ]
  store i32 0, i32* %137, align 8
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 1
  store i32 4, i32* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 2
  store i8 0, i8* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 3
  store i32 0, i32* %162, align 4
  %163 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 4, i32 0
  store i32 0, i32* %163, align 8
  %164 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %164, align 8
  %165 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 6, i32 0, i32 0
  store i64* %134, i64** %165, align 8
  %166 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %166, align 8
  %167 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %168, align 8
  %169 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 10
  %170 = bitcast %"class.v8::internal::Handle.1600"* %169 to i64*
  store i64 %136, i64* %170, align 8
  %171 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %9, i64 0, i32 11
  %172 = bitcast i64* %171 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 -1, i64 16, i1 false) #11
  %173 = and i64 %159, -4294967296
  %174 = load atomic i32, i32* %158 monotonic, align 4
  %175 = zext i32 %174 to i64
  %176 = or i64 %173, %175
  %177 = add i64 %176, 7
  %178 = inttoptr i64 %177 to i16*
  %179 = load atomic i16, i16* %178 monotonic, align 2
  %180 = and i16 %179, -32
  %181 = icmp eq i16 %180, 32
  br i1 %181, label %182, label %186

182:                                              ; preds = %157
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %184 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %183, align 8
  %185 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %184, %"class.v8::internal::Isolate"* %0, i64* %134) #11
  br label %186

186:                                              ; preds = %157, %182
  %187 = phi i64* [ %185, %182 ], [ %134, %157 ]
  store i64* %187, i64** %165, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %9) #11
  %188 = load i32, i32* %160, align 4
  %189 = icmp eq i32 %188, 6
  br i1 %189, label %191, label %190

190:                                              ; preds = %186
  store i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.20, i64 0, i64 0), i8** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %135) #11
  br label %465

191:                                              ; preds = %186
  %192 = call i64* @_ZNK2v88internal14LookupIterator12GetDataValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* nonnull %9, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %135) #11
  br label %193

193:                                              ; preds = %191, %130
  %194 = phi i64* [ %192, %191 ], [ %2, %130 ]
  %195 = and i32 %3, 30
  %196 = icmp eq i32 %195, 10
  br i1 %196, label %197, label %203

197:                                              ; preds = %193
  switch i32 %22, label %203 [
    i32 1000002, label %465
    i32 1000004, label %198
  ]

198:                                              ; preds = %197
  %199 = load i64, i64* %194, align 8
  %200 = and i64 %199, 1
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %465

202:                                              ; preds = %198
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i64 0, i64 0), i8** %4, align 8
  br label %465

203:                                              ; preds = %197, %193
  %204 = load i64, i64* %194, align 8
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %465, label %207

207:                                              ; preds = %203
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i8** %4, align 8
  br label %465

208:                                              ; preds = %20
  %209 = icmp eq %"struct.v8::internal::wasm::WasmModule"* %1, null
  br i1 %209, label %210, label %211

210:                                              ; preds = %208
  store i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.23, i64 0, i64 0), i8** %4, align 8
  br label %465

211:                                              ; preds = %208
  %212 = zext i32 %22 to i64
  %213 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %1, i64 0, i32 20
  %214 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %1, i64 0, i32 20, i32 0, i32 1
  %215 = bitcast %"struct.v8::internal::wasm::TypeDefinition"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.std::__1::vector.1309"* %213 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = sub i64 %216, %218
  %220 = ashr exact i64 %219, 3
  %221 = icmp ugt i64 %220, %212
  br i1 %221, label %222, label %461

222:                                              ; preds = %211
  %223 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %1, i64 0, i32 21, i32 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = getelementptr inbounds i8, i8* %224, i64 %212
  %226 = load i8, i8* %225, align 1
  %227 = icmp eq i8 %226, 96
  br i1 %227, label %228, label %461

228:                                              ; preds = %222
  %229 = load i64, i64* %2, align 8
  %230 = and i64 %229, 1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %411, label %232

232:                                              ; preds = %228
  %233 = and i64 %229, -4294967296
  %234 = add i64 %229, -1
  %235 = inttoptr i64 %234 to i32*
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = zext i32 %236 to i64
  %238 = or i64 %233, %237
  %239 = add i64 %238, 7
  %240 = inttoptr i64 %239 to i16*
  %241 = load atomic i16, i16* %240 monotonic, align 2
  %242 = add i16 %241, -1059
  %243 = icmp ult i16 %242, 15
  br i1 %243, label %244, label %321

244:                                              ; preds = %232
  %245 = add i64 %229, 23
  %246 = inttoptr i64 %245 to i32*
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = zext i32 %247 to i64
  %249 = or i64 %233, %248
  %250 = add i64 %249, 27
  %251 = inttoptr i64 %250 to i32*
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 15
  %254 = icmp eq i32 %253, 7
  br i1 %254, label %263, label %255

255:                                              ; preds = %244
  %256 = load atomic i32, i32* %246 monotonic, align 4
  %257 = zext i32 %256 to i64
  %258 = or i64 %233, %257
  %259 = add i64 %258, 31
  %260 = inttoptr i64 %259 to i32*
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = icmp eq i32 %261, 573
  br i1 %262, label %263, label %321

263:                                              ; preds = %255, %244
  %264 = bitcast %"class.v8::internal::SharedFunctionInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #11
  %265 = add i64 %229, 11
  %266 = inttoptr i64 %265 to i32*
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = zext i32 %267 to i64
  %269 = or i64 %233, %268
  %270 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %269, i64* %270, align 8
  %271 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %6) #11
  %272 = and i64 %271, -4294967296
  %273 = add i64 %271, 19
  %274 = inttoptr i64 %273 to i32*
  %275 = load i32, i32* %274, align 4
  %276 = zext i32 %275 to i64
  %277 = or i64 %272, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %264) #11
  %278 = add i64 %277, 111
  %279 = inttoptr i64 %278 to i32*
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i64
  %282 = or i64 %272, %281
  %283 = add i64 %282, 11
  %284 = inttoptr i64 %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = zext i32 %285 to i64
  %287 = or i64 %272, %286
  %288 = add i64 %287, 3
  %289 = inttoptr i64 %288 to %"struct.v8::internal::ManagedPtrDestructor"**
  %290 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %289, align 1
  %291 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %290, i64 0, i32 3
  %292 = bitcast i8** %291 to %"class.std::__1::shared_ptr.1273"**
  %293 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %292, align 8
  %294 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %293, i64 0, i32 0
  %295 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %294, align 8
  %296 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %295, i64 0, i32 4, i32 0
  %297 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %296, align 8
  %298 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %298) #11
  %299 = load atomic i32, i32* %266 monotonic, align 4
  %300 = zext i32 %299 to i64
  %301 = or i64 %233, %300
  %302 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %301, i64* %302, align 8
  %303 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %7) #11
  %304 = add i64 %303, 23
  %305 = inttoptr i64 %304 to i32*
  %306 = load i32, i32* %305, align 4
  %307 = ashr i32 %306, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %298) #11
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %297, i64 0, i32 23, i32 0, i32 0
  %310 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %309, align 8
  %311 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %310, i64 %308, i32 2
  %312 = load i32, i32* %311, align 4
  %313 = shl i32 %312, 5
  %314 = or i32 %313, 10
  %315 = icmp eq i32 %314, %3
  %316 = icmp eq %"struct.v8::internal::wasm::WasmModule"* %297, %1
  %317 = and i1 %316, %315
  br i1 %317, label %465, label %318

318:                                              ; preds = %263
  %319 = call zeroext i1 @_ZN2v88internal4wasm15IsSubtypeOfImplENS1_9ValueTypeES2_PKNS1_10WasmModuleES5_(i32 %314, i32 %3, %"struct.v8::internal::wasm::WasmModule"* %297, %"struct.v8::internal::wasm::WasmModule"* nonnull %1) #11
  br i1 %319, label %465, label %320

320:                                              ; preds = %318
  store i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.24, i64 0, i64 0), i8** %4, align 8
  br label %465

321:                                              ; preds = %232, %255
  %322 = load atomic i32, i32* %235 monotonic, align 4
  %323 = zext i32 %322 to i64
  %324 = or i64 %233, %323
  %325 = add i64 %324, 7
  %326 = inttoptr i64 %325 to i16*
  %327 = load atomic i16, i16* %326 monotonic, align 2
  %328 = add i16 %327, -1059
  %329 = icmp ult i16 %328, 15
  br i1 %329, label %330, label %411

330:                                              ; preds = %321
  %331 = add i64 %229, 11
  %332 = inttoptr i64 %331 to i32*
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = zext i32 %333 to i64
  %335 = or i64 %233, %334
  %336 = add i64 %335, 3
  %337 = inttoptr i64 %336 to i32*
  %338 = load atomic i32, i32* %337 acquire, align 4
  %339 = zext i32 %338 to i64
  %340 = and i64 %339, 1
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %411, label %342

342:                                              ; preds = %330
  %343 = or i64 %233, %339
  %344 = add i64 %343, -1
  %345 = inttoptr i64 %344 to i32*
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = zext i32 %346 to i64
  %348 = or i64 %233, %347
  %349 = add i64 %348, 7
  %350 = inttoptr i64 %349 to i16*
  %351 = load atomic i16, i16* %350 monotonic, align 2
  %352 = icmp eq i16 %351, 74
  br i1 %352, label %353, label %411

353:                                              ; preds = %342
  %354 = load i64, i64* %2, align 8
  %355 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %1, i64 0, i32 20, i32 0, i32 0
  %356 = load %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"** %355, align 8
  %357 = getelementptr inbounds %"struct.v8::internal::wasm::TypeDefinition", %"struct.v8::internal::wasm::TypeDefinition"* %356, i64 %212, i32 0, i32 0
  %358 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %357, align 8
  %359 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %358, i64 0, i32 2
  %360 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %359, align 8
  %361 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %358, i64 0, i32 0
  %362 = load i64, i64* %361, align 8
  %363 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %360, i64 %362
  %364 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %358, i64 0, i32 1
  %365 = load i64, i64* %364, align 8
  %366 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %363, i64 %365
  %367 = ptrtoint %"class.v8::internal::wasm::ValueType"* %360 to i64
  %368 = ptrtoint %"class.v8::internal::wasm::ValueType"* %366 to i64
  %369 = sub i64 %368, %367
  %370 = trunc i64 %362 to i32
  %371 = bitcast %"class.v8::internal::SharedFunctionInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %371) #11
  %372 = add i64 %354, 11
  %373 = inttoptr i64 %372 to i32*
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = and i64 %354, -4294967296
  %376 = zext i32 %374 to i64
  %377 = or i64 %375, %376
  %378 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %377, i64* %378, align 8
  %379 = call i64 @_ZNK2v88internal18SharedFunctionInfo21wasm_js_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %371) #11
  %380 = add i64 %379, 23
  %381 = inttoptr i64 %380 to i32*
  %382 = load i32, i32* %381, align 4
  %383 = ashr i32 %382, 1
  %384 = icmp eq i32 %383, %370
  br i1 %384, label %385, label %410

385:                                              ; preds = %353
  %386 = trunc i64 %365 to i32
  %387 = add i64 %379, 27
  %388 = inttoptr i64 %387 to i32*
  %389 = load i32, i32* %388, align 4
  %390 = ashr i32 %389, 1
  %391 = icmp eq i32 %390, %386
  br i1 %391, label %392, label %410

392:                                              ; preds = %385
  %393 = and i64 %369, 17179869180
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %465, label %395

395:                                              ; preds = %392
  %396 = bitcast %"class.v8::internal::wasm::ValueType"** %359 to i8**
  %397 = load i8*, i8** %396, align 8
  %398 = and i64 %379, -4294967296
  %399 = add i64 %379, 31
  %400 = inttoptr i64 %399 to i32*
  %401 = load i32, i32* %400, align 4
  %402 = zext i32 %401 to i64
  %403 = or i64 %398, %402
  %404 = add i64 %403, 7
  %405 = inttoptr i64 %404 to i8*
  %406 = shl i64 %369, 30
  %407 = ashr exact i64 %406, 30
  %408 = call i32 @bcmp(i8* %405, i8* %397, i64 %407) #11
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %465, label %410

410:                                              ; preds = %353, %385, %395
  store i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.25, i64 0, i64 0), i8** %4, align 8
  br label %465

411:                                              ; preds = %228, %330, %321, %342
  %412 = load i64, i64* %2, align 8
  %413 = and i64 %412, 1
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %460, label %415

415:                                              ; preds = %411
  %416 = and i64 %412, -4294967296
  %417 = add i64 %412, -1
  %418 = inttoptr i64 %417 to i32*
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = zext i32 %419 to i64
  %421 = or i64 %416, %420
  %422 = add i64 %421, 7
  %423 = inttoptr i64 %422 to i16*
  %424 = load atomic i16, i16* %423 monotonic, align 2
  %425 = add i16 %424, -1059
  %426 = icmp ult i16 %425, 15
  br i1 %426, label %427, label %460

427:                                              ; preds = %415
  %428 = add i64 %412, 11
  %429 = inttoptr i64 %428 to i32*
  %430 = load atomic i32, i32* %429 monotonic, align 4
  %431 = zext i32 %430 to i64
  %432 = or i64 %416, %431
  %433 = add i64 %432, 3
  %434 = inttoptr i64 %433 to i32*
  %435 = load atomic i32, i32* %434 acquire, align 4
  %436 = zext i32 %435 to i64
  %437 = and i64 %436, 1
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %460, label %439

439:                                              ; preds = %427
  %440 = or i64 %416, %436
  %441 = add i64 %440, -1
  %442 = inttoptr i64 %441 to i32*
  %443 = load atomic i32, i32* %442 monotonic, align 4
  %444 = zext i32 %443 to i64
  %445 = or i64 %416, %444
  %446 = add i64 %445, 7
  %447 = inttoptr i64 %446 to i16*
  %448 = load atomic i16, i16* %447 monotonic, align 2
  %449 = icmp eq i16 %448, 72
  br i1 %449, label %450, label %460

450:                                              ; preds = %439
  %451 = bitcast %"class.v8::internal::WasmCapiFunction"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %451) #11
  %452 = load i64, i64* %2, align 8
  %453 = getelementptr inbounds %"class.v8::internal::WasmCapiFunction", %"class.v8::internal::WasmCapiFunction"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %452, i64* %453, align 8
  %454 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %1, i64 0, i32 20, i32 0, i32 0
  %455 = load %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"** %454, align 8
  %456 = getelementptr inbounds %"struct.v8::internal::wasm::TypeDefinition", %"struct.v8::internal::wasm::TypeDefinition"* %455, i64 %212, i32 0, i32 0
  %457 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %456, align 8
  %458 = call zeroext i1 @_ZNK2v88internal16WasmCapiFunction16MatchesSignatureEPKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::WasmCapiFunction"* nonnull %10, %"class.v8::internal::Signature"* %457)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %451) #11
  br i1 %458, label %465, label %459

459:                                              ; preds = %450
  store i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.26, i64 0, i64 0), i8** %4, align 8
  br label %465

460:                                              ; preds = %411, %427, %415, %439
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i64 0, i64 0), i8** %4, align 8
  br label %465

461:                                              ; preds = %211, %222
  store i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.27, i64 0, i64 0), i8** %4, align 8
  br label %465

462:                                              ; preds = %5, %5
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i8** %4, align 8
  br label %465

463:                                              ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

464:                                              ; preds = %5
  unreachable

465:                                              ; preds = %118, %197, %392, %263, %50, %39, %320, %318, %450, %395, %203, %198, %190, %20, %20, %79, %13, %462, %461, %460, %459, %410, %210, %207, %202, %129
  %466 = phi i1 [ false, %462 ], [ false, %210 ], [ false, %410 ], [ false, %459 ], [ false, %460 ], [ false, %461 ], [ false, %202 ], [ false, %207 ], [ false, %129 ], [ true, %13 ], [ true, %79 ], [ true, %118 ], [ true, %20 ], [ true, %20 ], [ false, %190 ], [ true, %197 ], [ true, %198 ], [ true, %203 ], [ true, %395 ], [ true, %450 ], [ false, %320 ], [ true, %318 ], [ true, %39 ], [ true, %50 ], [ true, %263 ], [ true, %392 ]
  ret i1 %466
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15WasmTableObject21SetFunctionTableEntryEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10FixedArrayEEEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = load i64, i64* %4, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %8 to i32
  %12 = trunc i64 %10 to i32
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %48

14:                                               ; preds = %5
  tail call void @_ZN2v88internal15WasmTableObject19ClearDispatchTablesEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %3)
  %15 = load i64, i64* %2, align 8
  %16 = load i64, i64* %9, align 8
  %17 = shl i32 %3, 2
  %18 = sext i32 %17 to i64
  %19 = add nsw i64 %18, 7
  %20 = add i64 %19, %15
  %21 = inttoptr i64 %20 to i32*
  %22 = trunc i64 %16 to i32
  store atomic volatile i32 %22, i32* %21 monotonic, align 4
  %23 = and i64 %16, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %226, label %25

25:                                               ; preds = %14
  %26 = and i64 %15, -262144
  %27 = or i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 262144
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %25
  %33 = or i64 %26, 16
  %34 = inttoptr i64 %33 to %"class.v8::internal::Heap"**
  %35 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %34, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %35, i64 %15, i64 %20, i64 %16) #11
  br label %36

36:                                               ; preds = %32, %25
  %37 = and i64 %16, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 24
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %226, label %43

43:                                               ; preds = %36
  %44 = load i64, i64* %28, align 8
  %45 = and i64 %44, 24
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %226

47:                                               ; preds = %43
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %15, i64 %20, i64 %16) #11
  br label %226

48:                                               ; preds = %5
  %49 = and i64 %8, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %191, label %51

51:                                               ; preds = %48
  %52 = and i64 %8, -4294967296
  %53 = add i64 %8, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = add i16 %60, -1059
  %62 = icmp ult i16 %61, 15
  br i1 %62, label %63, label %158

63:                                               ; preds = %51
  %64 = add i64 %8, 23
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %52, %67
  %69 = add i64 %68, 27
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 15
  %73 = icmp eq i32 %72, 7
  br i1 %73, label %82, label %74

74:                                               ; preds = %63
  %75 = load atomic i32, i32* %65 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %52, %76
  %78 = add i64 %77, 31
  %79 = inttoptr i64 %78 to i32*
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = icmp eq i32 %80, 573
  br i1 %81, label %82, label %158

82:                                               ; preds = %74, %63
  %83 = bitcast %"class.v8::internal::SharedFunctionInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  %84 = add i64 %8, 11
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %52, %87
  %89 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %88, i64* %89, align 8
  %90 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %6) #11
  %91 = and i64 %90, -4294967296
  %92 = add i64 %90, 19
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %91, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %98 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %97, align 8
  %99 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %82
  %101 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %98, i64 %96) #11
  br label %115

102:                                              ; preds = %82
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %106 = load i64*, i64** %105, align 8
  %107 = icmp eq i64* %104, %106
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  %109 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %110

110:                                              ; preds = %108, %102
  %111 = phi i64* [ %109, %108 ], [ %104, %102 ]
  %112 = ptrtoint i64* %111 to i64
  %113 = add i64 %112, 8
  %114 = inttoptr i64 %113 to i64*
  store i64* %114, i64** %103, align 8
  store i64 %96, i64* %111, align 8
  br label %115

115:                                              ; preds = %100, %110
  %116 = phi i64* [ %101, %100 ], [ %111, %110 ]
  %117 = load i64, i64* %4, align 8
  %118 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #11
  %119 = add i64 %117, 11
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i64 %117, -4294967296
  %123 = zext i32 %121 to i64
  %124 = or i64 %122, %123
  %125 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %124, i64* %125, align 8
  %126 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %7) #11
  %127 = add i64 %126, 23
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = ashr i32 %129, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #11
  %131 = load i64, i64* %116, align 8
  %132 = and i64 %131, -4294967296
  %133 = add i64 %131, 111
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %132, %136
  %138 = add i64 %137, 11
  %139 = inttoptr i64 %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  %142 = or i64 %132, %141
  %143 = add i64 %142, 3
  %144 = inttoptr i64 %143 to %"struct.v8::internal::ManagedPtrDestructor"**
  %145 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %144, align 1
  %146 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %145, i64 0, i32 3
  %147 = bitcast i8** %146 to %"class.std::__1::shared_ptr.1273"**
  %148 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %148, i64 0, i32 0
  %150 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %150, i64 0, i32 4, i32 0
  %152 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %151, align 8
  %153 = sext i32 %130 to i64
  %154 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %152, i64 0, i32 23, i32 0, i32 0
  %155 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %154, align 8
  %156 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %155, i64 %153, i32 0
  %157 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %156, align 8
  call void @_ZN2v88internal15WasmTableObject20UpdateDispatchTablesEPNS0_7IsolateENS0_6HandleIS1_EEiPKNS0_9SignatureINS0_4wasm9ValueTypeEEENS4_INS0_18WasmInstanceObjectEEEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %3, %"class.v8::internal::Signature"* %157, i64* %116, i32 %130)
  br label %192

158:                                              ; preds = %51, %74
  %159 = load atomic i32, i32* %54 monotonic, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %52, %160
  %162 = add i64 %161, 7
  %163 = inttoptr i64 %162 to i16*
  %164 = load atomic i16, i16* %163 monotonic, align 2
  %165 = add i16 %164, -1059
  %166 = icmp ult i16 %165, 15
  br i1 %166, label %167, label %191

167:                                              ; preds = %158
  %168 = add i64 %8, 11
  %169 = inttoptr i64 %168 to i32*
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %52, %171
  %173 = add i64 %172, 3
  %174 = inttoptr i64 %173 to i32*
  %175 = load atomic i32, i32* %174 acquire, align 4
  %176 = zext i32 %175 to i64
  %177 = and i64 %176, 1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %191, label %179

179:                                              ; preds = %167
  %180 = or i64 %52, %176
  %181 = add i64 %180, -1
  %182 = inttoptr i64 %181 to i32*
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = zext i32 %183 to i64
  %185 = or i64 %52, %184
  %186 = add i64 %185, 7
  %187 = inttoptr i64 %186 to i16*
  %188 = load atomic i16, i16* %187 monotonic, align 2
  %189 = icmp eq i16 %188, 74
  br i1 %189, label %190, label %191

190:                                              ; preds = %179
  tail call void @_ZN2v88internal15WasmTableObject20UpdateDispatchTablesEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_14WasmJSFunctionEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %3, i64* %4)
  br label %192

191:                                              ; preds = %48, %167, %158, %179
  tail call void @_ZN2v88internal15WasmTableObject20UpdateDispatchTablesEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_16WasmCapiFunctionEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %3, i64* %4)
  br label %192

192:                                              ; preds = %190, %191, %115
  %193 = load i64, i64* %2, align 8
  %194 = load i64, i64* %4, align 8
  %195 = shl i32 %3, 2
  %196 = sext i32 %195 to i64
  %197 = add nsw i64 %196, 7
  %198 = add i64 %197, %193
  %199 = inttoptr i64 %198 to i32*
  %200 = trunc i64 %194 to i32
  store atomic volatile i32 %200, i32* %199 monotonic, align 4
  %201 = and i64 %194, 1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %226, label %203

203:                                              ; preds = %192
  %204 = and i64 %193, -262144
  %205 = or i64 %204, 8
  %206 = inttoptr i64 %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = and i64 %207, 262144
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %214, label %210

210:                                              ; preds = %203
  %211 = or i64 %204, 16
  %212 = inttoptr i64 %211 to %"class.v8::internal::Heap"**
  %213 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %212, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %213, i64 %193, i64 %198, i64 %194) #11
  br label %214

214:                                              ; preds = %210, %203
  %215 = and i64 %194, -262144
  %216 = or i64 %215, 8
  %217 = inttoptr i64 %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = and i64 %218, 24
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %226, label %221

221:                                              ; preds = %214
  %222 = load i64, i64* %206, align 8
  %223 = and i64 %222, 24
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %221
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %193, i64 %198, i64 %194) #11
  br label %226

226:                                              ; preds = %225, %221, %214, %192, %47, %43, %36, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15WasmTableObject19ClearDispatchTablesEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::IndirectFunctionTableEntry", align 8
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 27
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %13 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %3
  %16 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %13, i64 %11) #11
  %17 = load i64, i64* %16, align 8
  br label %31

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = icmp eq i64* %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %26

26:                                               ; preds = %24, %18
  %27 = phi i64* [ %25, %24 ], [ %20, %18 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %28, 8
  %30 = inttoptr i64 %29 to i64*
  store i64* %30, i64** %19, align 8
  store i64 %11, i64* %27, align 8
  br label %31

31:                                               ; preds = %15, %26
  %32 = phi i64 [ %17, %15 ], [ %11, %26 ]
  %33 = phi i64* [ %16, %15 ], [ %27, %26 ]
  %34 = add i64 %32, 3
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %46

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %41 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %4 to i8*
  %42 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %4, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %4, i64 0, i32 1, i32 0, i32 0
  %44 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %4 to i64*
  %45 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %4, i64 0, i32 2
  br label %47

46:                                               ; preds = %127, %31
  ret void

47:                                               ; preds = %38, %127
  %48 = phi i64 [ 0, %38 ], [ %129, %127 ]
  %49 = phi i64 [ %32, %38 ], [ %130, %127 ]
  %50 = and i64 %49, -4294967296
  %51 = shl i64 %48, 34
  %52 = add i64 %51, 17179869184
  %53 = ashr exact i64 %52, 32
  %54 = add i64 %49, 7
  %55 = add i64 %54, %53
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = ashr i32 %57, 1
  %59 = trunc i64 %48 to i32
  %60 = shl i32 %59, 2
  %61 = sext i32 %60 to i64
  %62 = add i64 %54, %61
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %50, %65
  %67 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %68 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %47
  %70 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %67, i64 %66) #11
  br label %82

71:                                               ; preds = %47
  %72 = load i64*, i64** %39, align 8
  %73 = load i64*, i64** %40, align 8
  %74 = icmp eq i64* %72, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %77

77:                                               ; preds = %75, %71
  %78 = phi i64* [ %76, %75 ], [ %72, %71 ]
  %79 = ptrtoint i64* %78 to i64
  %80 = add i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  store i64* %81, i64** %39, align 8
  store i64 %66, i64* %78, align 8
  br label %82

82:                                               ; preds = %69, %77
  %83 = phi i64* [ %70, %69 ], [ %78, %77 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  %84 = icmp eq i32 %58, 0
  br i1 %84, label %125, label %85

85:                                               ; preds = %82
  store i64* null, i64** %42, align 8
  %86 = load i64, i64* %83, align 8
  %87 = and i64 %86, -4294967296
  %88 = add i64 %86, 143
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %87, %91
  %93 = shl i32 %58, 2
  %94 = sext i32 %93 to i64
  %95 = add nsw i64 %94, 7
  %96 = add i64 %95, %92
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %87, %99
  %101 = and i64 %86, -262144
  %102 = or i64 %101, 16
  %103 = inttoptr i64 %102 to i64*
  %104 = load i64, i64* %103, align 16
  %105 = add i64 %104, -41416
  %106 = inttoptr i64 %105 to %"class.v8::internal::Isolate"*
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %106, i64 0, i32 31, i32 4
  %108 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %107, align 8
  %109 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %85
  %111 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %108, i64 %100) #11
  br label %127

112:                                              ; preds = %85
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %106, i64 0, i32 31, i32 0
  %114 = load i64*, i64** %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %106, i64 0, i32 31, i32 1
  %116 = load i64*, i64** %115, align 8
  %117 = icmp eq i64* %114, %116
  br i1 %117, label %118, label %120

118:                                              ; preds = %112
  %119 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %106) #11
  br label %120

120:                                              ; preds = %118, %112
  %121 = phi i64* [ %119, %118 ], [ %114, %112 ]
  %122 = ptrtoint i64* %121 to i64
  %123 = add i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  store i64* %124, i64** %113, align 8
  store i64 %100, i64* %121, align 8
  br label %127

125:                                              ; preds = %82
  %126 = ptrtoint i64* %83 to i64
  store i64 %126, i64* %44, align 8
  br label %127

127:                                              ; preds = %110, %120, %125
  %128 = phi i64* [ null, %125 ], [ %111, %110 ], [ %121, %120 ]
  store i64* %128, i64** %43, align 8
  store i32 %2, i32* %45, align 8
  call void @_ZN2v88internal26IndirectFunctionTableEntry5clearEv(%"class.v8::internal::IndirectFunctionTableEntry"* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  %129 = add nuw nsw i64 %48, 3
  %130 = load i64, i64* %33, align 8
  %131 = add i64 %130, 3
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = ashr i32 %133, 1
  %135 = sext i32 %134 to i64
  %136 = icmp slt i64 %129, %135
  br i1 %136, label %47, label %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal20WasmExportedFunction22IsWasmExportedFunctionENS0_6ObjectE(i64) local_unnamed_addr #0 align 2 {
  %2 = and i64 %0, 1
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %36, label %4

4:                                                ; preds = %1
  %5 = and i64 %0, -4294967296
  %6 = add i64 %0, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = add i16 %13, -1059
  %15 = icmp ult i16 %14, 15
  br i1 %15, label %16, label %36

16:                                               ; preds = %4
  %17 = add i64 %0, 23
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %5, %20
  %22 = add i64 %21, 27
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 15
  %26 = icmp eq i32 %25, 7
  br i1 %26, label %35, label %27

27:                                               ; preds = %16
  %28 = load atomic i32, i32* %18 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %5, %29
  %31 = add i64 %30, 31
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = icmp eq i32 %33, 573
  br i1 %34, label %35, label %36

35:                                               ; preds = %16, %27
  br label %36

36:                                               ; preds = %1, %35, %27, %4
  %37 = phi i1 [ false, %4 ], [ true, %35 ], [ false, %27 ], [ false, %1 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal20WasmExportedFunction8instanceEv(%"class.v8::internal::WasmExportedFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %3 = bitcast %"class.v8::internal::SharedFunctionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.v8::internal::WasmExportedFunction", %"class.v8::internal::WasmExportedFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %2) #11
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, 19
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal20WasmExportedFunction14function_indexEv(%"class.v8::internal::WasmExportedFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %3 = bitcast %"class.v8::internal::SharedFunctionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.v8::internal::WasmExportedFunction", %"class.v8::internal::WasmExportedFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %2) #11
  %14 = add i64 %13, 23
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = ashr i32 %16, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15WasmTableObject20UpdateDispatchTablesEPNS0_7IsolateENS0_6HandleIS1_EEiPKNS0_9SignatureINS0_4wasm9ValueTypeEEENS4_INS0_18WasmInstanceObjectEEEi(%"class.v8::internal::Isolate"*, i64*, i32, %"class.v8::internal::Signature"*, i64* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::IndirectFunctionTableEntry", align 8
  %8 = load i64, i64* %1, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 27
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %16 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %17 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %6
  %19 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %16, i64 %14) #11
  %20 = load i64, i64* %19, align 8
  br label %34

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %14, i64* %30, align 8
  br label %34

34:                                               ; preds = %18, %29
  %35 = phi i64 [ %20, %18 ], [ %14, %29 ]
  %36 = phi i64* [ %19, %18 ], [ %30, %29 ]
  %37 = add i64 %35, 3
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 1
  br i1 %40, label %41, label %54

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %44 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %7 to i8*
  %45 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %7, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %7, i64 0, i32 1, i32 0, i32 0
  %47 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %7 to i64*
  %48 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %7, i64 0, i32 2
  %49 = zext i32 %5 to i64
  %50 = shl i32 %5, 2
  %51 = sext i32 %50 to i64
  %52 = add nsw i64 %51, 7
  %53 = sext i32 %5 to i64
  br label %55

54:                                               ; preds = %213, %34
  ret void

55:                                               ; preds = %41, %213
  %56 = phi i64 [ 0, %41 ], [ %216, %213 ]
  %57 = phi i64 [ %35, %41 ], [ %217, %213 ]
  %58 = and i64 %57, -4294967296
  %59 = shl i64 %56, 34
  %60 = add i64 %59, 17179869184
  %61 = ashr exact i64 %60, 32
  %62 = add i64 %57, 7
  %63 = add i64 %62, %61
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = ashr i32 %65, 1
  %67 = trunc i64 %56 to i32
  %68 = shl i32 %67, 2
  %69 = sext i32 %68 to i64
  %70 = add i64 %62, %69
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %58, %73
  %75 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %76 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %55
  %78 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %75, i64 %74) #11
  %79 = load i64, i64* %78, align 8
  br label %91

80:                                               ; preds = %55
  %81 = load i64*, i64** %42, align 8
  %82 = load i64*, i64** %43, align 8
  %83 = icmp eq i64* %81, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %86

86:                                               ; preds = %84, %80
  %87 = phi i64* [ %85, %84 ], [ %81, %80 ]
  %88 = ptrtoint i64* %87 to i64
  %89 = add i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  store i64* %90, i64** %42, align 8
  store i64 %74, i64* %87, align 8
  br label %91

91:                                               ; preds = %77, %86
  %92 = phi i64 [ %79, %77 ], [ %74, %86 ]
  %93 = phi i64* [ %78, %77 ], [ %87, %86 ]
  %94 = and i64 %92, -4294967296
  %95 = add i64 %92, 111
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %94, %98
  %100 = add i64 %99, 11
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %94, %103
  %105 = add i64 %104, 3
  %106 = inttoptr i64 %105 to %"struct.v8::internal::ManagedPtrDestructor"**
  %107 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %106, align 1
  %108 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %107, i64 0, i32 3
  %109 = bitcast i8** %108 to %"class.std::__1::shared_ptr.1273"**
  %110 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %110, i64 0, i32 0
  %112 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %112, i64 0, i32 4, i32 0
  %114 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %113, align 8
  %115 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %114, i64 0, i32 32
  %116 = tail call i32 @_ZNK2v88internal4wasm12SignatureMap4FindERKNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::SignatureMap"* %115, %"class.v8::internal::Signature"* dereferenceable(24) %3) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #11
  %117 = icmp eq i32 %66, 0
  br i1 %117, label %158, label %118

118:                                              ; preds = %91
  store i64* null, i64** %45, align 8
  %119 = load i64, i64* %93, align 8
  %120 = and i64 %119, -4294967296
  %121 = add i64 %119, 143
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %120, %124
  %126 = shl i32 %66, 2
  %127 = sext i32 %126 to i64
  %128 = add nsw i64 %127, 7
  %129 = add i64 %128, %125
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %120, %132
  %134 = and i64 %119, -262144
  %135 = or i64 %134, 16
  %136 = inttoptr i64 %135 to i64*
  %137 = load i64, i64* %136, align 16
  %138 = add i64 %137, -41416
  %139 = inttoptr i64 %138 to %"class.v8::internal::Isolate"*
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %139, i64 0, i32 31, i32 4
  %141 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %140, align 8
  %142 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %118
  %144 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %141, i64 %133) #11
  br label %160

145:                                              ; preds = %118
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %139, i64 0, i32 31, i32 0
  %147 = load i64*, i64** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %139, i64 0, i32 31, i32 1
  %149 = load i64*, i64** %148, align 8
  %150 = icmp eq i64* %147, %149
  br i1 %150, label %151, label %153

151:                                              ; preds = %145
  %152 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %139) #11
  br label %153

153:                                              ; preds = %151, %145
  %154 = phi i64* [ %152, %151 ], [ %147, %145 ]
  %155 = ptrtoint i64* %154 to i64
  %156 = add i64 %155, 8
  %157 = inttoptr i64 %156 to i64*
  store i64* %157, i64** %146, align 8
  store i64 %133, i64* %154, align 8
  br label %160

158:                                              ; preds = %91
  %159 = ptrtoint i64* %93 to i64
  store i64 %159, i64* %47, align 8
  br label %160

160:                                              ; preds = %143, %153, %158
  %161 = phi i64* [ null, %158 ], [ %144, %143 ], [ %154, %153 ]
  store i64* %161, i64** %46, align 8
  store i32 %2, i32* %48, align 8
  %162 = load i64, i64* %4, align 8
  %163 = and i64 %162, -4294967296
  %164 = add i64 %162, 111
  %165 = inttoptr i64 %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %163, %167
  %169 = add i64 %168, 11
  %170 = inttoptr i64 %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i64
  %173 = or i64 %163, %172
  %174 = add i64 %173, 3
  %175 = inttoptr i64 %174 to %"struct.v8::internal::ManagedPtrDestructor"**
  %176 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %175, align 1
  %177 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %176, i64 0, i32 3
  %178 = bitcast i8** %177 to %"class.std::__1::shared_ptr.1273"**
  %179 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %178, align 8
  %180 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %179, i64 0, i32 0
  %181 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %181, i64 0, i32 4, i32 0
  %183 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %182, align 8
  %184 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %183, i64 0, i32 13
  %185 = load i32, i32* %184, align 4
  %186 = icmp sgt i32 %185, %5
  br i1 %186, label %187, label %203

187:                                              ; preds = %160
  %188 = add i64 %162, 43
  %189 = inttoptr i64 %188 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  %192 = or i64 %163, %191
  %193 = add i64 %52, %192
  %194 = inttoptr i64 %193 to i32*
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = zext i32 %195 to i64
  %197 = or i64 %163, %196
  %198 = add i64 %162, 47
  %199 = inttoptr i64 %198 to i64**
  %200 = load i64*, i64** %199, align 1
  %201 = getelementptr inbounds i64, i64* %200, i64 %53
  %202 = load i64, i64* %201, align 8
  br label %213

203:                                              ; preds = %160
  %204 = icmp ugt i32 %185, %5
  br i1 %204, label %205, label %211

205:                                              ; preds = %203
  %206 = add i64 %162, 47
  %207 = inttoptr i64 %206 to i64**
  %208 = load i64*, i64** %207, align 1
  %209 = getelementptr inbounds i64, i64* %208, i64 %49
  %210 = load i64, i64* %209, align 8
  br label %213

211:                                              ; preds = %203
  %212 = tail call i64 @_ZNK2v88internal4wasm12NativeModule24GetCallTargetForFunctionEj(%"class.v8::internal::wasm::NativeModule"* %181, i32 %5) #11
  br label %213

213:                                              ; preds = %187, %205, %211
  %214 = phi i64 [ %197, %187 ], [ %162, %205 ], [ %162, %211 ]
  %215 = phi i64 [ %202, %187 ], [ %210, %205 ], [ %212, %211 ]
  call void @_ZN2v88internal26IndirectFunctionTableEntry3SetEimNS0_6ObjectE(%"class.v8::internal::IndirectFunctionTableEntry"* nonnull %7, i32 %116, i64 %215, i64 %214) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #11
  %216 = add nuw nsw i64 %56, 3
  %217 = load i64, i64* %36, align 8
  %218 = add i64 %217, 3
  %219 = inttoptr i64 %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = ashr i32 %220, 1
  %222 = sext i32 %221 to i64
  %223 = icmp slt i64 %216, %222
  br i1 %223, label %55, label %54
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14WasmJSFunction16IsWasmJSFunctionENS0_6ObjectE(i64) local_unnamed_addr #0 align 2 {
  %2 = and i64 %0, 1
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %39, label %4

4:                                                ; preds = %1
  %5 = and i64 %0, -4294967296
  %6 = add i64 %0, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = add i16 %13, -1059
  %15 = icmp ult i16 %14, 15
  br i1 %15, label %16, label %39

16:                                               ; preds = %4
  %17 = add i64 %0, 11
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %5, %20
  %22 = add i64 %21, 3
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = zext i32 %24 to i64
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %16
  %29 = or i64 %5, %25
  %30 = add i64 %29, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %5, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp eq i16 %37, 74
  br label %39

39:                                               ; preds = %1, %28, %16, %4
  %40 = phi i1 [ false, %4 ], [ false, %16 ], [ %38, %28 ], [ false, %1 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15WasmTableObject20UpdateDispatchTablesEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_14WasmJSFunctionEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 27
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %13 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %13, i64 %11) #11
  %17 = load i64, i64* %16, align 8
  br label %31

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = icmp eq i64* %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %26

26:                                               ; preds = %24, %18
  %27 = phi i64* [ %25, %24 ], [ %20, %18 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %28, 8
  %30 = inttoptr i64 %29 to i64*
  store i64* %30, i64** %19, align 8
  store i64 %11, i64* %27, align 8
  br label %31

31:                                               ; preds = %15, %26
  %32 = phi i64 [ %17, %15 ], [ %11, %26 ]
  %33 = phi i64* [ %16, %15 ], [ %27, %26 ]
  %34 = add i64 %32, 3
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  br label %42

41:                                               ; preds = %77, %31
  ret void

42:                                               ; preds = %38, %77
  %43 = phi i64 [ 0, %38 ], [ %79, %77 ]
  %44 = phi i64 [ %32, %38 ], [ %80, %77 ]
  %45 = and i64 %44, -4294967296
  %46 = shl i64 %43, 34
  %47 = add i64 %46, 17179869184
  %48 = ashr exact i64 %47, 32
  %49 = add i64 %44, 7
  %50 = add i64 %49, %48
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = ashr i32 %52, 1
  %54 = trunc i64 %43 to i32
  %55 = shl i32 %54, 2
  %56 = sext i32 %55 to i64
  %57 = add i64 %49, %56
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %45, %60
  %62 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %63 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %42
  %65 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %62, i64 %61) #11
  br label %77

66:                                               ; preds = %42
  %67 = load i64*, i64** %39, align 8
  %68 = load i64*, i64** %40, align 8
  %69 = icmp eq i64* %67, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %72

72:                                               ; preds = %70, %66
  %73 = phi i64* [ %71, %70 ], [ %67, %66 ]
  %74 = ptrtoint i64* %73 to i64
  %75 = add i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  store i64* %76, i64** %39, align 8
  store i64 %61, i64* %73, align 8
  br label %77

77:                                               ; preds = %64, %72
  %78 = phi i64* [ %65, %64 ], [ %73, %72 ]
  tail call void @_ZN2v88internal18WasmInstanceObject29ImportWasmJSFunctionIntoTableEPNS0_7IsolateENS0_6HandleIS1_EEiiNS4_INS0_14WasmJSFunctionEEE(%"class.v8::internal::Isolate"* %0, i64* %78, i32 %53, i32 %2, i64* %3)
  %79 = add nuw nsw i64 %43, 3
  %80 = load i64, i64* %33, align 8
  %81 = add i64 %80, 3
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = ashr i32 %83, 1
  %85 = sext i32 %84 to i64
  %86 = icmp slt i64 %79, %85
  br i1 %86, label %42, label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15WasmTableObject20UpdateDispatchTablesEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_16WasmCapiFunctionEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %6 = alloca %"class.v8::internal::Signature", align 8
  %7 = alloca %"class.v8::internal::wasm::WasmCodeRefScope", align 8
  %8 = alloca %"class.v8::internal::wasm::WasmImportWrapperCache::ModificationScope", align 8
  %9 = alloca %"struct.v8::internal::wasm::WasmImportWrapperCache::CacheKey", align 8
  %10 = alloca %"class.v8::internal::IndirectFunctionTableEntry", align 8
  %11 = load i64, i64* %1, align 8
  %12 = and i64 %11, -4294967296
  %13 = add i64 %11, 27
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %19 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %20 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %4
  %22 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %19, i64 %17) #11
  br label %36

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %17, i64* %32, align 8
  br label %36

36:                                               ; preds = %21, %31
  %37 = phi i64* [ %22, %21 ], [ %32, %31 ]
  %38 = load i64, i64* %3, align 8
  %39 = bitcast %"class.v8::internal::SharedFunctionInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = add i64 %38, 11
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i64 %38, -4294967296
  %44 = zext i32 %42 to i64
  %45 = or i64 %43, %44
  %46 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %45, i64* %46, align 8
  %47 = call i64 @_ZNK2v88internal18SharedFunctionInfo23wasm_capi_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %5) #11
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, 23
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  %54 = add i64 %53, 3
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = ashr i32 %56, 3
  %58 = add nsw i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %59, i64 4)
  %61 = extractvalue { i64, i1 } %60, 1
  %62 = extractvalue { i64, i1 } %60, 0
  %63 = select i1 %61, i64 -1, i64 %62
  %64 = call i8* @_Znam(i64 %63) #15
  %65 = bitcast i8* %64 to %"class.v8::internal::wasm::ValueType"*
  %66 = icmp eq i32 %58, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %36
  %68 = shl nsw i64 %59, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %64, i8 0, i64 %68, i1 false)
  br label %69

69:                                               ; preds = %67, %36
  %70 = icmp sgt i32 %56, 7
  br i1 %70, label %71, label %74

71:                                               ; preds = %69
  %72 = add i64 %53, 7
  %73 = sext i32 %57 to i64
  br label %109

74:                                               ; preds = %123, %69
  %75 = phi i32 [ undef, %69 ], [ %125, %123 ]
  %76 = sub nsw i32 %58, %75
  %77 = bitcast %"class.v8::internal::Signature"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #11
  %78 = sext i32 %75 to i64
  %79 = sext i32 %76 to i64
  %80 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %6, i64 0, i32 0
  store i64 %78, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %6, i64 0, i32 1
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %6, i64 0, i32 2
  %83 = bitcast %"class.v8::internal::wasm::ValueType"** %82 to i8**
  store i8* %64, i8** %83, align 8
  %84 = load i64, i64* %37, align 8
  %85 = add i64 %84, 3
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, 1
  br i1 %88, label %89, label %128

89:                                               ; preds = %74
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %92 = bitcast %"class.v8::internal::wasm::WasmCodeRefScope"* %7 to i8*
  %93 = bitcast %"class.v8::internal::wasm::WasmImportWrapperCache::ModificationScope"* %8 to i8*
  %94 = getelementptr inbounds %"class.v8::internal::wasm::WasmImportWrapperCache::ModificationScope", %"class.v8::internal::wasm::WasmImportWrapperCache::ModificationScope"* %8, i64 0, i32 0
  %95 = getelementptr inbounds %"class.v8::internal::wasm::WasmImportWrapperCache::ModificationScope", %"class.v8::internal::wasm::WasmImportWrapperCache::ModificationScope"* %8, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 160
  %97 = getelementptr inbounds %"struct.v8::internal::wasm::WasmImportWrapperCache::CacheKey", %"struct.v8::internal::wasm::WasmImportWrapperCache::CacheKey"* %9, i64 0, i32 0
  %98 = getelementptr inbounds %"struct.v8::internal::wasm::WasmImportWrapperCache::CacheKey", %"struct.v8::internal::wasm::WasmImportWrapperCache::CacheKey"* %9, i64 0, i32 2
  %99 = getelementptr inbounds %"struct.v8::internal::wasm::WasmImportWrapperCache::CacheKey", %"struct.v8::internal::wasm::WasmImportWrapperCache::CacheKey"* %9, i64 0, i32 3
  %100 = icmp eq i32 %76, 65535
  %101 = select i1 %100, i32 0, i32 %76
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %103 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %104 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %10 to i8*
  %105 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %10, i64 0, i32 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %10, i64 0, i32 1, i32 0, i32 0
  %107 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %10 to i64*
  %108 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %10, i64 0, i32 2
  br label %129

109:                                              ; preds = %71, %123
  %110 = phi i64 [ 0, %71 ], [ %126, %123 ]
  %111 = phi i32 [ undef, %71 ], [ %125, %123 ]
  %112 = phi i32 [ 0, %71 ], [ %124, %123 ]
  %113 = shl i64 %110, 2
  %114 = add i64 %72, %113
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 1
  %117 = icmp eq i32 %116, 0
  %118 = trunc i64 %110 to i32
  br i1 %117, label %123, label %119

119:                                              ; preds = %109
  %120 = add nsw i32 %112, 1
  %121 = sext i32 %112 to i64
  %122 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %65, i64 %121, i32 0
  store i32 %116, i32* %122, align 4
  br label %123

123:                                              ; preds = %109, %119
  %124 = phi i32 [ %120, %119 ], [ %112, %109 ]
  %125 = phi i32 [ %111, %119 ], [ %118, %109 ]
  %126 = add nuw nsw i64 %110, 1
  %127 = icmp slt i64 %126, %73
  br i1 %127, label %109, label %74

128:                                              ; preds = %277, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #11
  call void @_ZdaPv(i8* nonnull %64) #15
  ret void

129:                                              ; preds = %89, %277
  %130 = phi i64 [ 0, %89 ], [ %283, %277 ]
  %131 = phi i64 [ %84, %89 ], [ %284, %277 ]
  %132 = and i64 %131, -4294967296
  %133 = shl i64 %130, 34
  %134 = add i64 %133, 17179869184
  %135 = ashr exact i64 %134, 32
  %136 = add i64 %131, 7
  %137 = add i64 %136, %135
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = ashr i32 %139, 1
  %141 = trunc i64 %130 to i32
  %142 = shl i32 %141, 2
  %143 = sext i32 %142 to i64
  %144 = add i64 %136, %143
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %132, %147
  %149 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %150 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %149, null
  br i1 %150, label %154, label %151

151:                                              ; preds = %129
  %152 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %149, i64 %148) #11
  %153 = load i64, i64* %152, align 8
  br label %165

154:                                              ; preds = %129
  %155 = load i64*, i64** %90, align 8
  %156 = load i64*, i64** %91, align 8
  %157 = icmp eq i64* %155, %156
  br i1 %157, label %158, label %160

158:                                              ; preds = %154
  %159 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %160

160:                                              ; preds = %158, %154
  %161 = phi i64* [ %159, %158 ], [ %155, %154 ]
  %162 = ptrtoint i64* %161 to i64
  %163 = add i64 %162, 8
  %164 = inttoptr i64 %163 to i64*
  store i64* %164, i64** %90, align 8
  store i64 %148, i64* %161, align 8
  br label %165

165:                                              ; preds = %151, %160
  %166 = phi i64 [ %153, %151 ], [ %148, %160 ]
  %167 = phi i64* [ %152, %151 ], [ %161, %160 ]
  %168 = and i64 %166, -4294967296
  %169 = add i64 %166, 111
  %170 = inttoptr i64 %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i64
  %173 = or i64 %168, %172
  %174 = add i64 %173, 11
  %175 = inttoptr i64 %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i64
  %178 = or i64 %168, %177
  %179 = add i64 %178, 3
  %180 = inttoptr i64 %179 to %"struct.v8::internal::ManagedPtrDestructor"**
  %181 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %180, align 1
  %182 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %181, i64 0, i32 3
  %183 = bitcast i8** %182 to %"class.std::__1::shared_ptr.1273"**
  %184 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %184, i64 0, i32 0
  %186 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %186, i64 0, i32 11, i32 0, i32 0, i32 0
  %188 = load %"class.v8::internal::wasm::WasmImportWrapperCache"*, %"class.v8::internal::wasm::WasmImportWrapperCache"** %187, align 8
  %189 = call %"class.v8::internal::wasm::WasmCode"* @_ZNK2v88internal4wasm22WasmImportWrapperCache8MaybeGetENS0_8compiler18WasmImportCallKindEPKNS0_9SignatureINS1_9ValueTypeEEEi(%"class.v8::internal::wasm::WasmImportWrapperCache"* %188, i8 zeroext 2, %"class.v8::internal::Signature"* nonnull %6, i32 %76) #11
  %190 = icmp eq %"class.v8::internal::wasm::WasmCode"* %189, null
  br i1 %190, label %191, label %207

191:                                              ; preds = %165
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #11
  call void @_ZN2v88internal4wasm16WasmCodeRefScopeC1Ev(%"class.v8::internal::wasm::WasmCodeRefScope"* nonnull %7) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #11
  store %"class.v8::internal::wasm::WasmImportWrapperCache"* %188, %"class.v8::internal::wasm::WasmImportWrapperCache"** %94, align 8
  %192 = getelementptr inbounds %"class.v8::internal::wasm::WasmImportWrapperCache", %"class.v8::internal::wasm::WasmImportWrapperCache"* %188, i64 0, i32 0
  store %"class.v8::base::Mutex"* %192, %"class.v8::base::Mutex"** %95, align 8
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %192) #11
  %193 = load %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::wasm::WasmEngine"** %96, align 8
  %194 = call %"class.v8::internal::wasm::WasmCode"* @_ZN2v88internal8compiler26CompileWasmCapiCallWrapperEPNS0_4wasm10WasmEngineEPNS2_12NativeModuleEPKNS0_9SignatureINS2_9ValueTypeEEE(%"class.v8::internal::wasm::WasmEngine"* %193, %"class.v8::internal::wasm::NativeModule"* %186, %"class.v8::internal::Signature"* nonnull %6) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #11
  store i8 2, i8* %97, align 8
  store %"class.v8::internal::Signature"* %6, %"class.v8::internal::Signature"** %98, align 8
  store i32 %101, i32* %99, align 8
  %195 = call dereferenceable(8) %"class.v8::internal::wasm::WasmCode"** @_ZN2v88internal4wasm22WasmImportWrapperCache17ModificationScopeixERKNS2_8CacheKeyE(%"class.v8::internal::wasm::WasmImportWrapperCache::ModificationScope"* nonnull %8, %"struct.v8::internal::wasm::WasmImportWrapperCache::CacheKey"* nonnull dereferenceable(24) %9) #11
  store %"class.v8::internal::wasm::WasmCode"* %194, %"class.v8::internal::wasm::WasmCode"** %195, align 8
  %196 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %194, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = atomicrmw add i32* %196, i32 1 acq_rel
  %198 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %102, align 8
  %199 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %198, i64 0, i32 200
  %200 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %194, i64 0, i32 4
  %201 = load i32, i32* %200, align 8
  call void @_ZN2v88internal22StatsCounterThreadSafe9IncrementEi(%"class.v8::internal::StatsCounterThreadSafe"* %199, i32 %201) #11
  %202 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %102, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %202, i64 0, i32 201
  %204 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %194, i64 0, i32 5
  %205 = load i32, i32* %204, align 4
  call void @_ZN2v88internal22StatsCounterThreadSafe9IncrementEi(%"class.v8::internal::StatsCounterThreadSafe"* %203, i32 %205) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #11
  %206 = load %"class.v8::base::Mutex"*, %"class.v8::base::Mutex"** %95, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %206) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #11
  call void @_ZN2v88internal4wasm16WasmCodeRefScopeD1Ev(%"class.v8::internal::wasm::WasmCodeRefScope"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #11
  br label %207

207:                                              ; preds = %191, %165
  %208 = phi %"class.v8::internal::wasm::WasmCode"* [ %194, %191 ], [ %189, %165 ]
  %209 = call i64* @_ZN2v88internal7Factory9NewTuple2ENS0_6HandleINS0_6ObjectEEES4_NS0_14AllocationTypeE(%"class.v8::internal::Factory"* %103, i64* %167, i64* %3, i8 zeroext 1) #11
  %210 = load i64, i64* %167, align 8
  %211 = and i64 %210, -4294967296
  %212 = add i64 %210, 111
  %213 = inttoptr i64 %212 to i32*
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i64
  %216 = or i64 %211, %215
  %217 = add i64 %216, 11
  %218 = inttoptr i64 %217 to i32*
  %219 = load i32, i32* %218, align 4
  %220 = zext i32 %219 to i64
  %221 = or i64 %211, %220
  %222 = add i64 %221, 3
  %223 = inttoptr i64 %222 to %"struct.v8::internal::ManagedPtrDestructor"**
  %224 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %223, align 1
  %225 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %224, i64 0, i32 3
  %226 = bitcast i8** %225 to %"class.std::__1::shared_ptr.1273"**
  %227 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %227, i64 0, i32 0
  %229 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %228, align 8
  %230 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %229, i64 0, i32 4, i32 0
  %231 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %230, align 8
  %232 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %231, i64 0, i32 32
  %233 = call i32 @_ZNK2v88internal4wasm12SignatureMap4FindERKNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::SignatureMap"* %232, %"class.v8::internal::Signature"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #11
  %234 = icmp eq i32 %140, 0
  br i1 %234, label %275, label %235

235:                                              ; preds = %207
  store i64* null, i64** %105, align 8
  %236 = load i64, i64* %167, align 8
  %237 = and i64 %236, -4294967296
  %238 = add i64 %236, 143
  %239 = inttoptr i64 %238 to i32*
  %240 = load i32, i32* %239, align 4
  %241 = zext i32 %240 to i64
  %242 = or i64 %237, %241
  %243 = shl i32 %140, 2
  %244 = sext i32 %243 to i64
  %245 = add nsw i64 %244, 7
  %246 = add i64 %245, %242
  %247 = inttoptr i64 %246 to i32*
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = zext i32 %248 to i64
  %250 = or i64 %237, %249
  %251 = and i64 %236, -262144
  %252 = or i64 %251, 16
  %253 = inttoptr i64 %252 to i64*
  %254 = load i64, i64* %253, align 16
  %255 = add i64 %254, -41416
  %256 = inttoptr i64 %255 to %"class.v8::internal::Isolate"*
  %257 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %256, i64 0, i32 31, i32 4
  %258 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %257, align 8
  %259 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %235
  %261 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %258, i64 %250) #11
  br label %277

262:                                              ; preds = %235
  %263 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %256, i64 0, i32 31, i32 0
  %264 = load i64*, i64** %263, align 8
  %265 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %256, i64 0, i32 31, i32 1
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %264, %266
  br i1 %267, label %268, label %270

268:                                              ; preds = %262
  %269 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %256) #11
  br label %270

270:                                              ; preds = %268, %262
  %271 = phi i64* [ %269, %268 ], [ %264, %262 ]
  %272 = ptrtoint i64* %271 to i64
  %273 = add i64 %272, 8
  %274 = inttoptr i64 %273 to i64*
  store i64* %274, i64** %263, align 8
  store i64 %250, i64* %271, align 8
  br label %277

275:                                              ; preds = %207
  %276 = ptrtoint i64* %167 to i64
  store i64 %276, i64* %107, align 8
  br label %277

277:                                              ; preds = %260, %270, %275
  %278 = phi i64* [ null, %275 ], [ %261, %260 ], [ %271, %270 ]
  store i64* %278, i64** %106, align 8
  store i32 %2, i32* %108, align 8
  %279 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %208, i64 0, i32 1
  %280 = bitcast i8** %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = load i64, i64* %209, align 8
  call void @_ZN2v88internal26IndirectFunctionTableEntry3SetEimNS0_6ObjectE(%"class.v8::internal::IndirectFunctionTableEntry"* nonnull %10, i32 %233, i64 %281, i64 %282)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #11
  %283 = add nuw nsw i64 %130, 3
  %284 = load i64, i64* %37, align 8
  %285 = add i64 %284, 3
  %286 = inttoptr i64 %285 to i32*
  %287 = load i32, i32* %286, align 4
  %288 = ashr i32 %287, 1
  %289 = sext i32 %288 to i64
  %290 = icmp slt i64 %283, %289
  br i1 %290, label %129, label %128
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15WasmTableObject3GetEPNS0_7IsolateENS0_6HandleIS1_EEj(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %12 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %12, i64 %10) #11
  %16 = load i64, i64* %15, align 8
  br label %30

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi i64* [ %24, %23 ], [ %19, %17 ]
  %27 = ptrtoint i64* %26 to i64
  %28 = add i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  store i64* %29, i64** %18, align 8
  store i64 %10, i64* %26, align 8
  br label %30

30:                                               ; preds = %14, %25
  %31 = phi i64 [ %16, %14 ], [ %10, %25 ]
  %32 = phi i64* [ %15, %14 ], [ %26, %25 ]
  %33 = and i64 %31, -4294967296
  %34 = shl i32 %2, 2
  %35 = sext i32 %34 to i64
  %36 = add nsw i64 %35, 7
  %37 = add i64 %31, %36
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %33, %40
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %30
  %45 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 %41) #11
  %46 = load i64, i64* %45, align 8
  %47 = ptrtoint i64* %45 to i64
  br label %61

48:                                               ; preds = %30
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %50, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i64* [ %55, %54 ], [ %50, %48 ]
  %58 = ptrtoint i64* %57 to i64
  %59 = add i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  store i64* %60, i64** %49, align 8
  store i64 %41, i64* %57, align 8
  br label %61

61:                                               ; preds = %44, %56
  %62 = phi i64 [ %47, %44 ], [ %58, %56 ]
  %63 = phi i64 [ %46, %44 ], [ %41, %56 ]
  %64 = phi i64* [ %45, %44 ], [ %57, %56 ]
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %63 to i32
  %68 = trunc i64 %66 to i32
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %353, label %70

70:                                               ; preds = %61
  %71 = load i64, i64* %1, align 8
  %72 = add i64 %71, 31
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = lshr i32 %74, 6
  %76 = and i32 %75, 1048575
  switch i32 %76, label %184 [
    i32 1000001, label %353
    i32 1000000, label %77
    i32 1000002, label %182
    i32 1000003, label %182
    i32 1000004, label %182
    i32 1000005, label %182
    i32 1000006, label %183
  ]

77:                                               ; preds = %70
  %78 = and i64 %63, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %143, label %80

80:                                               ; preds = %77
  %81 = and i64 %63, -4294967296
  %82 = add i64 %63, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = add i16 %89, -1059
  %91 = icmp ult i16 %90, 15
  br i1 %91, label %92, label %111

92:                                               ; preds = %80
  %93 = add i64 %63, 23
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %81, %96
  %98 = add i64 %97, 27
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 15
  %102 = icmp eq i32 %101, 7
  br i1 %102, label %353, label %103

103:                                              ; preds = %92
  %104 = load atomic i32, i32* %94 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %81, %105
  %107 = add i64 %106, 31
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = icmp eq i32 %109, 573
  br i1 %110, label %353, label %111

111:                                              ; preds = %80, %103
  %112 = load atomic i32, i32* %83 monotonic, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %81, %113
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i16*
  %117 = load atomic i16, i16* %116 monotonic, align 2
  %118 = add i16 %117, -1059
  %119 = icmp ult i16 %118, 15
  br i1 %119, label %120, label %143

120:                                              ; preds = %111
  %121 = add i64 %63, 11
  %122 = inttoptr i64 %121 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %81, %124
  %126 = add i64 %125, 3
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 acquire, align 4
  %129 = zext i32 %128 to i64
  %130 = and i64 %129, 1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %143, label %132

132:                                              ; preds = %120
  %133 = or i64 %81, %129
  %134 = add i64 %133, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %81, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = icmp eq i16 %141, 74
  br i1 %142, label %353, label %143

143:                                              ; preds = %77, %120, %111, %132
  %144 = load i64, i64* %64, align 8
  %145 = and i64 %144, 1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %289, label %147

147:                                              ; preds = %143
  %148 = and i64 %144, -4294967296
  %149 = add i64 %144, -1
  %150 = inttoptr i64 %149 to i32*
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = zext i32 %151 to i64
  %153 = or i64 %148, %152
  %154 = add i64 %153, 7
  %155 = inttoptr i64 %154 to i16*
  %156 = load atomic i16, i16* %155 monotonic, align 2
  %157 = add i16 %156, -1059
  %158 = icmp ult i16 %157, 15
  br i1 %158, label %159, label %289

159:                                              ; preds = %147
  %160 = add i64 %144, 11
  %161 = inttoptr i64 %160 to i32*
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %148, %163
  %165 = add i64 %164, 3
  %166 = inttoptr i64 %165 to i32*
  %167 = load atomic i32, i32* %166 acquire, align 4
  %168 = zext i32 %167 to i64
  %169 = and i64 %168, 1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %289, label %171

171:                                              ; preds = %159
  %172 = or i64 %148, %168
  %173 = add i64 %172, -1
  %174 = inttoptr i64 %173 to i32*
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = zext i32 %175 to i64
  %177 = or i64 %148, %176
  %178 = add i64 %177, 7
  %179 = inttoptr i64 %178 to i16*
  %180 = load atomic i16, i16* %179 monotonic, align 2
  %181 = icmp eq i16 %180, 72
  br i1 %181, label %353, label %289

182:                                              ; preds = %70, %70, %70, %70
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

183:                                              ; preds = %70
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

184:                                              ; preds = %70
  %185 = and i64 %63, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %250, label %187

187:                                              ; preds = %184
  %188 = and i64 %63, -4294967296
  %189 = add i64 %63, -1
  %190 = inttoptr i64 %189 to i32*
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = zext i32 %191 to i64
  %193 = or i64 %188, %192
  %194 = add i64 %193, 7
  %195 = inttoptr i64 %194 to i16*
  %196 = load atomic i16, i16* %195 monotonic, align 2
  %197 = add i16 %196, -1059
  %198 = icmp ult i16 %197, 15
  br i1 %198, label %199, label %218

199:                                              ; preds = %187
  %200 = add i64 %63, 23
  %201 = inttoptr i64 %200 to i32*
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = zext i32 %202 to i64
  %204 = or i64 %188, %203
  %205 = add i64 %204, 27
  %206 = inttoptr i64 %205 to i32*
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 15
  %209 = icmp eq i32 %208, 7
  br i1 %209, label %353, label %210

210:                                              ; preds = %199
  %211 = load atomic i32, i32* %201 monotonic, align 4
  %212 = zext i32 %211 to i64
  %213 = or i64 %188, %212
  %214 = add i64 %213, 31
  %215 = inttoptr i64 %214 to i32*
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = icmp eq i32 %216, 573
  br i1 %217, label %353, label %218

218:                                              ; preds = %187, %210
  %219 = load atomic i32, i32* %190 monotonic, align 4
  %220 = zext i32 %219 to i64
  %221 = or i64 %188, %220
  %222 = add i64 %221, 7
  %223 = inttoptr i64 %222 to i16*
  %224 = load atomic i16, i16* %223 monotonic, align 2
  %225 = add i16 %224, -1059
  %226 = icmp ult i16 %225, 15
  br i1 %226, label %227, label %250

227:                                              ; preds = %218
  %228 = add i64 %63, 11
  %229 = inttoptr i64 %228 to i32*
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = zext i32 %230 to i64
  %232 = or i64 %188, %231
  %233 = add i64 %232, 3
  %234 = inttoptr i64 %233 to i32*
  %235 = load atomic i32, i32* %234 acquire, align 4
  %236 = zext i32 %235 to i64
  %237 = and i64 %236, 1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %250, label %239

239:                                              ; preds = %227
  %240 = or i64 %188, %236
  %241 = add i64 %240, -1
  %242 = inttoptr i64 %241 to i32*
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = zext i32 %243 to i64
  %245 = or i64 %188, %244
  %246 = add i64 %245, 7
  %247 = inttoptr i64 %246 to i16*
  %248 = load atomic i16, i16* %247 monotonic, align 2
  %249 = icmp eq i16 %248, 74
  br i1 %249, label %353, label %250

250:                                              ; preds = %184, %227, %218, %239
  %251 = load i64, i64* %64, align 8
  %252 = and i64 %251, 1
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %289, label %254

254:                                              ; preds = %250
  %255 = and i64 %251, -4294967296
  %256 = add i64 %251, -1
  %257 = inttoptr i64 %256 to i32*
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = zext i32 %258 to i64
  %260 = or i64 %255, %259
  %261 = add i64 %260, 7
  %262 = inttoptr i64 %261 to i16*
  %263 = load atomic i16, i16* %262 monotonic, align 2
  %264 = add i16 %263, -1059
  %265 = icmp ult i16 %264, 15
  br i1 %265, label %266, label %289

266:                                              ; preds = %254
  %267 = add i64 %251, 11
  %268 = inttoptr i64 %267 to i32*
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = zext i32 %269 to i64
  %271 = or i64 %255, %270
  %272 = add i64 %271, 3
  %273 = inttoptr i64 %272 to i32*
  %274 = load atomic i32, i32* %273 acquire, align 4
  %275 = zext i32 %274 to i64
  %276 = and i64 %275, 1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %289, label %278

278:                                              ; preds = %266
  %279 = or i64 %255, %275
  %280 = add i64 %279, -1
  %281 = inttoptr i64 %280 to i32*
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = zext i32 %282 to i64
  %284 = or i64 %255, %283
  %285 = add i64 %284, 7
  %286 = inttoptr i64 %285 to i16*
  %287 = load atomic i16, i16* %286 monotonic, align 2
  %288 = icmp eq i16 %287, 72
  br i1 %288, label %353, label %289

289:                                              ; preds = %250, %266, %254, %143, %159, %147, %278, %171
  %290 = load i64, i64* %64, align 8
  %291 = and i64 %290, -4294967296
  %292 = add i64 %290, 3
  %293 = inttoptr i64 %292 to i32*
  %294 = load i32, i32* %293, align 4
  %295 = zext i32 %294 to i64
  %296 = or i64 %291, %295
  %297 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %298 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %297, null
  br i1 %298, label %301, label %299

299:                                              ; preds = %289
  %300 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %297, i64 %296) #11
  br label %314

301:                                              ; preds = %289
  %302 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %303 = load i64*, i64** %302, align 8
  %304 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %305 = load i64*, i64** %304, align 8
  %306 = icmp eq i64* %303, %305
  br i1 %306, label %307, label %309

307:                                              ; preds = %301
  %308 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %309

309:                                              ; preds = %307, %301
  %310 = phi i64* [ %308, %307 ], [ %303, %301 ]
  %311 = ptrtoint i64* %310 to i64
  %312 = add i64 %311, 8
  %313 = inttoptr i64 %312 to i64*
  store i64* %313, i64** %302, align 8
  store i64 %296, i64* %310, align 8
  br label %314

314:                                              ; preds = %299, %309
  %315 = phi i64* [ %300, %299 ], [ %310, %309 ]
  %316 = load i64, i64* %64, align 8
  %317 = add i64 %316, 7
  %318 = inttoptr i64 %317 to i32*
  %319 = load i32, i32* %318, align 4
  %320 = ashr i32 %319, 1
  %321 = tail call i64* @_ZN2v88internal18WasmInstanceObject31GetOrCreateWasmExternalFunctionEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %0, i64* %315, i32 %320)
  %322 = ptrtoint i64* %321 to i64
  %323 = load i64, i64* %32, align 8
  %324 = load i64, i64* %321, align 8
  %325 = add i64 %323, %36
  %326 = inttoptr i64 %325 to i32*
  %327 = trunc i64 %324 to i32
  store atomic volatile i32 %327, i32* %326 monotonic, align 4
  %328 = and i64 %324, 1
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %353, label %330

330:                                              ; preds = %314
  %331 = and i64 %323, -262144
  %332 = or i64 %331, 8
  %333 = inttoptr i64 %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = and i64 %334, 262144
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %341, label %337

337:                                              ; preds = %330
  %338 = or i64 %331, 16
  %339 = inttoptr i64 %338 to %"class.v8::internal::Heap"**
  %340 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %339, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %340, i64 %323, i64 %325, i64 %324) #11
  br label %341

341:                                              ; preds = %337, %330
  %342 = and i64 %324, -262144
  %343 = or i64 %342, 8
  %344 = inttoptr i64 %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = and i64 %345, 24
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %353, label %348

348:                                              ; preds = %341
  %349 = load i64, i64* %333, align 8
  %350 = and i64 %349, 24
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %348
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %323, i64 %325, i64 %324) #11
  br label %353

353:                                              ; preds = %352, %348, %341, %314, %210, %199, %103, %92, %278, %239, %171, %132, %70, %61
  %354 = phi i64 [ %62, %61 ], [ %62, %239 ], [ %62, %278 ], [ %62, %132 ], [ %62, %171 ], [ %62, %70 ], [ %62, %92 ], [ %62, %103 ], [ %62, %199 ], [ %62, %210 ], [ %322, %314 ], [ %322, %341 ], [ %322, %348 ], [ %322, %352 ]
  %355 = inttoptr i64 %354 to i64*
  ret i64* %355
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16WasmCapiFunction18IsWasmCapiFunctionENS0_6ObjectE(i64) local_unnamed_addr #0 align 2 {
  %2 = and i64 %0, 1
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %39, label %4

4:                                                ; preds = %1
  %5 = and i64 %0, -4294967296
  %6 = add i64 %0, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = add i16 %13, -1059
  %15 = icmp ult i16 %14, 15
  br i1 %15, label %16, label %39

16:                                               ; preds = %4
  %17 = add i64 %0, 11
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %5, %20
  %22 = add i64 %21, 3
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = zext i32 %24 to i64
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %16
  %29 = or i64 %5, %25
  %30 = add i64 %29, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %5, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp eq i16 %37, 72
  br label %39

39:                                               ; preds = %1, %28, %16, %4
  %40 = phi i1 [ false, %4 ], [ false, %16 ], [ %38, %28 ], [ false, %1 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal18WasmInstanceObject31GetOrCreateWasmExternalFunctionEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 155
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %9 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 1, i64 0
  br label %24

16:                                               ; preds = %10, %3
  %17 = and i64 %4, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 16
  %21 = add i64 %20, -41416
  %22 = inttoptr i64 %21 to %"class.v8::internal::Isolate"*
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %24

24:                                               ; preds = %16, %14
  %25 = phi i64* [ %23, %16 ], [ %15, %14 ]
  %26 = getelementptr inbounds i64, i64* %25, i64 4
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %7, %28
  br i1 %29, label %70, label %30

30:                                               ; preds = %24
  %31 = and i64 %4, -4294967296
  %32 = zext i32 %7 to i64
  %33 = or i64 %31, %32
  %34 = shl i32 %2, 2
  %35 = sext i32 %34 to i64
  %36 = add nsw i64 %35, 7
  %37 = add i64 %36, %33
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %31, %40
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %39, %44
  br i1 %45, label %70, label %46

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %48 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %47, align 8
  %49 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %48, i64 %41) #11
  br label %65

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %54, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %60

60:                                               ; preds = %58, %52
  %61 = phi i64* [ %59, %58 ], [ %54, %52 ]
  %62 = ptrtoint i64* %61 to i64
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  store i64* %64, i64** %53, align 8
  store i64 %41, i64* %61, align 8
  br label %65

65:                                               ; preds = %50, %60
  %66 = phi i64* [ %51, %50 ], [ %61, %60 ]
  %67 = icmp eq i64* %66, null
  br i1 %67, label %68, label %248

68:                                               ; preds = %65
  %69 = load i64, i64* %1, align 8
  br label %70

70:                                               ; preds = %68, %30, %24
  %71 = phi i64 [ %69, %68 ], [ %4, %30 ], [ %4, %24 ]
  %72 = and i64 %71, -4294967296
  %73 = add i64 %71, 111
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %72, %76
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %79 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %78, align 8
  %80 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %70
  %82 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %79, i64 %77) #11
  %83 = load i64, i64* %82, align 8
  br label %97

84:                                               ; preds = %70
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %88 = load i64*, i64** %87, align 8
  %89 = icmp eq i64* %86, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %84
  %91 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %92

92:                                               ; preds = %90, %84
  %93 = phi i64* [ %91, %90 ], [ %86, %84 ]
  %94 = ptrtoint i64* %93 to i64
  %95 = add i64 %94, 8
  %96 = inttoptr i64 %95 to i64*
  store i64* %96, i64** %85, align 8
  store i64 %77, i64* %93, align 8
  br label %97

97:                                               ; preds = %81, %92
  %98 = phi i64 [ %83, %81 ], [ %77, %92 ]
  %99 = phi i64* [ %82, %81 ], [ %93, %92 ]
  %100 = and i64 %98, -4294967296
  %101 = add i64 %98, 11
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %100, %104
  %106 = add i64 %105, 3
  %107 = inttoptr i64 %106 to %"struct.v8::internal::ManagedPtrDestructor"**
  %108 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %107, align 1
  %109 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %108, i64 0, i32 3
  %110 = bitcast i8** %109 to %"class.std::__1::shared_ptr.1273"**
  %111 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %111, i64 0, i32 0
  %113 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %113, i64 0, i32 4, i32 0
  %115 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %114, align 8
  %116 = sext i32 %2 to i64
  %117 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %115, i64 0, i32 23, i32 0, i32 0
  %118 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %117, align 8
  %119 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %118, i64 %116, i32 0
  %120 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %119, align 8
  %121 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %118, i64 %116, i32 4
  %122 = load i8, i8* %121, align 8, !range !5
  %123 = icmp ne i8 %122, 0
  %124 = tail call i32 @_ZN2v88internal4wasm21GetExportWrapperIndexEPKNS1_10WasmModuleEPKNS0_9SignatureINS1_9ValueTypeEEEb(%"struct.v8::internal::wasm::WasmModule"* %115, %"class.v8::internal::Signature"* %120, i1 zeroext %123) #11
  %125 = load i64, i64* %99, align 8
  %126 = and i64 %125, -4294967296
  %127 = add i64 %125, 15
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %126, %130
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %133 = load i64, i64* %132, align 8
  %134 = shl i32 %124, 2
  %135 = sext i32 %134 to i64
  %136 = add nsw i64 %135, 7
  %137 = add i64 %136, %131
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i64 %133, 4294967295
  %141 = icmp eq i64 %140, 0
  tail call void @llvm.assume(i1 %141) #11
  %142 = zext i32 %139 to i64
  %143 = or i64 %133, %142
  %144 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %78, align 8
  %145 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %97
  %147 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %144, i64 %143) #11
  %148 = load i64, i64* %147, align 8
  br label %162

149:                                              ; preds = %97
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %153 = load i64*, i64** %152, align 8
  %154 = icmp eq i64* %151, %153
  br i1 %154, label %155, label %157

155:                                              ; preds = %149
  %156 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %157

157:                                              ; preds = %155, %149
  %158 = phi i64* [ %156, %155 ], [ %151, %149 ]
  %159 = ptrtoint i64* %158 to i64
  %160 = add i64 %159, 8
  %161 = inttoptr i64 %160 to i64*
  store i64* %161, i64** %150, align 8
  store i64 %143, i64* %158, align 8
  br label %162

162:                                              ; preds = %146, %157
  %163 = phi i64 [ %148, %146 ], [ %143, %157 ]
  %164 = phi i64* [ %147, %146 ], [ %158, %157 ]
  %165 = and i64 %163, 1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %178, label %167

167:                                              ; preds = %162
  %168 = and i64 %163, -4294967296
  %169 = add i64 %163, -1
  %170 = inttoptr i64 %169 to i32*
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = zext i32 %171 to i64
  %173 = or i64 %168, %172
  %174 = add i64 %173, 7
  %175 = inttoptr i64 %174 to i16*
  %176 = load atomic i16, i16* %175 monotonic, align 2
  %177 = icmp eq i16 %176, 162
  br i1 %177, label %241, label %178

178:                                              ; preds = %162, %167
  %179 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %119, align 8
  %180 = load i64, i64* %1, align 8
  %181 = and i64 %180, -4294967296
  %182 = add i64 %180, 111
  %183 = inttoptr i64 %182 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = zext i32 %184 to i64
  %186 = or i64 %181, %185
  %187 = add i64 %186, 11
  %188 = inttoptr i64 %187 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i64
  %191 = or i64 %181, %190
  %192 = add i64 %191, 3
  %193 = inttoptr i64 %192 to %"struct.v8::internal::ManagedPtrDestructor"**
  %194 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %193, align 1
  %195 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %194, i64 0, i32 3
  %196 = bitcast i8** %195 to %"class.std::__1::shared_ptr.1273"**
  %197 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %196, align 8
  %198 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %197, i64 0, i32 0
  %199 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %198, align 8
  %200 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %199, i64 0, i32 4, i32 0
  %201 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %200, align 8
  %202 = load i8, i8* %121, align 8, !range !5
  %203 = icmp ne i8 %202, 0
  %204 = tail call i64* @_ZN2v88internal4wasm30JSToWasmWrapperCompilationUnit22CompileJSToWasmWrapperEPNS0_7IsolateEPKNS0_9SignatureINS1_9ValueTypeEEEPKNS1_10WasmModuleEb(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Signature"* %179, %"struct.v8::internal::wasm::WasmModule"* %201, i1 zeroext %203) #11
  %205 = load i64, i64* %99, align 8
  %206 = and i64 %205, -4294967296
  %207 = add i64 %205, 15
  %208 = inttoptr i64 %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = zext i32 %209 to i64
  %211 = or i64 %206, %210
  %212 = load i64, i64* %204, align 8
  %213 = add i64 %136, %211
  %214 = inttoptr i64 %213 to i32*
  %215 = trunc i64 %212 to i32
  store atomic volatile i32 %215, i32* %214 monotonic, align 4
  %216 = and i64 %212, 1
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %241, label %218

218:                                              ; preds = %178
  %219 = and i64 %211, -262144
  %220 = or i64 %219, 8
  %221 = inttoptr i64 %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = and i64 %222, 262144
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %229, label %225

225:                                              ; preds = %218
  %226 = or i64 %219, 16
  %227 = inttoptr i64 %226 to %"class.v8::internal::Heap"**
  %228 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %227, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %228, i64 %211, i64 %213, i64 %212) #11
  br label %229

229:                                              ; preds = %225, %218
  %230 = and i64 %212, -262144
  %231 = or i64 %230, 8
  %232 = inttoptr i64 %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = and i64 %233, 24
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %241, label %236

236:                                              ; preds = %229
  %237 = load i64, i64* %221, align 8
  %238 = and i64 %237, 24
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %236
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %211, i64 %213, i64 %212) #11
  br label %241

241:                                              ; preds = %240, %236, %229, %178, %167
  %242 = phi i64* [ %164, %167 ], [ %204, %178 ], [ %204, %229 ], [ %204, %236 ], [ %204, %240 ]
  %243 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %119, align 8
  %244 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %243, i64 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = trunc i64 %245 to i32
  %247 = tail call i64* @_ZN2v88internal20WasmExportedFunction3NewEPNS0_7IsolateENS0_6HandleINS0_18WasmInstanceObjectEEEiiNS4_INS0_4CodeEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %2, i32 %246, i64* %242)
  tail call void @_ZN2v88internal18WasmInstanceObject23SetWasmExternalFunctionEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_20WasmExternalFunctionEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %2, i64* %247)
  br label %248

248:                                              ; preds = %65, %241
  %249 = phi i64* [ %247, %241 ], [ %66, %65 ]
  ret i64* %249
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15WasmTableObject4FillEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEEj(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %8, %5
  ret void

8:                                                ; preds = %5, %8
  %9 = phi i32 [ %11, %8 ], [ 0, %5 ]
  %10 = add i32 %9, %2
  tail call void @_ZN2v88internal15WasmTableObject3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %10, i64* %3)
  %11 = add nuw i32 %9, 1
  %12 = icmp eq i32 %11, %4
  br i1 %12, label %7, label %8
}

declare i32 @_ZNK2v88internal4wasm12SignatureMap4FindERKNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::SignatureMap"*, %"class.v8::internal::Signature"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26IndirectFunctionTableEntry3SetEiNS0_6HandleINS0_18WasmInstanceObjectEEEi(%"class.v8::internal::IndirectFunctionTableEntry"* nocapture readonly, i32, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %2, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 111
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 11
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %6, %15
  %17 = add i64 %16, 3
  %18 = inttoptr i64 %17 to %"struct.v8::internal::ManagedPtrDestructor"**
  %19 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %18, align 1
  %20 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %19, i64 0, i32 3
  %21 = bitcast i8** %20 to %"class.std::__1::shared_ptr.1273"**
  %22 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %22, i64 0, i32 0
  %24 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %24, i64 0, i32 4, i32 0
  %26 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %26, i64 0, i32 13
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, %3
  br i1 %29, label %30, label %50

30:                                               ; preds = %4
  %31 = add i64 %5, 43
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %6, %34
  %36 = shl i32 %3, 2
  %37 = sext i32 %36 to i64
  %38 = add nsw i64 %37, 7
  %39 = add i64 %38, %35
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %6, %42
  %44 = add i64 %5, 47
  %45 = inttoptr i64 %44 to i64**
  %46 = load i64*, i64** %45, align 1
  %47 = sext i32 %3 to i64
  %48 = getelementptr inbounds i64, i64* %46, i64 %47
  %49 = load i64, i64* %48, align 8
  br label %61

50:                                               ; preds = %4
  %51 = icmp ugt i32 %28, %3
  br i1 %51, label %52, label %59

52:                                               ; preds = %50
  %53 = add i64 %5, 47
  %54 = inttoptr i64 %53 to i64**
  %55 = load i64*, i64** %54, align 1
  %56 = zext i32 %3 to i64
  %57 = getelementptr inbounds i64, i64* %55, i64 %56
  %58 = load i64, i64* %57, align 8
  br label %61

59:                                               ; preds = %50
  %60 = tail call i64 @_ZNK2v88internal4wasm12NativeModule24GetCallTargetForFunctionEj(%"class.v8::internal::wasm::NativeModule"* %24, i32 %3) #11
  br label %61

61:                                               ; preds = %59, %52, %30
  %62 = phi i64 [ %43, %30 ], [ %5, %52 ], [ %5, %59 ]
  %63 = phi i64 [ %49, %30 ], [ %58, %52 ], [ %60, %59 ]
  tail call void @_ZN2v88internal26IndirectFunctionTableEntry3SetEimNS0_6ObjectE(%"class.v8::internal::IndirectFunctionTableEntry"* %0, i32 %1, i64 %63, i64 %62)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18WasmInstanceObject29ImportWasmJSFunctionIntoTableEPNS0_7IsolateENS0_6HandleIS1_EEiiNS4_INS0_14WasmJSFunctionEEE(%"class.v8::internal::Isolate"*, i64*, i32, i32, i64*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %7 = alloca %"class.v8::internal::Zone", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::WasmJSFunction>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::wasm::WasmCodeRefScope", align 8
  %10 = alloca %"class.v8::internal::wasm::WasmFeatures", align 4
  %11 = alloca %"struct.v8::internal::wasm::CompilationEnv", align 8
  %12 = alloca %"struct.v8::internal::wasm::WasmCompilationResult", align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"class.v8::internal::Vector.1596"*
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %"class.v8::internal::Vector.1596"*
  %17 = alloca %"class.v8::internal::IndirectFunctionTableEntry", align 8
  %18 = bitcast %"class.v8::internal::Zone"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 34
  %20 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %19, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %7, %"class.v8::internal::AccountingAllocator"* %20, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__._ZN2v88internal18WasmInstanceObject29ImportWasmJSFunctionIntoTableEPNS0_7IsolateENS0_6HandleIS1_EEiiNS4_INS0_14WasmJSFunctionEEE, i64 0, i64 0), i1 zeroext false) #11
  %21 = bitcast %"class.v8::internal::Handle<v8::internal::WasmJSFunction>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WasmJSFunction>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WasmJSFunction>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WasmJSFunction>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WasmJSFunction>::ObjectRef"* %8, i64 0, i32 0
  %25 = call %"class.v8::internal::Signature"* @_ZN2v88internal14WasmJSFunction12GetSignatureEPNS0_4ZoneE(%"class.v8::internal::WasmJSFunction"* nonnull %24, %"class.v8::internal::Zone"* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  %26 = load i64, i64* %1, align 8
  %27 = and i64 %26, -4294967296
  %28 = add i64 %26, 111
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = add i64 %32, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %27, %36
  %38 = add i64 %37, 3
  %39 = inttoptr i64 %38 to %"struct.v8::internal::ManagedPtrDestructor"**
  %40 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %39, align 1
  %41 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %40, i64 0, i32 3
  %42 = bitcast i8** %41 to %"class.std::__1::shared_ptr.1273"**
  %43 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %43, i64 0, i32 0
  %45 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %45, i64 0, i32 4, i32 0
  %47 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %46, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %47, i64 0, i32 32
  %49 = call i32 @_ZNK2v88internal4wasm12SignatureMap4FindERKNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::SignatureMap"* %48, %"class.v8::internal::Signature"* dereferenceable(24) %25) #11
  %50 = load i64, i64* %4, align 8
  %51 = bitcast %"class.v8::internal::SharedFunctionInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  %52 = add i64 %50, 11
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i64 %50, -4294967296
  %56 = zext i32 %54 to i64
  %57 = or i64 %55, %56
  %58 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = call i64 @_ZNK2v88internal18SharedFunctionInfo21wasm_js_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %6) #11
  %60 = and i64 %59, -4294967296
  %61 = add i64 %59, 11
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %60, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %72 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %71, align 8
  %73 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %5
  %75 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %72, i64 %70) #11
  br label %89

76:                                               ; preds = %5
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %78, %80
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %84

84:                                               ; preds = %82, %76
  %85 = phi i64* [ %83, %82 ], [ %78, %76 ]
  %86 = ptrtoint i64* %85 to i64
  %87 = add i64 %86, 8
  %88 = inttoptr i64 %87 to i64*
  store i64* %88, i64** %77, align 8
  store i64 %70, i64* %85, align 8
  br label %89

89:                                               ; preds = %74, %84
  %90 = phi i64* [ %75, %74 ], [ %85, %84 ]
  %91 = bitcast %"class.v8::internal::wasm::WasmCodeRefScope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #11
  call void @_ZN2v88internal4wasm16WasmCodeRefScopeC1Ev(%"class.v8::internal::wasm::WasmCodeRefScope"* nonnull %9) #11
  %92 = icmp sgt i32 %49, -1
  br i1 %92, label %93, label %199

93:                                               ; preds = %89
  %94 = load i64, i64* %1, align 8
  %95 = and i64 %94, -4294967296
  %96 = add i64 %94, 111
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %95, %99
  %101 = add i64 %100, 11
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %95, %104
  %106 = add i64 %105, 3
  %107 = inttoptr i64 %106 to %"struct.v8::internal::ManagedPtrDestructor"**
  %108 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %107, align 1
  %109 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %108, i64 0, i32 3
  %110 = bitcast i8** %109 to %"class.std::__1::shared_ptr.1273"**
  %111 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %111, i64 0, i32 0
  %113 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %112, align 8
  %114 = bitcast %"class.v8::internal::wasm::WasmFeatures"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #11
  %115 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %113, i64 0, i32 3, i32 0, i32 0
  %116 = getelementptr inbounds %"class.v8::internal::wasm::WasmFeatures", %"class.v8::internal::wasm::WasmFeatures"* %10, i64 0, i32 0, i32 0
  %117 = load i32, i32* %115, align 4
  store i32 %117, i32* %116, align 4
  %118 = load i32, i32* %97, align 4
  %119 = zext i32 %118 to i64
  %120 = or i64 %95, %119
  %121 = add i64 %120, 11
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %95, %124
  %126 = add i64 %125, 3
  %127 = inttoptr i64 %126 to %"struct.v8::internal::ManagedPtrDestructor"**
  %128 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %127, align 1
  %129 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %128, i64 0, i32 3
  %130 = bitcast i8** %129 to %"class.std::__1::shared_ptr.1273"**
  %131 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %131, i64 0, i32 0
  %133 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %133, i64 0, i32 4, i32 0
  %135 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %134, align 8
  %136 = call { i8, i64* } @_ZN2v88internal8compiler21ResolveWasmImportCallENS0_6HandleINS0_10JSReceiverEEEPKNS0_9SignatureINS0_4wasm9ValueTypeEEEPKNS6_10WasmModuleERKNS6_12WasmFeaturesE(i64* %90, %"class.v8::internal::Signature"* %25, %"struct.v8::internal::wasm::WasmModule"* %135, %"class.v8::internal::wasm::WasmFeatures"* nonnull dereferenceable(4) %10) #11
  %137 = extractvalue { i8, i64* } %136, 0
  %138 = extractvalue { i8, i64* } %136, 1
  %139 = bitcast %"struct.v8::internal::wasm::CompilationEnv"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %139) #11
  call void @_ZNK2v88internal4wasm12NativeModule20CreateCompilationEnvEv(%"struct.v8::internal::wasm::CompilationEnv"* nonnull sret %11, %"class.v8::internal::wasm::NativeModule"* %113) #11
  %140 = icmp eq i8 %137, 5
  br i1 %140, label %141, label %153

141:                                              ; preds = %93
  %142 = load i64, i64* %138, align 8
  %143 = add i64 %142, 11
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i64 %142, -4294967296
  %147 = zext i32 %145 to i64
  %148 = or i64 %146, %147
  %149 = add i64 %148, 21
  %150 = inttoptr i64 %149 to i16*
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i32
  br label %153

153:                                              ; preds = %93, %141
  %154 = phi i32 [ %152, %141 ], [ -1, %93 ]
  %155 = bitcast %"struct.v8::internal::wasm::WasmCompilationResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %155) #11
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 160
  %157 = load %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::wasm::WasmEngine"** %156, align 8
  call void @_ZN2v88internal8compiler28CompileWasmImportCallWrapperEPNS0_4wasm10WasmEngineEPNS2_14CompilationEnvENS1_18WasmImportCallKindEPKNS0_9SignatureINS2_9ValueTypeEEEbi(%"struct.v8::internal::wasm::WasmCompilationResult"* nonnull sret %12, %"class.v8::internal::wasm::WasmEngine"* %157, %"struct.v8::internal::wasm::CompilationEnv"* nonnull %11, i8 zeroext %137, %"class.v8::internal::Signature"* %25, i1 zeroext false, i32 %154) #11
  %158 = getelementptr inbounds %"struct.v8::internal::wasm::WasmCompilationResult", %"struct.v8::internal::wasm::WasmCompilationResult"* %12, i64 0, i32 6
  %159 = load i32, i32* %158, align 8
  %160 = getelementptr inbounds %"struct.v8::internal::wasm::WasmCompilationResult", %"struct.v8::internal::wasm::WasmCompilationResult"* %12, i64 0, i32 0
  %161 = getelementptr inbounds %"struct.v8::internal::wasm::WasmCompilationResult", %"struct.v8::internal::wasm::WasmCompilationResult"* %12, i64 0, i32 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.v8::internal::wasm::WasmCompilationResult", %"struct.v8::internal::wasm::WasmCompilationResult"* %12, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"struct.v8::internal::wasm::WasmCompilationResult", %"struct.v8::internal::wasm::WasmCompilationResult"* %12, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %166 = bitcast i8** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8
  store <2 x i64> %167, <2 x i64>* %13, align 16
  %168 = getelementptr inbounds %"struct.v8::internal::wasm::WasmCompilationResult", %"struct.v8::internal::wasm::WasmCompilationResult"* %12, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %169 = bitcast i8** %168 to <2 x i64>*
  %170 = load <2 x i64>, <2 x i64>* %169, align 8
  store <2 x i64> %170, <2 x i64>* %15, align 16
  %171 = call i32 @_ZN2v88internal4wasm11GetCodeKindERKNS1_21WasmCompilationResultE(%"struct.v8::internal::wasm::WasmCompilationResult"* nonnull dereferenceable(136) %12) #11
  %172 = call %"class.v8::internal::wasm::WasmCode"* @_ZN2v88internal4wasm12NativeModule7AddCodeEiRKNS0_8CodeDescEiiNS0_6VectorIKhEES8_NS1_8WasmCode4KindENS1_13ExecutionTierENS1_12ForDebuggingE(%"class.v8::internal::wasm::NativeModule"* %113, i32 %159, %"class.v8::internal::CodeDesc"* nonnull dereferenceable(80) %160, i32 %162, i32 %164, %"class.v8::internal::Vector.1596"* nonnull byval(%"class.v8::internal::Vector.1596") align 8 %14, %"class.v8::internal::Vector.1596"* nonnull byval(%"class.v8::internal::Vector.1596") align 8 %16, i32 %171, i8 signext 0, i8 signext 0) #11
  %173 = call %"class.v8::internal::wasm::WasmCode"* @_ZN2v88internal4wasm12NativeModule11PublishCodeENSt3__110unique_ptrINS1_8WasmCodeENS3_14default_deleteIS5_EEEE(%"class.v8::internal::wasm::NativeModule"* %113, %"class.v8::internal::wasm::WasmCode"* %172) #11
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %175 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %175, i64 0, i32 200
  %177 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %173, i64 0, i32 1
  %178 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %173, i64 0, i32 4
  %179 = load i32, i32* %178, align 8
  call void @_ZN2v88internal22StatsCounterThreadSafe9IncrementEi(%"class.v8::internal::StatsCounterThreadSafe"* %176, i32 %179) #11
  %180 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %174, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %180, i64 0, i32 201
  %182 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %173, i64 0, i32 5
  %183 = load i32, i32* %182, align 4
  call void @_ZN2v88internal22StatsCounterThreadSafe9IncrementEi(%"class.v8::internal::StatsCounterThreadSafe"* %181, i32 %183) #11
  %184 = bitcast i8** %177 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = load i8*, i8** %165, align 8
  store i8* null, i8** %165, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %189, label %188

188:                                              ; preds = %153
  call void @_ZdaPv(i8* nonnull %186) #15
  br label %189

189:                                              ; preds = %188, %153
  %190 = load i8*, i8** %168, align 8
  store i8* null, i8** %168, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %193, label %192

192:                                              ; preds = %189
  call void @_ZdaPv(i8* nonnull %190) #15
  br label %193

193:                                              ; preds = %192, %189
  %194 = getelementptr inbounds %"struct.v8::internal::wasm::WasmCompilationResult", %"struct.v8::internal::wasm::WasmCompilationResult"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  store i8* null, i8** %194, align 8
  %196 = icmp eq i8* %195, null
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  call void @_ZdaPv(i8* nonnull %195) #15
  br label %198

198:                                              ; preds = %193, %197
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %155) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %139) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #11
  br label %199

199:                                              ; preds = %198, %89
  %200 = phi i64* [ %138, %198 ], [ %90, %89 ]
  %201 = phi i64 [ %185, %198 ], [ 0, %89 ]
  %202 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %203 = call i64* @_ZN2v88internal7Factory9NewTuple2ENS0_6HandleINS0_6ObjectEEES4_NS0_14AllocationTypeE(%"class.v8::internal::Factory"* %202, i64* %1, i64* %200, i8 zeroext 1) #11
  %204 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #11
  %205 = icmp eq i32 %2, 0
  br i1 %205, label %247, label %206

206:                                              ; preds = %199
  %207 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %17, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %207, align 8
  %208 = load i64, i64* %1, align 8
  %209 = and i64 %208, -4294967296
  %210 = add i64 %208, 143
  %211 = inttoptr i64 %210 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = zext i32 %212 to i64
  %214 = or i64 %209, %213
  %215 = shl i32 %2, 2
  %216 = sext i32 %215 to i64
  %217 = add nsw i64 %216, 7
  %218 = add i64 %217, %214
  %219 = inttoptr i64 %218 to i32*
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = zext i32 %220 to i64
  %222 = or i64 %209, %221
  %223 = and i64 %208, -262144
  %224 = or i64 %223, 16
  %225 = inttoptr i64 %224 to i64*
  %226 = load i64, i64* %225, align 16
  %227 = add i64 %226, -41416
  %228 = inttoptr i64 %227 to %"class.v8::internal::Isolate"*
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %228, i64 0, i32 31, i32 4
  %230 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %229, align 8
  %231 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %230, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %206
  %233 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %230, i64 %222) #11
  br label %250

234:                                              ; preds = %206
  %235 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %228, i64 0, i32 31, i32 0
  %236 = load i64*, i64** %235, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %228, i64 0, i32 31, i32 1
  %238 = load i64*, i64** %237, align 8
  %239 = icmp eq i64* %236, %238
  br i1 %239, label %240, label %242

240:                                              ; preds = %234
  %241 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %228) #11
  br label %242

242:                                              ; preds = %240, %234
  %243 = phi i64* [ %241, %240 ], [ %236, %234 ]
  %244 = ptrtoint i64* %243 to i64
  %245 = add i64 %244, 8
  %246 = inttoptr i64 %245 to i64*
  store i64* %246, i64** %235, align 8
  store i64 %222, i64* %243, align 8
  br label %250

247:                                              ; preds = %199
  %248 = ptrtoint i64* %1 to i64
  %249 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %17 to i64*
  store i64 %248, i64* %249, align 8
  br label %250

250:                                              ; preds = %232, %242, %247
  %251 = phi i64* [ null, %247 ], [ %233, %232 ], [ %243, %242 ]
  %252 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %17, i64 0, i32 1, i32 0, i32 0
  store i64* %251, i64** %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %17, i64 0, i32 2
  store i32 %3, i32* %253, align 8
  %254 = load i64, i64* %203, align 8
  call void @_ZN2v88internal26IndirectFunctionTableEntry3SetEimNS0_6ObjectE(%"class.v8::internal::IndirectFunctionTableEntry"* nonnull %17, i32 %49, i64 %201, i64 %254)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #11
  call void @_ZN2v88internal4wasm16WasmCodeRefScopeD1Ev(%"class.v8::internal::wasm::WasmCodeRefScope"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #11
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal16WasmCapiFunction22GetSerializedSignatureEv(%"class.v8::internal::WasmCapiFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %3 = bitcast %"class.v8::internal::SharedFunctionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.v8::internal::WasmCapiFunction", %"class.v8::internal::WasmCapiFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = call i64 @_ZNK2v88internal18SharedFunctionInfo23wasm_capi_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %2) #11
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, 23
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret i64 %19
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

declare %"class.v8::internal::wasm::WasmCode"* @_ZNK2v88internal4wasm22WasmImportWrapperCache8MaybeGetENS0_8compiler18WasmImportCallKindEPKNS0_9SignatureINS1_9ValueTypeEEEi(%"class.v8::internal::wasm::WasmImportWrapperCache"*, i8 zeroext, %"class.v8::internal::Signature"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal4wasm16WasmCodeRefScopeC1Ev(%"class.v8::internal::wasm::WasmCodeRefScope"*) unnamed_addr #2

declare %"class.v8::internal::wasm::WasmCode"* @_ZN2v88internal8compiler26CompileWasmCapiCallWrapperEPNS0_4wasm10WasmEngineEPNS2_12NativeModuleEPKNS0_9SignatureINS2_9ValueTypeEEE(%"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::Signature"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.v8::internal::wasm::WasmCode"** @_ZN2v88internal4wasm22WasmImportWrapperCache17ModificationScopeixERKNS2_8CacheKeyE(%"class.v8::internal::wasm::WasmImportWrapperCache::ModificationScope"*, %"struct.v8::internal::wasm::WasmImportWrapperCache::CacheKey"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2v88internal22StatsCounterThreadSafe9IncrementEi(%"class.v8::internal::StatsCounterThreadSafe"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal4wasm16WasmCodeRefScopeD1Ev(%"class.v8::internal::wasm::WasmCodeRefScope"*) unnamed_addr #7

declare i64* @_ZN2v88internal7Factory9NewTuple2ENS0_6HandleINS0_6ObjectEEES4_NS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26IndirectFunctionTableEntry3SetEimNS0_6ObjectE(%"class.v8::internal::IndirectFunctionTableEntry"* nocapture readonly, i32, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %6, null
  br i1 %7, label %65, label %8

8:                                                ; preds = %4
  %9 = load i64, i64* %6, align 8
  %10 = add i64 %9, 67
  %11 = inttoptr i64 %10 to i32**
  %12 = load i32*, i32** %11, align 1
  %13 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i32, i32* %12, i64 %15
  store i32 %1, i32* %16, align 4
  %17 = load i64*, i64** %5, align 8
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 59
  %20 = inttoptr i64 %19 to i64**
  %21 = load i64*, i64** %20, align 1
  %22 = load i32, i32* %13, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i64, i64* %21, i64 %23
  store i64 %2, i64* %24, align 8
  %25 = load i64*, i64** %5, align 8
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, -4294967296
  %28 = add i64 %26, 55
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = load i32, i32* %13, align 8
  %34 = shl i32 %33, 2
  %35 = sext i32 %34 to i64
  %36 = add i64 %32, 7
  %37 = add i64 %36, %35
  %38 = inttoptr i64 %37 to i32*
  %39 = trunc i64 %3 to i32
  store atomic volatile i32 %39, i32* %38 monotonic, align 4
  %40 = and i64 %3, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %124, label %42

42:                                               ; preds = %8
  %43 = and i64 %32, -262144
  %44 = or i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 262144
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = or i64 %43, 16
  %51 = inttoptr i64 %50 to %"class.v8::internal::Heap"**
  %52 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %51, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %52, i64 %32, i64 %37, i64 %3) #11
  br label %53

53:                                               ; preds = %49, %42
  %54 = and i64 %3, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 24
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %124, label %60

60:                                               ; preds = %53
  %61 = load i64, i64* %45, align 8
  %62 = and i64 %61, 24
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %124

64:                                               ; preds = %60
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %32, i64 %37, i64 %3) #11
  br label %124

65:                                               ; preds = %4
  %66 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 1, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i32**
  %71 = load i32*, i32** %70, align 1
  %72 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %71, i64 %74
  store i32 %1, i32* %75, align 4
  %76 = load i64*, i64** %66, align 8
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 15
  %79 = inttoptr i64 %78 to i64**
  %80 = load i64*, i64** %79, align 1
  %81 = load i32, i32* %72, align 8
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i64, i64* %80, i64 %82
  store i64 %2, i64* %83, align 8
  %84 = load i64*, i64** %66, align 8
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, -4294967296
  %87 = add i64 %85, 27
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %86, %90
  %92 = load i32, i32* %72, align 8
  %93 = shl i32 %92, 2
  %94 = sext i32 %93 to i64
  %95 = add i64 %91, 7
  %96 = add i64 %95, %94
  %97 = inttoptr i64 %96 to i32*
  %98 = trunc i64 %3 to i32
  store atomic volatile i32 %98, i32* %97 monotonic, align 4
  %99 = and i64 %3, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %124, label %101

101:                                              ; preds = %65
  %102 = and i64 %91, -262144
  %103 = or i64 %102, 8
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = and i64 %105, 262144
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %101
  %109 = or i64 %102, 16
  %110 = inttoptr i64 %109 to %"class.v8::internal::Heap"**
  %111 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %110, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %111, i64 %91, i64 %96, i64 %3) #11
  br label %112

112:                                              ; preds = %108, %101
  %113 = and i64 %3, -262144
  %114 = or i64 %113, 8
  %115 = inttoptr i64 %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = and i64 %116, 24
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %124, label %119

119:                                              ; preds = %112
  %120 = load i64, i64* %104, align 8
  %121 = and i64 %120, 24
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %119
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %91, i64 %96, i64 %3) #11
  br label %124

124:                                              ; preds = %123, %119, %112, %65, %64, %60, %53, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26IndirectFunctionTableEntry5clearEv(%"class.v8::internal::IndirectFunctionTableEntry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %70, label %5

5:                                                ; preds = %1
  %6 = load i64, i64* %3, align 8
  %7 = add i64 %6, 67
  %8 = inttoptr i64 %7 to i32**
  %9 = load i32*, i32** %8, align 1
  %10 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %9, i64 %12
  store i32 -1, i32* %13, align 4
  %14 = load i64*, i64** %2, align 8
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 59
  %17 = inttoptr i64 %16 to i64**
  %18 = load i64*, i64** %17, align 1
  %19 = load i32, i32* %10, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i64, i64* %18, i64 %20
  store i64 0, i64* %21, align 8
  %22 = load i64*, i64** %2, align 8
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, 55
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = load i32, i32* %10, align 8
  %31 = and i64 %23, -262144
  %32 = or i64 %31, 16
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = add i64 %34, -41416
  %36 = inttoptr i64 %35 to %"class.v8::internal::Isolate"*
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %36, i64 0, i32 0, i32 7, i32 0, i64 4
  %38 = load i64, i64* %37, align 8
  %39 = shl i32 %30, 2
  %40 = sext i32 %39 to i64
  %41 = add i64 %29, 7
  %42 = add i64 %41, %40
  %43 = inttoptr i64 %42 to i32*
  %44 = trunc i64 %38 to i32
  store atomic volatile i32 %44, i32* %43 monotonic, align 4
  %45 = and i64 %38, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %137, label %47

47:                                               ; preds = %5
  %48 = and i64 %29, -262144
  %49 = or i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, 262144
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %47
  %55 = or i64 %48, 16
  %56 = inttoptr i64 %55 to %"class.v8::internal::Heap"**
  %57 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %56, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %57, i64 %29, i64 %42, i64 %38) #11
  br label %58

58:                                               ; preds = %54, %47
  %59 = and i64 %38, -262144
  %60 = or i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 24
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %137, label %65

65:                                               ; preds = %58
  %66 = load i64, i64* %50, align 8
  %67 = and i64 %66, 24
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %137

69:                                               ; preds = %65
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %29, i64 %42, i64 %38) #11
  br label %137

70:                                               ; preds = %1
  %71 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 1, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i32**
  %76 = load i32*, i32** %75, align 1
  %77 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %76, i64 %79
  store i32 -1, i32* %80, align 4
  %81 = load i64*, i64** %71, align 8
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 15
  %84 = inttoptr i64 %83 to i64**
  %85 = load i64*, i64** %84, align 1
  %86 = load i32, i32* %77, align 8
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i64, i64* %85, i64 %87
  store i64 0, i64* %88, align 8
  %89 = load i64*, i64** %71, align 8
  %90 = load i64, i64* %89, align 8
  %91 = and i64 %90, -4294967296
  %92 = add i64 %90, 27
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %91, %95
  %97 = load i32, i32* %77, align 8
  %98 = and i64 %90, -262144
  %99 = or i64 %98, 16
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 16
  %102 = add i64 %101, -41416
  %103 = inttoptr i64 %102 to %"class.v8::internal::Isolate"*
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %103, i64 0, i32 0, i32 7, i32 0, i64 4
  %105 = load i64, i64* %104, align 8
  %106 = shl i32 %97, 2
  %107 = sext i32 %106 to i64
  %108 = add i64 %96, 7
  %109 = add i64 %108, %107
  %110 = inttoptr i64 %109 to i32*
  %111 = trunc i64 %105 to i32
  store atomic volatile i32 %111, i32* %110 monotonic, align 4
  %112 = and i64 %105, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %137, label %114

114:                                              ; preds = %70
  %115 = and i64 %96, -262144
  %116 = or i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = and i64 %118, 262144
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %114
  %122 = or i64 %115, 16
  %123 = inttoptr i64 %122 to %"class.v8::internal::Heap"**
  %124 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %123, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %124, i64 %96, i64 %109, i64 %105) #11
  br label %125

125:                                              ; preds = %121, %114
  %126 = and i64 %105, -262144
  %127 = or i64 %126, 8
  %128 = inttoptr i64 %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = and i64 %129, 24
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %137, label %132

132:                                              ; preds = %125
  %133 = load i64, i64* %117, align 8
  %134 = and i64 %133, 24
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %96, i64 %109, i64 %105) #11
  br label %137

137:                                              ; preds = %136, %132, %125, %70, %69, %65, %58, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15WasmTableObject27SetFunctionTablePlaceholderEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_18WasmInstanceObjectEEEi(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i32) local_unnamed_addr #0 align 2 {
  %6 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %7 = sext i32 %4 to i64
  %8 = shl nsw i64 %7, 1
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %10 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %9, align 8
  %11 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %10, i64 %8) #11
  br label %27

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %16, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %22

22:                                               ; preds = %20, %14
  %23 = phi i64* [ %21, %20 ], [ %16, %14 ]
  %24 = ptrtoint i64* %23 to i64
  %25 = add i64 %24, 8
  %26 = inttoptr i64 %25 to i64*
  store i64* %26, i64** %15, align 8
  store i64 %8, i64* %23, align 8
  br label %27

27:                                               ; preds = %12, %22
  %28 = phi i64* [ %13, %12 ], [ %23, %22 ]
  %29 = tail call i64* @_ZN2v88internal7Factory9NewTuple2ENS0_6HandleINS0_6ObjectEEES4_NS0_14AllocationTypeE(%"class.v8::internal::Factory"* %6, i64* %3, i64* %28, i8 zeroext 0) #11
  %30 = load i64, i64* %1, align 8
  %31 = and i64 %30, -4294967296
  %32 = add i64 %30, 15
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = load i64, i64* %29, align 8
  %38 = shl i32 %2, 2
  %39 = sext i32 %38 to i64
  %40 = add nsw i64 %39, 7
  %41 = add i64 %40, %36
  %42 = inttoptr i64 %41 to i32*
  %43 = trunc i64 %37 to i32
  store atomic volatile i32 %43, i32* %42 monotonic, align 4
  %44 = and i64 %37, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %69, label %46

46:                                               ; preds = %27
  %47 = and i64 %36, -262144
  %48 = or i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 262144
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  %54 = or i64 %47, 16
  %55 = inttoptr i64 %54 to %"class.v8::internal::Heap"**
  %56 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %55, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %56, i64 %36, i64 %41, i64 %37) #11
  br label %57

57:                                               ; preds = %53, %46
  %58 = and i64 %37, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 24
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %57
  %65 = load i64, i64* %49, align 8
  %66 = and i64 %65, 24
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %64
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %36, i64 %41, i64 %37) #11
  br label %69

69:                                               ; preds = %27, %57, %64, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15WasmTableObject21GetFunctionTableEntryEPNS0_7IsolateEPKNS0_4wasm10WasmModuleENS0_6HandleIS1_EEiPbSA_PNS0_11MaybeHandleINS0_18WasmInstanceObjectEEEPiPNSB_INS0_14WasmJSFunctionEEE(%"class.v8::internal::Isolate"*, %"struct.v8::internal::wasm::WasmModule"* nocapture readnone, i64*, i32, i8* nocapture, i8* nocapture, %"class.v8::internal::MaybeHandle.1626"* nocapture, i32* nocapture, %"class.v8::internal::MaybeHandle.1627"* nocapture) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %11 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  store i8 1, i8* %4, align 1
  %12 = load i64, i64* %2, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i64 %12, 15
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = shl i32 %3, 2
  %20 = sext i32 %19 to i64
  %21 = add nsw i64 %20, 7
  %22 = add i64 %21, %18
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %13, %25
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %9
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %26) #11
  %32 = load i64, i64* %31, align 8
  br label %46

33:                                               ; preds = %9
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64* [ %40, %39 ], [ %35, %33 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %34, align 8
  store i64 %26, i64* %42, align 8
  br label %46

46:                                               ; preds = %30, %41
  %47 = phi i64 [ %32, %30 ], [ %26, %41 ]
  %48 = phi i64* [ %31, %30 ], [ %42, %41 ]
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %47 to i32
  %52 = trunc i64 %50 to i32
  %53 = icmp eq i32 %51, %52
  %54 = zext i1 %53 to i8
  store i8 %54, i8* %5, align 1
  br i1 %53, label %226, label %55

55:                                               ; preds = %46
  %56 = load i64, i64* %48, align 8
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %177, label %59

59:                                               ; preds = %55
  %60 = and i64 %56, -4294967296
  %61 = add i64 %56, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = add i16 %68, -1059
  %70 = icmp ult i16 %69, 15
  br i1 %70, label %71, label %141

71:                                               ; preds = %59
  %72 = add i64 %56, 23
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %60, %75
  %77 = add i64 %76, 27
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 15
  %81 = icmp eq i32 %80, 7
  br i1 %81, label %90, label %82

82:                                               ; preds = %71
  %83 = load atomic i32, i32* %73 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %60, %84
  %86 = add i64 %85, 31
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = icmp eq i32 %88, 573
  br i1 %89, label %90, label %141

90:                                               ; preds = %82, %71
  %91 = bitcast %"class.v8::internal::SharedFunctionInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #11
  %92 = add i64 %56, 11
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %60, %95
  %97 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %96, i64* %97, align 8
  %98 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %10) #11
  %99 = and i64 %98, -4294967296
  %100 = add i64 %98, 19
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %99, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #11
  %105 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %106 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %90
  %108 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %105, i64 %104) #11
  %109 = ptrtoint i64* %108 to i64
  br label %123

110:                                              ; preds = %90
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %114 = load i64*, i64** %113, align 8
  %115 = icmp eq i64* %112, %114
  br i1 %115, label %116, label %118

116:                                              ; preds = %110
  %117 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %118

118:                                              ; preds = %116, %110
  %119 = phi i64* [ %117, %116 ], [ %112, %110 ]
  %120 = ptrtoint i64* %119 to i64
  %121 = add i64 %120, 8
  %122 = inttoptr i64 %121 to i64*
  store i64* %122, i64** %111, align 8
  store i64 %104, i64* %119, align 8
  br label %123

123:                                              ; preds = %107, %118
  %124 = phi i64 [ %109, %107 ], [ %120, %118 ]
  %125 = bitcast %"class.v8::internal::MaybeHandle.1626"* %6 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load i64, i64* %48, align 8
  %127 = bitcast %"class.v8::internal::SharedFunctionInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #11
  %128 = add i64 %126, 11
  %129 = inttoptr i64 %128 to i32*
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i64 %126, -4294967296
  %132 = zext i32 %130 to i64
  %133 = or i64 %131, %132
  %134 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %133, i64* %134, align 8
  %135 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %11) #11
  %136 = add i64 %135, 23
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = ashr i32 %138, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #11
  store i32 %139, i32* %7, align 4
  %140 = bitcast %"class.v8::internal::MaybeHandle.1627"* %8 to i64*
  store i64 0, i64* %140, align 8
  br label %226

141:                                              ; preds = %59, %82
  %142 = load atomic i32, i32* %62 monotonic, align 4
  %143 = zext i32 %142 to i64
  %144 = or i64 %60, %143
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i16*
  %147 = load atomic i16, i16* %146 monotonic, align 2
  %148 = add i16 %147, -1059
  %149 = icmp ult i16 %148, 15
  br i1 %149, label %150, label %177

150:                                              ; preds = %141
  %151 = add i64 %56, 11
  %152 = inttoptr i64 %151 to i32*
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = zext i32 %153 to i64
  %155 = or i64 %60, %154
  %156 = add i64 %155, 3
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 acquire, align 4
  %159 = zext i32 %158 to i64
  %160 = and i64 %159, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %177, label %162

162:                                              ; preds = %150
  %163 = or i64 %60, %159
  %164 = add i64 %163, -1
  %165 = inttoptr i64 %164 to i32*
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %60, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load atomic i16, i16* %170 monotonic, align 2
  %172 = icmp eq i16 %171, 74
  br i1 %172, label %173, label %177

173:                                              ; preds = %162
  %174 = bitcast %"class.v8::internal::MaybeHandle.1626"* %6 to i64*
  store i64 0, i64* %174, align 8
  %175 = ptrtoint i64* %48 to i64
  %176 = bitcast %"class.v8::internal::MaybeHandle.1627"* %8 to i64*
  store i64 %175, i64* %176, align 8
  br label %226

177:                                              ; preds = %55, %150, %141, %162
  %178 = load i64, i64* %48, align 8
  %179 = and i64 %178, 1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %225, label %181

181:                                              ; preds = %177
  %182 = and i64 %178, -4294967296
  %183 = add i64 %178, -1
  %184 = inttoptr i64 %183 to i32*
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = zext i32 %185 to i64
  %187 = or i64 %182, %186
  %188 = add i64 %187, 7
  %189 = inttoptr i64 %188 to i16*
  %190 = load atomic i16, i16* %189 monotonic, align 2
  %191 = icmp eq i16 %190, 116
  br i1 %191, label %192, label %225

192:                                              ; preds = %181
  %193 = add i64 %178, 3
  %194 = inttoptr i64 %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  %197 = or i64 %182, %196
  %198 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %199 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %198, null
  br i1 %199, label %203, label %200

200:                                              ; preds = %192
  %201 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %198, i64 %197) #11
  %202 = ptrtoint i64* %201 to i64
  br label %216

203:                                              ; preds = %192
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %205 = load i64*, i64** %204, align 8
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %207 = load i64*, i64** %206, align 8
  %208 = icmp eq i64* %205, %207
  br i1 %208, label %209, label %211

209:                                              ; preds = %203
  %210 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %211

211:                                              ; preds = %209, %203
  %212 = phi i64* [ %210, %209 ], [ %205, %203 ]
  %213 = ptrtoint i64* %212 to i64
  %214 = add i64 %213, 8
  %215 = inttoptr i64 %214 to i64*
  store i64* %215, i64** %204, align 8
  store i64 %197, i64* %212, align 8
  br label %216

216:                                              ; preds = %200, %211
  %217 = phi i64 [ %202, %200 ], [ %213, %211 ]
  %218 = bitcast %"class.v8::internal::MaybeHandle.1626"* %6 to i64*
  store i64 %217, i64* %218, align 8
  %219 = load i64, i64* %48, align 8
  %220 = add i64 %219, 7
  %221 = inttoptr i64 %220 to i32*
  %222 = load i32, i32* %221, align 4
  %223 = ashr i32 %222, 1
  store i32 %223, i32* %7, align 4
  %224 = bitcast %"class.v8::internal::MaybeHandle.1627"* %8 to i64*
  store i64 0, i64* %224, align 8
  br label %226

225:                                              ; preds = %177, %181
  store i8 0, i8* %4, align 1
  br label %226

226:                                              ; preds = %46, %225, %216, %173, %123
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal25WasmIndirectFunctionTable3NewEPNS0_7IsolateEj(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::IndirectFunctionTableEntry", align 8
  %4 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %5 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %6 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %5, i32 %1, i8 zeroext 0) #11
  %7 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewStructENS0_12InstanceTypeENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %5, i16 zeroext 118, i8 zeroext 0) #11
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 3
  %10 = inttoptr i64 %9 to i32*
  store i32 %1, i32* %10, align 4
  %11 = load i64, i64* %7, align 8
  %12 = load i64, i64* %6, align 8
  %13 = add i64 %11, 27
  %14 = inttoptr i64 %13 to i32*
  %15 = trunc i64 %12 to i32
  store atomic volatile i32 %15, i32* %14 monotonic, align 4
  %16 = and i64 %12, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %2
  %19 = and i64 %11, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %11, i64 %13, i64 %12) #11
  br label %29

29:                                               ; preds = %25, %18, %2
  %30 = and i64 %12, -262144
  %31 = or i64 %30, 8
  %32 = inttoptr i64 %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 24
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %29
  %37 = and i64 %11, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 24
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %36
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %11, i64 %13, i64 %12) #11
  br label %44

44:                                               ; preds = %29, %36, %43
  %45 = zext i32 %1 to i64
  %46 = mul nuw nsw i64 %45, 12
  %47 = tail call i8* @_Znwm(i64 72) #15
  %48 = bitcast i8* %47 to i32 (...)***
  %49 = getelementptr inbounds i8, i8* %47, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %50 = getelementptr inbounds i8, i8* %47, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #11
  %51 = icmp eq i32 %1, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %44
  %53 = getelementptr inbounds i8, i8* %47, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11
  br label %89

54:                                               ; preds = %44
  %55 = shl nuw nsw i64 %45, 2
  %56 = tail call i8* @_Znwm(i64 %55) #15
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds i8, i8* %47, i64 32
  %59 = bitcast i8* %50 to i8**
  store i8* %56, i8** %59, align 8
  %60 = getelementptr inbounds i32, i32* %57, i64 %45
  %61 = getelementptr inbounds i8, i8* %47, i64 40
  %62 = bitcast i8* %61 to i32**
  store i32* %60, i32** %62, align 8
  %63 = bitcast i8* %58 to i64*
  %64 = ptrtoint i8* %56 to i64
  %65 = add nsw i64 %45, -1
  %66 = getelementptr i32, i32* %57, i64 %65
  %67 = ptrtoint i32* %66 to i64
  %68 = sub i64 4, %64
  %69 = add i64 %68, %67
  %70 = and i64 %69, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %56, i8 0, i64 %70, i1 false) #11
  %71 = ptrtoint i32* %60 to i64
  store i64 %71, i64* %63, align 8
  %72 = getelementptr inbounds i8, i8* %47, i64 48
  %73 = shl nuw nsw i64 %45, 3
  %74 = tail call i8* @_Znwm(i64 %73) #15
  %75 = bitcast i8* %74 to i64*
  %76 = getelementptr inbounds i8, i8* %47, i64 56
  %77 = bitcast i8* %72 to i8**
  store i8* %74, i8** %77, align 8
  %78 = getelementptr inbounds i64, i64* %75, i64 %45
  %79 = getelementptr inbounds i8, i8* %47, i64 64
  %80 = bitcast i8* %79 to i64**
  store i64* %78, i64** %80, align 8
  %81 = bitcast i8* %76 to i64*
  %82 = ptrtoint i8* %74 to i64
  %83 = getelementptr i64, i64* %75, i64 %65
  %84 = ptrtoint i64* %83 to i64
  %85 = sub i64 8, %82
  %86 = add i64 %85, %84
  %87 = and i64 %86, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 %87, i1 false) #11
  %88 = ptrtoint i64* %78 to i64
  store i64 %88, i64* %81, align 8
  br label %89

89:                                               ; preds = %52, %54
  %90 = phi i64 [ 0, %52 ], [ %64, %54 ]
  %91 = load i64, i64* %7, align 8
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i64*
  store i64 %90, i64* %93, align 1
  %94 = load i64, i64* %7, align 8
  %95 = getelementptr inbounds i8, i8* %47, i64 48
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %94, 15
  %99 = inttoptr i64 %98 to i64*
  store i64 %97, i64* %99, align 1
  %100 = ptrtoint i8* %50 to i64
  %101 = ptrtoint i8* %47 to i64
  %102 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::Isolate"*
  %103 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %102, i64 %46) #11
  %104 = tail call i8* @_Znwm(i64 48) #15
  %105 = bitcast i8* %104 to %"struct.v8::internal::ManagedPtrDestructor"*
  %106 = tail call i8* @_Znwm(i64 16) #15
  %107 = bitcast i8* %106 to i64*
  store i64 %100, i64* %107, align 8
  %108 = getelementptr inbounds i8, i8* %106, i64 8
  %109 = bitcast i8* %108 to i64*
  store i64 %101, i64* %109, align 8
  %110 = bitcast i8* %104 to i64*
  store i64 %46, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %104, i64 8
  %112 = getelementptr inbounds i8, i8* %104, i64 24
  %113 = bitcast i8* %112 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #11
  store i8* %106, i8** %113, align 8
  %114 = getelementptr inbounds i8, i8* %104, i64 32
  %115 = bitcast i8* %114 to void (i8*)**
  store void (i8*)* @_ZN2v88internal7ManagedINS0_12_GLOBAL__N_120IftNativeAllocationsEE10DestructorEPv, void (i8*)** %115, align 8
  %116 = getelementptr inbounds i8, i8* %104, i64 40
  %117 = bitcast i8* %116 to i64**
  store i64* null, i64** %117, align 8
  %118 = ptrtoint i8* %104 to i64
  %119 = tail call i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"* %4, i64 %118) #11
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 36
  %121 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %120, align 8
  %122 = load i64, i64* %119, align 8
  %123 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %121, i64 %122) #11
  store i64* %123, i64** %117, align 8
  tail call void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64* %123, i8* nonnull %104, void (%"class.v8::WeakCallbackInfo"*)* nonnull @_ZN2v88internal22ManagedObjectFinalizerERKNS_16WeakCallbackInfoIvEE, i32 0) #11
  tail call void @_ZN2v88internal7Isolate28RegisterManagedPtrDestructorEPNS0_20ManagedPtrDestructorE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::ManagedPtrDestructor"* nonnull %105) #11
  %124 = load i64, i64* %7, align 8
  %125 = load i64, i64* %119, align 8
  %126 = add i64 %124, 23
  %127 = inttoptr i64 %126 to i32*
  %128 = trunc i64 %125 to i32
  store atomic volatile i32 %128, i32* %127 monotonic, align 4
  %129 = and i64 %125, 1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %142, label %131

131:                                              ; preds = %89
  %132 = and i64 %124, -262144
  %133 = or i64 %132, 8
  %134 = inttoptr i64 %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = and i64 %135, 262144
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %131
  %139 = or i64 %132, 16
  %140 = inttoptr i64 %139 to %"class.v8::internal::Heap"**
  %141 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %140, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %141, i64 %124, i64 %126, i64 %125) #11
  br label %142

142:                                              ; preds = %138, %131, %89
  %143 = and i64 %125, -262144
  %144 = or i64 %143, 8
  %145 = inttoptr i64 %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = and i64 %146, 24
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %157, label %149

149:                                              ; preds = %142
  %150 = and i64 %124, -262144
  %151 = or i64 %150, 8
  %152 = inttoptr i64 %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = and i64 %153, 24
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %149
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %124, i64 %126, i64 %125) #11
  br label %157

157:                                              ; preds = %142, %149, %156
  br i1 %51, label %163, label %158

158:                                              ; preds = %157
  %159 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %3 to i8*
  %160 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %3, i64 0, i32 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %3, i64 0, i32 1, i32 0, i32 0
  %162 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %3, i64 0, i32 2
  br label %164

163:                                              ; preds = %164, %157
  ret i64* %7

164:                                              ; preds = %164, %158
  %165 = phi i32 [ 0, %158 ], [ %166, %164 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #11
  store i64* null, i64** %160, align 8
  store i64* %7, i64** %161, align 8
  store i32 %165, i32* %162, align 8
  call void @_ZN2v88internal26IndirectFunctionTableEntry5clearEv(%"class.v8::internal::IndirectFunctionTableEntry"* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #11
  %166 = add nuw i32 %165, 1
  %167 = icmp eq i32 %166, %1
  br i1 %167, label %163, label %164
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewStructENS0_12InstanceTypeENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i16 zeroext, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal25WasmIndirectFunctionTable6ResizeEPNS0_7IsolateENS0_6HandleIS1_EEj(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::IndirectFunctionTableEntry", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %8, %2
  br i1 %9, label %10, label %143

10:                                               ; preds = %3
  %11 = and i64 %5, -4294967296
  %12 = add i64 %5, 23
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 3
  %18 = inttoptr i64 %17 to %"struct.v8::internal::ManagedPtrDestructor"**
  %19 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %18, align 1
  %20 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %19, i64 0, i32 3
  %21 = bitcast i8** %20 to %"class.std::__1::shared_ptr.1814"**
  %22 = load %"class.std::__1::shared_ptr.1814"*, %"class.std::__1::shared_ptr.1814"** %21, align 8
  %23 = getelementptr %"class.std::__1::shared_ptr.1814", %"class.std::__1::shared_ptr.1814"* %22, i64 0, i32 0
  %24 = load %"class.v8::internal::(anonymous namespace)::IftNativeAllocations"*, %"class.v8::internal::(anonymous namespace)::IftNativeAllocations"** %23, align 8
  %25 = zext i32 %2 to i64
  %26 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::IftNativeAllocations", %"class.v8::internal::(anonymous namespace)::IftNativeAllocations"* %24, i64 0, i32 0, i32 0, i32 1
  %27 = bitcast i32** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.v8::internal::(anonymous namespace)::IftNativeAllocations"* %24 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 2
  %33 = icmp ult i64 %32, %25
  %34 = inttoptr i64 %30 to i32*
  br i1 %33, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::IftNativeAllocations", %"class.v8::internal::(anonymous namespace)::IftNativeAllocations"* %24, i64 0, i32 0
  %37 = sub nsw i64 %25, %32
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.1324"* %36, i64 %37) #11
  br label %42

38:                                               ; preds = %10
  %39 = icmp ugt i64 %32, %25
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = getelementptr inbounds i32, i32* %34, i64 %25
  store i32* %41, i32** %26, align 8
  br label %42

42:                                               ; preds = %40, %38, %35
  %43 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::IftNativeAllocations", %"class.v8::internal::(anonymous namespace)::IftNativeAllocations"* %24, i64 0, i32 1
  %44 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::IftNativeAllocations", %"class.v8::internal::(anonymous namespace)::IftNativeAllocations"* %24, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast i64** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.91"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp ult i64 %50, %25
  %52 = inttoptr i64 %48 to i64*
  br i1 %51, label %53, label %55

53:                                               ; preds = %42
  %54 = sub nsw i64 %25, %50
  tail call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEm(%"class.std::__1::vector.91"* %43, i64 %54) #11
  br label %59

55:                                               ; preds = %42
  %56 = icmp ugt i64 %50, %25
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = getelementptr inbounds i64, i64* %52, i64 %25
  store i64* %58, i64** %44, align 8
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = load i64, i64* %1, align 8
  %61 = load i64, i64* %29, align 8
  %62 = add i64 %60, 7
  %63 = inttoptr i64 %62 to i64*
  store i64 %61, i64* %63, align 1
  %64 = load i64, i64* %1, align 8
  %65 = load i64, i64* %47, align 8
  %66 = add i64 %64, 15
  %67 = inttoptr i64 %66 to i64*
  store i64 %65, i64* %67, align 1
  %68 = load i64, i64* %1, align 8
  %69 = and i64 %68, -4294967296
  %70 = add i64 %68, 27
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %69, %73
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %76 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %75, align 8
  %77 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %59
  %79 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %76, i64 %74) #11
  br label %93

80:                                               ; preds = %59
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %82 = load i64*, i64** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = icmp eq i64* %82, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %80
  %87 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %88

88:                                               ; preds = %86, %80
  %89 = phi i64* [ %87, %86 ], [ %82, %80 ]
  %90 = ptrtoint i64* %89 to i64
  %91 = add i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  store i64* %92, i64** %81, align 8
  store i64 %74, i64* %89, align 8
  br label %93

93:                                               ; preds = %78, %88
  %94 = phi i64* [ %79, %78 ], [ %89, %88 ]
  %95 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %96 = sub i32 %2, %8
  %97 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"* %95, i64* %94, i32 %96) #11
  %98 = load i64, i64* %1, align 8
  %99 = load i64, i64* %97, align 8
  %100 = add i64 %98, 27
  %101 = inttoptr i64 %100 to i32*
  %102 = trunc i64 %99 to i32
  store atomic volatile i32 %102, i32* %101 monotonic, align 4
  %103 = and i64 %99, 1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %116, label %105

105:                                              ; preds = %93
  %106 = and i64 %98, -262144
  %107 = or i64 %106, 8
  %108 = inttoptr i64 %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 262144
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %105
  %113 = or i64 %106, 16
  %114 = inttoptr i64 %113 to %"class.v8::internal::Heap"**
  %115 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %114, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %115, i64 %98, i64 %100, i64 %99) #11
  br label %116

116:                                              ; preds = %112, %105, %93
  %117 = and i64 %99, -262144
  %118 = or i64 %117, 8
  %119 = inttoptr i64 %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %120, 24
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %116
  %124 = and i64 %98, -262144
  %125 = or i64 %124, 8
  %126 = inttoptr i64 %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, 24
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %123
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %98, i64 %100, i64 %99) #11
  br label %131

131:                                              ; preds = %130, %123, %116
  %132 = load i64, i64* %1, align 8
  %133 = add i64 %132, 3
  %134 = inttoptr i64 %133 to i32*
  store i32 %2, i32* %134, align 4
  %135 = bitcast %"class.v8::internal::IndirectFunctionTableEntry"* %4 to i8*
  %136 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %4, i64 0, i32 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %4, i64 0, i32 1, i32 0, i32 0
  %138 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %4, i64 0, i32 2
  br label %139

139:                                              ; preds = %139, %131
  %140 = phi i32 [ %8, %131 ], [ %141, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #11
  store i64* null, i64** %136, align 8
  store i64* %1, i64** %137, align 8
  store i32 %140, i32* %138, align 8
  call void @_ZN2v88internal26IndirectFunctionTableEntry5clearEv(%"class.v8::internal::IndirectFunctionTableEntry"* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #11
  %141 = add i32 %140, 1
  %142 = icmp eq i32 %141, %2
  br i1 %142, label %143, label %139

143:                                              ; preds = %139, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmMemoryObject3NewEPNS0_7IsolateENS0_11MaybeHandleINS0_13JSArrayBufferEEEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", align 8
  %5 = icmp eq i64* %1, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %3
  %7 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore18AllocateWasmMemoryEPNS0_7IsolateEmmNS0_10SharedFlagE(%"class.v8::internal::Isolate"* %0, i64 0, i64 0, i8 zeroext 0) #11
  %8 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %9 = icmp eq %"class.v8::internal::BackingStore"* %7, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = ptrtoint %"class.v8::internal::BackingStore"* %7 to i64
  %12 = tail call i8* @_Znwm(i64 32) #15
  %13 = bitcast i8* %12 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 24
  %16 = bitcast i8* %15 to i64*
  store i64 %11, i64* %16, align 8
  %17 = bitcast i8* %12 to %"class.std::__1::__shared_weak_count"*
  br label %18

18:                                               ; preds = %10, %6
  %19 = phi %"class.std::__1::__shared_weak_count"* [ %17, %10 ], [ null, %6 ]
  %20 = tail call i64* @_ZN2v88internal7Factory16NewJSArrayBufferENSt3__110shared_ptrINS0_12BackingStoreEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %8, %"class.v8::internal::BackingStore"* %7, %"class.std::__1::__shared_weak_count"* %19, i8 zeroext 0) #11
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i64* [ %20, %18 ], [ %1, %3 ]
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, -4294967296
  %26 = add i64 %24, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 19
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %25, %34
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %37 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %36, align 8
  %38 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %21
  %40 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %37, i64 %35) #11
  %41 = load i64, i64* %40, align 8
  br label %55

42:                                               ; preds = %21
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %44, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi i64* [ %49, %48 ], [ %44, %42 ]
  %52 = ptrtoint i64* %51 to i64
  %53 = add i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  store i64* %54, i64** %43, align 8
  store i64 %35, i64* %51, align 8
  br label %55

55:                                               ; preds = %39, %50
  %56 = phi i64 [ %41, %39 ], [ %35, %50 ]
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 839
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %36, align 8
  %64 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %55
  %66 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %63, i64 %62) #11
  br label %80

67:                                               ; preds = %55
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = icmp eq i64* %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  %74 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %75

75:                                               ; preds = %73, %67
  %76 = phi i64* [ %74, %73 ], [ %69, %67 ]
  %77 = ptrtoint i64* %76 to i64
  %78 = add i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  store i64* %79, i64** %68, align 8
  store i64 %62, i64* %76, align 8
  br label %80

80:                                               ; preds = %65, %75
  %81 = phi i64* [ %66, %65 ], [ %76, %75 ]
  %82 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %83 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %82, i64* %81, i8 zeroext 1) #11
  %84 = load i64, i64* %83, align 8
  %85 = load i64, i64* %22, align 8
  %86 = add i64 %84, 11
  %87 = inttoptr i64 %86 to i32*
  %88 = trunc i64 %85 to i32
  store atomic volatile i32 %88, i32* %87 monotonic, align 4
  %89 = and i64 %85, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %102, label %91

91:                                               ; preds = %80
  %92 = and i64 %84, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 262144
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %91
  %99 = or i64 %92, 16
  %100 = inttoptr i64 %99 to %"class.v8::internal::Heap"**
  %101 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %100, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %101, i64 %84, i64 %86, i64 %85) #11
  br label %102

102:                                              ; preds = %98, %91, %80
  %103 = and i64 %85, -262144
  %104 = or i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 24
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %102
  %110 = and i64 %84, -262144
  %111 = or i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 24
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %109
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %84, i64 %86, i64 %85) #11
  br label %117

117:                                              ; preds = %102, %109, %116
  %118 = load i64, i64* %83, align 8
  %119 = shl i32 %2, 1
  %120 = add i64 %118, 15
  %121 = inttoptr i64 %120 to i32*
  store atomic volatile i32 %119, i32* %121 monotonic, align 4
  %122 = load i64, i64* %22, align 8
  %123 = add i64 %122, 43
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 16
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %146, label %128

128:                                              ; preds = %117
  %129 = bitcast %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #11
  %130 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %122, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %4, i64 0, i32 0
  %132 = call { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal13JSArrayBuffer15GetBackingStoreEv(%"class.v8::internal::JSArrayBuffer"* nonnull %131) #11
  %133 = extractvalue { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %132, 0
  %134 = extractvalue { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %132, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #11
  call void @_ZN2v88internal12BackingStore28AttachSharedWasmMemoryObjectEPNS0_7IsolateENS0_6HandleINS0_16WasmMemoryObjectEEE(%"class.v8::internal::BackingStore"* %133, %"class.v8::internal::Isolate"* %0, i64* %83) #11
  %135 = icmp eq %"class.std::__1::__shared_weak_count"* %134, null
  br i1 %135, label %146, label %136

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %134, i64 0, i32 0, i32 1
  %138 = atomicrmw add i64* %137, i64 -1 acq_rel
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %134, i64 0, i32 0
  %142 = bitcast %"class.std::__1::__shared_weak_count"* %134 to void (%"class.std::__1::__shared_count"*)***
  %143 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %143, i64 2
  %145 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %144, align 8
  call void %145(%"class.std::__1::__shared_count"* %141) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %134) #11
  br label %146

146:                                              ; preds = %117, %140, %136, %128
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 474
  %148 = call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %22, i64* %147, i64* %83, i32 0, i64 0) #11
  %149 = icmp eq i64* %148, null
  br i1 %149, label %150, label %151, !prof !2

150:                                              ; preds = %146
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #16
  unreachable

151:                                              ; preds = %146
  ret i64* %83
}

declare %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore18AllocateWasmMemoryEPNS0_7IsolateEmmNS0_10SharedFlagE(%"class.v8::internal::Isolate"*, i64, i64, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory16NewJSArrayBufferENSt3__110shared_ptrINS0_12BackingStoreEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"*, i8 zeroext) local_unnamed_addr #2

declare { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal13JSArrayBuffer15GetBackingStoreEv(%"class.v8::internal::JSArrayBuffer"*) local_unnamed_addr #2

declare void @_ZN2v88internal12BackingStore28AttachSharedWasmMemoryObjectEPNS0_7IsolateENS0_6HandleINS0_16WasmMemoryObjectEEE(%"class.v8::internal::BackingStore"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmMemoryObject3NewEPNS0_7IsolateEiiNS0_10SharedFlagE(%"class.v8::internal::Isolate"*, i32, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %2, -1
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = tail call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #11
  br label %8

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %2, %4 ], [ %7, %6 ]
  %10 = sext i32 %1 to i64
  %11 = sext i32 %9 to i64
  %12 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore18AllocateWasmMemoryEPNS0_7IsolateEmmNS0_10SharedFlagE(%"class.v8::internal::Isolate"* %0, i64 %10, i64 %11, i8 zeroext %3) #11
  %13 = icmp eq %"class.v8::internal::BackingStore"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"class.v8::internal::BackingStore"* %12 to i64
  %16 = icmp eq i8 %3, 1
  %17 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %18 = tail call i8* @_Znwm(i64 32) #15
  %19 = bitcast i8* %18 to i32 (...)***
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 24
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = bitcast i8* %18 to %"class.std::__1::__shared_weak_count"*
  br i1 %16, label %24, label %26

24:                                               ; preds = %14
  %25 = tail call i64* @_ZN2v88internal7Factory22NewJSSharedArrayBufferENSt3__110shared_ptrINS0_12BackingStoreEEE(%"class.v8::internal::Factory"* %17, %"class.v8::internal::BackingStore"* nonnull %12, %"class.std::__1::__shared_weak_count"* nonnull %23) #11
  br label %28

26:                                               ; preds = %14
  %27 = tail call i64* @_ZN2v88internal7Factory16NewJSArrayBufferENSt3__110shared_ptrINS0_12BackingStoreEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %17, %"class.v8::internal::BackingStore"* nonnull %12, %"class.std::__1::__shared_weak_count"* nonnull %23, i8 zeroext 0) #11
  br label %28

28:                                               ; preds = %24, %26
  %29 = phi i64* [ %25, %24 ], [ %27, %26 ]
  %30 = tail call i64* @_ZN2v88internal16WasmMemoryObject3NewEPNS0_7IsolateENS0_11MaybeHandleINS0_13JSArrayBufferEEEi(%"class.v8::internal::Isolate"* %0, i64* %29, i32 %2)
  br label %31

31:                                               ; preds = %8, %28
  %32 = phi i64* [ %30, %28 ], [ null, %8 ]
  ret i64* %32
}

declare i32 @_ZN2v88internal4wasm13max_mem_pagesEv() local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory22NewJSSharedArrayBufferENSt3__110shared_ptrINS0_12BackingStoreEEE(%"class.v8::internal::Factory"*, %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16WasmMemoryObject11AddInstanceEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_18WasmInstanceObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 19
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %10 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %9, i64 0, i32 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %9, i64 0, i32 1, i64 0
  br label %25

17:                                               ; preds = %11, %3
  %18 = and i64 %5, -262144
  %19 = or i64 %18, 16
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = add i64 %21, -41416
  %23 = inttoptr i64 %22 to %"class.v8::internal::Isolate"*
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %25

25:                                               ; preds = %15, %17
  %26 = phi i64* [ %24, %17 ], [ %16, %15 ]
  %27 = getelementptr inbounds i64, i64* %26, i64 4
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = icmp eq i32 %8, %29
  br i1 %30, label %53, label %31

31:                                               ; preds = %25
  %32 = and i64 %5, -4294967296
  %33 = zext i32 %8 to i64
  %34 = or i64 %32, %33
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %34) #11
  br label %78

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %34, i64* %49, align 8
  br label %78

53:                                               ; preds = %25
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %55 = ptrtoint %"class.v8::internal::Heap"* %54 to i64
  %56 = add i64 %55, -41416
  %57 = inttoptr i64 %56 to %"class.v8::internal::Isolate"*
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 0, i32 7, i32 0, i64 120
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %61 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %62 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %53
  %64 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %61, i64 %59) #11
  br label %78

65:                                               ; preds = %53
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %69 = load i64*, i64** %68, align 8
  %70 = icmp eq i64* %67, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %65
  %72 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %73

73:                                               ; preds = %71, %65
  %74 = phi i64* [ %72, %71 ], [ %67, %65 ]
  %75 = ptrtoint i64* %74 to i64
  %76 = add i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  store i64* %77, i64** %66, align 8
  store i64 %59, i64* %74, align 8
  br label %78

78:                                               ; preds = %73, %63, %48, %38
  %79 = phi i64* [ %39, %38 ], [ %49, %48 ], [ %64, %63 ], [ %74, %73 ]
  %80 = bitcast %"class.v8::internal::MaybeObjectHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #11
  %81 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %4, i64 0, i32 0
  store i32 0, i32* %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %4, i64 0, i32 1, i32 0
  store i64* %2, i64** %82, align 8
  %83 = call i64* @_ZN2v88internal13WeakArrayList6AppendEPNS0_7IsolateENS0_6HandleIS1_EERKNS0_17MaybeObjectHandleENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %79, %"class.v8::internal::MaybeObjectHandle"* nonnull dereferenceable(16) %4, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  %84 = load i64, i64* %1, align 8
  %85 = load i64, i64* %83, align 8
  %86 = add i64 %84, 19
  %87 = inttoptr i64 %86 to i32*
  %88 = trunc i64 %85 to i32
  store atomic volatile i32 %88, i32* %87 monotonic, align 4
  %89 = and i64 %85, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %102, label %91

91:                                               ; preds = %78
  %92 = and i64 %84, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 262144
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %91
  %99 = or i64 %92, 16
  %100 = inttoptr i64 %99 to %"class.v8::internal::Heap"**
  %101 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %100, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %101, i64 %84, i64 %86, i64 %85) #11
  br label %102

102:                                              ; preds = %98, %91, %78
  %103 = and i64 %85, -262144
  %104 = or i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 24
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %102
  %110 = and i64 %84, -262144
  %111 = or i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 24
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %109
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %84, i64 %86, i64 %85) #11
  br label %117

117:                                              ; preds = %102, %109, %116
  %118 = load i64, i64* %1, align 8
  %119 = and i64 %118, -4294967296
  %120 = add i64 %118, 11
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %119, %123
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %126 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %125, align 8
  %127 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %117
  %129 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %126, i64 %124) #11
  br label %143

130:                                              ; preds = %117
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %134 = load i64*, i64** %133, align 8
  %135 = icmp eq i64* %132, %134
  br i1 %135, label %136, label %138

136:                                              ; preds = %130
  %137 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %138

138:                                              ; preds = %136, %130
  %139 = phi i64* [ %137, %136 ], [ %132, %130 ]
  %140 = ptrtoint i64* %139 to i64
  %141 = add i64 %140, 8
  %142 = inttoptr i64 %141 to i64*
  store i64* %142, i64** %131, align 8
  store i64 %124, i64* %139, align 8
  br label %143

143:                                              ; preds = %128, %138
  %144 = phi i64* [ %129, %128 ], [ %139, %138 ]
  call fastcc void @_ZN2v88internal12_GLOBAL__N_117SetInstanceMemoryENS0_6HandleINS0_18WasmInstanceObjectEEENS2_INS0_13JSArrayBufferEEE(i64* %2, i64* %144)
  ret void
}

declare i64* @_ZN2v88internal13WeakArrayList6AppendEPNS0_7IsolateENS0_6HandleIS1_EERKNS0_17MaybeObjectHandleENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MaybeObjectHandle"* dereferenceable(16), i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_117SetInstanceMemoryENS0_6HandleINS0_18WasmInstanceObjectEEENS2_INS0_13JSArrayBufferEEE(i64*, i64*) unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 111
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 11
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = add i64 %15, 3
  %17 = inttoptr i64 %16 to %"struct.v8::internal::ManagedPtrDestructor"**
  %18 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %17, align 1
  %19 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %18, i64 0, i32 3
  %20 = bitcast i8** %19 to %"class.std::__1::shared_ptr.1273"**
  %21 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %21, i64 0, i32 0
  %23 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %23, i64 0, i32 4, i32 0
  %25 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %25, i64 0, i32 33
  %27 = load i8, i8* %26, align 8
  %28 = icmp ne i8 %27, 0
  %29 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %23, i64 0, i32 21
  %30 = load i8, i8* %29, align 8, !range !5
  %31 = icmp eq i8 %30, 0
  %32 = bitcast %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = or i1 %28, %31
  br i1 %33, label %56, label %34

34:                                               ; preds = %2
  %35 = load i64, i64* %1, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %3, i64 0, i32 0
  %38 = call { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal13JSArrayBuffer15GetBackingStoreEv(%"class.v8::internal::JSArrayBuffer"* nonnull %37) #11
  %39 = extractvalue { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %38, 0
  %40 = extractvalue { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %38, 1
  %41 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %39, i64 0, i32 4
  %42 = load i16, i16* %41, align 8
  %43 = and i16 %42, 32
  %44 = icmp eq i16 %43, 0
  %45 = icmp eq %"class.std::__1::__shared_weak_count"* %40, null
  br i1 %45, label %57, label %46

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %40, i64 0, i32 0, i32 1
  %48 = atomicrmw add i64* %47, i64 -1 acq_rel
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %57

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %40, i64 0, i32 0
  %52 = bitcast %"class.std::__1::__shared_weak_count"* %40 to void (%"class.std::__1::__shared_count"*)***
  %53 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %53, i64 2
  %55 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, align 8
  call void %55(%"class.std::__1::__shared_count"* %51) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %40) #11
  br label %57

56:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %61

57:                                               ; preds = %50, %46, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br i1 %44, label %60, label %58

58:                                               ; preds = %57
  %59 = load i64, i64* %0, align 8
  br label %61

60:                                               ; preds = %57
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.30, i64 0, i64 0)) #16
  unreachable

61:                                               ; preds = %58, %56
  %62 = phi i64 [ %59, %58 ], [ %4, %56 ]
  %63 = load i64, i64* %1, align 8
  %64 = add i64 %63, 27
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 1
  %67 = add i64 %63, 11
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 1
  %70 = call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #11
  %71 = zext i32 %70 to i64
  %72 = shl nuw nsw i64 %71, 16
  %73 = icmp ult i64 %72, %69
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %61
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0)) #16
  unreachable

75:                                               ; preds = %61
  %76 = call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %69) #11
  %77 = add i64 %76, -1
  %78 = add i64 %62, 11
  %79 = inttoptr i64 %78 to i64*
  store i64 %66, i64* %79, align 1
  %80 = add i64 %62, 19
  %81 = inttoptr i64 %80 to i64*
  store i64 %69, i64* %81, align 1
  %82 = add i64 %62, 27
  %83 = inttoptr i64 %82 to i64*
  store i64 %77, i64* %83, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16WasmMemoryObject16update_instancesEPNS0_7IsolateENS0_6HandleINS0_13JSArrayBufferEEE(%"class.v8::internal::WasmMemoryObject"* nocapture readonly, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::WasmMemoryObject", %"class.v8::internal::WasmMemoryObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 19
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %10 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %9, i64 0, i32 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %9, i64 0, i32 1, i64 0
  br label %25

17:                                               ; preds = %11, %3
  %18 = and i64 %5, -262144
  %19 = or i64 %18, 16
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = add i64 %21, -41416
  %23 = inttoptr i64 %22 to %"class.v8::internal::Isolate"*
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %25

25:                                               ; preds = %15, %17
  %26 = phi i64* [ %24, %17 ], [ %16, %15 ]
  %27 = getelementptr inbounds i64, i64* %26, i64 4
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = icmp eq i32 %8, %29
  br i1 %30, label %110, label %31

31:                                               ; preds = %25
  %32 = and i64 %5, -4294967296
  %33 = zext i32 %8 to i64
  %34 = or i64 %32, %33
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %34) #11
  %40 = load i64, i64* %39, align 8
  br label %54

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %43, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %49

49:                                               ; preds = %47, %41
  %50 = phi i64* [ %48, %47 ], [ %43, %41 ]
  %51 = ptrtoint i64* %50 to i64
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  store i64* %53, i64** %42, align 8
  store i64 %34, i64* %50, align 8
  br label %54

54:                                               ; preds = %38, %49
  %55 = phi i64 [ %40, %38 ], [ %34, %49 ]
  %56 = phi i64* [ %39, %38 ], [ %50, %49 ]
  %57 = add i64 %55, 7
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %59, 1
  br i1 %60, label %61, label %110

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  br label %64

64:                                               ; preds = %61, %101
  %65 = phi i64 [ %55, %61 ], [ %102, %101 ]
  %66 = phi i64 [ 0, %61 ], [ %103, %101 ]
  %67 = trunc i64 %66 to i32
  %68 = shl i32 %67, 2
  %69 = sext i32 %68 to i64
  %70 = add i64 %65, 11
  %71 = add i64 %70, %69
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = and i64 %74, 3
  %76 = icmp eq i64 %75, 3
  %77 = icmp ne i32 %73, 3
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %101

79:                                               ; preds = %64
  %80 = and i64 %65, -4294967296
  %81 = and i64 %74, 4294967293
  %82 = or i64 %81, %80
  %83 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %84 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %79
  %86 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %83, i64 %82) #11
  br label %98

87:                                               ; preds = %79
  %88 = load i64*, i64** %62, align 8
  %89 = load i64*, i64** %63, align 8
  %90 = icmp eq i64* %88, %89
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  %92 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %93

93:                                               ; preds = %91, %87
  %94 = phi i64* [ %92, %91 ], [ %88, %87 ]
  %95 = ptrtoint i64* %94 to i64
  %96 = add i64 %95, 8
  %97 = inttoptr i64 %96 to i64*
  store i64* %97, i64** %62, align 8
  store i64 %82, i64* %94, align 8
  br label %98

98:                                               ; preds = %85, %93
  %99 = phi i64* [ %86, %85 ], [ %94, %93 ]
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_117SetInstanceMemoryENS0_6HandleINS0_18WasmInstanceObjectEEENS2_INS0_13JSArrayBufferEEE(i64* %99, i64* %2)
  %100 = load i64, i64* %56, align 8
  br label %101

101:                                              ; preds = %64, %98
  %102 = phi i64 [ %65, %64 ], [ %100, %98 ]
  %103 = add nuw nsw i64 %66, 1
  %104 = add i64 %102, 7
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = ashr i32 %106, 1
  %108 = sext i32 %107 to i64
  %109 = icmp slt i64 %103, %108
  br i1 %109, label %64, label %110

110:                                              ; preds = %101, %54, %25
  %111 = load i64, i64* %2, align 8
  %112 = load i64, i64* %4, align 8
  %113 = add i64 %112, 11
  %114 = inttoptr i64 %113 to i32*
  %115 = trunc i64 %111 to i32
  store atomic volatile i32 %115, i32* %114 monotonic, align 4
  %116 = load i64, i64* %4, align 8
  %117 = add i64 %116, 11
  %118 = and i64 %111, 1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %133, label %120

120:                                              ; preds = %110
  %121 = and i64 %116, -262144
  %122 = or i64 %121, 8
  %123 = inttoptr i64 %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = and i64 %124, 262144
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %120
  %128 = or i64 %121, 16
  %129 = inttoptr i64 %128 to %"class.v8::internal::Heap"**
  %130 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %129, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %130, i64 %116, i64 %117, i64 %111) #11
  %131 = load i64, i64* %4, align 8
  %132 = add i64 %131, 11
  br label %133

133:                                              ; preds = %127, %120, %110
  %134 = phi i64 [ %132, %127 ], [ %117, %120 ], [ %117, %110 ]
  %135 = phi i64 [ %131, %127 ], [ %116, %120 ], [ %116, %110 ]
  %136 = and i64 %111, -262144
  %137 = or i64 %136, 8
  %138 = inttoptr i64 %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, 24
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %150, label %142

142:                                              ; preds = %133
  %143 = and i64 %135, -262144
  %144 = or i64 %143, 8
  %145 = inttoptr i64 %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = and i64 %146, 24
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %142
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %135, i64 %134, i64 %111) #11
  br label %150

150:                                              ; preds = %133, %142, %149
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal16WasmMemoryObject4GrowEPNS0_7IsolateENS0_6HandleIS1_EEj(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1803"], align 16
  %5 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef", align 8
  %11 = load atomic i64, i64* @_ZZN2v88internal16WasmMemoryObject4GrowEPNS0_7IsolateENS0_6HandleIS1_EEjE28trace_event_unique_atomic919 monotonic, align 8
  %12 = inttoptr i64 %11 to i8*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %3
  %15 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %16 = bitcast %"class.v8::TracingController"* %15 to i8* (%"class.v8::TracingController"*, i8*)***
  %17 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %16, align 8
  %18 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %17, i64 2
  %19 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %18, align 8
  %20 = tail call i8* %19(%"class.v8::TracingController"* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)) #11
  %21 = ptrtoint i8* %20 to i64
  store atomic volatile i64 %21, i64* @_ZZN2v88internal16WasmMemoryObject4GrowEPNS0_7IsolateENS0_6HandleIS1_EEjE28trace_event_unique_atomic919 monotonic, align 8
  br label %22

22:                                               ; preds = %3, %14
  %23 = phi i8* [ %12, %3 ], [ %20, %14 ]
  %24 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %25, align 8
  %26 = load atomic i8, i8* %23 monotonic, align 1
  %27 = and i8 %26, 5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %60, label %29

29:                                               ; preds = %22
  %30 = bitcast [2 x %"class.std::__1::unique_ptr.1803"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11
  %31 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1803"], [2 x %"class.std::__1::unique_ptr.1803"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 0, i64 16, i1 false) #11
  %32 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %33 = bitcast %"class.v8::TracingController"* %32 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1803"*, i32)***
  %34 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1803"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1803"*, i32)*** %33, align 8
  %35 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1803"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1803"*, i32)** %34, i64 3
  %36 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1803"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1803"*, i32)** %35, align 8
  %37 = call i64 %36(%"class.v8::TracingController"* %32, i8 signext 88, i8* %23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1803"* nonnull %31, i32 0) #11
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1803"], [2 x %"class.std::__1::unique_ptr.1803"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %39 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %38, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.v8::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %29
  %42 = bitcast %"class.v8::ConvertableToTraceFormat"* %39 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.v8::ConvertableToTraceFormat"* nonnull %39) #11
  br label %46

46:                                               ; preds = %41, %29
  %47 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1803"], [2 x %"class.std::__1::unique_ptr.1803"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %47, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %47, align 16
  %49 = icmp eq %"class.v8::ConvertableToTraceFormat"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.v8::ConvertableToTraceFormat"* %48 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, i64 1
  %54 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %53, align 8
  call void %54(%"class.v8::ConvertableToTraceFormat"* nonnull %48) #11
  br label %55

55:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  %56 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %56, i64 0, i32 0
  store i8* %23, i8** %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 2
  store i64 %37, i64* %59, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %56, %"struct.v8::internal::tracing::ScopedTracer::Data"** %25, align 8
  br label %60

60:                                               ; preds = %22, %55
  %61 = load i64, i64* %1, align 8
  %62 = and i64 %61, -4294967296
  %63 = add i64 %61, 11
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %69 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %68, align 8
  %70 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %60
  %72 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %69, i64 %67) #11
  %73 = load i64, i64* %72, align 8
  br label %87

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %78 = load i64*, i64** %77, align 8
  %79 = icmp eq i64* %76, %78
  br i1 %79, label %80, label %82

80:                                               ; preds = %74
  %81 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %82

82:                                               ; preds = %80, %74
  %83 = phi i64* [ %81, %80 ], [ %76, %74 ]
  %84 = ptrtoint i64* %83 to i64
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %85 to i64*
  store i64* %86, i64** %75, align 8
  store i64 %67, i64* %83, align 8
  br label %87

87:                                               ; preds = %71, %82
  %88 = phi i64 [ %73, %71 ], [ %67, %82 ]
  %89 = phi i64* [ %72, %71 ], [ %83, %82 ]
  %90 = add i64 %88, 43
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %239

95:                                               ; preds = %87
  %96 = call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #11
  %97 = load i64, i64* %1, align 8
  %98 = add i64 %97, 15
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = icmp sgt i32 %100, -1
  br i1 %101, label %102, label %106

102:                                              ; preds = %95
  %103 = lshr i32 %100, 1
  %104 = icmp ult i32 %103, %96
  %105 = select i1 %104, i32 %103, i32 %96
  br label %106

106:                                              ; preds = %102, %95
  %107 = phi i32 [ %105, %102 ], [ %96, %95 ]
  %108 = load i64, i64* %89, align 8
  %109 = add i64 %108, 11
  %110 = inttoptr i64 %109 to i64*
  %111 = load i64, i64* %110, align 1
  %112 = lshr i64 %111, 16
  %113 = call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #11
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %112, %114
  br i1 %115, label %116, label %117, !prof !2

116:                                              ; preds = %106
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0)) #16
  unreachable

117:                                              ; preds = %106
  %118 = zext i32 %2 to i64
  %119 = zext i32 %107 to i64
  %120 = sub nsw i64 %119, %112
  %121 = icmp ult i64 %120, %118
  br i1 %121, label %239, label %122

122:                                              ; preds = %117
  %123 = bitcast %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #11
  %124 = load i64, i64* %89, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %6, i64 0, i32 0
  %127 = call { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal13JSArrayBuffer15GetBackingStoreEv(%"class.v8::internal::JSArrayBuffer"* nonnull %126) #11
  %128 = extractvalue { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %127, 0
  %129 = extractvalue { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %127, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #11
  %130 = icmp eq %"class.v8::internal::BackingStore"* %128, null
  br i1 %130, label %226, label %131

131:                                              ; preds = %122
  %132 = load i64, i64* %89, align 8
  %133 = add i64 %132, 43
  %134 = inttoptr i64 %133 to i32*
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 16
  %137 = icmp eq i32 %136, 0
  %138 = call { i8, i64 } @_ZN2v88internal12BackingStore21GrowWasmMemoryInPlaceEPNS0_7IsolateEmm(%"class.v8::internal::BackingStore"* nonnull %128, %"class.v8::internal::Isolate"* %0, i64 %118, i64 %119) #11
  %139 = extractvalue { i8, i64 } %138, 0
  %140 = extractvalue { i8, i64 } %138, 1
  %141 = icmp ne i8 %139, 0
  br i1 %137, label %173, label %142

142:                                              ; preds = %131
  br i1 %141, label %143, label %226

143:                                              ; preds = %142
  %144 = icmp eq %"class.std::__1::__shared_weak_count"* %129, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %129, i64 0, i32 0, i32 1
  %147 = atomicrmw add i64* %146, i64 1 monotonic
  br label %148

148:                                              ; preds = %143, %145
  call void @_ZN2v88internal12BackingStore29BroadcastSharedWasmMemoryGrowEPNS0_7IsolateENSt3__110shared_ptrIS1_EE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::BackingStore"* nonnull %128, %"class.std::__1::__shared_weak_count"* %129) #11
  %149 = load i64, i64* %89, align 8
  %150 = load i64, i64* %1, align 8
  %151 = and i64 %150, -4294967296
  %152 = add i64 %150, 11
  %153 = inttoptr i64 %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %151, %155
  %157 = trunc i64 %149 to i32
  %158 = icmp eq i32 %154, %157
  br i1 %158, label %159, label %160, !prof !2

159:                                              ; preds = %148
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

160:                                              ; preds = %148
  %161 = icmp eq i8 %139, 1
  br i1 %161, label %163, label %162, !prof !4

162:                                              ; preds = %160
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

163:                                              ; preds = %160
  %164 = add i64 %140, %118
  %165 = shl i64 %164, 16
  %166 = add i64 %156, 11
  %167 = inttoptr i64 %166 to i64*
  %168 = load i64, i64* %167, align 1
  %169 = icmp ugt i64 %165, %168
  br i1 %169, label %170, label %171, !prof !2

170:                                              ; preds = %163
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.8, i64 0, i64 0)) #16
  unreachable

171:                                              ; preds = %163
  %172 = trunc i64 %140 to i32
  br label %226

173:                                              ; preds = %131
  br i1 %141, label %174, label %194

174:                                              ; preds = %173
  %175 = bitcast %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #11
  %176 = load i64, i64* %89, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal13JSArrayBuffer6DetachEb(%"class.v8::internal::JSArrayBuffer"* nonnull %178, i1 zeroext true) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #11
  %179 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %180 = call i64* @_ZN2v88internal7Factory16NewJSArrayBufferENSt3__110shared_ptrINS0_12BackingStoreEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %179, %"class.v8::internal::BackingStore"* nonnull %128, %"class.std::__1::__shared_weak_count"* %129, i8 zeroext 0) #11
  %181 = bitcast %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #11
  %182 = load i64, i64* %1, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef"* %8, i64 0, i32 0
  call void @_ZN2v88internal16WasmMemoryObject16update_instancesEPNS0_7IsolateENS0_6HandleINS0_13JSArrayBufferEEE(%"class.v8::internal::WasmMemoryObject"* nonnull %184, %"class.v8::internal::Isolate"* %0, i64* %180)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #11
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 474
  %186 = call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %180, i64* %185, i64* %1, i32 0, i64 0) #11
  %187 = icmp eq i64* %186, null
  br i1 %187, label %188, label %189, !prof !2

188:                                              ; preds = %174
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #16
  unreachable

189:                                              ; preds = %174
  %190 = icmp eq i8 %139, 1
  br i1 %190, label %192, label %191, !prof !4

191:                                              ; preds = %189
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

192:                                              ; preds = %189
  %193 = trunc i64 %140 to i32
  br label %239

194:                                              ; preds = %173
  %195 = add nuw nsw i64 %112, %118
  %196 = call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore14CopyWasmMemoryEPNS0_7IsolateEm(%"class.v8::internal::BackingStore"* nonnull %128, %"class.v8::internal::Isolate"* %0, i64 %195) #11
  %197 = icmp eq %"class.v8::internal::BackingStore"* %196, null
  br i1 %197, label %198, label %202

198:                                              ; preds = %194
  %199 = load i8, i8* @_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE, align 1, !range !5
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %226, label %201

201:                                              ; preds = %198
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0)) #16
  unreachable

202:                                              ; preds = %194
  %203 = ptrtoint %"class.v8::internal::BackingStore"* %196 to i64
  %204 = bitcast %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #11
  %205 = load i64, i64* %89, align 8
  %206 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArrayBuffer>::ObjectRef"* %9, i64 0, i32 0
  call void @_ZN2v88internal13JSArrayBuffer6DetachEb(%"class.v8::internal::JSArrayBuffer"* nonnull %207, i1 zeroext true) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #11
  %208 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %209 = call i8* @_Znwm(i64 32) #15
  %210 = bitcast i8* %209 to i32 (...)***
  %211 = getelementptr inbounds i8, i8* %209, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %211, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %210, align 8
  %212 = getelementptr inbounds i8, i8* %209, i64 24
  %213 = bitcast i8* %212 to i64*
  store i64 %203, i64* %213, align 8
  %214 = bitcast i8* %209 to %"class.std::__1::__shared_weak_count"*
  %215 = call i64* @_ZN2v88internal7Factory16NewJSArrayBufferENSt3__110shared_ptrINS0_12BackingStoreEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %208, %"class.v8::internal::BackingStore"* nonnull %196, %"class.std::__1::__shared_weak_count"* nonnull %214, i8 zeroext 0) #11
  %216 = bitcast %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #11
  %217 = load i64, i64* %1, align 8
  %218 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WasmMemoryObject>::ObjectRef"* %10, i64 0, i32 0
  call void @_ZN2v88internal16WasmMemoryObject16update_instancesEPNS0_7IsolateENS0_6HandleINS0_13JSArrayBufferEEE(%"class.v8::internal::WasmMemoryObject"* nonnull %219, %"class.v8::internal::Isolate"* %0, i64* %215)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216) #11
  %220 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 474
  %221 = call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %215, i64* %220, i64* %1, i32 0, i64 0) #11
  %222 = icmp eq i64* %221, null
  br i1 %222, label %223, label %224, !prof !2

223:                                              ; preds = %202
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #16
  unreachable

224:                                              ; preds = %202
  %225 = trunc i64 %112 to i32
  br label %226

226:                                              ; preds = %198, %122, %224, %171, %142
  %227 = phi i32 [ -1, %122 ], [ %172, %171 ], [ -1, %142 ], [ %225, %224 ], [ -1, %198 ]
  %228 = icmp eq %"class.std::__1::__shared_weak_count"* %129, null
  br i1 %228, label %239, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %129, i64 0, i32 0, i32 1
  %231 = atomicrmw add i64* %230, i64 -1 acq_rel
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %239

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %129, i64 0, i32 0
  %235 = bitcast %"class.std::__1::__shared_weak_count"* %129 to void (%"class.std::__1::__shared_count"*)***
  %236 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %236, i64 2
  %238 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %237, align 8
  call void %238(%"class.std::__1::__shared_count"* %234) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %129) #11
  br label %239

239:                                              ; preds = %87, %117, %192, %226, %229, %233
  %240 = phi i32 [ -1, %87 ], [ -1, %117 ], [ %193, %192 ], [ %227, %226 ], [ %227, %229 ], [ %227, %233 ]
  %241 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %25, align 8
  %242 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %241, null
  br i1 %242, label %259, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = load atomic i8, i8* %245 monotonic, align 1
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %259, label %248

248:                                              ; preds = %243
  %249 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %250 = load i8*, i8** %244, align 8
  %251 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %252 = load i8*, i8** %251, align 8
  %253 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.v8::TracingController"* %249 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %256 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %255, align 8
  %257 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %256, i64 5
  %258 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %257, align 8
  call void %258(%"class.v8::TracingController"* %249, i8* %250, i8* %252, i64 %254) #11
  br label %259

259:                                              ; preds = %239, %243, %248
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  ret i32 %240
}

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #2

declare { i8, i64 } @_ZN2v88internal12BackingStore21GrowWasmMemoryInPlaceEPNS0_7IsolateEmm(%"class.v8::internal::BackingStore"*, %"class.v8::internal::Isolate"*, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal12BackingStore29BroadcastSharedWasmMemoryGrowEPNS0_7IsolateENSt3__110shared_ptrIS1_EE(%"class.v8::internal::Isolate"*, %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #2

declare void @_ZN2v88internal13JSArrayBuffer6DetachEb(%"class.v8::internal::JSArrayBuffer"*, i1 zeroext) local_unnamed_addr #2

declare %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore14CopyWasmMemoryEPNS0_7IsolateEm(%"class.v8::internal::BackingStore"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmGlobalObject3NewEPNS0_7IsolateENS0_6HandleINS0_18WasmInstanceObjectEEENS0_11MaybeHandleINS0_13JSArrayBufferEEENS7_INS0_10FixedArrayEEENS0_4wasm9ValueTypeEib(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 19
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %10, %19
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %22 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %21, align 8
  %23 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %7
  %25 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %22, i64 %20) #11
  %26 = load i64, i64* %25, align 8
  br label %40

27:                                               ; preds = %7
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %29, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %35

35:                                               ; preds = %33, %27
  %36 = phi i64* [ %34, %33 ], [ %29, %27 ]
  %37 = ptrtoint i64* %36 to i64
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  store i64* %39, i64** %28, align 8
  store i64 %20, i64* %36, align 8
  br label %40

40:                                               ; preds = %24, %35
  %41 = phi i64 [ %26, %24 ], [ %20, %35 ]
  %42 = and i64 %41, -4294967296
  %43 = add i64 %41, 831
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %42, %46
  %48 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %21, align 8
  %49 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %40
  %51 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %48, i64 %47) #11
  br label %65

52:                                               ; preds = %40
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %54, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %60

60:                                               ; preds = %58, %52
  %61 = phi i64* [ %59, %58 ], [ %54, %52 ]
  %62 = ptrtoint i64* %61 to i64
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  store i64* %64, i64** %53, align 8
  store i64 %47, i64* %61, align 8
  br label %65

65:                                               ; preds = %50, %60
  %66 = phi i64* [ %51, %50 ], [ %61, %60 ]
  %67 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %68 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %67, i64* %66, i8 zeroext 0) #11
  %69 = icmp eq i64* %1, null
  br i1 %69, label %104, label %70

70:                                               ; preds = %65
  %71 = load i64, i64* %68, align 8
  %72 = load i64, i64* %1, align 8
  %73 = add i64 %71, 11
  %74 = inttoptr i64 %73 to i32*
  %75 = trunc i64 %72 to i32
  store atomic volatile i32 %75, i32* %74 monotonic, align 4
  %76 = and i64 %72, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %89, label %78

78:                                               ; preds = %70
  %79 = and i64 %71, -262144
  %80 = or i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 262144
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %78
  %86 = or i64 %79, 16
  %87 = inttoptr i64 %86 to %"class.v8::internal::Heap"**
  %88 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %87, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %88, i64 %71, i64 %73, i64 %72) #11
  br label %89

89:                                               ; preds = %85, %78, %70
  %90 = and i64 %72, -262144
  %91 = or i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, 24
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %89
  %97 = and i64 %71, -262144
  %98 = or i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 24
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %71, i64 %73, i64 %72) #11
  br label %104

104:                                              ; preds = %103, %96, %89, %65
  %105 = load i64, i64* %68, align 8
  %106 = shl i32 %4, 1
  %107 = add i64 %105, 27
  %108 = inttoptr i64 %107 to i32*
  store atomic volatile i32 %106, i32* %108 monotonic, align 4
  %109 = load i64, i64* %68, align 8
  %110 = shl i32 %5, 1
  %111 = add i64 %109, 23
  %112 = inttoptr i64 %111 to i32*
  store atomic volatile i32 %110, i32* %112 monotonic, align 4
  %113 = load i64, i64* %68, align 8
  %114 = zext i1 %6 to i32
  %115 = shl nuw nsw i32 %114, 1
  %116 = add i64 %113, 31
  %117 = inttoptr i64 %116 to i32*
  store atomic volatile i32 %115, i32* %117 monotonic, align 4
  %118 = and i32 %4, 28
  %119 = icmp eq i32 %118, 8
  br i1 %119, label %120, label %162

120:                                              ; preds = %104
  %121 = icmp eq i64* %3, null
  br i1 %121, label %122, label %127

122:                                              ; preds = %120
  %123 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %124 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %123, i32 1, i8 zeroext 1) #11
  %125 = icmp eq i32 %5, 0
  br i1 %125, label %127, label %126, !prof !4

126:                                              ; preds = %122
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)) #16
  unreachable

127:                                              ; preds = %120, %122
  %128 = phi i64* [ %124, %122 ], [ %3, %120 ]
  %129 = load i64, i64* %68, align 8
  %130 = load i64, i64* %128, align 8
  %131 = add i64 %129, 19
  %132 = inttoptr i64 %131 to i32*
  %133 = trunc i64 %130 to i32
  store atomic volatile i32 %133, i32* %132 monotonic, align 4
  %134 = and i64 %130, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %147, label %136

136:                                              ; preds = %127
  %137 = and i64 %129, -262144
  %138 = or i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, 262144
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %136
  %144 = or i64 %137, 16
  %145 = inttoptr i64 %144 to %"class.v8::internal::Heap"**
  %146 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %145, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %146, i64 %129, i64 %131, i64 %130) #11
  br label %147

147:                                              ; preds = %143, %136, %127
  %148 = and i64 %130, -262144
  %149 = or i64 %148, 8
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, 24
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %215, label %154

154:                                              ; preds = %147
  %155 = and i64 %129, -262144
  %156 = or i64 %155, 8
  %157 = inttoptr i64 %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = and i64 %158, 24
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %215

161:                                              ; preds = %154
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %129, i64 %131, i64 %130) #11
  br label %215

162:                                              ; preds = %104
  %163 = and i32 %4, 31
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp eq i64* %2, null
  %169 = add i32 %167, %5
  %170 = zext i32 %169 to i64
  br i1 %168, label %171, label %174

171:                                              ; preds = %162
  %172 = tail call i64* @_ZN2v88internal7Factory31NewJSArrayBufferAndBackingStoreEmNS0_15InitializedFlagENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %67, i64 %170, i8 zeroext 1, i8 zeroext 0) #11
  %173 = icmp eq i64* %172, null
  br i1 %173, label %215, label %174

174:                                              ; preds = %162, %171
  %175 = phi i64* [ %172, %171 ], [ %2, %162 ]
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 11
  %178 = inttoptr i64 %177 to i64*
  %179 = load i64, i64* %178, align 1
  %180 = icmp ult i64 %179, %170
  br i1 %180, label %181, label %182, !prof !2

181:                                              ; preds = %174
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11, i64 0, i64 0)) #16
  unreachable

182:                                              ; preds = %174
  %183 = load i64, i64* %68, align 8
  %184 = add i64 %183, 15
  %185 = inttoptr i64 %184 to i32*
  %186 = trunc i64 %176 to i32
  store atomic volatile i32 %186, i32* %185 monotonic, align 4
  %187 = and i64 %176, 1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %182
  %190 = and i64 %183, -262144
  %191 = or i64 %190, 8
  %192 = inttoptr i64 %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = and i64 %193, 262144
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %200, label %196

196:                                              ; preds = %189
  %197 = or i64 %190, 16
  %198 = inttoptr i64 %197 to %"class.v8::internal::Heap"**
  %199 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %198, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %199, i64 %183, i64 %184, i64 %176) #11
  br label %200

200:                                              ; preds = %196, %189, %182
  %201 = and i64 %176, -262144
  %202 = or i64 %201, 8
  %203 = inttoptr i64 %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = and i64 %204, 24
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %215, label %207

207:                                              ; preds = %200
  %208 = and i64 %183, -262144
  %209 = or i64 %208, 8
  %210 = inttoptr i64 %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = and i64 %211, 24
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %207
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %183, i64 %184, i64 %176) #11
  br label %215

215:                                              ; preds = %147, %154, %161, %200, %207, %214, %171
  %216 = phi i64* [ null, %171 ], [ %68, %214 ], [ %68, %207 ], [ %68, %200 ], [ %68, %161 ], [ %68, %154 ], [ %68, %147 ]
  ret i64* %216
}

declare i64* @_ZN2v88internal7Factory31NewJSArrayBufferAndBackingStoreEmNS0_15InitializedFlagENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64, i8 zeroext, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal21ImportedFunctionEntry10object_refEv(%"class.v8::internal::ImportedFunctionEntry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 43
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = shl i32 %12, 2
  %14 = sext i32 %13 to i64
  %15 = add i64 %10, 7
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %5, %19
  ret i64 %20
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal21ImportedFunctionEntry6targetEv(%"class.v8::internal::ImportedFunctionEntry"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 47
  %6 = inttoptr i64 %5 to i64**
  %7 = load i64*, i64** %6, align 1
  %8 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i64, i64* %7, i64 %10
  %12 = load i64, i64* %11, align 8
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18WasmInstanceObject13GetCallTargetEj(%"class.v8::internal::WasmInstanceObject"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::WasmInstanceObject", %"class.v8::internal::WasmInstanceObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 111
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 11
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = add i64 %15, 3
  %17 = inttoptr i64 %16 to %"struct.v8::internal::ManagedPtrDestructor"**
  %18 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %17, align 1
  %19 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %18, i64 0, i32 3
  %20 = bitcast i8** %19 to %"class.std::__1::shared_ptr.1273"**
  %21 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %21, i64 0, i32 0
  %23 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %23, i64 0, i32 4, i32 0
  %25 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %25, i64 0, i32 13
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %27, %1
  br i1 %28, label %29, label %36

29:                                               ; preds = %2
  %30 = add i64 %4, 47
  %31 = inttoptr i64 %30 to i64**
  %32 = load i64*, i64** %31, align 1
  %33 = zext i32 %1 to i64
  %34 = getelementptr inbounds i64, i64* %32, i64 %33
  %35 = load i64, i64* %34, align 8
  br label %38

36:                                               ; preds = %2
  %37 = tail call i64 @_ZNK2v88internal4wasm12NativeModule24GetCallTargetForFunctionEj(%"class.v8::internal::wasm::NativeModule"* %23, i32 %1) #11
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i64 [ %35, %29 ], [ %37, %36 ]
  ret i64 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal26IndirectFunctionTableEntry10object_refEv(%"class.v8::internal::IndirectFunctionTableEntry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i64, i64* %3, align 8
  %7 = add i64 %6, 55
  br label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 27
  br label %13

13:                                               ; preds = %8, %5
  %14 = phi i64 [ %12, %8 ], [ %7, %5 ]
  %15 = phi i64 [ %11, %8 ], [ %6, %5 ]
  %16 = and i64 %15, -4294967296
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %16, %19
  %21 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = shl i32 %22, 2
  %24 = sext i32 %23 to i64
  %25 = add i64 %20, 7
  %26 = add i64 %25, %24
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %16, %29
  ret i64 %30
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal26IndirectFunctionTableEntry6sig_idEv(%"class.v8::internal::IndirectFunctionTableEntry"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64* [ %7, %5 ], [ %3, %1 ]
  %10 = phi i64 [ 7, %5 ], [ 67, %1 ]
  %11 = load i64, i64* %9, align 8
  %12 = add i64 %11, %10
  %13 = inttoptr i64 %12 to i32**
  %14 = load i32*, i32** %13, align 1
  %15 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %14, i64 %17
  %19 = load i32, i32* %18, align 4
  ret i32 %19
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal26IndirectFunctionTableEntry6targetEv(%"class.v8::internal::IndirectFunctionTableEntry"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64* [ %7, %5 ], [ %3, %1 ]
  %10 = phi i64 [ 15, %5 ], [ 59, %1 ]
  %11 = load i64, i64* %9, align 8
  %12 = add i64 %11, %10
  %13 = inttoptr i64 %12 to i64**
  %14 = load i64*, i64** %13, align 1
  %15 = getelementptr inbounds %"class.v8::internal::IndirectFunctionTableEntry", %"class.v8::internal::IndirectFunctionTableEntry"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i64, i64* %14, i64 %17
  %19 = load i64, i64* %18, align 8
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21ImportedFunctionEntry11SetWasmToJsEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEEPKNS0_4wasm8WasmCodeE(%"class.v8::internal::ImportedFunctionEntry"* nocapture readonly, %"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::wasm::WasmCode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %6 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = tail call i64* @_ZN2v88internal7Factory9NewTuple2ENS0_6HandleINS0_6ObjectEEES4_NS0_14AllocationTypeE(%"class.v8::internal::Factory"* %5, i64* %7, i64* %2, i8 zeroext 1) #11
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, 43
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = load i64, i64* %8, align 8
  %20 = shl i32 %18, 2
  %21 = sext i32 %20 to i64
  %22 = add i64 %16, 7
  %23 = add i64 %22, %21
  %24 = inttoptr i64 %23 to i32*
  %25 = trunc i64 %19 to i32
  store atomic volatile i32 %25, i32* %24 monotonic, align 4
  %26 = and i64 %19, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %4
  %29 = and i64 %16, -262144
  %30 = or i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 262144
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = or i64 %29, 16
  %37 = inttoptr i64 %36 to %"class.v8::internal::Heap"**
  %38 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %38, i64 %16, i64 %23, i64 %19) #11
  br label %39

39:                                               ; preds = %35, %28
  %40 = and i64 %19, -262144
  %41 = or i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 24
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  %47 = load i64, i64* %31, align 8
  %48 = and i64 %47, 24
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %16, i64 %23, i64 %19) #11
  br label %51

51:                                               ; preds = %4, %39, %46, %50
  %52 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %3, i64 0, i32 1
  %53 = bitcast i8** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = load i64*, i64** %6, align 8
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 47
  %58 = inttoptr i64 %57 to i64**
  %59 = load i64*, i64** %58, align 1
  %60 = load i32, i32* %17, align 8
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i64, i64* %59, i64 %61
  store i64 %54, i64* %62, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21ImportedFunctionEntry13SetWasmToWasmENS0_18WasmInstanceObjectEm(%"class.v8::internal::ImportedFunctionEntry"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 43
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = shl i32 %14, 2
  %16 = sext i32 %15 to i64
  %17 = add i64 %12, 7
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = trunc i64 %1 to i32
  store atomic volatile i32 %20, i32* %19 monotonic, align 4
  %21 = and i64 %1, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %46, label %23

23:                                               ; preds = %3
  %24 = and i64 %12, -262144
  %25 = or i64 %24, 8
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 262144
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %23
  %31 = or i64 %24, 16
  %32 = inttoptr i64 %31 to %"class.v8::internal::Heap"**
  %33 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %32, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %33, i64 %12, i64 %18, i64 %1) #11
  br label %34

34:                                               ; preds = %30, %23
  %35 = and i64 %1, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = load i64, i64* %26, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %12, i64 %18, i64 %1) #11
  br label %46

46:                                               ; preds = %3, %34, %41, %45
  %47 = load i64*, i64** %4, align 8
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 47
  %50 = inttoptr i64 %49 to i64**
  %51 = load i64*, i64** %50, align 1
  %52 = load i32, i32* %13, align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i64, i64* %51, i64 %53
  store i64 %2, i64* %54, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal21ImportedFunctionEntry8instanceEv(%"class.v8::internal::ImportedFunctionEntry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 43
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = shl i32 %12, 2
  %14 = sext i32 %13 to i64
  %15 = add i64 %10, 7
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %5, %19
  %21 = and i64 %19, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %1
  %24 = add i64 %20, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %5, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp eq i16 %31, 1113
  br i1 %32, label %39, label %33

33:                                               ; preds = %1, %23
  %34 = add i64 %20, 3
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  br label %39

39:                                               ; preds = %23, %33
  %40 = phi i64 [ %38, %33 ], [ %20, %23 ]
  ret i64 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal21ImportedFunctionEntry14maybe_callableEv(%"class.v8::internal::ImportedFunctionEntry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 43
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = shl i32 %12, 2
  %14 = sext i32 %13 to i64
  %15 = add i64 %10, 7
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %5, %19
  %21 = and i64 %19, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %39, label %23

23:                                               ; preds = %1
  %24 = add i64 %20, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %5, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp eq i16 %31, 116
  br i1 %32, label %33, label %39

33:                                               ; preds = %23
  %34 = add i64 %20, 7
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  br label %39

39:                                               ; preds = %1, %23, %33
  %40 = phi i64 [ %38, %33 ], [ 0, %23 ], [ 0, %1 ]
  ret i64 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal21ImportedFunctionEntry8callableEv(%"class.v8::internal::ImportedFunctionEntry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 43
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::ImportedFunctionEntry", %"class.v8::internal::ImportedFunctionEntry"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = shl i32 %12, 2
  %14 = sext i32 %13 to i64
  %15 = add i64 %10, 7
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %5, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  ret i64 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18WasmInstanceObject12SetRawMemoryEPhm(%"class.v8::internal::WasmInstanceObject"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #11
  %5 = zext i32 %4 to i64
  %6 = shl nuw nsw i64 %5, 16
  %7 = icmp ult i64 %6, %2
  br i1 %7, label %8, label %9, !prof !2

8:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0)) #16
  unreachable

9:                                                ; preds = %3
  %10 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %2) #11
  %11 = add i64 %10, -1
  %12 = getelementptr inbounds %"class.v8::internal::WasmInstanceObject", %"class.v8::internal::WasmInstanceObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 11
  %15 = inttoptr i64 %14 to i8**
  store i8* %1, i8** %15, align 1
  %16 = load i64, i64* %12, align 8
  %17 = add i64 %16, 19
  %18 = inttoptr i64 %17 to i64*
  store i64 %2, i64* %18, align 1
  %19 = load i64, i64* %12, align 8
  %20 = add i64 %19, 27
  %21 = inttoptr i64 %20 to i64*
  store i64 %11, i64* %21, align 1
  ret void
}

declare i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal18WasmInstanceObject3NewEPNS0_7IsolateENS0_6HandleINS0_16WasmModuleObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 19
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %6, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %18 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %19 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %18, i64 %16) #11
  %22 = load i64, i64* %21, align 8
  br label %36

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %16, i64* %32, align 8
  br label %36

36:                                               ; preds = %20, %31
  %37 = phi i64 [ %22, %20 ], [ %16, %31 ]
  %38 = and i64 %37, -4294967296
  %39 = add i64 %37, 835
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %45 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %36
  %47 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %44, i64 %43) #11
  br label %61

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %50, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i64* [ %55, %54 ], [ %50, %48 ]
  %58 = ptrtoint i64* %57 to i64
  %59 = add i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  store i64* %60, i64** %49, align 8
  store i64 %43, i64* %57, align 8
  br label %61

61:                                               ; preds = %46, %56
  %62 = phi i64* [ %47, %46 ], [ %57, %56 ]
  %63 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %64 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %63, i64* %62, i8 zeroext 1) #11
  %65 = load i64, i64* %64, align 8
  %66 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %67 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %61
  %69 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %66, i64 %65) #11
  br label %83

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi i64* [ %77, %76 ], [ %72, %70 ]
  %80 = ptrtoint i64* %79 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  store i64* %82, i64** %71, align 8
  store i64 %65, i64* %79, align 8
  br label %83

83:                                               ; preds = %68, %78
  %84 = phi i64* [ %69, %68 ], [ %79, %78 ]
  %85 = load i64, i64* %1, align 8
  %86 = and i64 %85, -4294967296
  %87 = add i64 %85, 11
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %86, %90
  %92 = add i64 %91, 3
  %93 = inttoptr i64 %92 to %"struct.v8::internal::ManagedPtrDestructor"**
  %94 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %93, align 1
  %95 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %94, i64 0, i32 3
  %96 = bitcast i8** %95 to %"class.std::__1::shared_ptr.1273"**
  %97 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %97, i64 0, i32 0
  %99 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %99, i64 0, i32 4, i32 0
  %101 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %100, align 8
  %102 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %101, i64 0, i32 13
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %101, i64 0, i32 12
  %105 = load i32, i32* %104, align 8
  %106 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %101, i64 0, i32 17
  %107 = load i32, i32* %106, align 4
  %108 = shl i32 %105, 3
  %109 = zext i32 %108 to i64
  %110 = shl i32 %103, 4
  %111 = zext i32 %110 to i64
  %112 = zext i32 %107 to i64
  %113 = mul nuw nsw i64 %112, 13
  %114 = add nuw nsw i64 %111, 64
  %115 = add nuw nsw i64 %114, %109
  %116 = add nuw nsw i64 %115, %113
  %117 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %101, i64 0, i32 25, i32 0, i32 0
  %118 = load %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"** %117, align 8
  %119 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %101, i64 0, i32 25, i32 0, i32 1
  %120 = load %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"** %119, align 8
  %121 = icmp eq %"struct.v8::internal::wasm::WasmTable"* %118, %120
  br i1 %121, label %132, label %122

122:                                              ; preds = %83, %122
  %123 = phi i64 [ %129, %122 ], [ %116, %83 ]
  %124 = phi %"struct.v8::internal::wasm::WasmTable"* [ %130, %122 ], [ %118, %83 ]
  %125 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %124, i64 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = mul i32 %126, 24
  %128 = zext i32 %127 to i64
  %129 = add i64 %123, %128
  %130 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %124, i64 1
  %131 = icmp eq %"struct.v8::internal::wasm::WasmTable"* %130, %120
  br i1 %131, label %132, label %122

132:                                              ; preds = %122, %83
  %133 = phi i64 [ %116, %83 ], [ %129, %122 ]
  %134 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %101, i64 0, i32 29
  %135 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %101, i64 0, i32 29, i32 0, i32 1
  %136 = bitcast %"struct.v8::internal::wasm::WasmElemSegment"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.std::__1::vector.1373"* %134 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %137, %139
  %141 = sdiv exact i64 %140, 72
  %142 = tail call i8* @_Znwm(i64 88) #15
  %143 = bitcast i8* %142 to i32 (...)***
  %144 = getelementptr inbounds i8, i8* %142, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  %145 = getelementptr inbounds i8, i8* %142, i64 24
  %146 = zext i32 %103 to i64
  %147 = zext i32 %105 to i64
  %148 = bitcast i8* %145 to i32*
  store i32 0, i32* %148, align 8
  %149 = getelementptr inbounds i8, i8* %142, i64 32
  %150 = getelementptr inbounds i8, i8* %142, i64 48
  %151 = bitcast i8* %150 to i64*
  %152 = getelementptr inbounds i8, i8* %142, i64 56
  %153 = bitcast i8* %152 to i64*
  %154 = getelementptr inbounds i8, i8* %142, i64 64
  %155 = bitcast i8* %154 to i64*
  %156 = getelementptr inbounds i8, i8* %142, i64 72
  %157 = bitcast i8* %156 to i64*
  %158 = getelementptr inbounds i8, i8* %142, i64 80
  %159 = bitcast i8* %158 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 56, i1 false) #11
  %160 = load i64, i64* %84, align 8
  %161 = shl nuw nsw i64 %146, 3
  %162 = tail call i8* @_Znam(i64 %161) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 0, i64 %161, i1 false) #11
  %163 = ptrtoint i8* %162 to i64
  store i64 %163, i64* %151, align 8
  %164 = add i64 %160, 47
  %165 = inttoptr i64 %164 to i64*
  store i64 %163, i64* %165, align 1
  %166 = load i64, i64* %84, align 8
  %167 = shl nuw nsw i64 %147, 3
  %168 = tail call i8* @_Znam(i64 %167) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 0, i64 %167, i1 false) #11
  %169 = ptrtoint i8* %168 to i64
  %170 = bitcast i8* %152 to i64**
  %171 = load i64*, i64** %170, align 8
  store i64 %169, i64* %153, align 8
  %172 = icmp eq i64* %171, null
  br i1 %172, label %176, label %173

173:                                              ; preds = %132
  %174 = bitcast i64* %171 to i8*
  tail call void @_ZdaPv(i8* %174) #15
  %175 = load i64, i64* %153, align 8
  br label %176

176:                                              ; preds = %173, %132
  %177 = phi i64 [ %175, %173 ], [ %169, %132 ]
  %178 = add i64 %166, 87
  %179 = inttoptr i64 %178 to i64*
  store i64 %177, i64* %179, align 1
  %180 = load i64, i64* %84, align 8
  %181 = shl nuw nsw i64 %112, 3
  %182 = tail call i8* @_Znam(i64 %181) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 0, i64 %181, i1 false) #11
  %183 = ptrtoint i8* %182 to i64
  %184 = bitcast i8* %154 to i64**
  %185 = load i64*, i64** %184, align 8
  store i64 %183, i64* %155, align 8
  %186 = icmp eq i64* %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %176
  %188 = bitcast i64* %185 to i8*
  tail call void @_ZdaPv(i8* %188) #15
  %189 = load i64, i64* %155, align 8
  br label %190

190:                                              ; preds = %187, %176
  %191 = phi i64 [ %189, %187 ], [ %183, %176 ]
  %192 = add i64 %180, 171
  %193 = inttoptr i64 %192 to i64*
  store i64 %191, i64* %193, align 1
  %194 = load i64, i64* %84, align 8
  %195 = shl nuw nsw i64 %112, 2
  %196 = tail call i8* @_Znam(i64 %195) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %196, i8 0, i64 %195, i1 false) #11
  %197 = ptrtoint i8* %196 to i64
  %198 = bitcast i8* %156 to i32**
  %199 = load i32*, i32** %198, align 8
  store i64 %197, i64* %157, align 8
  %200 = icmp eq i32* %199, null
  br i1 %200, label %204, label %201

201:                                              ; preds = %190
  %202 = bitcast i32* %199 to i8*
  tail call void @_ZdaPv(i8* %202) #15
  %203 = load i64, i64* %157, align 8
  br label %204

204:                                              ; preds = %201, %190
  %205 = phi i64 [ %203, %201 ], [ %197, %190 ]
  %206 = add i64 %194, 179
  %207 = inttoptr i64 %206 to i64*
  store i64 %205, i64* %207, align 1
  %208 = load i64, i64* %84, align 8
  %209 = tail call i8* @_Znam(i64 %141) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %209, i8 0, i64 %141, i1 false) #11
  %210 = ptrtoint i8* %209 to i64
  %211 = bitcast i8* %158 to i8**
  %212 = load i8*, i8** %211, align 8
  store i64 %210, i64* %159, align 8
  %213 = icmp eq i8* %212, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %204
  tail call void @_ZdaPv(i8* nonnull %212) #15
  %215 = load i64, i64* %159, align 8
  br label %216

216:                                              ; preds = %204, %214
  %217 = phi i64 [ %215, %214 ], [ %210, %204 ]
  %218 = add i64 %208, 187
  %219 = inttoptr i64 %218 to i64*
  store i64 %217, i64* %219, align 1
  %220 = ptrtoint i8* %145 to i64
  %221 = ptrtoint i8* %142 to i64
  %222 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::Isolate"*
  %223 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %222, i64 %133) #11
  %224 = tail call i8* @_Znwm(i64 48) #15
  %225 = bitcast i8* %224 to %"struct.v8::internal::ManagedPtrDestructor"*
  %226 = tail call i8* @_Znwm(i64 16) #15
  %227 = bitcast i8* %226 to i64*
  store i64 %220, i64* %227, align 8
  %228 = getelementptr inbounds i8, i8* %226, i64 8
  %229 = bitcast i8* %228 to i64*
  store i64 %221, i64* %229, align 8
  %230 = bitcast i8* %224 to i64*
  store i64 %133, i64* %230, align 8
  %231 = getelementptr inbounds i8, i8* %224, i64 8
  %232 = getelementptr inbounds i8, i8* %224, i64 24
  %233 = bitcast i8* %232 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %231, i8 0, i64 16, i1 false) #11
  store i8* %226, i8** %233, align 8
  %234 = getelementptr inbounds i8, i8* %224, i64 32
  %235 = bitcast i8* %234 to void (i8*)**
  store void (i8*)* @_ZN2v88internal7ManagedINS0_12_GLOBAL__N_129WasmInstanceNativeAllocationsEE10DestructorEPv, void (i8*)** %235, align 8
  %236 = getelementptr inbounds i8, i8* %224, i64 40
  %237 = bitcast i8* %236 to i64**
  store i64* null, i64** %237, align 8
  %238 = ptrtoint i8* %224 to i64
  %239 = tail call i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"* %63, i64 %238) #11
  %240 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 36
  %241 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %240, align 8
  %242 = load i64, i64* %239, align 8
  %243 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %241, i64 %242) #11
  store i64* %243, i64** %237, align 8
  tail call void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64* %243, i8* nonnull %224, void (%"class.v8::WeakCallbackInfo"*)* nonnull @_ZN2v88internal22ManagedObjectFinalizerERKNS_16WeakCallbackInfoIvEE, i32 0) #11
  tail call void @_ZN2v88internal7Isolate28RegisterManagedPtrDestructorEPNS0_20ManagedPtrDestructorE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::ManagedPtrDestructor"* nonnull %225) #11
  %244 = load i64, i64* %84, align 8
  %245 = load i64, i64* %239, align 8
  %246 = add i64 %244, 147
  %247 = inttoptr i64 %246 to i32*
  %248 = trunc i64 %245 to i32
  store atomic volatile i32 %248, i32* %247 monotonic, align 4
  %249 = and i64 %245, 1
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %262, label %251

251:                                              ; preds = %216
  %252 = and i64 %244, -262144
  %253 = or i64 %252, 8
  %254 = inttoptr i64 %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = and i64 %255, 262144
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %251
  %259 = or i64 %252, 16
  %260 = inttoptr i64 %259 to %"class.v8::internal::Heap"**
  %261 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %260, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %261, i64 %244, i64 %246, i64 %245) #11
  br label %262

262:                                              ; preds = %258, %251, %216
  %263 = and i64 %245, -262144
  %264 = or i64 %263, 8
  %265 = inttoptr i64 %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = and i64 %266, 24
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %277, label %269

269:                                              ; preds = %262
  %270 = and i64 %244, -262144
  %271 = or i64 %270, 8
  %272 = inttoptr i64 %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = and i64 %273, 24
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %269
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %244, i64 %246, i64 %245) #11
  br label %277

277:                                              ; preds = %262, %269, %276
  %278 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %279 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %278, i32 %103, i8 zeroext 0) #11
  %280 = load i64, i64* %84, align 8
  %281 = load i64, i64* %279, align 8
  %282 = add i64 %280, 43
  %283 = inttoptr i64 %282 to i32*
  %284 = trunc i64 %281 to i32
  store atomic volatile i32 %284, i32* %283 monotonic, align 4
  %285 = and i64 %281, 1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %298, label %287

287:                                              ; preds = %277
  %288 = and i64 %280, -262144
  %289 = or i64 %288, 8
  %290 = inttoptr i64 %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = and i64 %291, 262144
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %298, label %294

294:                                              ; preds = %287
  %295 = or i64 %288, 16
  %296 = inttoptr i64 %295 to %"class.v8::internal::Heap"**
  %297 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %296, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %297, i64 %280, i64 %282, i64 %281) #11
  br label %298

298:                                              ; preds = %294, %287, %277
  %299 = and i64 %281, -262144
  %300 = or i64 %299, 8
  %301 = inttoptr i64 %300 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = and i64 %302, 24
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %313, label %305

305:                                              ; preds = %298
  %306 = and i64 %280, -262144
  %307 = or i64 %306, 8
  %308 = inttoptr i64 %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = and i64 %309, 24
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %313

312:                                              ; preds = %305
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %280, i64 %282, i64 %281) #11
  br label %313

313:                                              ; preds = %298, %305, %312
  %314 = load i64, i64* %84, align 8
  %315 = tail call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #11
  %316 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 0) #11
  %317 = add i64 %316, -1
  %318 = add i64 %314, 11
  %319 = inttoptr i64 %318 to i8**
  store i8* null, i8** %319, align 1
  %320 = add i64 %314, 19
  %321 = inttoptr i64 %320 to i64*
  store i64 0, i64* %321, align 1
  %322 = add i64 %314, 27
  %323 = inttoptr i64 %322 to i64*
  store i64 %317, i64* %323, align 1
  %324 = load i64, i64* %84, align 8
  %325 = ptrtoint %"class.v8::internal::Isolate"* %0 to i64
  %326 = add i64 %324, 95
  %327 = inttoptr i64 %326 to i64*
  store i64 %325, i64* %327, align 1
  %328 = load i64, i64* %84, align 8
  %329 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 2
  %330 = ptrtoint i64* %329 to i64
  %331 = add i64 %328, 35
  %332 = inttoptr i64 %331 to i64*
  store i64 %330, i64* %332, align 1
  %333 = load i64, i64* %84, align 8
  %334 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 0
  %335 = ptrtoint i64* %334 to i64
  %336 = add i64 %333, 163
  %337 = inttoptr i64 %336 to i64*
  store i64 %335, i64* %337, align 1
  %338 = load i64, i64* %84, align 8
  %339 = add i64 %338, 79
  %340 = inttoptr i64 %339 to i8**
  store i8* null, i8** %340, align 1
  %341 = load i64, i64* %84, align 8
  %342 = add i64 %341, 75
  %343 = inttoptr i64 %342 to i32*
  store i32 0, i32* %343, align 4
  %344 = load i64, i64* %84, align 8
  %345 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  %346 = load i64, i64* %345, align 8
  %347 = add i64 %344, 55
  %348 = inttoptr i64 %347 to i32*
  %349 = trunc i64 %346 to i32
  store atomic volatile i32 %349, i32* %348 monotonic, align 4
  %350 = and i64 %346, 1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %363, label %352

352:                                              ; preds = %313
  %353 = and i64 %344, -262144
  %354 = or i64 %353, 8
  %355 = inttoptr i64 %354 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = and i64 %356, 262144
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %363, label %359

359:                                              ; preds = %352
  %360 = or i64 %353, 16
  %361 = inttoptr i64 %360 to %"class.v8::internal::Heap"**
  %362 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %361, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %362, i64 %344, i64 %347, i64 %346) #11
  br label %363

363:                                              ; preds = %359, %352, %313
  %364 = and i64 %346, -262144
  %365 = or i64 %364, 8
  %366 = inttoptr i64 %365 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = and i64 %367, 24
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %378, label %370

370:                                              ; preds = %363
  %371 = and i64 %344, -262144
  %372 = or i64 %371, 8
  %373 = inttoptr i64 %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = and i64 %374, 24
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %370
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %344, i64 %347, i64 %346) #11
  br label %378

378:                                              ; preds = %363, %370, %377
  %379 = load i64, i64* %84, align 8
  %380 = add i64 %379, 67
  %381 = inttoptr i64 %380 to i32**
  store i32* null, i32** %381, align 1
  %382 = load i64, i64* %84, align 8
  %383 = add i64 %382, 59
  %384 = inttoptr i64 %383 to i64**
  store i64* null, i64** %384, align 1
  %385 = load i64, i64* %84, align 8
  %386 = load i64, i64* %4, align 8
  %387 = and i64 %386, -4294967296
  %388 = add i64 %386, -1
  %389 = inttoptr i64 %388 to i32*
  %390 = load atomic i32, i32* %389 monotonic, align 4
  %391 = zext i32 %390 to i64
  %392 = or i64 %387, %391
  %393 = add i64 %392, 19
  %394 = inttoptr i64 %393 to i32*
  %395 = load i32, i32* %394, align 4
  %396 = zext i32 %395 to i64
  %397 = or i64 %387, %396
  %398 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %399 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %398, null
  br i1 %399, label %403, label %400

400:                                              ; preds = %378
  %401 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %398, i64 %397) #11
  %402 = load i64, i64* %401, align 8
  br label %416

403:                                              ; preds = %378
  %404 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %405 = load i64*, i64** %404, align 8
  %406 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %407 = load i64*, i64** %406, align 8
  %408 = icmp eq i64* %405, %407
  br i1 %408, label %409, label %411

409:                                              ; preds = %403
  %410 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %411

411:                                              ; preds = %409, %403
  %412 = phi i64* [ %410, %409 ], [ %405, %403 ]
  %413 = ptrtoint i64* %412 to i64
  %414 = add i64 %413, 8
  %415 = inttoptr i64 %414 to i64*
  store i64* %415, i64** %404, align 8
  store i64 %397, i64* %412, align 8
  br label %416

416:                                              ; preds = %400, %411
  %417 = phi i64 [ %402, %400 ], [ %397, %411 ]
  %418 = add i64 %385, 119
  %419 = inttoptr i64 %418 to i32*
  %420 = trunc i64 %417 to i32
  store atomic volatile i32 %420, i32* %419 monotonic, align 4
  %421 = and i64 %417, 1
  %422 = icmp eq i64 %421, 0
  br i1 %422, label %434, label %423

423:                                              ; preds = %416
  %424 = and i64 %385, -262144
  %425 = or i64 %424, 8
  %426 = inttoptr i64 %425 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = and i64 %427, 262144
  %429 = icmp eq i64 %428, 0
  br i1 %429, label %434, label %430

430:                                              ; preds = %423
  %431 = or i64 %424, 16
  %432 = inttoptr i64 %431 to %"class.v8::internal::Heap"**
  %433 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %432, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %433, i64 %385, i64 %418, i64 %417) #11
  br label %434

434:                                              ; preds = %430, %423, %416
  %435 = and i64 %417, -262144
  %436 = or i64 %435, 8
  %437 = inttoptr i64 %436 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = and i64 %438, 24
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %449, label %441

441:                                              ; preds = %434
  %442 = and i64 %385, -262144
  %443 = or i64 %442, 8
  %444 = inttoptr i64 %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = and i64 %445, 24
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %448, label %449

448:                                              ; preds = %441
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %385, i64 %418, i64 %417) #11
  br label %449

449:                                              ; preds = %434, %441, %448
  %450 = load i64, i64* %84, align 8
  %451 = load i64, i64* %1, align 8
  %452 = add i64 %450, 111
  %453 = inttoptr i64 %452 to i32*
  %454 = trunc i64 %451 to i32
  store atomic volatile i32 %454, i32* %453 monotonic, align 4
  %455 = and i64 %451, 1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %468, label %457

457:                                              ; preds = %449
  %458 = and i64 %450, -262144
  %459 = or i64 %458, 8
  %460 = inttoptr i64 %459 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = and i64 %461, 262144
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %468, label %464

464:                                              ; preds = %457
  %465 = or i64 %458, 16
  %466 = inttoptr i64 %465 to %"class.v8::internal::Heap"**
  %467 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %466, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %467, i64 %450, i64 %452, i64 %451) #11
  br label %468

468:                                              ; preds = %464, %457, %449
  %469 = and i64 %451, -262144
  %470 = or i64 %469, 8
  %471 = inttoptr i64 %470 to i64*
  %472 = load i64, i64* %471, align 8
  %473 = and i64 %472, 24
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %483, label %475

475:                                              ; preds = %468
  %476 = and i64 %450, -262144
  %477 = or i64 %476, 8
  %478 = inttoptr i64 %477 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = and i64 %479, 24
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %483

482:                                              ; preds = %475
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %450, i64 %452, i64 %451) #11
  br label %483

483:                                              ; preds = %468, %475, %482
  %484 = load i64, i64* %84, align 8
  %485 = load i64, i64* %1, align 8
  %486 = and i64 %485, -4294967296
  %487 = add i64 %485, 11
  %488 = inttoptr i64 %487 to i32*
  %489 = load i32, i32* %488, align 4
  %490 = zext i32 %489 to i64
  %491 = or i64 %486, %490
  %492 = add i64 %491, 3
  %493 = inttoptr i64 %492 to %"struct.v8::internal::ManagedPtrDestructor"**
  %494 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %493, align 1
  %495 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %494, i64 0, i32 3
  %496 = bitcast i8** %495 to %"class.std::__1::shared_ptr.1273"**
  %497 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %496, align 8
  %498 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %497, i64 0, i32 0
  %499 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %498, align 8
  %500 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %499, i64 0, i32 7
  %501 = load %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"** %500, align 8
  %502 = icmp eq %"class.v8::internal::wasm::WasmCode"* %501, null
  br i1 %502, label %507, label %503

503:                                              ; preds = %483
  %504 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %501, i64 0, i32 1
  %505 = bitcast i8** %504 to i64*
  %506 = load i64, i64* %505, align 8
  br label %507

507:                                              ; preds = %483, %503
  %508 = phi i64 [ %506, %503 ], [ 0, %483 ]
  %509 = add i64 %484, 103
  %510 = inttoptr i64 %509 to i64*
  store i64 %508, i64* %510, align 1
  %511 = load i64, i64* %84, align 8
  %512 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 68
  %513 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %512, align 8
  %514 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %513, i64 0, i32 2
  %515 = ptrtoint i8* %514 to i64
  %516 = add i64 %511, 195
  %517 = inttoptr i64 %516 to i64*
  store i64 %515, i64* %517, align 1
  %518 = load i64, i64* %84, align 8
  %519 = load i64, i64* %345, align 8
  %520 = add i64 %518, 159
  %521 = inttoptr i64 %520 to i32*
  %522 = trunc i64 %519 to i32
  store atomic volatile i32 %522, i32* %521 monotonic, align 4
  %523 = and i64 %519, 1
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %536, label %525

525:                                              ; preds = %507
  %526 = and i64 %518, -262144
  %527 = or i64 %526, 8
  %528 = inttoptr i64 %527 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = and i64 %529, 262144
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %536, label %532

532:                                              ; preds = %525
  %533 = or i64 %526, 16
  %534 = inttoptr i64 %533 to %"class.v8::internal::Heap"**
  %535 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %534, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %535, i64 %518, i64 %520, i64 %519) #11
  br label %536

536:                                              ; preds = %532, %525, %507
  %537 = and i64 %519, -262144
  %538 = or i64 %537, 8
  %539 = inttoptr i64 %538 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = and i64 %540, 24
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %551, label %543

543:                                              ; preds = %536
  %544 = and i64 %518, -262144
  %545 = or i64 %544, 8
  %546 = inttoptr i64 %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = and i64 %547, 24
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %550, label %551

550:                                              ; preds = %543
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %518, i64 %520, i64 %519) #11
  br label %551

551:                                              ; preds = %536, %543, %550
  %552 = load i64, i64* %84, align 8
  %553 = load i64, i64* %1, align 8
  %554 = and i64 %553, -4294967296
  %555 = add i64 %553, 11
  %556 = inttoptr i64 %555 to i32*
  %557 = load i32, i32* %556, align 4
  %558 = zext i32 %557 to i64
  %559 = or i64 %554, %558
  %560 = add i64 %559, 3
  %561 = inttoptr i64 %560 to %"struct.v8::internal::ManagedPtrDestructor"**
  %562 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %561, align 1
  %563 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %562, i64 0, i32 3
  %564 = bitcast i8** %563 to %"class.std::__1::shared_ptr.1273"**
  %565 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %564, align 8
  %566 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %565, i64 0, i32 0
  %567 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %566, align 8
  %568 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %567, i64 0, i32 12, i32 0, i32 0, i32 0
  %569 = bitcast i32** %568 to i64*
  %570 = load i64, i64* %569, align 8
  %571 = add i64 %552, 203
  %572 = inttoptr i64 %571 to i64*
  store i64 %570, i64* %572, align 1
  %573 = load i64, i64* %84, align 8
  %574 = load i64, i64* %1, align 8
  %575 = and i64 %574, -4294967296
  %576 = add i64 %574, 19
  %577 = inttoptr i64 %576 to i32*
  %578 = load i32, i32* %577, align 4
  %579 = zext i32 %578 to i64
  %580 = or i64 %575, %579
  %581 = add i64 %580, 47
  %582 = inttoptr i64 %581 to i32*
  %583 = load i32, i32* %582, align 4
  %584 = lshr i32 %583, 8
  %585 = trunc i32 %584 to i8
  %586 = and i8 %585, 1
  %587 = add i64 %573, 211
  %588 = inttoptr i64 %587 to i8*
  store i8 %586, i8* %588, align 1
  %589 = load i64, i64* %1, align 8
  %590 = and i64 %589, -4294967296
  %591 = add i64 %589, 19
  %592 = inttoptr i64 %591 to i32*
  %593 = load i32, i32* %592, align 4
  %594 = zext i32 %593 to i64
  %595 = or i64 %590, %594
  %596 = add i64 %595, 23
  %597 = inttoptr i64 %596 to i32*
  %598 = load i32, i32* %597, align 4
  %599 = and i32 %598, -2
  %600 = icmp eq i32 %599, 6
  br i1 %600, label %601, label %669

601:                                              ; preds = %551
  %602 = add i64 %595, 43
  %603 = inttoptr i64 %602 to i32*
  %604 = load i32, i32* %603, align 4
  %605 = zext i32 %604 to i64
  %606 = or i64 %590, %605
  %607 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %608 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %607, null
  br i1 %608, label %611, label %609

609:                                              ; preds = %601
  %610 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %607, i64 %606) #11
  br label %624

611:                                              ; preds = %601
  %612 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %613 = load i64*, i64** %612, align 8
  %614 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %615 = load i64*, i64** %614, align 8
  %616 = icmp eq i64* %613, %615
  br i1 %616, label %617, label %619

617:                                              ; preds = %611
  %618 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %619

619:                                              ; preds = %617, %611
  %620 = phi i64* [ %618, %617 ], [ %613, %611 ]
  %621 = ptrtoint i64* %620 to i64
  %622 = add i64 %621, 8
  %623 = inttoptr i64 %622 to i64*
  store i64* %623, i64** %612, align 8
  store i64 %606, i64* %620, align 8
  br label %624

624:                                              ; preds = %609, %619
  %625 = phi i64* [ %610, %609 ], [ %620, %619 ]
  %626 = bitcast %"class.v8::internal::MaybeObjectHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %626) #11
  %627 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 0
  store i32 0, i32* %627, align 8
  %628 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 1, i32 0
  store i64* %84, i64** %628, align 8
  %629 = call i64* @_ZN2v88internal13WeakArrayList6AppendEPNS0_7IsolateENS0_6HandleIS1_EERKNS0_17MaybeObjectHandleENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %625, %"class.v8::internal::MaybeObjectHandle"* nonnull dereferenceable(16) %3, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %626) #11
  %630 = load i64, i64* %1, align 8
  %631 = and i64 %630, -4294967296
  %632 = add i64 %630, 19
  %633 = inttoptr i64 %632 to i32*
  %634 = load i32, i32* %633, align 4
  %635 = zext i32 %634 to i64
  %636 = or i64 %631, %635
  %637 = load i64, i64* %629, align 8
  %638 = add i64 %636, 43
  %639 = inttoptr i64 %638 to i32*
  %640 = trunc i64 %637 to i32
  store atomic volatile i32 %640, i32* %639 monotonic, align 4
  %641 = and i64 %637, 1
  %642 = icmp eq i64 %641, 0
  br i1 %642, label %654, label %643

643:                                              ; preds = %624
  %644 = and i64 %636, -262144
  %645 = or i64 %644, 8
  %646 = inttoptr i64 %645 to i64*
  %647 = load i64, i64* %646, align 8
  %648 = and i64 %647, 262144
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %654, label %650

650:                                              ; preds = %643
  %651 = or i64 %644, 16
  %652 = inttoptr i64 %651 to %"class.v8::internal::Heap"**
  %653 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %652, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %653, i64 %636, i64 %638, i64 %637) #11
  br label %654

654:                                              ; preds = %650, %643, %624
  %655 = and i64 %637, -262144
  %656 = or i64 %655, 8
  %657 = inttoptr i64 %656 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = and i64 %658, 24
  %660 = icmp eq i64 %659, 0
  br i1 %660, label %669, label %661

661:                                              ; preds = %654
  %662 = and i64 %636, -262144
  %663 = or i64 %662, 8
  %664 = inttoptr i64 %663 to i64*
  %665 = load i64, i64* %664, align 8
  %666 = and i64 %665, 24
  %667 = icmp eq i64 %666, 0
  br i1 %667, label %668, label %669

668:                                              ; preds = %661
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %636, i64 %638, i64 %637) #11
  br label %669

669:                                              ; preds = %668, %661, %654, %551
  call void @_ZN2v88internal18WasmInstanceObject21InitDataSegmentArraysENS0_6HandleIS1_EENS2_INS0_16WasmModuleObjectEEE(i64* %84, i64* %1)
  %670 = load i64, i64* %1, align 8
  %671 = and i64 %670, -4294967296
  %672 = add i64 %670, 11
  %673 = inttoptr i64 %672 to i32*
  %674 = load i32, i32* %673, align 4
  %675 = zext i32 %674 to i64
  %676 = or i64 %671, %675
  %677 = add i64 %676, 3
  %678 = inttoptr i64 %677 to %"struct.v8::internal::ManagedPtrDestructor"**
  %679 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %678, align 1
  %680 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %679, i64 0, i32 3
  %681 = bitcast i8** %680 to %"class.std::__1::shared_ptr.1273"**
  %682 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %681, align 8
  %683 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %682, i64 0, i32 0
  %684 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %683, align 8
  %685 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %684, i64 0, i32 4, i32 0
  %686 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %685, align 8
  %687 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %686, i64 0, i32 29
  %688 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %686, i64 0, i32 29, i32 0, i32 1
  %689 = bitcast %"struct.v8::internal::wasm::WasmElemSegment"** %688 to i64*
  %690 = load i64, i64* %689, align 8
  %691 = bitcast %"class.std::__1::vector.1373"* %687 to i64*
  %692 = load i64, i64* %691, align 8
  %693 = sub i64 %690, %692
  %694 = sdiv exact i64 %693, 72
  %695 = icmp eq i64 %693, 0
  br i1 %695, label %755, label %696

696:                                              ; preds = %669
  %697 = inttoptr i64 %692 to %"struct.v8::internal::wasm::WasmElemSegment"*
  %698 = getelementptr inbounds %"class.std::__1::vector.1373", %"class.std::__1::vector.1373"* %687, i64 0, i32 0, i32 0
  %699 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %697, i64 0, i32 4
  %700 = load i32, i32* %699, align 8
  %701 = icmp eq i32 %700, 2
  %702 = zext i1 %701 to i8
  %703 = load i64, i64* %84, align 8
  %704 = add i64 %703, 187
  %705 = inttoptr i64 %704 to i8**
  %706 = load i8*, i8** %705, align 1
  store i8 %702, i8* %706, align 1
  %707 = icmp ugt i64 %694, 1
  br i1 %707, label %708, label %755

708:                                              ; preds = %696
  %709 = add nsw i64 %694, -1
  %710 = and i64 %709, 1
  %711 = icmp eq i64 %693, 144
  br i1 %711, label %741, label %712

712:                                              ; preds = %708
  %713 = sub nsw i64 %709, %710
  br label %714

714:                                              ; preds = %714, %712
  %715 = phi i64 [ 1, %712 ], [ %738, %714 ]
  %716 = phi i64 [ %713, %712 ], [ %739, %714 ]
  %717 = load %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"** %698, align 8
  %718 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %717, i64 %715, i32 4
  %719 = load i32, i32* %718, align 8
  %720 = icmp eq i32 %719, 2
  %721 = zext i1 %720 to i8
  %722 = load i64, i64* %84, align 8
  %723 = add i64 %722, 187
  %724 = inttoptr i64 %723 to i8**
  %725 = load i8*, i8** %724, align 1
  %726 = getelementptr inbounds i8, i8* %725, i64 %715
  store i8 %721, i8* %726, align 1
  %727 = add nuw i64 %715, 1
  %728 = load %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"** %698, align 8
  %729 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %728, i64 %727, i32 4
  %730 = load i32, i32* %729, align 8
  %731 = icmp eq i32 %730, 2
  %732 = zext i1 %731 to i8
  %733 = load i64, i64* %84, align 8
  %734 = add i64 %733, 187
  %735 = inttoptr i64 %734 to i8**
  %736 = load i8*, i8** %735, align 1
  %737 = getelementptr inbounds i8, i8* %736, i64 %727
  store i8 %732, i8* %737, align 1
  %738 = add nuw i64 %715, 2
  %739 = add i64 %716, -2
  %740 = icmp eq i64 %739, 0
  br i1 %740, label %741, label %714

741:                                              ; preds = %714, %708
  %742 = phi i64 [ 1, %708 ], [ %738, %714 ]
  %743 = icmp eq i64 %710, 0
  br i1 %743, label %755, label %744

744:                                              ; preds = %741
  %745 = load %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"** %698, align 8
  %746 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %745, i64 %742, i32 4
  %747 = load i32, i32* %746, align 8
  %748 = icmp eq i32 %747, 2
  %749 = zext i1 %748 to i8
  %750 = load i64, i64* %84, align 8
  %751 = add i64 %750, 187
  %752 = inttoptr i64 %751 to i8**
  %753 = load i8*, i8** %752, align 1
  %754 = getelementptr inbounds i8, i8* %753, i64 %742
  store i8 %749, i8* %754, align 1
  br label %755

755:                                              ; preds = %744, %741, %696, %669
  ret i64* %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18WasmInstanceObject21InitDataSegmentArraysENS0_6HandleIS1_EENS2_INS0_16WasmModuleObjectEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to %"struct.v8::internal::ManagedPtrDestructor"**
  %12 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %11, align 1
  %13 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %12, i64 0, i32 3
  %14 = bitcast i8** %13 to %"class.std::__1::shared_ptr.1273"**
  %15 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 4, i32 0
  %19 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 6
  %21 = bitcast %"class.std::__1::shared_ptr.1499"* %20 to i8*
  %22 = tail call dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8* %21) #11
  tail call void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"* %22) #11
  %23 = getelementptr inbounds %"class.std::__1::shared_ptr.1499", %"class.std::__1::shared_ptr.1499"* %20, i64 0, i32 0
  %24 = load %"class.v8::internal::OwnedVector"*, %"class.v8::internal::OwnedVector"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 6, i32 1
  %26 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %25, align 8
  %27 = icmp eq %"class.std::__1::__shared_weak_count"* %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %2
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %22) #11
  %29 = getelementptr inbounds %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  br label %45

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %26, i64 0, i32 0, i32 1
  %33 = atomicrmw add i64* %32, i64 1 monotonic
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %22) #11
  %34 = getelementptr inbounds %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %26, i64 0, i32 0, i32 1
  %37 = atomicrmw add i64* %36, i64 -1 acq_rel
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %26, i64 0, i32 0
  %41 = bitcast %"class.std::__1::__shared_weak_count"* %26 to void (%"class.std::__1::__shared_count"*)***
  %42 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %42, i64 2
  %44 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %43, align 8
  tail call void %44(%"class.std::__1::__shared_count"* %40) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %26) #11
  br label %45

45:                                               ; preds = %28, %31, %39
  %46 = phi i8* [ %30, %28 ], [ %35, %31 ], [ %35, %39 ]
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %19, i64 0, i32 17
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = icmp eq i32 %48, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %19, i64 0, i32 24, i32 0, i32 0
  br label %54

53:                                               ; preds = %54, %45
  ret void

54:                                               ; preds = %54, %51
  %55 = phi i64 [ 0, %51 ], [ %78, %54 ]
  %56 = load %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"** %52, align 8
  %57 = getelementptr inbounds %"struct.v8::internal::wasm::WasmDataSegment", %"struct.v8::internal::wasm::WasmDataSegment"* %56, i64 %55, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.v8::internal::wasm::WasmDataSegment", %"struct.v8::internal::wasm::WasmDataSegment"* %56, i64 %55, i32 1, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds i8, i8* %46, i64 %59
  %63 = ptrtoint i8* %62 to i64
  %64 = load i64, i64* %0, align 8
  %65 = add i64 %64, 171
  %66 = inttoptr i64 %65 to i64**
  %67 = load i64*, i64** %66, align 1
  %68 = getelementptr inbounds i64, i64* %67, i64 %55
  store i64 %63, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.v8::internal::wasm::WasmDataSegment", %"struct.v8::internal::wasm::WasmDataSegment"* %56, i64 %55, i32 2
  %70 = load i8, i8* %69, align 8, !range !5
  %71 = icmp eq i8 %70, 0
  %72 = select i1 %71, i32 %61, i32 0
  %73 = load i64, i64* %0, align 8
  %74 = add i64 %73, 179
  %75 = inttoptr i64 %74 to i32**
  %76 = load i32*, i32** %75, align 1
  %77 = getelementptr inbounds i32, i32* %76, i64 %55
  store i32 %72, i32* %77, align 4
  %78 = add nuw nsw i64 %55, 1
  %79 = icmp eq i64 %78, %49
  br i1 %79, label %53, label %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18WasmInstanceObject21InitElemSegmentArraysENS0_6HandleIS1_EENS2_INS0_16WasmModuleObjectEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to %"struct.v8::internal::ManagedPtrDestructor"**
  %12 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %11, align 1
  %13 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %12, i64 0, i32 3
  %14 = bitcast i8** %13 to %"class.std::__1::shared_ptr.1273"**
  %15 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 4, i32 0
  %19 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %19, i64 0, i32 29
  %21 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %19, i64 0, i32 29, i32 0, i32 1
  %22 = bitcast %"struct.v8::internal::wasm::WasmElemSegment"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.1373"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = sdiv exact i64 %26, 72
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %61, label %29

29:                                               ; preds = %2
  %30 = inttoptr i64 %25 to %"struct.v8::internal::wasm::WasmElemSegment"*
  %31 = getelementptr inbounds %"class.std::__1::vector.1373", %"class.std::__1::vector.1373"* %20, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %30, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = load i64, i64* %0, align 8
  %37 = add i64 %36, 187
  %38 = inttoptr i64 %37 to i8**
  %39 = load i8*, i8** %38, align 1
  store i8 %35, i8* %39, align 1
  %40 = icmp ugt i64 %27, 1
  br i1 %40, label %41, label %61

41:                                               ; preds = %29
  %42 = add nsw i64 %27, -1
  %43 = and i64 %42, 1
  %44 = icmp eq i64 %26, 144
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = sub nsw i64 %42, %43
  br label %62

47:                                               ; preds = %62, %41
  %48 = phi i64 [ 1, %41 ], [ %86, %62 ]
  %49 = icmp eq i64 %43, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %47
  %51 = load %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"** %31, align 8
  %52 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %51, i64 %48, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = load i64, i64* %0, align 8
  %57 = add i64 %56, 187
  %58 = inttoptr i64 %57 to i8**
  %59 = load i8*, i8** %58, align 1
  %60 = getelementptr inbounds i8, i8* %59, i64 %48
  store i8 %55, i8* %60, align 1
  br label %61

61:                                               ; preds = %50, %47, %29, %2
  ret void

62:                                               ; preds = %62, %45
  %63 = phi i64 [ 1, %45 ], [ %86, %62 ]
  %64 = phi i64 [ %46, %45 ], [ %87, %62 ]
  %65 = load %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"** %31, align 8
  %66 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %65, i64 %63, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 2
  %69 = zext i1 %68 to i8
  %70 = load i64, i64* %0, align 8
  %71 = add i64 %70, 187
  %72 = inttoptr i64 %71 to i8**
  %73 = load i8*, i8** %72, align 1
  %74 = getelementptr inbounds i8, i8* %73, i64 %63
  store i8 %69, i8* %74, align 1
  %75 = add nuw i64 %63, 1
  %76 = load %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"** %31, align 8
  %77 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %76, i64 %75, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 2
  %80 = zext i1 %79 to i8
  %81 = load i64, i64* %0, align 8
  %82 = add i64 %81, 187
  %83 = inttoptr i64 %82 to i8**
  %84 = load i8*, i8** %83, align 1
  %85 = getelementptr inbounds i8, i8* %84, i64 %75
  store i8 %80, i8* %85, align 1
  %86 = add nuw i64 %63, 2
  %87 = add i64 %64, -2
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %47, label %62
}

declare i64 @_ZNK2v88internal4wasm12NativeModule24GetCallTargetForFunctionEj(%"class.v8::internal::wasm::NativeModule"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal18WasmInstanceObject25IndirectFunctionTableSizeEPNS0_7IsolateENS0_6HandleIS1_EEj(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  %5 = load i64, i64* %1, align 8
  br i1 %4, label %6, label %8

6:                                                ; preds = %3
  %7 = add i64 %5, 75
  br label %45

8:                                                ; preds = %3
  %9 = and i64 %5, -4294967296
  %10 = add i64 %5, 143
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = shl i32 %2, 2
  %16 = sext i32 %15 to i64
  %17 = add nsw i64 %16, 7
  %18 = add i64 %17, %14
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %9, %21
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %24 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %25 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %8
  %27 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %24, i64 %22) #11
  %28 = load i64, i64* %27, align 8
  br label %42

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %33 = load i64*, i64** %32, align 8
  %34 = icmp eq i64* %31, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %37

37:                                               ; preds = %35, %29
  %38 = phi i64* [ %36, %35 ], [ %31, %29 ]
  %39 = ptrtoint i64* %38 to i64
  %40 = add i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  store i64* %41, i64** %30, align 8
  store i64 %22, i64* %38, align 8
  br label %42

42:                                               ; preds = %26, %37
  %43 = phi i64 [ %28, %26 ], [ %22, %37 ]
  %44 = add i64 %43, 3
  br label %45

45:                                               ; preds = %42, %6
  %46 = phi i64 [ %7, %6 ], [ %44, %42 ]
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal18WasmInstanceObject16CopyTableEntriesEPNS0_7IsolateENS0_6HandleIS1_EEjjjjj(%"class.v8::internal::Isolate"*, i64*, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = load i64, i64* %1, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 139
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = ashr i32 %17, 1
  %19 = icmp sgt i32 %17, 1
  %20 = icmp ugt i32 %18, %2
  %21 = and i1 %19, %20
  br i1 %21, label %23, label %22, !prof !4

22:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

23:                                               ; preds = %7
  %24 = icmp ugt i32 %18, %3
  br i1 %24, label %26, label %25, !prof !4

25:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

26:                                               ; preds = %23
  %27 = shl i32 %2, 2
  %28 = sext i32 %27 to i64
  %29 = add nsw i64 %28, 7
  %30 = add i64 %29, %14
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %9, %33
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %26
  %39 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %34) #11
  br label %53

40:                                               ; preds = %26
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %34, i64* %49, align 8
  br label %53

53:                                               ; preds = %38, %48
  %54 = phi i64* [ %39, %38 ], [ %49, %48 ]
  %55 = load i64, i64* %1, align 8
  %56 = and i64 %55, -4294967296
  %57 = add i64 %55, 139
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %56, %60
  %62 = shl i32 %3, 2
  %63 = sext i32 %62 to i64
  %64 = add nsw i64 %63, 7
  %65 = add i64 %64, %61
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %56, %68
  %70 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %71 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %53
  %73 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %70, i64 %69) #11
  %74 = load i64, i64* %73, align 8
  br label %88

75:                                               ; preds = %53
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %79 = load i64*, i64** %78, align 8
  %80 = icmp eq i64* %77, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %83

83:                                               ; preds = %81, %75
  %84 = phi i64* [ %82, %81 ], [ %77, %75 ]
  %85 = ptrtoint i64* %84 to i64
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  store i64* %87, i64** %76, align 8
  store i64 %69, i64* %84, align 8
  br label %88

88:                                               ; preds = %72, %83
  %89 = phi i64 [ %74, %72 ], [ %69, %83 ]
  %90 = phi i64* [ %73, %72 ], [ %84, %83 ]
  %91 = load i64, i64* %54, align 8
  %92 = add i64 %91, 19
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = ashr i32 %94, 1
  %96 = add i64 %89, 19
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = ashr i32 %98, 1
  %100 = icmp ult i32 %5, %4
  %101 = icmp uge i32 %95, %6
  %102 = sub i32 %95, %6
  %103 = icmp uge i32 %102, %4
  %104 = and i1 %101, %103
  br i1 %104, label %105, label %137

105:                                              ; preds = %88
  %106 = icmp uge i32 %99, %6
  %107 = sub i32 %99, %6
  %108 = icmp uge i32 %107, %5
  %109 = and i1 %106, %108
  br i1 %109, label %110, label %137

110:                                              ; preds = %105
  %111 = icmp eq i32 %4, %5
  %112 = icmp eq i32 %2, %3
  %113 = and i1 %112, %111
  %114 = icmp eq i32 %6, 0
  %115 = or i1 %113, %114
  %116 = xor i1 %115, true
  %117 = icmp ne i32 %6, 0
  %118 = and i1 %117, %116
  br i1 %118, label %119, label %137

119:                                              ; preds = %110
  %120 = add i32 %6, %5
  %121 = add i32 %6, %4
  br i1 %100, label %122, label %130

122:                                              ; preds = %119, %122
  %123 = phi i32 [ %128, %122 ], [ 0, %119 ]
  %124 = xor i32 %123, -1
  %125 = add i32 %120, %124
  %126 = add i32 %121, %124
  %127 = tail call i64* @_ZN2v88internal15WasmTableObject3GetEPNS0_7IsolateENS0_6HandleIS1_EEj(%"class.v8::internal::Isolate"* %0, i64* %90, i32 %125)
  tail call void @_ZN2v88internal15WasmTableObject3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %54, i32 %126, i64* %127)
  %128 = add nuw i32 %123, 1
  %129 = icmp eq i32 %128, %6
  br i1 %129, label %137, label %122

130:                                              ; preds = %119, %130
  %131 = phi i32 [ %135, %130 ], [ 0, %119 ]
  %132 = add i32 %131, %5
  %133 = add i32 %131, %4
  %134 = tail call i64* @_ZN2v88internal15WasmTableObject3GetEPNS0_7IsolateENS0_6HandleIS1_EEj(%"class.v8::internal::Isolate"* %0, i64* %90, i32 %132)
  tail call void @_ZN2v88internal15WasmTableObject3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %54, i32 %133, i64* %134)
  %135 = add nuw i32 %131, 1
  %136 = icmp eq i32 %135, %6
  br i1 %136, label %137, label %130

137:                                              ; preds = %130, %122, %110, %88, %105
  %138 = phi i1 [ false, %105 ], [ false, %88 ], [ true, %110 ], [ true, %122 ], [ true, %130 ]
  ret i1 %138
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal18WasmInstanceObject16InitTableEntriesEPNS0_7IsolateENS0_6HandleIS1_EEjjjjj(%"class.v8::internal::Isolate"*, i64*, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = tail call zeroext i1 @_ZN2v88internal4wasm15LoadElemSegmentEPNS0_7IsolateENS0_6HandleINS0_18WasmInstanceObjectEEEjjjjj(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6) #11
  ret i1 %8
}

declare zeroext i1 @_ZN2v88internal4wasm15LoadElemSegmentEPNS0_7IsolateENS0_6HandleINS0_18WasmInstanceObjectEEEjjjjj(%"class.v8::internal::Isolate"*, i64*, i32, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal18WasmInstanceObject23GetWasmExternalFunctionEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 155
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %9 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 1, i64 0
  br label %24

16:                                               ; preds = %10, %3
  %17 = and i64 %4, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 16
  %21 = add i64 %20, -41416
  %22 = inttoptr i64 %21 to %"class.v8::internal::Isolate"*
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %24

24:                                               ; preds = %14, %16
  %25 = phi i64* [ %23, %16 ], [ %15, %14 ]
  %26 = getelementptr inbounds i64, i64* %25, i64 4
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %7, %28
  br i1 %29, label %65, label %30

30:                                               ; preds = %24
  %31 = and i64 %4, -4294967296
  %32 = zext i32 %7 to i64
  %33 = or i64 %31, %32
  %34 = shl i32 %2, 2
  %35 = sext i32 %34 to i64
  %36 = add nsw i64 %35, 7
  %37 = add i64 %36, %33
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %31, %40
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %39, %44
  br i1 %45, label %65, label %46

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %48 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %47, align 8
  %49 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %48, i64 %41) #11
  br label %65

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %54, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %60

60:                                               ; preds = %58, %52
  %61 = phi i64* [ %59, %58 ], [ %54, %52 ]
  %62 = ptrtoint i64* %61 to i64
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  store i64* %64, i64** %53, align 8
  store i64 %41, i64* %61, align 8
  br label %65

65:                                               ; preds = %60, %50, %24, %30
  %66 = phi i64* [ null, %24 ], [ null, %30 ], [ %51, %50 ], [ %61, %60 ]
  ret i64* %66
}

declare i32 @_ZN2v88internal4wasm21GetExportWrapperIndexEPKNS1_10WasmModuleEPKNS0_9SignatureINS1_9ValueTypeEEEb(%"struct.v8::internal::wasm::WasmModule"*, %"class.v8::internal::Signature"*, i1 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal4wasm30JSToWasmWrapperCompilationUnit22CompileJSToWasmWrapperEPNS0_7IsolateEPKNS0_9SignatureINS1_9ValueTypeEEEPKNS1_10WasmModuleEb(%"class.v8::internal::Isolate"*, %"class.v8::internal::Signature"*, %"struct.v8::internal::wasm::WasmModule"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal20WasmExportedFunction3NewEPNS0_7IsolateENS0_6HandleINS0_18WasmInstanceObjectEEEiiNS4_INS0_4CodeEEE(%"class.v8::internal::Isolate"*, i64*, i32, i32, i64*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::EmbeddedVector.1761", align 8
  %7 = alloca %"class.v8::internal::Vector.1596", align 8
  %8 = alloca %"class.v8::internal::Factory::JSFunctionBuilder", align 8
  %9 = load i64, i64* %1, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, 111
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 11
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %10, %19
  %21 = add i64 %20, 3
  %22 = inttoptr i64 %21 to %"struct.v8::internal::ManagedPtrDestructor"**
  %23 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %22, align 1
  %24 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %23, i64 0, i32 3
  %25 = bitcast i8** %24 to %"class.std::__1::shared_ptr.1273"**
  %26 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %26, i64 0, i32 0
  %28 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %28, i64 0, i32 4, i32 0
  %30 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %29, align 8
  %31 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %30, i64 0, i32 13
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, %2
  br i1 %33, label %34, label %66

34:                                               ; preds = %5
  %35 = add i64 %9, 43
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %10, %38
  %40 = shl i32 %2, 2
  %41 = sext i32 %40 to i64
  %42 = add nsw i64 %41, 7
  %43 = add i64 %42, %39
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %10, %46
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %49 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %48, align 8
  %50 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %34
  %52 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %49, i64 %47) #11
  br label %66

53:                                               ; preds = %34
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = icmp eq i64* %55, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %53
  %60 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %61

61:                                               ; preds = %59, %53
  %62 = phi i64* [ %60, %59 ], [ %55, %53 ]
  %63 = ptrtoint i64* %62 to i64
  %64 = add i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  store i64* %65, i64** %54, align 8
  store i64 %47, i64* %62, align 8
  br label %66

66:                                               ; preds = %61, %51, %5
  %67 = phi i64* [ %1, %5 ], [ %52, %51 ], [ %62, %61 ]
  %68 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %69 = load i64, i64* %1, align 8
  %70 = and i64 %69, -4294967296
  %71 = add i64 %69, 111
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %70, %74
  %76 = add i64 %75, 11
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %70, %79
  %81 = add i64 %80, 3
  %82 = inttoptr i64 %81 to %"struct.v8::internal::ManagedPtrDestructor"**
  %83 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %82, align 1
  %84 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %83, i64 0, i32 3
  %85 = bitcast i8** %84 to %"class.std::__1::shared_ptr.1273"**
  %86 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %86, i64 0, i32 0
  %88 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %88, i64 0, i32 4, i32 0
  %90 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %89, align 8
  %91 = sext i32 %2 to i64
  %92 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %90, i64 0, i32 23, i32 0, i32 0
  %93 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %92, align 8
  %94 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %93, i64 %91
  %95 = bitcast %"struct.v8::internal::wasm::WasmFunction"* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %90, i64 0, i32 13
  %98 = load i32, i32* %97, align 4
  %99 = icmp ugt i32 %98, %2
  br i1 %99, label %100, label %107

100:                                              ; preds = %66
  %101 = add i64 %69, 47
  %102 = inttoptr i64 %101 to i64**
  %103 = load i64*, i64** %102, align 1
  %104 = zext i32 %2 to i64
  %105 = getelementptr inbounds i64, i64* %103, i64 %104
  %106 = load i64, i64* %105, align 8
  br label %109

107:                                              ; preds = %66
  %108 = tail call i64 @_ZNK2v88internal4wasm12NativeModule24GetCallTargetForFunctionEj(%"class.v8::internal::wasm::NativeModule"* %88, i32 %2) #11
  br label %109

109:                                              ; preds = %100, %107
  %110 = phi i64 [ %106, %100 ], [ %108, %107 ]
  %111 = tail call i64* @_ZN2v88internal7Factory27NewWasmExportedFunctionDataENS0_6HandleINS0_4CodeEEENS2_INS0_18WasmInstanceObjectEEEmNS2_INS0_6ObjectEEEimi(%"class.v8::internal::Factory"* %68, i64* %4, i64* %1, i64 %110, i64* %67, i32 %2, i64 %96, i32 1000) #11
  %112 = load i64, i64* %1, align 8
  %113 = and i64 %112, -4294967296
  %114 = add i64 %112, 111
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %113, %117
  %119 = add i64 %118, 11
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %113, %122
  %124 = add i64 %123, 3
  %125 = inttoptr i64 %124 to %"struct.v8::internal::ManagedPtrDestructor"**
  %126 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %125, align 1
  %127 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %126, i64 0, i32 3
  %128 = bitcast i8** %127 to %"class.std::__1::shared_ptr.1273"**
  %129 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %129, i64 0, i32 0
  %131 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %131, i64 0, i32 4, i32 0
  %133 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %132, align 8
  %134 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %133, i64 0, i32 33
  %135 = load i8, i8* %134, align 8
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %160, label %137

137:                                              ; preds = %109
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %139 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %138, align 8
  %140 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %137
  %142 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %139, i64 %118) #11
  br label %156

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %147 = load i64*, i64** %146, align 8
  %148 = icmp eq i64* %145, %147
  br i1 %148, label %149, label %151

149:                                              ; preds = %143
  %150 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %151

151:                                              ; preds = %149, %143
  %152 = phi i64* [ %150, %149 ], [ %145, %143 ]
  %153 = ptrtoint i64* %152 to i64
  %154 = add i64 %153, 8
  %155 = inttoptr i64 %154 to i64*
  store i64* %155, i64** %144, align 8
  store i64 %118, i64* %152, align 8
  br label %156

156:                                              ; preds = %151, %141
  %157 = phi i64* [ %142, %141 ], [ %152, %151 ]
  %158 = tail call i64* @_ZN2v88internal16WasmModuleObject21GetFunctionNameOrNullEPNS0_7IsolateENS0_6HandleIS1_EEj(%"class.v8::internal::Isolate"* %0, i64* %157, i32 %2)
  %159 = icmp eq i64* %158, null
  br i1 %159, label %160, label %176

160:                                              ; preds = %109, %156
  %161 = bitcast %"class.v8::internal::EmbeddedVector.1761"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %161) #11
  %162 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1761", %"class.v8::internal::EmbeddedVector.1761"* %6, i64 0, i32 1, i64 0
  %163 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1761", %"class.v8::internal::EmbeddedVector.1761"* %6, i64 0, i32 0, i32 0
  store i8* %162, i8** %163, align 8
  %164 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1761", %"class.v8::internal::EmbeddedVector.1761"* %6, i64 0, i32 0, i32 1
  store i64 16, i64* %164, align 8
  %165 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %162, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i32 %2) #11
  %166 = bitcast %"class.v8::internal::Vector.1596"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %166) #11
  %167 = sext i32 %165 to i64
  %168 = bitcast %"class.v8::internal::EmbeddedVector.1761"* %6 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"class.v8::internal::Vector.1596"* %7 to i64*
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Vector.1596", %"class.v8::internal::Vector.1596"* %7, i64 0, i32 1
  store i64 %167, i64* %171, align 8
  %172 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %68, %"class.v8::internal::Vector.1596"* nonnull dereferenceable(16) %7, i8 zeroext 0) #11
  %173 = icmp eq i64* %172, null
  br i1 %173, label %174, label %175, !prof !2

174:                                              ; preds = %160
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #16
  unreachable

175:                                              ; preds = %160
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %166) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %161) #11
  br label %176

176:                                              ; preds = %156, %175
  %177 = phi i64* [ %172, %175 ], [ %158, %156 ]
  %178 = load i64, i64* %1, align 8
  %179 = and i64 %178, -4294967296
  %180 = add i64 %178, 111
  %181 = inttoptr i64 %180 to i32*
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i64
  %184 = or i64 %179, %183
  %185 = add i64 %184, 11
  %186 = inttoptr i64 %185 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i64
  %189 = or i64 %179, %188
  %190 = add i64 %189, 3
  %191 = inttoptr i64 %190 to %"struct.v8::internal::ManagedPtrDestructor"**
  %192 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %191, align 1
  %193 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %192, i64 0, i32 3
  %194 = bitcast i8** %193 to %"class.std::__1::shared_ptr.1273"**
  %195 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %194, align 8
  %196 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %195, i64 0, i32 0
  %197 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %196, align 8
  %198 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %197, i64 0, i32 4, i32 0
  %199 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %198, align 8
  %200 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %199, i64 0, i32 33
  %201 = load i8, i8* %200, align 8
  switch i8 %201, label %354 [
    i8 0, label %202
    i8 1, label %280
    i8 2, label %317
  ]

202:                                              ; preds = %176
  %203 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %197, i64 0, i32 3, i32 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %243, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %199, i64 0, i32 23, i32 0, i32 0
  %209 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %208, align 8
  %210 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %209, i64 %91, i32 2
  %211 = load i32, i32* %210, align 4
  %212 = add i64 %178, 159
  %213 = inttoptr i64 %212 to i32*
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i64
  %216 = or i64 %179, %215
  %217 = shl i32 %211, 2
  %218 = sext i32 %217 to i64
  %219 = add nsw i64 %218, 7
  %220 = add i64 %219, %216
  %221 = inttoptr i64 %220 to i32*
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = zext i32 %222 to i64
  %224 = or i64 %179, %223
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %226 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %225, align 8
  %227 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %226, null
  br i1 %227, label %230, label %228

228:                                              ; preds = %207
  %229 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %226, i64 %224) #11
  br label %354

230:                                              ; preds = %207
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %232 = load i64*, i64** %231, align 8
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %234 = load i64*, i64** %233, align 8
  %235 = icmp eq i64* %232, %234
  br i1 %235, label %236, label %238

236:                                              ; preds = %230
  %237 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %238

238:                                              ; preds = %236, %230
  %239 = phi i64* [ %237, %236 ], [ %232, %230 ]
  %240 = ptrtoint i64* %239 to i64
  %241 = add i64 %240, 8
  %242 = inttoptr i64 %241 to i64*
  store i64* %242, i64** %231, align 8
  store i64 %224, i64* %239, align 8
  br label %354

243:                                              ; preds = %202
  %244 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i64, i64* %244, align 8
  %246 = and i64 %245, -4294967296
  %247 = add i64 %245, -1
  %248 = inttoptr i64 %247 to i32*
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = zext i32 %249 to i64
  %251 = or i64 %246, %250
  %252 = add i64 %251, 19
  %253 = inttoptr i64 %252 to i32*
  %254 = load i32, i32* %253, align 4
  %255 = zext i32 %254 to i64
  %256 = or i64 %246, %255
  %257 = add i64 %256, 823
  %258 = inttoptr i64 %257 to i32*
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = zext i32 %259 to i64
  %261 = or i64 %246, %260
  %262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %263 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %262, align 8
  %264 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %263, null
  br i1 %264, label %267, label %265

265:                                              ; preds = %243
  %266 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %263, i64 %261) #11
  br label %354

267:                                              ; preds = %243
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %269 = load i64*, i64** %268, align 8
  %270 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %271 = load i64*, i64** %270, align 8
  %272 = icmp eq i64* %269, %271
  br i1 %272, label %273, label %275

273:                                              ; preds = %267
  %274 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %275

275:                                              ; preds = %273, %267
  %276 = phi i64* [ %274, %273 ], [ %269, %267 ]
  %277 = ptrtoint i64* %276 to i64
  %278 = add i64 %277, 8
  %279 = inttoptr i64 %278 to i64*
  store i64* %279, i64** %268, align 8
  store i64 %261, i64* %276, align 8
  br label %354

280:                                              ; preds = %176
  %281 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load i64, i64* %281, align 8
  %283 = and i64 %282, -4294967296
  %284 = add i64 %282, -1
  %285 = inttoptr i64 %284 to i32*
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = zext i32 %286 to i64
  %288 = or i64 %283, %287
  %289 = add i64 %288, 19
  %290 = inttoptr i64 %289 to i32*
  %291 = load i32, i32* %290, align 4
  %292 = zext i32 %291 to i64
  %293 = or i64 %283, %292
  %294 = add i64 %293, 747
  %295 = inttoptr i64 %294 to i32*
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = zext i32 %296 to i64
  %298 = or i64 %283, %297
  %299 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %300 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %299, align 8
  %301 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %300, null
  br i1 %301, label %304, label %302

302:                                              ; preds = %280
  %303 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %300, i64 %298) #11
  br label %354

304:                                              ; preds = %280
  %305 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %306 = load i64*, i64** %305, align 8
  %307 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %308 = load i64*, i64** %307, align 8
  %309 = icmp eq i64* %306, %308
  br i1 %309, label %310, label %312

310:                                              ; preds = %304
  %311 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %312

312:                                              ; preds = %310, %304
  %313 = phi i64* [ %311, %310 ], [ %306, %304 ]
  %314 = ptrtoint i64* %313 to i64
  %315 = add i64 %314, 8
  %316 = inttoptr i64 %315 to i64*
  store i64* %316, i64** %305, align 8
  store i64 %298, i64* %313, align 8
  br label %354

317:                                              ; preds = %176
  %318 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i64, i64* %318, align 8
  %320 = and i64 %319, -4294967296
  %321 = add i64 %319, -1
  %322 = inttoptr i64 %321 to i32*
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = zext i32 %323 to i64
  %325 = or i64 %320, %324
  %326 = add i64 %325, 19
  %327 = inttoptr i64 %326 to i32*
  %328 = load i32, i32* %327, align 4
  %329 = zext i32 %328 to i64
  %330 = or i64 %320, %329
  %331 = add i64 %330, 763
  %332 = inttoptr i64 %331 to i32*
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = zext i32 %333 to i64
  %335 = or i64 %320, %334
  %336 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %337 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %336, align 8
  %338 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %337, null
  br i1 %338, label %341, label %339

339:                                              ; preds = %317
  %340 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %337, i64 %335) #11
  br label %354

341:                                              ; preds = %317
  %342 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %343 = load i64*, i64** %342, align 8
  %344 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %345 = load i64*, i64** %344, align 8
  %346 = icmp eq i64* %343, %345
  br i1 %346, label %347, label %349

347:                                              ; preds = %341
  %348 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %349

349:                                              ; preds = %347, %341
  %350 = phi i64* [ %348, %347 ], [ %343, %341 ]
  %351 = ptrtoint i64* %350 to i64
  %352 = add i64 %351, 8
  %353 = inttoptr i64 %352 to i64*
  store i64* %353, i64** %342, align 8
  store i64 %335, i64* %350, align 8
  br label %354

354:                                              ; preds = %349, %339, %312, %302, %275, %265, %238, %228, %176
  %355 = phi i64* [ null, %176 ], [ %229, %228 ], [ %239, %238 ], [ %266, %265 ], [ %276, %275 ], [ %303, %302 ], [ %313, %312 ], [ %340, %339 ], [ %350, %349 ]
  %356 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load i64, i64* %356, align 8
  %358 = and i64 %357, -4294967296
  %359 = add i64 %357, -1
  %360 = inttoptr i64 %359 to i32*
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = zext i32 %361 to i64
  %363 = or i64 %358, %362
  %364 = add i64 %363, 19
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = zext i32 %366 to i64
  %368 = or i64 %358, %367
  %369 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %370 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %369, align 8
  %371 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %370, null
  br i1 %371, label %374, label %372

372:                                              ; preds = %354
  %373 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %370, i64 %368) #11
  br label %387

374:                                              ; preds = %354
  %375 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %376 = load i64*, i64** %375, align 8
  %377 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %378 = load i64*, i64** %377, align 8
  %379 = icmp eq i64* %376, %378
  br i1 %379, label %380, label %382

380:                                              ; preds = %374
  %381 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %382

382:                                              ; preds = %380, %374
  %383 = phi i64* [ %381, %380 ], [ %376, %374 ]
  %384 = ptrtoint i64* %383 to i64
  %385 = add i64 %384, 8
  %386 = inttoptr i64 %385 to i64*
  store i64* %386, i64** %375, align 8
  store i64 %368, i64* %383, align 8
  br label %387

387:                                              ; preds = %372, %382
  %388 = phi i64* [ %373, %372 ], [ %383, %382 ]
  %389 = call i64* @_ZN2v88internal7Factory44NewSharedFunctionInfoForWasmExportedFunctionENS0_6HandleINS0_6StringEEENS2_INS0_24WasmExportedFunctionDataEEE(%"class.v8::internal::Factory"* %68, i64* nonnull %177, i64* %111) #11
  %390 = bitcast %"class.v8::internal::Factory::JSFunctionBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %390) #11
  call void @_ZN2v88internal7Factory17JSFunctionBuilderC1EPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS5_INS0_7ContextEEE(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %8, %"class.v8::internal::Isolate"* %0, i64* %389, i64* %388) #11
  %391 = ptrtoint i64* %355 to i64
  %392 = getelementptr inbounds %"class.v8::internal::Factory::JSFunctionBuilder", %"class.v8::internal::Factory::JSFunctionBuilder"* %8, i64 0, i32 3
  %393 = bitcast %"class.v8::internal::MaybeHandle.1758"* %392 to i64*
  store i64 %391, i64* %393, align 8
  %394 = call i64* @_ZN2v88internal7Factory17JSFunctionBuilder5BuildEv(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %390) #11
  %395 = load i64, i64* %389, align 8
  %396 = trunc i32 %3 to i16
  %397 = add i64 %395, 19
  %398 = inttoptr i64 %397 to i16*
  store i16 %396, i16* %398, align 2
  %399 = load i64, i64* %389, align 8
  %400 = add i64 %399, 21
  %401 = inttoptr i64 %400 to i16*
  store i16 %396, i16* %401, align 2
  %402 = load i64, i64* %389, align 8
  %403 = load i64, i64* %1, align 8
  %404 = and i64 %403, -4294967296
  %405 = add i64 %403, 111
  %406 = inttoptr i64 %405 to i32*
  %407 = load i32, i32* %406, align 4
  %408 = zext i32 %407 to i64
  %409 = or i64 %404, %408
  %410 = add i64 %409, 19
  %411 = inttoptr i64 %410 to i32*
  %412 = load i32, i32* %411, align 4
  %413 = zext i32 %412 to i64
  %414 = or i64 %404, %413
  %415 = and i64 %402, -4294967296
  %416 = add i64 %402, 15
  %417 = inttoptr i64 %416 to i32*
  %418 = load atomic i32, i32* %417 acquire, align 4
  %419 = zext i32 %418 to i64
  %420 = or i64 %415, %419
  %421 = add i64 %420, -1
  %422 = inttoptr i64 %421 to i32*
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = zext i32 %423 to i64
  %425 = or i64 %415, %424
  %426 = add i64 %425, 7
  %427 = inttoptr i64 %426 to i16*
  %428 = load atomic i16, i16* %427 monotonic, align 2
  %429 = icmp eq i16 %428, 100
  br i1 %429, label %430, label %461

430:                                              ; preds = %387
  %431 = add i64 %420, 11
  %432 = inttoptr i64 %431 to i32*
  store atomic volatile i32 %412, i32* %432 monotonic, align 4
  %433 = and i64 %413, 1
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %446, label %435

435:                                              ; preds = %430
  %436 = and i64 %420, -262144
  %437 = or i64 %436, 8
  %438 = inttoptr i64 %437 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = and i64 %439, 262144
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %446, label %442

442:                                              ; preds = %435
  %443 = or i64 %436, 16
  %444 = inttoptr i64 %443 to %"class.v8::internal::Heap"**
  %445 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %444, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %445, i64 %420, i64 %431, i64 %414) #11
  br label %446

446:                                              ; preds = %442, %435, %430
  %447 = and i64 %414, -262144
  %448 = or i64 %447, 8
  %449 = inttoptr i64 %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = and i64 %450, 24
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %490, label %453

453:                                              ; preds = %446
  %454 = and i64 %420, -262144
  %455 = or i64 %454, 8
  %456 = inttoptr i64 %455 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = and i64 %457, 24
  %459 = icmp eq i64 %458, 0
  br i1 %459, label %460, label %490

460:                                              ; preds = %453
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %420, i64 %431, i64 %414) #11
  br label %490

461:                                              ; preds = %387
  store atomic volatile i32 %412, i32* %417 release, align 4
  %462 = and i64 %413, 1
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %475, label %464

464:                                              ; preds = %461
  %465 = and i64 %402, -262144
  %466 = or i64 %465, 8
  %467 = inttoptr i64 %466 to i64*
  %468 = load i64, i64* %467, align 8
  %469 = and i64 %468, 262144
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %475, label %471

471:                                              ; preds = %464
  %472 = or i64 %465, 16
  %473 = inttoptr i64 %472 to %"class.v8::internal::Heap"**
  %474 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %473, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %474, i64 %402, i64 %416, i64 %414) #11
  br label %475

475:                                              ; preds = %471, %464, %461
  %476 = and i64 %414, -262144
  %477 = or i64 %476, 8
  %478 = inttoptr i64 %477 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = and i64 %479, 24
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %490, label %482

482:                                              ; preds = %475
  %483 = and i64 %402, -262144
  %484 = or i64 %483, 8
  %485 = inttoptr i64 %484 to i64*
  %486 = load i64, i64* %485, align 8
  %487 = and i64 %486, 24
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %490

489:                                              ; preds = %482
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %402, i64 %416, i64 %414) #11
  br label %490

490:                                              ; preds = %489, %482, %475, %460, %453, %446
  ret i64* %394
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18WasmInstanceObject23SetWasmExternalFunctionEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_20WasmExternalFunctionEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 155
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %10 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %9, i64 0, i32 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %9, i64 0, i32 1, i64 0
  br label %25

17:                                               ; preds = %11, %4
  %18 = and i64 %5, -262144
  %19 = or i64 %18, 16
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = add i64 %21, -41416
  %23 = inttoptr i64 %22 to %"class.v8::internal::Isolate"*
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %25

25:                                               ; preds = %15, %17
  %26 = phi i64* [ %24, %17 ], [ %16, %15 ]
  %27 = getelementptr inbounds i64, i64* %26, i64 4
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = icmp eq i32 %8, %29
  br i1 %30, label %31, label %97

31:                                               ; preds = %25
  %32 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %33 = and i64 %5, -4294967296
  %34 = add i64 %5, 111
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %33, %37
  %39 = add i64 %38, 11
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %33, %42
  %44 = add i64 %43, 3
  %45 = inttoptr i64 %44 to %"struct.v8::internal::ManagedPtrDestructor"**
  %46 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %45, align 1
  %47 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %46, i64 0, i32 3
  %48 = bitcast i8** %47 to %"class.std::__1::shared_ptr.1273"**
  %49 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %49, i64 0, i32 0
  %51 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %51, i64 0, i32 4, i32 0
  %53 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %52, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %53, i64 0, i32 23
  %55 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %53, i64 0, i32 23, i32 0, i32 1
  %56 = bitcast %"struct.v8::internal::wasm::WasmFunction"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector.1331"* %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = lshr exact i64 %60, 5
  %62 = trunc i64 %61 to i32
  %63 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %32, i32 %62, i8 zeroext 0) #11
  %64 = load i64, i64* %1, align 8
  %65 = load i64, i64* %63, align 8
  %66 = add i64 %64, 155
  %67 = inttoptr i64 %66 to i32*
  %68 = trunc i64 %65 to i32
  store atomic volatile i32 %68, i32* %67 monotonic, align 4
  %69 = and i64 %65, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %31
  %72 = and i64 %64, -262144
  %73 = or i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 262144
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %71
  %79 = or i64 %72, 16
  %80 = inttoptr i64 %79 to %"class.v8::internal::Heap"**
  %81 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %80, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %81, i64 %64, i64 %66, i64 %65) #11
  br label %82

82:                                               ; preds = %78, %71, %31
  %83 = and i64 %65, -262144
  %84 = or i64 %83, 8
  %85 = inttoptr i64 %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, 24
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %119, label %89

89:                                               ; preds = %82
  %90 = and i64 %64, -262144
  %91 = or i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, 24
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %119

96:                                               ; preds = %89
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %64, i64 %66, i64 %65) #11
  br label %119

97:                                               ; preds = %25
  %98 = and i64 %5, -4294967296
  %99 = zext i32 %8 to i64
  %100 = or i64 %98, %99
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %102 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %101, align 8
  %103 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %97
  %105 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %102, i64 %100) #11
  br label %119

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %108 = load i64*, i64** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %110 = load i64*, i64** %109, align 8
  %111 = icmp eq i64* %108, %110
  br i1 %111, label %112, label %114

112:                                              ; preds = %106
  %113 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %114

114:                                              ; preds = %112, %106
  %115 = phi i64* [ %113, %112 ], [ %108, %106 ]
  %116 = ptrtoint i64* %115 to i64
  %117 = add i64 %116, 8
  %118 = inttoptr i64 %117 to i64*
  store i64* %118, i64** %107, align 8
  store i64 %100, i64* %115, align 8
  br label %119

119:                                              ; preds = %114, %104, %96, %89, %82
  %120 = phi i64* [ %63, %82 ], [ %63, %89 ], [ %63, %96 ], [ %105, %104 ], [ %115, %114 ]
  %121 = load i64, i64* %120, align 8
  %122 = load i64, i64* %3, align 8
  %123 = shl i32 %2, 2
  %124 = sext i32 %123 to i64
  %125 = add nsw i64 %124, 7
  %126 = add i64 %125, %121
  %127 = inttoptr i64 %126 to i32*
  %128 = trunc i64 %122 to i32
  store atomic volatile i32 %128, i32* %127 monotonic, align 4
  %129 = and i64 %122, 1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %154, label %131

131:                                              ; preds = %119
  %132 = and i64 %121, -262144
  %133 = or i64 %132, 8
  %134 = inttoptr i64 %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = and i64 %135, 262144
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %131
  %139 = or i64 %132, 16
  %140 = inttoptr i64 %139 to %"class.v8::internal::Heap"**
  %141 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %140, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %141, i64 %121, i64 %126, i64 %122) #11
  br label %142

142:                                              ; preds = %138, %131
  %143 = and i64 %122, -262144
  %144 = or i64 %143, 8
  %145 = inttoptr i64 %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = and i64 %146, 24
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %142
  %150 = load i64, i64* %134, align 8
  %151 = and i64 %150, 24
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %149
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %121, i64 %126, i64 %122) #11
  br label %154

154:                                              ; preds = %119, %142, %149, %153
  ret void
}

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Signature"* @_ZN2v88internal14WasmJSFunction12GetSignatureEPNS0_4ZoneE(%"class.v8::internal::WasmJSFunction"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = bitcast %"class.v8::internal::SharedFunctionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.v8::internal::WasmJSFunction", %"class.v8::internal::WasmJSFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  %14 = call i64 @_ZNK2v88internal18SharedFunctionInfo21wasm_js_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, 31
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 3
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = ashr i32 %23, 3
  %25 = sext i32 %24 to i64
  %26 = shl nsw i64 %25, 2
  %27 = add nsw i64 %26, 7
  %28 = and i64 %27, -8
  %29 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %32, %30
  %34 = icmp ugt i64 %28, %33
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %2
  %36 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %28) #11
  br label %39

37:                                               ; preds = %2
  %38 = add i64 %28, %30
  store i64 %38, i64* %29, align 8
  br label %39

39:                                               ; preds = %35, %37
  %40 = phi i64 [ %36, %35 ], [ %30, %37 ]
  %41 = icmp sgt i32 %23, 7
  br i1 %41, label %42, label %51

42:                                               ; preds = %39
  %43 = load i32, i32* %17, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %15, %44
  %46 = inttoptr i64 %40 to i8*
  %47 = shl nsw i32 %24, 2
  %48 = add i64 %45, 7
  %49 = inttoptr i64 %48 to i8*
  %50 = sext i32 %47 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %49, i64 %50, i1 false) #11
  br label %51

51:                                               ; preds = %42, %39
  %52 = add i64 %14, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = ashr i32 %54, 1
  %56 = add i64 %14, 27
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = ashr i32 %58, 1
  %60 = load i64, i64* %29, align 8
  %61 = load i64, i64* %31, align 8
  %62 = sub i64 %61, %60
  %63 = icmp ult i64 %62, 24
  br i1 %63, label %64, label %66, !prof !2

64:                                               ; preds = %51
  %65 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 24) #11
  br label %68

66:                                               ; preds = %51
  %67 = add i64 %60, 24
  store i64 %67, i64* %29, align 8
  br label %68

68:                                               ; preds = %64, %66
  %69 = phi i64 [ %65, %64 ], [ %60, %66 ]
  %70 = inttoptr i64 %69 to %"class.v8::internal::Signature"*
  %71 = sext i32 %55 to i64
  %72 = sext i32 %59 to i64
  %73 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %70, i64 0, i32 0
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %70, i64 0, i32 1
  store i64 %72, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %70, i64 0, i32 2
  %76 = bitcast %"class.v8::internal::wasm::ValueType"** %75 to i64*
  store i64 %40, i64* %76, align 8
  ret %"class.v8::internal::Signature"* %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal14WasmJSFunction11GetCallableEv(%"class.v8::internal::WasmJSFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %3 = bitcast %"class.v8::internal::SharedFunctionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.v8::internal::WasmJSFunction", %"class.v8::internal::WasmJSFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = call i64 @_ZNK2v88internal18SharedFunctionInfo21wasm_js_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %2) #11
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %14, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret i64 %24
}

declare { i8, i64* } @_ZN2v88internal8compiler21ResolveWasmImportCallENS0_6HandleINS0_10JSReceiverEEEPKNS0_9SignatureINS0_4wasm9ValueTypeEEEPKNS6_10WasmModuleERKNS6_12WasmFeaturesE(i64*, %"class.v8::internal::Signature"*, %"struct.v8::internal::wasm::WasmModule"*, %"class.v8::internal::wasm::WasmFeatures"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZNK2v88internal4wasm12NativeModule20CreateCompilationEnvEv(%"struct.v8::internal::wasm::CompilationEnv"* sret, %"class.v8::internal::wasm::NativeModule"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler28CompileWasmImportCallWrapperEPNS0_4wasm10WasmEngineEPNS2_14CompilationEnvENS1_18WasmImportCallKindEPKNS0_9SignatureINS2_9ValueTypeEEEbi(%"struct.v8::internal::wasm::WasmCompilationResult"* sret, %"class.v8::internal::wasm::WasmEngine"*, %"struct.v8::internal::wasm::CompilationEnv"*, i8 zeroext, %"class.v8::internal::Signature"*, i1 zeroext, i32) local_unnamed_addr #2

declare %"class.v8::internal::wasm::WasmCode"* @_ZN2v88internal4wasm12NativeModule7AddCodeEiRKNS0_8CodeDescEiiNS0_6VectorIKhEES8_NS1_8WasmCode4KindENS1_13ExecutionTierENS1_12ForDebuggingE(%"class.v8::internal::wasm::NativeModule"*, i32, %"class.v8::internal::CodeDesc"* dereferenceable(80), i32, i32, %"class.v8::internal::Vector.1596"* byval(%"class.v8::internal::Vector.1596") align 8, %"class.v8::internal::Vector.1596"* byval(%"class.v8::internal::Vector.1596") align 8, i32, i8 signext, i8 signext) local_unnamed_addr #2

declare i32 @_ZN2v88internal4wasm11GetCodeKindERKNS1_21WasmCompilationResultE(%"struct.v8::internal::wasm::WasmCompilationResult"* dereferenceable(136)) local_unnamed_addr #2

declare %"class.v8::internal::wasm::WasmCode"* @_ZN2v88internal4wasm12NativeModule11PublishCodeENSt3__110unique_ptrINS1_8WasmCodeENS3_14default_deleteIS5_EEEE(%"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::WasmCode"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #7

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_ZN2v88internal18WasmInstanceObject16GetGlobalStorageENS0_6HandleIS1_EERKNS0_4wasm10WasmGlobalE(i64*, %"struct.v8::internal::wasm::WasmGlobal"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 4, !range !5
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %1, i64 0, i32 5
  %8 = load i8, i8* %7, align 4, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %6
  %11 = load i64, i64* %0, align 8
  %12 = add i64 %11, 87
  %13 = inttoptr i64 %12 to i64**
  %14 = load i64*, i64** %13, align 1
  %15 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %1, i64 0, i32 4, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i64, i64* %14, i64 %17
  %19 = bitcast i64* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  br label %30

21:                                               ; preds = %6, %2
  %22 = load i64, i64* %0, align 8
  %23 = add i64 %22, 79
  %24 = inttoptr i64 %23 to i8**
  %25 = load i8*, i8** %24, align 1
  %26 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %1, i64 0, i32 4, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  br label %30

30:                                               ; preds = %21, %10
  %31 = phi i8* [ %20, %10 ], [ %29, %21 ]
  ret i8* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64*, i32 } @_ZN2v88internal18WasmInstanceObject23GetGlobalBufferAndIndexENS0_6HandleIS1_EERKNS0_4wasm10WasmGlobalE(i64*, %"struct.v8::internal::wasm::WasmGlobal"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %1, i64 0, i32 1
  %11 = load i8, i8* %10, align 4, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %63, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %1, i64 0, i32 5
  %15 = load i8, i8* %14, align 4, !range !5
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %63, label %17

17:                                               ; preds = %13
  %18 = and i64 %3, -4294967296
  %19 = add i64 %3, 135
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %1, i64 0, i32 4, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = shl i32 %25, 2
  %27 = sext i32 %26 to i64
  %28 = add i64 %23, 7
  %29 = add i64 %28, %27
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %18, %32
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %35 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %36 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %17
  %38 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %35, i64 %33) #11
  br label %52

39:                                               ; preds = %17
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #11
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8
  store i64 %33, i64* %48, align 8
  br label %52

52:                                               ; preds = %37, %47
  %53 = phi i64* [ %38, %37 ], [ %48, %47 ]
  %54 = load i64, i64* %0, align 8
  %55 = add i64 %54, 87
  %56 = inttoptr i64 %55 to i64**
  %57 = load i64*, i64** %56, align 1
  %58 = load i32, i32* %24, align 8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i64, i64* %57, i64 %59
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  br label %92

63:                                               ; preds = %13, %2
  %64 = and i64 %3, -4294967296
  %65 = add i64 %3, 131
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %64, %68
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %71 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %70, align 8
  %72 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %63
  %74 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %71, i64 %69) #11
  br label %88

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %79 = load i64*, i64** %78, align 8
  %80 = icmp eq i64* %77, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #11
  br label %83

83:                                               ; preds = %81, %75
  %84 = phi i64* [ %82, %81 ], [ %77, %75 ]
  %85 = ptrtoint i64* %84 to i64
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  store i64* %87, i64** %76, align 8
  store i64 %69, i64* %84, align 8
  br label %88

88:                                               ; preds = %73, %83
  %89 = phi i64* [ %74, %73 ], [ %84, %83 ]
  %90 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %1, i64 0, i32 4, i32 0
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %88, %52
  %93 = phi i64* [ %89, %88 ], [ %53, %52 ]
  %94 = phi i32 [ %91, %88 ], [ %62, %52 ]
  %95 = insertvalue { i64*, i32 } undef, i64* %93, 0
  %96 = insertvalue { i64*, i32 } %95, i32 %94, 1
  ret { i64*, i32 } %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18WasmInstanceObject14GetGlobalValueENS0_6HandleIS1_EERKNS0_4wasm10WasmGlobalE(%"class.v8::internal::wasm::WasmValue"* noalias nocapture sret, i64*, %"struct.v8::internal::wasm::WasmGlobal"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %2, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 28
  %14 = icmp eq i32 %13, 8
  br i1 %14, label %15, label %55

15:                                               ; preds = %3
  %16 = tail call { i64*, i32 } @_ZN2v88internal18WasmInstanceObject23GetGlobalBufferAndIndexENS0_6HandleIS1_EERKNS0_4wasm10WasmGlobalE(i64* %1, %"struct.v8::internal::wasm::WasmGlobal"* dereferenceable(48) %2)
  %17 = extractvalue { i64*, i32 } %16, 0
  %18 = extractvalue { i64*, i32 } %16, 1
  %19 = load i64, i64* %17, align 8
  %20 = and i64 %19, -4294967296
  %21 = shl i32 %18, 2
  %22 = sext i32 %21 to i64
  %23 = add i64 %19, 7
  %24 = add i64 %23, %22
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %20, %27
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %30 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %31 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %15
  %33 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %30, i64 %28) #11
  br label %47

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %38 = load i64*, i64** %37, align 8
  %39 = icmp eq i64* %36, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #11
  br label %42

42:                                               ; preds = %40, %34
  %43 = phi i64* [ %41, %40 ], [ %36, %34 ]
  %44 = ptrtoint i64* %43 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  store i64* %46, i64** %35, align 8
  store i64 %28, i64* %43, align 8
  br label %47

47:                                               ; preds = %32, %42
  %48 = phi i64* [ %33, %32 ], [ %43, %42 ]
  %49 = load i32, i32* %11, align 8
  %50 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 %49, i32* %50, align 4
  %51 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %52 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 4
  %54 = bitcast i8* %51 to i64**
  store i64* %48, i64** %54, align 4
  br label %122

55:                                               ; preds = %3
  %56 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %2, i64 0, i32 1
  %57 = load i8, i8* %56, align 4, !range !5
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %2, i64 0, i32 5
  %61 = load i8, i8* %60, align 4, !range !5
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = add i64 %4, 87
  %65 = inttoptr i64 %64 to i64**
  %66 = load i64*, i64** %65, align 1
  %67 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %2, i64 0, i32 4, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i64, i64* %66, i64 %69
  %71 = bitcast i64* %70 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %81

73:                                               ; preds = %59, %55
  %74 = add i64 %4, 79
  %75 = inttoptr i64 %74 to i8**
  %76 = load i8*, i8** %75, align 1
  %77 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %2, i64 0, i32 4, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %76, i64 %79
  br label %81

81:                                               ; preds = %63, %73
  %82 = phi i8* [ %72, %63 ], [ %80, %73 ]
  %83 = trunc i32 %12 to i8
  %84 = and i8 %83, 31
  switch i8 %84, label %121 [
    i8 1, label %85
    i8 2, label %92
    i8 3, label %100
    i8 4, label %107
    i8 5, label %115
  ]

85:                                               ; preds = %81
  %86 = bitcast i8* %82 to i32*
  %87 = load i32, i32* %86, align 1
  %88 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %88, align 4
  %89 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %90 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %90, i8 0, i64 12, i1 false) #11
  %91 = bitcast i8* %89 to i32*
  store i32 %87, i32* %91, align 4
  br label %122

92:                                               ; preds = %81
  %93 = bitcast i8* %82 to i64*
  %94 = load i64, i64* %93, align 1
  %95 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 2, i32* %95, align 4
  %96 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %97 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %98 = bitcast i8* %97 to i64*
  store i64 0, i64* %98, align 4
  %99 = bitcast i8* %96 to i64*
  store i64 %94, i64* %99, align 4
  br label %122

100:                                              ; preds = %81
  %101 = bitcast i8* %82 to i32*
  %102 = load i32, i32* %101, align 1
  %103 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 3, i32* %103, align 4
  %104 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %105 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 12, i1 false) #11
  %106 = bitcast i8* %104 to i32*
  store i32 %102, i32* %106, align 4
  br label %122

107:                                              ; preds = %81
  %108 = bitcast i8* %82 to i64*
  %109 = load i64, i64* %108, align 1
  %110 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 4, i32* %110, align 4
  %111 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %112 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %113 = bitcast i8* %112 to i64*
  store i64 0, i64* %113, align 4
  %114 = bitcast i8* %111 to i64*
  store i64 %109, i64* %114, align 4
  br label %122

115:                                              ; preds = %81
  %116 = bitcast i8* %82 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 1
  %118 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 5, i32* %118, align 4
  %119 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %120 = bitcast i8* %119 to <2 x i64>*
  store <2 x i64> %117, <2 x i64>* %120, align 4
  br label %122

121:                                              ; preds = %81
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

122:                                              ; preds = %85, %92, %100, %107, %115, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10WasmStruct13GetFieldValueEj(%"class.v8::internal::wasm::WasmValue"* noalias sret, %"class.v8::internal::WasmStruct"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::WasmStruct", %"class.v8::internal::WasmStruct"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 19
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %6, %15
  %17 = add i64 %16, 3
  %18 = inttoptr i64 %17 to %"class.v8::internal::wasm::StructType"**
  %19 = load %"class.v8::internal::wasm::StructType"*, %"class.v8::internal::wasm::StructType"** %18, align 1
  %20 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %19, i64 0, i32 2
  %21 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %20, align 8
  %22 = zext i32 %2 to i64
  %23 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %21, i64 %22, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = load atomic i32, i32* %8 monotonic, align 4
  %26 = icmp eq i32 %2, 0
  br i1 %26, label %46, label %27

27:                                               ; preds = %3
  %28 = zext i32 %25 to i64
  %29 = or i64 %6, %28
  %30 = add i64 %29, 19
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %6, %33
  %35 = add i64 %34, 3
  %36 = inttoptr i64 %35 to %"class.v8::internal::wasm::StructType"**
  %37 = load %"class.v8::internal::wasm::StructType"*, %"class.v8::internal::wasm::StructType"** %36, align 1
  %38 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %37, i64 0, i32 1
  %39 = load i32*, i32** %38, align 8
  %40 = add i32 %2, -1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i32, i32* %39, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, 8
  %45 = sext i32 %44 to i64
  br label %46

46:                                               ; preds = %3, %27
  %47 = phi i64 [ %45, %27 ], [ 8, %3 ]
  %48 = add nsw i64 %47, -1
  %49 = add i64 %48, %5
  %50 = trunc i32 %24 to i8
  %51 = and i8 %50, 31
  switch i8 %51, label %146 [
    i8 6, label %52
    i8 7, label %58
    i8 1, label %65
    i8 2, label %72
    i8 3, label %80
    i8 4, label %87
    i8 5, label %95
    i8 10, label %107
    i8 11, label %107
    i8 8, label %144
    i8 9, label %144
    i8 0, label %145
    i8 12, label %145
  ]

52:                                               ; preds = %46
  %53 = inttoptr i64 %49 to i8*
  %54 = load i8, i8* %53, align 1
  %55 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 6, i32* %55, align 4
  %56 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %57 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 0, i64 15, i1 false) #11
  store i8 %54, i8* %56, align 4
  br label %147

58:                                               ; preds = %46
  %59 = inttoptr i64 %49 to i16*
  %60 = load i16, i16* %59, align 1
  %61 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 7, i32* %61, align 4
  %62 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %63 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %63, i8 0, i64 14, i1 false) #11
  %64 = bitcast i8* %62 to i16*
  store i16 %60, i16* %64, align 4
  br label %147

65:                                               ; preds = %46
  %66 = inttoptr i64 %49 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %68, align 4
  %69 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %70 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 12, i1 false) #11
  %71 = bitcast i8* %69 to i32*
  store i32 %67, i32* %71, align 4
  br label %147

72:                                               ; preds = %46
  %73 = inttoptr i64 %49 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 2, i32* %75, align 4
  %76 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %77 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 4
  %79 = bitcast i8* %76 to i64*
  store i64 %74, i64* %79, align 4
  br label %147

80:                                               ; preds = %46
  %81 = inttoptr i64 %49 to i32*
  %82 = load i32, i32* %81, align 1
  %83 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 3, i32* %83, align 4
  %84 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %85 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %85, i8 0, i64 12, i1 false) #11
  %86 = bitcast i8* %84 to i32*
  store i32 %82, i32* %86, align 4
  br label %147

87:                                               ; preds = %46
  %88 = inttoptr i64 %49 to i64*
  %89 = load i64, i64* %88, align 1
  %90 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 4, i32* %90, align 4
  %91 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %92 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %93 = bitcast i8* %92 to i64*
  store i64 0, i64* %93, align 4
  %94 = bitcast i8* %91 to i64*
  store i64 %89, i64* %94, align 4
  br label %147

95:                                               ; preds = %46
  %96 = inttoptr i64 %49 to i8*
  %97 = inttoptr i64 %49 to i64*
  %98 = load i64, i64* %97, align 1
  %99 = getelementptr inbounds i8, i8* %96, i64 8
  %100 = bitcast i8* %99 to i64*
  %101 = load i64, i64* %100, align 1
  %102 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 5, i32* %102, align 4
  %103 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %104 = bitcast i8* %103 to i64*
  store i64 %98, i64* %104, align 4
  %105 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %106 = bitcast i8* %105 to i64*
  store i64 %101, i64* %106, align 4
  br label %147

107:                                              ; preds = %46, %46
  %108 = add i64 %47, %7
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %6, %111
  %113 = and i64 %5, -262144
  %114 = or i64 %113, 16
  %115 = inttoptr i64 %114 to i64*
  %116 = load i64, i64* %115, align 16
  %117 = add i64 %116, -41416
  %118 = inttoptr i64 %117 to %"class.v8::internal::Isolate"*
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %118, i64 0, i32 31, i32 4
  %120 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %119, align 8
  %121 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %107
  %123 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %120, i64 %112) #11
  br label %137

124:                                              ; preds = %107
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %118, i64 0, i32 31, i32 0
  %126 = load i64*, i64** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %118, i64 0, i32 31, i32 1
  %128 = load i64*, i64** %127, align 8
  %129 = icmp eq i64* %126, %128
  br i1 %129, label %130, label %132

130:                                              ; preds = %124
  %131 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %118) #11
  br label %132

132:                                              ; preds = %130, %124
  %133 = phi i64* [ %131, %130 ], [ %126, %124 ]
  %134 = ptrtoint i64* %133 to i64
  %135 = add i64 %134, 8
  %136 = inttoptr i64 %135 to i64*
  store i64* %136, i64** %125, align 8
  store i64 %112, i64* %133, align 8
  br label %137

137:                                              ; preds = %122, %132
  %138 = phi i64* [ %123, %122 ], [ %133, %132 ]
  %139 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 %24, i32* %139, align 4
  %140 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %141 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %142 = bitcast i8* %141 to i64*
  store i64 0, i64* %142, align 4
  %143 = bitcast i8* %140 to i64**
  store i64* %138, i64** %143, align 4
  br label %147

144:                                              ; preds = %46, %46
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

145:                                              ; preds = %46, %46
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

146:                                              ; preds = %46
  unreachable

147:                                              ; preds = %137, %95, %87, %80, %72, %65, %58, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9WasmArray10GetElementEj(%"class.v8::internal::wasm::WasmValue"* noalias sret, %"class.v8::internal::WasmArray"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::WasmArray", %"class.v8::internal::WasmArray"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 19
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %6, %15
  %17 = add i64 %16, 3
  %18 = inttoptr i64 %17 to %"class.v8::internal::wasm::ArrayType"**
  %19 = load %"class.v8::internal::wasm::ArrayType"*, %"class.v8::internal::wasm::ArrayType"** %18, align 1
  %20 = getelementptr inbounds %"class.v8::internal::wasm::ArrayType", %"class.v8::internal::wasm::ArrayType"* %19, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 31
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = mul i32 %26, %2
  %28 = add i32 %27, 12
  %29 = sext i32 %28 to i64
  %30 = add i64 %7, %29
  %31 = trunc i32 %21 to i8
  %32 = and i8 %31, 31
  switch i8 %32, label %126 [
    i8 6, label %33
    i8 7, label %39
    i8 1, label %46
    i8 2, label %53
    i8 3, label %61
    i8 4, label %68
    i8 5, label %76
    i8 10, label %88
    i8 11, label %88
    i8 8, label %124
    i8 9, label %124
    i8 0, label %125
    i8 12, label %125
  ]

33:                                               ; preds = %3
  %34 = inttoptr i64 %30 to i8*
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 6, i32* %36, align 4
  %37 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %38 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %38, i8 0, i64 15, i1 false) #11
  store i8 %35, i8* %37, align 4
  br label %127

39:                                               ; preds = %3
  %40 = inttoptr i64 %30 to i16*
  %41 = load i16, i16* %40, align 1
  %42 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 7, i32* %42, align 4
  %43 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %44 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %44, i8 0, i64 14, i1 false) #11
  %45 = bitcast i8* %43 to i16*
  store i16 %41, i16* %45, align 4
  br label %127

46:                                               ; preds = %3
  %47 = inttoptr i64 %30 to i32*
  %48 = load i32, i32* %47, align 1
  %49 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %49, align 4
  %50 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %51 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 12, i1 false) #11
  %52 = bitcast i8* %50 to i32*
  store i32 %48, i32* %52, align 4
  br label %127

53:                                               ; preds = %3
  %54 = inttoptr i64 %30 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 2, i32* %56, align 4
  %57 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %58 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %59 = bitcast i8* %58 to i64*
  store i64 0, i64* %59, align 4
  %60 = bitcast i8* %57 to i64*
  store i64 %55, i64* %60, align 4
  br label %127

61:                                               ; preds = %3
  %62 = inttoptr i64 %30 to i32*
  %63 = load i32, i32* %62, align 1
  %64 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 3, i32* %64, align 4
  %65 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %66 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 12, i1 false) #11
  %67 = bitcast i8* %65 to i32*
  store i32 %63, i32* %67, align 4
  br label %127

68:                                               ; preds = %3
  %69 = inttoptr i64 %30 to i64*
  %70 = load i64, i64* %69, align 1
  %71 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 4, i32* %71, align 4
  %72 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %73 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 0, i64* %74, align 4
  %75 = bitcast i8* %72 to i64*
  store i64 %70, i64* %75, align 4
  br label %127

76:                                               ; preds = %3
  %77 = inttoptr i64 %30 to i8*
  %78 = inttoptr i64 %30 to i64*
  %79 = load i64, i64* %78, align 1
  %80 = getelementptr inbounds i8, i8* %77, i64 8
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 1
  %83 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 5, i32* %83, align 4
  %84 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %85 = bitcast i8* %84 to i64*
  store i64 %79, i64* %85, align 4
  %86 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %87 = bitcast i8* %86 to i64*
  store i64 %82, i64* %87, align 4
  br label %127

88:                                               ; preds = %3, %3
  %89 = inttoptr i64 %30 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %6, %91
  %93 = and i64 %5, -262144
  %94 = or i64 %93, 16
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 16
  %97 = add i64 %96, -41416
  %98 = inttoptr i64 %97 to %"class.v8::internal::Isolate"*
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %98, i64 0, i32 31, i32 4
  %100 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %99, align 8
  %101 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %88
  %103 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %100, i64 %92) #11
  br label %117

104:                                              ; preds = %88
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %98, i64 0, i32 31, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %98, i64 0, i32 31, i32 1
  %108 = load i64*, i64** %107, align 8
  %109 = icmp eq i64* %106, %108
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %98) #11
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i64* [ %111, %110 ], [ %106, %104 ]
  %114 = ptrtoint i64* %113 to i64
  %115 = add i64 %114, 8
  %116 = inttoptr i64 %115 to i64*
  store i64* %116, i64** %105, align 8
  store i64 %92, i64* %113, align 8
  br label %117

117:                                              ; preds = %102, %112
  %118 = phi i64* [ %103, %102 ], [ %113, %112 ]
  %119 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 0, i32 0
  store i32 %21, i32* %119, align 4
  %120 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 0
  %121 = getelementptr %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %0, i64 0, i32 1, i64 8
  %122 = bitcast i8* %121 to i64*
  store i64 0, i64* %122, align 4
  %123 = bitcast i8* %120 to i64**
  store i64* %118, i64** %123, align 4
  br label %127

124:                                              ; preds = %3, %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

125:                                              ; preds = %3, %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

126:                                              ; preds = %3
  unreachable

127:                                              ; preds = %117, %76, %68, %61, %53, %46, %39, %33
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal9WasmArray11ElementSlotEj(%"class.v8::internal::WasmArray"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = shl i32 %1, 2
  %4 = add i32 %3, 12
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.v8::internal::WasmArray", %"class.v8::internal::WasmArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %5, -1
  %9 = add i64 %8, %7
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal19WasmExceptionObject3NewEPNS0_7IsolateEPKNS0_9SignatureINS0_4wasm9ValueTypeEEENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::Signature"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 19
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %6, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %18 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %19 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %3
  %21 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %18, i64 %16) #11
  %22 = load i64, i64* %21, align 8
  br label %36

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %16, i64* %32, align 8
  br label %36

36:                                               ; preds = %20, %31
  %37 = phi i64 [ %22, %20 ], [ %16, %31 ]
  %38 = and i64 %37, -4294967296
  %39 = add i64 %37, 827
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %45 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %36
  %47 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %44, i64 %43) #11
  br label %61

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %50, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i64* [ %55, %54 ], [ %50, %48 ]
  %58 = ptrtoint i64* %57 to i64
  %59 = add i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  store i64* %60, i64** %49, align 8
  store i64 %43, i64* %57, align 8
  br label %61

61:                                               ; preds = %46, %56
  %62 = phi i64* [ %47, %46 ], [ %57, %56 ]
  %63 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %67 = shl i32 %65, 2
  %68 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %66, i32 %67, i8 zeroext 1) #11
  %69 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 2
  %70 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %70, i64 %72
  %74 = load i64, i64* %63, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %100, label %76

76:                                               ; preds = %61
  %77 = shl nsw i64 %74, 2
  %78 = add i64 %77, -4
  %79 = lshr exact i64 %78, 2
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %78, 0
  br i1 %82, label %90, label %83

83:                                               ; preds = %76
  %84 = sub nuw nsw i64 %80, %81
  br label %171

85:                                               ; preds = %171
  %86 = trunc i64 %187 to i32
  %87 = shl i32 %86, 2
  %88 = or i32 %87, 7
  %89 = sext i32 %88 to i64
  br label %90

90:                                               ; preds = %85, %76
  %91 = phi i64 [ 7, %76 ], [ %89, %85 ]
  %92 = phi %"class.v8::internal::wasm::ValueType"* [ %73, %76 ], [ %195, %85 ]
  %93 = icmp eq i64 %81, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %92, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = load i64, i64* %68, align 8
  %98 = add i64 %91, %97
  %99 = inttoptr i64 %98 to i32*
  store i32 %96, i32* %99, align 1
  br label %100

100:                                              ; preds = %94, %90, %61
  %101 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %102 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %101, i64* %62, i8 zeroext 1) #11
  %103 = load i64, i64* %102, align 8
  %104 = load i64, i64* %68, align 8
  %105 = add i64 %103, 11
  %106 = inttoptr i64 %105 to i32*
  %107 = trunc i64 %104 to i32
  store atomic volatile i32 %107, i32* %106 monotonic, align 4
  %108 = and i64 %104, 1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %121, label %110

110:                                              ; preds = %100
  %111 = and i64 %103, -262144
  %112 = or i64 %111, 8
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = and i64 %114, 262144
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %110
  %118 = or i64 %111, 16
  %119 = inttoptr i64 %118 to %"class.v8::internal::Heap"**
  %120 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %119, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %120, i64 %103, i64 %105, i64 %104) #11
  br label %121

121:                                              ; preds = %117, %110, %100
  %122 = and i64 %104, -262144
  %123 = or i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 24
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %121
  %129 = and i64 %103, -262144
  %130 = or i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, 24
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %128
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %103, i64 %105, i64 %104) #11
  br label %136

136:                                              ; preds = %121, %128, %135
  %137 = load i64, i64* %102, align 8
  %138 = load i64, i64* %2, align 8
  %139 = add i64 %137, 15
  %140 = inttoptr i64 %139 to i32*
  %141 = trunc i64 %138 to i32
  store atomic volatile i32 %141, i32* %140 monotonic, align 4
  %142 = and i64 %138, 1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %136
  %145 = and i64 %137, -262144
  %146 = or i64 %145, 8
  %147 = inttoptr i64 %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 262144
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %144
  %152 = or i64 %145, 16
  %153 = inttoptr i64 %152 to %"class.v8::internal::Heap"**
  %154 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %153, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %154, i64 %137, i64 %139, i64 %138) #11
  br label %155

155:                                              ; preds = %151, %144, %136
  %156 = and i64 %138, -262144
  %157 = or i64 %156, 8
  %158 = inttoptr i64 %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = and i64 %159, 24
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %170, label %162

162:                                              ; preds = %155
  %163 = and i64 %137, -262144
  %164 = or i64 %163, 8
  %165 = inttoptr i64 %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = and i64 %166, 24
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %162
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %137, i64 %139, i64 %138) #11
  br label %170

170:                                              ; preds = %155, %162, %169
  ret i64* %102

171:                                              ; preds = %171, %83
  %172 = phi i64 [ 0, %83 ], [ %187, %171 ]
  %173 = phi %"class.v8::internal::wasm::ValueType"* [ %73, %83 ], [ %195, %171 ]
  %174 = phi i64 [ %84, %83 ], [ %196, %171 ]
  %175 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %173, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = load i64, i64* %68, align 8
  %178 = trunc i64 %172 to i32
  %179 = shl i32 %178, 2
  %180 = or i32 %179, 7
  %181 = sext i32 %180 to i64
  %182 = add i64 %177, %181
  %183 = inttoptr i64 %182 to i32*
  store i32 %176, i32* %183, align 1
  %184 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %173, i64 1, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = load i64, i64* %68, align 8
  %187 = add nuw nsw i64 %172, 2
  %188 = trunc i64 %172 to i32
  %189 = shl i32 %188, 2
  %190 = or i32 %189, 4
  %191 = sext i32 %190 to i64
  %192 = add nsw i64 %191, 7
  %193 = add i64 %192, %186
  %194 = inttoptr i64 %193 to i32*
  store i32 %185, i32* %194, align 1
  %195 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %173, i64 2
  %196 = add i64 %174, -2
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %85, label %171
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal19WasmExceptionObject16MatchesSignatureEPKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::WasmExceptionObject"* nocapture readonly, %"class.v8::internal::Signature"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.v8::internal::WasmExceptionObject", %"class.v8::internal::WasmExceptionObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 3
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = ashr i32 %16, 3
  %18 = icmp eq i32 %17, %5
  br i1 %18, label %19, label %43

19:                                               ; preds = %2
  %20 = icmp sgt i32 %5, 0
  br i1 %20, label %21, label %43

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 2
  %23 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %13, 7
  %27 = and i64 %4, 4294967295
  br label %30

28:                                               ; preds = %30
  %29 = icmp eq i64 %42, %27
  br i1 %29, label %43, label %30

30:                                               ; preds = %28, %21
  %31 = phi i64 [ 0, %21 ], [ %42, %28 ]
  %32 = add i64 %25, %31
  %33 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %23, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = trunc i64 %31 to i32
  %36 = shl i32 %35, 2
  %37 = sext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = icmp eq i32 %34, %40
  %42 = add nuw nsw i64 %31, 1
  br i1 %41, label %28, label %43

43:                                               ; preds = %30, %28, %19, %2
  %44 = phi i1 [ false, %2 ], [ true, %19 ], [ true, %28 ], [ false, %30 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal16WasmCapiFunction16MatchesSignatureEPKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::WasmCapiFunction"* nocapture readonly, %"class.v8::internal::Signature"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = bitcast %"class.v8::internal::SharedFunctionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.v8::internal::WasmCapiFunction", %"class.v8::internal::WasmCapiFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i64 %12, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = call i64 @_ZNK2v88internal18SharedFunctionInfo23wasm_capi_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %3) #11
  %21 = and i64 %20, -4294967296
  %22 = add i64 %20, 23
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %27 = add i32 %6, 1
  %28 = add i32 %27, %9
  %29 = add i64 %26, 3
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = ashr i32 %31, 3
  %33 = icmp eq i32 %28, %32
  br i1 %33, label %34, label %91

34:                                               ; preds = %2
  %35 = icmp sgt i32 %9, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = add i64 %26, 7
  br label %57

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 2
  %40 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %39, align 8
  %41 = add i64 %26, 7
  %42 = and i64 %8, 4294967295
  br label %43

43:                                               ; preds = %54, %38
  %44 = phi i64 [ 0, %38 ], [ %55, %54 ]
  %45 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %40, i64 %44, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = trunc i64 %44 to i32
  %48 = shl i32 %47, 2
  %49 = sext i32 %48 to i64
  %50 = add i64 %41, %49
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 1
  %53 = icmp eq i32 %46, %52
  br i1 %53, label %54, label %91

54:                                               ; preds = %43
  %55 = add nuw nsw i64 %44, 1
  %56 = icmp eq i64 %55, %42
  br i1 %56, label %57, label %43

57:                                               ; preds = %54, %36
  %58 = phi i64 [ %37, %36 ], [ %41, %54 ]
  %59 = phi i32 [ 0, %36 ], [ %9, %54 ]
  %60 = shl i32 %59, 2
  %61 = sext i32 %60 to i64
  %62 = add i64 %58, %61
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %91

66:                                               ; preds = %57
  %67 = icmp sgt i32 %6, 0
  br i1 %67, label %68, label %91

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 2
  %70 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %69, align 8
  %71 = load i64, i64* %7, align 8
  %72 = zext i32 %59 to i64
  %73 = and i64 %5, 4294967295
  br label %76

74:                                               ; preds = %76
  %75 = icmp eq i64 %90, %73
  br i1 %75, label %91, label %76

76:                                               ; preds = %74, %68
  %77 = phi i64 [ 0, %68 ], [ %90, %74 ]
  %78 = phi i64 [ %72, %68 ], [ %79, %74 ]
  %79 = add nuw nsw i64 %78, 1
  %80 = add i64 %71, %77
  %81 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %70, i64 %80, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = trunc i64 %79 to i32
  %84 = shl i32 %83, 2
  %85 = sext i32 %84 to i64
  %86 = add i64 %58, %85
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 1
  %89 = icmp eq i32 %82, %88
  %90 = add nuw nsw i64 %77, 1
  br i1 %89, label %74, label %91

91:                                               ; preds = %43, %76, %74, %66, %57, %2
  %92 = phi i1 [ false, %2 ], [ false, %57 ], [ true, %66 ], [ true, %74 ], [ false, %76 ], [ false, %43 ]
  ret i1 %92
}

declare i64 @_ZNK2v88internal18SharedFunctionInfo23wasm_capi_function_dataEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal20WasmExceptionPackage3NewEPNS0_7IsolateENS0_6HandleINS0_16WasmExceptionTagEEEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %5 = tail call i64* @_ZN2v88internal7Factory19NewWasmRuntimeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %4, i32 375, i64* null, i64* null, i64* null) #11
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 502
  %7 = tail call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %5, i64* %6, i64* %1, i32 0, i64 1) #11
  %8 = icmp eq i64* %7, null
  br i1 %8, label %9, label %10, !prof !2

9:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([176 x i8], [176 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

10:                                               ; preds = %3
  %11 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %12 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %11, i32 %2, i8 zeroext 0) #11
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 503
  %14 = tail call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %5, i64* %13, i64* %12, i32 0, i64 1) #11
  %15 = icmp eq i64* %14, null
  br i1 %15, label %16, label %17, !prof !2

16:                                               ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([172 x i8], [172 x i8]* @.str.16, i64 0, i64 0)) #16
  unreachable

17:                                               ; preds = %10
  ret i64* %5
}

declare i64* @_ZN2v88internal7Factory19NewWasmRuntimeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal20WasmExceptionPackage15GetExceptionTagEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 502
  %5 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #11
  %6 = ptrtoint i64* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %8 = icmp eq i64* %4, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = load i64, i64* null, align 536870912
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  br label %34

13:                                               ; preds = %2
  %14 = load i64, i64* %4, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %14, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i64 %16, 4294967295
  %21 = icmp eq i64 %20, 0
  tail call void @llvm.assume(i1 %21) #11
  %22 = zext i32 %19 to i64
  %23 = or i64 %16, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 64
  br i1 %27, label %28, label %34

28:                                               ; preds = %13
  %29 = add i64 %14, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28, %13, %9
  %35 = phi i32* [ %12, %9 ], [ %18, %28 ], [ %18, %13 ]
  %36 = phi i64 [ %10, %9 ], [ %14, %28 ], [ %14, %13 ]
  br label %37

37:                                               ; preds = %34, %28
  %38 = phi i32* [ %35, %34 ], [ %18, %28 ]
  %39 = phi i64 [ %36, %34 ], [ %14, %28 ]
  %40 = phi i32 [ 3, %34 ], [ 0, %28 ]
  store i32 %40, i32* %7, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %41, align 4
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  store i64* %4, i64** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %51 = bitcast %"class.v8::internal::Handle.1600"* %50 to i64*
  store i64 %6, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %53 = bitcast i64* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 -1, i64 16, i1 false) #11
  %54 = and i64 %39, -4294967296
  %55 = load atomic i32, i32* %38 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %54, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = and i16 %60, -32
  %62 = icmp eq i16 %61, 32
  br i1 %62, label %63, label %67

63:                                               ; preds = %37
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %65 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %64, align 8
  %66 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %65, %"class.v8::internal::Isolate"* %0, i64* %4) #11
  br label %67

67:                                               ; preds = %63, %37
  %68 = phi i64* [ %66, %63 ], [ %4, %37 ]
  store i64* %68, i64** %46, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #11
  %69 = load i32, i32* %41, align 4
  %70 = icmp eq i32 %69, 4
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = bitcast %"class.v8::internal::Isolate"** %45 to %"class.v8::internal::Factory"**
  %73 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %73, i64 160
  %75 = bitcast %"class.v8::internal::Factory"* %74 to i64*
  br label %78

76:                                               ; preds = %67
  %77 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #11
  br label %78

78:                                               ; preds = %71, %76
  %79 = phi i64* [ %77, %76 ], [ %75, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #11
  %80 = icmp eq i64* %79, null
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %82 = select i1 %80, i64* %81, i64* %79
  ret i64* %82
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal20WasmExceptionPackage18GetExceptionValuesEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 503
  %5 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #11
  %6 = ptrtoint i64* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %8 = icmp eq i64* %4, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = load i64, i64* null, align 536870912
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  br label %34

13:                                               ; preds = %2
  %14 = load i64, i64* %4, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %14, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i64 %16, 4294967295
  %21 = icmp eq i64 %20, 0
  tail call void @llvm.assume(i1 %21) #11
  %22 = zext i32 %19 to i64
  %23 = or i64 %16, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 64
  br i1 %27, label %28, label %34

28:                                               ; preds = %13
  %29 = add i64 %14, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28, %13, %9
  %35 = phi i32* [ %12, %9 ], [ %18, %28 ], [ %18, %13 ]
  %36 = phi i64 [ %10, %9 ], [ %14, %28 ], [ %14, %13 ]
  br label %37

37:                                               ; preds = %34, %28
  %38 = phi i32* [ %35, %34 ], [ %18, %28 ]
  %39 = phi i64 [ %36, %34 ], [ %14, %28 ]
  %40 = phi i32 [ 3, %34 ], [ 0, %28 ]
  store i32 %40, i32* %7, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %41, align 4
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  store i64* %4, i64** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %51 = bitcast %"class.v8::internal::Handle.1600"* %50 to i64*
  store i64 %6, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %53 = bitcast i64* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 -1, i64 16, i1 false) #11
  %54 = and i64 %39, -4294967296
  %55 = load atomic i32, i32* %38 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %54, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = and i16 %60, -32
  %62 = icmp eq i16 %61, 32
  br i1 %62, label %63, label %67

63:                                               ; preds = %37
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %65 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %64, align 8
  %66 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %65, %"class.v8::internal::Isolate"* %0, i64* %4) #11
  br label %67

67:                                               ; preds = %63, %37
  %68 = phi i64* [ %66, %63 ], [ %4, %37 ]
  store i64* %68, i64** %46, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #11
  %69 = load i32, i32* %41, align 4
  %70 = icmp eq i32 %69, 4
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = bitcast %"class.v8::internal::Isolate"** %45 to %"class.v8::internal::Factory"**
  %73 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %73, i64 160
  %75 = bitcast %"class.v8::internal::Factory"* %74 to i64*
  br label %78

76:                                               ; preds = %67
  %77 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #11
  br label %78

78:                                               ; preds = %71, %76
  %79 = phi i64* [ %77, %76 ], [ %75, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #11
  %80 = icmp eq i64* %79, null
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %82 = select i1 %80, i64* %81, i64* %79
  ret i64* %82
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal20WasmExceptionPackage14GetEncodedSizeEPKNS0_4wasm13WasmExceptionE(%"struct.v8::internal::wasm::WasmException"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.v8::internal::wasm::WasmException", %"struct.v8::internal::wasm::WasmException"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 2
  %9 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %3, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %31, %1
  %13 = phi i32 [ 0, %1 ], [ %32, %31 ]
  ret i32 %13

14:                                               ; preds = %7, %31
  %15 = phi i64 [ 0, %7 ], [ %33, %31 ]
  %16 = phi i32 [ 0, %7 ], [ %32, %31 ]
  %17 = add i64 %11, %15
  %18 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %9, i64 %17, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 31
  switch i8 %21, label %31 [
    i8 1, label %22
    i8 3, label %22
    i8 2, label %24
    i8 4, label %24
    i8 5, label %26
    i8 10, label %28
    i8 11, label %28
    i8 8, label %30
    i8 9, label %30
    i8 0, label %30
    i8 12, label %30
    i8 6, label %30
    i8 7, label %30
  ]

22:                                               ; preds = %14, %14
  %23 = add i32 %16, 2
  br label %31

24:                                               ; preds = %14, %14
  %25 = add i32 %16, 4
  br label %31

26:                                               ; preds = %14
  %27 = add i32 %16, 8
  br label %31

28:                                               ; preds = %14, %14
  %29 = add i32 %16, 1
  br label %31

30:                                               ; preds = %14, %14, %14, %14, %14, %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

31:                                               ; preds = %22, %24, %26, %28, %14
  %32 = phi i32 [ %16, %14 ], [ %29, %28 ], [ %27, %26 ], [ %25, %24 ], [ %23, %22 ]
  %33 = add nuw i64 %15, 1
  %34 = icmp ult i64 %33, %5
  br i1 %34, label %14, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmCapiFunction3NewEPNS0_7IsolateEmNS0_6HandleINS0_7ForeignEEENS4_INS0_8PodArrayINS0_4wasm9ValueTypeEEEEE(%"class.v8::internal::Isolate"*, i64, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Factory::JSFunctionBuilder", align 8
  %6 = tail call i64 @_ZN2v88internal17ExternalReference6CreateEm(i64 %1) #11
  %7 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 41
  %9 = tail call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %8, i32 160) #11
  %10 = tail call i64* @_ZN2v88internal7Factory23NewWasmCapiFunctionDataEmNS0_6HandleINS0_7ForeignEEENS2_INS0_4CodeEEENS2_INS0_8PodArrayINS0_4wasm9ValueTypeEEEEE(%"class.v8::internal::Factory"* %7, i64 %6, i64* %2, i64* %9, i64* %3) #11
  %11 = tail call i64* @_ZN2v88internal7Factory40NewSharedFunctionInfoForWasmCapiFunctionENS0_6HandleINS0_20WasmCapiFunctionDataEEE(%"class.v8::internal::Factory"* %7, i64* %10) #11
  %12 = bitcast %"class.v8::internal::Factory::JSFunctionBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %15, %24
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %4
  %30 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #11
  br label %44

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i64* [ %38, %37 ], [ %33, %31 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %32, align 8
  store i64 %25, i64* %40, align 8
  br label %44

44:                                               ; preds = %29, %39
  %45 = phi i64* [ %30, %29 ], [ %40, %39 ]
  call void @_ZN2v88internal7Factory17JSFunctionBuilderC1EPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS5_INS0_7ContextEEE(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %5, %"class.v8::internal::Isolate"* %0, i64* %11, i64* %45) #11
  %46 = call i64* @_ZN2v88internal7Factory17JSFunctionBuilder5BuildEv(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #11
  ret i64* %46
}

declare i64 @_ZN2v88internal17ExternalReference6CreateEm(i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory23NewWasmCapiFunctionDataEmNS0_6HandleINS0_7ForeignEEENS2_INS0_4CodeEEENS2_INS0_8PodArrayINS0_4wasm9ValueTypeEEEEE(%"class.v8::internal::Factory"*, i64, i64*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory40NewSharedFunctionInfoForWasmCapiFunctionENS0_6HandleINS0_20WasmCapiFunctionDataEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal7Factory17JSFunctionBuilderC1EPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS5_INS0_7ContextEEE(%"class.v8::internal::Factory::JSFunctionBuilder"*, %"class.v8::internal::Isolate"*, i64*, i64*) unnamed_addr #2

declare i64* @_ZN2v88internal7Factory17JSFunctionBuilder5BuildEv(%"class.v8::internal::Factory::JSFunctionBuilder"*) local_unnamed_addr #2

declare i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory27NewWasmExportedFunctionDataENS0_6HandleINS0_4CodeEEENS2_INS0_18WasmInstanceObjectEEEmNS2_INS0_6ObjectEEEimi(%"class.v8::internal::Factory"*, i64*, i64*, i64, i64*, i32, i64, i32) local_unnamed_addr #2

declare i32 @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8*, i64, i8*, ...) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1596"* dereferenceable(16), i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory44NewSharedFunctionInfoForWasmExportedFunctionENS0_6HandleINS0_6StringEEENS2_INS0_24WasmExportedFunctionDataEEE(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal20WasmExportedFunction17GetWasmCallTargetEv(%"class.v8::internal::WasmExportedFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = bitcast %"class.v8::internal::SharedFunctionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.v8::internal::WasmExportedFunction", %"class.v8::internal::WasmExportedFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  %14 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %3) #11
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, 19
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %21 = bitcast %"class.v8::internal::SharedFunctionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, 11
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %2) #11
  %31 = add i64 %30, 23
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = ashr i32 %33, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  %35 = add i64 %20, 111
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %15, %38
  %40 = add i64 %39, 11
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %15, %43
  %45 = add i64 %44, 3
  %46 = inttoptr i64 %45 to %"struct.v8::internal::ManagedPtrDestructor"**
  %47 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %46, align 1
  %48 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %47, i64 0, i32 3
  %49 = bitcast i8** %48 to %"class.std::__1::shared_ptr.1273"**
  %50 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %50, i64 0, i32 0
  %52 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %52, i64 0, i32 4, i32 0
  %54 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %53, align 8
  %55 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %54, i64 0, i32 13
  %56 = load i32, i32* %55, align 4
  %57 = icmp ugt i32 %56, %34
  br i1 %57, label %58, label %65

58:                                               ; preds = %1
  %59 = add i64 %20, 47
  %60 = inttoptr i64 %59 to i64**
  %61 = load i64*, i64** %60, align 1
  %62 = zext i32 %34 to i64
  %63 = getelementptr inbounds i64, i64* %61, i64 %62
  %64 = load i64, i64* %63, align 8
  br label %67

65:                                               ; preds = %1
  %66 = call i64 @_ZNK2v88internal4wasm12NativeModule24GetCallTargetForFunctionEj(%"class.v8::internal::wasm::NativeModule"* %52, i32 %34) #11
  br label %67

67:                                               ; preds = %58, %65
  %68 = phi i64 [ %64, %58 ], [ %66, %65 ]
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Signature"* @_ZN2v88internal20WasmExportedFunction3sigEv(%"class.v8::internal::WasmExportedFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = bitcast %"class.v8::internal::SharedFunctionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.v8::internal::WasmExportedFunction", %"class.v8::internal::WasmExportedFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  %14 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %3) #11
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, 19
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %21 = add i64 %20, 111
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %15, %24
  %26 = add i64 %25, 11
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %15, %29
  %31 = add i64 %30, 3
  %32 = inttoptr i64 %31 to %"struct.v8::internal::ManagedPtrDestructor"**
  %33 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %32, align 1
  %34 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %33, i64 0, i32 3
  %35 = bitcast i8** %34 to %"class.std::__1::shared_ptr.1273"**
  %36 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %36, i64 0, i32 0
  %38 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %38, i64 0, i32 4, i32 0
  %40 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %39, align 8
  %41 = bitcast %"class.v8::internal::SharedFunctionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %42, 11
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i64 %42, -4294967296
  %47 = zext i32 %45 to i64
  %48 = or i64 %46, %47
  %49 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %48, i64* %49, align 8
  %50 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %2) #11
  %51 = add i64 %50, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = ashr i32 %53, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %40, i64 0, i32 23, i32 0, i32 0
  %57 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %56, align 8
  %58 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %57, i64 %55, i32 0
  %59 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %58, align 8
  ret %"class.v8::internal::Signature"* %59
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal20WasmExportedFunction16MatchesSignatureEPKNS0_4wasm10WasmModuleEPKNS0_9SignatureINS2_9ValueTypeEEE(%"class.v8::internal::WasmExportedFunction"* nocapture readonly, %"struct.v8::internal::wasm::WasmModule"*, %"class.v8::internal::Signature"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %6 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %7 = bitcast %"class.v8::internal::SharedFunctionInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.v8::internal::WasmExportedFunction", %"class.v8::internal::WasmExportedFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 11
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i64 %9, -4294967296
  %14 = zext i32 %12 to i64
  %15 = or i64 %13, %14
  %16 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  %17 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %6) #11
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, 19
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %24 = add i64 %23, 111
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %18, %27
  %29 = add i64 %28, 11
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %18, %32
  %34 = add i64 %33, 3
  %35 = inttoptr i64 %34 to %"struct.v8::internal::ManagedPtrDestructor"**
  %36 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %35, align 1
  %37 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %36, i64 0, i32 3
  %38 = bitcast i8** %37 to %"class.std::__1::shared_ptr.1273"**
  %39 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %39, i64 0, i32 0
  %41 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %41, i64 0, i32 4, i32 0
  %43 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %42, align 8
  %44 = bitcast %"class.v8::internal::SharedFunctionInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %45 = load i64, i64* %8, align 8
  %46 = add i64 %45, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i64 %45, -4294967296
  %50 = zext i32 %48 to i64
  %51 = or i64 %49, %50
  %52 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %51, i64* %52, align 8
  %53 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %5) #11
  %54 = add i64 %53, 23
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = ashr i32 %56, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %43, i64 0, i32 23, i32 0, i32 0
  %60 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %59, align 8
  %61 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %60, i64 %58, i32 0
  %62 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %62, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %2, i64 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %64, %66
  br i1 %67, label %68, label %142

68:                                               ; preds = %3
  %69 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %62, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %2, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %70, %72
  br i1 %73, label %74, label %142

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %62, i64 0, i32 2
  %76 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %76, i64 %70
  %78 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %77, i64 %64
  %79 = ptrtoint %"class.v8::internal::wasm::ValueType"* %76 to i64
  %80 = ptrtoint %"class.v8::internal::wasm::ValueType"* %78 to i64
  %81 = sub i64 %80, %79
  %82 = icmp sgt i64 %81, 0
  br i1 %82, label %83, label %142

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %2, i64 0, i32 2
  %85 = bitcast %"class.v8::internal::SharedFunctionInfo"* %4 to i8*
  %86 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %98

87:                                               ; preds = %98
  %88 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %75, align 8
  %89 = load i64, i64* %69, align 8
  %90 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %88, i64 %89
  %91 = load i64, i64* %63, align 8
  %92 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %90, i64 %91
  %93 = ptrtoint %"class.v8::internal::wasm::ValueType"* %88 to i64
  %94 = ptrtoint %"class.v8::internal::wasm::ValueType"* %92 to i64
  %95 = sub i64 %94, %93
  %96 = ashr exact i64 %95, 2
  %97 = icmp sgt i64 %96, %141
  br i1 %97, label %98, label %142

98:                                               ; preds = %83, %87
  %99 = phi i64 [ 0, %83 ], [ %141, %87 ]
  %100 = phi %"class.v8::internal::wasm::ValueType"* [ %76, %83 ], [ %88, %87 ]
  %101 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %100, i64 %99, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %84, align 8
  %104 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %103, i64 %99, i32 0
  %105 = load i32, i32* %104, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #11
  %106 = load i64, i64* %8, align 8
  %107 = add i64 %106, 11
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i64 %106, -4294967296
  %111 = zext i32 %109 to i64
  %112 = or i64 %110, %111
  store i64 %112, i64* %86, align 8
  %113 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #11
  %114 = and i64 %113, -4294967296
  %115 = add i64 %113, 19
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %114, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #11
  %120 = add i64 %119, 111
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %114, %123
  %125 = add i64 %124, 11
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %114, %128
  %130 = add i64 %129, 3
  %131 = inttoptr i64 %130 to %"struct.v8::internal::ManagedPtrDestructor"**
  %132 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %131, align 1
  %133 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %132, i64 0, i32 3
  %134 = bitcast i8** %133 to %"class.std::__1::shared_ptr.1273"**
  %135 = load %"class.std::__1::shared_ptr.1273"*, %"class.std::__1::shared_ptr.1273"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1273"* %135, i64 0, i32 0
  %137 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %137, i64 0, i32 4, i32 0
  %139 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %138, align 8
  %140 = call zeroext i1 @_ZN2v88internal4wasm15EquivalentTypesENS1_9ValueTypeES2_PKNS1_10WasmModuleES5_(i32 %102, i32 %105, %"struct.v8::internal::wasm::WasmModule"* %139, %"struct.v8::internal::wasm::WasmModule"* %1) #11
  %141 = add nuw nsw i64 %99, 1
  br i1 %140, label %87, label %142

142:                                              ; preds = %98, %87, %74, %68, %3
  %143 = phi i1 [ false, %3 ], [ false, %68 ], [ true, %74 ], [ false, %98 ], [ true, %87 ]
  ret i1 %143
}

declare zeroext i1 @_ZN2v88internal4wasm15EquivalentTypesENS1_9ValueTypeES2_PKNS1_10WasmModuleES5_(i32, i32, %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal20WasmExportedFunction12GetDebugNameEPKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::Signature"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %3, i64 %5
  %7 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %6, i64 %8
  %10 = ptrtoint %"class.v8::internal::wasm::ValueType"* %3 to i64
  %11 = ptrtoint %"class.v8::internal::wasm::ValueType"* %9 to i64
  %12 = sub i64 %11, %10
  %13 = ashr exact i64 %12, 2
  %14 = add nsw i64 %13, 13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %1
  %17 = tail call i8* @_Znam(i64 %14) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %17, i8 0, i64 %14, i1 false) #11
  br label %18

18:                                               ; preds = %16, %1
  %19 = phi i8* [ %17, %16 ], [ null, %1 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @_ZZN2v88internal20WasmExportedFunction12GetDebugNameEPKNS0_9SignatureINS0_4wasm9ValueTypeEEEE7kPrefix, i64 0, i64 0), i64 11, i1 false)
  %20 = getelementptr inbounds i8, i8* %19, i64 11
  %21 = add nsw i64 %13, 2
  %22 = tail call i64 @_ZN2v88internal4wasm14PrintSignatureENS0_6VectorIcEEPKNS0_9SignatureINS1_9ValueTypeEEEc(i8* %20, i64 %21, %"class.v8::internal::Signature"* %0, i8 signext 58) #11
  ret i8* %19
}

declare i64 @_ZN2v88internal4wasm14PrintSignatureENS0_6VectorIcEEPKNS0_9SignatureINS1_9ValueTypeEEEc(i8*, i64, %"class.v8::internal::Signature"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14WasmJSFunction3NewEPNS0_7IsolateEPKNS0_9SignatureINS0_4wasm9ValueTypeEEENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::Signature"*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::WasmExportedFunction", align 8
  %5 = alloca %"class.v8::internal::Factory::JSFunctionBuilder", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 2
  %7 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %7, i64 %9
  %11 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %10, i64 %12
  %14 = ptrtoint %"class.v8::internal::wasm::ValueType"* %7 to i64
  %15 = ptrtoint %"class.v8::internal::wasm::ValueType"* %13 to i64
  %16 = sub i64 %15, %14
  %17 = lshr exact i64 %16, 2
  %18 = trunc i64 %17 to i32
  %19 = trunc i64 %9 to i32
  %20 = trunc i64 %12 to i32
  %21 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, -4
  %24 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %21, i32 %23, i8 zeroext 1) #11
  %25 = icmp sgt i32 %18, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %3
  %27 = load i64, i64* %24, align 8
  %28 = bitcast %"class.v8::internal::wasm::ValueType"** %6 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = add i64 %27, 7
  %31 = inttoptr i64 %30 to i8*
  %32 = sext i32 %23 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %29, i64 %32, i1 false) #11
  br label %33

33:                                               ; preds = %26, %3
  %34 = tail call i64* @_ZN2v88internal8compiler20CompileJSToJSWrapperEPNS0_7IsolateEPKNS0_9SignatureINS0_4wasm9ValueTypeEEEPKNS5_10WasmModuleE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Signature"* %1, %"struct.v8::internal::wasm::WasmModule"* null) #11
  %35 = icmp eq i64* %34, null
  br i1 %35, label %36, label %37, !prof !2

36:                                               ; preds = %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #16
  unreachable

37:                                               ; preds = %33
  %38 = load i64, i64* %2, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %76, label %41

41:                                               ; preds = %37
  %42 = and i64 %38, -4294967296
  %43 = add i64 %38, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %42, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = add i16 %50, -1059
  %52 = icmp ult i16 %51, 15
  br i1 %52, label %53, label %76

53:                                               ; preds = %41
  %54 = add i64 %38, 23
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %42, %57
  %59 = add i64 %58, 27
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 15
  %63 = icmp eq i32 %62, 7
  br i1 %63, label %72, label %64

64:                                               ; preds = %53
  %65 = load atomic i32, i32* %55 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %42, %66
  %68 = add i64 %67, 31
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = icmp eq i32 %70, 573
  br i1 %71, label %72, label %76

72:                                               ; preds = %64, %53
  %73 = bitcast %"class.v8::internal::WasmExportedFunction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  %74 = getelementptr inbounds %"class.v8::internal::WasmExportedFunction", %"class.v8::internal::WasmExportedFunction"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %38, i64* %74, align 8
  %75 = call i64 @_ZN2v88internal20WasmExportedFunction17GetWasmCallTargetEv(%"class.v8::internal::WasmExportedFunction"* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  br label %76

76:                                               ; preds = %37, %64, %41, %72
  %77 = phi i64 [ %75, %72 ], [ 0, %41 ], [ 0, %64 ], [ 0, %37 ]
  %78 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %79 = ptrtoint i64* %34 to i64
  %80 = tail call i64* @_ZN2v88internal7Factory21NewWasmJSFunctionDataEmNS0_6HandleINS0_10JSReceiverEEEiiNS2_INS0_8PodArrayINS0_4wasm9ValueTypeEEEEENS2_INS0_4CodeEEE(%"class.v8::internal::Factory"* %78, i64 %77, i64* %2, i32 %19, i32 %20, i64* %24, i64 %79) #11
  %81 = tail call i32 @_ZN2v88internal4wasm12WasmFeatures11FromIsolateEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  %82 = and i32 %81, 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %149, label %84

84:                                               ; preds = %76
  %85 = load i64, i64* %2, align 8
  %86 = and i64 %85, -4294967296
  %87 = add i64 %85, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %86, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = add i16 %94, -1059
  %96 = icmp ult i16 %95, 15
  br i1 %96, label %97, label %109

97:                                               ; preds = %84
  %98 = add i64 %85, 11
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %86, %101
  %103 = add i64 %102, 21
  %104 = inttoptr i64 %103 to i16*
  %105 = load i16, i16* %104, align 2
  %106 = zext i16 %105 to i32
  %107 = icmp eq i32 %106, %20
  %108 = select i1 %107, i8 4, i8 5
  br label %109

109:                                              ; preds = %97, %84
  %110 = phi i8 [ %108, %97 ], [ 4, %84 ]
  %111 = phi i32 [ %106, %97 ], [ %20, %84 ]
  %112 = tail call i64* @_ZN2v88internal8compiler22CompileWasmToJSWrapperEPNS0_7IsolateEPKNS0_9SignatureINS0_4wasm9ValueTypeEEENS1_18WasmImportCallKindEi(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Signature"* %1, i8 zeroext %110, i32 %111) #11
  %113 = icmp eq i64* %112, null
  br i1 %113, label %114, label %115, !prof !2

114:                                              ; preds = %109
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #16
  unreachable

115:                                              ; preds = %109
  %116 = load i64, i64* %80, align 8
  %117 = load i64, i64* %112, align 8
  %118 = add i64 %116, 19
  %119 = inttoptr i64 %118 to i32*
  %120 = trunc i64 %117 to i32
  store atomic volatile i32 %120, i32* %119 monotonic, align 4
  %121 = and i64 %117, 1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %134, label %123

123:                                              ; preds = %115
  %124 = and i64 %116, -262144
  %125 = or i64 %124, 8
  %126 = inttoptr i64 %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, 262144
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %134, label %130

130:                                              ; preds = %123
  %131 = or i64 %124, 16
  %132 = inttoptr i64 %131 to %"class.v8::internal::Heap"**
  %133 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %132, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %133, i64 %116, i64 %118, i64 %117) #11
  br label %134

134:                                              ; preds = %130, %123, %115
  %135 = and i64 %117, -262144
  %136 = or i64 %135, 8
  %137 = inttoptr i64 %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = and i64 %138, 24
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %134
  %142 = and i64 %116, -262144
  %143 = or i64 %142, 8
  %144 = inttoptr i64 %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = and i64 %145, 24
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %141
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %116, i64 %118, i64 %117) #11
  br label %149

149:                                              ; preds = %76, %148, %141, %134
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 332
  %151 = load i64, i64* %2, align 8
  %152 = and i64 %151, -4294967296
  %153 = add i64 %151, -1
  %154 = inttoptr i64 %153 to i32*
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = zext i32 %155 to i64
  %157 = or i64 %152, %156
  %158 = add i64 %157, 7
  %159 = inttoptr i64 %158 to i16*
  %160 = load atomic i16, i16* %159 monotonic, align 2
  %161 = add i16 %160, -1059
  %162 = icmp ult i16 %161, 15
  br i1 %162, label %163, label %166

163:                                              ; preds = %149
  %164 = tail call i64* @_ZN2v88internal10JSFunction12GetDebugNameENS0_6HandleIS1_EE(i64* %2) #11
  %165 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %164, i8 zeroext 0)
  br label %166

166:                                              ; preds = %163, %149
  %167 = phi i64* [ %165, %163 ], [ %150, %149 ]
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = and i64 %169, -4294967296
  %171 = add i64 %169, -1
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %170, %174
  %176 = add i64 %175, 19
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i64
  %180 = or i64 %170, %179
  %181 = add i64 %180, 823
  %182 = inttoptr i64 %181 to i32*
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = zext i32 %183 to i64
  %185 = or i64 %170, %184
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %187 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %186, align 8
  %188 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %166
  %190 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %187, i64 %185) #11
  br label %204

191:                                              ; preds = %166
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %193 = load i64*, i64** %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %195 = load i64*, i64** %194, align 8
  %196 = icmp eq i64* %193, %195
  br i1 %196, label %197, label %199

197:                                              ; preds = %191
  %198 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %199

199:                                              ; preds = %197, %191
  %200 = phi i64* [ %198, %197 ], [ %193, %191 ]
  %201 = ptrtoint i64* %200 to i64
  %202 = add i64 %201, 8
  %203 = inttoptr i64 %202 to i64*
  store i64* %203, i64** %192, align 8
  store i64 %185, i64* %200, align 8
  br label %204

204:                                              ; preds = %189, %199
  %205 = phi i64* [ %190, %189 ], [ %200, %199 ]
  %206 = tail call i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %0, i64* %205, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18, i64 0, i64 0)) #11
  %207 = load i64, i64* %168, align 8
  %208 = and i64 %207, -4294967296
  %209 = add i64 %207, -1
  %210 = inttoptr i64 %209 to i32*
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = zext i32 %211 to i64
  %213 = or i64 %208, %212
  %214 = add i64 %213, 19
  %215 = inttoptr i64 %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = zext i32 %216 to i64
  %218 = or i64 %208, %217
  %219 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %186, align 8
  %220 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %204
  %222 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %219, i64 %218) #11
  br label %236

223:                                              ; preds = %204
  %224 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %225 = load i64*, i64** %224, align 8
  %226 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %227 = load i64*, i64** %226, align 8
  %228 = icmp eq i64* %225, %227
  br i1 %228, label %229, label %231

229:                                              ; preds = %223
  %230 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %231

231:                                              ; preds = %229, %223
  %232 = phi i64* [ %230, %229 ], [ %225, %223 ]
  %233 = ptrtoint i64* %232 to i64
  %234 = add i64 %233, 8
  %235 = inttoptr i64 %234 to i64*
  store i64* %235, i64** %224, align 8
  store i64 %218, i64* %232, align 8
  br label %236

236:                                              ; preds = %221, %231
  %237 = phi i64* [ %222, %221 ], [ %232, %231 ]
  %238 = tail call i64* @_ZN2v88internal7Factory38NewSharedFunctionInfoForWasmJSFunctionENS0_6HandleINS0_6StringEEENS2_INS0_18WasmJSFunctionDataEEE(%"class.v8::internal::Factory"* %78, i64* %167, i64* %80) #11
  %239 = bitcast %"class.v8::internal::Factory::JSFunctionBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %239) #11
  call void @_ZN2v88internal7Factory17JSFunctionBuilderC1EPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS5_INS0_7ContextEEE(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %5, %"class.v8::internal::Isolate"* %0, i64* %238, i64* %237) #11
  %240 = ptrtoint i64* %206 to i64
  %241 = getelementptr inbounds %"class.v8::internal::Factory::JSFunctionBuilder", %"class.v8::internal::Factory::JSFunctionBuilder"* %5, i64 0, i32 3
  %242 = bitcast %"class.v8::internal::MaybeHandle.1758"* %241 to i64*
  store i64 %240, i64* %242, align 8
  %243 = call i64* @_ZN2v88internal7Factory17JSFunctionBuilder5BuildEv(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %239) #11
  %244 = load i64, i64* %243, align 8
  %245 = add i64 %244, 11
  %246 = inttoptr i64 %245 to i32*
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i64 %244, -4294967296
  %249 = zext i32 %247 to i64
  %250 = or i64 %248, %249
  %251 = trunc i64 %12 to i16
  %252 = add i64 %250, 21
  %253 = inttoptr i64 %252 to i16*
  store i16 %251, i16* %253, align 2
  ret i64* %243
}

declare i64* @_ZN2v88internal8compiler20CompileJSToJSWrapperEPNS0_7IsolateEPKNS0_9SignatureINS0_4wasm9ValueTypeEEEPKNS5_10WasmModuleE(%"class.v8::internal::Isolate"*, %"class.v8::internal::Signature"*, %"struct.v8::internal::wasm::WasmModule"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory21NewWasmJSFunctionDataEmNS0_6HandleINS0_10JSReceiverEEEiiNS2_INS0_8PodArrayINS0_4wasm9ValueTypeEEEEENS2_INS0_4CodeEEE(%"class.v8::internal::Factory"*, i64, i64*, i32, i32, i64*, i64) local_unnamed_addr #2

declare i32 @_ZN2v88internal4wasm12WasmFeatures11FromIsolateEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal8compiler22CompileWasmToJSWrapperEPNS0_7IsolateEPKNS0_9SignatureINS0_4wasm9ValueTypeEEENS1_18WasmImportCallKindEi(%"class.v8::internal::Isolate"*, %"class.v8::internal::Signature"*, i8 zeroext, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal10JSFunction12GetDebugNameENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #9 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #11
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #11
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #11
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

declare i64* @_ZN2v88internal3Map4CopyEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory38NewSharedFunctionInfoForWasmJSFunctionENS0_6HandleINS0_6StringEEENS2_INS0_18WasmJSFunctionDataEEE(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #2

declare i64 @_ZNK2v88internal18SharedFunctionInfo21wasm_js_function_dataEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14WasmJSFunction16MatchesSignatureEPKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::WasmJSFunction"* nocapture readonly, %"class.v8::internal::Signature"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 2
  %5 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %5, i64 %7
  %9 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %8, i64 %10
  %12 = ptrtoint %"class.v8::internal::wasm::ValueType"* %5 to i64
  %13 = ptrtoint %"class.v8::internal::wasm::ValueType"* %11 to i64
  %14 = sub i64 %13, %12
  %15 = trunc i64 %7 to i32
  %16 = bitcast %"class.v8::internal::SharedFunctionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.v8::internal::WasmJSFunction", %"class.v8::internal::WasmJSFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 11
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i64 %18, -4294967296
  %23 = zext i32 %21 to i64
  %24 = or i64 %22, %23
  %25 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = call i64 @_ZNK2v88internal18SharedFunctionInfo21wasm_js_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  %27 = add i64 %26, 23
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = ashr i32 %29, 1
  %31 = icmp eq i32 %30, %15
  br i1 %31, label %32, label %57

32:                                               ; preds = %2
  %33 = trunc i64 %10 to i32
  %34 = add i64 %26, 27
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = ashr i32 %36, 1
  %38 = icmp eq i32 %37, %33
  br i1 %38, label %39, label %57

39:                                               ; preds = %32
  %40 = and i64 %14, 17179869180
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %57, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.v8::internal::wasm::ValueType"** %4 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = and i64 %26, -4294967296
  %46 = add i64 %26, 31
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i8*
  %53 = shl i64 %14, 30
  %54 = ashr exact i64 %53, 30
  %55 = call i32 @bcmp(i8* %52, i8* %44, i64 %54) #11
  %56 = icmp eq i32 %55, 0
  br label %57

57:                                               ; preds = %39, %2, %32, %42
  %58 = phi i1 [ %56, %42 ], [ false, %32 ], [ false, %2 ], [ true, %39 ]
  ret i1 %58
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal20WasmExternalFunction22IsWasmExternalFunctionENS0_6ObjectE(i64) local_unnamed_addr #10 align 2 {
  %2 = and i64 %0, 1
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %67, label %4

4:                                                ; preds = %1
  %5 = and i64 %0, -4294967296
  %6 = add i64 %0, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = add i16 %13, -1059
  %15 = icmp ult i16 %14, 15
  br i1 %15, label %16, label %35

16:                                               ; preds = %4
  %17 = add i64 %0, 23
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %5, %20
  %22 = add i64 %21, 27
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 15
  %26 = icmp eq i32 %25, 7
  br i1 %26, label %67, label %27

27:                                               ; preds = %16
  %28 = load atomic i32, i32* %18 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %5, %29
  %31 = add i64 %30, 31
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = icmp eq i32 %33, 573
  br i1 %34, label %67, label %35

35:                                               ; preds = %4, %27
  %36 = load atomic i32, i32* %7 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = add i16 %41, -1059
  %43 = icmp ult i16 %42, 15
  br i1 %43, label %44, label %67

44:                                               ; preds = %35
  %45 = add i64 %0, 11
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %5, %48
  %50 = add i64 %49, 3
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = zext i32 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %44
  %57 = or i64 %5, %53
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %5, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = icmp eq i16 %65, 74
  br label %67

67:                                               ; preds = %56, %44, %35, %1, %27, %16
  %68 = phi i1 [ true, %16 ], [ true, %27 ], [ false, %35 ], [ false, %44 ], [ %66, %56 ], [ false, %1 ]
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16WasmExceptionTag3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %4 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewStructENS0_12InstanceTypeENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %3, i16 zeroext 117, i8 zeroext 1) #11
  %5 = load i64, i64* %4, align 8
  %6 = shl i32 %1, 1
  %7 = add i64 %5, 3
  %8 = inttoptr i64 %7 to i32*
  store atomic volatile i32 %6, i32* %8 monotonic, align 4
  ret i64* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal11AsmWasmData3NewEPNS0_7IsolateENSt3__110shared_ptrINS0_4wasm12NativeModuleEEENS0_6HandleINS0_10FixedArrayEEENS9_INS0_10HeapNumberEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.v8::internal::wasm::NativeModule"* %1 to i64
  %7 = ptrtoint %"class.std::__1::__shared_weak_count"* %2 to i64
  %8 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %1, i64 0, i32 4, i32 0
  %9 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %8, align 8
  %10 = tail call i64 @_ZN2v88internal4wasm15WasmCodeManager28EstimateNativeModuleCodeSizeEPKNS1_10WasmModuleEb(%"struct.v8::internal::wasm::WasmModule"* %9, i1 zeroext false) #11
  %11 = tail call i64 @_ZN2v88internal4wasm15WasmCodeManager32EstimateNativeModuleMetaDataSizeEPKNS1_10WasmModuleE(%"struct.v8::internal::wasm::WasmModule"* %9) #11
  %12 = add i64 %11, %10
  %13 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::Isolate"*
  %14 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %13, i64 %12) #11
  %15 = tail call i8* @_Znwm(i64 48) #15
  %16 = bitcast i8* %15 to %"struct.v8::internal::ManagedPtrDestructor"*
  %17 = tail call i8* @_Znwm(i64 16) #15
  %18 = bitcast i8* %17 to i64*
  store i64 %6, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = bitcast i8* %19 to i64*
  store i64 %7, i64* %20, align 8
  %21 = bitcast i8* %15 to i64*
  store i64 %12, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 8
  %23 = getelementptr inbounds i8, i8* %15, i64 24
  %24 = bitcast i8* %23 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #11
  store i8* %17, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %15, i64 32
  %26 = bitcast i8* %25 to void (i8*)**
  store void (i8*)* @_ZN2v88internal7ManagedINS0_4wasm12NativeModuleEE10DestructorEPv, void (i8*)** %26, align 8
  %27 = getelementptr inbounds i8, i8* %15, i64 40
  %28 = bitcast i8* %27 to i64**
  store i64* null, i64** %28, align 8
  %29 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %30 = ptrtoint i8* %15 to i64
  %31 = tail call i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"* %29, i64 %30) #11
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 36
  %33 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %32, align 8
  %34 = load i64, i64* %31, align 8
  %35 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %33, i64 %34) #11
  store i64* %35, i64** %28, align 8
  tail call void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64* %35, i8* nonnull %15, void (%"class.v8::WeakCallbackInfo"*)* nonnull @_ZN2v88internal22ManagedObjectFinalizerERKNS_16WeakCallbackInfoIvEE, i32 0) #11
  tail call void @_ZN2v88internal7Isolate28RegisterManagedPtrDestructorEPNS0_20ManagedPtrDestructorE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::ManagedPtrDestructor"* nonnull %16) #11
  %36 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %37 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewStructENS0_12InstanceTypeENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %36, i16 zeroext 92, i8 zeroext 1) #11
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* %31, align 8
  %40 = add i64 %38, 3
  %41 = inttoptr i64 %40 to i32*
  %42 = trunc i64 %39 to i32
  store atomic volatile i32 %42, i32* %41 monotonic, align 4
  %43 = and i64 %39, 1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %5
  %46 = and i64 %38, -262144
  %47 = or i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 262144
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = or i64 %46, 16
  %54 = inttoptr i64 %53 to %"class.v8::internal::Heap"**
  %55 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %54, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %55, i64 %38, i64 %40, i64 %39) #11
  br label %56

56:                                               ; preds = %52, %45, %5
  %57 = and i64 %39, -262144
  %58 = or i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 24
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %56
  %64 = and i64 %38, -262144
  %65 = or i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 24
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %63
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %38, i64 %40, i64 %39) #11
  br label %71

71:                                               ; preds = %56, %63, %70
  %72 = load i64, i64* %37, align 8
  %73 = load i64, i64* %3, align 8
  %74 = add i64 %72, 7
  %75 = inttoptr i64 %74 to i32*
  %76 = trunc i64 %73 to i32
  store atomic volatile i32 %76, i32* %75 monotonic, align 4
  %77 = and i64 %73, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %71
  %80 = and i64 %72, -262144
  %81 = or i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 262144
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %79
  %87 = or i64 %80, 16
  %88 = inttoptr i64 %87 to %"class.v8::internal::Heap"**
  %89 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %88, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %89, i64 %72, i64 %74, i64 %73) #11
  br label %90

90:                                               ; preds = %86, %79, %71
  %91 = and i64 %73, -262144
  %92 = or i64 %91, 8
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 24
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %105, label %97

97:                                               ; preds = %90
  %98 = and i64 %72, -262144
  %99 = or i64 %98, 8
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = and i64 %101, 24
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %97
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %72, i64 %74, i64 %73) #11
  br label %105

105:                                              ; preds = %90, %97, %104
  %106 = load i64, i64* %37, align 8
  %107 = load i64, i64* %4, align 8
  %108 = add i64 %106, 11
  %109 = inttoptr i64 %108 to i32*
  %110 = trunc i64 %107 to i32
  store atomic volatile i32 %110, i32* %109 monotonic, align 4
  %111 = and i64 %107, 1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %124, label %113

113:                                              ; preds = %105
  %114 = and i64 %106, -262144
  %115 = or i64 %114, 8
  %116 = inttoptr i64 %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = and i64 %117, 262144
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %113
  %121 = or i64 %114, 16
  %122 = inttoptr i64 %121 to %"class.v8::internal::Heap"**
  %123 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %122, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %123, i64 %106, i64 %108, i64 %107) #11
  br label %124

124:                                              ; preds = %120, %113, %105
  %125 = and i64 %107, -262144
  %126 = or i64 %125, 8
  %127 = inttoptr i64 %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = and i64 %128, 24
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %139, label %131

131:                                              ; preds = %124
  %132 = and i64 %106, -262144
  %133 = or i64 %132, 8
  %134 = inttoptr i64 %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = and i64 %135, 24
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %131
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %106, i64 %108, i64 %107) #11
  br label %139

139:                                              ; preds = %138, %131, %124
  ret i64* %37
}

declare i64 @_ZN2v88internal4wasm15WasmCodeManager28EstimateNativeModuleCodeSizeEPKNS1_10WasmModuleEb(%"struct.v8::internal::wasm::WasmModule"*, i1 zeroext) local_unnamed_addr #2

declare i64* @_ZNK2v88internal14LookupIterator12GetDataValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #11

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #7

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.1324"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1324", %"class.std::__1::vector.1324"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1324", %"class.std::__1::vector.1324"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.1324"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.1324"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #15
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.1324", %"class.std::__1::vector.1324"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEm(%"class.std::__1::vector.91"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i64** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i64*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i64, i64* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i64, i64* %13, i64 %18
  %20 = bitcast i64* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint i64* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.91"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.91"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #15
  %54 = bitcast i8* %53 to i64*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i64* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i64, i64* %57, i64 %33
  %59 = getelementptr inbounds i64, i64* %57, i64 %56
  %60 = getelementptr inbounds i64, i64* %58, i64 %1
  %61 = bitcast i64* %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint i64* %59 to i64
  %64 = ptrtoint i64* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i64* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i64, i64* %58, i64 %71
  %73 = ptrtoint i64* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i64* %72 to i8*
  %77 = bitcast i64* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #11
  %78 = load i64*, i64** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i64* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i64* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i64* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #13

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal4wasm15IsSubtypeOfImplENS1_9ValueTypeES2_PKNS1_10WasmModuleES5_(i32, i32, %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #2

declare i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal7ManagedINS0_4wasm12NativeModuleEE10DestructorEPv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to %"class.std::__1::__shared_weak_count"**
  %6 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %7 = icmp eq %"class.std::__1::__shared_weak_count"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %10 = atomicrmw add i64* %9, i64 -1 acq_rel
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0
  %14 = bitcast %"class.std::__1::__shared_weak_count"* %6 to void (%"class.std::__1::__shared_count"*)***
  %15 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %15, i64 2
  %17 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %16, align 8
  tail call void %17(%"class.std::__1::__shared_count"* %13) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %6) #11
  br label %18

18:                                               ; preds = %3, %8, %12
  tail call void @_ZdlPv(i8* nonnull %0) #15
  br label %19

19:                                               ; preds = %18, %1
  ret void
}

declare i64* @_ZN2v88internal7Factory10NewForeignEm(%"class.v8::internal::Factory"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64*, i8*, void (%"class.v8::WeakCallbackInfo"*)*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal22ManagedObjectFinalizerERKNS_16WeakCallbackInfoIvEE(%"class.v8::WeakCallbackInfo"* dereferenceable(40)) #2

declare void @_ZN2v88internal7Isolate28RegisterManagedPtrDestructorEPNS0_20ManagedPtrDestructorE(%"class.v8::internal::Isolate"*, %"struct.v8::internal::ManagedPtrDestructor"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal7ManagedINS0_12_GLOBAL__N_120IftNativeAllocationsEE10DestructorEPv(i8*) #0 align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to %"class.std::__1::__shared_weak_count"**
  %6 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %7 = icmp eq %"class.std::__1::__shared_weak_count"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %10 = atomicrmw add i64* %9, i64 -1 acq_rel
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0
  %14 = bitcast %"class.std::__1::__shared_weak_count"* %6 to void (%"class.std::__1::__shared_count"*)***
  %15 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %15, i64 2
  %17 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %16, align 8
  tail call void %17(%"class.std::__1::__shared_count"* %13) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %6) #11
  br label %18

18:                                               ; preds = %3, %8, %12
  tail call void @_ZdlPv(i8* nonnull %0) #15
  br label %19

19:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #11
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1, i32 0, i64 24
  %4 = bitcast i8* %3 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1, i32 0, i64 32
  %10 = bitcast i8* %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast i64* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #15
  br label %12

12:                                               ; preds = %7, %1
  %13 = bitcast %"struct.std::__1::__shared_ptr_emplace<v8::internal::(anonymous namespace)::IftNativeAllocations, std::__1::allocator<v8::internal::(anonymous namespace)::IftNativeAllocations> >::_Storage"* %2 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1, i32 0, i64 8
  %19 = bitcast i8* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_120IftNativeAllocationsENS_9allocatorIS4_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal12BackingStoreD1Ev(%"class.v8::internal::BackingStore"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #11
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::BackingStore"*, %"class.v8::internal::BackingStore"** %2, align 8
  %4 = icmp eq %"class.v8::internal::BackingStore"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN2v88internal12BackingStoreD1Ev(%"class.v8::internal::BackingStore"* nonnull %3) #11
  %6 = bitcast %"class.v8::internal::BackingStore"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal7ManagedINS0_12_GLOBAL__N_129WasmInstanceNativeAllocationsEE10DestructorEPv(i8*) #0 align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to %"class.std::__1::__shared_weak_count"**
  %6 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %7 = icmp eq %"class.std::__1::__shared_weak_count"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %10 = atomicrmw add i64* %9, i64 -1 acq_rel
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0
  %14 = bitcast %"class.std::__1::__shared_weak_count"* %6 to void (%"class.std::__1::__shared_count"*)***
  %15 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %15, i64 2
  %17 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %16, align 8
  tail call void %17(%"class.std::__1::__shared_count"* %13) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %6) #11
  br label %18

18:                                               ; preds = %3, %8, %12
  tail call void @_ZdlPv(i8* nonnull %0) #15
  br label %19

19:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace.1834"*) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace.1834"*) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #11
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace.1834"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace.1834"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 1, i32 0, i64 56
  %3 = bitcast i8* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #15
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 1, i32 0, i64 48
  %9 = bitcast i8* %8 to i32**
  %10 = load i32*, i32** %9, align 8
  store i32* null, i32** %9, align 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = bitcast i32* %10 to i8*
  tail call void @_ZdaPv(i8* %13) #15
  br label %14

14:                                               ; preds = %12, %7
  %15 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 1, i32 0, i64 40
  %16 = bitcast i8* %15 to i64**
  %17 = load i64*, i64** %16, align 8
  store i64* null, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = bitcast i64* %17 to i8*
  tail call void @_ZdaPv(i8* %20) #15
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 1, i32 0, i64 32
  %23 = bitcast i8* %22 to i64**
  %24 = load i64*, i64** %23, align 8
  store i64* null, i64** %23, align 8
  %25 = icmp eq i64* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = bitcast i64* %24 to i8*
  tail call void @_ZdaPv(i8* %27) #15
  br label %28

28:                                               ; preds = %26, %21
  %29 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 1, i32 0, i64 24
  %30 = bitcast i8* %29 to i64**
  %31 = load i64*, i64** %30, align 8
  store i64* null, i64** %30, align 8
  %32 = icmp eq i64* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = bitcast i64* %31 to i8*
  tail call void @_ZdaPv(i8* %34) #15
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 1, i32 0, i64 16
  %37 = bitcast i8* %36 to i64**
  %38 = load i64*, i64** %37, align 8
  store i64* null, i64** %37, align 8
  %39 = icmp eq i64* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = bitcast i64* %38 to i8*
  tail call void @_ZdaPv(i8* %41) #15
  br label %42

42:                                               ; preds = %40, %35
  %43 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.1834", %"struct.std::__1::__shared_ptr_emplace.1834"* %0, i64 0, i32 1, i32 0, i64 8
  %44 = bitcast i8* %43 to i32**
  %45 = load i32*, i32** %44, align 8
  store i32* null, i32** %44, align 8
  %46 = icmp eq i32* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = bitcast i32* %45 to i8*
  tail call void @_ZdaPv(i8* %48) #15
  br label %49

49:                                               ; preds = %42, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal12_GLOBAL__N_129WasmInstanceNativeAllocationsENS_9allocatorIS4_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace.1834"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace.1834"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2146410443, i32 1073205}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i8 0, i8 2}
