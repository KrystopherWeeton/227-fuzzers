; ModuleID = '../../third_party/blink/renderer/platform/image-decoders/segment_stream.cc'
source_filename = "../../third_party/blink/renderer/platform/image-decoders/segment_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SegmentStream" = type { %class.SkStream, %class.scoped_refptr, i64 }
%class.SkStream = type { i32 (...)** }
%class.scoped_refptr = type { %"class.blink::SegmentReader"* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

$_ZNK5blink13SegmentStream11hasPositionEv = comdat any

$_ZNK5blink13SegmentStream11getPositionEv = comdat any

$_ZNK5blink13SegmentStream9hasLengthEv = comdat any

$_ZN8SkStream13getMemoryBaseEv = comdat any

$_ZNK8SkStream11onDuplicateEv = comdat any

$_ZNK8SkStream6onForkEv = comdat any

@_ZTVN5blink13SegmentStreamE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SegmentStream"*)* @_ZN5blink13SegmentStreamD2Ev to i8*), i8* bitcast (void (%"class.blink::SegmentStream"*)* @_ZN5blink13SegmentStreamD0Ev to i8*), i8* bitcast (i64 (%"class.blink::SegmentStream"*, i8*, i64)* @_ZN5blink13SegmentStream4readEPvm to i8*), i8* bitcast (i64 (%"class.blink::SegmentStream"*, i8*, i64)* @_ZNK5blink13SegmentStream4peekEPvm to i8*), i8* bitcast (i1 (%"class.blink::SegmentStream"*)* @_ZNK5blink13SegmentStream7isAtEndEv to i8*), i8* bitcast (i1 (%"class.blink::SegmentStream"*)* @_ZN5blink13SegmentStream6rewindEv to i8*), i8* bitcast (i1 (%"class.blink::SegmentStream"*)* @_ZNK5blink13SegmentStream11hasPositionEv to i8*), i8* bitcast (i64 (%"class.blink::SegmentStream"*)* @_ZNK5blink13SegmentStream11getPositionEv to i8*), i8* bitcast (i1 (%"class.blink::SegmentStream"*, i64)* @_ZN5blink13SegmentStream4seekEm to i8*), i8* bitcast (i1 (%"class.blink::SegmentStream"*, i64)* @_ZN5blink13SegmentStream4moveEl to i8*), i8* bitcast (i1 (%"class.blink::SegmentStream"*)* @_ZNK5blink13SegmentStream9hasLengthEv to i8*), i8* bitcast (i64 (%"class.blink::SegmentStream"*)* @_ZNK5blink13SegmentStream9getLengthEv to i8*), i8* bitcast (i8* (%class.SkStream*)* @_ZN8SkStream13getMemoryBaseEv to i8*), i8* bitcast (%class.SkStream* (%class.SkStream*)* @_ZNK8SkStream11onDuplicateEv to i8*), i8* bitcast (%class.SkStream* (%class.SkStream*)* @_ZNK8SkStream6onForkEv to i8*)] }, align 8

@_ZN5blink13SegmentStreamC1Ev = hidden unnamed_addr alias void (%"class.blink::SegmentStream"*), void (%"class.blink::SegmentStream"*)* @_ZN5blink13SegmentStreamC2Ev
@_ZN5blink13SegmentStreamC1EOS0_ = hidden unnamed_addr alias void (%"class.blink::SegmentStream"*, %"class.blink::SegmentStream"*), void (%"class.blink::SegmentStream"*, %"class.blink::SegmentStream"*)* @_ZN5blink13SegmentStreamC2EOS0_
@_ZN5blink13SegmentStreamD1Ev = hidden unnamed_addr alias void (%"class.blink::SegmentStream"*), void (%"class.blink::SegmentStream"*)* @_ZN5blink13SegmentStreamD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13SegmentStreamC2Ev(%"class.blink::SegmentStream"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink13SegmentStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.blink::SegmentReader"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13SegmentStreamC2EOS0_(%"class.blink::SegmentStream"* nocapture, %"class.blink::SegmentStream"* nocapture dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink13SegmentStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %7 = bitcast %class.scoped_refptr* %5 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %class.scoped_refptr* %4 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.blink::SegmentReader"* null, %"class.blink::SegmentReader"** %6, align 8
  %10 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.blink::SegmentStream"* @_ZN5blink13SegmentStreamaSEOS0_(%"class.blink::SegmentStream"* returned, %"class.blink::SegmentStream"* nocapture dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %5 = bitcast %class.scoped_refptr* %3 to i64*
  %6 = load i64, i64* %5, align 8
  store %"class.blink::SegmentReader"* null, %"class.blink::SegmentReader"** %4, align 8
  %7 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1
  %8 = bitcast %class.scoped_refptr* %7 to i64*
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %10 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %9, align 8
  store i64 %6, i64* %8, align 8
  %11 = icmp eq %"class.blink::SegmentReader"* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %10, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %24

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe"* %18 to %"class.blink::SegmentReader"*
  %20 = bitcast %"class.base::RefCountedThreadSafe"* %18 to void (%"class.blink::SegmentReader"*)***
  %21 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %21, i64 1
  %23 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %22, align 8
  tail call void %23(%"class.blink::SegmentReader"* nonnull %19) #5
  br label %24

24:                                               ; preds = %2, %12, %17
  %25 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %1, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 2
  store i64 %26, i64* %27, align 8
  ret %"class.blink::SegmentStream"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SegmentStreamD2Ev(%"class.blink::SegmentStream"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink13SegmentStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %3, align 8
  %5 = icmp eq %"class.blink::SegmentReader"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::SegmentReader"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::SegmentReader"*)***
  %15 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %15, i64 1
  %17 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %16, align 8
  tail call void %17(%"class.blink::SegmentReader"* nonnull %13) #5
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SegmentStreamD0Ev(%"class.blink::SegmentStream"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink13SegmentStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %3, align 8
  %5 = icmp eq %"class.blink::SegmentReader"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::SegmentReader"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::SegmentReader"*)***
  %15 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %15, i64 1
  %17 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %16, align 8
  tail call void %17(%"class.blink::SegmentReader"* nonnull %13) #5
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.blink::SegmentStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SegmentStream9SetReaderE13scoped_refptrINS_13SegmentReaderEE(%"class.blink::SegmentStream"* nocapture, %"class.blink::SegmentReader"*) local_unnamed_addr #2 align 2 {
  %3 = ptrtoint %"class.blink::SegmentReader"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1
  %5 = bitcast %class.scoped_refptr* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %7 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.blink::SegmentReader"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %7, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %21

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %15 to %"class.blink::SegmentReader"*
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %15 to void (%"class.blink::SegmentReader"*)***
  %18 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %18, i64 1
  %20 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %19, align 8
  tail call void %20(%"class.blink::SegmentReader"* nonnull %16) #5
  br label %21

21:                                               ; preds = %14, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SegmentStream9IsClearedEv(%"class.blink::SegmentStream"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %2, align 8
  %4 = icmp eq %"class.blink::SegmentReader"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.blink::SegmentReader"* %3 to i64 (%"class.blink::SegmentReader"*)***
  %9 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %9, i64 2
  %11 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %10, align 8
  %12 = tail call i64 %11(%"class.blink::SegmentReader"* nonnull %3) #5
  %13 = icmp ugt i64 %7, %12
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi i1 [ true, %1 ], [ %13, %5 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink13SegmentStream4readEPvm(%"class.blink::SegmentStream"*, i8*, i64) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %4, align 8
  %6 = icmp eq %"class.blink::SegmentReader"* %5, null
  br i1 %6, label %39, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::SegmentReader"* %5 to i64 (%"class.blink::SegmentReader"*)***
  %11 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %11, i64 2
  %13 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %12, align 8
  %14 = tail call i64 %13(%"class.blink::SegmentReader"* nonnull %5) #5
  %15 = icmp ugt i64 %9, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %7
  %17 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %4, align 8
  %18 = bitcast %"class.blink::SegmentReader"* %17 to i64 (%"class.blink::SegmentReader"*)***
  %19 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %19, i64 2
  %21 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %20, align 8
  %22 = tail call i64 %21(%"class.blink::SegmentReader"* %17) #5
  %23 = load i64, i64* %8, align 8
  %24 = sub i64 %22, %23
  %25 = icmp ult i64 %24, %2
  %26 = select i1 %25, i64 %24, i64 %2
  %27 = icmp eq i8* %1, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %16
  %29 = bitcast %"class.blink::SegmentStream"* %0 to i64 (%"class.blink::SegmentStream"*, i8*, i64)***
  %30 = load i64 (%"class.blink::SegmentStream"*, i8*, i64)**, i64 (%"class.blink::SegmentStream"*, i8*, i64)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.blink::SegmentStream"*, i8*, i64)*, i64 (%"class.blink::SegmentStream"*, i8*, i64)** %30, i64 3
  %32 = load i64 (%"class.blink::SegmentStream"*, i8*, i64)*, i64 (%"class.blink::SegmentStream"*, i8*, i64)** %31, align 8
  %33 = tail call i64 %32(%"class.blink::SegmentStream"* %0, i8* nonnull %1, i64 %26) #5
  %34 = load i64, i64* %8, align 8
  br label %35

35:                                               ; preds = %16, %28
  %36 = phi i64 [ %34, %28 ], [ %23, %16 ]
  %37 = phi i64 [ %33, %28 ], [ %26, %16 ]
  %38 = add i64 %36, %37
  store i64 %38, i64* %8, align 8
  br label %39

39:                                               ; preds = %3, %7, %35
  %40 = phi i64 [ %37, %35 ], [ 0, %7 ], [ 0, %3 ]
  ret i64 %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink13SegmentStream4peekEPvm(%"class.blink::SegmentStream"* nocapture readonly, i8* nocapture, i64) unnamed_addr #2 align 2 {
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %5, align 8
  %7 = icmp eq %"class.blink::SegmentReader"* %6, null
  br i1 %7, label %62, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::SegmentReader"* %6 to i64 (%"class.blink::SegmentReader"*)***
  %12 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %12, i64 2
  %14 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %13, align 8
  %15 = tail call i64 %14(%"class.blink::SegmentReader"* nonnull %6) #5
  %16 = icmp ugt i64 %10, %15
  br i1 %16, label %62, label %17

17:                                               ; preds = %8
  %18 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %5, align 8
  %19 = bitcast %"class.blink::SegmentReader"* %18 to i64 (%"class.blink::SegmentReader"*)***
  %20 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %20, i64 2
  %22 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %21, align 8
  %23 = tail call i64 %22(%"class.blink::SegmentReader"* %18) #5
  %24 = load i64, i64* %9, align 8
  %25 = sub i64 %23, %24
  %26 = icmp ult i64 %25, %2
  %27 = select i1 %26, i64 %25, i64 %2
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %62, label %29

29:                                               ; preds = %17
  %30 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #5
  store i8* null, i8** %4, align 8
  %31 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %5, align 8
  %32 = bitcast %"class.blink::SegmentReader"* %31 to i64 (%"class.blink::SegmentReader"*, i8**, i64)***
  %33 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)**, i64 (%"class.blink::SegmentReader"*, i8**, i64)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %33, i64 3
  %35 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %34, align 8
  %36 = call i64 %35(%"class.blink::SegmentReader"* %31, i8** nonnull dereferenceable(8) %4, i64 %24) #5
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %51, %29
  %39 = phi i64 [ 0, %29 ], [ %49, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #5
  br label %62

40:                                               ; preds = %29, %51
  %41 = phi i64 [ %60, %51 ], [ %36, %29 ]
  %42 = phi i64 [ %48, %51 ], [ %27, %29 ]
  %43 = phi i64 [ %49, %51 ], [ 0, %29 ]
  %44 = phi i8* [ %52, %51 ], [ %1, %29 ]
  %45 = icmp ugt i64 %41, %42
  %46 = select i1 %45, i64 %42, i64 %41
  %47 = load i8*, i8** %4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %47, i64 %46, i1 false)
  %48 = sub i64 %42, %46
  %49 = add i64 %46, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #5
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds i8, i8* %44, i64 %46
  %53 = load i64, i64* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #5
  store i8* null, i8** %4, align 8
  %54 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %5, align 8
  %55 = add i64 %53, %49
  %56 = bitcast %"class.blink::SegmentReader"* %54 to i64 (%"class.blink::SegmentReader"*, i8**, i64)***
  %57 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)**, i64 (%"class.blink::SegmentReader"*, i8**, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %57, i64 3
  %59 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %58, align 8
  %60 = call i64 %59(%"class.blink::SegmentReader"* %54, i8** nonnull dereferenceable(8) %4, i64 %55) #5
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %38, label %40

62:                                               ; preds = %40, %17, %3, %38, %8
  %63 = phi i64 [ 0, %8 ], [ %39, %38 ], [ 0, %3 ], [ 0, %17 ], [ %49, %40 ]
  ret i64 %63
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SegmentStream7isAtEndEv(%"class.blink::SegmentStream"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %2, align 8
  %4 = icmp eq %"class.blink::SegmentReader"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.blink::SegmentReader"* %3 to i64 (%"class.blink::SegmentReader"*)***
  %9 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %9, i64 2
  %11 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %10, align 8
  %12 = tail call i64 %11(%"class.blink::SegmentReader"* nonnull %3) #5
  %13 = icmp uge i64 %7, %12
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi i1 [ true, %1 ], [ %13, %5 ]
  ret i1 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN5blink13SegmentStream6rewindEv(%"class.blink::SegmentStream"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 2
  store i64 0, i64* %2, align 8
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN5blink13SegmentStream4seekEm(%"class.blink::SegmentStream"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 2
  store i64 %1, i64* %3, align 8
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13SegmentStream4moveEl(%"class.blink::SegmentStream"* nocapture, i64) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink13SegmentStream9getLengthEv(%"class.blink::SegmentStream"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %2, align 8
  %4 = icmp eq %"class.blink::SegmentReader"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::SegmentReader"* %3 to i64 (%"class.blink::SegmentReader"*)***
  %7 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %7, i64 2
  %9 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %8, align 8
  %10 = tail call i64 %9(%"class.blink::SegmentReader"* nonnull %3) #5
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i64 [ %10, %5 ], [ 0, %1 ]
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13SegmentStream11hasPositionEv(%"class.blink::SegmentStream"*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink13SegmentStream11getPositionEv(%"class.blink::SegmentStream"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SegmentStream", %"class.blink::SegmentStream"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13SegmentStream9hasLengthEv(%"class.blink::SegmentStream"*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN8SkStream13getMemoryBaseEv(%class.SkStream*) unnamed_addr #2 comdat align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkStream* @_ZNK8SkStream11onDuplicateEv(%class.SkStream*) unnamed_addr #2 comdat align 2 {
  ret %class.SkStream* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkStream* @_ZNK8SkStream6onForkEv(%class.SkStream*) unnamed_addr #2 comdat align 2 {
  ret %class.SkStream* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
