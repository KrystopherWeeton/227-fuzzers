; ModuleID = '../../third_party/icu/source/i18n/csrecog.cpp'
source_filename = "../../third_party/icu/source/i18n/csrecog.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::CharsetRecognizer" = type { i32 (...)** }

$_ZTSN6icu_697UMemoryE = comdat any

$_ZTIN6icu_697UMemoryE = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN6icu_6917CharsetRecognizerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917CharsetRecognizerE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecognizer"*)* @_ZNK6icu_6917CharsetRecognizer11getLanguageEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecognizer"*)* @_ZN6icu_6917CharsetRecognizerD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecognizer"*)* @_ZN6icu_6917CharsetRecognizerD0Ev to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6917CharsetRecognizerE = hidden constant [29 x i8] c"N6icu_6917CharsetRecognizerE\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN6icu_697UMemoryE = linkonce_odr hidden constant [18 x i8] c"N6icu_697UMemoryE\00", comdat, align 1
@_ZTIN6icu_697UMemoryE = linkonce_odr hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6icu_697UMemoryE, i32 0, i32 0) }, comdat, align 8
@_ZTIN6icu_6917CharsetRecognizerE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6icu_6917CharsetRecognizerE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_697UMemoryE to i8*) }, align 8

@_ZN6icu_6917CharsetRecognizerD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecognizer"*), void (%"class.icu_69::CharsetRecognizer"*)* @_ZN6icu_6917CharsetRecognizerD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_6917CharsetRecognizerD0Ev(%"class.icu_69::CharsetRecognizer"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #3
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6917CharsetRecognizer11getLanguageEv(%"class.icu_69::CharsetRecognizer"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)
}

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
