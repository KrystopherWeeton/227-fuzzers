; ModuleID = '../../content/browser/manifest/manifest_manager_host.cc'
source_filename = "../../content/browser/manifest/manifest_manager_host.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::nothrow_t" = type { i8 }
%"class.content::ManifestManagerHost" = type { %"class.content::RenderDocumentHostUserData", %"class.blink::mojom::ManifestUrlChangeObserver", %"class.content::RenderFrameHostImpl"*, %"class.mojo::Remote.2304", %"class.base::IDMap", %"class.mojo::AssociatedReceiver.2337" }
%"class.content::RenderDocumentHostUserData" = type { %"class.base::SupportsUserData::Data" }
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%"class.blink::mojom::ManifestUrlChangeObserver" = type { i32 (...)** }
%"class.content::RenderFrameHostImpl" = type { %"class.content::RenderFrameHost", %"class.base::SupportsUserData.base", %"class.content::mojom::FrameHost", %"class.content::mojom::RenderAccessibilityHost", %"class.content::mojom::DomAutomationControllerHost", %"class.content::BrowserAccessibilityDelegate", %"class.content::RenderProcessHostObserver", %"class.content::SiteInstanceImpl::Observer", %"class.blink::mojom::BackForwardCacheControllerHost", %"class.blink::mojom::LocalFrameHost", %"class.blink::mojom::LocalMainFrameHost", %"class.ui::AXActionHandlerBase", %"class.content::mojom::PepperHost", %"class.content::mojom::PepperHungDetectorHost", %"class.network::mojom::CookieAccessObserver", %class.scoped_refptr.10, %"class.content::RenderFrameHostDelegate"*, %class.scoped_refptr.28, %"class.content::AgentSchedulingGroupHost"*, %"class.content::FrameTree"*, %"class.content::FrameTreeNode"*, %"class.std::__1::vector.968", %"class.content::RenderFrameHostImpl"*, %class.GURL, %"class.url::Origin", %class.GURL, i32, %"struct.network::CrossOriginEmbedderPolicy", %"class.content::SiteInfo", %class.GURL, %"class.std::__1::basic_string", i32, i64, i8, %"class.std::__1::unique_ptr", i32, i8, i32, %"class.base::TimeTicks", i8, i8, i8, %"class.std::__1::unique_ptr.783", %"class.base::TimeDelta", %"class.std::__1::set.981", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.783", %"class.std::__1::unique_ptr.991", %"class.std::__1::unique_ptr.997", %"class.std::__1::unique_ptr.1003", %"class.std::__1::unique_ptr.1009", %"class.std::__1::unique_ptr.1025", %"class.std::__1::list.1050", %"class.std::__1::unique_ptr.1057", %"class.std::__1::unique_ptr.1063", i32, i32, %"struct.ui::AXTreeData", %"class.ui::AXTreeID", %"class.base::RepeatingCallback.1317", i8, %"class.mojo::Remote.1318", %"class.mojo::AssociatedRemote.1326", %"class.mojo::AssociatedRemote.1334", %"class.mojo::AssociatedRemote.1342", %"class.mojo::Remote.1350", %"class.std::__1::unique_ptr.1358", %"class.std::__1::map.1364", %"class.base::flat_map.1375", %"class.std::__1::unique_ptr.1385", i8*, i8, i8, i8, i8, %"class.absl::optional.1815", i32, i8, i8, i32, %"class.mojo::AssociatedReceiver.1820", %"class.mojo::AssociatedReceiver.1822", %"class.mojo::AssociatedRemote.1824", %"class.mojo::AssociatedRemote.1832", %"class.mojo::AssociatedReceiver.1840", %"class.mojo::AssociatedReceiver.1842", i8, i8, %"class.std::__1::unique_ptr.1844", i8, i8, i8, i8, %"class.absl::optional.1850", %"class.absl::optional.1861", %"class.std::__1::unique_ptr.1872", %"class.std::__1::unique_ptr.1878", %"class.std::__1::unique_ptr.1884", %"class.std::__1::unique_ptr.1888", %"class.std::__1::unique_ptr.1892", %"class.std::__1::unique_ptr.1898", i32, i32, %"class.std::__1::vector.380", %"class.std::__1::unique_ptr.1918", %"class.std::__1::unique_ptr.1945", %"class.content::BrowserInterfaceBrokerImpl", %"class.mojo::Receiver.1996", %"class.std::__1::unique_ptr.1998", %"class.util::TokenType", %"class.mojo::AssociatedRemote.2004", %"class.mojo::AssociatedReceiver.2012", %"class.mojo::AssociatedReceiver.2014", %"class.mojo::AssociatedReceiver.2016", %"class.std::__1::map.2018", %"class.mojo::ReceiverSetBase.2027", %"class.content::KeepAliveHandleFactory", %"class.mojo::Remote.2034", i8, %"class.base::internal::flat_tree.2042", %"struct.std::__1::pair.2043", %"class.mojo::StructPtr.2044", %"class.base::TimeDelta", %"class.base::OneShotTimer", i8, %"class.base::OneShotTimer", %"class.std::__1::set.235", i8, %"class.mojo::StructPtr.2077", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.content::RenderFrameHostImpl::CommitCallbackInterceptor"*, %"class.base::RepeatingCallback.2091", %"class.base::RepeatingCallback.2092", i64, i64, %class.scoped_refptr.2093, %"class.net::IsolationInfo", %"class.std::__1::unique_ptr.2094", %"class.std::__1::unique_ptr.72", i8, %"class.std::__1::basic_string", %"class.std::__1::map.2100", %"class.base::WeakPtr.2109", %"class.base::internal::flat_tree.2110", %"class.std::__1::unique_ptr.2119", %"class.std::__1::unique_ptr.880", %class.scoped_refptr.2125, i32, %"class.std::__1::unique_ptr.2126", i8, %"class.base::TimeTicks", %"class.std::__1::unique_ptr.2159", %"class.std::__1::unique_ptr.2165", i32, i64, i32, i8, %"class.absl::optional", %"class.mojo::ReceiverSetBase.2172", i8, i8, %"class.mojo::StructPtr", %class.scoped_refptr.2173, %"class.mojo::ReceiverSetBase.2178", i8, %"class.mojo::StructPtr.2179", %"class.std::__1::unique_ptr.2296", i32, %"class.mojo::ReceiverSetBase.2302", %"class.base::WeakPtrFactory.2303" }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.content::mojom::FrameHost" = type { i32 (...)** }
%"class.content::mojom::RenderAccessibilityHost" = type { i32 (...)** }
%"class.content::mojom::DomAutomationControllerHost" = type { i32 (...)** }
%"class.content::BrowserAccessibilityDelegate" = type { i32 (...)** }
%"class.content::RenderProcessHostObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.content::SiteInstanceImpl::Observer" = type { i32 (...)** }
%"class.blink::mojom::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::mojom::LocalFrameHost" = type { i32 (...)** }
%"class.blink::mojom::LocalMainFrameHost" = type { i32 (...)** }
%"class.ui::AXActionHandlerBase" = type { i32 (...)**, %"class.ui::AXTreeID" }
%"class.content::mojom::PepperHost" = type { i32 (...)** }
%"class.content::mojom::PepperHungDetectorHost" = type { i32 (...)** }
%"class.network::mojom::CookieAccessObserver" = type { i32 (...)** }
%class.scoped_refptr.10 = type { %"class.content::RenderViewHostImpl"* }
%"class.content::RenderViewHostImpl" = type { %"class.content::RenderViewHost", %"class.content::RenderWidgetHostOwnerDelegate", %"class.content::RenderProcessHostObserver", %"class.ui::GpuSwitchingObserver", %"class.IPC::Listener", %"class.base::RefCounted", %"class.std::__1::unique_ptr", %"class.content::RenderViewHostDelegate"*, %"class.util::IdType", [4 x i8], %"class.content::SiteInfo", i32, i8, i32, i8, i8, %"class.std::__1::unique_ptr.783", %"class.std::__1::unique_ptr.927", %"class.std::__1::unique_ptr.933", i8, i8, %"class.absl::optional.953", %"class.absl::optional.953", %"class.std::__1::basic_string", i8, i8, %"class.base::RepeatingCallback.622", %"class.base::RepeatingCallback.958", %"class.mojo::AssociatedRemote.959", %"class.content::FrameTree"*, %"class.base::WeakPtrFactory.967" }
%"class.content::RenderViewHost" = type { i32 (...)** }
%"class.content::RenderWidgetHostOwnerDelegate" = type { i32 (...)** }
%"class.ui::GpuSwitchingObserver" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.content::RenderViewHostDelegate" = type { i32 (...)** }
%"class.util::IdType" = type { %"class.base::StrongAlias.926" }
%"class.base::StrongAlias.926" = type { i32 }
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.content::InputDeviceChangeObserver"* }
%"class.content::InputDeviceChangeObserver" = type { %"class.ui::InputDeviceEventObserver", %"class.content::RenderViewHostImpl"* }
%"class.ui::InputDeviceEventObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.content::PageLifecycleStateManager"* }
%"class.content::PageLifecycleStateManager" = type { i8, i8, i8, i8, i32, i32, %"class.content::RenderViewHostImpl"*, %"class.mojo::StructPtr.936", %"class.mojo::StructPtr.936", %"class.std::__1::unique_ptr.943", %"class.content::PageLifecycleStateManager::TestDelegate"*, %"class.base::WeakPtrFactory.949" }
%"class.mojo::StructPtr.936" = type { %"class.std::__1::unique_ptr.937" }
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.blink::mojom::PageLifecycleState"* }
%"class.blink::mojom::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.943" = type { %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.content::OneShotTimeoutMonitor"* }
%"class.content::OneShotTimeoutMonitor" = type { %"class.base::OnceCallback.507", %"class.base::TimeDelta", %"class.base::OneShotTimer" }
%"class.base::OnceCallback.507" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.293 }
%class.scoped_refptr.293 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.294", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.294" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.content::PageLifecycleStateManager::TestDelegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.949" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.953" = type { %"class.absl::optional_internal::optional_data.954" }
%"class.absl::optional_internal::optional_data.954" = type { %"class.absl::optional_internal::optional_data_base.955" }
%"class.absl::optional_internal::optional_data_base.955" = type { %"class.absl::optional_internal::optional_data_dtor_base.956" }
%"class.absl::optional_internal::optional_data_dtor_base.956" = type { i8, %union.anon.957 }
%union.anon.957 = type { i32 }
%"class.base::RepeatingCallback.622" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.958" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.mojo::AssociatedRemote.959" = type { %"class.mojo::internal::AssociatedInterfacePtrState.960" }
%"class.mojo::internal::AssociatedInterfacePtrState.960" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.961" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.619", i32 }>
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.622", %"class.base::OnceCallback.623", %"class.absl::optional.624", %"class.absl::optional.629", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.636", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.644", %"class.std::__1::map.655", i64, %"class.base::OnceCallback.507", %"class.base::OnceCallback.664", i8, %class.scoped_refptr.493, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.665" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.623" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.624" = type { %"class.absl::optional_internal::optional_data.625" }
%"class.absl::optional_internal::optional_data.625" = type { %"class.absl::optional_internal::optional_data_base.626" }
%"class.absl::optional_internal::optional_data_base.626" = type { %"class.absl::optional_internal::optional_data_dtor_base.627" }
%"class.absl::optional_internal::optional_data_dtor_base.627" = type { i8, %union.anon.628 }
%union.anon.628 = type { %"class.base::TimeDelta" }
%"class.absl::optional.629" = type { %"class.absl::optional_internal::optional_data.630" }
%"class.absl::optional_internal::optional_data.630" = type { %"class.absl::optional_internal::optional_data_base.631" }
%"class.absl::optional_internal::optional_data_base.631" = type { %"class.absl::optional_internal::optional_data_dtor_base.632" }
%"class.absl::optional_internal::optional_data_dtor_base.632" = type { i8, %union.anon.633 }
%union.anon.633 = type { %"class.base::OneShotTimer" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.582 }
%class.scoped_refptr.582 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2339", [4 x i8], %"class.base::RepeatingCallback.622", %class.scoped_refptr.493, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.2340", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2339" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.2340" = type { %"struct.std::__1::__atomic_base.2341" }
%"struct.std::__1::__atomic_base.2341" = type { %"struct.std::__1::__atomic_base.2342" }
%"struct.std::__1::__atomic_base.2342" = type { %"struct.std::__1::__cxx_atomic_impl.2343" }
%"struct.std::__1::__cxx_atomic_impl.2343" = type { %"struct.std::__1::__cxx_atomic_base_impl.2344" }
%"struct.std::__1::__cxx_atomic_base_impl.2344" = type { i32 }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.635 }
%class.scoped_refptr.635 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.639", %class.scoped_refptr.640 }
%"class.base::RepeatingCallback.639" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.640 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.492", [4 x i8] }>
%"class.base::RefCountedThreadSafe.492" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.500", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.506" }
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.506" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.644" = type { %"class.std::__1::__tree.645" }
%"class.std::__1::__tree.645" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.655" = type { %"class.std::__1::__tree.656" }
%"class.std::__1::__tree.656" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.657", %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::OnceCallback.664" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.493 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.309" }>
%"class.base::RefCountedThreadSafe.309" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.507" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.665" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.961" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"class.blink::mojom::PageBroadcastProxy"* }
%"class.blink::mojom::PageBroadcastProxy" = type { %"class.blink::mojom::PageBroadcast", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::PageBroadcast" = type { i32 (...)** }
%"class.base::WeakPtrFactory.967" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::RenderFrameHostDelegate" = type { i32 (...)** }
%class.scoped_refptr.28 = type { %"class.content::SiteInstanceImpl"* }
%"class.content::SiteInstanceImpl" = type <{ %"class.content::SiteInstance.base", [4 x i8], %"class.content::RenderProcessHostObserver", i32, [4 x i8], i64, %class.scoped_refptr.30, %"class.content::RenderProcessHost"*, %"class.content::AgentSchedulingGroupHost"*, i8, [7 x i8], %"class.content::SiteInfo", i8, [7 x i8], %class.GURL, i32, i8, [3 x i8], i32, [4 x i8], %"class.base::ObserverList", %"class.std::__1::unique_ptr.52", i8, [7 x i8] }>
%"class.content::SiteInstance.base" = type <{ i32 (...)**, %"class.base::RefCounted.29" }>
%"class.base::RefCounted.29" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.30 = type { %"class.content::BrowsingInstance"* }
%"class.content::BrowsingInstance" = type opaque
%"class.content::RenderProcessHost" = type <{ %"class.IPC::Sender", %"class.IPC::Listener", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.45", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.47" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.content::SiteInstanceImpl::DefaultSiteInstanceState"* }
%"class.content::SiteInstanceImpl::DefaultSiteInstanceState" = type opaque
%"class.content::AgentSchedulingGroupHost" = type opaque
%"class.content::FrameTree" = type { %"class.content::FrameTree::Delegate"*, %"class.content::RenderFrameHostDelegate"*, %"class.content::RenderViewHostDelegate"*, %"class.content::RenderWidgetHostDelegate"*, %"class.content::RenderFrameHostManager::Delegate"*, %"class.content::Navigator", %"class.std::__1::unordered_map", %"class.content::FrameTreeNode"*, i32, double, i8, i32 }
%"class.content::FrameTree::Delegate" = type { i32 (...)** }
%"class.content::RenderWidgetHostDelegate" = type { i32 (...)** }
%"class.content::RenderFrameHostManager::Delegate" = type { i32 (...)** }
%"class.content::Navigator" = type { %"class.content::NavigationControllerImpl", %"class.content::NavigatorDelegate"*, %"class.std::__1::unique_ptr.341" }
%"class.content::NavigationControllerImpl" = type { %"class.content::NavigationController", %"class.content::FrameTree"*, %"class.content::BrowserContext"*, %"class.std::__1::vector", %"class.content::NavigationEntryImpl"*, %"class.std::__1::set.261", i32, i32, i32, %"class.content::NavigationControllerDelegate"*, %"class.content::SSLManager", i8, i32, i8, i8, %"class.std::__1::map.271", %"class.std::__1::map.282", i32, %"class.base::RepeatingCallback", %"class.content::NavigationControllerImpl::TimeSmoother", %"class.content::BackForwardCacheImpl", %"class.std::__1::unique_ptr.14", %"class.base::WeakPtrFactory.340" }
%"class.content::NavigationController" = type { i32 (...)** }
%"class.content::BrowserContext" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"*, %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.std::__1::unique_ptr.14"* }
%"class.content::NavigationEntryImpl" = type { %"class.content::NavigationEntry.base", %"class.std::__1::unique_ptr.17", i32, i32, %class.GURL, i8, %"class.std::__1::basic_string.150", %"struct.content::FaviconStatus", %"struct.content::SSLStatus", i32, %class.GURL, i32, %class.GURL, i8, %"class.base::Time", i32, %class.scoped_refptr.173, %"class.std::__1::basic_string", %class.GURL, i8, %"class.std::__1::basic_string.150", i8, i8, i8, i32, i8, i32, i8, i8, %"class.absl::optional.195", %"class.absl::optional.219", i8, %class.scoped_refptr.224 }
%"class.content::NavigationEntry.base" = type { %"class.base::SupportsUserData.base" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.content::NavigationEntryImpl::TreeNode"* }
%"struct.content::NavigationEntryImpl::TreeNode" = type { %"struct.content::NavigationEntryImpl::TreeNode"*, %class.scoped_refptr.20, %"class.std::__1::vector.140" }
%class.scoped_refptr.20 = type { %"class.content::FrameNavigationEntry"* }
%"class.content::FrameNavigationEntry" = type { i32 (...)**, %"class.base::RefCounted.21", %"class.std::__1::basic_string", i64, i64, %class.scoped_refptr.28, %class.scoped_refptr.28, %class.GURL, %"class.absl::optional.35", %"struct.content::Referrer", %"class.absl::optional.35", %"class.std::__1::vector.58", %"class.blink::PageState", i32, %"class.std::__1::basic_string", i64, %class.scoped_refptr.64, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78" }
%"class.base::RefCounted.21" = type { %"class.base::subtle::RefCountedBase" }
%"struct.content::Referrer" = type <{ %class.GURL, i32, [4 x i8] }>
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.url::Origin" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.GURL* }
%"class.blink::PageState" = type { %"class.std::__1::basic_string" }
%class.scoped_refptr.64 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.65", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.65" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.content::WebBundleNavigationInfo"* }
%"class.content::WebBundleNavigationInfo" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.content::PolicyContainerPolicies"* }
%"struct.content::PolicyContainerPolicies" = type { i32, i32, i8, %"class.std::__1::vector.81", %"struct.network::CrossOriginOpenerPolicy" }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.mojo::StructPtr"* }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.132", i32, %"class.absl::optional.132" }
%"class.absl::optional.132" = type { %"class.absl::optional_internal::optional_data.133" }
%"class.absl::optional_internal::optional_data.133" = type { %"class.absl::optional_internal::optional_data_base.134" }
%"class.absl::optional_internal::optional_data_base.134" = type { %"class.absl::optional_internal::optional_data_dtor_base.135" }
%"class.absl::optional_internal::optional_data_dtor_base.135" = type { i8, %union.anon.136 }
%union.anon.136 = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.std::__1::unique_ptr.17"*, %"class.std::__1::unique_ptr.17"*, %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.std::__1::unique_ptr.17"* }
%"struct.content::FaviconStatus" = type { i8, %class.GURL, %"class.gfx::Image" }
%"class.gfx::Image" = type { %class.scoped_refptr.159 }
%class.scoped_refptr.159 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"struct.content::SSLStatus" = type { i8, %class.scoped_refptr.160, i32, i16, i16, i32, i32, i8, i32 }
%class.scoped_refptr.160 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.161", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.162", %"class.std::__1::vector.166" }
%"class.base::RefCountedThreadSafe.161" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.110", %"class.std::__1::vector.110", %"class.std::__1::vector.110", %"class.std::__1::vector.110" }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"*, %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::unique_ptr.162"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.173 = type { %"class.network::ResourceRequestBody"* }
%"class.network::ResourceRequestBody" = type <{ %"class.base::RefCountedThreadSafe.174", [4 x i8], %"class.std::__1::vector.175", i64, i8, i8, [6 x i8] }>
%"class.base::RefCountedThreadSafe.174" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"class.network::DataElement"*, %"class.network::DataElement"*, %"class.std::__1::__compressed_pair.190" }
%"class.network::DataElement" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.177" }
%"union.absl::variant_internal::DestructibleUnionImpl.177" = type { %"union.absl::variant_internal::DestructibleUnionImpl.185" }
%"union.absl::variant_internal::DestructibleUnionImpl.185" = type { %"union.absl::variant_internal::DestructibleUnionImpl.186" }
%"union.absl::variant_internal::DestructibleUnionImpl.186" = type { %"union.absl::variant_internal::DestructibleUnionImpl.188" }
%"union.absl::variant_internal::DestructibleUnionImpl.188" = type { %"class.network::DataElementFile" }
%"class.network::DataElementFile" = type { %"class.base::FilePath", i64, i64, %"class.base::Time" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.network::DataElement"* }
%"class.std::__1::basic_string.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.153 }
%union.anon.153 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.195" = type { %"class.absl::optional_internal::optional_data.196" }
%"class.absl::optional_internal::optional_data.196" = type { %"class.absl::optional_internal::optional_data_base.197" }
%"class.absl::optional_internal::optional_data_base.197" = type { %"class.absl::optional_internal::optional_data_dtor_base.198" }
%"class.absl::optional_internal::optional_data_dtor_base.198" = type { i8, %union.anon.199 }
%union.anon.199 = type { %"class.net::IsolationInfo" }
%"class.absl::optional.219" = type { %"class.absl::optional_internal::optional_data.220" }
%"class.absl::optional_internal::optional_data.220" = type { %"class.absl::optional_internal::optional_data_base.221" }
%"class.absl::optional_internal::optional_data_base.221" = type { %"class.absl::optional_internal::optional_data_dtor_base.222" }
%"class.absl::optional_internal::optional_data_dtor_base.222" = type { i8, [7 x i8], %union.anon.223 }
%union.anon.223 = type { %"struct.content::ReplacedNavigationEntryData" }
%"struct.content::ReplacedNavigationEntryData" = type <{ %class.GURL, %"class.base::Time", i32, [4 x i8] }>
%class.scoped_refptr.224 = type { %"class.content::BackForwardCacheMetrics"* }
%"class.content::BackForwardCacheMetrics" = type { %"class.base::RefCounted.225", i64, i64, i64, i64, i64, %"class.absl::optional.226", %"class.absl::optional.226", %"class.std::__1::unique_ptr.232", i8, i8, %"class.absl::optional.226", %"class.absl::optional.248" }
%"class.base::RefCounted.225" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.content::BackForwardCacheCanStoreDocumentResult"* }
%"class.content::BackForwardCacheCanStoreDocumentResult" = type { %"class.std::__1::bitset", i64, %"class.std::__1::set.235" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.absl::optional.226" = type { %"class.absl::optional_internal::optional_data.227" }
%"class.absl::optional_internal::optional_data.227" = type { %"class.absl::optional_internal::optional_data_base.228" }
%"class.absl::optional_internal::optional_data_base.228" = type { %"class.absl::optional_internal::optional_data_dtor_base.229" }
%"class.absl::optional_internal::optional_data_dtor_base.229" = type { i8, %union.anon.230 }
%union.anon.230 = type { %"class.base::TimeTicks" }
%"class.absl::optional.248" = type { %"class.absl::optional_internal::optional_data.249" }
%"class.absl::optional_internal::optional_data.249" = type { %"class.absl::optional_internal::optional_data_base.250" }
%"class.absl::optional_internal::optional_data_base.250" = type { %"class.absl::optional_internal::optional_data_dtor_base.251" }
%"class.absl::optional_internal::optional_data_dtor_base.251" = type { i8, %union.anon.252 }
%union.anon.252 = type { i32 }
%"class.std::__1::set.261" = type { %"class.std::__1::__tree.262" }
%"class.std::__1::__tree.262" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.content::NavigationControllerDelegate" = type { i32 (...)** }
%"class.content::SSLManager" = type { i32 (...)**, %"class.content::NavigationControllerImpl"*, %"class.content::SSLHostStateDelegate"* }
%"class.content::SSLHostStateDelegate" = type opaque
%"class.std::__1::map.271" = type { %"class.std::__1::__tree.272" }
%"class.std::__1::__tree.272" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.282" = type { %"class.std::__1::__tree.283" }
%"class.std::__1::__tree.283" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.content::NavigationControllerImpl::TimeSmoother" = type { %"class.base::Time", %"class.base::Time" }
%"class.content::BackForwardCacheImpl" = type { %"class.content::BackForwardCache", %"class.content::RenderProcessHostInternalObserver", %"class.std::__1::list", %"class.std::__1::multiset", i8, %class.scoped_refptr.308, %"class.std::__1::map.310", %"class.std::__1::map.310", %"class.std::__1::unordered_set", i32, %"class.base::WeakPtrFactory.339" }
%"class.content::BackForwardCache" = type { i32 (...)** }
%"class.content::RenderProcessHostInternalObserver" = type { %"class.base::CheckedObserver" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.295" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.299" }
%"class.std::__1::__tree.299" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.308 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.std::__1::map.310" = type { %"class.std::__1::__tree.311" }
%"class.std::__1::__tree.311" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.321", %"class.std::__1::__compressed_pair.329", %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.336", [4 x i8] }>
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323", %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { float }
%"class.base::WeakPtrFactory.339" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.content::NavigationEntryImpl"* }
%"class.base::WeakPtrFactory.340" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::NavigatorDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.content::Navigator::NavigationMetricsData"* }
%"struct.content::Navigator::NavigationMetricsData" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.347" }
%"class.std::__1::__hash_table.347" = type <{ %"class.std::__1::unique_ptr.348", %"class.std::__1::__compressed_pair.358", %"class.std::__1::__compressed_pair.363", %"class.std::__1::__compressed_pair.365", [4 x i8] }>
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350", %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.std::__1::__hash_node_base.351"** }
%"struct.std::__1::__hash_node_base.351" = type { %"struct.std::__1::__hash_node_base.351"* }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.std::__1::__bucket_list_deallocator.353" }
%"class.std::__1::__bucket_list_deallocator.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::__hash_node_base.351" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"class.content::FrameTreeNode" = type { %"class.content::FrameTree"*, i32, %"class.content::RenderFrameHostImpl"*, i32, %"class.content::FrameTreeNode"*, %"class.std::__1::unique_ptr.370", %"class.content::FrameTreeNode"*, %"class.absl::optional", %"class.std::__1::unique_ptr.370", %class.GURL, %"class.url::Origin", i8, i8, i32, i32, %"class.mojo::StructPtr.376", %"struct.blink::FramePolicy", i8, %"class.base::UnguessableToken", %"class.blink::mojom::FrameOwnerProperties", %"class.mojo::StructPtr", %"class.std::__1::unique_ptr.414", %"class.base::ObserverList.420", %"class.base::TimeTicks", i8, %"class.blink::UserActivationState", %"class.content::FrameTreeNodeBlameContext", %"class.content::RenderFrameHostManager" }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.content::FrameTreeNode::OpenerDestroyedObserver"* }
%"class.content::FrameTreeNode::OpenerDestroyedObserver" = type opaque
%"class.mojo::StructPtr.376" = type { %"class.std::__1::unique_ptr.377" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::mojom::FrameReplicationState"* }
%"class.blink::mojom::FrameReplicationState" = type { %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.380", i32, [4 x i8], %"struct.blink::FramePolicy", i32, %"class.std::__1::vector.404", i8, i8, i8, i32 }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { i32*, i32*, %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { i32* }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.380", %"class.base::flat_map.394", i8, [7 x i8] }>
%"class.base::flat_map.394" = type { %"class.base::internal::flat_tree.395" }
%"class.base::internal::flat_tree.395" = type { %"class.std::__1::vector.396" }
%"class.std::__1::vector.396" = type { %"class.std::__1::__vector_base.397" }
%"class.std::__1::__vector_base.397" = type { %"struct.std::__1::pair.398"*, %"struct.std::__1::pair.398"*, %"class.std::__1::__compressed_pair.399" }
%"struct.std::__1::pair.398" = type opaque
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.std::__1::pair.398"* }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::mojom::FrameOwnerProperties" = type <{ %"class.std::__1::basic_string", i32, i32, i32, i8, i8, i8, i8, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.content::NavigationRequest"* }
%"class.content::NavigationRequest" = type opaque
%"class.base::ObserverList.420" = type <{ %"class.std::__1::vector.45", %"class.base::LinkedList.421", i64, i32, [4 x i8] }>
%"class.base::LinkedList.421" = type { %"class.base::LinkNode.422" }
%"class.base::LinkNode.422" = type { %"class.base::internal::LinkNodeBase" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.content::FrameTreeNodeBlameContext" = type { %"class.base::trace_event::BlameContext" }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory.424" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory.424" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::RenderFrameHostManager" = type { %"class.content::SiteInstanceImpl::Observer", %"class.content::FrameTreeNode"*, %"class.content::RenderFrameHostManager::Delegate"*, %"class.std::__1::unique_ptr.425", %"class.std::__1::unordered_map.431", %"class.std::__1::set.459", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.467", %"class.base::OnceCallback", i32, %"class.base::WeakPtrFactory.490" }
%"class.std::__1::unordered_map.431" = type { %"class.std::__1::__hash_table.432" }
%"class.std::__1::__hash_table.432" = type <{ %"class.std::__1::unique_ptr.433", %"class.std::__1::__compressed_pair.443", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", [4 x i8] }>
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435", %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"struct.std::__1::__hash_node_base.436"** }
%"struct.std::__1::__hash_node_base.436" = type { %"struct.std::__1::__hash_node_base.436"* }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.std::__1::__bucket_list_deallocator.438" }
%"class.std::__1::__bucket_list_deallocator.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"struct.std::__1::__hash_node_base.436" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"class.std::__1::set.459" = type { %"class.std::__1::__tree.460" }
%"class.std::__1::__tree.460" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.461", %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.content::RenderFrameHostImpl"* }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.content::BackForwardCacheImpl::Entry"* }
%"struct.content::BackForwardCacheImpl::Entry" = type { %"class.std::__1::unique_ptr.425", %"class.std::__1::unordered_map.431", %"class.std::__1::set.470", %"class.mojo::StructPtr.480" }
%"class.std::__1::set.470" = type { %"class.std::__1::__tree.471" }
%"class.std::__1::__tree.471" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.472", %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.mojo::StructPtr.480" = type { %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.blink::mojom::PageRestoreParams"* }
%"class.blink::mojom::PageRestoreParams" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.490" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.968" = type { %"class.std::__1::__vector_base.969" }
%"class.std::__1::__vector_base.969" = type { %"class.std::__1::unique_ptr.970"*, %"class.std::__1::unique_ptr.970"*, %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::unique_ptr.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.content::FrameTreeNode"* }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.std::__1::unique_ptr.970"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.40" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%union.anon.44 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.132", i32, %"class.absl::optional.132" }
%"class.content::SiteInfo" = type <{ %class.GURL, %class.GURL, i8, [7 x i8], %"class.content::WebExposedIsolationInfo", i8, i8, [6 x i8] }>
%"class.content::WebExposedIsolationInfo" = type <{ %"class.absl::optional.35", i8, [7 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.31" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.content::RenderWidgetHostImpl"* }
%"class.content::RenderWidgetHostImpl" = type { %"class.content::RenderWidgetHost", %"class.content::FrameTokenMessageQueue::Client", %"class.content::InputRouterImplClient", %"class.content::InputDispositionHandler", %"class.content::RenderProcessHost::PriorityClient", %"class.content::RenderProcessHostObserver", %"class.content::SyntheticGestureController::Delegate", %"class.content::RenderFrameMetadataProvider::Observer", %"class.blink::mojom::FrameWidgetHost", %"class.blink::mojom::PopupWidgetHost", %"class.blink::mojom::WidgetHost", %"class.blink::mojom::PointerLockContext", %"class.base::WeakPtr", %"class.content::FrameTree"*, i8, i8, i8, i8, %"class.content::RenderWidgetHostDelegate"*, %"class.content::RenderWidgetHostOwnerDelegate"*, %"class.content::AgentSchedulingGroupHost"*, i32, %"class.base::TickClock"*, i8, i8, i32, i8, %"class.mojo::Receiver", i8, %"class.std::__1::unique_ptr.670", i8, %"class.gfx::Size", %"class.gfx::Size", %"struct.content::RenderWidgetHostImpl::MainFramePropagationProperties", i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.std::__1::vector.700", %"class.std::__1::vector.708", %"class.base::ObserverList.716", %"class.base::ObserverList.720", i8, i32, i8, %"class.base::TimeTicks", i8, i32, i8, i8, i8, %"class.absl::optional.732", i8, i8, i8, [5 x i8], i8, %"class.std::__1::unique_ptr.745", %"class.std::__1::unique_ptr.777", %"class.base::OneShotTimer", %"class.base::CallbackListSubscription", %"class.std::__1::unique_ptr.783", %"class.content::RenderWidgetHostLatencyTracker", i32, %"class.std::__1::map.789", %"class.std::__1::map.789", i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.base::OnceCallback.799", %"class.std::__1::unique_ptr.800", %"class.mojo::Remote", %"class.mojo::AssociatedRemote", %"class.mojo::Remote.826", %"class.absl::optional.834", %"class.absl::optional.839", i8, %"class.content::RenderFrameMetadataProviderImpl", i8, %"class.viz::FrameSinkId", %"class.std::__1::unique_ptr.874", i8, %"class.gfx::PointF", i8, i32, %"class.base::OneShotTimer", %"class.std::__1::unique_ptr.880", %"class.base::OnceCallback.886", %"class.base::OnceCallback.507", %"class.mojo::AssociatedReceiver", %"class.mojo::AssociatedRemote.888", %"class.mojo::AssociatedReceiver.896", %"class.mojo::AssociatedReceiver.898", %"class.mojo::AssociatedRemote.900", %"class.mojo::Remote.908", %"class.std::__1::unique_ptr.916", %"class.std::__1::unique_ptr.916", %"class.base::WeakPtrFactory.922" }
%"class.content::RenderWidgetHost" = type { i32 (...)** }
%"class.content::FrameTokenMessageQueue::Client" = type { i32 (...)** }
%"class.content::InputRouterImplClient" = type { %"class.content::InputRouterClient" }
%"class.content::InputRouterClient" = type { i32 (...)** }
%"class.content::InputDispositionHandler" = type { i32 (...)** }
%"class.content::RenderProcessHost::PriorityClient" = type { i32 (...)** }
%"class.content::SyntheticGestureController::Delegate" = type { i32 (...)** }
%"class.content::RenderFrameMetadataProvider::Observer" = type { i32 (...)** }
%"class.blink::mojom::FrameWidgetHost" = type { i32 (...)** }
%"class.blink::mojom::PopupWidgetHost" = type { i32 (...)** }
%"class.blink::mojom::WidgetHost" = type { i32 (...)** }
%"class.blink::mojom::PointerLockContext" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::PointerLockContextStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.491, %"class.std::__1::unique_ptr.619", %"class.base::WeakPtrFactory.669" }
%class.scoped_refptr.491 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.493, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.585", %"class.absl::optional.590", %"class.absl::optional.532", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.610", i8, [7 x i8], %class.scoped_refptr.493, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.492" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.507", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.493, %"class.std::__1::unique_ptr.508", %"class.absl::optional.518", %"struct.std::__1::atomic.528", i8, i8, i8, i8, i32, i32, %"class.absl::optional.532", %"class.std::__1::unique_ptr.537", i8, i64, %class.scoped_refptr.570, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.583", %"class.base::WeakPtrFactory.584" }
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.493, i8, %"class.mojo::ScopedHandleBase.511", %class.scoped_refptr.512, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.513", i8*, %"class.base::WeakPtrFactory.514" }
%"class.mojo::ScopedHandleBase.511" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.512 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.513" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.514" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.518" = type { %"class.absl::optional_internal::optional_data.519" }
%"class.absl::optional_internal::optional_data.519" = type { %"class.absl::optional_internal::optional_data_base.520" }
%"class.absl::optional_internal::optional_data_base.520" = type { %"class.absl::optional_internal::optional_data_dtor_base.521" }
%"class.absl::optional_internal::optional_data_dtor_base.521" = type { i8, %union.anon.522 }
%union.anon.522 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.523", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.523" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.528" = type { %"struct.std::__1::__atomic_base.529" }
%"struct.std::__1::__atomic_base.529" = type { %"struct.std::__1::__cxx_atomic_impl.530" }
%"struct.std::__1::__cxx_atomic_impl.530" = type { %"struct.std::__1::__cxx_atomic_base_impl.531" }
%"struct.std::__1::__cxx_atomic_base_impl.531" = type { i8 }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.540", i8, i64, %class.scoped_refptr.541, %class.scoped_refptr.566 }
%"class.base::RepeatingCallback.540" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.541 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.542", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.544", %"class.std::__1::map.555", i8, [7 x i8] }>
%"class.base::RefCounted.542" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.543 }
%class.scoped_refptr.543 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.544" = type { %"class.std::__1::__tree.545" }
%"class.std::__1::__tree.545" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.546", %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.555" = type { %"class.std::__1::__tree.556" }
%"class.std::__1::__tree.556" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.557", %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.566 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.570 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type <{ %"class.base::RefCountedThreadSafe.571", [4 x i8], %"struct.mojo::internal::MessageQuotaChecker::Configuration"*, %"class.base::TimeTicks", %"struct.std::__1::atomic.577", %"struct.std::__1::atomic.577", %"struct.std::__1::atomic.577", %"class.base::Lock", %"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage", i64, i64, %"class.mojo::MessagePipeHandle", [4 x i8] }>
%"class.base::RefCountedThreadSafe.571" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.mojo::internal::MessageQuotaChecker::Configuration" = type { i8, i64, i64, i64, void (i64, i8, i64, i64, double, i64, i64, i64)* }
%"struct.std::__1::atomic.577" = type { %"struct.std::__1::__atomic_base.578" }
%"struct.std::__1::__atomic_base.578" = type { %"struct.std::__1::__atomic_base.579" }
%"struct.std::__1::__atomic_base.579" = type { %"struct.std::__1::__cxx_atomic_impl.580" }
%"struct.std::__1::__cxx_atomic_impl.580" = type { %"struct.std::__1::__cxx_atomic_base_impl.581" }
%"struct.std::__1::__cxx_atomic_base_impl.581" = type { i64 }
%"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage" = type { i64, i64, double }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.583" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.584" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.absl::optional.585" = type { %"class.absl::optional_internal::optional_data.586" }
%"class.absl::optional_internal::optional_data.586" = type { %"class.absl::optional_internal::optional_data_base.587" }
%"class.absl::optional_internal::optional_data_base.587" = type { %"class.absl::optional_internal::optional_data_dtor_base.588" }
%"class.absl::optional_internal::optional_data_dtor_base.588" = type { i8, %union.anon.589 }
%union.anon.589 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.590" = type { %"class.absl::optional_internal::optional_data.591" }
%"class.absl::optional_internal::optional_data.591" = type { %"class.absl::optional_internal::optional_data_base.592" }
%"class.absl::optional_internal::optional_data_base.592" = type { %"class.absl::optional_internal::optional_data_dtor_base.593" }
%"class.absl::optional_internal::optional_data_dtor_base.593" = type { i8, [7 x i8], %union.anon.594 }
%union.anon.594 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.532" = type { %"class.absl::optional_internal::optional_data.533" }
%"class.absl::optional_internal::optional_data.533" = type { %"class.absl::optional_internal::optional_data_base.534" }
%"class.absl::optional_internal::optional_data_base.534" = type { %"class.absl::optional_internal::optional_data_dtor_base.535" }
%"class.absl::optional_internal::optional_data_dtor_base.535" = type { i8, %union.anon.536 }
%union.anon.536 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.595 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.595 = type { %"class.std::__1::map.598" }
%"class.std::__1::map.598" = type { %"class.std::__1::__tree.599" }
%"class.std::__1::__tree.599" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.609"*, i64 }
%"class.std::__1::unique_ptr.609" = type opaque
%"class.std::__1::map.610" = type { %"class.std::__1::__tree.611" }
%"class.std::__1::__tree.611" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.612", %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.669" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::PointerLockContextStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::PointerLockContext"* }
%"class.std::__1::unique_ptr.670" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"struct.blink::VisualProperties"* }
%"struct.blink::VisualProperties" = type <{ %"struct.blink::ScreenInfos", i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Rect", %"struct.cc::BrowserControlsParams", i8, [7 x i8], %"class.absl::optional.685", i8, [3 x i8], i32, i32, [4 x i8], double, float, float, %"class.std::__1::vector.690", i8, [7 x i8] }>
%"struct.blink::ScreenInfos" = type { %"class.std::__1::vector.673", i64 }
%"class.std::__1::vector.673" = type { %"class.std::__1::__vector_base.674" }
%"class.std::__1::__vector_base.674" = type { %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"*, %"class.std::__1::__compressed_pair.680" }
%"struct.blink::ScreenInfo" = type { float, %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32, %"class.gfx::Rect", %"class.gfx::Rect", i32, i16, i8, i8, i8, i64 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.675" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.675" = type { %"class.absl::optional_internal::optional_data.676" }
%"class.absl::optional_internal::optional_data.676" = type { %"class.absl::optional_internal::optional_data_base.677" }
%"class.absl::optional_internal::optional_data_base.677" = type { %"class.absl::optional_internal::optional_data_dtor_base.678" }
%"class.absl::optional_internal::optional_data_dtor_base.678" = type { i8, %union.anon.679 }
%union.anon.679 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"struct.blink::ScreenInfo"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.absl::optional.685" = type { %"class.absl::optional_internal::optional_data.686" }
%"class.absl::optional_internal::optional_data.686" = type { %"class.absl::optional_internal::optional_data_base.687" }
%"class.absl::optional_internal::optional_data_base.687" = type { %"class.absl::optional_internal::optional_data_dtor_base.688" }
%"class.absl::optional_internal::optional_data_dtor_base.688" = type { i8, %union.anon.689 }
%union.anon.689 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.std::__1::vector.690" = type { %"class.std::__1::__vector_base.691" }
%"class.std::__1::__vector_base.691" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.gfx::Rect"* }
%"class.gfx::Size" = type { i32, i32 }
%"struct.content::RenderWidgetHostImpl::MainFramePropagationProperties" = type { float, float, i8, %"class.gfx::Size", %"class.gfx::Rect", %"class.std::__1::vector.690" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.700" = type { %"class.std::__1::__vector_base.701" }
%"class.std::__1::__vector_base.701" = type { %"class.base::RepeatingCallback.702"*, %"class.base::RepeatingCallback.702"*, %"class.std::__1::__compressed_pair.703" }
%"class.base::RepeatingCallback.702" = type opaque
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.base::RepeatingCallback.702"* }
%"class.std::__1::vector.708" = type { %"class.std::__1::__vector_base.709" }
%"class.std::__1::__vector_base.709" = type { %"class.base::RepeatingCallback.710"*, %"class.base::RepeatingCallback.710"*, %"class.std::__1::__compressed_pair.711" }
%"class.base::RepeatingCallback.710" = type opaque
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.base::RepeatingCallback.710"* }
%"class.base::ObserverList.716" = type <{ %"class.std::__1::vector.45", %"class.base::LinkedList.717", i64, i32, [4 x i8] }>
%"class.base::LinkedList.717" = type { %"class.base::LinkNode.718" }
%"class.base::LinkNode.718" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.720" = type <{ %"class.std::__1::vector.721", %"class.base::LinkedList.729", i64, i32, [4 x i8] }>
%"class.std::__1::vector.721" = type { %"class.std::__1::__vector_base.722" }
%"class.std::__1::__vector_base.722" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.724" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr.723" }
%"class.base::WeakPtr.723" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.729" = type { %"class.base::LinkNode.730" }
%"class.base::LinkNode.730" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.732" = type { %"class.absl::optional_internal::optional_data.733" }
%"class.absl::optional_internal::optional_data.733" = type { %"class.absl::optional_internal::optional_data_base.734" }
%"class.absl::optional_internal::optional_data_base.734" = type { %"class.absl::optional_internal::optional_data_dtor_base.735" }
%"class.absl::optional_internal::optional_data_dtor_base.735" = type { i8, %union.anon.736 }
%union.anon.736 = type { %"class.base::internal::flat_tree.737" }
%"class.base::internal::flat_tree.737" = type { %"class.std::__1::vector.738" }
%"class.std::__1::vector.738" = type { %"class.std::__1::__vector_base.739" }
%"class.std::__1::__vector_base.739" = type { i32*, i32*, %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { i32* }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.content::SyntheticGestureController"* }
%"class.content::SyntheticGestureController" = type { i32 (...)**, %"class.content::SyntheticGestureController::Delegate"*, %"class.std::__1::unique_ptr.748", %"class.content::SyntheticGestureController::GestureAndCallbackQueue", i8, %"class.base::RepeatingTimer", %"class.base::WeakPtrFactory.773" }
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.content::SyntheticGestureTarget"* }
%"class.content::SyntheticGestureTarget" = type opaque
%"class.content::SyntheticGestureController::GestureAndCallbackQueue" = type { i32, %"class.std::__1::vector.754", %"class.std::__1::queue", %"class.std::__1::queue.770" }
%"class.std::__1::vector.754" = type { %"class.std::__1::__vector_base.755" }
%"class.std::__1::__vector_base.755" = type { %"class.std::__1::unique_ptr.756"*, %"class.std::__1::unique_ptr.756"*, %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.content::SyntheticGesture"* }
%"class.content::SyntheticGesture" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.std::__1::unique_ptr.756"* }
%"class.std::__1::queue" = type { %"class.base::circular_deque.767" }
%"class.base::circular_deque.767" = type { %"class.base::internal::VectorBuffer.768", i64, i64 }
%"class.base::internal::VectorBuffer.768" = type { %"class.base::OnceCallback.769"*, i64 }
%"class.base::OnceCallback.769" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::queue.770" = type { %"class.base::circular_deque.771" }
%"class.base::circular_deque.771" = type { %"class.base::internal::VectorBuffer.772", i64, i64 }
%"class.base::internal::VectorBuffer.772" = type { i8*, i64 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.622" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.493, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.634" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.634" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.773" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.content::InputRouter"* }
%"class.content::InputRouter" = type { i32 (...)** }
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback.507" }
%"class.content::RenderWidgetHostLatencyTracker" = type { i32 (...)**, i8, i64, i8, i8, %"class.content::RenderWidgetHostDelegate"* }
%"class.std::__1::map.789" = type { %"class.std::__1::__tree.790" }
%"class.std::__1::__tree.790" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.791", %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::OnceCallback.799" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.content::FrameTokenMessageQueue"* }
%"class.content::FrameTokenMessageQueue" = type <{ i32 (...)**, %"class.content::FrameTokenMessageQueue::Client"*, i32, [4 x i8], %"class.base::TimeTicks", %"class.std::__1::multimap", i32, [4 x i8] }>
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.803" }
%"class.std::__1::__tree.803" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.804", %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.814" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.491, %"class.std::__1::unique_ptr.619", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.493, i32 }>
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.blink::mojom::WidgetInputHandlerProxy"* }
%"class.blink::mojom::WidgetInputHandlerProxy" = type { %"class.blink::mojom::WidgetInputHandler", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::WidgetInputHandler" = type { i32 (...)** }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.820" }
%"class.std::__1::unique_ptr.820" = type { %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.blink::mojom::FrameWidgetInputHandlerProxy"* }
%"class.blink::mojom::FrameWidgetInputHandlerProxy" = type { %"class.blink::mojom::FrameWidgetInputHandler", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::FrameWidgetInputHandler" = type { i32 (...)** }
%"class.mojo::Remote.826" = type { %"class.mojo::internal::InterfacePtrState.827" }
%"class.mojo::internal::InterfacePtrState.827" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.828" }
%"class.std::__1::unique_ptr.828" = type { %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.viz::mojom::InputTargetClientProxy"* }
%"class.viz::mojom::InputTargetClientProxy" = type { %"class.viz::mojom::InputTargetClient", %"class.mojo::MessageReceiverWithResponder"* }
%"class.viz::mojom::InputTargetClient" = type { i32 (...)** }
%"class.absl::optional.834" = type { %"class.absl::optional_internal::optional_data.835" }
%"class.absl::optional_internal::optional_data.835" = type { %"class.absl::optional_internal::optional_data_base.836" }
%"class.absl::optional_internal::optional_data_base.836" = type { %"class.absl::optional_internal::optional_data_dtor_base.837" }
%"class.absl::optional_internal::optional_data_dtor_base.837" = type { i8, %union.anon.838 }
%union.anon.838 = type { i16 }
%"class.absl::optional.839" = type { %"class.absl::optional_internal::optional_data.840" }
%"class.absl::optional_internal::optional_data.840" = type { %"class.absl::optional_internal::optional_data_base.841" }
%"class.absl::optional_internal::optional_data_base.841" = type { %"class.absl::optional_internal::optional_data_dtor_base.842" }
%"class.absl::optional_internal::optional_data_dtor_base.842" = type { i8, %union.anon.843 }
%union.anon.843 = type { i32 }
%"class.content::RenderFrameMetadataProviderImpl" = type { %"class.content::RenderFrameMetadataProvider", %"class.cc::mojom::RenderFrameMetadataObserverClient", %"class.base::ObserverList.844", %"class.cc::RenderFrameMetadata", %"class.absl::optional.685", %class.scoped_refptr.308, %"class.content::FrameTokenMessageQueue"*, %"class.mojo::Receiver.858", %"class.mojo::Remote.860", %"class.absl::optional.868", %"class.base::WeakPtrFactory.873" }
%"class.content::RenderFrameMetadataProvider" = type { i32 (...)** }
%"class.cc::mojom::RenderFrameMetadataObserverClient" = type { i32 (...)** }
%"class.base::ObserverList.844" = type <{ %"class.std::__1::vector.45", %"class.base::LinkedList.845", i64, i32, [4 x i8] }>
%"class.base::LinkedList.845" = type { %"class.base::LinkNode.846" }
%"class.base::LinkNode.846" = type { %"class.base::internal::LinkNodeBase" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.848", %"struct.viz::Selection", i8, %"class.absl::optional.853", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.685", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.848" = type { %"class.absl::optional_internal::optional_data.849" }
%"class.absl::optional_internal::optional_data.849" = type { %"class.absl::optional_internal::optional_data_base.850" }
%"class.absl::optional_internal::optional_data_base.850" = type { %"class.absl::optional_internal::optional_data_dtor_base.851" }
%"class.absl::optional_internal::optional_data_dtor_base.851" = type { i8, %union.anon.852 }
%union.anon.852 = type { %"class.gfx::Vector2dF" }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.absl::optional.853" = type { %"class.absl::optional_internal::optional_data.854" }
%"class.absl::optional_internal::optional_data.854" = type { %"class.absl::optional_internal::optional_data_base.855" }
%"class.absl::optional_internal::optional_data_base.855" = type { %"class.absl::optional_internal::optional_data_dtor_base.856" }
%"class.absl::optional_internal::optional_data_dtor_base.856" = type { i8, %union.anon.857 }
%union.anon.857 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.mojo::Receiver.858" = type { %"class.mojo::internal::BindingState.859" }
%"class.mojo::internal::BindingState.859" = type { %"class.mojo::internal::BindingStateBase", %"class.cc::mojom::RenderFrameMetadataObserverClientStub" }
%"class.cc::mojom::RenderFrameMetadataObserverClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.cc::mojom::RenderFrameMetadataObserverClient"* }
%"class.mojo::Remote.860" = type { %"class.mojo::internal::InterfacePtrState.861" }
%"class.mojo::internal::InterfacePtrState.861" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.862" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.cc::mojom::RenderFrameMetadataObserverProxy"* }
%"class.cc::mojom::RenderFrameMetadataObserverProxy" = type { %"class.cc::mojom::RenderFrameMetadataObserver", %"class.mojo::MessageReceiverWithResponder"* }
%"class.cc::mojom::RenderFrameMetadataObserver" = type { i32 (...)** }
%"class.absl::optional.868" = type { %"class.absl::optional_internal::optional_data.869" }
%"class.absl::optional_internal::optional_data.869" = type { %"class.absl::optional_internal::optional_data_base.870" }
%"class.absl::optional_internal::optional_data_base.870" = type { %"class.absl::optional_internal::optional_data_dtor_base.871" }
%"class.absl::optional_internal::optional_data_dtor_base.871" = type { i8, %union.anon.872 }
%union.anon.872 = type { i8 }
%"class.base::WeakPtrFactory.873" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.content::FlingSchedulerBase"* }
%"class.content::FlingSchedulerBase" = type { %"class.content::FlingControllerSchedulerClient" }
%"class.content::FlingControllerSchedulerClient" = type { i32 (...)** }
%"class.gfx::PointF" = type { float, float }
%"class.base::OnceCallback.886" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::FrameWidgetHostStub", %"class.base::WeakPtrFactory.887" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.619" }
%"class.blink::mojom::FrameWidgetHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::FrameWidgetHost"* }
%"class.base::WeakPtrFactory.887" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedRemote.888" = type { %"class.mojo::internal::AssociatedInterfacePtrState.889" }
%"class.mojo::internal::AssociatedInterfacePtrState.889" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.890" }
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.blink::mojom::FrameWidgetProxy"* }
%"class.blink::mojom::FrameWidgetProxy" = type { %"class.blink::mojom::FrameWidget", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::FrameWidget" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver.896" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::PopupWidgetHostStub", %"class.base::WeakPtrFactory.897" }
%"class.blink::mojom::PopupWidgetHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::PopupWidgetHost"* }
%"class.base::WeakPtrFactory.897" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedReceiver.898" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::WidgetHostStub", %"class.base::WeakPtrFactory.899" }
%"class.blink::mojom::WidgetHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::WidgetHost"* }
%"class.base::WeakPtrFactory.899" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedRemote.900" = type { %"class.mojo::internal::AssociatedInterfacePtrState.901" }
%"class.mojo::internal::AssociatedInterfacePtrState.901" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.902" }
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.blink::mojom::WidgetProxy"* }
%"class.blink::mojom::WidgetProxy" = type { %"class.blink::mojom::Widget", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::Widget" = type { i32 (...)** }
%"class.mojo::Remote.908" = type { %"class.mojo::internal::InterfacePtrState.909" }
%"class.mojo::internal::InterfacePtrState.909" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.910" }
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.blink::mojom::WidgetCompositorProxy"* }
%"class.blink::mojom::WidgetCompositorProxy" = type { %"class.blink::mojom::WidgetCompositor", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::WidgetCompositor" = type { i32 (...)** }
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.922" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::set.981" = type { %"class.std::__1::__tree.982" }
%"class.std::__1::__tree.982" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.983", %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.content::TimeoutMonitor"* }
%"class.content::TimeoutMonitor" = type opaque
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"class.content::GeolocationServiceImpl"* }
%"class.content::GeolocationServiceImpl" = type opaque
%"class.std::__1::unique_ptr.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.content::IdleManagerImpl"* }
%"class.content::IdleManagerImpl" = type opaque
%"class.std::__1::unique_ptr.1003" = type { %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"class.content::SensorProviderProxyImpl"* }
%"class.content::SensorProviderProxyImpl" = type opaque
%"class.std::__1::unique_ptr.1009" = type { %"class.std::__1::__compressed_pair.1010" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"class.blink::AssociatedInterfaceRegistry"* }
%"class.blink::AssociatedInterfaceRegistry" = type { %"class.std::__1::map.1012", %"class.base::WeakPtrFactory.1021" }
%"class.std::__1::map.1012" = type { %"class.std::__1::__tree.1013" }
%"class.std::__1::__tree.1013" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1014", %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.1021" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.service_manager::InterfaceProvider"* }
%"class.service_manager::InterfaceProvider" = type { %"class.std::__1::map.1028", %"class.mojo::Remote.1037", %"class.mojo::PendingReceiver", %class.scoped_refptr.493, %"class.base::RepeatingCallback.1045", %"class.base::WeakPtrFactory.1046" }
%"class.std::__1::map.1028" = type { %"class.std::__1::__tree.1029" }
%"class.std::__1::__tree.1029" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.mojo::Remote.1037" = type { %"class.mojo::internal::InterfacePtrState.1038" }
%"class.mojo::internal::InterfacePtrState.1038" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1039" }
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.service_manager::mojom::InterfaceProviderProxy"* }
%"class.service_manager::mojom::InterfaceProviderProxy" = type { %"class.service_manager::mojom::InterfaceProvider", %"class.mojo::MessageReceiverWithResponder"* }
%"class.service_manager::mojom::InterfaceProvider" = type { i32 (...)** }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.base::RepeatingCallback.1045" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1046" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::list.1050" = type { %"class.std::__1::__list_imp.1051" }
%"class.std::__1::__list_imp.1051" = type { %"struct.std::__1::__list_node_base.1052", %"class.std::__1::__compressed_pair.1053" }
%"struct.std::__1::__list_node_base.1052" = type { %"struct.std::__1::__list_node_base.1052"*, %"struct.std::__1::__list_node_base.1052"* }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.content::ScreenEnumerationImpl"* }
%"class.content::ScreenEnumerationImpl" = type opaque
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.content::BrowserAccessibilityManager"* }
%"class.content::BrowserAccessibilityManager" = type { %"class.ui::AXTreeObserver", %"class.ui::AXTreeManager", %"class.content::WebContentsObserver", %"class.content::BrowserAccessibilityDelegate"*, %"class.std::__1::map.1066", i8, i8, %"struct.content::BrowserAccessibilityFindInPageInfo", %"class.ui::AXTreeID", i32, %"class.gfx::Rect", i8, %"class.ui::AXTreeID", float, float, i8, i8, %"class.base::RepeatingCallback.1075", %"class.std::__1::set.1076", %"class.std::__1::unique_ptr.1084", %"class.ui::AXEventGenerator", %"class.base::ScopedObservation" }
%"class.ui::AXTreeObserver" = type { %"class.base::CheckedObserver" }
%"class.ui::AXTreeManager" = type { i32 (...)** }
%"class.content::WebContentsObserver" = type { %"class.IPC::Listener", %"class.content::WebContents"* }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.std::__1::map.1066" = type { %"class.std::__1::__tree.1067" }
%"class.std::__1::__tree.1067" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1068", %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.content::BrowserAccessibilityFindInPageInfo" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.base::RepeatingCallback.1075" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::set.1076" = type { %"class.std::__1::__tree.1077" }
%"class.std::__1::__tree.1077" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1078", %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.ui::AXSerializableTree"* }
%"class.ui::AXSerializableTree" = type { %"class.ui::AXTree" }
%"class.ui::AXTree" = type { %"class.ui::AXNode::OwnerTree", %"class.std::__1::unique_ptr.1087", %"class.base::ObserverList.1093", %"class.ui::AXNode"*, %"class.std::__1::unordered_map.1188", %"class.std::__1::basic_string", %"struct.ui::AXTreeData", %"class.std::__1::map.1212", %"class.std::__1::map.1223", %"class.std::__1::map.1234", %"class.std::__1::unordered_map.1245", i32, [4 x i8], %"class.std::__1::unordered_map.1269", i8, i8, %"class.std::__1::vector.1293" }
%"class.ui::AXNode::OwnerTree" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.ui::AXLanguageDetectionManager"* }
%"class.ui::AXLanguageDetectionManager" = type opaque
%"class.base::ObserverList.1093" = type <{ %"class.std::__1::vector.721", %"class.base::LinkedList.1094", i64, i32, [4 x i8] }>
%"class.base::LinkedList.1094" = type { %"class.base::LinkNode.1095" }
%"class.base::LinkNode.1095" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::AXNode" = type { i32 (...)**, %"class.ui::AXNode::OwnerTree"*, i64, i64, i64, %"class.ui::AXNode"*, %"class.std::__1::vector.1097", %"struct.ui::AXNodeData", %"struct.ui::AXHypertext", %"struct.ui::AXHypertext", %"class.std::__1::unique_ptr.1182" }
%"class.std::__1::vector.1097" = type { %"class.std::__1::__vector_base.1098" }
%"class.std::__1::__vector_base.1098" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.ui::AXNode"** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.1104", %"class.std::__1::vector.1112", %"class.std::__1::vector.1120", %"class.std::__1::vector.1128", %"class.std::__1::vector.1136", %"class.std::__1::vector.1144", %"class.std::__1::vector.1152", %"class.std::__1::vector.1160", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.1104" = type { %"class.std::__1::__vector_base.1105" }
%"class.std::__1::__vector_base.1105" = type { %"struct.std::__1::pair.1106"*, %"struct.std::__1::pair.1106"*, %"class.std::__1::__compressed_pair.1107" }
%"struct.std::__1::pair.1106" = type opaque
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::pair.1106"* }
%"class.std::__1::vector.1112" = type { %"class.std::__1::__vector_base.1113" }
%"class.std::__1::__vector_base.1113" = type { %"struct.std::__1::pair.1114"*, %"struct.std::__1::pair.1114"*, %"class.std::__1::__compressed_pair.1115" }
%"struct.std::__1::pair.1114" = type opaque
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"struct.std::__1::pair.1114"* }
%"class.std::__1::vector.1120" = type { %"class.std::__1::__vector_base.1121" }
%"class.std::__1::__vector_base.1121" = type { %"struct.std::__1::pair.1122"*, %"struct.std::__1::pair.1122"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.std::__1::pair.1122" = type opaque
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.std::__1::pair.1122"* }
%"class.std::__1::vector.1128" = type { %"class.std::__1::__vector_base.1129" }
%"class.std::__1::__vector_base.1129" = type { %"struct.std::__1::pair.1130"*, %"struct.std::__1::pair.1130"*, %"class.std::__1::__compressed_pair.1131" }
%"struct.std::__1::pair.1130" = type opaque
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"struct.std::__1::pair.1130"* }
%"class.std::__1::vector.1136" = type { %"class.std::__1::__vector_base.1137" }
%"class.std::__1::__vector_base.1137" = type { %"struct.std::__1::pair.1138"*, %"struct.std::__1::pair.1138"*, %"class.std::__1::__compressed_pair.1139" }
%"struct.std::__1::pair.1138" = type opaque
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"struct.std::__1::pair.1138"* }
%"class.std::__1::vector.1144" = type { %"class.std::__1::__vector_base.1145" }
%"class.std::__1::__vector_base.1145" = type { %"struct.std::__1::pair.1146"*, %"struct.std::__1::pair.1146"*, %"class.std::__1::__compressed_pair.1147" }
%"struct.std::__1::pair.1146" = type opaque
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"struct.std::__1::pair.1146"* }
%"class.std::__1::vector.1152" = type { %"class.std::__1::__vector_base.1153" }
%"class.std::__1::__vector_base.1153" = type { %"struct.std::__1::pair.1154"*, %"struct.std::__1::pair.1154"*, %"class.std::__1::__compressed_pair.1155" }
%"struct.std::__1::pair.1154" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"struct.std::__1::pair.1154"* }
%"class.std::__1::vector.1160" = type { %"class.std::__1::__vector_base.1161" }
%"class.std::__1::__vector_base.1161" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1162" }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1163" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.1167" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.1167" = type { %"class.std::__1::__compressed_pair.1168" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.ui::AXHypertext" = type { i8, %"class.std::__1::map.1173", %"class.std::__1::basic_string.150" }
%"class.std::__1::map.1173" = type { %"class.std::__1::__tree.1174" }
%"class.std::__1::__tree.1174" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1175", %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.1182" = type { %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"struct.ui::AXLanguageInfo"* }
%"struct.ui::AXLanguageInfo" = type opaque
%"class.std::__1::unordered_map.1188" = type { %"class.std::__1::__hash_table.1189" }
%"class.std::__1::__hash_table.1189" = type <{ %"class.std::__1::unique_ptr.1190", %"class.std::__1::__compressed_pair.1200", %"class.std::__1::__compressed_pair.1205", %"class.std::__1::__compressed_pair.1208", [4 x i8] }>
%"class.std::__1::unique_ptr.1190" = type { %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192", %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"struct.std::__1::__hash_node_base.1193"** }
%"struct.std::__1::__hash_node_base.1193" = type { %"struct.std::__1::__hash_node_base.1193"* }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"class.std::__1::__bucket_list_deallocator.1195" }
%"class.std::__1::__bucket_list_deallocator.1195" = type { %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"struct.std::__1::__hash_node_base.1193" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"class.std::__1::map.1212" = type { %"class.std::__1::__tree.1213" }
%"class.std::__1::__tree.1213" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1214", %"class.std::__1::__compressed_pair.1218" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.1223" = type { %"class.std::__1::__tree.1224" }
%"class.std::__1::__tree.1224" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1225", %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.1234" = type { %"class.std::__1::__tree.1235" }
%"class.std::__1::__tree.1235" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1236", %"class.std::__1::__compressed_pair.1240" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.1245" = type { %"class.std::__1::__hash_table.1246" }
%"class.std::__1::__hash_table.1246" = type <{ %"class.std::__1::unique_ptr.1247", %"class.std::__1::__compressed_pair.1257", %"class.std::__1::__compressed_pair.1262", %"class.std::__1::__compressed_pair.1265", [4 x i8] }>
%"class.std::__1::unique_ptr.1247" = type { %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249", %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"struct.std::__1::__hash_node_base.1250"** }
%"struct.std::__1::__hash_node_base.1250" = type { %"struct.std::__1::__hash_node_base.1250"* }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.std::__1::__bucket_list_deallocator.1252" }
%"class.std::__1::__bucket_list_deallocator.1252" = type { %"class.std::__1::__compressed_pair.1253" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"struct.std::__1::__hash_node_base.1250" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"class.std::__1::unordered_map.1269" = type { %"class.std::__1::__hash_table.1270" }
%"class.std::__1::__hash_table.1270" = type <{ %"class.std::__1::unique_ptr.1271", %"class.std::__1::__compressed_pair.1281", %"class.std::__1::__compressed_pair.1286", %"class.std::__1::__compressed_pair.1289", [4 x i8] }>
%"class.std::__1::unique_ptr.1271" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273", %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"struct.std::__1::__hash_node_base.1274"** }
%"struct.std::__1::__hash_node_base.1274" = type { %"struct.std::__1::__hash_node_base.1274"* }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.std::__1::__bucket_list_deallocator.1276" }
%"class.std::__1::__bucket_list_deallocator.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"struct.std::__1::__hash_node_base.1274" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"class.std::__1::vector.1293" = type { %"class.std::__1::__vector_base.1294" }
%"class.std::__1::__vector_base.1294" = type { %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"*, %"class.std::__1::__compressed_pair.1295" }
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"struct.ui::AXEventIntent"* }
%"class.ui::AXEventGenerator" = type { %"class.ui::AXTreeObserver", %"class.ui::AXTree"*, %"class.std::__1::map.1303", %"class.std::__1::vector.1097", i8, %"class.base::ScopedObservation" }
%"class.std::__1::map.1303" = type { %"class.std::__1::__tree.1304" }
%"class.std::__1::__tree.1304" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1305", %"class.std::__1::__compressed_pair.1309" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ScopedObservation" = type { %"class.ui::AXTreeObserver"*, %"class.ui::AXTree"* }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.base::RepeatingCallback.1317" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.mojo::Remote.1318" = type { %"class.mojo::internal::InterfacePtrState.1319" }
%"class.mojo::internal::InterfacePtrState.1319" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1320" }
%"class.std::__1::unique_ptr.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"class.blink::mojom::ImageDownloaderProxy"* }
%"class.blink::mojom::ImageDownloaderProxy" = type { %"class.blink::mojom::ImageDownloader", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::ImageDownloader" = type { i32 (...)** }
%"class.mojo::AssociatedRemote.1326" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1327" }
%"class.mojo::internal::AssociatedInterfacePtrState.1327" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1328" }
%"class.std::__1::unique_ptr.1328" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.blink::mojom::FindInPageProxy"* }
%"class.blink::mojom::FindInPageProxy" = type { %"class.blink::mojom::FindInPage", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::FindInPage" = type { i32 (...)** }
%"class.mojo::AssociatedRemote.1334" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1335" }
%"class.mojo::internal::AssociatedInterfacePtrState.1335" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1336" }
%"class.std::__1::unique_ptr.1336" = type { %"class.std::__1::__compressed_pair.1337" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"class.blink::mojom::LocalFrameProxy"* }
%"class.blink::mojom::LocalFrameProxy" = type { %"class.blink::mojom::LocalFrame", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::LocalFrame" = type { i32 (...)** }
%"class.mojo::AssociatedRemote.1342" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1343" }
%"class.mojo::internal::AssociatedInterfacePtrState.1343" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1344" }
%"class.std::__1::unique_ptr.1344" = type { %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.blink::mojom::LocalMainFrameProxy"* }
%"class.blink::mojom::LocalMainFrameProxy" = type { %"class.blink::mojom::LocalMainFrame", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::LocalMainFrame" = type { i32 (...)** }
%"class.mojo::Remote.1350" = type { %"class.mojo::internal::InterfacePtrState.1351" }
%"class.mojo::internal::InterfacePtrState.1351" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1352" }
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.blink::mojom::HighPriorityLocalFrameProxy"* }
%"class.blink::mojom::HighPriorityLocalFrameProxy" = type { %"class.blink::mojom::HighPriorityLocalFrame", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1358" = type { %"class.std::__1::__compressed_pair.1359" }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"class.content::AppCacheNavigationHandle"* }
%"class.content::AppCacheNavigationHandle" = type opaque
%"class.std::__1::map.1364" = type { %"class.std::__1::__tree.1365" }
%"class.std::__1::__tree.1365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1366", %"class.std::__1::__compressed_pair.1370" }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1370" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::flat_map.1375" = type { %"class.base::internal::flat_tree.1376" }
%"class.base::internal::flat_tree.1376" = type { %"class.std::__1::vector.1377" }
%"class.std::__1::vector.1377" = type { %"class.std::__1::__vector_base.1378" }
%"class.std::__1::__vector_base.1378" = type { %"struct.std::__1::pair.1379"*, %"struct.std::__1::pair.1379"*, %"class.std::__1::__compressed_pair.1380" }
%"struct.std::__1::pair.1379" = type opaque
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"struct.std::__1::pair.1379"* }
%"class.std::__1::unique_ptr.1385" = type { %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"class.content::WebUIImpl"* }
%"class.content::WebUIImpl" = type { %"class.content::WebUI", %"class.content::mojom::WebUIHost", %"class.base::SupportsWeakPtr", %"class.std::__1::map.1388", %"class.std::__1::basic_string.150", i32, %"class.std::__1::vector.110", %"class.content::RenderFrameHostImpl"*, %"class.content::WebContentsImpl"*, %"class.std::__1::vector.1782", %"class.std::__1::unique_ptr.1790", %"class.std::__1::unique_ptr.1796", %"class.mojo::AssociatedRemote.1802", %"class.mojo::AssociatedReceiver.1810" }
%"class.content::WebUI" = type { i32 (...)** }
%"class.content::mojom::WebUIHost" = type { i32 (...)** }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::map.1388" = type { %"class.std::__1::__tree.1389" }
%"class.std::__1::__tree.1389" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1390", %"class.std::__1::__compressed_pair.1394" }
%"class.std::__1::__compressed_pair.1390" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.content::WebContentsImpl" = type { %"class.content::WebContents.base", %"class.content::FrameTree::Delegate", %"class.content::RenderFrameHostDelegate", %"class.content::RenderViewHostDelegate", %"class.content::RenderWidgetHostDelegate", %"class.content::RenderFrameHostManager::Delegate", %"class.blink::mojom::ColorChooserFactory", %"class.content::NavigationControllerDelegate", %"class.content::NavigatorDelegate", %"class.ui::NativeThemeObserver", %"class.content::WebContentsDelegate"*, %"class.std::__1::unique_ptr.1397", %"class.content::RenderViewHostDelegateView"*, %"class.std::__1::map.1403", %"class.std::__1::map.1414", %"class.std::__1::map.1425", %"class.std::__1::map.1434", %"class.content::WebContentsImpl::WebContentsObserverList", %"class.std::__1::map.1449", i8, %"class.content::WebContentsImpl::WebContentsTreeNode", %"class.content::FrameTree", %class.scoped_refptr.1466, %"class.std::__1::unique_ptr.1467", i8, i32, i32, i8, %"struct.net::LoadStateWithParam", %"class.std::__1::basic_string.150", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, i64, i8, %"class.std::__1::basic_string.150", %"class.absl::optional.953", %"class.absl::optional.953", i64, i32, i32, i32, %"class.mojo::Remote.1473", i32, i8, i8, i8, i8, i8, %"class.content::JavaScriptDialogManager"*, i8, i8, %"struct.blink::RendererPreferences", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i32, i32, i32, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.std::__1::unique_ptr.1500", %"class.std::__1::unique_ptr.1506", %"class.std::__1::unique_ptr.1512", %"class.std::__1::set.1518", i32, i32, i8, %"class.std::__1::unique_ptr.1528", %"class.std::__1::unique_ptr.1546", i8, i8, %"class.mojo::Remote.1558", %"class.mojo::AssociatedRemote.1566", %"class.std::__1::unique_ptr.1574", %"class.std::__1::unique_ptr.1588", i8, %"class.mojo::ReceiverSetBase", %"class.std::__1::unique_ptr.1625", %"class.ui::AXMode", %"class.std::__1::unique_ptr.1631", %"class.content::AudioStreamMonitor", %"class.absl::optional.1648", i64, i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr.1706", %"class.std::__1::unique_ptr.1712", %"class.std::__1::unique_ptr.1718", float, %"class.std::__1::unique_ptr.1724", %"class.content::RenderWidgetHostImpl"*, %"class.content::RenderWidgetHostImpl"*, i8, i8, i8, i32, %"class.base::flat_map.1730", i8, i8, i8, i8, %"class.content::RenderFrameHost"*, i8, i32, %"class.std::__1::unique_ptr.1740", %"class.std::__1::set.981", %"class.content::RenderFrameHostImpl"*, i8, %"class.content::Portal"*, %"class.blink::mojom::TextAutosizerPageInfo", %"class.base::ScopedObservation.1746", i8, i32, i32, %"class.std::__1::unique_ptr.1762", i64, i8, %"class.std::__1::unique_ptr.1768", %"class.base::TimeTicks", %"class.blink::TransientAllowFullscreen", i32, %"class.std::__1::unique_ptr.1774", %"class.std::__1::unique_ptr.916", %"class.viz::FrameSinkId", %"class.base::OnceCallback.1780", %"class.blink::mojom::CaptureHandleConfig", %"class.base::WeakPtrFactory.1781", %"class.base::WeakPtrFactory.1781" }
%"class.content::WebContents.base" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base" }>
%"class.blink::mojom::ColorChooserFactory" = type { i32 (...)** }
%"class.ui::NativeThemeObserver" = type { i32 (...)** }
%"class.content::WebContentsDelegate" = type opaque
%"class.std::__1::unique_ptr.1397" = type { %"class.std::__1::__compressed_pair.1398" }
%"class.std::__1::__compressed_pair.1398" = type { %"struct.std::__1::__compressed_pair_elem.1399" }
%"struct.std::__1::__compressed_pair_elem.1399" = type { %"class.content::WebContentsView"* }
%"class.content::WebContentsView" = type opaque
%"class.content::RenderViewHostDelegateView" = type opaque
%"class.std::__1::map.1403" = type { %"class.std::__1::__tree.1404" }
%"class.std::__1::__tree.1404" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1405", %"class.std::__1::__compressed_pair.1409" }
%"class.std::__1::__compressed_pair.1405" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.1414" = type { %"class.std::__1::__tree.1415" }
%"class.std::__1::__tree.1415" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1416", %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1416" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.1425" = type { %"class.std::__1::__tree.1426" }
%"class.std::__1::__tree.1426" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1427", %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.1434" = type { %"class.std::__1::__tree.1435" }
%"class.std::__1::__tree.1435" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1436", %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.content::WebContentsImpl::WebContentsObserverList" = type { i8, [7 x i8], %"class.base::ObserverList.1445" }
%"class.base::ObserverList.1445" = type <{ %"class.std::__1::vector.45", %"class.base::LinkedList.1446", i64, i32, [4 x i8] }>
%"class.base::LinkedList.1446" = type { %"class.base::LinkNode.1447" }
%"class.base::LinkNode.1447" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::map.1449" = type { %"class.std::__1::__tree.1450" }
%"class.std::__1::__tree.1450" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1451", %"class.std::__1::__compressed_pair.1455" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1455" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.content::WebContentsImpl::WebContentsTreeNode" = type { %"class.content::FrameTreeNode::Observer", %"class.content::WebContentsImpl"*, %"class.content::WebContentsImpl"*, i32, %"class.std::__1::vector.1458", %"class.content::WebContentsImpl"* }
%"class.content::FrameTreeNode::Observer" = type { i32 (...)** }
%"class.std::__1::vector.1458" = type { %"class.std::__1::__vector_base.1459" }
%"class.std::__1::__vector_base.1459" = type { %"class.std::__1::unique_ptr.1460"*, %"class.std::__1::unique_ptr.1460"*, %"class.std::__1::__compressed_pair.1461" }
%"class.std::__1::unique_ptr.1460" = type opaque
%"class.std::__1::__compressed_pair.1461" = type { %"struct.std::__1::__compressed_pair_elem.1462" }
%"struct.std::__1::__compressed_pair_elem.1462" = type { %"class.std::__1::unique_ptr.1460"* }
%class.scoped_refptr.1466 = type { %"class.content::SavePackage"* }
%"class.content::SavePackage" = type opaque
%"class.std::__1::unique_ptr.1467" = type { %"class.std::__1::__compressed_pair.1468" }
%"class.std::__1::__compressed_pair.1468" = type { %"struct.std::__1::__compressed_pair_elem.1469" }
%"struct.std::__1::__compressed_pair_elem.1469" = type { %"class.content::FindRequestManager"* }
%"class.content::FindRequestManager" = type opaque
%"struct.net::LoadStateWithParam" = type { i32, %"class.std::__1::basic_string.150" }
%"class.mojo::Remote.1473" = type { %"class.mojo::internal::InterfacePtrState.1474" }
%"class.mojo::internal::InterfacePtrState.1474" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1475" }
%"class.std::__1::unique_ptr.1475" = type { %"class.std::__1::__compressed_pair.1476" }
%"class.std::__1::__compressed_pair.1476" = type { %"struct.std::__1::__compressed_pair_elem.1477" }
%"struct.std::__1::__compressed_pair_elem.1477" = type { %"class.device::mojom::WakeLockProxy"* }
%"class.device::mojom::WakeLockProxy" = type { %"class.device::mojom::WakeLock", %"class.mojo::MessageReceiverWithResponder"* }
%"class.device::mojom::WakeLock" = type { i32 (...)** }
%"class.content::JavaScriptDialogManager" = type { i32 (...)** }
%"struct.blink::RendererPreferences" = type { i8, i8, i32, i8, i8, i32, i8, i32, i32, i32, i32, i32, i8, %"class.absl::optional.624", i8, i8, i8, i8, i8, %"class.std::__1::basic_string", i16, i16, %"class.std::__1::vector.110", i8, %"struct.blink::UserAgentOverride", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, %"class.std::__1::vector.1493" }
%"struct.blink::UserAgentOverride" = type { %"class.std::__1::basic_string", %"class.absl::optional.1481" }
%"class.absl::optional.1481" = type { %"class.absl::optional_internal::optional_data.1482" }
%"class.absl::optional_internal::optional_data.1482" = type { %"class.absl::optional_internal::optional_data_base.1483" }
%"class.absl::optional_internal::optional_data_base.1483" = type { %"class.absl::optional_internal::optional_data_dtor_base.1484" }
%"class.absl::optional_internal::optional_data_dtor_base.1484" = type { i8, [7 x i8], %union.anon.1485 }
%union.anon.1485 = type { %"struct.blink::UserAgentMetadata" }
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.1486", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.1486" = type { %"class.std::__1::__vector_base.1487" }
%"class.std::__1::__vector_base.1487" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.1488" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::vector.1493" = type { %"class.std::__1::__vector_base.1494" }
%"class.std::__1::__vector_base.1494" = type { i16*, i16*, %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { i16* }
%"class.std::__1::unique_ptr.1500" = type { %"class.std::__1::__compressed_pair.1501" }
%"class.std::__1::__compressed_pair.1501" = type { %"struct.std::__1::__compressed_pair_elem.1502" }
%"struct.std::__1::__compressed_pair_elem.1502" = type { %"class.content::WebContentsImpl::ColorChooser"* }
%"class.content::WebContentsImpl::ColorChooser" = type opaque
%"class.std::__1::unique_ptr.1506" = type { %"class.std::__1::__compressed_pair.1507" }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"class.content::BrowserPluginEmbedder"* }
%"class.content::BrowserPluginEmbedder" = type opaque
%"class.std::__1::unique_ptr.1512" = type { %"class.std::__1::__compressed_pair.1513" }
%"class.std::__1::__compressed_pair.1513" = type { %"struct.std::__1::__compressed_pair_elem.1514" }
%"struct.std::__1::__compressed_pair_elem.1514" = type { %"class.content::BrowserPluginGuest"* }
%"class.content::BrowserPluginGuest" = type opaque
%"class.std::__1::set.1518" = type { %"class.std::__1::__tree.1519" }
%"class.std::__1::__tree.1519" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1520", %"class.std::__1::__compressed_pair.1524" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.1528" = type { %"class.std::__1::__compressed_pair.1529" }
%"class.std::__1::__compressed_pair.1529" = type { %"struct.std::__1::__compressed_pair_elem.1530" }
%"struct.std::__1::__compressed_pair_elem.1530" = type { %"struct.content::OpenURLParams"* }
%"struct.content::OpenURLParams" = type { %class.GURL, %"struct.content::Referrer", %"class.absl::optional.1531", i32, %"class.absl::optional.35", %class.scoped_refptr.1537, %"class.std::__1::vector.58", %class.scoped_refptr.173, %"class.std::__1::basic_string", i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, %class.scoped_refptr.64, i8, %"class.std::__1::basic_string", i32, %"class.absl::optional.1538" }
%"class.absl::optional.1531" = type { %"class.absl::optional_internal::optional_data.1532" }
%"class.absl::optional_internal::optional_data.1532" = type { %"class.absl::optional_internal::optional_data_base.1533" }
%"class.absl::optional_internal::optional_data_base.1533" = type { %"class.absl::optional_internal::optional_data_dtor_base.1534" }
%"class.absl::optional_internal::optional_data_dtor_base.1534" = type { i8, %union.anon.1535 }
%union.anon.1535 = type { %"class.util::TokenType" }
%class.scoped_refptr.1537 = type { %"class.content::SiteInstance"* }
%"class.content::SiteInstance" = type <{ i32 (...)**, %"class.base::RefCounted.29", [4 x i8] }>
%"class.absl::optional.1538" = type { %"class.absl::optional_internal::optional_data.1539" }
%"class.absl::optional_internal::optional_data.1539" = type { %"class.absl::optional_internal::optional_data_base.1540" }
%"class.absl::optional_internal::optional_data_base.1540" = type { %"class.absl::optional_internal::optional_data_dtor_base.1541" }
%"class.absl::optional_internal::optional_data_dtor_base.1541" = type { i8, %union.anon.1542 }
%union.anon.1542 = type { %"struct.blink::Impression" }
%"struct.blink::Impression" = type { %"class.url::Origin", %"class.absl::optional.35", i64, %"class.absl::optional.624", i64 }
%"class.std::__1::unique_ptr.1546" = type { %"class.std::__1::__compressed_pair.1547" }
%"class.std::__1::__compressed_pair.1547" = type { %"struct.std::__1::__compressed_pair_elem.1548" }
%"struct.std::__1::__compressed_pair_elem.1548" = type { %"struct.content::NavigationController::LoadURLParams"* }
%"struct.content::NavigationController::LoadURLParams" = type { %class.GURL, %"class.absl::optional.1531", i32, %"class.absl::optional.35", %class.scoped_refptr.1537, i32, i32, i32, [4 x i8], %"struct.content::Referrer", %"class.std::__1::vector.58", %"class.std::__1::basic_string", i8, i8, i32, %class.GURL, %class.GURL, %class.scoped_refptr.173, i8, i8, %"class.std::__1::basic_string", i8, i8, i8, %class.scoped_refptr.64, %"class.std::__1::unique_ptr.1549", i8, %"class.base::TimeTicks", i32, %"class.std::__1::basic_string", i32, %"class.absl::optional.1538" }
%"class.std::__1::unique_ptr.1549" = type { %"class.std::__1::__compressed_pair.1550" }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { %"class.content::NavigationUIData"* }
%"class.content::NavigationUIData" = type { i32 (...)** }
%"class.mojo::Remote.1558" = type { %"class.mojo::internal::InterfacePtrState.1559" }
%"class.mojo::internal::InterfacePtrState.1559" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1560" }
%"class.std::__1::unique_ptr.1560" = type { %"class.std::__1::__compressed_pair.1561" }
%"class.std::__1::__compressed_pair.1561" = type { %"struct.std::__1::__compressed_pair_elem.1562" }
%"struct.std::__1::__compressed_pair_elem.1562" = type { %"class.device::mojom::GeolocationContextProxy"* }
%"class.device::mojom::GeolocationContextProxy" = type { %"class.device::mojom::GeolocationContext", %"class.mojo::MessageReceiverWithResponder"* }
%"class.device::mojom::GeolocationContext" = type { i32 (...)** }
%"class.mojo::AssociatedRemote.1566" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1567" }
%"class.mojo::internal::AssociatedInterfacePtrState.1567" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1568" }
%"class.std::__1::unique_ptr.1568" = type { %"class.std::__1::__compressed_pair.1569" }
%"class.std::__1::__compressed_pair.1569" = type { %"struct.std::__1::__compressed_pair_elem.1570" }
%"struct.std::__1::__compressed_pair_elem.1570" = type { %"class.blink::mojom::ContextMenuClientProxy"* }
%"class.blink::mojom::ContextMenuClientProxy" = type { %"class.blink::mojom::ContextMenuClient", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::ContextMenuClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1574" = type { %"class.std::__1::__compressed_pair.1575" }
%"class.std::__1::__compressed_pair.1575" = type { %"struct.std::__1::__compressed_pair_elem.1576" }
%"struct.std::__1::__compressed_pair_elem.1576" = type { %"class.content::WakeLockContextHost"* }
%"class.content::WakeLockContextHost" = type { i32, %"class.content::WebContents"*, %"class.mojo::Remote.1577" }
%"class.mojo::Remote.1577" = type { %"class.mojo::internal::InterfacePtrState.1578" }
%"class.mojo::internal::InterfacePtrState.1578" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1579" }
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.device::mojom::WakeLockContextProxy"* }
%"class.device::mojom::WakeLockContextProxy" = type { %"class.device::mojom::WakeLockContext", %"class.mojo::MessageReceiverWithResponder"* }
%"class.device::mojom::WakeLockContext" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1588" = type { %"class.std::__1::__compressed_pair.1589" }
%"class.std::__1::__compressed_pair.1589" = type { %"struct.std::__1::__compressed_pair_elem.1590" }
%"struct.std::__1::__compressed_pair_elem.1590" = type { %"struct.blink::web_pref::WebPreferences"* }
%"struct.blink::web_pref::WebPreferences" = type <{ %"class.std::__1::map.1591", %"class.std::__1::map.1591", %"class.std::__1::map.1591", %"class.std::__1::map.1591", %"class.std::__1::map.1591", %"class.std::__1::map.1591", %"class.std::__1::map.1591", i32, i32, i32, i32, %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", float, i8, i8, i8, i8, %class.GURL, i8, [3 x i8], float, float, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.std::__1::map.1600", %"class.std::__1::map.1600", %"class.std::__1::map.1600", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.std::__1::map.1591" = type { %"class.std::__1::__tree.1592" }
%"class.std::__1::__tree.1592" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1593", %"class.std::__1::__compressed_pair.1597" }
%"class.std::__1::__compressed_pair.1593" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1597" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.1600" = type { %"class.std::__1::__tree.1601" }
%"class.std::__1::__tree.1601" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1602", %"class.std::__1::__compressed_pair.1606" }
%"class.std::__1::__compressed_pair.1602" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.622", %"class.base::RepeatingCallback.1614", i64, %"class.std::__1::map.1615", i8*, i64, %"class.base::WeakPtrFactory.1624" }
%"class.base::RepeatingCallback.1614" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1615" = type { %"class.std::__1::__tree.1616" }
%"class.std::__1::__tree.1616" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1617", %"class.std::__1::__compressed_pair.1621" }
%"class.std::__1::__compressed_pair.1617" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1621" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.1624" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1625" = type { %"class.std::__1::__compressed_pair.1626" }
%"class.std::__1::__compressed_pair.1626" = type { %"struct.std::__1::__compressed_pair_elem.1627" }
%"struct.std::__1::__compressed_pair_elem.1627" = type { %"class.content::ScreenOrientationProvider"* }
%"class.content::ScreenOrientationProvider" = type opaque
%"class.ui::AXMode" = type { i32 }
%"class.std::__1::unique_ptr.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"class.ui::AXEventRecorder"* }
%"class.ui::AXEventRecorder" = type { i32 (...)**, i8, %"class.std::__1::vector.110", %"class.base::RepeatingCallback.1634" }
%"class.base::RepeatingCallback.1634" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.content::AudioStreamMonitor" = type { %"class.content::WebContentsObserver", %"class.content::WebContents"*, %"class.base::TickClock"*, %"class.base::ThreadChecker", %"class.base::flat_map.1638", %"class.base::TimeTicks", i8, i8, %"class.base::OneShotTimer" }
%"class.base::flat_map.1638" = type { %"class.base::internal::flat_tree.1639" }
%"class.base::internal::flat_tree.1639" = type { %"class.std::__1::vector.1640" }
%"class.std::__1::vector.1640" = type { %"class.std::__1::__vector_base.1641" }
%"class.std::__1::__vector_base.1641" = type { %"struct.std::__1::pair.1642"*, %"struct.std::__1::pair.1642"*, %"class.std::__1::__compressed_pair.1643" }
%"struct.std::__1::pair.1642" = type opaque
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"struct.std::__1::pair.1642"* }
%"class.absl::optional.1648" = type { %"class.absl::optional_internal::optional_data.1649" }
%"class.absl::optional_internal::optional_data.1649" = type { %"class.absl::optional_internal::optional_data_base.1650" }
%"class.absl::optional_internal::optional_data_base.1650" = type { %"class.absl::optional_internal::optional_data_dtor_base.1651" }
%"class.absl::optional_internal::optional_data_dtor_base.1651" = type { i8, %union.anon.1652 }
%union.anon.1652 = type { %"class.content::ForwardingAudioStreamFactory" }
%"class.content::ForwardingAudioStreamFactory" = type { %"class.content::WebContentsObserver", %"class.std::__1::unique_ptr.1653", i8, %"class.base::ScopedClosureRunner", %"class.base::WeakPtrFactory.1705" }
%"class.std::__1::unique_ptr.1653" = type { %"class.std::__1::__compressed_pair.1654" }
%"class.std::__1::__compressed_pair.1654" = type { %"struct.std::__1::__compressed_pair_elem.1655" }
%"struct.std::__1::__compressed_pair_elem.1655" = type { %"class.content::ForwardingAudioStreamFactory::Core"* }
%"class.content::ForwardingAudioStreamFactory::Core" = type { %"class.content::AudioStreamBroker::LoopbackSource", %"class.media::UserInputMonitorBase"*, %"class.base::WeakPtr.1656", %"class.std::__1::unique_ptr.1657", %"class.base::UnguessableToken", %"class.mojo::Remote.1663", i32, %"class.absl::optional.1671", %"class.base::internal::flat_tree.1684", %"class.base::internal::flat_tree.1684", %"class.base::internal::flat_tree.1693", %"class.base::WeakPtrFactory.1701" }
%"class.content::AudioStreamBroker::LoopbackSource" = type { i32 (...)** }
%"class.media::UserInputMonitorBase" = type opaque
%"class.base::WeakPtr.1656" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.1657" = type { %"class.std::__1::__compressed_pair.1658" }
%"class.std::__1::__compressed_pair.1658" = type { %"struct.std::__1::__compressed_pair_elem.1659" }
%"struct.std::__1::__compressed_pair_elem.1659" = type { %"class.content::AudioStreamBrokerFactory"* }
%"class.content::AudioStreamBrokerFactory" = type { i32 (...)** }
%"class.mojo::Remote.1663" = type { %"class.mojo::internal::InterfacePtrState.1664" }
%"class.mojo::internal::InterfacePtrState.1664" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1665" }
%"class.std::__1::unique_ptr.1665" = type { %"class.std::__1::__compressed_pair.1666" }
%"class.std::__1::__compressed_pair.1666" = type { %"struct.std::__1::__compressed_pair_elem.1667" }
%"struct.std::__1::__compressed_pair_elem.1667" = type { %"class.media::mojom::AudioStreamFactoryProxy"* }
%"class.media::mojom::AudioStreamFactoryProxy" = type { %"class.media::mojom::AudioStreamFactory", %"class.mojo::MessageReceiverWithResponder"* }
%"class.media::mojom::AudioStreamFactory" = type { i32 (...)** }
%"class.absl::optional.1671" = type { %"class.absl::optional_internal::optional_data.1672" }
%"class.absl::optional_internal::optional_data.1672" = type { %"class.absl::optional_internal::optional_data_base.1673" }
%"class.absl::optional_internal::optional_data_base.1673" = type { %"class.absl::optional_internal::optional_data_dtor_base.1674" }
%"class.absl::optional_internal::optional_data_dtor_base.1674" = type { i8, %union.anon.1675 }
%union.anon.1675 = type { %"class.content::AudioMutingSession" }
%"class.content::AudioMutingSession" = type { %"class.base::UnguessableToken", %"class.mojo::AssociatedRemote.1676" }
%"class.mojo::AssociatedRemote.1676" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1677" }
%"class.mojo::internal::AssociatedInterfacePtrState.1677" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1678" }
%"class.std::__1::unique_ptr.1678" = type { %"class.std::__1::__compressed_pair.1679" }
%"class.std::__1::__compressed_pair.1679" = type { %"struct.std::__1::__compressed_pair_elem.1680" }
%"struct.std::__1::__compressed_pair_elem.1680" = type { %"class.media::mojom::LocalMuterProxy"* }
%"class.media::mojom::LocalMuterProxy" = type { %"class.media::mojom::LocalMuter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.media::mojom::LocalMuter" = type { i32 (...)** }
%"class.base::internal::flat_tree.1684" = type { %"class.std::__1::vector.1685" }
%"class.std::__1::vector.1685" = type { %"class.std::__1::__vector_base.1686" }
%"class.std::__1::__vector_base.1686" = type { %"class.std::__1::unique_ptr.1687"*, %"class.std::__1::unique_ptr.1687"*, %"class.std::__1::__compressed_pair.1688" }
%"class.std::__1::unique_ptr.1687" = type opaque
%"class.std::__1::__compressed_pair.1688" = type { %"struct.std::__1::__compressed_pair_elem.1689" }
%"struct.std::__1::__compressed_pair_elem.1689" = type { %"class.std::__1::unique_ptr.1687"* }
%"class.base::internal::flat_tree.1693" = type { %"class.std::__1::vector.1694" }
%"class.std::__1::vector.1694" = type { %"class.std::__1::__vector_base.1695" }
%"class.std::__1::__vector_base.1695" = type { %"class.content::AudioStreamBroker::LoopbackSink"**, %"class.content::AudioStreamBroker::LoopbackSink"**, %"class.std::__1::__compressed_pair.1696" }
%"class.content::AudioStreamBroker::LoopbackSink" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1696" = type { %"struct.std::__1::__compressed_pair_elem.1697" }
%"struct.std::__1::__compressed_pair_elem.1697" = type { %"class.content::AudioStreamBroker::LoopbackSink"** }
%"class.base::WeakPtrFactory.1701" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback.507" }
%"class.base::WeakPtrFactory.1705" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1706" = type { %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { %"class.content::MediaWebContentsObserver"* }
%"class.content::MediaWebContentsObserver" = type opaque
%"class.std::__1::unique_ptr.1712" = type { %"class.std::__1::__compressed_pair.1713" }
%"class.std::__1::__compressed_pair.1713" = type { %"struct.std::__1::__compressed_pair_elem.1714" }
%"struct.std::__1::__compressed_pair_elem.1714" = type { %"class.content::PepperPlaybackObserver"* }
%"class.content::PepperPlaybackObserver" = type opaque
%"class.std::__1::unique_ptr.1718" = type { %"class.std::__1::__compressed_pair.1719" }
%"class.std::__1::__compressed_pair.1719" = type { %"struct.std::__1::__compressed_pair_elem.1720" }
%"struct.std::__1::__compressed_pair_elem.1720" = type { %"class.content::RenderWidgetHostInputEventRouter"* }
%"class.content::RenderWidgetHostInputEventRouter" = type opaque
%"class.std::__1::unique_ptr.1724" = type { %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"class.content::TextInputManager"* }
%"class.content::TextInputManager" = type opaque
%"class.base::flat_map.1730" = type { %"class.base::internal::flat_tree.1731" }
%"class.base::internal::flat_tree.1731" = type { %"class.std::__1::vector.1732" }
%"class.std::__1::vector.1732" = type { %"class.std::__1::__vector_base.1733" }
%"class.std::__1::__vector_base.1733" = type { %"struct.std::__1::pair.1734"*, %"struct.std::__1::pair.1734"*, %"class.std::__1::__compressed_pair.1735" }
%"struct.std::__1::pair.1734" = type opaque
%"class.std::__1::__compressed_pair.1735" = type { %"struct.std::__1::__compressed_pair_elem.1736" }
%"struct.std::__1::__compressed_pair_elem.1736" = type { %"struct.std::__1::pair.1734"* }
%"class.std::__1::unique_ptr.1740" = type { %"class.std::__1::__compressed_pair.1741" }
%"class.std::__1::__compressed_pair.1741" = type { %"struct.std::__1::__compressed_pair_elem.1742" }
%"struct.std::__1::__compressed_pair_elem.1742" = type { %"class.content::DisplayCutoutHostImpl"* }
%"class.content::DisplayCutoutHostImpl" = type opaque
%"class.content::Portal" = type opaque
%"class.blink::mojom::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.base::ScopedObservation.1746" = type { %"class.ui::NativeThemeObserver"*, %"class.ui::NativeTheme"* }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.1747", %"class.base::ObserverList.1758", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.1747" = type { %"class.std::__1::__tree.1748" }
%"class.std::__1::__tree.1748" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1749", %"class.std::__1::__compressed_pair.1753" }
%"class.std::__1::__compressed_pair.1749" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1753" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ObserverList.1758" = type <{ %"class.std::__1::vector.45", %"class.base::LinkedList.1759", i64, i32, [4 x i8] }>
%"class.base::LinkedList.1759" = type { %"class.base::LinkNode.1760" }
%"class.base::LinkNode.1760" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.1762" = type { %"class.std::__1::__compressed_pair.1763" }
%"class.std::__1::__compressed_pair.1763" = type { %"struct.std::__1::__compressed_pair_elem.1764" }
%"struct.std::__1::__compressed_pair_elem.1764" = type { %"class.content::(anonymous namespace)::JavaScriptDialogDismissNotifier"* }
%"class.content::(anonymous namespace)::JavaScriptDialogDismissNotifier" = type opaque
%"class.std::__1::unique_ptr.1768" = type { %"class.std::__1::__compressed_pair.1769" }
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { %"class.content::ScreenChangeMonitor"* }
%"class.content::ScreenChangeMonitor" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.1774" = type { %"class.std::__1::__compressed_pair.1775" }
%"class.std::__1::__compressed_pair.1775" = type { %"struct.std::__1::__compressed_pair_elem.1776" }
%"struct.std::__1::__compressed_pair_elem.1776" = type { %"class.content::PrerenderHostRegistry"* }
%"class.content::PrerenderHostRegistry" = type opaque
%"class.base::OnceCallback.1780" = type { %"class.base::internal::CallbackBase" }
%"class.blink::mojom::CaptureHandleConfig" = type { i8, %"class.std::__1::basic_string.150", i8, %"class.std::__1::vector.382" }
%"class.std::__1::vector.382" = type { %"class.std::__1::__vector_base.383" }
%"class.std::__1::__vector_base.383" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.url::Origin"* }
%"class.base::WeakPtrFactory.1781" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.1782" = type { %"class.std::__1::__vector_base.1783" }
%"class.std::__1::__vector_base.1783" = type { %"class.std::__1::unique_ptr.1784"*, %"class.std::__1::unique_ptr.1784"*, %"class.std::__1::__compressed_pair.1785" }
%"class.std::__1::unique_ptr.1784" = type opaque
%"class.std::__1::__compressed_pair.1785" = type { %"struct.std::__1::__compressed_pair_elem.1786" }
%"struct.std::__1::__compressed_pair_elem.1786" = type { %"class.std::__1::unique_ptr.1784"* }
%"class.std::__1::unique_ptr.1790" = type { %"class.std::__1::__compressed_pair.1791" }
%"class.std::__1::__compressed_pair.1791" = type { %"struct.std::__1::__compressed_pair_elem.1792" }
%"struct.std::__1::__compressed_pair_elem.1792" = type { %"class.content::WebUIMainFrameObserver"* }
%"class.content::WebUIMainFrameObserver" = type opaque
%"class.std::__1::unique_ptr.1796" = type { %"class.std::__1::__compressed_pair.1797" }
%"class.std::__1::__compressed_pair.1797" = type { %"struct.std::__1::__compressed_pair_elem.1798" }
%"struct.std::__1::__compressed_pair_elem.1798" = type { %"class.content::WebUIController"* }
%"class.content::WebUIController" = type opaque
%"class.mojo::AssociatedRemote.1802" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1803" }
%"class.mojo::internal::AssociatedInterfacePtrState.1803" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1804" }
%"class.std::__1::unique_ptr.1804" = type { %"class.std::__1::__compressed_pair.1805" }
%"class.std::__1::__compressed_pair.1805" = type { %"struct.std::__1::__compressed_pair_elem.1806" }
%"struct.std::__1::__compressed_pair_elem.1806" = type { %"class.content::mojom::WebUIProxy"* }
%"class.content::mojom::WebUIProxy" = type { %"class.content::mojom::WebUI", %"class.mojo::MessageReceiverWithResponder"* }
%"class.content::mojom::WebUI" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver.1810" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.content::mojom::WebUIHostStub", %"class.base::WeakPtrFactory.1811" }
%"class.content::mojom::WebUIHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.content::mojom::WebUIHost"* }
%"class.base::WeakPtrFactory.1811" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1815" = type { %"class.absl::optional_internal::optional_data.1816" }
%"class.absl::optional_internal::optional_data.1816" = type { %"class.absl::optional_internal::optional_data_base.1817" }
%"class.absl::optional_internal::optional_data_base.1817" = type { %"class.absl::optional_internal::optional_data_dtor_base.1818" }
%"class.absl::optional_internal::optional_data_dtor_base.1818" = type { i8, %union.anon.1819 }
%union.anon.1819 = type { %"class.gfx::Size" }
%"class.mojo::AssociatedReceiver.1820" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.content::mojom::FrameHostStub", %"class.base::WeakPtrFactory.1821" }
%"class.content::mojom::FrameHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.content::mojom::FrameHost"* }
%"class.base::WeakPtrFactory.1821" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedReceiver.1822" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::BackForwardCacheControllerHostStub", %"class.base::WeakPtrFactory.1823" }
%"class.blink::mojom::BackForwardCacheControllerHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::BackForwardCacheControllerHost"* }
%"class.base::WeakPtrFactory.1823" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedRemote.1824" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1825" }
%"class.mojo::internal::AssociatedInterfacePtrState.1825" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1826" }
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"class.content::mojom::FrameProxy"* }
%"class.content::mojom::FrameProxy" = type { %"class.content::mojom::Frame", %"class.mojo::MessageReceiverWithResponder"* }
%"class.content::mojom::Frame" = type { i32 (...)** }
%"class.mojo::AssociatedRemote.1832" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1833" }
%"class.mojo::internal::AssociatedInterfacePtrState.1833" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1834" }
%"class.std::__1::unique_ptr.1834" = type { %"class.std::__1::__compressed_pair.1835" }
%"class.std::__1::__compressed_pair.1835" = type { %"struct.std::__1::__compressed_pair_elem.1836" }
%"struct.std::__1::__compressed_pair_elem.1836" = type { %"class.content::mojom::FrameBindingsControlProxy"* }
%"class.content::mojom::FrameBindingsControlProxy" = type { %"class.content::mojom::FrameBindingsControl", %"class.mojo::MessageReceiverWithResponder"* }
%"class.content::mojom::FrameBindingsControl" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver.1840" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::LocalFrameHostStub", %"class.base::WeakPtrFactory.1841" }
%"class.blink::mojom::LocalFrameHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::LocalFrameHost"* }
%"class.base::WeakPtrFactory.1841" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedReceiver.1842" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::LocalMainFrameHostStub", %"class.base::WeakPtrFactory.1843" }
%"class.blink::mojom::LocalMainFrameHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::LocalMainFrameHost"* }
%"class.base::WeakPtrFactory.1843" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1844" = type { %"class.std::__1::__compressed_pair.1845" }
%"class.std::__1::__compressed_pair.1845" = type { %"struct.std::__1::__compressed_pair_elem.1846" }
%"struct.std::__1::__compressed_pair_elem.1846" = type { %"struct.content::PendingNavigation"* }
%"struct.content::PendingNavigation" = type opaque
%"class.absl::optional.1850" = type { %"class.absl::optional_internal::optional_data.1851" }
%"class.absl::optional_internal::optional_data.1851" = type { %"class.absl::optional_internal::optional_data_base.1852" }
%"class.absl::optional_internal::optional_data_base.1852" = type { %"class.absl::optional_internal::optional_data_dtor_base.1853" }
%"class.absl::optional_internal::optional_data_dtor_base.1853" = type { i8, %union.anon.1854 }
%union.anon.1854 = type { %"class.content::RenderFrameAudioOutputStreamFactory" }
%"class.content::RenderFrameAudioOutputStreamFactory" = type { %"class.std::__1::unique_ptr.1855" }
%"class.std::__1::unique_ptr.1855" = type { %"class.std::__1::__compressed_pair.1856" }
%"class.std::__1::__compressed_pair.1856" = type { %"struct.std::__1::__compressed_pair_elem.1857" }
%"struct.std::__1::__compressed_pair_elem.1857" = type { %"class.content::RenderFrameAudioOutputStreamFactory::Core"* }
%"class.content::RenderFrameAudioOutputStreamFactory::Core" = type opaque
%"class.absl::optional.1861" = type { %"class.absl::optional_internal::optional_data.1862" }
%"class.absl::optional_internal::optional_data.1862" = type { %"class.absl::optional_internal::optional_data_base.1863" }
%"class.absl::optional_internal::optional_data_base.1863" = type { %"class.absl::optional_internal::optional_data_dtor_base.1864" }
%"class.absl::optional_internal::optional_data_dtor_base.1864" = type { i8, %union.anon.1865 }
%union.anon.1865 = type { %"class.content::RenderFrameAudioInputStreamFactory" }
%"class.content::RenderFrameAudioInputStreamFactory" = type { %"class.std::__1::unique_ptr.1866" }
%"class.std::__1::unique_ptr.1866" = type { %"class.std::__1::__compressed_pair.1867" }
%"class.std::__1::__compressed_pair.1867" = type { %"struct.std::__1::__compressed_pair_elem.1868" }
%"struct.std::__1::__compressed_pair_elem.1868" = type { %"class.content::RenderFrameAudioInputStreamFactory::Core"* }
%"class.content::RenderFrameAudioInputStreamFactory::Core" = type opaque
%"class.std::__1::unique_ptr.1872" = type { %"class.std::__1::__compressed_pair.1873" }
%"class.std::__1::__compressed_pair.1873" = type { %"struct.std::__1::__compressed_pair_elem.1874" }
%"struct.std::__1::__compressed_pair_elem.1874" = type { %"class.content::MediaInterfaceProxy"* }
%"class.content::MediaInterfaceProxy" = type opaque
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.content::PresentationServiceImpl"* }
%"class.content::PresentationServiceImpl" = type opaque
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"class.content::FileSystemManagerImpl"* }
%"class.content::FileSystemManagerImpl" = type opaque
%"class.std::__1::unique_ptr.1888" = type { %"class.std::__1::__compressed_pair.1889" }
%"class.std::__1::__compressed_pair.1889" = type { %"struct.std::__1::__compressed_pair_elem.1890", %"struct.std::__1::__compressed_pair_elem.1891" }
%"struct.std::__1::__compressed_pair_elem.1890" = type { %"class.content::PushMessagingManager"* }
%"class.content::PushMessagingManager" = type opaque
%"struct.std::__1::__compressed_pair_elem.1891" = type { %"struct.base::OnTaskRunnerDeleter" }
%"struct.base::OnTaskRunnerDeleter" = type { %class.scoped_refptr.493 }
%"class.std::__1::unique_ptr.1892" = type { %"class.std::__1::__compressed_pair.1893" }
%"class.std::__1::__compressed_pair.1893" = type { %"struct.std::__1::__compressed_pair_elem.1894" }
%"struct.std::__1::__compressed_pair_elem.1894" = type { %"class.content::SpeechSynthesisImpl"* }
%"class.content::SpeechSynthesisImpl" = type opaque
%"class.std::__1::unique_ptr.1898" = type { %"class.std::__1::__compressed_pair.1899" }
%"class.std::__1::__compressed_pair.1899" = type { %"struct.std::__1::__compressed_pair_elem.1900" }
%"struct.std::__1::__compressed_pair_elem.1900" = type { %"class.blink::AssociatedInterfaceProvider"* }
%"class.blink::AssociatedInterfaceProvider" = type { %"class.mojo::AssociatedRemote.1901", %"class.std::__1::unique_ptr.1909", %class.scoped_refptr.308 }
%"class.mojo::AssociatedRemote.1901" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1902" }
%"class.mojo::internal::AssociatedInterfacePtrState.1902" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1903" }
%"class.std::__1::unique_ptr.1903" = type { %"class.std::__1::__compressed_pair.1904" }
%"class.std::__1::__compressed_pair.1904" = type { %"struct.std::__1::__compressed_pair_elem.1905" }
%"struct.std::__1::__compressed_pair_elem.1905" = type { %"class.blink::mojom::AssociatedInterfaceProviderProxy"* }
%"class.blink::mojom::AssociatedInterfaceProviderProxy" = type { %"class.blink::mojom::AssociatedInterfaceProvider", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::AssociatedInterfaceProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1909" = type { %"class.std::__1::__compressed_pair.1910" }
%"class.std::__1::__compressed_pair.1910" = type { %"struct.std::__1::__compressed_pair_elem.1911" }
%"struct.std::__1::__compressed_pair_elem.1911" = type { %"class.blink::AssociatedInterfaceProvider::LocalProvider"* }
%"class.blink::AssociatedInterfaceProvider::LocalProvider" = type opaque
%"class.std::__1::vector.380" = type { %"class.std::__1::__vector_base.381" }
%"class.std::__1::__vector_base.381" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.389" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.382", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.std::__1::unique_ptr.1918" = type { %"class.std::__1::__compressed_pair.1919" }
%"class.std::__1::__compressed_pair.1919" = type { %"struct.std::__1::__compressed_pair_elem.1920" }
%"struct.std::__1::__compressed_pair_elem.1920" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1921", %"class.std::__1::map.1932", %"class.std::__1::map.1941"* }
%"class.std::__1::map.1921" = type { %"class.std::__1::__tree.1922" }
%"class.std::__1::__tree.1922" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1923", %"class.std::__1::__compressed_pair.1927" }
%"class.std::__1::__compressed_pair.1923" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1927" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.1932" = type { %"class.std::__1::__tree.1933" }
%"class.std::__1::__tree.1933" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1934", %"class.std::__1::__compressed_pair.1938" }
%"class.std::__1::__compressed_pair.1934" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1938" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.1941" = type opaque
%"class.std::__1::unique_ptr.1945" = type { %"class.std::__1::__compressed_pair.1946" }
%"class.std::__1::__compressed_pair.1946" = type { %"struct.std::__1::__compressed_pair_elem.1947" }
%"struct.std::__1::__compressed_pair_elem.1947" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.content::BrowserInterfaceBrokerImpl" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.content::RenderFrameHostImpl"*, %"class.mojo::BinderMap", %"class.mojo::BinderMapWithContext.1961", %"class.std::__1::unique_ptr.1972" }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.mojo::BinderMap" = type { %"class.mojo::BinderMapWithContext" }
%"class.mojo::BinderMapWithContext" = type { %"class.std::__1::map.1951", %"class.base::RepeatingCallback.1960" }
%"class.std::__1::map.1951" = type { %"class.std::__1::__tree.1952" }
%"class.std::__1::__tree.1952" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1953", %"class.std::__1::__compressed_pair.1957" }
%"class.std::__1::__compressed_pair.1953" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1957" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::RepeatingCallback.1960" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.mojo::BinderMapWithContext.1961" = type { %"class.std::__1::map.1962", %"class.base::RepeatingCallback.1971" }
%"class.std::__1::map.1962" = type { %"class.std::__1::__tree.1963" }
%"class.std::__1::__tree.1963" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1964", %"class.std::__1::__compressed_pair.1968" }
%"class.std::__1::__compressed_pair.1964" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::RepeatingCallback.1971" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1972" = type { %"class.std::__1::__compressed_pair.1973" }
%"class.std::__1::__compressed_pair.1973" = type { %"struct.std::__1::__compressed_pair_elem.1974" }
%"struct.std::__1::__compressed_pair_elem.1974" = type { %"class.content::MojoBinderPolicyApplier"* }
%"class.content::MojoBinderPolicyApplier" = type { i32, %"class.content::MojoBinderPolicyMapImpl"*, %"class.base::OnceCallback.1985", i32, %"class.std::__1::vector.1986" }
%"class.content::MojoBinderPolicyMapImpl" = type { %"class.content::MojoBinderPolicyMap", %"class.base::flat_map.1975" }
%"class.content::MojoBinderPolicyMap" = type { i32 (...)** }
%"class.base::flat_map.1975" = type { %"class.base::internal::flat_tree.1976" }
%"class.base::internal::flat_tree.1976" = type { %"class.std::__1::vector.1977" }
%"class.std::__1::vector.1977" = type { %"class.std::__1::__vector_base.1978" }
%"class.std::__1::__vector_base.1978" = type { %"struct.std::__1::pair.1979"*, %"struct.std::__1::pair.1979"*, %"class.std::__1::__compressed_pair.1980" }
%"struct.std::__1::pair.1979" = type opaque
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"struct.std::__1::pair.1979"* }
%"class.base::OnceCallback.1985" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.1986" = type { %"class.std::__1::__vector_base.1987" }
%"class.std::__1::__vector_base.1987" = type { %"class.base::OnceCallback.507"*, %"class.base::OnceCallback.507"*, %"class.std::__1::__compressed_pair.1988" }
%"class.std::__1::__compressed_pair.1988" = type { %"struct.std::__1::__compressed_pair_elem.1989" }
%"struct.std::__1::__compressed_pair_elem.1989" = type { %"class.base::OnceCallback.507"* }
%"class.mojo::Receiver.1996" = type { %"class.mojo::internal::BindingState.1997" }
%"class.mojo::internal::BindingState.1997" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::BrowserInterfaceBrokerStub" }
%"class.blink::mojom::BrowserInterfaceBrokerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::BrowserInterfaceBroker"* }
%"class.std::__1::unique_ptr.1998" = type { %"class.std::__1::__compressed_pair.1999" }
%"class.std::__1::__compressed_pair.1999" = type { %"struct.std::__1::__compressed_pair_elem.2000" }
%"struct.std::__1::__compressed_pair_elem.2000" = type { %"class.content::RenderFrameHostImpl::DroppedInterfaceRequestLogger"* }
%"class.content::RenderFrameHostImpl::DroppedInterfaceRequestLogger" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias.1536" }
%"class.base::StrongAlias.1536" = type { %"class.base::UnguessableToken" }
%"class.mojo::AssociatedRemote.2004" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2005" }
%"class.mojo::internal::AssociatedInterfacePtrState.2005" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2006" }
%"class.std::__1::unique_ptr.2006" = type { %"class.std::__1::__compressed_pair.2007" }
%"class.std::__1::__compressed_pair.2007" = type { %"struct.std::__1::__compressed_pair_elem.2008" }
%"struct.std::__1::__compressed_pair_elem.2008" = type { %"class.content::mojom::RenderAccessibilityProxy"* }
%"class.content::mojom::RenderAccessibilityProxy" = type { %"class.content::mojom::RenderAccessibility", %"class.mojo::MessageReceiverWithResponder"* }
%"class.content::mojom::RenderAccessibility" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver.2012" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.content::mojom::RenderAccessibilityHostStub", %"class.base::WeakPtrFactory.2013" }
%"class.content::mojom::RenderAccessibilityHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.content::mojom::RenderAccessibilityHost"* }
%"class.base::WeakPtrFactory.2013" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedReceiver.2014" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.content::mojom::DomAutomationControllerHostStub", %"class.base::WeakPtrFactory.2015" }
%"class.content::mojom::DomAutomationControllerHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.content::mojom::DomAutomationControllerHost"* }
%"class.base::WeakPtrFactory.2015" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedReceiver.2016" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.content::mojom::PepperHostStub", %"class.base::WeakPtrFactory.2017" }
%"class.content::mojom::PepperHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.content::mojom::PepperHost"* }
%"class.base::WeakPtrFactory.2017" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.2018" = type { %"class.std::__1::__tree.2019" }
%"class.std::__1::__tree.2019" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2020", %"class.std::__1::__compressed_pair.2024" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.mojo::ReceiverSetBase.2027" = type { %"class.mojo::ReceiverSetState" }
%"class.content::KeepAliveHandleFactory" = type { %"class.std::__1::unique_ptr.2028", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.2028" = type { %"class.std::__1::__compressed_pair.2029" }
%"class.std::__1::__compressed_pair.2029" = type { %"struct.std::__1::__compressed_pair_elem.2030" }
%"struct.std::__1::__compressed_pair_elem.2030" = type { %"class.content::KeepAliveHandleFactory::Context"* }
%"class.content::KeepAliveHandleFactory::Context" = type opaque
%"class.mojo::Remote.2034" = type { %"class.mojo::internal::InterfacePtrState.2035" }
%"class.mojo::internal::InterfacePtrState.2035" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2036" }
%"class.std::__1::unique_ptr.2036" = type { %"class.std::__1::__compressed_pair.2037" }
%"class.std::__1::__compressed_pair.2037" = type { %"struct.std::__1::__compressed_pair_elem.2038" }
%"struct.std::__1::__compressed_pair_elem.2038" = type { %"class.network::mojom::URLLoaderFactoryProxy"* }
%"class.network::mojom::URLLoaderFactoryProxy" = type { %"class.network::mojom::URLLoaderFactory", %"class.mojo::MessageReceiverWithResponder"* }
%"class.base::internal::flat_tree.2042" = type { %"class.std::__1::vector.382" }
%"struct.std::__1::pair.2043" = type { i32, %"struct.content::GlobalRequestID" }
%"struct.content::GlobalRequestID" = type { i32, i32 }
%"class.mojo::StructPtr.2044" = type { %"class.std::__1::unique_ptr.2045" }
%"class.std::__1::unique_ptr.2045" = type { %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"class.blink::mojom::ResourceLoadInfo"* }
%"class.blink::mojom::ResourceLoadInfo" = type { i64, %class.GURL, %class.GURL, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", i8, %"class.mojo::StructPtr.2048", i32, %"struct.net::LoadTimingInfo", i64, i64, %"class.std::__1::vector.2060" }
%"class.mojo::StructPtr.2048" = type { %"class.std::__1::unique_ptr.2049" }
%"class.std::__1::unique_ptr.2049" = type { %"class.std::__1::__compressed_pair.2050" }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"class.blink::mojom::CommonNetworkInfo"* }
%"class.blink::mojom::CommonNetworkInfo" = type { i8, i8, %"class.absl::optional.2052" }
%"class.absl::optional.2052" = type { %"class.absl::optional_internal::optional_data.2053" }
%"class.absl::optional_internal::optional_data.2053" = type { %"class.absl::optional_internal::optional_data_base.2054" }
%"class.absl::optional_internal::optional_data_base.2054" = type { %"class.absl::optional_internal::optional_data_dtor_base.2055" }
%"class.absl::optional_internal::optional_data_dtor_base.2055" = type { i8, %union.anon.2056 }
%union.anon.2056 = type { %"class.net::IPEndPoint" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.std::__1::vector.2060" = type { %"class.std::__1::__vector_base.2061" }
%"class.std::__1::__vector_base.2061" = type { %"class.mojo::StructPtr.2062"*, %"class.mojo::StructPtr.2062"*, %"class.std::__1::__compressed_pair.2069" }
%"class.mojo::StructPtr.2062" = type { %"class.std::__1::unique_ptr.2063" }
%"class.std::__1::unique_ptr.2063" = type { %"class.std::__1::__compressed_pair.2064" }
%"class.std::__1::__compressed_pair.2064" = type { %"struct.std::__1::__compressed_pair_elem.2065" }
%"struct.std::__1::__compressed_pair_elem.2065" = type { %"class.blink::mojom::RedirectInfo"* }
%"class.blink::mojom::RedirectInfo" = type { %"class.url::Origin", %"class.mojo::StructPtr.2048" }
%"class.std::__1::__compressed_pair.2069" = type { %"struct.std::__1::__compressed_pair_elem.2070" }
%"struct.std::__1::__compressed_pair_elem.2070" = type { %"class.mojo::StructPtr.2062"* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.507" }
%"class.std::__1::set.235" = type { %"class.std::__1::__tree.236" }
%"class.std::__1::__tree.236" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.mojo::StructPtr.2077" = type { %"class.std::__1::unique_ptr.2078" }
%"class.std::__1::unique_ptr.2078" = type { %"class.std::__1::__compressed_pair.2079" }
%"class.std::__1::__compressed_pair.2079" = type { %"struct.std::__1::__compressed_pair_elem.2080" }
%"struct.std::__1::__compressed_pair_elem.2080" = type { %"class.content::mojom::DidCommitProvisionalLoadParams"* }
%"class.content::mojom::DidCommitProvisionalLoadParams" = type { i64, i64, %class.GURL, %"class.mojo::StructPtr.2081", i32, i8, %"class.std::__1::basic_string", i8, i8, i8, i32, %"class.std::__1::basic_string", i64, i32, i8, %"class.blink::PageState", i8, i8, %"class.url::Origin", %"class.std::__1::vector.380", %"class.base::flat_map.394", i32, %"class.std::__1::vector.404", i8, i32, %"class.base::UnguessableToken", %"class.absl::optional", %"class.absl::optional.226", %"class.absl::optional.226", %"class.absl::optional.226" }
%"class.mojo::StructPtr.2081" = type { %"class.std::__1::unique_ptr.2082" }
%"class.std::__1::unique_ptr.2082" = type { %"class.std::__1::__compressed_pair.2083" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.2084" }
%"struct.std::__1::__compressed_pair_elem.2084" = type { %"class.blink::mojom::Referrer"* }
%"class.blink::mojom::Referrer" = type <{ %class.GURL, i32, [4 x i8] }>
%"class.content::RenderFrameHostImpl::CommitCallbackInterceptor" = type { i32 (...)** }
%"class.base::RepeatingCallback.2091" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.2092" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2093 = type { %"class.content::PrefetchedSignedExchangeCache"* }
%"class.content::PrefetchedSignedExchangeCache" = type opaque
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.35", %"class.absl::optional.35", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.205" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.200", %"class.absl::optional.200" }
%"class.absl::optional.200" = type { %"class.absl::optional_internal::optional_data.201" }
%"class.absl::optional_internal::optional_data.201" = type { %"class.absl::optional_internal::optional_data_base.202" }
%"class.absl::optional_internal::optional_data_base.202" = type { %"class.absl::optional_internal::optional_data_dtor_base.203" }
%"class.absl::optional_internal::optional_data_dtor_base.203" = type { i8, %union.anon.204 }
%union.anon.204 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.absl::optional.205" = type { %"class.absl::optional_internal::optional_data.206" }
%"class.absl::optional_internal::optional_data.206" = type { %"class.absl::optional_internal::optional_data_base.207" }
%"class.absl::optional_internal::optional_data_base.207" = type { %"class.absl::optional_internal::optional_data_dtor_base.208" }
%"class.absl::optional_internal::optional_data_dtor_base.208" = type { i8, %union.anon.209 }
%union.anon.209 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.210" }
%"class.std::__1::__tree.210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.2094" = type { %"class.std::__1::__compressed_pair.2095" }
%"class.std::__1::__compressed_pair.2095" = type { %"struct.std::__1::__compressed_pair_elem.2096" }
%"struct.std::__1::__compressed_pair_elem.2096" = type { %"class.content::WebBundleHandle"* }
%"class.content::WebBundleHandle" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.content::SubresourceWebBundleNavigationInfo"* }
%"class.content::SubresourceWebBundleNavigationInfo" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.24 }
%union.anon.24 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.2100" = type { %"class.std::__1::__tree.2101" }
%"class.std::__1::__tree.2101" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2102", %"class.std::__1::__compressed_pair.2106" }
%"class.std::__1::__compressed_pair.2102" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.2106" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtr.2109" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::flat_tree.2110" = type { %"class.std::__1::vector.2111" }
%"class.std::__1::vector.2111" = type { %"class.std::__1::__vector_base.2112" }
%"class.std::__1::__vector_base.2112" = type { %"class.std::__1::unique_ptr.2113"*, %"class.std::__1::unique_ptr.2113"*, %"class.std::__1::__compressed_pair.2114" }
%"class.std::__1::unique_ptr.2113" = type opaque
%"class.std::__1::__compressed_pair.2114" = type { %"struct.std::__1::__compressed_pair_elem.2115" }
%"struct.std::__1::__compressed_pair_elem.2115" = type { %"class.std::__1::unique_ptr.2113"* }
%"class.std::__1::unique_ptr.2119" = type { %"class.std::__1::__compressed_pair.2120" }
%"class.std::__1::__compressed_pair.2120" = type { %"struct.std::__1::__compressed_pair_elem.2121" }
%"struct.std::__1::__compressed_pair_elem.2121" = type { %"class.content::FeatureObserver"* }
%"class.content::FeatureObserver" = type opaque
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.content::PeakGpuMemoryTracker"* }
%"class.content::PeakGpuMemoryTracker" = type { i32 (...)** }
%class.scoped_refptr.2125 = type { %"class.content::WebAuthRequestSecurityChecker"* }
%"class.content::WebAuthRequestSecurityChecker" = type opaque
%"class.std::__1::unique_ptr.2126" = type { %"class.std::__1::__compressed_pair.2127" }
%"class.std::__1::__compressed_pair.2127" = type { %"struct.std::__1::__compressed_pair_elem.2128" }
%"struct.std::__1::__compressed_pair_elem.2128" = type { %"struct.content::RenderFrameHostImpl::DocumentAssociatedData"* }
%"struct.content::RenderFrameHostImpl::DocumentAssociatedData" = type { %"class.base::SupportsUserData.base", i8, %class.GURL, %"class.std::__1::vector.2129", %"class.std::__1::unique_ptr.2150" }
%"class.std::__1::vector.2129" = type { %"class.std::__1::__vector_base.2130" }
%"class.std::__1::__vector_base.2130" = type { %"class.mojo::StructPtr.2131"*, %"class.mojo::StructPtr.2131"*, %"class.std::__1::__compressed_pair.2145" }
%"class.mojo::StructPtr.2131" = type { %"class.std::__1::unique_ptr.2132" }
%"class.std::__1::unique_ptr.2132" = type { %"class.std::__1::__compressed_pair.2133" }
%"class.std::__1::__compressed_pair.2133" = type { %"struct.std::__1::__compressed_pair_elem.2134" }
%"struct.std::__1::__compressed_pair_elem.2134" = type { %"class.blink::mojom::FaviconURL"* }
%"class.blink::mojom::FaviconURL" = type { %class.GURL, i32, %"class.std::__1::vector.2135" }
%"class.std::__1::vector.2135" = type { %"class.std::__1::__vector_base.2136" }
%"class.std::__1::__vector_base.2136" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.2137" }
%"class.std::__1::__compressed_pair.2137" = type { %"struct.std::__1::__compressed_pair_elem.2138" }
%"struct.std::__1::__compressed_pair_elem.2138" = type { %"class.gfx::Size"* }
%"class.std::__1::__compressed_pair.2145" = type { %"struct.std::__1::__compressed_pair_elem.2146" }
%"struct.std::__1::__compressed_pair_elem.2146" = type { %"class.mojo::StructPtr.2131"* }
%"class.std::__1::unique_ptr.2150" = type { %"class.std::__1::__compressed_pair.2151" }
%"class.std::__1::__compressed_pair.2151" = type { %"struct.std::__1::__compressed_pair_elem.2152" }
%"struct.std::__1::__compressed_pair_elem.2152" = type { %"class.content::PageImpl"* }
%"class.content::PageImpl" = type { %"class.content::RenderFrameHostImpl"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.231" }
%"class.base::time_internal::TimeBase.231" = type { i64 }
%"class.std::__1::unique_ptr.2159" = type { %"class.std::__1::__compressed_pair.2160" }
%"class.std::__1::__compressed_pair.2160" = type { %"struct.std::__1::__compressed_pair_elem.2161" }
%"struct.std::__1::__compressed_pair_elem.2161" = type { %"class.content::CrossOriginEmbedderPolicyReporter"* }
%"class.content::CrossOriginEmbedderPolicyReporter" = type opaque
%"class.std::__1::unique_ptr.2165" = type { %"class.std::__1::__compressed_pair.2166" }
%"class.std::__1::__compressed_pair.2166" = type { %"struct.std::__1::__compressed_pair_elem.2167" }
%"struct.std::__1::__compressed_pair_elem.2167" = type { %"class.content::CrossOriginOpenerPolicyReporter"* }
%"class.content::CrossOriginOpenerPolicyReporter" = type { %"class.content::StoragePartition"*, %class.GURL, %"struct.content::GlobalFrameRoutingId", %class.GURL, %"class.std::__1::basic_string", %"struct.network::CrossOriginOpenerPolicy", %"class.net::NetworkIsolationKey", %"class.mojo::ReceiverSetBase.2168" }
%"class.content::StoragePartition" = type opaque
%"struct.content::GlobalFrameRoutingId" = type { i32, i32 }
%"class.mojo::ReceiverSetBase.2168" = type { %"class.mojo::ReceiverSetState" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.mojo::ReceiverSetBase.2172" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.86", %"class.base::flat_map", %"class.base::flat_map.100", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.std::__1::vector.110", i32, %"class.mojo::StructPtr.117", %"class.std::__1::vector.110" }
%"class.mojo::StructPtr.86" = type { %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.93" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.95" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.100" = type { %"class.base::internal::flat_tree.101" }
%"class.base::internal::flat_tree.101" = type { %"class.std::__1::vector.102" }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.std::__1::pair.104"*, %"struct.std::__1::pair.104"*, %"class.std::__1::__compressed_pair.105" }
%"struct.std::__1::pair.104" = type opaque
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::pair.104"* }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.117" = type { %"class.std::__1::unique_ptr.118" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.110", i8, i8, [6 x i8] }>
%class.scoped_refptr.2173 = type { %"class.content::PolicyContainerHost"* }
%"class.content::PolicyContainerHost" = type { %"class.blink::mojom::PolicyContainerHost", %"class.base::RefCounted.2174", %"class.std::__1::unique_ptr.78", %"class.mojo::AssociatedReceiver.2175", %"class.mojo::ReceiverSetBase.2177", %"class.absl::optional.1531" }
%"class.blink::mojom::PolicyContainerHost" = type { i32 (...)** }
%"class.base::RefCounted.2174" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::AssociatedReceiver.2175" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::PolicyContainerHostStub", %"class.base::WeakPtrFactory.2176" }
%"class.blink::mojom::PolicyContainerHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::PolicyContainerHost"* }
%"class.base::WeakPtrFactory.2176" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ReceiverSetBase.2177" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetBase.2178" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::StructPtr.2179" = type { %"class.std::__1::unique_ptr.2180" }
%"class.std::__1::unique_ptr.2180" = type { %"class.std::__1::__compressed_pair.2181" }
%"class.std::__1::__compressed_pair.2181" = type { %"struct.std::__1::__compressed_pair_elem.2182" }
%"struct.std::__1::__compressed_pair_elem.2182" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.2183, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.2192", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.58", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.2208", %"class.std::__1::vector.110", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.2230", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.2235", %"class.absl::optional.2282", %"class.absl::optional", %"class.std::__1::vector.110", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.2183 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.2184", %"class.std::__1::vector.2185", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.2184" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.2185" = type { %"class.std::__1::__vector_base.2186" }
%"class.std::__1::__vector_base.2186" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.2187" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.2187" = type { %"struct.std::__1::__compressed_pair_elem.2188" }
%"struct.std::__1::__compressed_pair_elem.2188" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.mojo::StructPtr.2192" = type { %"class.std::__1::unique_ptr.2193" }
%"class.std::__1::unique_ptr.2193" = type { %"class.std::__1::__compressed_pair.2194" }
%"class.std::__1::__compressed_pair.2194" = type { %"struct.std::__1::__compressed_pair_elem.2195" }
%"struct.std::__1::__compressed_pair_elem.2195" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.2196", %"class.std::__1::vector.2196", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.2196" = type { %"class.std::__1::__vector_base.2197" }
%"class.std::__1::__vector_base.2197" = type { %"class.mojo::InlinedStructPtr.2198"*, %"class.mojo::InlinedStructPtr.2198"*, %"class.std::__1::__compressed_pair.2200" }
%"class.mojo::InlinedStructPtr.2198" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2200" = type { %"struct.std::__1::__compressed_pair_elem.2201" }
%"struct.std::__1::__compressed_pair_elem.2201" = type { %"class.mojo::InlinedStructPtr.2198"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.2208" = type { %"class.absl::optional_internal::optional_data.2209" }
%"class.absl::optional_internal::optional_data.2209" = type { %"class.absl::optional_internal::optional_data_base.2210" }
%"class.absl::optional_internal::optional_data_base.2210" = type { %"class.absl::optional_internal::optional_data_dtor_base.2211" }
%"class.absl::optional_internal::optional_data_dtor_base.2211" = type { i8, [7 x i8], %union.anon.2212 }
%union.anon.2212 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.160, %class.scoped_refptr.160, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.2213", %"class.std::__1::basic_string", %"class.std::__1::vector.2221", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%"class.std::__1::vector.2213" = type { %"class.std::__1::__vector_base.2214" }
%"class.std::__1::__vector_base.2214" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.2216" }
%"class.net::HashValue" = type { i32, %union.anon.2215 }
%union.anon.2215 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.2216" = type { %"struct.std::__1::__compressed_pair_elem.2217" }
%"struct.std::__1::__compressed_pair_elem.2217" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.2221" = type { %"class.std::__1::__vector_base.2222" }
%"class.std::__1::__vector_base.2222" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.2225" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.2223, i32, [4 x i8] }>
%class.scoped_refptr.2223 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.2224", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.2224" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2225" = type { %"struct.std::__1::__compressed_pair_elem.2226" }
%"struct.std::__1::__compressed_pair_elem.2226" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.absl::optional.2230" = type { %"class.absl::optional_internal::optional_data.2231" }
%"class.absl::optional_internal::optional_data.2231" = type { %"class.absl::optional_internal::optional_data_base.2232" }
%"class.absl::optional_internal::optional_data_base.2232" = type { %"class.absl::optional_internal::optional_data_dtor_base.2233" }
%"class.absl::optional_internal::optional_data_dtor_base.2233" = type { i8, %union.anon.2234 }
%union.anon.2234 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::StructPtr.2235" = type { %"class.std::__1::unique_ptr.2236" }
%"class.std::__1::unique_ptr.2236" = type { %"class.std::__1::__compressed_pair.2237" }
%"class.std::__1::__compressed_pair.2237" = type { %"struct.std::__1::__compressed_pair_elem.2238" }
%"struct.std::__1::__compressed_pair_elem.2238" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.81", %"class.mojo::StructPtr.2239", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.2246", %"class.base::TimeDelta", %"class.absl::optional.2246", i32, [4 x i8], %"class.std::__1::vector.2258", %"class.mojo::StructPtr.2272", i8, [7 x i8] }>
%"class.mojo::StructPtr.2239" = type { %"class.std::__1::unique_ptr.2240" }
%"class.std::__1::unique_ptr.2240" = type { %"class.std::__1::__compressed_pair.2241" }
%"class.std::__1::__compressed_pair.2241" = type { %"struct.std::__1::__compressed_pair_elem.2242" }
%"struct.std::__1::__compressed_pair_elem.2242" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"class.absl::optional.2246" = type { %"class.absl::optional_internal::optional_data.2247" }
%"class.absl::optional_internal::optional_data.2247" = type { %"class.absl::optional_internal::optional_data_base.2248" }
%"class.absl::optional_internal::optional_data_base.2248" = type { %"class.absl::optional_internal::optional_data_dtor_base.2249" }
%"class.absl::optional_internal::optional_data_dtor_base.2249" = type { i8, %union.anon.2250 }
%union.anon.2250 = type { %"class.std::__1::vector.2251" }
%"class.std::__1::vector.2251" = type { %"class.std::__1::__vector_base.2252" }
%"class.std::__1::__vector_base.2252" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2253" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.2254" }
%"struct.std::__1::__compressed_pair_elem.2254" = type { i32* }
%"class.std::__1::vector.2258" = type { %"class.std::__1::__vector_base.2259" }
%"class.std::__1::__vector_base.2259" = type { %"class.mojo::StructPtr.2260"*, %"class.mojo::StructPtr.2260"*, %"class.std::__1::__compressed_pair.2267" }
%"class.mojo::StructPtr.2260" = type { %"class.std::__1::unique_ptr.2261" }
%"class.std::__1::unique_ptr.2261" = type { %"class.std::__1::__compressed_pair.2262" }
%"class.std::__1::__compressed_pair.2262" = type { %"struct.std::__1::__compressed_pair_elem.2263" }
%"struct.std::__1::__compressed_pair_elem.2263" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.132" }
%"class.std::__1::__compressed_pair.2267" = type { %"struct.std::__1::__compressed_pair_elem.2268" }
%"struct.std::__1::__compressed_pair_elem.2268" = type { %"class.mojo::StructPtr.2260"* }
%"class.mojo::StructPtr.2272" = type { %"class.std::__1::unique_ptr.2273" }
%"class.std::__1::unique_ptr.2273" = type { %"class.std::__1::__compressed_pair.2274" }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.110"* }
%"class.absl::optional.2282" = type { %"class.absl::optional_internal::optional_data.2283" }
%"class.absl::optional_internal::optional_data.2283" = type { %"class.absl::optional_internal::optional_data_base.2284" }
%"class.absl::optional_internal::optional_data_base.2284" = type { %"class.absl::optional_internal::optional_data_dtor_base.2285" }
%"class.absl::optional_internal::optional_data_dtor_base.2285" = type { i8, %union.anon.2286 }
%union.anon.2286 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.2287" }
%"class.std::__1::unique_ptr.2287" = type { %"class.std::__1::__compressed_pair.2288" }
%"class.std::__1::__compressed_pair.2288" = type { %"struct.std::__1::__compressed_pair_elem.2289" }
%"struct.std::__1::__compressed_pair_elem.2289" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.110", %"class.absl::optional.132", %"class.std::__1::vector.110", %"class.std::__1::vector.110" }
%"class.std::__1::unique_ptr.2296" = type { %"class.std::__1::__compressed_pair.2297" }
%"class.std::__1::__compressed_pair.2297" = type { %"struct.std::__1::__compressed_pair_elem.2298" }
%"struct.std::__1::__compressed_pair_elem.2298" = type { %"class.content::NavigationEarlyHintsManager"* }
%"class.content::NavigationEarlyHintsManager" = type opaque
%"class.mojo::ReceiverSetBase.2302" = type { %"class.mojo::ReceiverSetState" }
%"class.base::WeakPtrFactory.2303" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Remote.2304" = type { %"class.mojo::internal::InterfacePtrState.2305" }
%"class.mojo::internal::InterfacePtrState.2305" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2306" }
%"class.std::__1::unique_ptr.2306" = type { %"class.std::__1::__compressed_pair.2307" }
%"class.std::__1::__compressed_pair.2307" = type { %"struct.std::__1::__compressed_pair_elem.2308" }
%"struct.std::__1::__compressed_pair_elem.2308" = type { %"class.blink::mojom::ManifestManagerProxy"* }
%"class.blink::mojom::ManifestManagerProxy" = type { %"class.blink::mojom::ManifestManager", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::ManifestManager" = type { i32 (...)** }
%"class.base::IDMap" = type <{ i32, [4 x i8], %"class.base::internal::flat_tree.2312", i32, [4 x i8], %"class.std::__1::unordered_map.2313", i8, [7 x i8] }>
%"class.base::internal::flat_tree.2312" = type { %"class.std::__1::vector.1160" }
%"class.std::__1::unordered_map.2313" = type { %"class.std::__1::__hash_table.2314" }
%"class.std::__1::__hash_table.2314" = type <{ %"class.std::__1::unique_ptr.2315", %"class.std::__1::__compressed_pair.2325", %"class.std::__1::__compressed_pair.2330", %"class.std::__1::__compressed_pair.2333", [4 x i8] }>
%"class.std::__1::unique_ptr.2315" = type { %"class.std::__1::__compressed_pair.2316" }
%"class.std::__1::__compressed_pair.2316" = type { %"struct.std::__1::__compressed_pair_elem.2317", %"struct.std::__1::__compressed_pair_elem.2319" }
%"struct.std::__1::__compressed_pair_elem.2317" = type { %"struct.std::__1::__hash_node_base.2318"** }
%"struct.std::__1::__hash_node_base.2318" = type { %"struct.std::__1::__hash_node_base.2318"* }
%"struct.std::__1::__compressed_pair_elem.2319" = type { %"class.std::__1::__bucket_list_deallocator.2320" }
%"class.std::__1::__bucket_list_deallocator.2320" = type { %"class.std::__1::__compressed_pair.2321" }
%"class.std::__1::__compressed_pair.2321" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.2325" = type { %"struct.std::__1::__compressed_pair_elem.2326" }
%"struct.std::__1::__compressed_pair_elem.2326" = type { %"struct.std::__1::__hash_node_base.2318" }
%"class.std::__1::__compressed_pair.2330" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.2333" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"class.mojo::AssociatedReceiver.2337" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::ManifestUrlChangeObserverStub", %"class.base::WeakPtrFactory.2338" }
%"class.blink::mojom::ManifestUrlChangeObserverStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::ManifestUrlChangeObserver"* }
%"class.base::WeakPtrFactory.2338" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.491, %"class.std::__1::unique_ptr.619", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.493, i32, [4 x i8] }>
%"class.base::OnceCallback.2345" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.2450" = type { %"class.std::__1::__vector_base.2451" }
%"class.std::__1::__vector_base.2451" = type { %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"*, %"class.std::__1::__compressed_pair.2452" }
%"class.std::__1::__compressed_pair.2452" = type { %"struct.std::__1::__compressed_pair_elem.2348" }
%"struct.std::__1::__compressed_pair_elem.2348" = type { %"class.base::OnceCallback.2345"* }
%"struct.blink::Manifest" = type <{ %"class.absl::optional.2352", %"class.absl::optional.2352", %"class.absl::optional.2352", %class.GURL, i32, [4 x i8], %"class.std::__1::vector.2357", i32, [4 x i8], %"class.std::__1::vector.2364", %"class.std::__1::vector.2364", %"class.std::__1::vector.2378", %"class.absl::optional.2385", %"class.std::__1::vector.2404", %"class.std::__1::vector.2422", %"class.std::__1::vector.2429", %"class.absl::optional.2436", %"class.std::__1::vector.2441", i8, [3 x i8], %"class.absl::optional.953", %"class.absl::optional.953", [4 x i8], %"class.absl::optional.2352", %class.GURL, i32, i8, [3 x i8] }>
%"class.std::__1::vector.2357" = type { %"class.std::__1::__vector_base.2358" }
%"class.std::__1::__vector_base.2358" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2359" }
%"class.std::__1::__compressed_pair.2359" = type { %"struct.std::__1::__compressed_pair_elem.2360" }
%"struct.std::__1::__compressed_pair_elem.2360" = type { i32* }
%"class.std::__1::vector.2364" = type { %"class.std::__1::__vector_base.2365" }
%"class.std::__1::__vector_base.2365" = type { %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"*, %"class.std::__1::__compressed_pair.2373" }
%"struct.blink::Manifest::ImageResource" = type { %class.GURL, %"class.std::__1::basic_string.150", %"class.std::__1::vector.2135", %"class.std::__1::vector.2366" }
%"class.std::__1::vector.2366" = type { %"class.std::__1::__vector_base.2367" }
%"class.std::__1::__vector_base.2367" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2368" }
%"class.std::__1::__compressed_pair.2368" = type { %"struct.std::__1::__compressed_pair_elem.2369" }
%"struct.std::__1::__compressed_pair_elem.2369" = type { i32* }
%"class.std::__1::__compressed_pair.2373" = type { %"struct.std::__1::__compressed_pair_elem.2374" }
%"struct.std::__1::__compressed_pair_elem.2374" = type { %"struct.blink::Manifest::ImageResource"* }
%"class.std::__1::vector.2378" = type { %"class.std::__1::__vector_base.2379" }
%"class.std::__1::__vector_base.2379" = type { %"struct.blink::Manifest::ShortcutItem"*, %"struct.blink::Manifest::ShortcutItem"*, %"class.std::__1::__compressed_pair.2380" }
%"struct.blink::Manifest::ShortcutItem" = type { %"class.std::__1::basic_string.150", %"class.absl::optional.2352", %"class.absl::optional.2352", %class.GURL, %"class.std::__1::vector.2364" }
%"class.std::__1::__compressed_pair.2380" = type { %"struct.std::__1::__compressed_pair_elem.2381" }
%"struct.std::__1::__compressed_pair_elem.2381" = type { %"struct.blink::Manifest::ShortcutItem"* }
%"class.absl::optional.2385" = type { %"class.absl::optional_internal::optional_data.2386" }
%"class.absl::optional_internal::optional_data.2386" = type { %"class.absl::optional_internal::optional_data_base.2387" }
%"class.absl::optional_internal::optional_data_base.2387" = type { %"class.absl::optional_internal::optional_data_dtor_base.2388" }
%"class.absl::optional_internal::optional_data_dtor_base.2388" = type { i8, %union.anon.2389 }
%union.anon.2389 = type { %"struct.blink::Manifest::ShareTarget" }
%"struct.blink::Manifest::ShareTarget" = type { %class.GURL, i32, i32, %"struct.blink::Manifest::ShareTargetParams" }
%"struct.blink::Manifest::ShareTargetParams" = type { %"class.absl::optional.2352", %"class.absl::optional.2352", %"class.absl::optional.2352", %"class.std::__1::vector.2390" }
%"class.std::__1::vector.2390" = type { %"class.std::__1::__vector_base.2391" }
%"class.std::__1::__vector_base.2391" = type { %"struct.blink::Manifest::FileFilter"*, %"struct.blink::Manifest::FileFilter"*, %"class.std::__1::__compressed_pair.2399" }
%"struct.blink::Manifest::FileFilter" = type { %"class.std::__1::basic_string.150", %"class.std::__1::vector.2392" }
%"class.std::__1::vector.2392" = type { %"class.std::__1::__vector_base.2393" }
%"class.std::__1::__vector_base.2393" = type { %"class.std::__1::basic_string.150"*, %"class.std::__1::basic_string.150"*, %"class.std::__1::__compressed_pair.2394" }
%"class.std::__1::__compressed_pair.2394" = type { %"struct.std::__1::__compressed_pair_elem.2395" }
%"struct.std::__1::__compressed_pair_elem.2395" = type { %"class.std::__1::basic_string.150"* }
%"class.std::__1::__compressed_pair.2399" = type { %"struct.std::__1::__compressed_pair_elem.2400" }
%"struct.std::__1::__compressed_pair_elem.2400" = type { %"struct.blink::Manifest::FileFilter"* }
%"class.std::__1::vector.2404" = type { %"class.std::__1::__vector_base.2405" }
%"class.std::__1::__vector_base.2405" = type { %"struct.blink::Manifest::FileHandler"*, %"struct.blink::Manifest::FileHandler"*, %"class.std::__1::__compressed_pair.2417" }
%"struct.blink::Manifest::FileHandler" = type { %class.GURL, %"class.std::__1::basic_string.150", %"class.std::__1::map.2406" }
%"class.std::__1::map.2406" = type { %"class.std::__1::__tree.2407" }
%"class.std::__1::__tree.2407" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2408", %"class.std::__1::__compressed_pair.2412" }
%"class.std::__1::__compressed_pair.2408" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.2412" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.2417" = type { %"struct.std::__1::__compressed_pair_elem.2418" }
%"struct.std::__1::__compressed_pair_elem.2418" = type { %"struct.blink::Manifest::FileHandler"* }
%"class.std::__1::vector.2422" = type { %"class.std::__1::__vector_base.2423" }
%"class.std::__1::__vector_base.2423" = type { %"struct.blink::Manifest::ProtocolHandler"*, %"struct.blink::Manifest::ProtocolHandler"*, %"class.std::__1::__compressed_pair.2424" }
%"struct.blink::Manifest::ProtocolHandler" = type { %"class.std::__1::basic_string.150", %class.GURL }
%"class.std::__1::__compressed_pair.2424" = type { %"struct.std::__1::__compressed_pair_elem.2425" }
%"struct.std::__1::__compressed_pair_elem.2425" = type { %"struct.blink::Manifest::ProtocolHandler"* }
%"class.std::__1::vector.2429" = type { %"class.std::__1::__vector_base.2430" }
%"class.std::__1::__vector_base.2430" = type { %"struct.blink::Manifest::UrlHandler"*, %"struct.blink::Manifest::UrlHandler"*, %"class.std::__1::__compressed_pair.2431" }
%"struct.blink::Manifest::UrlHandler" = type <{ %"class.url::Origin", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2431" = type { %"struct.std::__1::__compressed_pair_elem.2432" }
%"struct.std::__1::__compressed_pair_elem.2432" = type { %"struct.blink::Manifest::UrlHandler"* }
%"class.absl::optional.2436" = type { %"class.absl::optional_internal::optional_data.2437" }
%"class.absl::optional_internal::optional_data.2437" = type { %"class.absl::optional_internal::optional_data_base.2438" }
%"class.absl::optional_internal::optional_data_base.2438" = type { %"class.absl::optional_internal::optional_data_dtor_base.2439" }
%"class.absl::optional_internal::optional_data_dtor_base.2439" = type { i8, %union.anon.2440 }
%union.anon.2440 = type { %"struct.blink::Manifest::NoteTaking" }
%"struct.blink::Manifest::NoteTaking" = type { %class.GURL }
%"class.std::__1::vector.2441" = type { %"class.std::__1::__vector_base.2442" }
%"class.std::__1::__vector_base.2442" = type { %"struct.blink::Manifest::RelatedApplication"*, %"struct.blink::Manifest::RelatedApplication"*, %"class.std::__1::__compressed_pair.2443" }
%"struct.blink::Manifest::RelatedApplication" = type { %"class.absl::optional.2352", %class.GURL, %"class.absl::optional.2352" }
%"class.std::__1::__compressed_pair.2443" = type { %"struct.std::__1::__compressed_pair_elem.2444" }
%"struct.std::__1::__compressed_pair_elem.2444" = type { %"struct.blink::Manifest::RelatedApplication"* }
%"class.absl::optional.2352" = type { %"class.absl::optional_internal::optional_data.2353" }
%"class.absl::optional_internal::optional_data.2353" = type { %"class.absl::optional_internal::optional_data_base.2354" }
%"class.absl::optional_internal::optional_data_base.2354" = type { %"class.absl::optional_internal::optional_data_dtor_base.2355" }
%"class.absl::optional_internal::optional_data_dtor_base.2355" = type { i8, %union.anon.2356 }
%union.anon.2356 = type { %"class.std::__1::basic_string.150" }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.2318", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.2490" }
%"struct.std::__1::pair.2490" = type { i32, %"class.std::__1::unique_ptr.2346" }
%"class.std::__1::unique_ptr.2346" = type { %"class.std::__1::__compressed_pair.2347" }
%"class.std::__1::__compressed_pair.2347" = type { %"struct.std::__1::__compressed_pair_elem.2348" }
%"class.mojo::PendingAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.309", [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.2498" = type { i8 }
%"class.mojo::PendingReceiver.2449" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.base::OnceCallback.2448" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::unique_ptr.2499" = type { %"class.std::__1::__compressed_pair.2500" }
%"class.std::__1::__compressed_pair.2500" = type { %"struct.std::__1::__compressed_pair_elem.2501", %"struct.std::__1::__compressed_pair_elem.2502" }
%"struct.std::__1::__compressed_pair_elem.2501" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.2502" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.2328"*, i8, [7 x i8] }>
%"class.std::__1::allocator.2328" = type { i8 }
%"class.absl::optional.2456" = type { %"class.absl::optional_internal::optional_data.2457" }
%"class.absl::optional_internal::optional_data.2457" = type { %"class.absl::optional_internal::optional_data_base.2458" }
%"class.absl::optional_internal::optional_data_base.2458" = type { %"class.absl::optional_internal::optional_data_dtor_base.2459" }
%"class.absl::optional_internal::optional_data_dtor_base.2459" = type { i8, %union.anon.2460 }
%union.anon.2460 = type { %class.GURL }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.2467", %"class.mojo::internal::Buffer", %"class.std::__1::vector.2468", %"class.std::__1::vector.2476", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.2467" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.2468" = type { %"class.std::__1::__vector_base.2469" }
%"class.std::__1::__vector_base.2469" = type { %"class.mojo::ScopedHandleBase.2470"*, %"class.mojo::ScopedHandleBase.2470"*, %"class.std::__1::__compressed_pair.2471" }
%"class.mojo::ScopedHandleBase.2470" = type { %"class.mojo::Handle" }
%"class.std::__1::__compressed_pair.2471" = type { %"struct.std::__1::__compressed_pair_elem.2472" }
%"struct.std::__1::__compressed_pair_elem.2472" = type { %"class.mojo::ScopedHandleBase.2470"* }
%"class.std::__1::vector.2476" = type { %"class.std::__1::__vector_base.2477" }
%"class.std::__1::__vector_base.2477" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.2478" }
%"class.std::__1::__compressed_pair.2478" = type { %"struct.std::__1::__compressed_pair_elem.2479" }
%"struct.std::__1::__compressed_pair_elem.2479" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::MessageReceiverWithStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::PendingRemote.2512" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare" = type { i8 }
%"struct.std::__1::__split_buffer.2533" = type { i32*, i32*, i32*, %"class.std::__1::__compressed_pair.2534" }
%"class.std::__1::__compressed_pair.2534" = type { %"struct.std::__1::__compressed_pair_elem.1163", %"struct.std::__1::__compressed_pair_elem.2535" }
%"struct.std::__1::__compressed_pair_elem.2535" = type { %"class.std::__1::allocator.1165"* }
%"class.std::__1::allocator.1165" = type { i8 }

$_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiED2Ev = comdat any

$_ZN4mojo18AssociatedReceiverIN5blink5mojom25ManifestUrlChangeObserverENS_19RawPtrImplRefTraitsIS3_EEE4BindENS_25PendingAssociatedReceiverIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN15service_manager17InterfaceProvider12GetInterfaceIN5blink5mojom15ManifestManagerEEEvN4mojo15PendingReceiverIT_EE = comdat any

$_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiE5ClearEv = comdat any

$_ZNK4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiE6LookupEi = comdat any

$_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiE6RemoveEi = comdat any

$_ZN4mojo15MessageReceiverD2Ev = comdat any

$_ZN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEED0Ev = comdat any

$_ZN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEE6AcceptEPNS2_7MessageE = comdat any

$_ZN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEE19AcceptWithResponderEPNS2_7MessageENSt3__110unique_ptrINS2_25MessageReceiverWithStatusENS9_14default_deleteISB_EEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSX_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISH_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE8__rehashEm = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN7content19ManifestManagerHostEFviRK4GURLRKN5blink8ManifestEEJNS0_17UnretainedWrapperIS4_EEiEEEFvS7_SB_EE7RunOnceEPNS0_13BindStateBaseES7_SB_ = comdat any

$_ZN4base8internal9BindStateIMN7content19ManifestManagerHostEFviRK4GURLRKN5blink8ManifestEEJNS0_17UnretainedWrapperIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4mojo6RemoteIN5blink5mojom15ManifestManagerEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo6RemoteIN5blink5mojom15ManifestManagerEE4BindENS_13PendingRemoteIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom15ManifestManagerEE28set_connection_error_handlerEN4base12OnceCallbackIFvvEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN7content19ManifestManagerHostEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN7content19ManifestManagerHostEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE14__erase_uniqueIiEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISH_PvEEEE = comdat any

$_ZNSt3__16vectorIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_9allocatorISB_EEE21__push_back_slow_pathISB_EEvOT_ = comdat any

$_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEE6insertINS_5IDMapINS3_10unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS3_14default_deleteISN_EEEEiE11KeyIteratorEEEvT_ST_ = comdat any

$_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEE13append_uniqueIiEENS3_4pairINS3_11__wrap_iterIPiEEbEESF_SF_OT_ = comdat any

$_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEE21emplace_hint_key_argsIiJiEEENS3_4pairINS3_11__wrap_iterIPiEEbEENSD_IPKiEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJiEEENS_11__wrap_iterIPiEENS5_IPKiEEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJiEEEvDpOT_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJRKiEEEvDpOT_ = comdat any

$_ZTVN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEEE = comdat any

@_ZTVN7content19ManifestManagerHostE = hidden unnamed_addr constant { [6 x i8*], [5 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::ManifestManagerHost"*)* @_ZN7content19ManifestManagerHostD2Ev to i8*), i8* bitcast (void (%"class.content::ManifestManagerHost"*)* @_ZN7content19ManifestManagerHostD0Ev to i8*), i8* bitcast (%"class.base::SupportsUserData::Data"* (%"class.base::SupportsUserData::Data"*)* @_ZN4base16SupportsUserData4Data5CloneEv to i8*), i8* bitcast (void (%"class.content::ManifestManagerHost"*, %"class.absl::optional.2456"*)* @_ZN7content19ManifestManagerHost18ManifestUrlChangedERKN4absl8optionalI4GURLEE to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.content::ManifestManagerHost"*)* @_ZThn8_N7content19ManifestManagerHostD1Ev to i8*), i8* bitcast (void (%"class.content::ManifestManagerHost"*)* @_ZThn8_N7content19ManifestManagerHostD0Ev to i8*), i8* bitcast (void (%"class.content::ManifestManagerHost"*, %"class.absl::optional.2456"*)* @_ZThn8_N7content19ManifestManagerHost18ManifestUrlChangedERKN4absl8optionalI4GURLEE to i8*)] }, align 8
@_ZN5blink5mojom25ManifestUrlChangeObserver5Name_E = external constant [0 x i8], align 1
@_ZN7content19ManifestManagerHost12kUserDataKeyE = hidden constant i32 0, align 4
@_ZTVN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::ManifestUrlChangeObserverStub"*)* @_ZN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEED0Ev to i8*), i8* bitcast (i1 (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv to i8*), i8* bitcast (i1 (%"class.blink::mojom::ManifestUrlChangeObserverStub"*, %"class.mojo::Message"*)* @_ZN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEE6AcceptEPNS2_7MessageE to i8*), i8* bitcast (i1 (%"class.blink::mojom::ManifestUrlChangeObserverStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*)* @_ZN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEE19AcceptWithResponderEPNS2_7MessageENSt3__110unique_ptrINS2_25MessageReceiverWithStatusENS9_14default_deleteISB_EEEE to i8*)] }, comdat, align 8
@_ZTVN5blink5mojom41ManifestUrlChangeObserverRequestValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZN5blink5mojom15ManifestManager5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom32ManifestManagerResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN7content19ManifestManagerHostC1EPNS_15RenderFrameHostE = hidden unnamed_addr alias void (%"class.content::ManifestManagerHost"*, %"class.content::RenderFrameHost"*), void (%"class.content::ManifestManagerHost"*, %"class.content::RenderFrameHost"*)* @_ZN7content19ManifestManagerHostC2EPNS_15RenderFrameHostE
@_ZN7content19ManifestManagerHostD1Ev = hidden unnamed_addr alias void (%"class.content::ManifestManagerHost"*), void (%"class.content::ManifestManagerHost"*)* @_ZN7content19ManifestManagerHostD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ManifestManagerHostC2EPNS_15RenderFrameHostE(%"class.content::ManifestManagerHost"*, %"class.content::RenderFrameHost"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 1
  %4 = bitcast %"class.content::ManifestManagerHost"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN7content19ManifestManagerHostE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN7content19ManifestManagerHostE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 2
  %6 = bitcast %"class.content::RenderFrameHostImpl"** %5 to %"class.content::RenderFrameHost"**
  store %"class.content::RenderFrameHost"* %1, %"class.content::RenderFrameHost"** %6, align 8
  %7 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3
  %8 = bitcast %"class.mojo::Remote.2304"* %7 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %8) #12
  %9 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.2306"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 2
  %13 = bitcast %"class.base::internal::flat_tree.2312"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #12
  %14 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 3
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 5
  %16 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 5, i32 0, i32 3
  %17 = bitcast %"class.std::__1::__compressed_pair.2333"* %16 to i32*
  %18 = bitcast %"class.std::__1::unordered_map.2313"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %17, align 4
  %19 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 6
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.mojo::AssociatedReceiver.2337", %"class.mojo::AssociatedReceiver.2337"* %20, i64 0, i32 0
  tail call void @_ZN4mojo8internal22AssociatedReceiverBaseC2Ev(%"class.mojo::internal::AssociatedReceiverBase"* %21) #12
  %22 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 5, i32 2, i32 0
  %24 = ptrtoint %"class.mojo::AssociatedReceiver.2337"* %20 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %23, i64 %24) #12
  %25 = ptrtoint %"class.blink::mojom::ManifestUrlChangeObserver"* %3 to i64
  %26 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 5, i32 1, i32 1
  %27 = bitcast %"class.blink::mojom::ManifestUrlChangeObserver"** %26 to i64*
  store i64 %25, i64* %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ManifestManagerHostD2Ev(%"class.content::ManifestManagerHost"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.content::ManifestManagerHost"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN7content19ManifestManagerHostE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN7content19ManifestManagerHostE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  tail call void @_ZN7content19ManifestManagerHost24DispatchPendingCallbacksEv(%"class.content::ManifestManagerHost"* %0)
  %3 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #12
  %4 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4mojo8internal22AssociatedReceiverBaseD2Ev(%"class.mojo::internal::AssociatedReceiverBase"* %4) #12
  %5 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4
  tail call void @_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiED2Ev(%"class.base::IDMap"* %5) #12
  %6 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %7, align 8
  store %"class.blink::mojom::ManifestManagerProxy"* null, %"class.blink::mojom::ManifestManagerProxy"** %7, align 8
  %9 = icmp eq %"class.blink::mojom::ManifestManagerProxy"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::mojom::ManifestManagerProxy"* %8 to void (%"class.blink::mojom::ManifestManagerProxy"*)***
  %12 = load void (%"class.blink::mojom::ManifestManagerProxy"*)**, void (%"class.blink::mojom::ManifestManagerProxy"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %12, i64 1
  %14 = load void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %13, align 8
  tail call void %14(%"class.blink::mojom::ManifestManagerProxy"* nonnull %8) #12
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.mojo::Remote.2304"* %6 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %16) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ManifestManagerHost24DispatchPendingCallbacksEv(%"class.content::ManifestManagerHost"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.2345", align 8
  %3 = alloca %"class.std::__1::vector.2450", align 8
  %4 = alloca %class.GURL, align 8
  %5 = alloca %"struct.blink::Manifest", align 8
  %6 = bitcast %"class.std::__1::vector.2450"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::vector.2450", %"class.std::__1::vector.2450"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.2450", %"class.std::__1::vector.2450"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.2450", %"class.std::__1::vector.2450"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast %"struct.std::__1::__hash_node_base.2318"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %10, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %78, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i32*, i32** %19, align 8
  %23 = load i64, i64* %21, align 8
  %24 = ptrtoint i32* %22 to i64
  %25 = sub i64 %23, %24
  %26 = icmp eq i64 %25, 0
  %27 = inttoptr i64 %23 to i32*
  %28 = ashr exact i64 %25, 2
  br label %29

29:                                               ; preds = %66, %18
  %30 = phi i64 [ %13, %18 ], [ %67, %66 ]
  %31 = inttoptr i64 %30 to %"struct.std::__1::__hash_node"*
  %32 = inttoptr i64 %30 to i64*
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %31, i64 0, i32 2, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  br i1 %26, label %50, label %35

35:                                               ; preds = %29, %35
  %36 = phi i32* [ %46, %35 ], [ %22, %29 ]
  %37 = phi i64 [ %45, %35 ], [ %28, %29 ]
  %38 = lshr i64 %37, 1
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, %34
  %42 = getelementptr inbounds i32, i32* %39, i64 1
  %43 = xor i64 %38, -1
  %44 = add i64 %37, %43
  %45 = select i1 %41, i64 %44, i64 %38
  %46 = select i1 %41, i32* %42, i32* %36
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %35

48:                                               ; preds = %35
  %49 = ptrtoint i32* %46 to i64
  br label %50

50:                                               ; preds = %48, %29
  %51 = phi i64 [ %49, %48 ], [ %24, %29 ]
  %52 = phi i32* [ %46, %48 ], [ %22, %29 ]
  %53 = icmp eq i32* %52, %27
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = load i32, i32* %52, align 4
  %56 = icmp sgt i32 %55, %34
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds i32, i32* %52, i64 1
  %59 = ptrtoint i32* %58 to i64
  br label %60

60:                                               ; preds = %57, %54, %50
  %61 = phi i64 [ %59, %57 ], [ %51, %50 ], [ %51, %54 ]
  %62 = inttoptr i64 %61 to i32*
  %63 = icmp eq i32* %52, %62
  %64 = select i1 %63, i32* %27, i32* %52
  %65 = icmp eq i32* %64, %27
  br i1 %65, label %69, label %66

66:                                               ; preds = %60
  %67 = load i64, i64* %32, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %78, label %29

69:                                               ; preds = %60
  %70 = icmp eq i64 %30, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %74 = bitcast i32** %73 to i64*
  %75 = bitcast %"class.base::OnceCallback.2345"** %8 to i64*
  br label %114

76:                                               ; preds = %176, %228, %225
  %77 = load i32, i32* %14, align 8
  br label %78

78:                                               ; preds = %66, %1, %76, %69
  %79 = phi i32 [ %77, %76 ], [ %16, %69 ], [ %16, %1 ], [ %16, %66 ]
  %80 = add nsw i32 %79, -1
  store i32 %80, i32* %14, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %104

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 2
  %84 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %87 = load i32*, i32** %86, align 8
  %88 = icmp eq i32* %85, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %82
  %90 = ptrtoint i32* %85 to i64
  br label %101

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 5, i32 0
  br label %96

93:                                               ; preds = %96
  %94 = bitcast %"class.base::internal::flat_tree.2312"* %83 to i64*
  %95 = load i64, i64* %94, align 8
  br label %101

96:                                               ; preds = %96, %91
  %97 = phi i32* [ %85, %91 ], [ %99, %96 ]
  %98 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table.2314"* %92, i32* dereferenceable(4) %97) #12
  %99 = getelementptr inbounds i32, i32* %97, i64 1
  %100 = icmp eq i32* %99, %87
  br i1 %100, label %93, label %96

101:                                              ; preds = %93, %89
  %102 = phi i64 [ %95, %93 ], [ %90, %89 ]
  %103 = bitcast i32** %86 to i64*
  store i64 %102, i64* %103, align 8
  br label %104

104:                                              ; preds = %78, %101
  call void @_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiE5ClearEv(%"class.base::IDMap"* %10)
  %105 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %7, align 8
  %106 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %8, align 8
  %107 = icmp eq %"class.base::OnceCallback.2345"* %105, %106
  br i1 %107, label %232, label %108

108:                                              ; preds = %104
  %109 = bitcast %class.GURL* %4 to i8*
  %110 = getelementptr inbounds %"struct.blink::Manifest", %"struct.blink::Manifest"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.base::OnceCallback.2345"* %2 to i8*
  %112 = bitcast %"class.base::OnceCallback.2345"* %2 to i64*
  %113 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %2, i64 0, i32 0
  br label %250

114:                                              ; preds = %71, %228
  %115 = phi i64 [ %30, %71 ], [ %189, %228 ]
  %116 = inttoptr i64 %115 to %"struct.std::__1::__hash_node"*
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %116, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %118 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %117, align 8
  %119 = icmp eq %"class.base::OnceCallback.2345"* %118, null
  br i1 %119, label %163, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %116, i64 0, i32 2, i32 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = load i32*, i32** %72, align 8
  %124 = load i64, i64* %74, align 8
  %125 = ptrtoint i32* %123 to i64
  %126 = sub i64 %124, %125
  %127 = icmp eq i64 %126, 0
  %128 = inttoptr i64 %124 to i32*
  br i1 %127, label %146, label %129

129:                                              ; preds = %120
  %130 = ashr exact i64 %126, 2
  br label %131

131:                                              ; preds = %131, %129
  %132 = phi i32* [ %123, %129 ], [ %142, %131 ]
  %133 = phi i64 [ %130, %129 ], [ %141, %131 ]
  %134 = lshr i64 %133, 1
  %135 = getelementptr inbounds i32, i32* %132, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp slt i32 %136, %122
  %138 = getelementptr inbounds i32, i32* %135, i64 1
  %139 = xor i64 %134, -1
  %140 = add i64 %133, %139
  %141 = select i1 %137, i64 %140, i64 %134
  %142 = select i1 %137, i32* %138, i32* %132
  %143 = icmp eq i64 %141, 0
  br i1 %143, label %144, label %131

144:                                              ; preds = %131
  %145 = ptrtoint i32* %142 to i64
  br label %146

146:                                              ; preds = %144, %120
  %147 = phi i64 [ %145, %144 ], [ %125, %120 ]
  %148 = phi i32* [ %142, %144 ], [ %123, %120 ]
  %149 = icmp eq i32* %148, %128
  br i1 %149, label %156, label %150

150:                                              ; preds = %146
  %151 = load i32, i32* %148, align 4
  %152 = icmp sgt i32 %151, %122
  br i1 %152, label %156, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds i32, i32* %148, i64 1
  %155 = ptrtoint i32* %154 to i64
  br label %156

156:                                              ; preds = %153, %150, %146
  %157 = phi i64 [ %155, %153 ], [ %147, %146 ], [ %147, %150 ]
  %158 = inttoptr i64 %157 to i32*
  %159 = icmp eq i32* %148, %158
  %160 = select i1 %159, i32* %128, i32* %148
  %161 = icmp eq i32* %160, %128
  %162 = select i1 %161, %"class.base::OnceCallback.2345"* %118, %"class.base::OnceCallback.2345"* null
  br label %163

163:                                              ; preds = %114, %156
  %164 = phi %"class.base::OnceCallback.2345"* [ %162, %156 ], [ null, %114 ]
  %165 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %8, align 8
  %166 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %9, align 8
  %167 = icmp ult %"class.base::OnceCallback.2345"* %165, %166
  br i1 %167, label %168, label %175

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %164, i64 0, i32 0, i32 0, i32 0
  %170 = bitcast %"class.base::OnceCallback.2345"* %164 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = bitcast %"class.base::OnceCallback.2345"* %165 to i64*
  store i64 %171, i64* %172, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %169, align 8
  %173 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %165, i64 1
  %174 = ptrtoint %"class.base::OnceCallback.2345"* %173 to i64
  store i64 %174, i64* %75, align 8
  br label %176

175:                                              ; preds = %163
  call void @_ZNSt3__16vectorIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_9allocatorISB_EEE21__push_back_slow_pathISB_EEvOT_(%"class.std::__1::vector.2450"* nonnull %3, %"class.base::OnceCallback.2345"* dereferenceable(8) %164) #12
  br label %176

176:                                              ; preds = %168, %175
  %177 = inttoptr i64 %115 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %76, label %180

180:                                              ; preds = %176
  %181 = load i32*, i32** %72, align 8
  %182 = load i64, i64* %74, align 8
  %183 = ptrtoint i32* %181 to i64
  %184 = sub i64 %182, %183
  %185 = icmp eq i64 %184, 0
  %186 = inttoptr i64 %182 to i32*
  %187 = ashr exact i64 %184, 2
  br label %188

188:                                              ; preds = %225, %180
  %189 = phi i64 [ %178, %180 ], [ %226, %225 ]
  %190 = inttoptr i64 %189 to %"struct.std::__1::__hash_node"*
  %191 = inttoptr i64 %189 to i64*
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %190, i64 0, i32 2, i32 0, i32 0
  %193 = load i32, i32* %192, align 8
  br i1 %185, label %209, label %194

194:                                              ; preds = %188, %194
  %195 = phi i32* [ %205, %194 ], [ %181, %188 ]
  %196 = phi i64 [ %204, %194 ], [ %187, %188 ]
  %197 = lshr i64 %196, 1
  %198 = getelementptr inbounds i32, i32* %195, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = icmp slt i32 %199, %193
  %201 = getelementptr inbounds i32, i32* %198, i64 1
  %202 = xor i64 %197, -1
  %203 = add i64 %196, %202
  %204 = select i1 %200, i64 %203, i64 %197
  %205 = select i1 %200, i32* %201, i32* %195
  %206 = icmp eq i64 %204, 0
  br i1 %206, label %207, label %194

207:                                              ; preds = %194
  %208 = ptrtoint i32* %205 to i64
  br label %209

209:                                              ; preds = %207, %188
  %210 = phi i64 [ %208, %207 ], [ %183, %188 ]
  %211 = phi i32* [ %205, %207 ], [ %181, %188 ]
  %212 = icmp eq i32* %211, %186
  br i1 %212, label %219, label %213

213:                                              ; preds = %209
  %214 = load i32, i32* %211, align 4
  %215 = icmp sgt i32 %214, %193
  br i1 %215, label %219, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds i32, i32* %211, i64 1
  %218 = ptrtoint i32* %217 to i64
  br label %219

219:                                              ; preds = %216, %213, %209
  %220 = phi i64 [ %218, %216 ], [ %210, %209 ], [ %210, %213 ]
  %221 = inttoptr i64 %220 to i32*
  %222 = icmp eq i32* %211, %221
  %223 = select i1 %222, i32* %186, i32* %211
  %224 = icmp eq i32* %223, %186
  br i1 %224, label %228, label %225

225:                                              ; preds = %219
  %226 = load i64, i64* %191, align 8
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %76, label %188

228:                                              ; preds = %219
  %229 = icmp eq i64 %189, 0
  br i1 %229, label %76, label %114

230:                                              ; preds = %250
  %231 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %7, align 8
  br label %232

232:                                              ; preds = %230, %104
  %233 = phi %"class.base::OnceCallback.2345"* [ %231, %230 ], [ %105, %104 ]
  %234 = icmp eq %"class.base::OnceCallback.2345"* %233, null
  br i1 %234, label %249, label %235

235:                                              ; preds = %232
  %236 = bitcast %"class.base::OnceCallback.2345"* %233 to i8*
  %237 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %8, align 8
  %238 = icmp eq %"class.base::OnceCallback.2345"* %237, %233
  br i1 %238, label %247, label %239

239:                                              ; preds = %235, %239
  %240 = phi %"class.base::OnceCallback.2345"* [ %241, %239 ], [ %237, %235 ]
  %241 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %240, i64 -1
  %242 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %241, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %242) #12
  %243 = icmp eq %"class.base::OnceCallback.2345"* %241, %233
  br i1 %243, label %244, label %239

244:                                              ; preds = %239
  %245 = bitcast %"class.std::__1::vector.2450"* %3 to i8**
  %246 = load i8*, i8** %245, align 8
  br label %247

247:                                              ; preds = %244, %235
  %248 = phi i8* [ %246, %244 ], [ %236, %235 ]
  store %"class.base::OnceCallback.2345"* %233, %"class.base::OnceCallback.2345"** %8, align 8
  call void @_ZdlPv(i8* %248) #13
  br label %249

249:                                              ; preds = %232, %247
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void

250:                                              ; preds = %108, %250
  %251 = phi %"class.base::OnceCallback.2345"* [ %105, %108 ], [ %259, %250 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %109) #12
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %4) #12
  call void @llvm.lifetime.start.p0i8(i64 992, i8* nonnull %110) #12
  call void @_ZN5blink8ManifestC1Ev(%"struct.blink::Manifest"* nonnull %5) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #12
  %252 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %251, i64 0, i32 0, i32 0, i32 0
  %253 = bitcast %"class.base::OnceCallback.2345"* %251 to i64*
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %112, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %252, align 8
  %255 = inttoptr i64 %254 to %"class.base::internal::BindStateBase"*
  %256 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %255, i64 0, i32 1
  %257 = bitcast void ()** %256 to void (%"class.base::internal::BindStateBase"*, %class.GURL*, %"struct.blink::Manifest"*)**
  %258 = load void (%"class.base::internal::BindStateBase"*, %class.GURL*, %"struct.blink::Manifest"*)*, void (%"class.base::internal::BindStateBase"*, %class.GURL*, %"struct.blink::Manifest"*)** %257, align 8
  call void %258(%"class.base::internal::BindStateBase"* %255, %class.GURL* nonnull dereferenceable(120) %4, %"struct.blink::Manifest"* nonnull dereferenceable(992) %5) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %113) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #12
  call void @_ZN5blink8ManifestD1Ev(%"struct.blink::Manifest"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 992, i8* nonnull %110) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %109) #12
  %259 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %251, i64 1
  %260 = icmp eq %"class.base::OnceCallback.2345"* %259, %106
  br i1 %260, label %230, label %250
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiED2Ev(%"class.base::IDMap"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1, %16
  %6 = phi %"struct.std::__1::__hash_node_base.2318"* [ %8, %16 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %6, i64 3
  %10 = bitcast %"struct.std::__1::__hash_node_base.2318"* %9 to %"class.base::OnceCallback.2345"**
  %11 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %10, align 8
  store %"class.base::OnceCallback.2345"* null, %"class.base::OnceCallback.2345"** %10, align 8
  %12 = icmp eq %"class.base::OnceCallback.2345"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #12
  %15 = bitcast %"class.base::OnceCallback.2345"* %11 to i8*
  tail call void @_ZdlPv(i8* %15) #13
  br label %16

16:                                               ; preds = %13, %5
  %17 = bitcast %"struct.std::__1::__hash_node_base.2318"* %6 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  %18 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %8, null
  br i1 %18, label %19, label %5

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %20, align 8
  store %"struct.std::__1::__hash_node_base.2318"** null, %"struct.std::__1::__hash_node_base.2318"*** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.2318"** %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"struct.std::__1::__hash_node_base.2318"** %21 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %32 = bitcast i32** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %25, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N7content19ManifestManagerHostD1Ev(%"class.content::ManifestManagerHost"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 -1, i32 5, i32 2, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.content::ManifestManagerHost"*
  %4 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN7content19ManifestManagerHostE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN7content19ManifestManagerHostE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  tail call void @_ZN7content19ManifestManagerHost24DispatchPendingCallbacksEv(%"class.content::ManifestManagerHost"* %3) #12
  %5 = getelementptr inbounds i64, i64* %2, i64 23
  %6 = bitcast i64* %5 to %"class.base::internal::WeakPtrFactoryBase"*
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %6) #12
  %7 = getelementptr inbounds i64, i64* %2, i64 20
  %8 = bitcast i64* %7 to %"class.mojo::internal::AssociatedReceiverBase"*
  tail call void @_ZN4mojo8internal22AssociatedReceiverBaseD2Ev(%"class.mojo::internal::AssociatedReceiverBase"* %8) #12
  %9 = getelementptr inbounds i64, i64* %2, i64 9
  %10 = bitcast i64* %9 to %"class.base::IDMap"*
  tail call void @_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiED2Ev(%"class.base::IDMap"* %10) #12
  %11 = getelementptr inbounds i64, i64* %2, i64 3
  %12 = getelementptr inbounds i64, i64* %2, i64 8
  %13 = bitcast i64* %12 to %"class.blink::mojom::ManifestManagerProxy"**
  %14 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %13, align 8
  store %"class.blink::mojom::ManifestManagerProxy"* null, %"class.blink::mojom::ManifestManagerProxy"** %13, align 8
  %15 = icmp eq %"class.blink::mojom::ManifestManagerProxy"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::mojom::ManifestManagerProxy"* %14 to void (%"class.blink::mojom::ManifestManagerProxy"*)***
  %18 = load void (%"class.blink::mojom::ManifestManagerProxy"*)**, void (%"class.blink::mojom::ManifestManagerProxy"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %18, i64 1
  %20 = load void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %19, align 8
  tail call void %20(%"class.blink::mojom::ManifestManagerProxy"* nonnull %14) #12
  br label %21

21:                                               ; preds = %1, %16
  %22 = bitcast i64* %11 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %22) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ManifestManagerHostD0Ev(%"class.content::ManifestManagerHost"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.content::ManifestManagerHost"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN7content19ManifestManagerHostE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN7content19ManifestManagerHostE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  tail call void @_ZN7content19ManifestManagerHost24DispatchPendingCallbacksEv(%"class.content::ManifestManagerHost"* %0) #12
  %3 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #12
  %4 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4mojo8internal22AssociatedReceiverBaseD2Ev(%"class.mojo::internal::AssociatedReceiverBase"* %4) #12
  %5 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4
  tail call void @_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiED2Ev(%"class.base::IDMap"* %5) #12
  %6 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %7, align 8
  store %"class.blink::mojom::ManifestManagerProxy"* null, %"class.blink::mojom::ManifestManagerProxy"** %7, align 8
  %9 = icmp eq %"class.blink::mojom::ManifestManagerProxy"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::mojom::ManifestManagerProxy"* %8 to void (%"class.blink::mojom::ManifestManagerProxy"*)***
  %12 = load void (%"class.blink::mojom::ManifestManagerProxy"*)**, void (%"class.blink::mojom::ManifestManagerProxy"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %12, i64 1
  %14 = load void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %13, align 8
  tail call void %14(%"class.blink::mojom::ManifestManagerProxy"* nonnull %8) #12
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.mojo::Remote.2304"* %6 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %16) #12
  %17 = bitcast %"class.content::ManifestManagerHost"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N7content19ManifestManagerHostD0Ev(%"class.content::ManifestManagerHost"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 -1, i32 5, i32 2, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.content::ManifestManagerHost"*
  tail call void @_ZN7content19ManifestManagerHostD0Ev(%"class.content::ManifestManagerHost"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ManifestManagerHost12BindObserverEN4mojo25PendingAssociatedReceiverIN5blink5mojom25ManifestUrlChangeObserverEEE(%"class.content::ManifestManagerHost"*, %"class.mojo::PendingAssociatedReceiver"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingAssociatedReceiver", align 8
  %4 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %5, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %6) #12
  call void @_ZN4mojo18AssociatedReceiverIN5blink5mojom25ManifestUrlChangeObserverENS_19RawPtrImplRefTraitsIS3_EEE4BindENS_25PendingAssociatedReceiverIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedReceiver.2337"* %4, %"class.mojo::PendingAssociatedReceiver"* nonnull %3, %"class.base::SequencedTaskRunner"* null)
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %5) #12
  %7 = getelementptr inbounds %"class.mojo::AssociatedReceiver.2337", %"class.mojo::AssociatedReceiver.2337"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 2
  %9 = load %"class.content::RenderFrameHostImpl"*, %"class.content::RenderFrameHostImpl"** %8, align 8
  %10 = call %"class.mojo::MessageFilter"* @_ZN7content19RenderFrameHostImpl40CreateMessageFilterForAssociatedReceiverEPKc(%"class.content::RenderFrameHostImpl"* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom25ManifestUrlChangeObserver5Name_E, i64 0, i64 0)) #12
  call void @_ZN4mojo8internal22AssociatedReceiverBase9SetFilterENSt3__110unique_ptrINS_13MessageFilterENS2_14default_deleteIS4_EEEE(%"class.mojo::internal::AssociatedReceiverBase"* %7, %"class.mojo::MessageFilter"* %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo18AssociatedReceiverIN5blink5mojom25ManifestUrlChangeObserverENS_19RawPtrImplRefTraitsIS3_EEE4BindENS_25PendingAssociatedReceiverIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedReceiver.2337"*, %"class.mojo::PendingAssociatedReceiver"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %1, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4mojo29ScopedInterfaceEndpointHandle8is_validEv(%"class.mojo::ScopedInterfaceEndpointHandle"* %5) #12
  %7 = getelementptr inbounds %"class.mojo::AssociatedReceiver.2337", %"class.mojo::AssociatedReceiver.2337"* %0, i64 0, i32 0
  br i1 %6, label %8, label %13

8:                                                ; preds = %3
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %5) #12
  %9 = getelementptr inbounds %"class.mojo::AssociatedReceiver.2337", %"class.mojo::AssociatedReceiver.2337"* %0, i64 0, i32 1, i32 0
  %10 = call i8* @_Znwm(i64 8) #13
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom41ManifestUrlChangeObserverRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = bitcast i8* %10 to %"class.mojo::MessageReceiver"*
  call void @_ZN4mojo8internal22AssociatedReceiverBase8BindImplENS_29ScopedInterfaceEndpointHandleEPNS_34MessageReceiverWithResponderStatusENSt3__110unique_ptrINS_15MessageReceiverENS5_14default_deleteIS7_EEEEb13scoped_refptrIN4base19SequencedTaskRunnerEEjPKc(%"class.mojo::internal::AssociatedReceiverBase"* %7, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, %"class.mojo::MessageReceiverWithResponderStatus"* %9, %"class.mojo::MessageReceiver"* nonnull %12, i1 zeroext false, %"class.base::SequencedTaskRunner"* %2, i32 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom25ManifestUrlChangeObserver5Name_E, i64 0, i64 0)) #12
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #12
  br label %23

13:                                               ; preds = %3
  tail call void @_ZN4mojo8internal22AssociatedReceiverBase5resetEv(%"class.mojo::internal::AssociatedReceiverBase"* %7) #12
  %14 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.309", %"class.base::RefCountedThreadSafe.309"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.309", %"class.base::RefCountedThreadSafe.309"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe.309"* %21 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %22) #12
  br label %23

23:                                               ; preds = %8, %13, %15, %20
  ret void
}

declare void @_ZN4mojo8internal22AssociatedReceiverBase9SetFilterENSt3__110unique_ptrINS_13MessageFilterENS2_14default_deleteIS4_EEEE(%"class.mojo::internal::AssociatedReceiverBase"*, %"class.mojo::MessageFilter"*) local_unnamed_addr #2

declare %"class.mojo::MessageFilter"* @_ZN7content19RenderFrameHostImpl40CreateMessageFilterForAssociatedReceiverEPKc(%"class.content::RenderFrameHostImpl"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ManifestManagerHost11GetManifestEN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEE(%"class.content::ManifestManagerHost"*, %"class.base::OnceCallback.2345"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.2498", align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.base::OnceCallback.2345", align 8
  %7 = tail call dereferenceable(8) %"class.blink::mojom::ManifestManager"* @_ZN7content19ManifestManagerHost18GetManifestManagerEv(%"class.content::ManifestManagerHost"* %0)
  %8 = tail call i8* @_Znwm(i64 8) #13
  %9 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.2345"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 3
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %5, align 4
  %17 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4, i32 5, i32 0
  %18 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::tuple.2498", %"class.std::__1::tuple.2498"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #12
  %21 = call { %"struct.std::__1::__hash_node_base.2318"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSX_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISH_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.2314"* %17, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.2498"* nonnull dereferenceable(1) %4) #12
  %22 = extractvalue { %"struct.std::__1::__hash_node_base.2318"*, i8 } %21, 0
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %22, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %24 = bitcast %"struct.std::__1::__hash_node_base.2318"* %23 to %"class.base::OnceCallback.2345"**
  %25 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.2318"* %23 to i64*
  store i64 %13, i64* %26, align 8
  %27 = icmp eq %"class.base::OnceCallback.2345"* %25, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %25, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #12
  %30 = bitcast %"class.base::OnceCallback.2345"* %25 to i8*
  call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %2, %28
  %32 = load i32, i32* %15, align 8
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %15, align 8
  %34 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #12
  %35 = ptrtoint %"class.content::ManifestManagerHost"* %0 to i64
  %36 = call i8* @_Znwm(i64 64) #13, !noalias !2
  %37 = bitcast i8* %36 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %37, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.GURL*, %"struct.blink::Manifest"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content19ManifestManagerHostEFviRK4GURLRKN5blink8ManifestEEJNS0_17UnretainedWrapperIS4_EEiEEEFvS7_SB_EE7RunOnceEPNS0_13BindStateBaseES7_SB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content19ManifestManagerHostEFviRK4GURLRKN5blink8ManifestEEJNS0_17UnretainedWrapperIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !2
  %38 = getelementptr inbounds i8, i8* %36, i64 32
  %39 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.content::ManifestManagerHost"*, i32, %class.GURL*, %"struct.blink::Manifest"*)* @_ZN7content19ManifestManagerHost25OnRequestManifestResponseEiRK4GURLRKN5blink8ManifestE to i64), i64 0>, <2 x i64>* %39, align 8, !noalias !2
  %40 = getelementptr inbounds i8, i8* %36, i64 48
  %41 = bitcast i8* %40 to i64*
  store i64 %35, i64* %41, align 8, !noalias !2
  %42 = getelementptr inbounds i8, i8* %36, i64 56
  %43 = bitcast i8* %42 to i32*
  store i32 %34, i32* %43, align 4, !noalias !2
  %44 = bitcast %"class.base::OnceCallback.2345"* %6 to i8**
  store i8* %36, i8** %44, align 8, !alias.scope !2
  %45 = bitcast %"class.blink::mojom::ManifestManager"* %7 to void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2345"*)***
  %46 = load void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2345"*)**, void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2345"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2345"*)*, void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2345"*)** %46, i64 2
  %48 = load void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2345"*)*, void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2345"*)** %47, align 8
  call void %48(%"class.blink::mojom::ManifestManager"* %7, %"class.base::OnceCallback.2345"* nonnull %6) #12
  %49 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::mojom::ManifestManager"* @_ZN7content19ManifestManagerHost18GetManifestManagerEv(%"class.content::ManifestManagerHost"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.507", align 8
  %3 = alloca %"class.mojo::PendingReceiver.2449", align 8
  %4 = alloca %"class.base::OnceCallback.507", align 8
  %5 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %10, align 8
  %12 = icmp eq %"class.mojo::InterfaceEndpointClient"* %11, null
  br i1 %12, label %13, label %45

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 2
  %15 = load %"class.content::RenderFrameHostImpl"*, %"class.content::RenderFrameHostImpl"** %14, align 8
  %16 = bitcast %"class.content::RenderFrameHostImpl"* %15 to %"class.service_manager::InterfaceProvider"* (%"class.content::RenderFrameHostImpl"*)***
  %17 = load %"class.service_manager::InterfaceProvider"* (%"class.content::RenderFrameHostImpl"*)**, %"class.service_manager::InterfaceProvider"* (%"class.content::RenderFrameHostImpl"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.service_manager::InterfaceProvider"* (%"class.content::RenderFrameHostImpl"*)*, %"class.service_manager::InterfaceProvider"* (%"class.content::RenderFrameHostImpl"*)** %17, i64 53
  %19 = load %"class.service_manager::InterfaceProvider"* (%"class.content::RenderFrameHostImpl"*)*, %"class.service_manager::InterfaceProvider"* (%"class.content::RenderFrameHostImpl"*)** %18, align 8
  %20 = tail call %"class.service_manager::InterfaceProvider"* %19(%"class.content::RenderFrameHostImpl"* %15) #12
  call void @_ZN4mojo6RemoteIN5blink5mojom15ManifestManagerEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver.2449"* nonnull sret %3, %"class.mojo::Remote.2304"* %5, %"class.base::SequencedTaskRunner"* null) #12
  call void @_ZN15service_manager17InterfaceProvider12GetInterfaceIN5blink5mojom15ManifestManagerEEEvN4mojo15PendingReceiverIT_EE(%"class.service_manager::InterfaceProvider"* %20, %"class.mojo::PendingReceiver.2449"* nonnull %3)
  %21 = getelementptr inbounds %"class.mojo::PendingReceiver.2449", %"class.mojo::PendingReceiver.2449"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %21) #12
  %22 = ptrtoint %"class.content::ManifestManagerHost"* %0 to i64
  %23 = call i8* @_Znwm(i64 56) #13, !noalias !7
  %24 = bitcast i8* %23 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %24, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content19ManifestManagerHostEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content19ManifestManagerHostEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !7
  %25 = getelementptr inbounds i8, i8* %23, i64 32
  %26 = bitcast i8* %25 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.content::ManifestManagerHost"*)* @_ZN7content19ManifestManagerHost17OnConnectionErrorEv to i64), i64 0>, <2 x i64>* %26, align 8, !noalias !7
  %27 = getelementptr inbounds i8, i8* %23, i64 48
  %28 = bitcast i8* %27 to i64*
  store i64 %22, i64* %28, align 8, !noalias !7
  %29 = bitcast %"class.base::OnceCallback.507"* %4 to i8**
  store i8* %23, i8** %29, align 8, !alias.scope !7
  %30 = bitcast %"class.base::OnceCallback.507"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %10, align 8
  %32 = icmp eq %"class.mojo::InterfaceEndpointClient"* %31, null
  %33 = ptrtoint i8* %23 to i64
  br i1 %32, label %38, label %34

34:                                               ; preds = %13
  %35 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %31, i64 0, i32 19
  %36 = load i8, i8* %35, align 8, !range !12
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %34, %13
  %39 = getelementptr inbounds %"class.mojo::Remote.2304", %"class.mojo::Remote.2304"* %5, i64 0, i32 0
  %40 = getelementptr inbounds %"class.base::OnceCallback.507", %"class.base::OnceCallback.507"* %4, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback.507"* %2 to i64*
  store i64 %33, i64* %41, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom15ManifestManagerEE28set_connection_error_handlerEN4base12OnceCallbackIFvvEEE(%"class.mojo::internal::InterfacePtrState.2305"* %39, %"class.base::OnceCallback.507"* nonnull %2) #12
  %42 = getelementptr inbounds %"class.base::OnceCallback.507", %"class.base::OnceCallback.507"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #12
  br label %43

43:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %44 = getelementptr inbounds %"class.base::OnceCallback.507", %"class.base::OnceCallback.507"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #12
  br label %45

45:                                               ; preds = %9, %1, %43
  %46 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3, i32 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.2306", %"class.std::__1::unique_ptr.2306"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %47, align 8
  %49 = icmp eq %"class.blink::mojom::ManifestManagerProxy"* %48, null
  br i1 %49, label %50, label %71

50:                                               ; preds = %45
  %51 = bitcast %"class.mojo::Remote.2304"* %5 to %"class.mojo::internal::InterfacePtrStateBase"*
  %52 = call i8* @_Znwm(i64 8) #13
  %53 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom32ManifestManagerResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = bitcast i8* %52 to %"class.mojo::MessageReceiver"*
  %55 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %51, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %54, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom15ManifestManager5Name_E, i64 0, i64 0)) #12
  br i1 %55, label %56, label %71

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = bitcast %"class.mojo::InterfaceEndpointClient"** %57 to %"class.mojo::MessageReceiverWithResponder"**
  %59 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %58, align 8
  %60 = call i8* @_Znwm(i64 16) #13
  %61 = bitcast i8* %60 to %"class.blink::mojom::ManifestManagerProxy"*
  call void @_ZN5blink5mojom20ManifestManagerProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::ManifestManagerProxy"* nonnull %61, %"class.mojo::MessageReceiverWithResponder"* %59) #12
  %62 = ptrtoint i8* %60 to i64
  %63 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %47, align 8
  %64 = bitcast %"class.std::__1::unique_ptr.2306"* %46 to i64*
  store i64 %62, i64* %64, align 8
  %65 = icmp eq %"class.blink::mojom::ManifestManagerProxy"* %63, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %56
  %67 = bitcast %"class.blink::mojom::ManifestManagerProxy"* %63 to void (%"class.blink::mojom::ManifestManagerProxy"*)***
  %68 = load void (%"class.blink::mojom::ManifestManagerProxy"*)**, void (%"class.blink::mojom::ManifestManagerProxy"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %68, i64 1
  %70 = load void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %69, align 8
  call void %70(%"class.blink::mojom::ManifestManagerProxy"* nonnull %63) #12
  br label %71

71:                                               ; preds = %45, %50, %56, %66
  %72 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %47, align 8
  %73 = getelementptr inbounds %"class.blink::mojom::ManifestManagerProxy", %"class.blink::mojom::ManifestManagerProxy"* %72, i64 0, i32 0
  ret %"class.blink::mojom::ManifestManager"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ManifestManagerHost25OnRequestManifestResponseEiRK4GURLRKN5blink8ManifestE(%"class.content::ManifestManagerHost"*, i32, %class.GURL* dereferenceable(120), %"struct.blink::Manifest"* dereferenceable(992)) #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.2345", align 8
  %6 = alloca %"class.base::OnceCallback.2345", align 8
  %7 = bitcast %"class.base::OnceCallback.2345"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %8, align 8
  %9 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 4
  %10 = tail call %"class.base::OnceCallback.2345"* @_ZNK4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiE6LookupEi(%"class.base::IDMap"* %9, i32 %1)
  %11 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.2345"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.2345"* %6 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  tail call void @_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiE6RemoveEi(%"class.base::IDMap"* %9, i32 %1)
  %15 = bitcast %"class.base::OnceCallback.2345"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.base::OnceCallback.2345"* %5 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %18 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %5, i64 0, i32 0
  %19 = inttoptr i64 %16 to %"class.base::internal::BindStateBase"*
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %19, i64 0, i32 1
  %21 = bitcast void ()** %20 to void (%"class.base::internal::BindStateBase"*, %class.GURL*, %"struct.blink::Manifest"*)**
  %22 = load void (%"class.base::internal::BindStateBase"*, %class.GURL*, %"struct.blink::Manifest"*)*, void (%"class.base::internal::BindStateBase"*, %class.GURL*, %"struct.blink::Manifest"*)** %21, align 8
  tail call void %22(%"class.base::internal::BindStateBase"* %19, %class.GURL* dereferenceable(120) %2, %"struct.blink::Manifest"* dereferenceable(992) %3) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ManifestManagerHost24RequestManifestDebugInfoEN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEN4mojo9StructPtrINS6_5mojom17ManifestDebugInfoEEEEEE(%"class.content::ManifestManagerHost"*, %"class.base::OnceCallback.2448"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.2448", align 8
  %4 = tail call dereferenceable(8) %"class.blink::mojom::ManifestManager"* @_ZN7content19ManifestManagerHost18GetManifestManagerEv(%"class.content::ManifestManagerHost"* %0)
  %5 = getelementptr inbounds %"class.base::OnceCallback.2448", %"class.base::OnceCallback.2448"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback.2448"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback.2448"* %3 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = bitcast %"class.blink::mojom::ManifestManager"* %4 to void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2448"*)***
  %10 = load void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2448"*)**, void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2448"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2448"*)*, void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2448"*)** %10, i64 3
  %12 = load void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2448"*)*, void (%"class.blink::mojom::ManifestManager"*, %"class.base::OnceCallback.2448"*)** %11, align 8
  call void %12(%"class.blink::mojom::ManifestManager"* %4, %"class.base::OnceCallback.2448"* nonnull %3) #12
  %13 = getelementptr inbounds %"class.base::OnceCallback.2448", %"class.base::OnceCallback.2448"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15service_manager17InterfaceProvider12GetInterfaceIN5blink5mojom15ManifestManagerEEEvN4mojo15PendingReceiverIT_EE(%"class.service_manager::InterfaceProvider"*, %"class.mojo::PendingReceiver.2449"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom15ManifestManager5Name_E, i64 0, i64 0)) #12
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #14
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #13
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom15ManifestManager5Name_E, i64 0, i64 0), i64 %6, i1 false) #12
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.mojo::PendingReceiver.2449", %"class.mojo::PendingReceiver.2449"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4, !noalias !13
  store i32 %32, i32* %30, align 4, !alias.scope !13
  store i32 0, i32* %31, align 4, !noalias !13
  call void @_ZN15service_manager17InterfaceProvider18GetInterfaceByNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4mojo16ScopedHandleBaseINSA_17MessagePipeHandleEEE(%"class.service_manager::InterfaceProvider"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.mojo::ScopedHandleBase"* nonnull %4) #12
  %33 = load i32, i32* %30, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %27
  %36 = call i32 @MojoClose(i32 %33) #12
  br label %37

37:                                               ; preds = %27, %35
  %38 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %37, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ManifestManagerHost17OnConnectionErrorEv(%"class.content::ManifestManagerHost"*) #0 align 2 {
  tail call void @_ZN7content19ManifestManagerHost24DispatchPendingCallbacksEv(%"class.content::ManifestManagerHost"* %0)
  %2 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 2
  %3 = bitcast %"class.content::RenderFrameHostImpl"** %2 to %"class.content::RenderFrameHost"**
  %4 = load %"class.content::RenderFrameHost"*, %"class.content::RenderFrameHost"** %3, align 8
  %5 = tail call %"class.base::SupportsUserData::Data"* @_ZN7content29GetRenderDocumentHostUserDataEPKNS_15RenderFrameHostEPKv(%"class.content::RenderFrameHost"* %4, i8* bitcast (i32* @_ZN7content19ManifestManagerHost12kUserDataKeyE to i8*)) #12
  %6 = icmp eq %"class.base::SupportsUserData::Data"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = load %"class.content::RenderFrameHost"*, %"class.content::RenderFrameHost"** %3, align 8
  tail call void @_ZN7content32RemoveRenderDocumentHostUserDataEPNS_15RenderFrameHostEPKv(%"class.content::RenderFrameHost"* %8, i8* bitcast (i32* @_ZN7content19ManifestManagerHost12kUserDataKeyE to i8*)) #12
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiE5ClearEv(%"class.base::IDMap"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %67

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %106, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %10, align 8
  %12 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %11, null
  br i1 %12, label %27, label %13

13:                                               ; preds = %9, %24
  %14 = phi %"struct.std::__1::__hash_node_base.2318"* [ %16, %24 ], [ %11, %9 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %14, i64 3
  %18 = bitcast %"struct.std::__1::__hash_node_base.2318"* %17 to %"class.base::OnceCallback.2345"**
  %19 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %18, align 8
  store %"class.base::OnceCallback.2345"* null, %"class.base::OnceCallback.2345"** %18, align 8
  %20 = icmp eq %"class.base::OnceCallback.2345"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %19, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #12
  %23 = bitcast %"class.base::OnceCallback.2345"* %19 to i8*
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %21, %13
  %25 = bitcast %"struct.std::__1::__hash_node_base.2318"* %14 to i8*
  tail call void @_ZdlPv(i8* %25) #13
  %26 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %16, null
  br i1 %26, label %27, label %13

27:                                               ; preds = %24, %9
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %10, align 8
  %28 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %49, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = add i64 %29, -1
  %34 = and i64 %29, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = sub i64 %29, %34
  br label %50

38:                                               ; preds = %50, %31
  %39 = phi i64 [ 0, %31 ], [ %64, %50 ]
  %40 = icmp eq i64 %34, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %38, %41
  %42 = phi i64 [ %46, %41 ], [ %39, %38 ]
  %43 = phi i64 [ %47, %41 ], [ %34, %38 ]
  %44 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %32, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %44, i64 %42
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %45, align 8
  %46 = add nuw i64 %42, 1
  %47 = add i64 %43, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %41, !llvm.loop !18

49:                                               ; preds = %38, %41, %27
  store i64 0, i64* %6, align 8
  br label %106

50:                                               ; preds = %50, %36
  %51 = phi i64 [ 0, %36 ], [ %64, %50 ]
  %52 = phi i64 [ %37, %36 ], [ %65, %50 ]
  %53 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %32, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %53, i64 %51
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %54, align 8
  %55 = or i64 %51, 1
  %56 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %32, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %57, align 8
  %58 = or i64 %51, 2
  %59 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %32, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %60, align 8
  %61 = or i64 %51, 3
  %62 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %32, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %62, i64 %61
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %63, align 8
  %64 = add nuw i64 %51, 4
  %65 = add i64 %52, -4
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %38, label %50

67:                                               ; preds = %1
  %68 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2
  %69 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast i32** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.base::internal::flat_tree.2312"* %68 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = ashr exact i64 %76, 2
  %78 = icmp ult i64 %77, %70
  br i1 %78, label %79, label %103

79:                                               ; preds = %67
  %80 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  %82 = icmp ugt i64 %70, 4611686018427387903
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  tail call void @abort() #14
  unreachable

84:                                               ; preds = %79
  %85 = load i64, i64* %81, align 8
  %86 = sub i64 %85, %75
  %87 = ashr exact i64 %86, 2
  %88 = shl i64 %70, 2
  %89 = tail call i8* @_Znwm(i64 %88) #13
  %90 = bitcast i8* %89 to i32*
  %91 = getelementptr inbounds i32, i32* %90, i64 %87
  %92 = ptrtoint i32* %91 to i64
  %93 = getelementptr inbounds i32, i32* %90, i64 %70
  %94 = ptrtoint i32* %93 to i64
  %95 = ptrtoint i8* %89 to i64
  %96 = icmp sgt i64 %86, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %84
  %98 = inttoptr i64 %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %89, i8* align 4 %98, i64 %86, i1 false) #12
  br label %99

99:                                               ; preds = %97, %84
  store i64 %95, i64* %74, align 8
  store i64 %92, i64* %81, align 8
  store i64 %94, i64* %72, align 8
  %100 = icmp eq i64 %75, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = inttoptr i64 %75 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %67, %99, %101
  %104 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %104, align 8
  tail call void @_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEE6insertINS_5IDMapINS3_10unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS3_14default_deleteISN_EEEEiE11KeyIteratorEEEvT_ST_(%"class.base::internal::flat_tree.2312"* %68, %"struct.std::__1::__hash_node_base.2318"* %105, %"struct.std::__1::__hash_node_base.2318"* null)
  br label %106

106:                                              ; preds = %49, %5, %103
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

declare void @_ZN5blink8ManifestC1Ev(%"struct.blink::Manifest"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink8ManifestD1Ev(%"struct.blink::Manifest"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::OnceCallback.2345"* @_ZNK4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiE6LookupEi(%"class.base::IDMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %104, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !20
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %22, null
  br i1 %23, label %104, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %26, null
  br i1 %27, label %104, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base.2318"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base.2318"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %104

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.2318"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %53, null
  br i1 %54, label %104, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %31, i64 3
  %57 = bitcast %"struct.std::__1::__hash_node_base.2318"* %56 to %"class.base::OnceCallback.2345"**
  %58 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %57, align 8
  %59 = icmp eq %"class.base::OnceCallback.2345"* %58, null
  br i1 %59, label %104, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %64 = bitcast i32** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = ptrtoint i32* %62 to i64
  %67 = sub i64 %65, %66
  %68 = icmp eq i64 %67, 0
  %69 = inttoptr i64 %65 to i32*
  br i1 %68, label %87, label %70

70:                                               ; preds = %60
  %71 = ashr exact i64 %67, 2
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i32* [ %62, %70 ], [ %83, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %82, %72 ]
  %75 = lshr i64 %74, 1
  %76 = getelementptr inbounds i32, i32* %73, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, %1
  %79 = getelementptr inbounds i32, i32* %76, i64 1
  %80 = xor i64 %75, -1
  %81 = add i64 %74, %80
  %82 = select i1 %78, i64 %81, i64 %75
  %83 = select i1 %78, i32* %79, i32* %73
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %85, label %72

85:                                               ; preds = %72
  %86 = ptrtoint i32* %83 to i64
  br label %87

87:                                               ; preds = %85, %60
  %88 = phi i64 [ %86, %85 ], [ %66, %60 ]
  %89 = phi i32* [ %83, %85 ], [ %62, %60 ]
  %90 = icmp eq i32* %89, %69
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = load i32, i32* %89, align 4
  %93 = icmp sgt i32 %92, %1
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds i32, i32* %89, i64 1
  %96 = ptrtoint i32* %95 to i64
  br label %97

97:                                               ; preds = %87, %91, %94
  %98 = phi i64 [ %96, %94 ], [ %88, %87 ], [ %88, %91 ]
  %99 = inttoptr i64 %98 to i32*
  %100 = icmp eq i32* %89, %99
  %101 = select i1 %100, i32* %69, i32* %89
  %102 = icmp eq i32* %101, %69
  %103 = select i1 %102, %"class.base::OnceCallback.2345"* %58, %"class.base::OnceCallback.2345"* null
  ret %"class.base::OnceCallback.2345"* %103

104:                                              ; preds = %51, %43, %55, %24, %2, %17
  ret %"class.base::OnceCallback.2345"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base5IDMapINSt3__110unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS1_14default_deleteISC_EEEEiE6RemoveEi(%"class.base::IDMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.2499", align 8
  %4 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %150, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !20
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::unordered_map.2313", %"class.std::__1::unordered_map.2313"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %25, null
  br i1 %26, label %150, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %29, null
  br i1 %30, label %150, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base.2318"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.2318"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %150

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.2318"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %1
  br i1 %53, label %58, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %56, null
  br i1 %57, label %150, label %33

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = ptrtoint i32* %60 to i64
  %65 = sub i64 %63, %64
  %66 = icmp eq i64 %65, 0
  %67 = inttoptr i64 %63 to i32*
  br i1 %66, label %85, label %68

68:                                               ; preds = %58
  %69 = ashr exact i64 %65, 2
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i32* [ %60, %68 ], [ %81, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %80, %70 ]
  %73 = lshr i64 %72, 1
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, %1
  %77 = getelementptr inbounds i32, i32* %74, i64 1
  %78 = xor i64 %73, -1
  %79 = add i64 %72, %78
  %80 = select i1 %76, i64 %79, i64 %73
  %81 = select i1 %76, i32* %77, i32* %71
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %83, label %70

83:                                               ; preds = %70
  %84 = ptrtoint i32* %81 to i64
  br label %85

85:                                               ; preds = %83, %58
  %86 = phi i64 [ %84, %83 ], [ %64, %58 ]
  %87 = phi i32* [ %81, %83 ], [ %60, %58 ]
  %88 = icmp eq i32* %87, %67
  br i1 %88, label %95, label %89

89:                                               ; preds = %85
  %90 = load i32, i32* %87, align 4
  %91 = icmp sgt i32 %90, %1
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds i32, i32* %87, i64 1
  %94 = ptrtoint i32* %93 to i64
  br label %95

95:                                               ; preds = %85, %89, %92
  %96 = phi i64 [ %94, %92 ], [ %86, %85 ], [ %86, %89 ]
  %97 = inttoptr i64 %96 to i32*
  %98 = icmp eq i32* %87, %97
  %99 = select i1 %98, i32* %67, i32* %87
  %100 = icmp eq i32* %99, %67
  br i1 %100, label %101, label %150

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %125

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.std::__1::unordered_map.2313", %"class.std::__1::unordered_map.2313"* %5, i64 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr.2499"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #12
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISH_PvEEEE(%"class.std::__1::unique_ptr.2499"* nonnull sret %3, %"class.std::__1::__hash_table.2314"* %106, %"struct.std::__1::__hash_node_base.2318"* %34) #12
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.2499", %"class.std::__1::unique_ptr.2499"* %3, i64 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %108, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.2499", %"class.std::__1::unique_ptr.2499"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %113 = load i8, i8* %112, align 8, !range !12
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %122, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %109, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %117 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %116, align 8
  store %"class.base::OnceCallback.2345"* null, %"class.base::OnceCallback.2345"** %116, align 8
  %118 = icmp eq %"class.base::OnceCallback.2345"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %117, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %120) #12
  %121 = bitcast %"class.base::OnceCallback.2345"* %117 to i8*
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %119, %115, %111
  %123 = bitcast %"struct.std::__1::__hash_node"* %109 to i8*
  call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %105, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #12
  br label %150

125:                                              ; preds = %101
  br i1 %66, label %141, label %126

126:                                              ; preds = %125
  %127 = ashr exact i64 %65, 2
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi i32* [ %60, %126 ], [ %139, %128 ]
  %130 = phi i64 [ %127, %126 ], [ %138, %128 ]
  %131 = lshr i64 %130, 1
  %132 = getelementptr inbounds i32, i32* %129, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = icmp slt i32 %133, %1
  %135 = getelementptr inbounds i32, i32* %132, i64 1
  %136 = xor i64 %131, -1
  %137 = add i64 %130, %136
  %138 = select i1 %134, i64 %137, i64 %131
  %139 = select i1 %134, i32* %135, i32* %129
  %140 = icmp eq i64 %138, 0
  br i1 %140, label %141, label %128

141:                                              ; preds = %128, %125
  %142 = phi i32* [ %60, %125 ], [ %139, %128 ]
  %143 = icmp eq i32* %142, %67
  br i1 %143, label %147, label %144

144:                                              ; preds = %141
  %145 = load i32, i32* %142, align 4
  %146 = icmp sgt i32 %145, %1
  br i1 %146, label %147, label %150

147:                                              ; preds = %144, %141
  %148 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0
  %149 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.1160"* %148, i32* %142, i32* nonnull dereferenceable(4) %4) #12
  br label %150

150:                                              ; preds = %54, %46, %147, %144, %95, %27, %2, %20, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ManifestManagerHost18ManifestUrlChangedERKN4absl8optionalI4GURLEE(%"class.content::ManifestManagerHost"* nocapture readonly, %"class.absl::optional.2456"* dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 0, i32 2
  %4 = load %"class.content::RenderFrameHostImpl"*, %"class.content::RenderFrameHostImpl"** %3, align 8
  %5 = bitcast %"class.content::RenderFrameHostImpl"* %4 to i1 (%"class.content::RenderFrameHostImpl"*)***
  %6 = load i1 (%"class.content::RenderFrameHostImpl"*)**, i1 (%"class.content::RenderFrameHostImpl"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.content::RenderFrameHostImpl"*)*, i1 (%"class.content::RenderFrameHostImpl"*)** %6, i64 59
  %8 = load i1 (%"class.content::RenderFrameHostImpl"*)*, i1 (%"class.content::RenderFrameHostImpl"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.content::RenderFrameHostImpl"* %4) #12
  br i1 %9, label %10, label %17

10:                                               ; preds = %2
  %11 = load %"class.content::RenderFrameHostImpl"*, %"class.content::RenderFrameHostImpl"** %3, align 8
  tail call void @_ZN7content19RenderFrameHostImpl17UpdateManifestURLERKN4absl8optionalI4GURLEE(%"class.content::RenderFrameHostImpl"* %11, %"class.absl::optional.2456"* dereferenceable(128) %1) #12
  %12 = bitcast %"class.content::RenderFrameHostImpl"** %3 to %"class.content::RenderFrameHost"**
  %13 = load %"class.content::RenderFrameHost"*, %"class.content::RenderFrameHost"** %12, align 8
  %14 = tail call %"class.content::WebContents"* @_ZN7content11WebContents19FromRenderFrameHostEPNS_15RenderFrameHostE(%"class.content::RenderFrameHost"* %13) #12
  %15 = bitcast %"class.content::WebContents"* %14 to %"class.content::WebContentsImpl"*
  %16 = load %"class.content::RenderFrameHost"*, %"class.content::RenderFrameHost"** %12, align 8
  tail call void @_ZN7content15WebContentsImpl24NotifyManifestUrlChangedEPNS_15RenderFrameHostERKN4absl8optionalI4GURLEE(%"class.content::WebContentsImpl"* %15, %"class.content::RenderFrameHost"* %16, %"class.absl::optional.2456"* dereferenceable(128) %1) #12
  br label %17

17:                                               ; preds = %2, %10
  ret void
}

declare void @_ZN7content19RenderFrameHostImpl17UpdateManifestURLERKN4absl8optionalI4GURLEE(%"class.content::RenderFrameHostImpl"*, %"class.absl::optional.2456"* dereferenceable(128)) local_unnamed_addr #2

declare %"class.content::WebContents"* @_ZN7content11WebContents19FromRenderFrameHostEPNS_15RenderFrameHostE(%"class.content::RenderFrameHost"*) local_unnamed_addr #2

declare void @_ZN7content15WebContentsImpl24NotifyManifestUrlChangedEPNS_15RenderFrameHostERKN4absl8optionalI4GURLEE(%"class.content::WebContentsImpl"*, %"class.content::RenderFrameHost"*, %"class.absl::optional.2456"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N7content19ManifestManagerHost18ManifestUrlChangedERKN4absl8optionalI4GURLEE(%"class.content::ManifestManagerHost"* nocapture readonly, %"class.absl::optional.2456"* dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::ManifestManagerHost", %"class.content::ManifestManagerHost"* %0, i64 -1, i32 5, i32 2, i32 0, i32 1
  %4 = getelementptr inbounds i64, i64* %3, i64 2
  %5 = bitcast i64* %4 to %"class.content::RenderFrameHostImpl"**
  %6 = load %"class.content::RenderFrameHostImpl"*, %"class.content::RenderFrameHostImpl"** %5, align 8
  %7 = bitcast %"class.content::RenderFrameHostImpl"* %6 to i1 (%"class.content::RenderFrameHostImpl"*)***
  %8 = load i1 (%"class.content::RenderFrameHostImpl"*)**, i1 (%"class.content::RenderFrameHostImpl"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.content::RenderFrameHostImpl"*)*, i1 (%"class.content::RenderFrameHostImpl"*)** %8, i64 59
  %10 = load i1 (%"class.content::RenderFrameHostImpl"*)*, i1 (%"class.content::RenderFrameHostImpl"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.content::RenderFrameHostImpl"* %6) #12
  br i1 %11, label %12, label %19

12:                                               ; preds = %2
  %13 = load %"class.content::RenderFrameHostImpl"*, %"class.content::RenderFrameHostImpl"** %5, align 8
  tail call void @_ZN7content19RenderFrameHostImpl17UpdateManifestURLERKN4absl8optionalI4GURLEE(%"class.content::RenderFrameHostImpl"* %13, %"class.absl::optional.2456"* dereferenceable(128) %1) #12
  %14 = bitcast i64* %4 to %"class.content::RenderFrameHost"**
  %15 = load %"class.content::RenderFrameHost"*, %"class.content::RenderFrameHost"** %14, align 8
  %16 = tail call %"class.content::WebContents"* @_ZN7content11WebContents19FromRenderFrameHostEPNS_15RenderFrameHostE(%"class.content::RenderFrameHost"* %15) #12
  %17 = bitcast %"class.content::WebContents"* %16 to %"class.content::WebContentsImpl"*
  %18 = load %"class.content::RenderFrameHost"*, %"class.content::RenderFrameHost"** %14, align 8
  tail call void @_ZN7content15WebContentsImpl24NotifyManifestUrlChangedEPNS_15RenderFrameHostERKN4absl8optionalI4GURLEE(%"class.content::WebContentsImpl"* %17, %"class.content::RenderFrameHost"* %18, %"class.absl::optional.2456"* dereferenceable(128) %1) #12
  br label %19

19:                                               ; preds = %2, %12
  ret void
}

declare %"class.base::SupportsUserData::Data"* @_ZN4base16SupportsUserData4Data5CloneEv(%"class.base::SupportsUserData::Data"*) unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15MessageReceiverD2Ev(%"class.mojo::MessageReceiver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal22AssociatedReceiverBaseD2Ev(%"class.mojo::internal::AssociatedReceiverBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

declare void @_ZN4mojo8internal22AssociatedReceiverBaseC2Ev(%"class.mojo::internal::AssociatedReceiverBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEED0Ev(%"class.blink::mojom::ManifestUrlChangeObserverStub"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::mojom::ManifestUrlChangeObserverStub"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

declare zeroext i1 @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv(%"class.mojo::MessageReceiver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEE6AcceptEPNS2_7MessageE(%"class.blink::mojom::ManifestUrlChangeObserverStub"*, %"class.mojo::Message"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::ManifestUrlChangeObserverStub", %"class.blink::mojom::ManifestUrlChangeObserverStub"* %0, i64 0, i32 1
  %4 = load %"class.blink::mojom::ManifestUrlChangeObserver"*, %"class.blink::mojom::ManifestUrlChangeObserver"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::ManifestUrlChangeObserver"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink5mojom37ManifestUrlChangeObserverStubDispatch6AcceptEPNS0_25ManifestUrlChangeObserverEPN4mojo7MessageE(%"class.blink::mojom::ManifestUrlChangeObserver"* nonnull %4, %"class.mojo::Message"* %1) #12
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ %7, %6 ], [ false, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom29ManifestUrlChangeObserverStubIN4mojo19RawPtrImplRefTraitsINS0_25ManifestUrlChangeObserverEEEE19AcceptWithResponderEPNS2_7MessageENSt3__110unique_ptrINS2_25MessageReceiverWithStatusENS9_14default_deleteISB_EEEE(%"class.blink::mojom::ManifestUrlChangeObserverStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::mojom::ManifestUrlChangeObserverStub", %"class.blink::mojom::ManifestUrlChangeObserverStub"* %0, i64 0, i32 1
  %5 = load %"class.blink::mojom::ManifestUrlChangeObserver"*, %"class.blink::mojom::ManifestUrlChangeObserver"** %4, align 8
  %6 = icmp eq %"class.blink::mojom::ManifestUrlChangeObserver"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN5blink5mojom37ManifestUrlChangeObserverStubDispatch19AcceptWithResponderEPNS0_25ManifestUrlChangeObserverEPN4mojo7MessageENSt3__110unique_ptrINS4_25MessageReceiverWithStatusENS7_14default_deleteIS9_EEEE(%"class.blink::mojom::ManifestUrlChangeObserver"* nonnull %5, %"class.mojo::Message"* %1, %"class.mojo::MessageReceiverWithStatus"* %2) #12
  br label %16

9:                                                ; preds = %3
  %10 = icmp eq %"class.mojo::MessageReceiverWithStatus"* %2, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.mojo::MessageReceiverWithStatus"* %2 to void (%"class.mojo::MessageReceiverWithStatus"*)***
  %13 = load void (%"class.mojo::MessageReceiverWithStatus"*)**, void (%"class.mojo::MessageReceiverWithStatus"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %13, i64 1
  %15 = load void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %14, align 8
  tail call void %15(%"class.mojo::MessageReceiverWithStatus"* nonnull %2) #12
  br label %16

16:                                               ; preds = %7, %9, %11
  %17 = phi i1 [ %8, %7 ], [ false, %9 ], [ false, %11 ]
  ret i1 %17
}

declare zeroext i1 @_ZN5blink5mojom37ManifestUrlChangeObserverStubDispatch6AcceptEPNS0_25ManifestUrlChangeObserverEPN4mojo7MessageE(%"class.blink::mojom::ManifestUrlChangeObserver"*, %"class.mojo::Message"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink5mojom37ManifestUrlChangeObserverStubDispatch19AcceptWithResponderEPNS0_25ManifestUrlChangeObserverEPN4mojo7MessageENSt3__110unique_ptrINS4_25MessageReceiverWithStatusENS7_14default_deleteIS9_EEEE(%"class.blink::mojom::ManifestUrlChangeObserver"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare void @_ZN4mojo8internal22AssociatedReceiverBase8BindImplENS_29ScopedInterfaceEndpointHandleEPNS_34MessageReceiverWithResponderStatusENSt3__110unique_ptrINS_15MessageReceiverENS5_14default_deleteIS7_EEEEb13scoped_refptrIN4base19SequencedTaskRunnerEEjPKc(%"class.mojo::internal::AssociatedReceiverBase"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::MessageReceiver"*, i1 zeroext, %"class.base::SequencedTaskRunner"*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4mojo8internal22AssociatedReceiverBase5resetEv(%"class.mojo::internal::AssociatedReceiverBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4mojo29ScopedInterfaceEndpointHandle8is_validEv(%"class.mojo::ScopedInterfaceEndpointHandle"*) local_unnamed_addr #2

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.2318"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSX_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISH_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.2314"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.2498"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !20
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.2318"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.2318"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.2318"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #13, !noalias !21
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !21
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !21
  store i32 %62, i32* %61, align 8, !noalias !21
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to i64*
  store i64 0, i64* %64, align 8, !noalias !21
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !21
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.2318"**
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %67, align 8, !noalias !21
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !20
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #12
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE6rehashEm(%"class.std::__1::__hash_table.2314"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #12, !range !20
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, -1
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.2318"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.2318"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.2318"* %110, %"struct.std::__1::__hash_node_base.2318"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.2318"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #12, !range !20
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.2318"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.2318"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.2318"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.2318"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.2318"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.2318"*, i8 } undef, %"struct.std::__1::__hash_node_base.2318"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.2318"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.2318"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE6rehashEm(%"class.std::__1::__hash_table.2314"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !20
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE8__rehashEm(%"class.std::__1::__hash_table.2314"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !20
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !20
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE8__rehashEm(%"class.std::__1::__hash_table.2314"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE8__rehashEm(%"class.std::__1::__hash_table.2314"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.2314"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.2318"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.2318"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.2320", %"class.std::__1::__bucket_list_deallocator.2320"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !24

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.2318"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !20
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.2318"* %36, %"struct.std::__1::__hash_node_base.2318"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.2318"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.2318"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.2318"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.2318"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.2318"* %82, %"struct.std::__1::__hash_node_base.2318"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.2318"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.2318"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.2318"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.2318"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.2318"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.2318"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.2318"* %80, %"struct.std::__1::__hash_node_base.2318"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.2318"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.2318"** null, %"struct.std::__1::__hash_node_base.2318"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.2318"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.2318"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.2320", %"class.std::__1::__bucket_list_deallocator.2320"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7content19ManifestManagerHostEFviRK4GURLRKN5blink8ManifestEEJNS0_17UnretainedWrapperIS4_EEiEEEFvS7_SB_EE7RunOnceEPNS0_13BindStateBaseES7_SB_(%"class.base::internal::BindStateBase"*, %class.GURL* dereferenceable(120), %"struct.blink::Manifest"* dereferenceable(992)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i32*
  %10 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 %14
  %16 = bitcast i8* %15 to %"class.content::ManifestManagerHost"*
  %17 = and i64 %11, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %3
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %11, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.content::ManifestManagerHost"*, i32, %class.GURL*, %"struct.blink::Manifest"*)**
  %25 = load void (%"class.content::ManifestManagerHost"*, i32, %class.GURL*, %"struct.blink::Manifest"*)*, void (%"class.content::ManifestManagerHost"*, i32, %class.GURL*, %"struct.blink::Manifest"*)** %24, align 8
  br label %28

26:                                               ; preds = %3
  %27 = inttoptr i64 %11 to void (%"class.content::ManifestManagerHost"*, i32, %class.GURL*, %"struct.blink::Manifest"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.content::ManifestManagerHost"*, i32, %class.GURL*, %"struct.blink::Manifest"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = load i32, i32* %9, align 4
  tail call void %29(%"class.content::ManifestManagerHost"* %16, i32 %30, %class.GURL* dereferenceable(120) %1, %"struct.blink::Manifest"* dereferenceable(992) %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7content19ManifestManagerHostEFviRK4GURLRKN5blink8ManifestEEJNS0_17UnretainedWrapperIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom15ManifestManagerEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver.2449"* noalias sret, %"class.mojo::Remote.2304"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::ScopedHandleBase", align 4
  %6 = alloca %"class.mojo::MessagePipeHandle", align 4
  %7 = alloca %"class.mojo::MessagePipeHandle", align 4
  %8 = alloca %"class.mojo::PendingRemote.2512", align 4
  %9 = bitcast %"class.mojo::MessagePipeHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = bitcast %"class.mojo::MessagePipeHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %10, i32* nonnull %12) #12
  %14 = load i32, i32* %10, align 4
  %15 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #12
  %16 = bitcast %"class.mojo::ScopedHandleBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.mojo::PendingRemote.2512", %"class.mojo::PendingRemote.2512"* %8, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 %14, i32* %18, align 4, !alias.scope !25
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"class.mojo::ScopedHandleBase"* nonnull %5, i32 0) #12
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = call i32 @MojoClose(i32 %19) #12
  br label %23

23:                                               ; preds = %21, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @_ZN4mojo6RemoteIN5blink5mojom15ManifestManagerEE4BindENS_13PendingRemoteIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote.2304"* %1, %"class.mojo::PendingRemote.2512"* nonnull %8, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #12
  %24 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.mojo::PendingReceiver.2449", %"class.mojo::PendingReceiver.2449"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %15, i32* %26, align 4, !alias.scope !28
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* %25, %"class.mojo::ScopedHandleBase"* nonnull %4) #12
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = call i32 @MojoClose(i32 %27) #12
  br label %31

31:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom15ManifestManagerEE4BindENS_13PendingRemoteIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote.2304"*, %"class.mojo::PendingRemote.2512"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState.2305", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.2512", %"class.mojo::PendingRemote.2512"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState.2305"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #12
  %10 = bitcast %"class.mojo::internal::InterfacePtrState.2305"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.2305", %"class.mojo::internal::InterfacePtrState.2305"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.2306"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote.2304", %"class.mojo::Remote.2304"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.2306"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote.2304"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.2305", %"class.mojo::internal::InterfacePtrState.2305"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %17, align 8
  store %"class.blink::mojom::ManifestManagerProxy"* null, %"class.blink::mojom::ManifestManagerProxy"** %17, align 8
  %19 = icmp eq %"class.blink::mojom::ManifestManagerProxy"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.blink::mojom::ManifestManagerProxy"* %18 to void (%"class.blink::mojom::ManifestManagerProxy"*)***
  %22 = load void (%"class.blink::mojom::ManifestManagerProxy"*)**, void (%"class.blink::mojom::ManifestManagerProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %22, i64 1
  %24 = load void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %23, align 8
  call void %24(%"class.blink::mojom::ManifestManagerProxy"* nonnull %18) #12
  br label %52

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.2512", %"class.mojo::PendingRemote.2512"* %1, i64 0, i32 0
  %27 = bitcast %"class.mojo::Remote.2304"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %27, %"struct.mojo::internal::PendingRemoteState"* %26, %"class.base::SequencedTaskRunner"* %2) #12
  %28 = getelementptr inbounds %"class.mojo::Remote.2304", %"class.mojo::Remote.2304"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.2306", %"class.std::__1::unique_ptr.2306"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %29, align 8
  %31 = icmp eq %"class.blink::mojom::ManifestManagerProxy"* %30, null
  br i1 %31, label %32, label %62

32:                                               ; preds = %25
  %33 = tail call i8* @_Znwm(i64 8) #13
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom32ManifestManagerResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8* %33 to %"class.mojo::MessageReceiver"*
  %36 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %27, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom15ManifestManager5Name_E, i64 0, i64 0)) #12
  br i1 %36, label %37, label %62

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.mojo::Remote.2304", %"class.mojo::Remote.2304"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::InterfaceEndpointClient"** %38 to %"class.mojo::MessageReceiverWithResponder"**
  %40 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 16) #13
  %42 = bitcast i8* %41 to %"class.blink::mojom::ManifestManagerProxy"*
  tail call void @_ZN5blink5mojom20ManifestManagerProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::ManifestManagerProxy"* nonnull %42, %"class.mojo::MessageReceiverWithResponder"* %40) #12
  %43 = ptrtoint i8* %41 to i64
  %44 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %29, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.2306"* %28 to i64*
  store i64 %43, i64* %45, align 8
  %46 = icmp eq %"class.blink::mojom::ManifestManagerProxy"* %44, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.blink::mojom::ManifestManagerProxy"* %44 to void (%"class.blink::mojom::ManifestManagerProxy"*)***
  %49 = load void (%"class.blink::mojom::ManifestManagerProxy"*)**, void (%"class.blink::mojom::ManifestManagerProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %49, i64 1
  %51 = load void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %50, align 8
  tail call void %51(%"class.blink::mojom::ManifestManagerProxy"* nonnull %44) #12
  br label %62

52:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  %53 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.309", %"class.base::RefCountedThreadSafe.309"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.309", %"class.base::RefCountedThreadSafe.309"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.309"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #12
  br label %62

62:                                               ; preds = %47, %37, %32, %25, %52, %54, %59
  ret void
}

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink5mojom20ManifestManagerProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::ManifestManagerProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

declare void @_ZN15service_manager17InterfaceProvider18GetInterfaceByNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4mojo16ScopedHandleBaseINSA_17MessagePipeHandleEEE(%"class.service_manager::InterfaceProvider"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.mojo::ScopedHandleBase"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom15ManifestManagerEE28set_connection_error_handlerEN4base12OnceCallbackIFvvEEE(%"class.mojo::internal::InterfacePtrState.2305"*, %"class.base::OnceCallback.507"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.507", align 8
  %4 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.2305", %"class.mojo::internal::InterfacePtrState.2305"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.2306", %"class.std::__1::unique_ptr.2306"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %5, align 8
  %7 = icmp eq %"class.blink::mojom::ManifestManagerProxy"* %6, null
  br i1 %7, label %8, label %29

8:                                                ; preds = %2
  %9 = bitcast %"class.mojo::internal::InterfacePtrState.2305"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  %10 = tail call i8* @_Znwm(i64 8) #13
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom32ManifestManagerResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = bitcast i8* %10 to %"class.mojo::MessageReceiver"*
  %13 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %9, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %12, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom15ManifestManager5Name_E, i64 0, i64 0)) #12
  br i1 %13, label %14, label %29

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.2305", %"class.mojo::internal::InterfacePtrState.2305"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::InterfaceEndpointClient"** %15 to %"class.mojo::MessageReceiverWithResponder"**
  %17 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 16) #13
  %19 = bitcast i8* %18 to %"class.blink::mojom::ManifestManagerProxy"*
  tail call void @_ZN5blink5mojom20ManifestManagerProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::ManifestManagerProxy"* nonnull %19, %"class.mojo::MessageReceiverWithResponder"* %17) #12
  %20 = ptrtoint i8* %18 to i64
  %21 = load %"class.blink::mojom::ManifestManagerProxy"*, %"class.blink::mojom::ManifestManagerProxy"** %5, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.2306"* %4 to i64*
  store i64 %20, i64* %22, align 8
  %23 = icmp eq %"class.blink::mojom::ManifestManagerProxy"* %21, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %14
  %25 = bitcast %"class.blink::mojom::ManifestManagerProxy"* %21 to void (%"class.blink::mojom::ManifestManagerProxy"*)***
  %26 = load void (%"class.blink::mojom::ManifestManagerProxy"*)**, void (%"class.blink::mojom::ManifestManagerProxy"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %26, i64 1
  %28 = load void (%"class.blink::mojom::ManifestManagerProxy"*)*, void (%"class.blink::mojom::ManifestManagerProxy"*)** %27, align 8
  tail call void %28(%"class.blink::mojom::ManifestManagerProxy"* nonnull %21) #12
  br label %29

29:                                               ; preds = %2, %8, %14, %24
  %30 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.2305", %"class.mojo::internal::InterfacePtrState.2305"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %30, align 8
  %32 = getelementptr inbounds %"class.base::OnceCallback.507", %"class.base::OnceCallback.507"* %1, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.base::OnceCallback.507"* %1 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.base::OnceCallback.507"* %3 to i64*
  store i64 %34, i64* %35, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8
  %36 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %31, i64 0, i32 17, i32 0
  %37 = getelementptr inbounds %"class.base::OnceCallback.507", %"class.base::OnceCallback.507"* %3, i64 0, i32 0
  %38 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %36, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %37) #12
  %39 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %31, i64 0, i32 18, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %39) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #12
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7content19ManifestManagerHostEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.content::ManifestManagerHost"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.content::ManifestManagerHost"*)**
  %21 = load void (%"class.content::ManifestManagerHost"*)*, void (%"class.content::ManifestManagerHost"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.content::ManifestManagerHost"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.content::ManifestManagerHost"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.content::ManifestManagerHost"* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7content19ManifestManagerHostEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table.2314"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.2499", align 8
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %76, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !20
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %24, null
  br i1 %25, label %76, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %28, null
  br i1 %29, label %76, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.2318"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.2318"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %76

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.2318"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %55, null
  br i1 %56, label %76, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.2499"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISH_PvEEEE(%"class.std::__1::unique_ptr.2499"* nonnull sret %3, %"class.std::__1::__hash_table.2314"* %0, %"struct.std::__1::__hash_node_base.2318"* nonnull %33) #12
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.2499", %"class.std::__1::unique_ptr.2499"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %59, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2499", %"class.std::__1::unique_ptr.2499"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %64 = load i8, i8* %63, align 8, !range !12
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %73, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %60, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %67, align 8
  store %"class.base::OnceCallback.2345"* null, %"class.base::OnceCallback.2345"** %67, align 8
  %69 = icmp eq %"class.base::OnceCallback.2345"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %68, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %71) #12
  %72 = bitcast %"class.base::OnceCallback.2345"* %68 to i8*
  call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %70, %66, %62
  %74 = bitcast %"struct.std::__1::__hash_node"* %60 to i8*
  call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %57, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %76

76:                                               ; preds = %45, %53, %26, %2, %19, %75
  %77 = phi i64 [ 1, %75 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISH_PvEEEE(%"class.std::__1::unique_ptr.2499"* noalias sret, %"class.std::__1::__hash_table.2314"*, %"struct.std::__1::__hash_node_base.2318"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.2318"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !20
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.2318"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.2325", %"class.std::__1::__compressed_pair.2325"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.2318"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.2318"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.2318"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.2318"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.2318"**, %"struct.std::__1::__hash_node_base.2318"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.2318"* %25, %"struct.std::__1::__hash_node_base.2318"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.2318"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.2318"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.2318"* null, %"struct.std::__1::__hash_node_base.2318"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.2314", %"class.std::__1::__hash_table.2314"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.2318"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.2499"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2499", %"class.std::__1::unique_ptr.2499"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.2328"** %98 to %"class.std::__1::__compressed_pair.2325"**
  store %"class.std::__1::__compressed_pair.2325"* %30, %"class.std::__1::__compressed_pair.2325"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.2499", %"class.std::__1::unique_ptr.2499"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_9allocatorISB_EEE21__push_back_slow_pathISB_EEvOT_(%"class.std::__1::vector.2450"*, %"class.base::OnceCallback.2345"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2450", %"class.std::__1::vector.2450"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::OnceCallback.2345"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2450"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2450"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2450", %"class.std::__1::vector.2450"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.2345"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.base::OnceCallback.2345"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::OnceCallback.2345"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %36, i64 %35
  %39 = ptrtoint %"class.base::OnceCallback.2345"* %38 to i64
  %40 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback.2345"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::OnceCallback.2345"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  %44 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %37, i64 1
  %45 = ptrtoint %"class.base::OnceCallback.2345"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2450", %"class.std::__1::vector.2450"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %46, align 8
  %48 = ptrtoint %"class.base::OnceCallback.2345"* %47 to i64
  %49 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %3, align 8
  %50 = icmp eq %"class.base::OnceCallback.2345"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::internal::BindStateBase"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.base::OnceCallback.2345"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.base::OnceCallback.2345"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %60, i64 -1
  %64 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %61, i64 -1
  %65 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::OnceCallback.2345"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::OnceCallback.2345"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !31

71:                                               ; preds = %59, %51
  %72 = phi %"class.base::OnceCallback.2345"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.base::OnceCallback.2345"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.base::OnceCallback.2345"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.base::OnceCallback.2345"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.base::OnceCallback.2345"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %77, i64 -1
  %80 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %78, i64 -1
  %81 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::OnceCallback.2345"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::OnceCallback.2345"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %77, i64 -2
  %86 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %78, i64 -2
  %87 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.base::OnceCallback.2345"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.base::OnceCallback.2345"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %87, align 8
  %91 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %77, i64 -3
  %92 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %78, i64 -3
  %93 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.base::OnceCallback.2345"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::OnceCallback.2345"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8
  %97 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %77, i64 -4
  %98 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %78, i64 -4
  %99 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.base::OnceCallback.2345"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.base::OnceCallback.2345"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8
  %103 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %77, i64 -5
  %104 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %78, i64 -5
  %105 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.base::OnceCallback.2345"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.base::OnceCallback.2345"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %105, align 8
  %109 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %77, i64 -6
  %110 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %78, i64 -6
  %111 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.base::OnceCallback.2345"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.base::OnceCallback.2345"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %111, align 8
  %115 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %77, i64 -7
  %116 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %78, i64 -7
  %117 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::OnceCallback.2345"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::OnceCallback.2345"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %77, i64 -8
  %122 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %78, i64 -8
  %123 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.base::OnceCallback.2345"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.base::OnceCallback.2345"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %123, align 8
  %127 = icmp eq %"class.base::OnceCallback.2345"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.base::OnceCallback.2345"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.base::OnceCallback.2345"*, %"class.base::OnceCallback.2345"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.base::OnceCallback.2345"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.base::OnceCallback.2345"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.base::OnceCallback.2345"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.base::OnceCallback.2345"*
  %138 = icmp eq %"class.base::OnceCallback.2345"* %133, %137
  br i1 %138, label %144, label %139

139:                                              ; preds = %132, %139
  %140 = phi %"class.base::OnceCallback.2345"* [ %141, %139 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %140, i64 -1
  %142 = getelementptr inbounds %"class.base::OnceCallback.2345", %"class.base::OnceCallback.2345"* %141, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %142) #12
  %143 = icmp eq %"class.base::OnceCallback.2345"* %141, %137
  br i1 %143, label %144, label %139

144:                                              ; preds = %139, %132
  %145 = icmp eq i64 %135, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %147) #13
  br label %148

148:                                              ; preds = %144, %146
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEE6insertINS_5IDMapINS3_10unique_ptrINS_12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS3_14default_deleteISN_EEEEiE11KeyIteratorEEEvT_ST_(%"class.base::internal::flat_tree.2312"*, %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", align 1
  %5 = alloca %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = ptrtoint %"struct.std::__1::__hash_node_base.2318"* %1 to i64
  %9 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %1, %2
  br i1 %9, label %167, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %1, i64 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.2318"*, %"struct.std::__1::__hash_node_base.2318"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %12, %2
  %14 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %0, i64 0, i32 0, i32 0, i32 1
  br i1 %13, label %15, label %22

15:                                               ; preds = %10
  %16 = load i32*, i32** %14, align 8
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.2318", %"struct.std::__1::__hash_node_base.2318"* %1, i64 2
  %19 = bitcast %"struct.std::__1::__hash_node_base.2318"* %18 to i32*
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %6, align 4
  %21 = call { i32*, i8 } @_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEE21emplace_hint_key_argsIiJiEEENS3_4pairINS3_11__wrap_iterIPiEEbEENSD_IPKiEERKT_DpOT0_(%"class.base::internal::flat_tree.2312"* %0, i32* %16, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #12
  br label %167

22:                                               ; preds = %10
  %23 = bitcast i32** %14 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::internal::flat_tree.2312"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 2
  %29 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = inttoptr i64 %26 to i32*
  %31 = getelementptr inbounds i32, i32* %30, i64 %28
  %32 = bitcast i32* %7 to i8*
  br label %33

33:                                               ; preds = %22, %56
  %34 = phi i32* [ %31, %22 ], [ %63, %56 ]
  %35 = phi i32* [ %30, %22 ], [ %57, %56 ]
  %36 = phi i64 [ %8, %22 ], [ %60, %56 ]
  %37 = phi i64 [ %28, %22 ], [ %58, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #12
  %38 = inttoptr i64 %36 to %"struct.std::__1::__hash_node"*
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %7, align 4
  %41 = call { i32*, i8 } @_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEE13append_uniqueIiEENS3_4pairINS3_11__wrap_iterIPiEEbEESF_SF_OT_(%"class.base::internal::flat_tree.2312"* %0, i32* %35, i32* %34, i32* nonnull dereferenceable(4) %7)
  %42 = extractvalue { i32*, i8 } %41, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #12
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %33
  %46 = load i32*, i32** %29, align 8
  br label %56

47:                                               ; preds = %33
  %48 = extractvalue { i32*, i8 } %41, 0
  %49 = load i64, i64* %25, align 8
  %50 = ptrtoint i32* %48 to i64
  %51 = sub i64 %50, %49
  %52 = ashr exact i64 %51, 2
  %53 = icmp slt i64 %52, %37
  %54 = select i1 %53, i64 %52, i64 %37
  %55 = inttoptr i64 %49 to i32*
  br label %56

56:                                               ; preds = %45, %47
  %57 = phi i32* [ %46, %45 ], [ %55, %47 ]
  %58 = phi i64 [ %37, %45 ], [ %54, %47 ]
  %59 = inttoptr i64 %36 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = inttoptr i64 %60 to %"struct.std::__1::__hash_node_base.2318"*
  %62 = icmp eq %"struct.std::__1::__hash_node_base.2318"* %61, %2
  %63 = getelementptr inbounds i32, i32* %57, i64 %28
  br i1 %62, label %64, label %33

64:                                               ; preds = %56
  %65 = load i32*, i32** %14, align 8
  %66 = bitcast i32* %65 to i8*
  %67 = ptrtoint i32* %65 to i64
  %68 = getelementptr inbounds %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %68)
  %69 = ptrtoint i32* %63 to i64
  %70 = sub i64 %67, %69
  %71 = ashr exact i64 %70, 2
  %72 = icmp sgt i64 %70, 512
  br i1 %72, label %73, label %84

73:                                               ; preds = %64
  %74 = icmp slt i64 %71, 2305843009213693951
  %75 = select i1 %74, i64 %71, i64 2305843009213693951
  br label %76

76:                                               ; preds = %81, %73
  %77 = phi i64 [ %82, %81 ], [ %75, %73 ]
  %78 = shl i64 %77, 2
  %79 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %78, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %80 = icmp eq i8* %79, null
  br i1 %80, label %81, label %85

81:                                               ; preds = %76
  %82 = lshr i64 %77, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %76

84:                                               ; preds = %81, %64
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %63, i32* %65, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %71, i32* null, i64 0) #12
  br label %87

85:                                               ; preds = %76
  %86 = bitcast i8* %79 to i32*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %63, i32* %65, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %71, i32* nonnull %86, i64 %77) #12
  call void @_ZdlPv(i8* nonnull %79) #13
  br label %87

87:                                               ; preds = %84, %85
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %68)
  %88 = icmp eq i32* %63, %65
  br i1 %88, label %136, label %89

89:                                               ; preds = %87, %93
  %90 = phi i32* [ %91, %93 ], [ %63, %87 ]
  %91 = getelementptr inbounds i32, i32* %90, i64 1
  %92 = icmp eq i32* %91, %65
  br i1 %92, label %136, label %93

93:                                               ; preds = %89
  %94 = load i32, i32* %90, align 4
  %95 = load i32, i32* %91, align 4
  %96 = icmp slt i32 %94, %95
  br i1 %96, label %89, label %97

97:                                               ; preds = %93
  %98 = icmp eq i32* %90, %65
  br i1 %98, label %136, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds i32, i32* %90, i64 2
  %101 = icmp eq i32* %100, %65
  br i1 %101, label %123, label %102

102:                                              ; preds = %99
  %103 = ptrtoint i32* %90 to i64
  br label %104

104:                                              ; preds = %119, %102
  %105 = phi i32 [ %120, %119 ], [ %94, %102 ]
  %106 = phi i32* [ %118, %119 ], [ %90, %102 ]
  %107 = phi i32* [ %116, %119 ], [ %100, %102 ]
  %108 = phi i64 [ %115, %119 ], [ %103, %102 ]
  %109 = load i32, i32* %107, align 4
  %110 = icmp slt i32 %105, %109
  br i1 %110, label %111, label %114

111:                                              ; preds = %104
  %112 = getelementptr inbounds i32, i32* %106, i64 1
  %113 = ptrtoint i32* %112 to i64
  store i32 %109, i32* %112, align 4
  br label %114

114:                                              ; preds = %111, %104
  %115 = phi i64 [ %108, %104 ], [ %113, %111 ]
  %116 = getelementptr inbounds i32, i32* %107, i64 1
  %117 = icmp eq i32* %116, %65
  %118 = inttoptr i64 %115 to i32*
  br i1 %117, label %121, label %119

119:                                              ; preds = %114
  %120 = load i32, i32* %118, align 4
  br label %104

121:                                              ; preds = %114
  %122 = inttoptr i64 %115 to i32*
  br label %123

123:                                              ; preds = %121, %99
  %124 = phi i32* [ %90, %99 ], [ %122, %121 ]
  %125 = getelementptr inbounds i32, i32* %124, i64 1
  %126 = icmp eq i32* %125, %65
  br i1 %126, label %136, label %127

127:                                              ; preds = %123
  %128 = load i64, i64* %23, align 8
  %129 = sub i64 %128, %67
  %130 = ashr exact i64 %129, 2
  %131 = icmp eq i64 %129, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = bitcast i32* %125 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %66, i64 %129, i1 false) #12
  br label %134

134:                                              ; preds = %132, %127
  %135 = getelementptr inbounds i32, i32* %125, i64 %130
  store i32* %135, i32** %14, align 8
  br label %136

136:                                              ; preds = %89, %87, %97, %123, %134
  %137 = load i32*, i32** %29, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 %58
  %139 = getelementptr inbounds i32, i32* %137, i64 %28
  %140 = load i32*, i32** %14, align 8
  %141 = getelementptr inbounds %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %141)
  %142 = ptrtoint i32* %138 to i64
  %143 = ptrtoint i32* %139 to i64
  %144 = sub i64 %143, %142
  %145 = ashr exact i64 %144, 2
  %146 = ptrtoint i32* %140 to i64
  %147 = sub i64 %146, %143
  %148 = ashr exact i64 %147, 2
  %149 = icmp slt i64 %148, %145
  %150 = select i1 %149, i64 %148, i64 %145
  %151 = icmp sgt i64 %150, 0
  br i1 %151, label %152, label %163

152:                                              ; preds = %136
  %153 = icmp slt i64 %150, 2305843009213693951
  %154 = select i1 %153, i64 %150, i64 2305843009213693951
  br label %155

155:                                              ; preds = %160, %152
  %156 = phi i64 [ %161, %160 ], [ %154, %152 ]
  %157 = shl i64 %156, 2
  %158 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %157, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %159 = icmp eq i8* %158, null
  br i1 %159, label %160, label %164

160:                                              ; preds = %155
  %161 = lshr i64 %156, 1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %155

163:                                              ; preds = %160, %136
  call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %138, i32* %139, i32* %140, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %5, i64 %145, i64 %148, i32* null, i64 0) #12
  br label %166

164:                                              ; preds = %155
  %165 = bitcast i8* %158 to i32*
  call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %138, i32* %139, i32* %140, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %5, i64 %145, i64 %148, i32* nonnull %165, i64 %156) #12
  call void @_ZdlPv(i8* nonnull %158) #13
  br label %166

166:                                              ; preds = %163, %164
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %141)
  br label %167

167:                                              ; preds = %3, %166, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEE13append_uniqueIiEENS3_4pairINS3_11__wrap_iterIPiEEbEESF_SF_OT_(%"class.base::internal::flat_tree.2312"*, i32*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = ptrtoint i32* %2 to i64
  %7 = sub i64 %6, %5
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %4
  %10 = ashr exact i64 %7, 2
  %11 = load i32, i32* %3, align 4
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i32* [ %1, %9 ], [ %23, %12 ]
  %14 = phi i64 [ %10, %9 ], [ %22, %12 ]
  %15 = lshr i64 %14, 1
  %16 = getelementptr inbounds i32, i32* %13, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, %11
  %19 = getelementptr inbounds i32, i32* %16, i64 1
  %20 = xor i64 %15, -1
  %21 = add i64 %14, %20
  %22 = select i1 %18, i64 %21, i64 %15
  %23 = select i1 %18, i32* %19, i32* %13
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %25, label %12

25:                                               ; preds = %12
  %26 = ptrtoint i32* %23 to i64
  br label %27

27:                                               ; preds = %25, %4
  %28 = phi i64 [ %26, %25 ], [ %5, %4 ]
  %29 = phi i32* [ %23, %25 ], [ %1, %4 ]
  %30 = icmp eq i32* %29, %2
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = load i32, i32* %3, align 4
  %33 = load i32, i32* %29, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %110

35:                                               ; preds = %27, %31
  %36 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.base::internal::flat_tree.2312"* %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %28, %38
  %40 = ashr exact i64 %39, 2
  %41 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %0, i64 0, i32 0, i32 0, i32 1
  %42 = load i32*, i32** %41, align 8
  %43 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = icmp ult i32* %42, %44
  %46 = ptrtoint i32* %44 to i64
  br i1 %45, label %47, label %52

47:                                               ; preds = %35
  %48 = load i32, i32* %3, align 4
  store i32 %48, i32* %42, align 4
  %49 = getelementptr inbounds i32, i32* %42, i64 1
  %50 = ptrtoint i32* %49 to i64
  %51 = bitcast i32** %41 to i64*
  store i64 %50, i64* %51, align 8
  br label %106

52:                                               ; preds = %35
  %53 = ptrtoint i32* %42 to i64
  %54 = bitcast i32** %41 to i64*
  %55 = sub i64 %53, %38
  %56 = ashr exact i64 %55, 2
  %57 = add nsw i64 %56, 1
  %58 = icmp ugt i64 %57, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %52
  %60 = bitcast %"class.base::internal::flat_tree.2312"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %52
  %62 = bitcast i32** %43 to i64*
  %63 = sub i64 %46, %38
  %64 = ashr exact i64 %63, 2
  %65 = icmp ult i64 %64, 2305843009213693951
  br i1 %65, label %66, label %74

66:                                               ; preds = %61
  %67 = ashr exact i64 %63, 1
  %68 = icmp ult i64 %67, %57
  %69 = select i1 %68, i64 %57, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %66
  %72 = icmp ugt i64 %69, 4611686018427387903
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  tail call void @abort() #14
  unreachable

74:                                               ; preds = %71, %61
  %75 = phi i64 [ %69, %71 ], [ 4611686018427387903, %61 ]
  %76 = shl i64 %75, 2
  %77 = tail call i8* @_Znwm(i64 %76) #13
  %78 = bitcast i8* %77 to i32*
  br label %79

79:                                               ; preds = %74, %66
  %80 = phi i64 [ %75, %74 ], [ 0, %66 ]
  %81 = phi i32* [ %78, %74 ], [ null, %66 ]
  %82 = getelementptr inbounds i32, i32* %81, i64 %56
  %83 = getelementptr inbounds i32, i32* %81, i64 %80
  %84 = ptrtoint i32* %83 to i64
  %85 = load i32, i32* %3, align 4
  store i32 %85, i32* %82, align 4
  %86 = getelementptr inbounds i32, i32* %82, i64 1
  %87 = ptrtoint i32* %86 to i64
  %88 = load i32*, i32** %36, align 8
  %89 = load i64, i64* %54, align 8
  %90 = ptrtoint i32* %88 to i64
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 2
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds i32, i32* %82, i64 %93
  %95 = ptrtoint i32* %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %79
  %98 = bitcast i32* %94 to i8*
  %99 = bitcast i32* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 %91, i1 false) #12
  %100 = load i32*, i32** %36, align 8
  br label %101

101:                                              ; preds = %97, %79
  %102 = phi i32* [ %88, %79 ], [ %100, %97 ]
  store i64 %95, i64* %37, align 8
  store i64 %87, i64* %54, align 8
  store i64 %84, i64* %62, align 8
  %103 = icmp eq i32* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = bitcast i32* %102 to i8*
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %47, %101, %104
  %107 = load i32*, i32** %36, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 %40
  %109 = ptrtoint i32* %108 to i64
  br label %110

110:                                              ; preds = %31, %106
  %111 = phi i64 [ %109, %106 ], [ %28, %31 ]
  %112 = phi i8 [ 1, %106 ], [ 0, %31 ]
  %113 = inttoptr i64 %111 to i32*
  %114 = insertvalue { i32*, i8 } undef, i32* %113, 0
  %115 = insertvalue { i32*, i8 } %114, i8 %112, 1
  ret { i32*, i8 } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEE21emplace_hint_key_argsIiJiEEENS3_4pairINS3_11__wrap_iterIPiEEbEENSD_IPKiEERKT_DpOT0_(%"class.base::internal::flat_tree.2312"*, i32*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, %1
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %2, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  br label %31

17:                                               ; preds = %4, %8
  %18 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, %1
  %21 = ptrtoint i32* %19 to i64
  br i1 %20, label %26, label %22

22:                                               ; preds = %17
  %23 = load i32, i32* %2, align 4
  %24 = load i32, i32* %1, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %29

26:                                               ; preds = %17, %22
  %27 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %0, i64 0, i32 0
  %28 = tail call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJiEEENS_11__wrap_iterIPiEENS5_IPKiEEDpOT_(%"class.std::__1::vector.1160"* %27, i32* %1, i32* dereferenceable(4) %3) #12
  br label %62

29:                                               ; preds = %22
  %30 = icmp slt i32 %24, %23
  br i1 %30, label %31, label %62

31:                                               ; preds = %29, %13
  %32 = phi i32 [ %11, %13 ], [ %23, %29 ]
  %33 = phi i64 [ %16, %13 ], [ %21, %29 ]
  %34 = ptrtoint i32* %6 to i64
  %35 = sub i64 %33, %34
  %36 = icmp eq i64 %35, 0
  %37 = inttoptr i64 %33 to i32*
  br i1 %36, label %53, label %38

38:                                               ; preds = %31
  %39 = ashr exact i64 %35, 2
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i32* [ %6, %38 ], [ %51, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %50, %40 ]
  %43 = lshr i64 %42, 1
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %45, %32
  %47 = getelementptr inbounds i32, i32* %44, i64 1
  %48 = xor i64 %43, -1
  %49 = add i64 %42, %48
  %50 = select i1 %46, i64 %49, i64 %43
  %51 = select i1 %46, i32* %47, i32* %41
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %40, %31
  %54 = phi i32* [ %6, %31 ], [ %51, %40 ]
  %55 = icmp eq i32* %54, %37
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = load i32, i32* %54, align 4
  %58 = icmp slt i32 %32, %57
  br i1 %58, label %59, label %62

59:                                               ; preds = %56, %53
  %60 = getelementptr inbounds %"class.base::internal::flat_tree.2312", %"class.base::internal::flat_tree.2312"* %0, i64 0, i32 0
  %61 = tail call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJiEEENS_11__wrap_iterIPiEENS5_IPKiEEDpOT_(%"class.std::__1::vector.1160"* %60, i32* %54, i32* dereferenceable(4) %3) #12
  br label %62

62:                                               ; preds = %59, %56, %29, %26
  %63 = phi i32* [ %28, %26 ], [ %1, %29 ], [ %61, %59 ], [ %54, %56 ]
  %64 = phi i8 [ 1, %26 ], [ 0, %29 ], [ 1, %59 ], [ 0, %56 ]
  %65 = insertvalue { i32*, i8 } undef, i32* %63, 0
  %66 = insertvalue { i32*, i8 } %65, i8 %64, 1
  ret { i32*, i8 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJiEEENS_11__wrap_iterIPiEENS5_IPKiEEDpOT_(%"class.std::__1::vector.1160"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.2533", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1160", %"class.std::__1::vector.1160"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.1160", %"class.std::__1::vector.1160"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.1160", %"class.std::__1::vector.1160"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !32
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !32
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !35, !noalias !32
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !35, !noalias !32
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !32
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !32
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !35, !noalias !32
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !35, !noalias !32
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !32
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !32
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !35, !noalias !32
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !35, !noalias !32
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !32
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !32
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !35, !noalias !32
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !35, !noalias !32
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !37

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !32
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !32
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !35, !noalias !32
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !35, !noalias !32
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !39

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #12
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !40

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.1160", %"class.std::__1::vector.1160"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.2533"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #12
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.1160"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.2533"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.1160"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #14
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.1165"** %165 to %"class.std::__1::__compressed_pair.1162"**
  store %"class.std::__1::__compressed_pair.1162"* %159, %"class.std::__1::__compressed_pair.1162"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.1165"** %165 to %"class.std::__1::__compressed_pair.1162"**
  store %"class.std::__1::__compressed_pair.1162"* %159, %"class.std::__1::__compressed_pair.1162"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #14
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #13
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJiEEEvDpOT_(%"struct.std::__1::__split_buffer.2533"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #12
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !41

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.2533"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #13
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #12
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJiEEEvDpOT_(%"struct.std::__1::__split_buffer.2533"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #12
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.2533"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #14
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #13
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !42
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !42
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !45, !noalias !42
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !45, !noalias !42
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !42
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !42
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !45, !noalias !42
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !45, !noalias !42
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !42
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !42
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !45, !noalias !42
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !45, !noalias !42
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !42
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !42
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !45, !noalias !42
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !45, !noalias !42
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !47

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !42
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !42
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !45, !noalias !42
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !45, !noalias !42
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !48

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !49

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !50

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #13
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i32*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i32* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i32* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i32, i32* %0, i64 1
  %20 = icmp eq i32* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i32, i32* %1, i64 -2
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 4
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i32, i32* %19, align 4
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i32* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 -1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i32 %32, i32* %30, align 4
  %35 = icmp eq i32* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i32* [ %30, %29 ], [ %0, %34 ]
  store i32 %28, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i32* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 4
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i32* [ %410, %408 ], [ %40, %39 ]
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i32* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 -1
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i32* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i32 %44, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %43, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i32 %49, i32* %47, align 4
  %57 = icmp eq i32* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i32, i32* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32* %0, i32* %60, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i32, i32* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %63, i32* %64)
  %65 = getelementptr inbounds i32, i32* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i32* %366 to i64
  %68 = icmp eq i32* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i32, i32* %4, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 2
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i32* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i32* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i32* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i32, i32* %4, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i32* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i32* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i32, i32* %90, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %90, i64 1
  %95 = getelementptr inbounds i32, i32* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !51

98:                                               ; preds = %89, %77
  %99 = phi i32* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i32* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 28
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i32, i32* %4, i64 %103
  %105 = ptrtoint i32* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i32, i32* %368, i64 %108
  %110 = getelementptr i32, i32* %366, i64 %108
  %111 = icmp ult i32* %368, %110
  %112 = icmp ult i32* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 9223372036854775800
  %116 = getelementptr i32, i32* %366, i64 %115
  %117 = getelementptr i32, i32* %368, i64 %115
  %118 = add nsw i64 %115, -8
  %119 = lshr exact i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 24
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i32, i32* %366, i64 %126
  %129 = getelementptr i32, i32* %368, i64 %126
  %130 = bitcast i32* %128 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !52
  %132 = getelementptr i32, i32* %128, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !52
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !alias.scope !55, !noalias !52
  %136 = getelementptr i32, i32* %129, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %137, align 4, !alias.scope !55, !noalias !52
  %138 = or i64 %126, 8
  %139 = getelementptr i32, i32* %366, i64 %138
  %140 = getelementptr i32, i32* %368, i64 %138
  %141 = bitcast i32* %139 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !alias.scope !52
  %143 = getelementptr i32, i32* %139, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !52
  %146 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %146, align 4, !alias.scope !55, !noalias !52
  %147 = getelementptr i32, i32* %140, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %148, align 4, !alias.scope !55, !noalias !52
  %149 = or i64 %126, 16
  %150 = getelementptr i32, i32* %366, i64 %149
  %151 = getelementptr i32, i32* %368, i64 %149
  %152 = bitcast i32* %150 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !52
  %154 = getelementptr i32, i32* %150, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !52
  %157 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !55, !noalias !52
  %158 = getelementptr i32, i32* %151, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !55, !noalias !52
  %160 = or i64 %126, 24
  %161 = getelementptr i32, i32* %366, i64 %160
  %162 = getelementptr i32, i32* %368, i64 %160
  %163 = bitcast i32* %161 to <4 x i32>*
  %164 = load <4 x i32>, <4 x i32>* %163, align 4, !alias.scope !52
  %165 = getelementptr i32, i32* %161, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4, !alias.scope !52
  %168 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %164, <4 x i32>* %168, align 4, !alias.scope !55, !noalias !52
  %169 = getelementptr i32, i32* %162, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %170, align 4, !alias.scope !55, !noalias !52
  %171 = add i64 %126, 32
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !57

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i32, i32* %366, i64 %178
  %181 = getelementptr i32, i32* %368, i64 %178
  %182 = bitcast i32* %180 to <4 x i32>*
  %183 = load <4 x i32>, <4 x i32>* %182, align 4, !alias.scope !52
  %184 = getelementptr i32, i32* %180, i64 4
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4, !alias.scope !52
  %187 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %187, align 4, !alias.scope !55, !noalias !52
  %188 = getelementptr i32, i32* %181, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %189, align 4, !alias.scope !55, !noalias !52
  %190 = add i64 %178, 8
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !58

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i32* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i32* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i32* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i32* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i32* %196 to i64
  %202 = icmp eq i32* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i32, i32* %4, i64 %204
  %206 = ptrtoint i32* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 2
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 8
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i32, i32* %4, i64 %212
  %214 = ptrtoint i32* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 2
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i32, i32* %198, i64 %217
  %219 = getelementptr i32, i32* %196, i64 %217
  %220 = icmp ult i32* %198, %219
  %221 = icmp ult i32* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 9223372036854775800
  %225 = getelementptr i32, i32* %196, i64 %224
  %226 = getelementptr i32, i32* %198, i64 %224
  %227 = add nsw i64 %224, -8
  %228 = lshr exact i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 24
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i32, i32* %196, i64 %235
  %238 = getelementptr i32, i32* %198, i64 %235
  %239 = bitcast i32* %237 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !59
  %241 = getelementptr i32, i32* %237, i64 4
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !59
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %244, align 4, !alias.scope !62, !noalias !59
  %245 = getelementptr i32, i32* %238, i64 4
  %246 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %246, align 4, !alias.scope !62, !noalias !59
  %247 = or i64 %235, 8
  %248 = getelementptr i32, i32* %196, i64 %247
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = bitcast i32* %248 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !59
  %252 = getelementptr i32, i32* %248, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !59
  %255 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %255, align 4, !alias.scope !62, !noalias !59
  %256 = getelementptr i32, i32* %249, i64 4
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %257, align 4, !alias.scope !62, !noalias !59
  %258 = or i64 %235, 16
  %259 = getelementptr i32, i32* %196, i64 %258
  %260 = getelementptr i32, i32* %198, i64 %258
  %261 = bitcast i32* %259 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !59
  %263 = getelementptr i32, i32* %259, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !59
  %266 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %266, align 4, !alias.scope !62, !noalias !59
  %267 = getelementptr i32, i32* %260, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %268, align 4, !alias.scope !62, !noalias !59
  %269 = or i64 %235, 24
  %270 = getelementptr i32, i32* %196, i64 %269
  %271 = getelementptr i32, i32* %198, i64 %269
  %272 = bitcast i32* %270 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4, !alias.scope !59
  %274 = getelementptr i32, i32* %270, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !59
  %277 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %273, <4 x i32>* %277, align 4, !alias.scope !62, !noalias !59
  %278 = getelementptr i32, i32* %271, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %279, align 4, !alias.scope !62, !noalias !59
  %280 = add i64 %235, 32
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !64

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i32, i32* %196, i64 %287
  %290 = getelementptr i32, i32* %198, i64 %287
  %291 = bitcast i32* %289 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4, !alias.scope !59
  %293 = getelementptr i32, i32* %289, i64 4
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4, !alias.scope !59
  %296 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %296, align 4, !alias.scope !62, !noalias !59
  %297 = getelementptr i32, i32* %290, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %298, align 4, !alias.scope !62, !noalias !59
  %299 = add i64 %287, 8
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !65

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i32* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i32* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i32* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i32, i32* %4, i64 %308
  %310 = ptrtoint i32* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 2
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i32* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i32* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i32, i32* %317, align 4
  store i32 %320, i32* %318, align 4
  %321 = getelementptr inbounds i32, i32* %317, i64 1
  %322 = getelementptr inbounds i32, i32* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !66

325:                                              ; preds = %316, %304
  %326 = phi i32* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i32* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 28
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i32* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i32* [ %355, %329 ], [ %327, %325 ]
  %332 = load i32, i32* %330, align 4
  store i32 %332, i32* %331, align 4
  %333 = getelementptr inbounds i32, i32* %330, i64 1
  %334 = getelementptr inbounds i32, i32* %331, i64 1
  %335 = load i32, i32* %333, align 4
  store i32 %335, i32* %334, align 4
  %336 = getelementptr inbounds i32, i32* %330, i64 2
  %337 = getelementptr inbounds i32, i32* %331, i64 2
  %338 = load i32, i32* %336, align 4
  store i32 %338, i32* %337, align 4
  %339 = getelementptr inbounds i32, i32* %330, i64 3
  %340 = getelementptr inbounds i32, i32* %331, i64 3
  %341 = load i32, i32* %339, align 4
  store i32 %341, i32* %340, align 4
  %342 = getelementptr inbounds i32, i32* %330, i64 4
  %343 = getelementptr inbounds i32, i32* %331, i64 4
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %343, align 4
  %345 = getelementptr inbounds i32, i32* %330, i64 5
  %346 = getelementptr inbounds i32, i32* %331, i64 5
  %347 = load i32, i32* %345, align 4
  store i32 %347, i32* %346, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 6
  %349 = getelementptr inbounds i32, i32* %331, i64 6
  %350 = load i32, i32* %348, align 4
  store i32 %350, i32* %349, align 4
  %351 = getelementptr inbounds i32, i32* %330, i64 7
  %352 = getelementptr inbounds i32, i32* %331, i64 7
  %353 = load i32, i32* %351, align 4
  store i32 %353, i32* %352, align 4
  %354 = getelementptr inbounds i32, i32* %330, i64 8
  %355 = getelementptr inbounds i32, i32* %331, i64 8
  %356 = icmp eq i32* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !67

357:                                              ; preds = %195
  %358 = load i32, i32* %197, align 4
  %359 = load i32, i32* %196, align 4
  %360 = icmp slt i32 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i32 %358, i32* %198, align 4
  %362 = getelementptr inbounds i32, i32* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i32 %359, i32* %198, align 4
  %364 = getelementptr inbounds i32, i32* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i32* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i32* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i32, i32* %198, i64 1
  %369 = icmp eq i32* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i32* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i32* [ %396, %370 ], [ %100, %98 ]
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %371, i64 1
  %375 = getelementptr inbounds i32, i32* %372, i64 1
  %376 = load i32, i32* %374, align 4
  store i32 %376, i32* %375, align 4
  %377 = getelementptr inbounds i32, i32* %371, i64 2
  %378 = getelementptr inbounds i32, i32* %372, i64 2
  %379 = load i32, i32* %377, align 4
  store i32 %379, i32* %378, align 4
  %380 = getelementptr inbounds i32, i32* %371, i64 3
  %381 = getelementptr inbounds i32, i32* %372, i64 3
  %382 = load i32, i32* %380, align 4
  store i32 %382, i32* %381, align 4
  %383 = getelementptr inbounds i32, i32* %371, i64 4
  %384 = getelementptr inbounds i32, i32* %372, i64 4
  %385 = load i32, i32* %383, align 4
  store i32 %385, i32* %384, align 4
  %386 = getelementptr inbounds i32, i32* %371, i64 5
  %387 = getelementptr inbounds i32, i32* %372, i64 5
  %388 = load i32, i32* %386, align 4
  store i32 %388, i32* %387, align 4
  %389 = getelementptr inbounds i32, i32* %371, i64 6
  %390 = getelementptr inbounds i32, i32* %372, i64 6
  %391 = load i32, i32* %389, align 4
  store i32 %391, i32* %390, align 4
  %392 = getelementptr inbounds i32, i32* %371, i64 7
  %393 = getelementptr inbounds i32, i32* %372, i64 7
  %394 = load i32, i32* %392, align 4
  store i32 %394, i32* %393, align 4
  %395 = getelementptr inbounds i32, i32* %371, i64 8
  %396 = getelementptr inbounds i32, i32* %372, i64 8
  %397 = icmp eq i32* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !68

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %0, i32* %60, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %399, i32* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %0, i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i32* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i32* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i32, i32* %402, i64 -1
  %404 = load i32, i32* %403, align 4
  %405 = icmp slt i32 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i32 %404, i32* %402, align 4
  %407 = icmp eq i32* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i32* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i32 %54, i32* %409, align 4
  %410 = getelementptr inbounds i32, i32* %43, i64 2
  %411 = icmp eq i32* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i32*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  %14 = getelementptr inbounds i32, i32* %4, i64 1
  %15 = load i32, i32* %0, align 4
  store i32 %15, i32* %14, align 4
  br label %390

16:                                               ; preds = %8
  store i32 %11, i32* %4, align 4
  %17 = getelementptr inbounds i32, i32* %4, i64 1
  %18 = load i32, i32* %9, align 4
  store i32 %18, i32* %17, align 4
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i32* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %0, align 4
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds i32, i32* %0, i64 1
  %26 = icmp eq i32* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i32 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i32* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i32* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = load i32, i32* %29, align 4
  %33 = icmp slt i32 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i32 %28, i32* %31, align 4
  %35 = icmp eq i32* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i32* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i32, i32* %37, i64 -1
  %39 = load i32, i32* %29, align 4
  %40 = load i32, i32* %38, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i32 %40, i32* %37, align 4
  %43 = icmp eq i32* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i32* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i32, i32* %29, align 4
  store i32 %46, i32* %45, align 4
  br label %48

47:                                               ; preds = %27
  store i32 %32, i32* %31, align 4
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i32, i32* %29, i64 1
  %50 = icmp eq i32* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %31, align 4
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %0, i32* %55, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %54, i32* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i32, i32* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %55, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %56, i32* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i32* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i32* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i32* %60 to i64
  %63 = icmp eq i32* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i32, i32* %1, i64 -1
  %66 = ptrtoint i32* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 8
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i32, i32* %1, i64 -1
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i32, i32* %61, i64 %76
  %78 = getelementptr i32, i32* %60, i64 %76
  %79 = icmp ult i32* %61, %78
  %80 = icmp ult i32* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 9223372036854775800
  %84 = getelementptr i32, i32* %61, i64 %83
  %85 = getelementptr i32, i32* %60, i64 %83
  %86 = add nsw i64 %83, -8
  %87 = lshr exact i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 24
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i32, i32* %61, i64 %94
  %97 = getelementptr i32, i32* %60, i64 %94
  %98 = bitcast i32* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4, !alias.scope !69
  %100 = getelementptr i32, i32* %97, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !alias.scope !69
  %103 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %103, align 4, !alias.scope !72, !noalias !69
  %104 = getelementptr i32, i32* %96, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4, !alias.scope !72, !noalias !69
  %106 = or i64 %94, 8
  %107 = getelementptr i32, i32* %61, i64 %106
  %108 = getelementptr i32, i32* %60, i64 %106
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !69
  %111 = getelementptr i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !69
  %114 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !72, !noalias !69
  %115 = getelementptr i32, i32* %107, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !72, !noalias !69
  %117 = or i64 %94, 16
  %118 = getelementptr i32, i32* %61, i64 %117
  %119 = getelementptr i32, i32* %60, i64 %117
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !69
  %122 = getelementptr i32, i32* %119, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !69
  %125 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %125, align 4, !alias.scope !72, !noalias !69
  %126 = getelementptr i32, i32* %118, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %127, align 4, !alias.scope !72, !noalias !69
  %128 = or i64 %94, 24
  %129 = getelementptr i32, i32* %61, i64 %128
  %130 = getelementptr i32, i32* %60, i64 %128
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !alias.scope !69
  %133 = getelementptr i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !alias.scope !69
  %136 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %136, align 4, !alias.scope !72, !noalias !69
  %137 = getelementptr i32, i32* %129, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %135, <4 x i32>* %138, align 4, !alias.scope !72, !noalias !69
  %139 = add i64 %94, 32
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !74

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i32, i32* %61, i64 %146
  %149 = getelementptr i32, i32* %60, i64 %146
  %150 = bitcast i32* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 4, !alias.scope !69
  %152 = getelementptr i32, i32* %149, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4, !alias.scope !69
  %155 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %155, align 4, !alias.scope !72, !noalias !69
  %156 = getelementptr i32, i32* %148, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %157, align 4, !alias.scope !72, !noalias !69
  %158 = add i64 %146, 8
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !75

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i32* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i32* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i32* %165 to i64
  %167 = getelementptr i32, i32* %1, i64 -1
  %168 = ptrtoint i32* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i32* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i32* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %175, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 1
  %180 = getelementptr inbounds i32, i32* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !76

183:                                              ; preds = %174, %163
  %184 = phi i32* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i32* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 28
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i32* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i32* [ %212, %187 ], [ %185, %183 ]
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 4
  %191 = getelementptr inbounds i32, i32* %189, i64 1
  %192 = getelementptr inbounds i32, i32* %188, i64 1
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %192, align 4
  %194 = getelementptr inbounds i32, i32* %189, i64 2
  %195 = getelementptr inbounds i32, i32* %188, i64 2
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %189, i64 3
  %198 = getelementptr inbounds i32, i32* %188, i64 3
  %199 = load i32, i32* %197, align 4
  store i32 %199, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %189, i64 4
  %201 = getelementptr inbounds i32, i32* %188, i64 4
  %202 = load i32, i32* %200, align 4
  store i32 %202, i32* %201, align 4
  %203 = getelementptr inbounds i32, i32* %189, i64 5
  %204 = getelementptr inbounds i32, i32* %188, i64 5
  %205 = load i32, i32* %203, align 4
  store i32 %205, i32* %204, align 4
  %206 = getelementptr inbounds i32, i32* %189, i64 6
  %207 = getelementptr inbounds i32, i32* %188, i64 6
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %189, i64 7
  %210 = getelementptr inbounds i32, i32* %188, i64 7
  %211 = load i32, i32* %209, align 4
  store i32 %211, i32* %210, align 4
  %212 = getelementptr inbounds i32, i32* %189, i64 8
  %213 = getelementptr inbounds i32, i32* %188, i64 8
  %214 = icmp eq i32* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !77

215:                                              ; preds = %53, %385
  %216 = phi i32* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i32* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i32* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i32* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i32* %217 to i64
  %222 = icmp eq i32* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i32, i32* %0, i64 %224
  %226 = ptrtoint i32* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 8
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i32, i32* %0, i64 %232
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 2
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i32, i32* %216, i64 %237
  %239 = getelementptr i32, i32* %217, i64 %237
  %240 = icmp ult i32* %216, %239
  %241 = icmp ult i32* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 9223372036854775800
  %245 = getelementptr i32, i32* %216, i64 %244
  %246 = getelementptr i32, i32* %217, i64 %244
  %247 = add nsw i64 %244, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 24
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i32, i32* %216, i64 %255
  %258 = getelementptr i32, i32* %217, i64 %255
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !78
  %261 = getelementptr i32, i32* %258, i64 4
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !78
  %264 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %264, align 4, !alias.scope !81, !noalias !78
  %265 = getelementptr i32, i32* %257, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %266, align 4, !alias.scope !81, !noalias !78
  %267 = or i64 %255, 8
  %268 = getelementptr i32, i32* %216, i64 %267
  %269 = getelementptr i32, i32* %217, i64 %267
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4, !alias.scope !78
  %272 = getelementptr i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !78
  %275 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %271, <4 x i32>* %275, align 4, !alias.scope !81, !noalias !78
  %276 = getelementptr i32, i32* %268, i64 4
  %277 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %277, align 4, !alias.scope !81, !noalias !78
  %278 = or i64 %255, 16
  %279 = getelementptr i32, i32* %216, i64 %278
  %280 = getelementptr i32, i32* %217, i64 %278
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !78
  %283 = getelementptr i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !78
  %286 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !81, !noalias !78
  %287 = getelementptr i32, i32* %279, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !81, !noalias !78
  %289 = or i64 %255, 24
  %290 = getelementptr i32, i32* %216, i64 %289
  %291 = getelementptr i32, i32* %217, i64 %289
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4, !alias.scope !78
  %294 = getelementptr i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !78
  %297 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %293, <4 x i32>* %297, align 4, !alias.scope !81, !noalias !78
  %298 = getelementptr i32, i32* %290, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %299, align 4, !alias.scope !81, !noalias !78
  %300 = add i64 %255, 32
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !83

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i32, i32* %216, i64 %307
  %310 = getelementptr i32, i32* %217, i64 %307
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4, !alias.scope !78
  %313 = getelementptr i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4, !alias.scope !78
  %316 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %316, align 4, !alias.scope !81, !noalias !78
  %317 = getelementptr i32, i32* %309, i64 4
  %318 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %315, <4 x i32>* %318, align 4, !alias.scope !81, !noalias !78
  %319 = add i64 %307, 8
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !84

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i32* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i32* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i32* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i32, i32* %0, i64 %328
  %330 = ptrtoint i32* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 2
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i32* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i32* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %337, align 4
  %341 = getelementptr inbounds i32, i32* %338, i64 1
  %342 = getelementptr inbounds i32, i32* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !85

345:                                              ; preds = %336, %324
  %346 = phi i32* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i32* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 28
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i32* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i32* [ %374, %349 ], [ %347, %345 ]
  %352 = load i32, i32* %351, align 4
  store i32 %352, i32* %350, align 4
  %353 = getelementptr inbounds i32, i32* %351, i64 1
  %354 = getelementptr inbounds i32, i32* %350, i64 1
  %355 = load i32, i32* %353, align 4
  store i32 %355, i32* %354, align 4
  %356 = getelementptr inbounds i32, i32* %351, i64 2
  %357 = getelementptr inbounds i32, i32* %350, i64 2
  %358 = load i32, i32* %356, align 4
  store i32 %358, i32* %357, align 4
  %359 = getelementptr inbounds i32, i32* %351, i64 3
  %360 = getelementptr inbounds i32, i32* %350, i64 3
  %361 = load i32, i32* %359, align 4
  store i32 %361, i32* %360, align 4
  %362 = getelementptr inbounds i32, i32* %351, i64 4
  %363 = getelementptr inbounds i32, i32* %350, i64 4
  %364 = load i32, i32* %362, align 4
  store i32 %364, i32* %363, align 4
  %365 = getelementptr inbounds i32, i32* %351, i64 5
  %366 = getelementptr inbounds i32, i32* %350, i64 5
  %367 = load i32, i32* %365, align 4
  store i32 %367, i32* %366, align 4
  %368 = getelementptr inbounds i32, i32* %351, i64 6
  %369 = getelementptr inbounds i32, i32* %350, i64 6
  %370 = load i32, i32* %368, align 4
  store i32 %370, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %351, i64 7
  %372 = getelementptr inbounds i32, i32* %350, i64 7
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %351, i64 8
  %375 = getelementptr inbounds i32, i32* %350, i64 8
  %376 = icmp eq i32* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !86

377:                                              ; preds = %215
  %378 = load i32, i32* %218, align 4
  %379 = load i32, i32* %217, align 4
  %380 = icmp slt i32 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i32 %378, i32* %216, align 4
  %382 = getelementptr inbounds i32, i32* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i32 %379, i32* %216, align 4
  %384 = getelementptr inbounds i32, i32* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i32* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i32* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i32, i32* %216, i64 1
  %389 = icmp eq i32* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32*, i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i64, i32*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i32* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i32* %1 to i64
  %13 = ptrtoint i32* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i32* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i32*
  %27 = load i32, i32* %26, align 4
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i32*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i32*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i32* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i32, i32* %31, i64 -1
  %38 = bitcast i32* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 2
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 8
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i32* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i32* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i32* %47 to i64
  %49 = getelementptr i32, i32* %31, i64 -1
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i32* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i32* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  %61 = getelementptr inbounds i32, i32* %58, i64 1
  %62 = getelementptr inbounds i32, i32* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !87

65:                                               ; preds = %56, %45
  %66 = phi i32* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i32* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i32* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 28
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i32, i32* %31, i64 -1
  %72 = bitcast i32* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 2
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i32, i32* %6, i64 %77
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr i32, i32* %29, i64 %77
  %81 = icmp ugt i32* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 9223372036854775800
  %86 = getelementptr i32, i32* %6, i64 %85
  %87 = getelementptr i32, i32* %29, i64 %85
  %88 = add nsw i64 %85, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 24
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i32, i32* %6, i64 %96
  %99 = getelementptr i32, i32* %29, i64 %96
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !88
  %102 = getelementptr i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !88
  %105 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !91, !noalias !88
  %106 = getelementptr i32, i32* %98, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !91, !noalias !88
  %108 = or i64 %96, 8
  %109 = getelementptr i32, i32* %6, i64 %108
  %110 = getelementptr i32, i32* %29, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !88
  %113 = getelementptr i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !88
  %116 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !91, !noalias !88
  %117 = getelementptr i32, i32* %109, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !91, !noalias !88
  %119 = or i64 %96, 16
  %120 = getelementptr i32, i32* %6, i64 %119
  %121 = getelementptr i32, i32* %29, i64 %119
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !88
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !88
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !91, !noalias !88
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !91, !noalias !88
  %130 = or i64 %96, 24
  %131 = getelementptr i32, i32* %6, i64 %130
  %132 = getelementptr i32, i32* %29, i64 %130
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !88
  %135 = getelementptr i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !88
  %138 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !91, !noalias !88
  %139 = getelementptr i32, i32* %131, i64 4
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %140, align 4, !alias.scope !91, !noalias !88
  %141 = add i64 %96, 32
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !93

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i32, i32* %6, i64 %148
  %151 = getelementptr i32, i32* %29, i64 %148
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !88
  %154 = getelementptr i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !88
  %157 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !91, !noalias !88
  %158 = getelementptr i32, i32* %150, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !91, !noalias !88
  %160 = add i64 %148, 8
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !94

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i32* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i32, i32* %15, i64 -1
  %169 = bitcast i32* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 2
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 8
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i32* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i32* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i32* %178 to i64
  %180 = getelementptr i32, i32* %15, i64 -1
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i32* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i32* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i32, i32* %189, align 4
  store i32 %191, i32* %188, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !95

196:                                              ; preds = %187, %176
  %197 = phi i32* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i32* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i32* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 28
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i32, i32* %15, i64 -1
  %203 = bitcast i32* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 2
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i32, i32* %6, i64 %208
  %210 = bitcast i32* %209 to i8*
  %211 = getelementptr i32, i32* %31, i64 %208
  %212 = icmp ugt i32* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 9223372036854775800
  %217 = getelementptr i32, i32* %6, i64 %216
  %218 = getelementptr i32, i32* %31, i64 %216
  %219 = add nsw i64 %216, -8
  %220 = lshr exact i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 24
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i32, i32* %6, i64 %227
  %230 = getelementptr i32, i32* %31, i64 %227
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4, !alias.scope !96
  %233 = getelementptr i32, i32* %230, i64 4
  %234 = bitcast i32* %233 to <4 x i32>*
  %235 = load <4 x i32>, <4 x i32>* %234, align 4, !alias.scope !96
  %236 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %236, align 4, !alias.scope !99, !noalias !96
  %237 = getelementptr i32, i32* %229, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %238, align 4, !alias.scope !99, !noalias !96
  %239 = or i64 %227, 8
  %240 = getelementptr i32, i32* %6, i64 %239
  %241 = getelementptr i32, i32* %31, i64 %239
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !96
  %244 = getelementptr i32, i32* %241, i64 4
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4, !alias.scope !96
  %247 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %247, align 4, !alias.scope !99, !noalias !96
  %248 = getelementptr i32, i32* %240, i64 4
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %246, <4 x i32>* %249, align 4, !alias.scope !99, !noalias !96
  %250 = or i64 %227, 16
  %251 = getelementptr i32, i32* %6, i64 %250
  %252 = getelementptr i32, i32* %31, i64 %250
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !96
  %255 = getelementptr i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !96
  %258 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %258, align 4, !alias.scope !99, !noalias !96
  %259 = getelementptr i32, i32* %251, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %260, align 4, !alias.scope !99, !noalias !96
  %261 = or i64 %227, 24
  %262 = getelementptr i32, i32* %6, i64 %261
  %263 = getelementptr i32, i32* %31, i64 %261
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !96
  %266 = getelementptr i32, i32* %263, i64 4
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 4, !alias.scope !96
  %269 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %269, align 4, !alias.scope !99, !noalias !96
  %270 = getelementptr i32, i32* %262, i64 4
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %271, align 4, !alias.scope !99, !noalias !96
  %272 = add i64 %227, 32
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !101

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i32, i32* %6, i64 %279
  %282 = getelementptr i32, i32* %31, i64 %279
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4, !alias.scope !96
  %285 = getelementptr i32, i32* %282, i64 4
  %286 = bitcast i32* %285 to <4 x i32>*
  %287 = load <4 x i32>, <4 x i32>* %286, align 4, !alias.scope !96
  %288 = bitcast i32* %281 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %288, align 4, !alias.scope !99, !noalias !96
  %289 = getelementptr i32, i32* %281, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %287, <4 x i32>* %290, align 4, !alias.scope !99, !noalias !96
  %291 = add i64 %279, 8
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !102

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i32* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i32* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i32* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i32* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i32* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i32* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i32* %297 to i64
  %306 = ptrtoint i32* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i32* %301 to i8*
  %311 = bitcast i32* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %307, i1 false) #12
  br label %887

312:                                              ; preds = %299
  %313 = load i32, i32* %302, align 4
  %314 = load i32, i32* %300, align 4
  %315 = icmp slt i32 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i32 %313, i32* %301, align 4
  %317 = getelementptr inbounds i32, i32* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i32 %314, i32* %301, align 4
  %319 = getelementptr inbounds i32, i32* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i32* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i32* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i32, i32* %301, i64 1
  %324 = icmp eq i32* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i32* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i32* [ %350, %325 ], [ %68, %65 ]
  %328 = load i32, i32* %327, align 4
  store i32 %328, i32* %326, align 4
  %329 = getelementptr inbounds i32, i32* %327, i64 1
  %330 = getelementptr inbounds i32, i32* %326, i64 1
  %331 = load i32, i32* %329, align 4
  store i32 %331, i32* %330, align 4
  %332 = getelementptr inbounds i32, i32* %327, i64 2
  %333 = getelementptr inbounds i32, i32* %326, i64 2
  %334 = load i32, i32* %332, align 4
  store i32 %334, i32* %333, align 4
  %335 = getelementptr inbounds i32, i32* %327, i64 3
  %336 = getelementptr inbounds i32, i32* %326, i64 3
  %337 = load i32, i32* %335, align 4
  store i32 %337, i32* %336, align 4
  %338 = getelementptr inbounds i32, i32* %327, i64 4
  %339 = getelementptr inbounds i32, i32* %326, i64 4
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %339, align 4
  %341 = getelementptr inbounds i32, i32* %327, i64 5
  %342 = getelementptr inbounds i32, i32* %326, i64 5
  %343 = load i32, i32* %341, align 4
  store i32 %343, i32* %342, align 4
  %344 = getelementptr inbounds i32, i32* %327, i64 6
  %345 = getelementptr inbounds i32, i32* %326, i64 6
  %346 = load i32, i32* %344, align 4
  store i32 %346, i32* %345, align 4
  %347 = getelementptr inbounds i32, i32* %327, i64 7
  %348 = getelementptr inbounds i32, i32* %326, i64 7
  %349 = load i32, i32* %347, align 4
  store i32 %349, i32* %348, align 4
  %350 = getelementptr inbounds i32, i32* %327, i64 8
  %351 = getelementptr inbounds i32, i32* %326, i64 8
  %352 = icmp eq i32* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !103

353:                                              ; preds = %196, %520, %294
  %354 = phi i32* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i32* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i32* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i32* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i32* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i32* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i32, i32* %358, i64 -1
  %363 = ptrtoint i32* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 2
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 8
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i32, i32* %358, i64 -1
  %370 = ptrtoint i32* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 2
  %373 = xor i64 %372, -1
  %374 = getelementptr i32, i32* %357, i64 %373
  %375 = getelementptr i32, i32* %358, i64 %373
  %376 = icmp ult i32* %374, %358
  %377 = icmp ult i32* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 9223372036854775800
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i32, i32* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i32, i32* %357, i64 %383
  %385 = add nsw i64 %380, -8
  %386 = lshr exact i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i32, i32* %358, i64 -1
  %393 = getelementptr i32, i32* %357, i64 -1
  %394 = getelementptr i32, i32* %358, i64 -1
  %395 = getelementptr i32, i32* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i32, i32* %392, i64 %399
  %402 = getelementptr inbounds i32, i32* %401, i64 -3
  %403 = bitcast i32* %402 to <4 x i32>*
  %404 = load <4 x i32>, <4 x i32>* %403, align 4, !alias.scope !104
  %405 = getelementptr inbounds i32, i32* %401, i64 -4
  %406 = getelementptr inbounds i32, i32* %405, i64 -3
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4, !alias.scope !104
  %409 = getelementptr inbounds i32, i32* %393, i64 %400
  %410 = getelementptr inbounds i32, i32* %409, i64 -3
  %411 = bitcast i32* %410 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %411, align 4, !alias.scope !107, !noalias !104
  %412 = getelementptr inbounds i32, i32* %409, i64 -4
  %413 = getelementptr inbounds i32, i32* %412, i64 -3
  %414 = bitcast i32* %413 to <4 x i32>*
  store <4 x i32> %408, <4 x i32>* %414, align 4, !alias.scope !107, !noalias !104
  %415 = sub nuw nsw i64 -8, %397
  %416 = sub nuw nsw i64 -8, %397
  %417 = getelementptr inbounds i32, i32* %394, i64 %415
  %418 = getelementptr inbounds i32, i32* %417, i64 -3
  %419 = bitcast i32* %418 to <4 x i32>*
  %420 = load <4 x i32>, <4 x i32>* %419, align 4, !alias.scope !104
  %421 = getelementptr inbounds i32, i32* %417, i64 -4
  %422 = getelementptr inbounds i32, i32* %421, i64 -3
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !104
  %425 = getelementptr inbounds i32, i32* %395, i64 %416
  %426 = getelementptr inbounds i32, i32* %425, i64 -3
  %427 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %427, align 4, !alias.scope !107, !noalias !104
  %428 = getelementptr inbounds i32, i32* %425, i64 -4
  %429 = getelementptr inbounds i32, i32* %428, i64 -3
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %430, align 4, !alias.scope !107, !noalias !104
  %431 = add i64 %397, 16
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !109

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -16, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i32, i32* %358, i64 -1
  %441 = getelementptr i32, i32* %357, i64 -1
  %442 = getelementptr inbounds i32, i32* %440, i64 %437
  %443 = getelementptr inbounds i32, i32* %442, i64 -3
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4, !alias.scope !104
  %446 = getelementptr inbounds i32, i32* %442, i64 -4
  %447 = getelementptr inbounds i32, i32* %446, i64 -3
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4, !alias.scope !104
  %450 = getelementptr inbounds i32, i32* %441, i64 %437
  %451 = getelementptr inbounds i32, i32* %450, i64 -3
  %452 = bitcast i32* %451 to <4 x i32>*
  store <4 x i32> %445, <4 x i32>* %452, align 4, !alias.scope !107, !noalias !104
  %453 = getelementptr inbounds i32, i32* %450, i64 -4
  %454 = getelementptr inbounds i32, i32* %453, i64 -3
  %455 = bitcast i32* %454 to <4 x i32>*
  store <4 x i32> %449, <4 x i32>* %455, align 4, !alias.scope !107, !noalias !104
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i32* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i32* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i32, i32* %459, i64 -1
  %462 = ptrtoint i32* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 2
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i32* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i32* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i32, i32* %469, i64 -1
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds i32, i32* %470, i64 -1
  store i32 %473, i32* %474, align 4
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !110

477:                                              ; preds = %468, %458
  %478 = phi i32* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i32* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 28
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i32* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i32* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i32, i32* %482, i64 -1
  %485 = load i32, i32* %484, align 4
  %486 = getelementptr inbounds i32, i32* %483, i64 -1
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds i32, i32* %482, i64 -2
  %488 = load i32, i32* %487, align 4
  %489 = getelementptr inbounds i32, i32* %483, i64 -2
  store i32 %488, i32* %489, align 4
  %490 = getelementptr inbounds i32, i32* %482, i64 -3
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds i32, i32* %483, i64 -3
  store i32 %491, i32* %492, align 4
  %493 = getelementptr inbounds i32, i32* %482, i64 -4
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds i32, i32* %483, i64 -4
  store i32 %494, i32* %495, align 4
  %496 = getelementptr inbounds i32, i32* %482, i64 -5
  %497 = load i32, i32* %496, align 4
  %498 = getelementptr inbounds i32, i32* %483, i64 -5
  store i32 %497, i32* %498, align 4
  %499 = getelementptr inbounds i32, i32* %482, i64 -6
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds i32, i32* %483, i64 -6
  store i32 %500, i32* %501, align 4
  %502 = getelementptr inbounds i32, i32* %482, i64 -7
  %503 = load i32, i32* %502, align 4
  %504 = getelementptr inbounds i32, i32* %483, i64 -7
  store i32 %503, i32* %504, align 4
  %505 = getelementptr inbounds i32, i32* %482, i64 -8
  %506 = load i32, i32* %505, align 4
  %507 = getelementptr inbounds i32, i32* %483, i64 -8
  store i32 %506, i32* %507, align 4
  %508 = icmp eq i32* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !111

509:                                              ; preds = %356
  %510 = getelementptr inbounds i32, i32* %359, i64 -1
  %511 = getelementptr inbounds i32, i32* %358, i64 -1
  %512 = load i32, i32* %511, align 4
  %513 = load i32, i32* %510, align 4
  %514 = icmp slt i32 %512, %513
  %515 = getelementptr inbounds i32, i32* %357, i64 -1
  %516 = select i1 %514, i32 %513, i32 %512
  %517 = select i1 %514, i32* %510, i32* %359
  %518 = select i1 %514, i32* %358, i32* %511
  store i32 %516, i32* %515, align 4
  %519 = icmp eq i32* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i32* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i32* [ %545, %520 ], [ %199, %196 ]
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %521, align 4
  %524 = getelementptr inbounds i32, i32* %522, i64 1
  %525 = getelementptr inbounds i32, i32* %521, i64 1
  %526 = load i32, i32* %524, align 4
  store i32 %526, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %522, i64 2
  %528 = getelementptr inbounds i32, i32* %521, i64 2
  %529 = load i32, i32* %527, align 4
  store i32 %529, i32* %528, align 4
  %530 = getelementptr inbounds i32, i32* %522, i64 3
  %531 = getelementptr inbounds i32, i32* %521, i64 3
  %532 = load i32, i32* %530, align 4
  store i32 %532, i32* %531, align 4
  %533 = getelementptr inbounds i32, i32* %522, i64 4
  %534 = getelementptr inbounds i32, i32* %521, i64 4
  %535 = load i32, i32* %533, align 4
  store i32 %535, i32* %534, align 4
  %536 = getelementptr inbounds i32, i32* %522, i64 5
  %537 = getelementptr inbounds i32, i32* %521, i64 5
  %538 = load i32, i32* %536, align 4
  store i32 %538, i32* %537, align 4
  %539 = getelementptr inbounds i32, i32* %522, i64 6
  %540 = getelementptr inbounds i32, i32* %521, i64 6
  %541 = load i32, i32* %539, align 4
  store i32 %541, i32* %540, align 4
  %542 = getelementptr inbounds i32, i32* %522, i64 7
  %543 = getelementptr inbounds i32, i32* %521, i64 7
  %544 = load i32, i32* %542, align 4
  store i32 %544, i32* %543, align 4
  %545 = getelementptr inbounds i32, i32* %522, i64 8
  %546 = getelementptr inbounds i32, i32* %521, i64 8
  %547 = icmp eq i32* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !112

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i32*
  %552 = load i32, i32* %551, align 4
  %553 = icmp slt i32 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i32, i32* %551, i64 1
  %556 = ptrtoint i32* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i32*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i32, i32* %26, i64 %563
  %565 = ptrtoint i32* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 2
  %570 = load i32, i32* %564, align 4
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i32* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i32, i32* %572, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = icmp slt i32 %570, %576
  %578 = getelementptr inbounds i32, i32* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i32* %572, i32* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i32* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i32* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 2
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i32*
  %593 = inttoptr i64 %550 to i32*
  store i32 %27, i32* %593, align 4
  store i32 %552, i32* %592, align 4
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i32, i32* %560, i64 %595
  %597 = ptrtoint i32* %596 to i64
  %598 = ptrtoint i32* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 2
  %603 = load i32, i32* %596, align 4
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i32* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i32, i32* %605, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = icmp slt i32 %609, %603
  %611 = getelementptr inbounds i32, i32* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i32* %611, i32* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i32* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i32* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 2
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i32*
  %630 = inttoptr i64 %624 to i32*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i32* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i32* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i32, i32* %629, i64 1
  %638 = icmp eq i32* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i32, i32* %629, align 4
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 2
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %631, i8* align 4 %632, i64 %641, i1 false) #12
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i32, i32* %629, i64 %642
  store i32 %640, i32* %646, align 4
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i32, i32* %26, i64 1
  %649 = icmp eq i32* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i32, i32* %630, i64 -1
  %652 = load i32, i32* %651, align 4
  %653 = ptrtoint i32* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 2
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i32, i32* %630, i64 %658
  %660 = bitcast i32* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %660, i8* align 4 %631, i64 %654, i1 false) #12
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i32* [ %659, %656 ], [ %630, %650 ]
  store i32 %652, i32* %629, align 4
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 2
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 2
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i32, i32* %629, align 4
  store i32 %27, i32* %629, align 4
  store i32 %670, i32* %26, align 4
  %671 = getelementptr inbounds i32, i32* %629, i64 1
  %672 = getelementptr inbounds i32, i32* %26, i64 1
  %673 = icmp eq i32* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i32, i32* %26, i64 -2
  %676 = bitcast i32* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 2
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 8
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i32, i32* %629, i64 2
  %685 = getelementptr i32, i32* %26, i64 -2
  %686 = bitcast i32* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 2
  %691 = getelementptr i32, i32* %684, i64 %690
  %692 = getelementptr i32, i32* %26, i64 2
  %693 = getelementptr i32, i32* %692, i64 %690
  %694 = icmp ult i32* %671, %693
  %695 = icmp ult i32* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 9223372036854775800
  %699 = getelementptr i32, i32* %672, i64 %698
  %700 = getelementptr i32, i32* %671, i64 %698
  %701 = add nsw i64 %698, -8
  %702 = lshr exact i64 %701, 3
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i32, i32* %672, i64 %709
  %712 = getelementptr i32, i32* %671, i64 %709
  %713 = bitcast i32* %711 to <4 x i32>*
  %714 = load <4 x i32>, <4 x i32>* %713, align 4, !alias.scope !113
  %715 = getelementptr i32, i32* %711, i64 4
  %716 = bitcast i32* %715 to <4 x i32>*
  %717 = load <4 x i32>, <4 x i32>* %716, align 4, !alias.scope !113
  %718 = bitcast i32* %712 to <4 x i32>*
  %719 = load <4 x i32>, <4 x i32>* %718, align 4, !alias.scope !116, !noalias !113
  %720 = getelementptr i32, i32* %712, i64 4
  %721 = bitcast i32* %720 to <4 x i32>*
  %722 = load <4 x i32>, <4 x i32>* %721, align 4, !alias.scope !116, !noalias !113
  %723 = bitcast i32* %712 to <4 x i32>*
  store <4 x i32> %714, <4 x i32>* %723, align 4, !alias.scope !116, !noalias !113
  %724 = bitcast i32* %720 to <4 x i32>*
  store <4 x i32> %717, <4 x i32>* %724, align 4, !alias.scope !116, !noalias !113
  %725 = bitcast i32* %711 to <4 x i32>*
  store <4 x i32> %719, <4 x i32>* %725, align 4, !alias.scope !113
  %726 = bitcast i32* %715 to <4 x i32>*
  store <4 x i32> %722, <4 x i32>* %726, align 4, !alias.scope !113
  %727 = or i64 %709, 8
  %728 = getelementptr i32, i32* %672, i64 %727
  %729 = getelementptr i32, i32* %671, i64 %727
  %730 = bitcast i32* %728 to <4 x i32>*
  %731 = load <4 x i32>, <4 x i32>* %730, align 4, !alias.scope !113
  %732 = getelementptr i32, i32* %728, i64 4
  %733 = bitcast i32* %732 to <4 x i32>*
  %734 = load <4 x i32>, <4 x i32>* %733, align 4, !alias.scope !113
  %735 = bitcast i32* %729 to <4 x i32>*
  %736 = load <4 x i32>, <4 x i32>* %735, align 4, !alias.scope !116, !noalias !113
  %737 = getelementptr i32, i32* %729, i64 4
  %738 = bitcast i32* %737 to <4 x i32>*
  %739 = load <4 x i32>, <4 x i32>* %738, align 4, !alias.scope !116, !noalias !113
  %740 = bitcast i32* %729 to <4 x i32>*
  store <4 x i32> %731, <4 x i32>* %740, align 4, !alias.scope !116, !noalias !113
  %741 = bitcast i32* %737 to <4 x i32>*
  store <4 x i32> %734, <4 x i32>* %741, align 4, !alias.scope !116, !noalias !113
  %742 = bitcast i32* %728 to <4 x i32>*
  store <4 x i32> %736, <4 x i32>* %742, align 4, !alias.scope !113
  %743 = bitcast i32* %732 to <4 x i32>*
  store <4 x i32> %739, <4 x i32>* %743, align 4, !alias.scope !113
  %744 = add i64 %709, 16
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !118

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i32, i32* %672, i64 %748
  %752 = getelementptr i32, i32* %671, i64 %748
  %753 = bitcast i32* %751 to <4 x i32>*
  %754 = load <4 x i32>, <4 x i32>* %753, align 4, !alias.scope !113
  %755 = getelementptr i32, i32* %751, i64 4
  %756 = bitcast i32* %755 to <4 x i32>*
  %757 = load <4 x i32>, <4 x i32>* %756, align 4, !alias.scope !113
  %758 = bitcast i32* %752 to <4 x i32>*
  %759 = load <4 x i32>, <4 x i32>* %758, align 4, !alias.scope !116, !noalias !113
  %760 = getelementptr i32, i32* %752, i64 4
  %761 = bitcast i32* %760 to <4 x i32>*
  %762 = load <4 x i32>, <4 x i32>* %761, align 4, !alias.scope !116, !noalias !113
  %763 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %763, align 4, !alias.scope !116, !noalias !113
  %764 = bitcast i32* %760 to <4 x i32>*
  store <4 x i32> %757, <4 x i32>* %764, align 4, !alias.scope !116, !noalias !113
  %765 = bitcast i32* %751 to <4 x i32>*
  store <4 x i32> %759, <4 x i32>* %765, align 4, !alias.scope !113
  %766 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %762, <4 x i32>* %766, align 4, !alias.scope !113
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i32* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i32* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i32* %771 to i64
  %773 = getelementptr i32, i32* %26, i64 -1
  %774 = ptrtoint i32* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 2
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i32* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i32* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i32, i32* %781, align 4
  %785 = load i32, i32* %782, align 4
  store i32 %784, i32* %782, align 4
  store i32 %785, i32* %781, align 4
  %786 = getelementptr inbounds i32, i32* %782, i64 1
  %787 = getelementptr inbounds i32, i32* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !119

790:                                              ; preds = %780, %769
  %791 = phi i32* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i32* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 12
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i32* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i32* [ %811, %794 ], [ %792, %790 ]
  %797 = load i32, i32* %795, align 4
  %798 = load i32, i32* %796, align 4
  store i32 %797, i32* %796, align 4
  store i32 %798, i32* %795, align 4
  %799 = getelementptr inbounds i32, i32* %796, i64 1
  %800 = getelementptr inbounds i32, i32* %795, i64 1
  %801 = load i32, i32* %800, align 4
  %802 = load i32, i32* %799, align 4
  store i32 %801, i32* %799, align 4
  store i32 %802, i32* %800, align 4
  %803 = getelementptr inbounds i32, i32* %796, i64 2
  %804 = getelementptr inbounds i32, i32* %795, i64 2
  %805 = load i32, i32* %804, align 4
  %806 = load i32, i32* %803, align 4
  store i32 %805, i32* %803, align 4
  store i32 %806, i32* %804, align 4
  %807 = getelementptr inbounds i32, i32* %796, i64 3
  %808 = getelementptr inbounds i32, i32* %795, i64 3
  %809 = load i32, i32* %808, align 4
  %810 = load i32, i32* %807, align 4
  store i32 %809, i32* %807, align 4
  store i32 %810, i32* %808, align 4
  %811 = getelementptr inbounds i32, i32* %796, i64 4
  %812 = getelementptr inbounds i32, i32* %795, i64 4
  %813 = icmp eq i32* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !120

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i32, i32* %629, i64 %815
  %823 = shl nsw i64 %815, 2
  %824 = add i64 %823, -4
  %825 = and i64 %824, 4
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i32, i32* %822, i64 -1
  %829 = load i32, i32* %828, align 4
  %830 = getelementptr inbounds i32, i32* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i32* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i32* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i32* %833 to i64
  %835 = load i32, i32* %833, align 4
  store i32 %835, i32* %832, align 4
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 2
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i32, i32* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i32, i32* %629, i64 %840
  %842 = select i1 %838, i32* %839, i32* %841
  %843 = icmp eq i32* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i32 %829, i32* %833, align 4
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i32* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i32, i32* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i32* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i32, i32* %851, i64 -1
  %853 = load i32, i32* %852, align 4
  %854 = getelementptr inbounds i32, i32* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i32* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i32* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i32* %857 to i64
  %859 = load i32, i32* %857, align 4
  store i32 %859, i32* %856, align 4
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 2
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i32, i32* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i32, i32* %629, i64 %864
  %866 = select i1 %862, i32* %863, i32* %865
  %867 = icmp eq i32* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i32 %853, i32* %857, align 4
  %869 = getelementptr inbounds i32, i32* %851, i64 -2
  %870 = load i32, i32* %869, align 4
  %871 = getelementptr inbounds i32, i32* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i32* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i32* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %560, i32* %629, i32* %873, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i32* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %873, i32* %630, i32* %15, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i32* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i32* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i32* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i32* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i32* %890 to i64
  %892 = load i32, i32* %890, align 4
  store i32 %892, i32* %889, align 4
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 2
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i32, i32* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i32, i32* %629, i64 %897
  %899 = select i1 %895, i32* %896, i32* %898
  %900 = icmp eq i32* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i32 %870, i32* %890, align 4
  %902 = icmp eq i32* %869, %629
  br i1 %902, label %848, label %850
}

declare %"class.base::SupportsUserData::Data"* @_ZN7content29GetRenderDocumentHostUserDataEPKNS_15RenderFrameHostEPKv(%"class.content::RenderFrameHost"*, i8*) local_unnamed_addr #2

declare void @_ZN7content32RemoveRenderDocumentHostUserDataEPNS_15RenderFrameHostEPKv(%"class.content::RenderFrameHost"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.1160"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.2533", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1160", %"class.std::__1::vector.1160"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.1160", %"class.std::__1::vector.1160"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.1160", %"class.std::__1::vector.1160"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !121
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !121
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !124, !noalias !121
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !124, !noalias !121
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !121
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !121
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !124, !noalias !121
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !124, !noalias !121
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !121
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !121
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !124, !noalias !121
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !124, !noalias !121
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !121
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !121
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !124, !noalias !121
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !124, !noalias !121
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !126

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !121
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !121
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !124, !noalias !121
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !124, !noalias !121
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !127

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #12
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !128

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.1160", %"class.std::__1::vector.1160"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.2533"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #12
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.1160"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.2533"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.1160"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #14
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.1165"** %165 to %"class.std::__1::__compressed_pair.1162"**
  store %"class.std::__1::__compressed_pair.1162"* %159, %"class.std::__1::__compressed_pair.1162"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.1165"** %165 to %"class.std::__1::__compressed_pair.1162"**
  store %"class.std::__1::__compressed_pair.1162"* %159, %"class.std::__1::__compressed_pair.1162"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #14
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #13
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJRKiEEEvDpOT_(%"struct.std::__1::__split_buffer.2533"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #12
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !129

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.2533"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #13
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #12
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJRKiEEEvDpOT_(%"struct.std::__1::__split_buffer.2533"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.2533", %"struct.std::__1::__split_buffer.2533"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #12
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.2533"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #14
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #13
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !130
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !130
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !133, !noalias !130
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !133, !noalias !130
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !130
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !130
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !133, !noalias !130
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !133, !noalias !130
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !130
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !130
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !133, !noalias !130
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !133, !noalias !130
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !130
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !130
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !133, !noalias !130
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !133, !noalias !130
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !135

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !130
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !130
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !133, !noalias !130
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !133, !noalias !130
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !136

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !137

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !138

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #13
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content19ManifestManagerHostEFviRK4GURLRKN5blink8ManifestEEJNS0_17UnretainedWrapperIS4_EERiEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content19ManifestManagerHostEFviRK4GURLRKN5blink8ManifestEEJNS0_17UnretainedWrapperIS4_EERiEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN7content19ManifestManagerHostEFviRK4GURLRKN5blink8ManifestEEJNS_8internal17UnretainedWrapperIS2_EERiEEENS_12OnceCallbackINSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN7content19ManifestManagerHostEFviRK4GURLRKN5blink8ManifestEEJNS_8internal17UnretainedWrapperIS2_EERiEEENS_12OnceCallbackINSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content19ManifestManagerHostEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content19ManifestManagerHostEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN7content19ManifestManagerHostEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN7content19ManifestManagerHostEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!12 = !{i8 0, i8 2}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!15 = distinct !{!15, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!16 = distinct !{!16, !17, !"_ZN4mojo15PendingReceiverIN5blink5mojom15ManifestManagerEE8PassPipeEv: argument 0"}
!17 = distinct !{!17, !"_ZN4mojo15PendingReceiverIN5blink5mojom15ManifestManagerEE8PassPipeEv"}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = !{i64 0, i64 65}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSX_IJEEEEEENS2_INS_11__hash_nodeISH_PvEENS_22__hash_node_destructorINSQ_IS14_EEEEEEmOT_DpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN4base12OnceCallbackIFvRK4GURLRKN5blink8ManifestEEEENS_14default_deleteISD_EEEEEENS_22__unordered_map_hasherIiSH_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiSH_SM_SK_Lb1EEENS_9allocatorISH_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSX_IJEEEEEENS2_INS_11__hash_nodeISH_PvEENS_22__hash_node_destructorINSQ_IS14_EEEEEEmOT_DpOT0_"}
!24 = distinct !{!24, !19}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!27 = distinct !{!27, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!30 = distinct !{!30, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!31 = distinct !{!31, !19}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !38}
!38 = !{!"llvm.loop.isvectorized", i32 1}
!39 = distinct !{!39, !19}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !19}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !38}
!48 = distinct !{!48, !19}
!49 = distinct !{!49, !19}
!50 = distinct !{!50, !38}
!51 = distinct !{!51, !19}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !38}
!58 = distinct !{!58, !19}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !38}
!65 = distinct !{!65, !19}
!66 = distinct !{!66, !19}
!67 = distinct !{!67, !38}
!68 = distinct !{!68, !38}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !38}
!75 = distinct !{!75, !19}
!76 = distinct !{!76, !19}
!77 = distinct !{!77, !38}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !38}
!84 = distinct !{!84, !19}
!85 = distinct !{!85, !19}
!86 = distinct !{!86, !38}
!87 = distinct !{!87, !19}
!88 = !{!89}
!89 = distinct !{!89, !90}
!90 = distinct !{!90, !"LVerDomain"}
!91 = !{!92}
!92 = distinct !{!92, !90}
!93 = distinct !{!93, !38}
!94 = distinct !{!94, !19}
!95 = distinct !{!95, !19}
!96 = !{!97}
!97 = distinct !{!97, !98}
!98 = distinct !{!98, !"LVerDomain"}
!99 = !{!100}
!100 = distinct !{!100, !98}
!101 = distinct !{!101, !38}
!102 = distinct !{!102, !19}
!103 = distinct !{!103, !38}
!104 = !{!105}
!105 = distinct !{!105, !106}
!106 = distinct !{!106, !"LVerDomain"}
!107 = !{!108}
!108 = distinct !{!108, !106}
!109 = distinct !{!109, !38}
!110 = distinct !{!110, !19}
!111 = distinct !{!111, !38}
!112 = distinct !{!112, !38}
!113 = !{!114}
!114 = distinct !{!114, !115}
!115 = distinct !{!115, !"LVerDomain"}
!116 = !{!117}
!117 = distinct !{!117, !115}
!118 = distinct !{!118, !38}
!119 = distinct !{!119, !19}
!120 = distinct !{!120, !38}
!121 = !{!122}
!122 = distinct !{!122, !123}
!123 = distinct !{!123, !"LVerDomain"}
!124 = !{!125}
!125 = distinct !{!125, !123}
!126 = distinct !{!126, !38}
!127 = distinct !{!127, !19}
!128 = distinct !{!128, !38}
!129 = distinct !{!129, !19}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !38}
!136 = distinct !{!136, !19}
!137 = distinct !{!137, !19}
!138 = distinct !{!138, !38}
